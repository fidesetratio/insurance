<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap>

	<cacheModel id="elions.bac.cache.references" type="LRU" readOnly="true"
		serialize="false">
		<flushInterval hours="8" />
		<property name="cache-size" value="100" />
		<flushOnExecute statement="elions.common.resetIbatisCache"/>
		<!-- <flushOnExecute statement="insert.history"/> -->
	</cacheModel>
	
	<resultMap class="java.util.HashMap" id="elions.bac.selectInformasiRegionUntukReferral.result">
		<result property="region" column="region" javaType="string" jdbcType="VARCHAR" nullValue=""/>
		<result property="lsbs_id" column="lsbs_id" javaType="int" jdbcType="NUMBER"/>
		<result property="lsdbs_number" column="lsdbs_number" javaType="int" jdbcType="NUMBER"/>
	</resultMap>
	
	<select id="elions.bac.select_simas_card" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
		  select NO_KARTU as kartu_id, 
		  	NO_KARTU as no_kartu
			from eka.mst_kartu_pas
			where flag_active = 0
			and produk = '05'
			and reg_spaj is null
			and trim(no_kartu) like '%' || trim(upper(#value#))
			order by no_kartu
	</select>
	
	<select id="elions.bac.selectSimasCardExist" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select *
		from eka.mst_kartu_pas
		where produk =#produk#
		and reg_spaj = RPAD (REPLACE (#spaj#, '.'), 11, ' ')
		and tgl_active = (select max(tgl_active) 
		                    from eka.mst_kartu_pas where produk =#produk#
		                    and reg_spaj = RPAD (REPLACE (#spaj#, '.'), 11, ' '))
	</select>
	
	<select id="elions.bac.selectNoRegPencairan" parameterClass="java.util.HashMap" resultClass="string">
		SELECT nvl(mpc_reg,'-') mpc_reg
		  FROM eka.mst_powersave_cair
		 WHERE reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ') AND mpc_urut = #mpc_urut# AND mpc_bdate = #mpc_bdate#		
	</select>
	
	<select id="elions.bac.selectBegDateSlinkPertama" parameterClass="string" resultClass="date">
		SELECT msl_bdate FROM eka.mst_slink WHERE reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ') AND msl_no = 1
	</select>
	
	<select id="elions.bac.selectJumlahBayarManfaatBulananTerakhir" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT mslb_jum_bayar, flag_proses
		  FROM eka.mst_slink_bayar
		 WHERE reg_spaj = #reg_spaj#
		   AND msl_no = #msl_no#
		   AND mslb_end_period = #msl_bdate#
		   AND flag_bulanan <![CDATA[>]]> 0 
   	</select>
   	
	<select id="elions.bac.selectPengurangManfaatBulananTerakhir" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT mslb_tambah
		  FROM eka.mst_slink_bayar
		 WHERE reg_spaj = #reg_spaj#
		   AND msl_no = #msl_no#
		   AND mslb_end_period = #msl_edate#
		   AND flag_bulanan <![CDATA[>]]> 0
		   AND flag_proses = 1
   	</select>
   	
   	<select id="elions.bac.selectDataNasabahSlink" parameterClass="string" resultClass="java.util.HashMap">
   		SELECT c.mspo_policy_no_format, d.mcl_first, g.lku_symbol, a.msl_bdate, a.msl_edate, a.msl_desc, a.msl_tu_ke, a.msl_premi, a.msl_bunga, b.msl_bdate, b.msl_desc, b.msl_premi as penarikan, ((a.msl_premi + a.msl_bunga) - b.msl_premi) as sisa_premi,
	   (e.mrc_no_ac || '- a/n ' || e.mrc_nama || ', ' || f.lsbp_nama || ' cabang : ' || e.mrc_cabang) rekening							
		  FROM eka.mst_slink a, 
		  	   (SELECT *
		          FROM eka.mst_slink
		         WHERE msl_kode IN (2, 3, 8) AND msl_aktif = 1) b,
				 eka.mst_policy c,
				 eka.mst_client_new d,
				 eka.mst_rek_client e,
				 eka.lst_bank_pusat f,
				 eka.lst_kurs g
		 WHERE a.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		   AND a.msL_kode = 5
		   AND a.reg_spaj = b.reg_spaj(+)
		   AND a.reg_spaj = c.reg_spaj
		   AND a.reg_spaj = e.reg_spaj
		   AND c.mspo_policy_holder = d.mcl_id
		   AND e.lsbp_id = f.lsbp_id
		   AND c.lku_id = g.lku_id
		   AND a.msl_tu_ke = b.msl_tu_ke(+)
   	</select>
	
	<select id="elions.bac.selectRolloverPowersaveTerakhir" parameterClass="string" resultClass="com.ekalife.elions.model.Powersave">
		SELECT su.mssur_tgl_berlaku  mpr_mature_date, ro.mpr_bayar_prm, ro.mpr_deposit, ro.mpr_interest
		  FROM eka.mst_powersave_ro ro,
		  	   eka.mst_surrender su
		 WHERE ro.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		   AND ro.reg_spaj = su.reg_spaj
		   AND mps_kode IN (2, 3, 5)
		   AND mps_deposit_date =
		                     (SELECT MAX (mps_deposit_date)
		                        FROM eka.mst_powersave_ro
		                       WHERE reg_spaj = ro.reg_spaj AND mps_kode IN (2, 3, 5))	
	</select>
	
	<select id="elions.bac.selectMprMatureDate" parameterClass="string" resultClass="date">
		SELECT ro.mpr_mature_date
		  FROM eka.mst_powersave_ro ro
		 WHERE ro.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		   AND mps_kode IN (2, 3, 5)
		   AND mps_deposit_date =
		                     (SELECT MAX (mps_deposit_date)
		                        FROM eka.mst_powersave_ro
		                       WHERE reg_spaj = ro.reg_spaj AND mps_kode IN (2, 3, 5))	
	</select>
	
	<select id="elions.bac.selectPowerSaveRoSurrender" parameterClass="string" resultClass="date">
		select mssur_tgl_berlaku 
		from eka.mst_surrender 
		where flag_ps = 1 
		  and mssur_se in(1,2,3)
		  and reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
	</select>
	
	<select id="elions.bac.selectCountPowerSaveSudahPinjaman" parameterClass="string" resultClass="int">
		select count(*)
		from eka.mst_surrender
		where reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		and flag_ps = 1
	</select>
	
	<select id="elions.bac.selectEndDatePolisEndors" parameterClass="string" resultClass="date">
		select mste_end_date
		from eka.mst_insured 
		where reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
	</select>
	

	<select id="elions.bac.selectTotalKomisiEkaSehat" parameterClass="string" resultClass="double">
		select sum(mspr_premium) 
		from eka.mst_product_insured 
		where reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ')
		and lsbs_id in (183,189,193,195,201,204,820,823,825,826,214,840,841,842,843,225,846,847)
	</select>
	
	<select id="elions.bac.hitungBunga" parameterClass="java.util.HashMap" resultClass="double">
		select EKA.PKG_PWRSAVE.hitung_bunga(#flag_bulanan#, #mgi#, #premi#, #rate#, #jumlah_hari#, #flag_powersave#) from dual
	</select>
	
	<select id="elions.bac.selectLineBusLstBisnis" parameterClass="string" resultClass="int">
		select lsbs_linebus
		from eka.lst_bisnis 
		where lsbs_id = #value#
	</select>
	
	<select id="elions.bac.getJumlahEkaSehat" parameterClass="string" resultClass="int">
		select count(lsbs_id)
		from eka.mst_product_insured
		where reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ')
		and lsbs_id in (183,189,193,195,204,820,823,825,826,838,839)
	</select>	
	
	<!-- project Smile Medical Extra (848-1~70) helpdesk [129135] //Chandra -->
	<select id="elions.bac.selectRiderMedicalExtra" parameterClass="string" resultClass="int">
		select count(lsbs_id)
		from eka.mst_product_insured
		where reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ')
		and lsbs_id = 848
	</select>
	
	<select id="elions.bac.selectCountEkaSehatAdmedikaNew" parameterClass="java.util.HashMap" resultClass="int">
		select count(lsbs_id)
		from eka.mst_product_insured
		where reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ')
		<isEqual property="flag" compareValue="0">
			and (lsbs_id in (823,825,826,832,833,183,189,193))
		</isEqual>
		<isEqual property="flag" compareValue="1">
			and (lsbs_id in (838,839))
		</isEqual>
		<isEqual property="flag" compareValue="2">
			and (lsbs_id in (823,825,826,832,833,183,189,193,838,839))
		</isEqual>
	</select>
	
	<select id="elions.bac.selectCountEkaSehatAdmedikaHCP" parameterClass="string" resultClass="int">
		select count(lsbs_id)
        from eka.mst_product_insured
        where reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ')
        and lsbs_id in (826,195,204)
	</select>

	<select id="elions.bac.selectPersenKomisiReffBii" parameterClass="string" resultClass="double">
		SELECT EKA.PERSEN_KOMISI(RPAD (REPLACE (#value#, '.'), 11, ' ')) FROM DUAL
	</select>

	<select id="elions.bac.selectPersenInsentifReffBii" parameterClass="string" resultClass="double">
		SELECT EKA.PERSEN_INSENTIF(RPAD (REPLACE (#value#, '.'), 11, ' ')) "persen_insentif" FROM DUAL
	</select>

	<select id="elions.bac.selectRateKomisiFeeBasedBancassurance" parameterClass="string" resultClass="double">
		SELECT persen
		  FROM (SELECT ROWNUM, b.nomer, b.reg_spaj, a.nm_bank, b.product, b.program,
		               DECODE (b.mgi, 0, NULL, b.mgi) AS mgi, b.kurs, b.persen
		          FROM eka.lst_jn_bank a,
		               (SELECT polis.reg_spaj, polis.reg_spaj || seno.mgi AS nomer,
		                       seno.jn_bank, seno.product, seno.program, seno.mgi,
		                       DECODE (seno.lku_id, '01', 'Rp', 'USD') AS kurs,
		                       DECODE ((SELECT persen_fee
		                                  FROM eka.lst_persen_komisi
		                                 WHERE lsbs_id = seno.lsbs_id
		                                   AND lsdbs_number = seno.lsdbs_number
		                                   AND jn_nasabah = seno.jn_nasabah
		                                   AND mgi = seno.mgi
		                                   AND mcr_flag = 1
		                                   AND lku_id = seno.lku_id
		                                   AND beg_date <![CDATA[<=]]> polis.beg_date
		                                   AND end_date <![CDATA[>=]]> polis.beg_date
		                                   AND beg_premi <![CDATA[<=]]> polis.premi
		                                   AND end_premi <![CDATA[>=]]> polis.premi
		                                   AND flag_aktif = 1
		                                   AND mgi = polis.mgi
		                                   AND lku_id = polis.lku_id
		                                   AND flag_penutup = polis.divisi),
		                               NULL, (SELECT persen_fee
		                                        FROM eka.lst_persen_cashback
		                                       WHERE lsbs_id = seno.lsbs_id
		                                         AND lsdbs_number = seno.lsdbs_number
		                                         AND jn_nasabah = seno.jn_nasabah
		                                         AND mgi = seno.mgi
		                                         AND lku_id = seno.lku_id
		                                         AND jn_bank = seno.jn_bank
		                                         AND beg_date <![CDATA[<=]]> polis.beg_date
		                                         AND end_date <![CDATA[>=]]> polis.beg_date
		                                         AND premi <![CDATA[<=]]> polis.premi
		                                         AND premi_akhir <![CDATA[>=]]> polis.premi
		                                         AND flag_aktif = 1
		                                         AND mgi = polis.mgi
		                                         AND lku_id = polis.lku_id),
		                               (SELECT persen_fee
		                                  FROM eka.lst_persen_komisi
		                                 WHERE lsbs_id = seno.lsbs_id
		                                   AND lsdbs_number = seno.lsdbs_number
		                                   AND jn_nasabah = seno.jn_nasabah
		                                   AND mgi = seno.mgi
		                                   AND mcr_flag = 1
		                                   AND lku_id = seno.lku_id
		                                   AND beg_date <![CDATA[<=]]> polis.beg_date
		                                   AND end_date <![CDATA[>=]]> polis.beg_date
		                                   AND beg_premi <![CDATA[<=]]> polis.premi
		                                   AND end_premi <![CDATA[>=]]> polis.premi
		                                   AND flag_aktif = 1
		                                   AND mgi = polis.mgi
		                                   AND lku_id = polis.lku_id
		                                   AND flag_penutup = polis.divisi)
		                              ) AS persen
		                  FROM (SELECT DISTINCT a.lsbs_id, a.lsdbs_number,
		                                        a.jn_nasabah, a.mgi, a.lku_id,
		                                        a.jenis_bank AS jn_bank,
		                                        b.lsdbs_name AS product,
		                                        nm_group AS program
		                                   FROM eka.lst_persen_komisi a,
		                                        eka.lst_det_bisnis b,
		                                        eka.lst_jn_nasabah c
		                                  WHERE a.lsbs_id = b.lsbs_id
		                                    AND a.lsdbs_number = b.lsdbs_number
		                                    AND a.jn_nasabah = c.jn_nasabah
		                                    AND a.flag_aktif = 1
		                        UNION ALL
		                        SELECT DISTINCT a.lsbs_id, a.lsdbs_number,
		                                        0 AS jn_nasabah, a.mgi, a.lku_id,
		                                        a.jn_bank, b.lsdbs_name AS product,
		                                        nm_group AS program
		                                   FROM eka.lst_persen_cashback a,
		                                        eka.lst_det_bisnis b,
		                                        eka.lst_jn_nasabah c
		                                  WHERE a.lsbs_id = b.lsbs_id
		                                    AND a.lsdbs_number = b.lsdbs_number
		                                    AND c.jn_nasabah = 0
		                                    AND a.flag_aktif = 1) seno,
		                       (SELECT a.reg_spaj, b.lsbs_id, b.lsdbs_number,
		                               DECODE (c.lsbs_id,
		                                       164, (SELECT SUM (msl_premi)
		                                               FROM eka.mst_slink
		                                              WHERE reg_spaj = a.reg_spaj
		                                                AND msl_new = 1
		                                                AND msl_kode = 5),
		                                       b.mspr_premium
		                                      ) AS premi,
		                               DECODE
		                                  (c.lsbs_id,
		                                   164, DECODE
		                                           ((SELECT msl_bdate
		                                               FROM eka.mst_slink
		                                              WHERE reg_spaj = a.reg_spaj
		                                                AND msl_new = 1
	                                                AND msl_kode = 5
	                                                AND (   msl_tu_ke IS NULL
	                                                     OR msl_tu_ke = 0
	                                                    )
	                                                AND msl_spaj_lama IS NOT NULL),
	                                            NULL, b.mspr_beg_date,
	                                            (SELECT msl_bdate
	                                               FROM eka.mst_slink
	                                              WHERE reg_spaj = a.reg_spaj
	                                                AND msl_new = 1
	                                                AND msl_kode = 5
	                                                AND (   msl_tu_ke IS NULL
	                                                     OR msl_tu_ke = 0
	                                                    )
	                                                AND msl_spaj_lama IS NOT NULL)
	                                           ),
	                                   b.mspr_beg_date
	                                  ) AS beg_date,
	                               DECODE (e.mgi, NULL, 0, e.mgi) AS mgi,
	                               a.lku_id,
	                               DECODE (d.nm_group,
	                                       NULL, 'NONE',
	                                       d.nm_group
	                                      ) AS program,
	                               DECODE
	                                  (c.lsbs_id,
	                                   120, DECODE (d.divisi, NULL, 0, d.divisi),
	                                   DECODE
	                                      (c.lsbs_id,
	                                       127, DECODE (d.divisi,
	                                                    NULL, 0,
	                                                    d.divisi
	                                                   ),
	                                       DECODE
	                                          (c.lsbs_id,
	                                           128, DECODE (d.divisi,
	                                                        NULL, 0,
	                                                        d.divisi
	                                                       ),
	                                           DECODE
	                                              (c.lsbs_id,
	                                               129, DECODE (d.divisi,
	                                                            NULL, 0,
	                                                            d.divisi
	                                                           ),
	                                               DECODE
	                                                   (c.lsbs_id,
	                                                    134, DECODE (d.divisi,
	                                                                 NULL, 0,
	                                                                 d.divisi
	                                                                ),
	                                                    DECODE (c.lsbs_id,
	                                                            166, DECODE
	                                                                    (d.divisi,
	                                                                     NULL, 0,
	                                                                     d.divisi
	                                                                    ),
	                                                            0
	                                                           )
	                                                   )
	                                              )
	                                          )
	                                      )
	                                  ) AS divisi
	                          FROM eka.mst_policy a,
	                               eka.mst_product_insured b,
	                               eka.lst_det_bisnis c,
	                               (SELECT c.mns_kd_nasabah, b.divisi, d.nm_group
	                                  FROM eka.lst_referrer_bii a,
	                                       eka.lst_jab_ref_bii b,
	                                       eka.mst_nasabah c,
	                                       eka.lst_jn_nasabah d
	                                 WHERE a.level_id = b.level_id
	                                   AND c.referrer_id = a.referrer_id
	                                   AND c.jn_nasabah = d.jn_nasabah) d,
	                               (SELECT reg_spaj,
	                                       DECODE (msl_mgi,
                                               NULL, 0,
                                               msl_mgi
                                              ) AS mgi
                                  FROM eka.mst_slink
                                 WHERE msl_kode = 5
                                   AND msl_new = 1
                                   AND msl_tu_ke = 0
                                   AND reg_spaj = #value#
                                UNION ALL
                                SELECT reg_spaj,
                                       DECODE (mpr_jangka_invest,
                                               NULL, 0,
                                               mpr_jangka_invest
                                              ) AS mgi
                                  FROM eka.mst_powersave_ro
                                 WHERE mps_kode = 5 AND reg_spaj =
                                                                 #value#
								UNION ALL
								SELECT reg_spaj,
                                       DECODE (mss_mgi,
                                               NULL, 0,
                                               mss_mgi
                                              ) AS mgi
                                  FROM eka.mst_ssave
                                 WHERE mss_kode = 5 AND reg_spaj =
                                                                  #value#) e
                         WHERE a.reg_spaj = b.reg_spaj
                           AND a.reg_spaj = e.reg_spaj(+)
                           AND b.lsbs_id = c.lsbs_id
                           AND b.lsdbs_number = c.lsdbs_number
                           AND a.mspo_plan_provider = d.mns_kd_nasabah(+)
                           AND c.jn_bank IS NOT NULL
                           AND b.lsbs_id <![CDATA[<]]> 300
                           AND a.reg_spaj = #value#) polis
                 WHERE seno.lsbs_id = polis.lsbs_id
                   AND seno.lsdbs_number = polis.lsdbs_number
                   AND seno.lku_id = polis.lku_id
                   AND seno.program = polis.program) b,
               (SELECT DECODE (a.reg_spaj || a.mgi,
                               NULL, #value# || 0,
                               a.reg_spaj || a.mgi
                              ) AS nomer
                  FROM (SELECT reg_spaj,
                               DECODE (msl_mgi, NULL, 0, msl_mgi) AS mgi
                          FROM eka.mst_slink
                         WHERE msl_kode = 5
                           AND msl_new = 1
                           AND msl_tu_ke = 0
                           AND reg_spaj = #value#
                        UNION ALL
                        SELECT reg_spaj,
                               DECODE (mpr_jangka_invest,
                                       NULL, 0,
                                       mpr_jangka_invest
                                      ) AS mgi
                          FROM eka.mst_powersave_ro
                         WHERE mps_kode = 5 AND reg_spaj = #value#
						UNION ALL
								SELECT reg_spaj,
                                       DECODE (mss_mgi,
                                               NULL, 0,
                                               mss_mgi
                                              ) AS mgi
                                  FROM eka.mst_ssave
                                 WHERE mss_kode = 5 AND reg_spaj =#value#) a,
                       eka.mst_policy b
                 WHERE a.reg_spaj(+) = b.reg_spaj AND b.reg_spaj =
                                                                  #value#) c,
               (SELECT a.reg_spaj, b.jenis AS jn_bank
                  FROM eka.mst_reff_bii a, eka.lst_cabang_bii b
                 WHERE a.lcb_no = b.lcb_no
                   AND a.level_id = 4
                   AND a.no_urut = 1
                   AND a.reg_spaj = #value#
                UNION ALL
                SELECT reg_spaj, 1 AS jn_bank
                  FROM eka.mst_policy
                 WHERE reg_spaj = #value#
                   AND mspo_plan_provider IS NOT NULL) d
         WHERE b.nomer = c.nomer
           AND a.jn_bank = b.jn_bank
           AND b.jn_bank = d.jn_bank
           AND b.persen IS NOT NULL)
	</select>

	<select id="elions.bac.selectCountPowersaveCair" parameterClass="string" resultClass="int">
		select count(*) from eka.mst_powersave_cair where reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
	</select>
	
	<select id="elions.bac.selectCountPremiSlink" parameterClass="string" resultClass="int">
		select count(*) from eka.mst_slink where reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ') and msl_kode = 5
	</select>

	<select id="elions.bac.selectSisaPremiStableLink" parameterClass="string" resultClass="java.util.HashMap">
		SELECT reg_spaj, msl_tu_ke FROM eka.mst_slink WHERE msl_kode = 5 AND reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ')
		MINUS
		SELECT reg_spaj, msl_tu_ke FROM eka.mst_slink WHERE msl_kode = 8 AND reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ')
		MINUS
		SELECT reg_spaj, mpc_tu_ke msl_tu_ke FROM eka.mst_powersave_cair WHERE reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ')
	</select>

	<select id="elions.bac.selectProduksiKe" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT *
		  FROM eka.mst_production
		 WHERE reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ')
		   AND mspro_prod_ke = #prod_ke#
	</select>

	<select id="elions.bac.selectStableLinkUntukPerhitunganBP" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Powersave">
		SELECT   *
		    FROM eka.mst_slink sl
		   WHERE reg_spaj = RPAD (#reg_spaj#, 11, ' ') AND msl_tu_ke = #msl_tu_ke# AND msl_kode IN (2, 3, 5)
		ORDER BY msl_no
	</select>

	<select id="elions.bac.selectDataAgenValidasiWorksite" parameterClass="string" resultClass="java.util.HashMap">
		select lca_id, lsle_id from eka.mst_agent where msag_id = #value#
	</select>

	<select id="elions.bac.selectDataVirtualAccount" parameterClass="string" resultClass="java.util.HashMap">
		SELECT p.lscb_id, a.mste_flag_cc, b.lsbs_id, b.lsdbs_number, p.lku_id, p.lca_id
		  FROM eka.mst_policy p, eka.mst_insured a, eka.mst_product_insured b
		 WHERE p.reg_spaj = RPAD (#value#, 11, ' ')
		   AND p.reg_spaj = a.reg_spaj
		   AND a.reg_spaj = b.reg_spaj
		   AND b.lsbs_id <![CDATA[<]]> 300	
	</select>

	<select id="elions.bac.selectRateBankSinarmas" resultClass="java.util.HashMap">
        SELECT   lpr.lpr_begdate, lpr_enddate,
                 DECODE (lku_id, '01', 'Rupiah', 'Dolar') kurs,
                 b.lpr_name produk,
                 DECODE (lpr_jenis,
                         10, '03 Bulan',
                         20, '06 Bulan',
                         30, '12 Bulan',
                         40, '24 Bulan',
                         50, '36 Bulan',
                         60, '01 Bulan'
                        ) mgi,
                 lpr_dari, lpr_akhir, lpr_rate,
                 (CASE WHEN (SYSDATE BETWEEN lpr_begdate AND lpr_enddate) THEN 1 ELSE 2 END) tipe
            FROM eka.lst_pwrsave_rate lpr, eka.lst_pwrsave_flag b
           WHERE lpr.lpr_flag IN (2, 5, 13, 31, 41) AND ((SYSDATE BETWEEN lpr_begdate AND lpr_enddate) OR lpr_begdate > SYSDATE)
             AND lpr.lpr_flag = b.lpr_flag
        ORDER BY 1, 2, 3, 4, 5, 6
	</select>

	<select id="elions.bac.selectCountRateBankSinarmas" parameterClass="java.util.HashMap" resultClass="int">
		SELECT   count(*)
		  FROM   eka.lst_pwrsave_flag a, eka.lst_pwrsave_rate b
		 WHERE       a.lpr_flag = b.lpr_flag
		         AND a.lsbs_id = #lsbs_id#
		         AND a.lsdbs_number = #lsdbs_number#
		         AND a.flag_bulanan = #flag_bulanan#
		         AND (TO_DATE(#begdate#, 'dd/mm/yyyy') BETWEEN b.lpr_begdate AND b.lpr_enddate)
		         AND b.lku_id = #lku_id#
		         AND b.lpr_jenis = decode(#mgi#, 3, 10, 6, 20, 12, 30, 24, 40, 36, 50, 1, 60, 0)
	</select>

	<select id="elions.bac.SelectTotalRiderPowersave" parameterClass="string" resultClass="string">
		SELECT mpr_rider_total from eka.mst_powersave_ro where reg_spaj = #reg_spaj#
	</select>

	<select id="elions.bac.selectValidasiSebelumEditDate" parameterClass="string" resultClass="java.util.HashMap">
		SELECT pol.reg_spaj, pol.mspo_policy_no_format, pol.lspd_id, pol.lssp_id,
		       ins.lssa_id, lspd.lspd_position, lssp.lssp_status, lssa.status_accept, ins.mste_beg_date
		  FROM eka.mst_policy pol,
		       eka.mst_insured ins,
		       eka.lst_document_position lspd,
		       eka.lst_policy_status lssp,
		       eka.lst_status_accept lssa
		 WHERE pol.lstb_id = 1
		   AND pol.reg_spaj = RPAD (#value#, 11, ' ')
		   AND pol.reg_spaj = ins.reg_spaj
		   AND pol.lspd_id = lspd.lspd_id
		   AND pol.lssp_id = lssp.lssp_id
		   AND ins.lssa_id = lssa.lssa_id		
	</select>

	<select id="elions.bac.select.mst_ssave" parameterClass="string" resultClass="com.ekalife.elions.model.StableSave">
		SELECT reg_spaj, mss_no, mss_kode, mss_bdate, mss_edate, mss_tu_ke,
		       mss_ro_date, mss_paid_date, mss_ro, mss_mgi, mss_rate, mss_premi,
		       mss_bunga, mss_tax, mss_surr_charge, mss_hari, mss_jn_rumus,
		       mss_tahun_ke, mss_premi_ke, mss_note, mss_bulanan, mss_bayar_bunga,
		       mss_flag_rate, mss_rate_date, mss_input_date, mss_trans_date,
		       mss_confirm_date, mss_prod_date, mss_print, mss_print_date,
		       mss_flag_comm, mss_cash, mspin_no_pinjaman, mss_flag_cb, mss_surat_pdf,
		       mss_proses_bsm, flag_bulanan, mss_aktif, lus_id
		  FROM eka.mst_ssave
		 WHERE reg_spaj = RPAD (#value#, 11, ' ') AND mss_kode = 5
	</select>

	<select id="elions.bac.selectCancelBanyakPolis" resultClass="string">
		SELECT pol.reg_spaj
		  FROM eka.mst_policy pol
		 WHERE pol.lstb_id = 1
		   AND pol.lspd_id = 1
		   AND pol.lssp_id <![CDATA[<>]]> 8
		   AND pol.mspo_spaj_date <![CDATA[<]]> '1 oct 2008'
	</select>
	
	<select id="elions.bac.selectPosisiUlink" parameterClass="string" resultClass="int">
		select mu_lspd_id from eka.mst_ulink where reg_spaj = RPAD (#value#, 11, ' ') and mu_ke = 1
	</select>
	
	<select id="elions.bac.selectCabangBiiPolis" parameterClass="string" resultClass="string">
		SELECT (c.nama_cabang) cabang
		  FROM eka.mst_policy a, eka.mst_reff_bii b, eka.lst_cabang_bii c
		 WHERE a.reg_spaj = RPAD (#value#, 11, ' ')
		   AND a.reg_spaj = b.reg_spaj
		   AND b.lcb_no = c.lcb_no
		   and b.level_id = 4 and b.no_urut = (select max(no_urut) from eka.mst_reff_bii where level_id = 4 and reg_spaj = a.reg_spaj)
	</select>
	
	<select id="elions.bac.selectInputTopupBaruStableLink" parameterClass="string" resultClass="com.ekalife.elions.model.InputTopup">
		SELECT lji.lji_invest, ('Premi Top Up Ke-' || (s.msl_tu_ke + 1)) msl_desc,
		       s.msl_tu_ke + 1 msl_tu_ke, k.lku_symbol, TRUNC (SYSDATE) msl_bdate,
		       s.lji_id, s.msl_mgi, p.lku_id, (SELECT MAX (msl_no) + 1
		                                         FROM eka.mst_slink
		                                        WHERE reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')) msl_no,
		       TRUNC (SYSDATE) msl_trans_date, 1 flag_new, p.reg_spaj, 0 flag_rate, nvl(s.flag_bulanan, 0) flag_bulanan
		FROM   eka.mst_slink s,
		       eka.mst_policy p,
		       eka.lst_jenis_invest lji,
		       eka.lst_kurs k
		 WHERE s.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		   AND s.reg_spaj = p.reg_spaj
		   AND s.lji_id = lji.lji_id
		   AND p.lku_id = k.lku_id
		   AND s.msl_kode = 5
		   AND s.msl_tu_ke = (SELECT MAX (msl_tu_ke)
		                        FROM eka.mst_slink
		                       WHERE reg_spaj = s.reg_spaj AND msl_kode = 5)
	</select>
	
	<select id="elions.bac.selectInputTopupBaruPowerSave" parameterClass="string" resultClass="com.ekalife.elions.model.InputTopup">
		SELECT ('Premi Top Up Ke-' || (s.mps_tu_ke + 1)) msl_desc,
               s.mps_tu_ke + 1 msl_tu_ke, k.lku_symbol, TRUNC (SYSDATE) msl_bdate,
               s.mps_mgi msl_mgi, p.lku_id, (SELECT MAX (mps_no) + 1
                                                 FROM eka.mst_psave
                                                WHERE reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')) msl_no,
               TRUNC (SYSDATE) msl_trans_date, 1 flag_new, p.reg_spaj, 0 flag_rate, nvl(s.flag_bulanan, 0) flag_bulanan
        FROM   eka.mst_psave s,
               eka.mst_policy p,
               eka.lst_kurs k
         WHERE s.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
           AND s.reg_spaj = p.reg_spaj
           AND p.lku_id = k.lku_id
           AND s.mps_kode = 5
           AND s.mps_tu_ke = (SELECT MAX (mps_tu_ke)
                                FROM eka.mst_psave
                               WHERE reg_spaj = s.reg_spaj AND mps_kode = 5)
	</select>
	
	<select id="elions.bac.selectEntryTransStableLink" parameterClass="string" resultClass="com.ekalife.elions.model.InputTopup">
		SELECT mp.lku_id, mp.mspo_policy_no, mp.reg_spaj, mi.mste_beg_date,
		       mi.mste_end_date, mpi.mspr_tsi, mpi.mspr_premium, eka.f_lsdbs(mpi.reg_spaj, mpi.lsbs_id, mpi.lsdbs_number) lsdbs_name,
		       mp.lssp_id, mpi.lsbs_id, mpi.lsdbs_number, mc.mcl_first, mp.lscb_id,
		       mp.mspo_pay_period, mi.mste_age, mp.mspo_next_bill, mi.lssa_id, lk.lku_symbol
		  FROM eka.mst_policy mp,
		       eka.mst_insured mi,
		       eka.mst_product_insured mpi,
		       eka.mst_client_new mc,
		       eka.lst_det_bisnis ldb,
		       eka.lst_kurs lk
		 WHERE mp.reg_spaj = mi.reg_spaj
		   AND mpi.reg_spaj = mi.reg_spaj
		   AND mpi.mste_insured_no = mi.mste_insured_no
		   AND mp.mspo_policy_holder = mc.mcl_id
		   AND ldb.lsbs_id = mpi.lsbs_id
		   AND ldb.lsdbs_number = mpi.lsdbs_number
		   AND mp.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		   AND mpi.lsbs_id <![CDATA[<]]> 300
		   AND mp.lku_id = lk.lku_id		
	</select>
	
	<select id="elions.bac.selectEntryTopupStableLink" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.InputTopup">
		SELECT   ms.reg_spaj, ms.msl_no, ms.lji_id, ms.msl_kode, ms.msl_ro, ms.no_reg,
		         ms.tarik_bunga, ms.msl_posisi, ms.msl_bdate, ms.msl_edate,
		         ms.msl_premi, ms.msl_rate, ms.msl_mgi, ms.msl_bunga, ms.msl_tax,
		         ms.msl_tgl_nab, ms.msl_nab, ms.msl_unit, ms.msl_saldo_unit,
		         ms.msl_tarik_pertama, ms.msl_bp_rate, ms.msl_tgl_nab_bp,
		         ms.msl_nab_bp, ms.msl_nilai_polis, ms.msl_bp, ms.msl_bp_pt,
		         ms.msl_up, ms.msl_hari, ms.msl_next_date, ms.msl_bayar_bunga,
		         ms.msl_bayar_bp, ms.msl_input_date, ms.msl_trans_date,
		         ms.msl_proses_date, ms.msl_confirm_date, ms.msl_prod_date,
		         ms.flag_rate, ms.msl_tahun_ke, ms.msl_premi_ke, ms.msl_note,
		         ms.lus_id, ms.msl_flag_print, ms.msl_print_date, ms.msl_aktif,
		         ms.msl_tu_ke, ms.msl_flag_up, ms.msl_jn_rumus, ms.msl_flag_comm,
		         ms.msl_print, ms.no_reg_ref, ms.msl_bayar_tarik, ms.msl_desc,
		         ms.msl_rate_date, ms.msl_new, ms.msl_surr_charge, ms.msl_letter_date,
		         ms.msl_paid_date, ms.msl_cash, ms.flag_bulanan, ms.flag_special,
		         mp.mspo_policy_no, 0 flag_new, lji.lji_invest, lk.lku_symbol, lk.lku_id, ms.no_trx
		    FROM eka.mst_policy mp,
		         eka.mst_slink ms,
		         eka.lst_jenis_invest lji,
		         eka.lst_kurs lk
		   WHERE mp.reg_spaj = ms.reg_spaj
		     AND mp.reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ')
		     AND ms.msl_posisi = #msl_posisi#
		     AND ms.msl_no <![CDATA[<>]]> 1
		     AND ms.lji_id = lji.lji_id
		     AND mp.lku_id = lk.lku_id
		ORDER BY ms.msl_tu_ke
	</select>
	
	<select id="elions.bac.selectEntryTopupPowerSave" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.InputTopup">
		SELECT   ms.reg_spaj, ms.mps_no msl_no, ms.mps_kode msl_kode, ms.mps_ro msl_ro, ms.mps_no_reg msl_no_reg,
                 ms.mps_posisi msl_posisi, ms.mps_bdate msl_bdate, ms.mps_edate msl_edate,
                 ms.mps_premi msl_premi, ms.mps_rate msl_rate, ms.mps_mgi msl_mgi, ms.mps_bunga msl_bunga, ms.mps_tax msl_tax,
                 ms.mps_hari msl_hari, ms.mps_ro_date msl_next_date, ms.mps_bayar_bunga msl_bayar_bunga,
                 ms.mps_input_date msl_input_date, ms.mps_trans_date msl_trans_date,
                 ms.mps_confirm_date msl_confirm_date, ms.mps_prod_date msl_prod_date,
                 ms.mps_flag_rate flag_rate, ms.mps_tahun_ke msl_tahun_ke, ms.mps_premi_ke msl_premi_ke, ms.mps_note msl_note,
                 ms.lus_id, ms.mps_print_date msl_print_date, ms.mps_aktif msl_aktif,
                 ms.mps_tu_ke msl_tu_ke, ms.mps_jn_rumus msl_jn_rumus, ms.mps_flag_comm msl_flag_comm,
                 ms.mps_print msl_print, ms.mps_no_reg_ref no_reg_ref, ms.mps_bayar_tarik msl_bayar_tarik, ms.mps_desc msl_desc,
                 ms.mps_rate_date msl_rate_date, ms.mps_new msl_new, ms.mps_surr_charge msl_surr_charge, 
                 ms.mps_paid_date msl_paid_date, ms.mps_cash msl_cash, ms.flag_bulanan, 
                 mp.mspo_policy_no, 0 flag_new, lk.lku_symbol, lk.lku_id, ms.mps_no_trx no_trx
            FROM eka.mst_policy mp,
                 eka.mst_psave ms,
                 eka.lst_kurs lk
		   WHERE mp.reg_spaj = ms.reg_spaj
		     AND mp.reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ')
		     AND ms.mps_posisi = #msl_posisi#
		     AND ms.mps_no <![CDATA[<>]]> 1
		     AND mp.lku_id = lk.lku_id
		ORDER BY ms.mps_tu_ke
	</select>
	
	<select id="elions.bac.selectBlanko" parameterClass="string" resultClass="string">
		select mspo_no_blanko from eka.mst_policy where reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
	</select>
	
	<select id="elions.bac.selectKonfirmasiTransferBac" parameterClass="string" resultClass="java.util.HashMap">
		SELECT pol.reg_spaj, pol.mspo_no_blanko, ins.mste_beg_date, ins.mste_end_date,
		       prod.lsbs_id, prod.lsdbs_number, prod.mspr_tsi, prod.mspr_premium,
		       pp.mcl_first pemegang, pp.mspe_date_birth pemegang_lahir, pol.mspo_age pemegang_umur, 
			   tt.mcl_first tertanggung, tt.mspe_date_birth tertanggung_lahir, ins.mste_age tertanggung_umur,
			   ku.lku_symbol, 
			   (case when sl.flag_bulanan=1 and prod.lsbs_id=164 then (ldb.lsdbs_name || ' - MANFAAT BULANAN') 
			   		 when sl.flag_bulanan=3 and prod.lsbs_id=164 then (ldb.lsdbs_name || ' - MANFAAT TRIWULANAN') 
			   		 when sl.flag_bulanan=6 and prod.lsbs_id=164 then (ldb.lsdbs_name || ' - MANFAAT SEMESTERAN') 
			   		 when sl.flag_bulanan=12 and prod.lsbs_id=164 then (ldb.lsdbs_name || ' - MANFAAT TAHUNAN') 
			   		 when sl.flag_bulanan=0 and prod.lsbs_id=164 then (ldb.lsdbs_name || ' - BUKAN MANFAAT BULANAN') 
					 else eka.f_lsdbs(pol.reg_spaj, prod.lsbs_id, prod.lsdbs_number) end) lsdbs_name,
		       NVL (pow.mps_deposit_date, sl.msl_bdate) bdate,
		       NVL (pow.mps_batas_date, sl.msl_edate) edate,
		       NVL (pow.mps_roll_over, sl.msl_ro) ro,
		       NVL (pow.mps_jangka_inv, sl.msl_mgi) mgi,
		       NVL (pow.mps_rate, sl.msl_rate) rate,
		       NVL (pow.mps_prm_deposit, sl.premi) deposit,
		       NVL (pow.mps_prm_interest, sl.bunga) bunga,
			   sl.flag_bulanan
		  FROM eka.mst_policy pol,
		       eka.mst_insured ins,
		       eka.mst_product_insured prod,
		       eka.mst_client_new pp,
		       eka.mst_client_new tt,
			   eka.lst_kurs ku,
			   eka.lst_det_bisnis ldb,
		       eka.mst_powersave_proses pow,
		       (SELECT   s.reg_spaj, s.msl_ro, s.msl_bdate, s.msl_edate, s.msl_rate, s.msl_mgi,
		                 SUM (s.msl_premi) premi, SUM (sb.mslb_bunga) bunga, s.flag_bulanan
		            FROM eka.mst_slink s, eka.mst_slink_bayar sb
		           WHERE s.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
				   AND s.reg_spaj = sb.reg_spaj
				   AND s.msl_no = sb.msl_no
				   AND s.lji_id = sb.lji_id
				   AND s.msl_new = 1
				   AND sb.mslb_beg_period =(SELECT MIN (mslb_beg_period)
								             FROM eka.mst_slink_bayar
								            WHERE reg_spaj = sb.reg_spaj
								              AND msl_no = sb.msl_no
								              AND lji_id = sb.lji_id)
		        GROUP BY s.reg_spaj, s.msl_ro, s.msl_bdate, s.msl_edate, s.msl_rate, s.msl_mgi,s.flag_bulanan) sl
		 WHERE pol.reg_spaj = ins.reg_spaj
		   AND pol.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		   AND ins.mste_insured_no = prod.mste_insured_no
		   AND ins.reg_spaj = prod.reg_spaj
		   AND prod.lsbs_id <![CDATA[<]]> 300
		   AND pol.mspo_policy_holder = pp.mcl_id
		   AND ins.mste_insured = tt.mcl_id
		   AND pol.lku_id = ku.lku_id
		   AND prod.lsbs_id = ldb.lsbs_id
		   AND prod.lsdbs_number = ldb.lsdbs_number
		   AND pol.reg_spaj = pow.reg_spaj(+)
		   AND pow.mps_kode(+) = 5
		   AND pol.reg_spaj = sl.reg_spaj(+)   	
	</select>
	
	<select id="elions.bac.selectReportMaturity" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Maturity">
		SELECT   pp.mcl_first pemegang,
		         tt.mcl_first tertanggung,
				 pol.mspo_policy_no_format, pol.reg_spaj,
				 NVL (wilayah.nama_cabang, 'Lainnya') wilayah,
				 cabang_induk.nama_cabang cabang_induk,
				 cabang.nama_cabang,
				 pol.lku_id, kurs.lku_symbol,
		         NVL (pol.mspo_nasabah_dcif, '-') mspo_nasabah_dcif,
		         orang.lus_login_name,
		         eka.f_lsbs(pol.reg_spaj, prod_ins.lsbs_id) lsbs_name, (case 
		               when det_bisnis.lsbs_id = 142 and det_bisnis.lsdbs_number = 2 then 'SIMAS PRIMA'
					   when det_bisnis.lsbs_id = 175 and det_bisnis.lsdbs_number = 2 then 'SIMAS PRIMA SYARIAH'
					   when det_bisnis.lsbs_id = 142 and det_bisnis.lsdbs_number = 9 then 'DANAMAS PRIMA'
					   when det_bisnis.lsbs_id = 158 and det_bisnis.lsdbs_number = 6 then 'SIMAS PRIMA BULANAN' 
		               when det_bisnis.lsbs_id = 158 and det_bisnis.lsdbs_number = 14 then 'DANAMAS PRIMA BULANAN' 
		               else eka.f_lsdbs(pol.reg_spaj, prod_ins.lsbs_id, prod_ins.lsdbs_number) end) lsdbs_name,	
		         prod_ins.mspr_premium, prod_ins.mspr_tsi, psave.mpr_jangka_invest,
		         psave.mpr_rate, psave.mpr_deposit, psave.mpr_interest,
		         (psave.mpr_deposit + psave.mpr_interest) hasil_mgi,
		         pol.mspo_ins_period, pol.mspo_date_print, prod_ins.mspr_beg_date,
		         ins.mste_tgl_aksep,
				 nvl(sur.mssur_tgl_klaim, pin.mspin_tgl_keluar) tgl_cair,
				 psave.mps_deposit_date tgl_penempatan, psave.mpr_mature_date tgl_jatuhtempo
		    FROM eka.mst_policy pol,
		         eka.mst_insured ins,
		         eka.mst_product_insured prod_ins,
		         eka.mst_powersave_ro psave,
				 (select * from eka.mst_pinjaman where flag_ps = 1) pin,
				 (select * from eka.mst_surrender where flag_ps = 1) sur,
		         eka.mst_reff_bii reff,
		         eka.mst_client_new pp,
		         eka.mst_client_new tt,
		         eka.lst_user orang,
		         eka.lst_cabang_bii cabang,
		         eka.lst_cabang_bii cabang_induk,
		         eka.lst_cabang_bii wilayah,
		         eka.lst_det_bisnis det_bisnis,
		         eka.lst_bisnis bisnis,
		         eka.lst_kurs kurs
		   WHERE pol.reg_spaj = ins.reg_spaj
		     AND ins.reg_spaj = prod_ins.reg_spaj
		     AND ins.mste_insured_no = prod_ins.mste_insured_no
		     AND ((prod_ins.lsbs_id = 142 AND prod_ins.lsdbs_number = 9) OR (prod_ins.lsbs_id = 158 AND prod_ins.lsdbs_number = 14))
		     AND pol.reg_spaj = psave.reg_spaj
		     AND psave.mps_kode = 5
			 AND pol.lspd_id <![CDATA[<>]]> 95
			 AND pol.reg_spaj = pin.reg_spaj (+)
			 AND pol.reg_spaj = sur.reg_spaj (+)
		     AND pol.reg_spaj = reff.reg_spaj
		     AND pol.mspo_policy_holder = pp.mcl_id
		     AND ins.mste_insured = tt.mcl_id
		     AND pol.lus_id = orang.lus_id
		     AND cabang.jenis = 3
		     AND reff.lcb_no = cabang.lcb_no
		     AND cabang.head_no = cabang_induk.lcb_no(+)
		     AND cabang.wil_no = wilayah.lcb_no(+)
		     AND prod_ins.lsbs_id = det_bisnis.lsbs_id
		     AND prod_ins.lsdbs_number = det_bisnis.lsdbs_number
		     AND det_bisnis.lsbs_id = bisnis.lsbs_id
		     AND pol.lku_id = kurs.lku_id
			 AND psave.$pilih$ between to_number(#awal#) and to_number(#akhir#)
			 AND psave.mps_deposit_date between TO_DATE(#startDate#, 'dd/MM/yyyy') and (TO_DATE(#endDate#, 'dd/MM/yyyy')) 
			 and reff.level_id = 4 and reff.no_urut = (select max(no_urut) from eka.mst_reff_bii where level_id = 4 and reg_spaj = reff.reg_spaj)
		ORDER BY 1,2,3,4,5,6
	</select>
	
	<select id="elions.bac.selectBPRatePerTransaksiSlink" parameterClass="java.util.HashMap" resultClass="int">
		SELECT msl_bp_rate FROM eka.mst_slink WHERE reg_spaj = #reg_spaj# AND msl_tu_ke = #msl_tu_ke# AND msl_aktif = 1
	</select>
	
	<select id="elions.bac.selectReportCair" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.PowersaveCair">
		SELECT mpc.mpc_tu_ke, mp.reg_spaj, mp.mspo_policy_no_format, nvl(mp.mspo_nasabah_dcif,'-') mspo_nasabah_dcif, 
			   mpi.lsbs_id, mpi.lsdbs_number, eka.f_lsbs(mp.reg_spaj, mpi.lsbs_id) lsbs_name, eka.f_lsdbs(mp.reg_spaj, mpi.lsbs_id, mpi.lsdbs_number) lsdbs_name, 
			   lcb.nama_cabang, lcb2.nama_cabang cabang_induk, lcb3.nama_cabang wilayah, 
			   lk.lku_symbol, mc1.mcl_first pemegang, mc2.mcl_first tertanggung,
			   mpc.mpc_bdate, mpc.mpc_edate, mpc.mpc_cair, mpc.mpc_rate, 
			   decode(mpc.mpc_ro, 1, 'ROLLOVER ALL', 2, 'ROLLOVER PREMI', 3, 'AUTOBREAK') ro, 
			   mpc.mpc_premi, mpc.mpc_bunga, mpc.mpc_hari, mpc.mpc_tambah, mpc.mpc_kurang, 
			   decode(mpc.flag_posisi, 0, 'BATAL INPUT', 1, 'INPUT (CABANG)', 2, 'APPROVAL KANTOR PUSAT (PAK ARDY)', 'PROSES AJS') posisi, 
			   mpc.tgl_input, lu.lus_login_name, mpc.mpc_note, mpc.mpc_noncash, nvl(mpc.mpc_bp, 0) mpc_bp, mpc.mpc_tgl_nab_bp,
			   (select msl_nab from eka.mst_slink where reg_spaj = mp.reg_spaj and msl_no = mpc.mpc_urut) mpc_nab,
			   mpc.mpc_nab_bp,
			   (select mpr_hari from eka.mst_powersave_ro where reg_spaj = mp.reg_spaj and mps_deposit_date = mpc_bdate
			   union select msl_hari from eka.mst_slink where reg_spaj = mp.reg_spaj and msl_no = mpc.mpc_urut) jml_hari, mp.lssp_id,
			   sur.reg_spaj spaj_sur,
			   pin.reg_spaj spaj_pinj,
			   pin.flag_ps flag_ps_pinj, sur.flag_ps flag_ps_sur
		  FROM eka.mst_policy mp, 
			   eka.mst_client mc1,
		       eka.mst_insured mi,
			   eka.mst_client mc2,
		       eka.mst_product_insured mpi,
		       eka.mst_reff_bii mrb,
		       eka.mst_powersave_cair mpc,
		       eka.mst_pinjaman pin,
		       eka.mst_surrender sur,
		       eka.lst_det_bisnis ldb,
		       eka.lst_bisnis lb,
		       eka.lst_cabang_bii lcb,
		       eka.lst_cabang_bii lcb2,
		       eka.lst_cabang_bii lcb3,
		       eka.lst_kurs lk,
			   eka.lst_user lu
		 WHERE mp.mspo_policy_holder = mc1.mcl_id
		   AND mp.reg_spaj = mi.reg_spaj
		   AND mi.mste_insured = mc2.mcl_id
		   AND mi.reg_spaj = mpi.reg_spaj
		   AND mpc.reg_spaj = pin.reg_spaj(+)
		   AND mpc.mpc_cair = pin.mspin_beg_date(+)
		   AND mpc.reg_spaj = sur.reg_spaj(+)
		   AND mpc.mpc_cair = sur.mssur_tgl_bayar(+)
		   AND mi.mste_insured_no = mpi.mste_insured_no
		   AND mpi.lsbs_id <![CDATA[<]]> 300
		   AND mp.reg_spaj = mrb.reg_spaj
		   AND mp.reg_spaj = mpc.reg_spaj
		   AND mpi.lsbs_id = ldb.lsbs_id
		   AND mpi.lsdbs_number = ldb.lsdbs_number
		   AND ldb.lsbs_id = lb.lsbs_id
		   AND mrb.lcb_no = lcb.lcb_no
		   AND lcb.jenis = #jenis#
		   AND lcb.head_no = lcb2.lcb_no(+)
		   AND lcb.wil_no = lcb3.lcb_no(+)
		   AND mp.lku_id = lk.lku_id
		   AND mpc.lus_id_input = lu.lus_id 
		   AND mpc.flag_posisi >= 3
		   AND mrb.level_id = 4 and mrb.no_urut = (select max(no_urut) from eka.mst_reff_bii where level_id = 4 and reg_spaj = mrb.reg_spaj)
		   AND mpc.mpc_noncash = #cnc#
			<isNotEmpty property="produk">
				<isEqual property="produk" compareValue="ALL">
					<isEqual property="jenis" compareValue="2">
						AND ( 
							(mpi.lsbs_id = 142 AND mpi.lsdbs_number = 2) OR
							(mpi.lsbs_id = 158 AND mpi.lsdbs_number = 6) OR
						    (mpi.lsbs_id = 175 AND mpi.lsdbs_number = 2) OR
							(mpi.lsbs_id = 164 AND mpi.lsdbs_number = 2)
						) 
					</isEqual>
					<isEqual property="jenis" compareValue="3">
						AND ( 
							(mpi.lsbs_id = 142 AND mpi.lsdbs_number = 9) OR
							(mpi.lsbs_id = 158 AND mpi.lsdbs_number = 14)
						) 
					</isEqual>
				</isEqual>
				<isNotEqual property="produk" compareValue="ALL">
					AND mpi.lsbs_id = TO_NUMBER (SUBSTR (#produk#, 1, 3))
					AND mpi.lsdbs_number = TO_NUMBER (SUBSTR (#produk#, 5)) 
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="cabang">
				<isNotEqual property="cabang" compareValue="ALL">
					AND mrb.lcb_no = RPAD (REPLACE (#cabang#, '.'), 5, ' ') 
				</isNotEqual>
			</isNotEmpty>	   
			<isNotEmpty property="tanggal">
				AND mpc.$tanggal$ between TO_DATE(#startDate#, 'dd/MM/yyyy') and (TO_DATE(#endDate#, 'dd/MM/yyyy'))  
			</isNotEmpty>
		ORDER BY lcb3.nama_cabang, lcb2.nama_cabang, lcb.NAMA_CABANG, mp.mspo_policy_no_format	
	</select>
	
	<select id="elions.bac.selectReportCairSLinkNew" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.PowersaveCair">
	SELECT reg_spaj, mspo_policy_no_format, mspo_nasabah_dcif, lsbs_id, lsdbs_number, lsbs_name, lsdbs_name, nama_cabang, cabang_induk, wilayah,
       lku_symbol, pemegang, tertanggung, mpc_bdate, mpc_edate, mpc_cair, mpc_cair, mpc_rate, ro, SUM(mpc_premi) as mpc_premi, SUM(mpc_bunga) as mpc_bunga, sum(mpc_tambah) as mpc_tambah, mpc_kurang,  posisi, tgl_input, lus_login_name, mpc_note, mpc_noncash, mpc_bp, mpc_tgl_nab_bp, mpc_nab, mpc_nab_bp, jml_hari, lssp_id, spaj_sur, 
       spaj_pinj, flag_ps_pinj, flag_ps_sur, mpc_hari
FROM (
    SELECT mpc.mpc_tu_ke, 
           mp.reg_spaj, 
           mp.mspo_policy_no_format, 
           nvl(mp.mspo_nasabah_dcif,'-') mspo_nasabah_dcif, 
           mpi.lsbs_id, 
           mpi.lsdbs_number, 
           eka.f_lsbs(mp.reg_spaj, mpi.lsbs_id) lsbs_name, 
           eka.f_lsdbs(mp.reg_spaj, mpi.lsbs_id, mpi.lsdbs_number) lsdbs_name,
           lcb.nama_cabang, 
           lcb2.nama_cabang cabang_induk, 
           lcb3.nama_cabang wilayah, 
           lk.lku_symbol, 
           mc1.mcl_first pemegang, 
           mc2.mcl_first tertanggung, 
           mpc.mpc_bdate, 
           mpc.mpc_edate, 
           mpc.mpc_cair, 
           mpc.mpc_rate, 
           decode(mpc.mpc_ro, 1, 'ROLLOVER ALL', 2, 'ROLLOVER PREMI', 3, 'AUTOBREAK') ro, 
           mpc.mpc_premi, 
           mpc.mpc_bunga,
           mpc.mpc_hari, 
           mpc.mpc_tambah, 
           mpc.mpc_kurang,
           decode(mpc.flag_posisi, 0, 'BATAL INPUT', 1, 'INPUT (CABANG)', 2,'APPROVAL KANTOR PUSAT (PAK ARDY)', 'PROSES AJS') posisi,
           mpc.tgl_input, 
           lu.lus_login_name, 
           mpc.mpc_note, 
           mpc.mpc_noncash, 
           nvl(mpc.mpc_bp, 0) mpc_bp, 
           mpc.mpc_tgl_nab_bp,       
           ( select msl_nab
               from eka.mst_slink
              where reg_spaj = mp.reg_spaj
                and msl_no = mpc.mpc_urut) mpc_nab,
           mpc.mpc_nab_bp,       
           (select mpr_hari
              from eka.mst_powersave_ro
             where reg_spaj = mp.reg_spaj
               and mps_deposit_date = mpc_bdate
             union
            select msl_hari
              from eka.mst_slink
             where reg_spaj = mp.reg_spaj
               and msl_no = mpc.mpc_urut) jml_hari,
           mp.lssp_id,
           sur.reg_spaj spaj_sur, 
           pin.reg_spaj spaj_pinj, 
           pin.flag_ps flag_ps_pinj,
           sur.flag_ps flag_ps_sur
      FROM eka.mst_policy mp, 
           eka.mst_client mc1, 
           eka.mst_insured mi,
           eka.mst_client mc2,
           eka.mst_product_insured mpi,
           eka.mst_reff_bii mrb,
           eka.mst_powersave_cair mpc,
           eka.mst_pinjaman pin,
           eka.mst_surrender sur,
           eka.lst_det_bisnis ldb,
           eka.lst_bisnis lb,
           eka.lst_cabang_bii lcb,
           eka.lst_cabang_bii lcb2,
           eka.lst_cabang_bii lcb3,
           eka.lst_kurs lk,
           eka.lst_user lu
     WHERE mp.mspo_policy_holder = mc1.mcl_id
       AND mp.reg_spaj = mi.reg_spaj
       AND mi.mste_insured = mc2.mcl_id
       AND mi.reg_spaj = mpi.reg_spaj
       AND mpc.reg_spaj = pin.reg_spaj(+)
       AND mpc.mpc_cair = pin.mspin_beg_date(+)
       AND mpc.reg_spaj = sur.reg_spaj(+)
       AND mpc.mpc_cair = sur.mssur_tgl_bayar(+)
       AND mi.mste_insured_no = mpi.mste_insured_no
       AND mpi.lsbs_id <![CDATA[<]]> 300
       AND mp.reg_spaj = mrb.reg_spaj
       AND mp.reg_spaj = mpc.reg_spaj
       AND mpi.lsbs_id = ldb.lsbs_id
       AND mpi.lsdbs_number = ldb.lsdbs_number
       AND ldb.lsbs_id = lb.lsbs_id
       AND mrb.lcb_no = lcb.lcb_no
       AND lcb.jenis = #jenis#
       AND lcb.head_no = lcb2.lcb_no(+)
       AND lcb.wil_no = lcb3.lcb_no(+)
       AND mp.lku_id = lk.lku_id
       AND mpc.lus_id_input = lu.lus_id
       AND mpc.flag_posisi >= 3
       AND mrb.level_id = 4
       and mrb.no_urut = ( select max(no_urut)
                             from eka.mst_reff_bii
                            where level_id = 4
                              and reg_spaj = mrb.reg_spaj)
       AND mpc.mpc_noncash = #cnc#
			<isNotEmpty property="produk">
				<isEqual property="produk" compareValue="ALL">
					<isEqual property="jenis" compareValue="2">
						AND ( 
							(mpi.lsbs_id = 142 AND mpi.lsdbs_number = 2) OR
							(mpi.lsbs_id = 158 AND mpi.lsdbs_number = 6) OR
						    (mpi.lsbs_id = 175 AND mpi.lsdbs_number = 2) OR
							(mpi.lsbs_id = 164 AND mpi.lsdbs_number = 2)
						) 
					</isEqual>
					<isEqual property="jenis" compareValue="3">
						AND ( 
							(mpi.lsbs_id = 142 AND mpi.lsdbs_number = 9) OR
							(mpi.lsbs_id = 158 AND mpi.lsdbs_number = 14)
						) 
					</isEqual>
				</isEqual>
				<isNotEqual property="produk" compareValue="ALL">
					AND mpi.lsbs_id = TO_NUMBER (SUBSTR (#produk#, 1, 3))
					AND mpi.lsdbs_number = TO_NUMBER (SUBSTR (#produk#, 5)) 
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="cabang">
				<isNotEqual property="cabang" compareValue="ALL">
					AND mrb.lcb_no = RPAD (REPLACE (#cabang#, '.'), 5, ' ') 
				</isNotEqual>
			</isNotEmpty>	   
			<isNotEmpty property="tanggal">
				AND mpc.$tanggal$ between TO_DATE(#startDate#, 'dd/MM/yyyy') and (TO_DATE(#endDate#, 'dd/MM/yyyy'))  
			</isNotEmpty>
		 ORDER BY lcb3.nama_cabang, lcb2.nama_cabang, lcb.NAMA_CABANG, mp.mspo_policy_no_format )
			GROUP BY reg_spaj, mspo_policy_no_format, mspo_nasabah_dcif, lsbs_id, lsdbs_number, lsbs_name, lsdbs_name, nama_cabang, cabang_induk, wilayah,
	       lku_symbol, pemegang, tertanggung, mpc_bdate, mpc_edate, mpc_cair, mpc_cair, mpc_rate, ro, mpc_kurang, 
	       posisi, tgl_input, lus_login_name, mpc_note, mpc_noncash, mpc_bp, mpc_tgl_nab_bp, mpc_nab, mpc_nab_bp, jml_hari, lssp_id, spaj_sur, 
	       spaj_pinj, flag_ps_pinj, flag_ps_sur,mpc_hari
    </select>
	
	<select id="elions.bac.selectDaftarCair" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.PowersaveCair">
		SELECT cab.nama_cabang, cair.mpc_urut, pol.reg_spaj,
		       client.mcl_first pemegang, pol.mspo_policy_no_format, cair.mpc_bdate,
		       cair.mpc_edate, cair.mpc_premi, cair.mpc_bunga, cair.mpc_hari,
		       cair.mpc_tambah, cair.mpc_kurang, cair.mpc_cair, cair.mpc_ro,
		       cair.mpc_rate, cair.mpc_bp, cair.tgl_input, cair.lus_id_input,
		       lus.lus_full_name, kurs.lku_symbol, cair.flag_posisi, kurs.lku_id,
		       eka.workdays (TRUNC (cair.tgl_input), cair.mpc_cair) - 1 hari_kerja,
		       eka.workdays (TRUNC (sysdate), cair.mpc_cair) - 1  selisih_hari,
		       cair.mpc_noncash,
		       (CASE
		           WHEN cair.mpc_edate <![CDATA[<=]]> TRUNC (SYSDATE)
		              THEN 'ffccff'
		           ELSE ''
		        END) warna, cair.tgl_proses, eka.f_lsdbs(prod.reg_spaj, prod.lsbs_id, prod.lsdbs_number)lsdbs_name, nvl(cair.mpc_tu_ke, 0) mpc_tu_ke
		  FROM eka.mst_policy pol,
		       eka.mst_insured ins,
		       eka.mst_product_insured prod,
		       eka.mst_powersave_cair cair,
		       eka.mst_reff_bii reff,
		       eka.lst_cabang_bii cab,
		       eka.mst_client_new client,
		       eka.lst_user lus,
		       eka.lst_kurs kurs,
		       eka.lst_det_bisnis db
		 WHERE pol.lstb_id = 1
		   AND pol.reg_spaj = ins.reg_spaj
		   AND ins.mste_insured_no = prod.mste_insured_no
		   AND ins.reg_spaj = prod.reg_spaj
		   AND prod.lsbs_id <![CDATA[<]]> 300
		   AND pol.reg_spaj = cair.reg_spaj
		   AND cair.flag_posisi = #posisi#
		   AND pol.reg_spaj = reff.reg_spaj
		   AND reff.level_id = 4
		   AND reff.no_urut = (SELECT MAX (no_urut)
		                         FROM eka.mst_reff_bii
		                        WHERE level_id = 4 AND reg_spaj = reff.reg_spaj)
		<isNotEqual property="cab_bank" compareValue="SSS">
			AND (reff.lcb_no = RPAD (REPLACE (#cab_bank#, '.'), 5, ' ') or lus.cab_bank = RPAD (REPLACE (#cab_bank#, '.'), 5, ' '))
		</isNotEqual>			 
		   AND reff.lcb_no = cab.lcb_no
		   AND cab.jenis = #jenis#
		   AND pol.mspo_policy_holder = client.mcl_id
		   AND cair.lus_id_input = lus.lus_id
		   AND pol.lku_id = kurs.lku_id
		   AND prod.lsbs_id = db.lsbs_id
		   AND prod.lsdbs_number = db.lsdbs_number
	</select>
	<!--
		SELECT   d.nama_cabang, a.mpc_urut, b.reg_spaj, g.mcl_first pemegang,b.mspo_policy_no_format, h.mpr_jangka_invest mgi, a.mpc_bdate,
		         a.mpc_edate, a.mpc_premi, a.mpc_bunga, a.mpc_hari, a.mpc_tambah, a.mpc_kurang,
		         a.mpc_cair, a.mpc_ro, a.mpc_rate, a.tgl_input, a.lus_id_input,
		         e.lus_full_name, f.lku_symbol, a.flag_posisi, f.lku_id,
		         eka.workdays (TRUNC (a.tgl_input), a.mpc_cair)-1 hari_kerja, a.mpc_noncash,
		         (case when a.mpc_edate <![CDATA[<=]]> trunc(sysdate) then 'ffccff' else '' end) warna, a.tgl_proses
		    FROM eka.mst_powersave_cair a,
		         eka.mst_policy b,
		         eka.mst_reff_bii c,
				 eka.mst_client_new g,
				 (select mpr_jangka_invest,reg_spaj,mps_deposit_date from eka.mst_powersave_ro) h,
		         eka.lst_cabang_bii d,
		         eka.lst_user e,
				 eka.lst_kurs f
		   WHERE a.flag_posisi = #posisi#
		     AND a.reg_spaj = b.reg_spaj
		     AND b.reg_spaj = c.reg_spaj
			 AND c.reg_spaj = h.reg_spaj
			 AND b.mspo_policy_holder = g.mcl_id
			 AND h.mps_deposit_date = (SELECT MAX (mps_deposit_date) FROM eka.mst_powersave_ro WHERE reg_spaj = a.reg_spaj)
		     AND c.level_id = 4
		     AND c.lcb_no = d.lcb_no
		     AND d.jenis = #jenis#
		     AND a.lus_id_input = e.lus_id
			 AND b.lku_id = f.lku_id
			 and c.level_id = 4 and c.no_urut = (select max(no_urut) from eka.mst_reff_bii where level_id = 4 and reg_spaj = c.reg_spaj)
		<isNotEqual property="cab_bank" compareValue="SSS">
			AND c.lcb_no = RPAD (REPLACE (#cab_bank#, '.'), 5, ' ')
		</isNotEqual>			 
		ORDER BY d.nama_cabang, b.mspo_policy_no_format		
	-->
	
	<select id="elions.bac.selectPosisiPowersaveCair" parameterClass="java.util.HashMap" resultClass="int">
		SELECT flag_posisi
		  FROM eka.mst_powersave_cair
		 WHERE reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ') AND mpc_urut = #mpc_urut# AND mpc_bdate = #mpc_bdate#
	</select>
	
	<select id="elions.bac.selectNonCashPowersaveCair" parameterClass="java.util.HashMap" resultClass="int">
		SELECT mpc_noncash
		  FROM eka.mst_powersave_cair
		 WHERE reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ') AND mpc_urut = #mpc_urut# AND mpc_bdate = #mpc_bdate#
	</select>
	
	<select id="elions.bac.selectValidasiPowersaveCair" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(*)
		  FROM eka.mst_powersave_cair
		 WHERE reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ') AND mpc_urut = #mpc_urut# AND mpc_bdate = #mpc_bdate#
		   AND flag_posisi > 0
	</select>
	
	<select id="elions.bac.selectValidasiHapusPowersaveCair" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(*)
		  FROM eka.mst_powersave_cair
		 WHERE reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ') AND mpc_urut = #mpc_urut# AND mpc_bdate = #mpc_bdate#
		   AND flag_posisi > 0 AND flag_proses = 1
	</select>
	
	<select id="elions.bac.selectRolloverData" parameterClass="string" resultClass="com.ekalife.elions.model.PowersaveCair">
		SELECT pol.lku_id, pol.lssp_id, ins.lssa_id, pol.lspd_id, pol.reg_spaj, pol.mspo_policy_no_format, prod.lsbs_id,
		       prod.lsdbs_number, eka.f_lsbs(pol.reg_spaj, prod.lsbs_id) lsbs_name, eka.f_lsdbs(pol.reg_spaj, prod.lsbs_id, prod.lsdbs_number) lsdbs_name, ins.mste_beg_date,
		       ins.mste_end_date, lk.lku_symbol, prod.mspr_premium, prod.mspr_tsi,
		       c1.mcl_first pemegang, c2.mcl_first tertanggung, lps.lssp_status,
			   lbp.lsbp_nama, mrc.mrc_cabang, mrc.mrc_kota, mrc.mrc_nama, mrc.mrc_no_ac
		  FROM eka.mst_policy pol,
		       eka.mst_insured ins,
		       eka.mst_product_insured prod,
		       eka.lst_det_bisnis ldb,
		       eka.lst_bisnis lb,
		       eka.lst_kurs lk,
		       eka.mst_client_new c1,
		       eka.mst_client_new c2,
			   eka.lst_policy_status lps,
			   eka.mst_rek_client mrc,
			   eka.lst_bank_pusat lbp
		 WHERE pol.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		   AND pol.reg_spaj = ins.reg_spaj
		   AND ins.mste_insured_no = prod.mste_insured_no
		   AND ins.reg_spaj = prod.reg_spaj
		   AND prod.lsbs_id <![CDATA[<]]> 300
		   AND prod.lsbs_id = ldb.lsbs_id
		   AND prod.lsdbs_number = ldb.lsdbs_number
		   AND ldb.lsbs_id = lb.lsbs_id
		   AND pol.lku_id = lk.lku_id
		   AND pol.mspo_policy_holder = c1.mcl_id
		   AND ins.mste_insured = c2.mcl_id
		   AND pol.lssp_id = lps.lssp_id
		   AND pol.reg_spaj = mrc.reg_spaj
		   AND mrc.lsbp_id = lbp.lsbp_id
	</select>
	
	<select id="elions.bac.selectSelisihBatasDatePowerSave" parameterClass="com.ekalife.elions.model.PowersaveCair" resultClass="int">
		SELECT (eka.add_workdays(mps_batas_date, -7) - trunc(sysdate)) selisih
		  FROM eka.mst_powersave_proses
		 WHERE reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ')
		   AND mps_kode = #mps_kode#
		   AND mps_deposit_date = #mpc_bdate#
	</select>
	
	<select id="elions.bac.selectSelisihBatasDateStableLink" parameterClass="com.ekalife.elions.model.PowersaveCair" resultClass="int">
		SELECT (eka.add_workdays(msl_edate, -7) - trunc(sysdate)) selisih
		  FROM eka.mst_slink
		 WHERE reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ')
		   AND msl_kode = #mps_kode#
		   AND msl_bdate = #mpc_bdate#
	</select>
	
	<select id="elions.bac.selectRolloverPowersaveNormal" parameterClass="string" resultClass="com.ekalife.elions.model.PowersaveCair">
		SELECT eka.workdays(trunc(sysdate), mpp.mps_batas_date-1) selisih_hari,
               pro.reg_spaj, 1 mpc_urut, pro.mpr_jangka_invest mgi, pro.mpr_rate mpc_rate, pro.mpr_deposit mpc_premi,
               pro.mpr_interest mpc_bunga, 0 mpc_bp, pro.mpr_jns_ro mpc_ro, pro.mpr_bayar_prm,
               pro.mps_deposit_date mpc_bdate, mpp.mps_batas_date-1 mpc_edate,
               eka.add_workdays (mpp.mps_batas_date-1, 1) mpc_cair,
               (eka.add_workdays (mpp.mps_batas_date-1, 1) - (mpp.mps_batas_date-1 + 1)) mpc_hari,
               ((eka.add_workdays (mpp.mps_batas_date-1, 1) - (mpp.mps_batas_date-1 + 1))/365 * pro.mpr_rate/100 * pro.mpr_deposit) mpc_tambah,
               (SELECT mpb_tambah FROM eka.mst_prosave_bayar WHERE reg_spaj = pro.reg_spaj AND mpb_beg_period = pro.mps_deposit_date) mpc_kurang,
               (pro.mpr_interest + (eka.add_workdays (mpp.mps_batas_date-1, 1) - (mpp.mps_batas_date-1 + 1))/365 * pro.mpr_rate/100 * pro.mpr_deposit) total_bunga,
               0 mpc_ktp, 0 mpc_spt, 0 mpc_sph, 0 mpc_polis, 0 mpc_formrek, pro.mps_kode, 1 mpc_noncash, pro.mpr_flag_cb,
               0 mpc_tu_ke, 0 flag_bulanan, null msl_posisi, 1 msl_new, msbi_tahun_ke, msbi_premi_ke
		  FROM eka.mst_powersave_ro pro,
		  	   eka.mst_powersave_proses mpp
		 WHERE pro.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		   AND pro.reg_spaj = mpp.reg_spaj
		   AND pro.mps_kode = mpp.mps_kode
		   AND pro.mps_deposit_date = mpp.mps_deposit_date
		   AND pro.mps_kode IN (2, 3, 5, 7)
		   AND pro.mps_deposit_date = (SELECT MAX (mps_deposit_date) FROM eka.mst_powersave_ro WHERE reg_spaj = pro.reg_spaj AND mps_kode IN (2, 3, 5, 7))
	</select>
	<!--
		   AND pro.mps_deposit_date = (SELECT MAX (mps_deposit_date) FROM eka.mst_powersave_ro WHERE reg_spaj = pro.reg_spaj)	 
	-->
	
		<select id="elions.bac.selectRolloverPowersavePeriodeLibur" parameterClass="string" resultClass="com.ekalife.elions.model.PowersaveCair">
		SELECT eka.workdays(trunc(sysdate), mpp.mps_batas_date-1) selisih_hari,
               pro.reg_spaj, 1 mpc_urut, pro.mpr_jangka_invest mgi, pro.mpr_rate mpc_rate, pro.mpr_deposit mpc_premi,
               pro.mpr_interest mpc_bunga, 0 mpc_bp, pro.mpr_jns_ro mpc_ro, pro.mpr_bayar_prm,
               pro.mps_deposit_date mpc_bdate, mpp.mps_batas_date-1 mpc_edate,
               eka.add_workdays_temp (mpp.mps_batas_date-1, 1) mpc_cair,
               (eka.add_workdays_temp (mpp.mps_batas_date-1, 1) - (mpp.mps_batas_date-1 + 1)) mpc_hari,
               ((eka.add_workdays_temp (mpp.mps_batas_date-1, 1) - (mpp.mps_batas_date-1 + 1))/365 * pro.mpr_rate/100 * pro.mpr_deposit) mpc_tambah,
               (SELECT mpb_tambah FROM eka.mst_prosave_bayar WHERE reg_spaj = pro.reg_spaj AND mpb_beg_period = pro.mps_deposit_date) mpc_kurang,
               (pro.mpr_interest + (eka.add_workdays_temp (mpp.mps_batas_date-1, 1) - (mpp.mps_batas_date-1 + 1))/365 * pro.mpr_rate/100 * pro.mpr_deposit) total_bunga,
               0 mpc_ktp, 0 mpc_spt, 0 mpc_sph, 0 mpc_polis, 0 mpc_formrek, pro.mps_kode, 1 mpc_noncash, pro.mpr_flag_cb,
               0 mpc_tu_ke, 0 flag_bulanan, null msl_posisi, 1 msl_new, msbi_tahun_ke, msbi_premi_ke
		  FROM eka.mst_powersave_ro pro,
		  	   eka.mst_powersave_proses mpp
		 WHERE pro.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		   AND pro.reg_spaj = mpp.reg_spaj
		   AND pro.mps_kode = mpp.mps_kode
		   AND pro.mps_deposit_date = mpp.mps_deposit_date
		   AND pro.mps_kode IN (2, 3, 5, 7)
		   AND pro.mps_deposit_date = (SELECT MAX (mps_deposit_date) FROM eka.mst_powersave_ro WHERE reg_spaj = pro.reg_spaj AND mps_kode IN (2, 3, 5, 7))
	</select>	

	<select id="elions.bac.selectRolloverPowersaveSusulan" parameterClass="string" resultClass="com.ekalife.elions.model.PowersaveCair">
		SELECT eka.workdays(trunc(sysdate), pro.mpr_mature_date) selisih_hari,
			   pro.reg_spaj, 1 mpc_urut, pro.mpr_jangka_invest mgi, pro.mpr_rate mpc_rate, pro.mpr_deposit mpc_premi,
		       pro.mpr_interest mpc_bunga, 0 mpc_bp, pro.mpr_jns_ro mpc_ro, pro.mpr_bayar_prm,
		       pro.mps_deposit_date mpc_bdate, pro.mpr_mature_date mpc_edate,
		       eka.add_workdays (trunc(sysdate), 1) mpc_cair,
		       (eka.add_workdays (mpr_mature_date, 1) - (mpr_mature_date + 1)) mpc_hari,
		       ((eka.add_workdays (mpr_mature_date, 1) - (mpr_mature_date + 1))/365 * pro.mpr_rate/100 * pro.mpr_deposit) mpc_tambah,
			   (SELECT mpb_tambah FROM eka.mst_prosave_bayar WHERE reg_spaj = pro.reg_spaj AND mpb_beg_period = pro.mps_deposit_date) mpc_kurang,
		       (pro.mpr_interest + (eka.add_workdays (mpr_mature_date, 1) - (mpr_mature_date + 1))/365 * pro.mpr_rate/100 * pro.mpr_deposit) total_bunga,
		       0 mpc_ktp, 0 mpc_spt, 0 mpc_sph, 0 mpc_polis, 0 mpc_formrek, pro.mps_kode, 1 mpc_noncash, pro.mpr_flag_cb,
		       0 mpc_tu_ke, null msl_posisi, 1 msl_new, msbi_tahun_ke, msbi_premi_ke
		  FROM eka.mst_powersave_ro pro
		 WHERE pro.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		   AND pro.mps_kode IN (2, 3, 5, 7)
		   AND pro.mpr_mature_date = (SELECT MAX (mpr_mature_date) FROM eka.mst_powersave_ro WHERE reg_spaj = pro.reg_spaj AND mps_kode IN (2, 3, 5, 7) AND mpr_mature_date <![CDATA[<]]> trunc(sysdate))
	</select>
	
	<select id="elions.bac.selectRolloverStableLinkNormal" parameterClass="string" resultClass="com.ekalife.elions.model.PowersaveCair">
		SELECT eka.workdays(trunc(sysdate), sl.msl_edate) selisih_hari,
			   sl.reg_spaj, sl.msl_no mpc_urut, sl.msl_mgi mgi, sl.msl_rate mpc_rate, sl.msl_premi mpc_premi,
		       msl_bunga mpc_bunga, 0 mpc_bp, sl.msl_ro mpc_ro, sl.msl_bayar_bunga mpr_bayar_prm,
		       sl.msl_bdate mpc_bdate, sl.msl_edate mpc_edate,
		       eka.add_workdays (sl.msl_edate, 1) mpc_cair,
		       (eka.add_workdays (sl.msl_edate, 1) - (sl.msl_edate + 1)) mpc_hari,
		       ((eka.add_workdays (sl.msl_edate, 1) - (sl.msl_edate + 1))/365 * sl.msl_rate/100 * sl.msl_premi) mpc_tambah,
			   (
                   SELECT mslb_tambah - nvl(msl_bp, 0)
                   FROM eka.mst_slink_bayar a, eka.mst_slink_salah b
                   WHERE a.reg_spaj = sl.reg_spaj 
                   AND a.mslb_end_period = sl.msl_edate 
                   AND a.mslb_tu_ke = sl.msl_tu_ke
                   AND a.reg_spaj = b.reg_spaj(+)
                   AND a.msl_no = b.msl_no_bayar(+)
                   AND a.mslb_desc = 'Bunga'
			   ) mpc_kurang,
		       (sl.msl_bunga + (eka.add_workdays (sl.msl_edate, 1) - (sl.msl_edate + 1))/365 * sl.msl_rate/100 * sl.msl_premi) total_bunga,
		       0 mpc_ktp, 0 mpc_spt, 0 mpc_sph, 0 mpc_polis, 0 mpc_formrek, sl.msl_kode mps_kode, 1 mpc_noncash, sl.msl_flag_cb mpr_flag_cb,
		       sl.msl_no, nvl(sl.msl_tu_ke, 0) mpc_tu_ke, sl.msl_tgl_nab_bp mpc_tgl_nab_bp, sl.msl_nab_bp mpc_nab_bp, sl.msl_nilai_polis mpc_nilai_polis, sl.msl_bp mpc_bp, sl.msl_bp_pt mpc_bp_pt,
		       sl.lji_id, nvl(sl.flag_bulanan, 0) flag_bulanan, sl.msl_posisi, sl.msl_new, msl_tahun_ke msbi_tahun_ke, msl_premi_ke msbi_premi_ke
		  FROM eka.mst_slink sl
		 WHERE sl.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		   AND sl.msl_kode IN (2, 3, 5, 7)
		   AND sl.msl_aktif = 1
	  ORDER BY sl.msl_tu_ke
	</select>
	
	<select id="elions.bac.selectGetKontrakList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT path 
		  FROM eka.mst_history_upload 
		 WHERE status = TRIM(#status#) 
		   AND temp_filename LIKE (TRIM ('%' || #fileName# || '%'))		
	</select>
	
	<select id="elions.bac.selectReportSimasCardDistribution" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select a.reg_spaj, a.mspo_policy_no, b.no_kartu, c.mcl_first nama_pp, d.tgl_input, a.mspo_date_print, e.lus_full_name user_input, f.lca_nama
			from eka.mst_policy a,
			     eka.mst_kartu_pas b,
			     eka.mst_client_new c,
			     eka.mst_simcard d,
			     eka.lst_user e,
			     eka.lst_cabang f
			where a.reg_spaj = b.reg_spaj
			and a.reg_spaj = d.reg_spaj
			and a.mspo_policy_holder = c.mcl_id
			and b.no_kartu = d.no_kartu
			and d.lus_id = e.lus_id
			and a.lca_id = f.lca_id
			and b.produk = '05'
			<isNotEqual property="cabang" compareValue="All">
			    AND a.lca_id = #cabang# 
			</isNotEqual>
			and d.tgl_input BETWEEN TO_DATE ( TO_CHAR (#tglAwal#, 'dd/mm/yyyy') || ' 00:00:00', 'dd/mm/yyyy hh24:mi:ss') 
		                          AND TO_DATE ( TO_CHAR (#tglAkhir#, 'dd/mm/yyyy') || ' 23:59:59', 'dd/mm/yyyy hh24:mi:ss')
		 order by f.lca_nama         
	</select>
	
	<select id="elions.bac.selectReportSummaryBiasa" resultMap="elions.bac.selectReportSummaryBiasa.result" parameterClass="java.util.HashMap">
        select data.key_jurnal, data.tgl_input, data.no_jm, data.no_jm_sa, data.no_jurnal, data.keterangan, data.mspa_desc,
            data.kas, data.project_no, data.budget_no, data.jumlah, data.mspa_old_policy, data.group_bisnis, data.ket_tu,
            data.lus_id, usr.lus_login_name, usr.lus_email
        from (
            select distinct b.reg_spaj key_jurnal, e.tgl_input, (case when e.no_jm = b.mspa_no_jm then e.no_jm else null end) no_jm,
                (case when e.no_jm = b.mspa_no_jm_sa then e.no_jm else null end) no_jm_sa, f.no_jurnal, f.keterangan,
                (case when e.no_jm = b.mspa_no_jm_sa then b.mspa_desc else null end) mspa_desc, f.mjm_cd kas,
                f.mjm_project project_no, f.mjm_budget budget_no, f.mjm_jumlah jumlah, b.mspa_old_policy,
                (select decode(y.lsgb_id, 17, decode(y.lsbs_linebus, 3, 'UNIT LINK SYARIAH', 1, 'UNIT LINK', 'SYARIAH'),
                                        decode(y.lsbs_linebus, 3, 'SYARIAH', 'KONVENSIONAL')) jalur
                 from eka.mst_product_insured x, eka.lst_bisnis y
                 where x.lsbs_id = y.lsbs_id
                     and x.lsbs_id <![CDATA[<]]> 300
                     and x.reg_spaj = a.reg_spaj) group_bisnis, 
                (case when e.no_jm = b.mspa_no_jm then null else
                    (select distinct upper(z.lt_transksi)
                     from eka.mst_tag_payment x, eka.mst_ulink y, eka.lst_transaksi z
                     where x.reg_spaj = y.reg_spaj
                         and x.msbi_tahun_ke = y.mu_tahun_ke
                         and x.msbi_premi_ke = y.mu_premi_ke
                         and y.lt_id = z.lt_id
                         and x.mspa_payment_id = b.mspa_payment_id)  end) ket_tu,
                (case when e.no_jm = b.mspa_no_jm then e.user_input else b.lus_id end) lus_id
            from eka.mst_policy a, eka.mst_payment b, eka.mst_tag_payment c, eka.mst_billing d,
                eka.mst_ptc_tm e, eka.mst_ptc_jm f
            where a.reg_spaj = b.reg_spaj
                and a.reg_spaj = c.reg_spaj
                and a.reg_spaj = d.reg_spaj
                and a.lstb_id = 1
                and b.mspa_payment_id = c.mspa_payment_id
                and (b.mspa_no_jm = e.no_jm or b.mspa_no_jm_sa = e.no_jm)
                and c.msbi_tahun_ke = d.msbi_tahun_ke
                and c.msbi_premi_ke = d.msbi_premi_ke
                and d.msbi_nb = 1
                and e.no_jm = f.no_jm
                and e.mtm_position != 0
                and e.tgl_jurnal is not null
                and e.tgl_input between to_date( to_char(#tglAwal#, 'dd/mm/yyyy') || ' 00:00:00', 'dd/mm/yyyy hh24:mi:ss')
                                                    and to_date( to_char(#tglAkhir#, 'dd/mm/yyyy') || ' 23:59:59', 'dd/mm/yyyy hh24:mi:ss')
            ) data, eka.lst_user usr
        where data.lus_id = usr.lus_id
        	<isNotEqual property="lus_id" compareValue="All">
				and usr.lus_id = #lus_id#
			</isNotEqual>
        order by lus_login_name, key_jurnal, no_jm_sa, no_jm, no_jurnal
	</select>
	
	<select id="elions.bac.selectGetPDF" parameterClass="java.util.HashMap" resultClass="string">
		SELECT path 
		FROM eka.mst_history_upload 
		WHERE status = TRIM(#status#) 
			AND temp_filename LIKE (TRIM ('%' || #fileName# || '%'))
		<isNotNull property="fileName2">
			AND temp_filename NOT LIKE (TRIM ('%' || #fileName2# || '%'))
		</isNotNull>
			AND upload_jenis LIKE ('%PERJANJIAN KEAGENAN%')
	</select>

<!-- 	<select id="elions.bac.selectLstAgenAgency" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> -->
		<select id="elions.bac.selectLstAgenAgency" parameterClass="string" resultClass="java.util.HashMap">
		SELECT   a.msag_id key, trim(c.lwk_nama) value 
		    FROM eka.mst_agent a,
		         eka.lst_cabang b,
		         eka.lst_wakil c,
		         eka.lst_region d,
		         eka.mst_client_new e
		   WHERE a.lstb_id = 1
		     AND a.msag_active = 1
		     AND a.lsle_id = DECODE (a.lca_id, '46', 0, 1)
		     AND a.msag_sbm = DECODE (a.lca_id, '46', 0, a.msag_sbm)
		     AND a.lca_id NOT IN ('08', '09', '40', '42')
		     AND a.lca_id = b.lca_id
		     AND a.lca_id = c.lca_id
		     AND a.lwk_id = c.lwk_id
		     AND a.lca_id = d.lca_id
		     AND a.lwk_id = d.lwk_id
		     AND a.lsrg_id = d.lsrg_id
		     AND a.mcl_id = e.mcl_id
 		 	 AND (a.lca_id IN (#indexCabangAgency#) OR a.lca_id = 52)
 		 	 <!--AND (a.lca_id IN (#indexCabangAgency#)) --><!--permintaan wasisti agency arthamas  digabung ke agency-->
		ORDER BY b.lca_nama, c.lwk_nama, d.lsrg_nama, e.mcl_first
	
	</select>
	
		<select id="elions.bac.selectLstAgenAKM" parameterClass="string" resultClass="java.util.HashMap">
			SELECT (lca_id||lwk_id||lsrg_id) as key, trim(lsrg_nama) as value
				FROM eka.lst_region where (lca_id IN (#indexCabangAgency#))
				order by lsrg_nama
	</select>
	
	<select id="elions.bac.selectLstAgen" parameterClass="string" resultClass="java.util.HashMap">
		SELECT   a.msag_id key, trim(c.lwk_nama) value 
		    FROM eka.mst_agent a,
		         eka.lst_cabang b,
		         eka.lst_wakil c,
		         eka.lst_region d,
		         eka.mst_client_new e
		   WHERE a.lstb_id = 1
		     AND a.msag_active = 1
		     AND a.lsle_id = DECODE (a.lca_id, '46', 0, 1)
		     AND a.msag_sbm = DECODE (a.lca_id, '46', 0, a.msag_sbm)
		     AND a.lca_id NOT IN ('08', '09', '40', '42')
		     AND a.lca_id = b.lca_id
		     AND a.lca_id = c.lca_id
		     AND a.lwk_id = c.lwk_id
		     AND a.lca_id = d.lca_id
		     AND a.lwk_id = d.lwk_id
		     AND a.lsrg_id = d.lsrg_id
		     AND a.mcl_id = e.mcl_id
			 AND A.LCA_ID in (#lca_id#)
		ORDER BY b.lca_nama, c.lwk_nama, d.lsrg_nama, e.mcl_first
	
	</select>
	
	<select id="elions.bac.selectLstAgenBP" parameterClass="string" resultClass="java.util.HashMap">
		select (lca_id || lwk_id || lsrg_id) key, lsrg_nama value
			from eka.lst_region
			where lca_id = #lca_id#
	
	</select>
	
	<select id="elions.bac.selectLstHybridArthaMas" parameterClass="string" resultClass="java.util.HashMap">
	SELECT   a.msag_id key, trim(c.lwk_nama) value 
	    FROM eka.mst_agent a,
	         eka.lst_cabang b,
	         eka.lst_wakil c,
	         eka.lst_region d,
	         eka.mst_client_new e,
			 eka.lst_artha_dm f
	   WHERE a.lstb_id = 1
	     AND a.msag_active = 1
	     AND a.lsle_id = DECODE (a.lca_id, '46', 0, 1)
	     AND a.msag_sbm = DECODE (a.lca_id, '46', 0, a.msag_sbm)
	     AND a.lca_id NOT IN ('08', '09', '40', '42')
	     AND a.lca_id = b.lca_id
	     AND a.lca_id = c.lca_id
	     AND a.lwk_id = c.lwk_id
	     AND a.lca_id = d.lca_id
	     AND a.lwk_id = d.lwk_id
	     AND a.lsrg_id = d.lsrg_id
	     AND a.mcl_id = e.mcl_id
		 AND c.lca_id = f.lca_id
		 AND c.lwk_id = f.lwk_id
		 AND f.lshb_id in #lshb_id#
		 AND a.msag_id not in ('600811','600791','600777')
	ORDER BY b.lca_nama, c.lwk_nama, d.lsrg_nama, e.mcl_first
	</select>
	
	<select id="elions.bac.selectLstHybridAJS" parameterClass="string" resultClass="java.util.HashMap">
	select * from(
        select distinct a.lca_id || a.lwk_id || d.lsrg_id as key, trim(d.lsrg_nama) as value
                from eka.lst_wakil a,
                     eka.lst_artha_dm b,
                     eka.lst_artha_rm c,
                     (SELECT  f.lshb_id ,c.lwk_nama, a.lca_id, a.lwk_id, d.lsrg_id, d.lsrg_nama
                        FROM eka.mst_agent a,
                             eka.lst_cabang b,
                             eka.lst_wakil c,
                             eka.lst_region d,
                             eka.mst_client_new e,
                             eka.lst_artha_dm f
                       WHERE a.lstb_id = 1
                         AND a.msag_active = 1
                         AND a.lsle_id = DECODE (a.lca_id, '46', 0, 1)
                         AND a.msag_sbm = DECODE (a.lca_id, '46', 0, a.msag_sbm)
                         AND a.lca_id NOT IN ('08', '09', '40', '42')
                         AND a.lca_id = b.lca_id
                         AND a.lca_id = c.lca_id
                         AND a.lwk_id = c.lwk_id
                         AND a.lca_id = d.lca_id
                         AND a.lwk_id = d.lwk_id
                         AND a.lsrg_id = d.lsrg_id
                         AND a.mcl_id = e.mcl_id
                         AND c.lca_id = f.lca_id
                         AND c.lwk_id = f.lwk_id
                         AND f.lshb_id in '00'
                         AND a.msag_id in ('600811','600791','600777')) d
				where a.lca_id = b.lca_id
				and a.lwk_id = b.lwk_id
				and b.lshb_id = c.lshb_id
				and b.lshb_id = d.lshb_id(+)
				and b.lshb_id in('00',#lshb_id#)
				AND a.lwk_id in ('00','04','15','31','32','36','37','52')
		union
		SELECT   a.msag_id key, trim(c.lwk_nama) value 
			    FROM eka.mst_agent a,
			         eka.lst_cabang b,
			         eka.lst_wakil c,
			         eka.lst_region d,
			         eka.mst_client_new e,
					 eka.lst_artha_dm f
			   WHERE a.lstb_id = 1
			     AND a.msag_active = 1
			     AND a.lsle_id = DECODE (a.lca_id, '46', 0, 1)
			     AND a.msag_sbm = DECODE (a.lca_id, '46', 0, a.msag_sbm)
			     AND a.lca_id NOT IN ('08', '09', '40', '42')
			     AND a.lca_id = b.lca_id
			     AND a.lca_id = c.lca_id
			     AND a.lwk_id = c.lwk_id
			     AND a.lca_id = d.lca_id
			     AND a.lwk_id = d.lwk_id
			     AND a.lsrg_id = d.lsrg_id
			     AND a.mcl_id = e.mcl_id
				 AND c.lca_id = f.lca_id
				 AND c.lwk_id = f.lwk_id
				 AND f.lshb_id in ('00')
				 AND a.msag_id not in ('600811','600791','600777')
	)
	order by value
	</select>
	
	
	<select id="elions.bac.selectLstAgenRegional" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT (lca_id ||'-'||lwk_id||'-'||lsrg_id) as key, trim(lsrg_nama) as value
			FROM eka.lst_region where lca_id NOT IN (#indexCabang#)
			order by lsrg_nama
	</select>
	
	<!--
	<select id="elions.bac.selectLstAgenRegional" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT (lca_id ||'-'||lwk_id||'-'||lsrg_id) as key, trim(lsrg_nama) as value
			FROM eka.lst_region where lca_id NOT IN (#lca_id1#,#lca_id2#,#lca_id3#,#lca_id4#)
			order by lsrg_nama
	</select>-->
	
	<select id="elions.bac.selectLstAgencyArthamas" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT (LCA_ID ||'-'||LWK_ID) AS key, trim(lwk_nama) as value
		FROM eka.lst_wakil
		WHERE 
			lca_id = 52
			<!-- AND lwk_flag = #lwk_flag# --><!-- permintaan wenny tampil semua -->
			ORDER BY lwk_nama 
	</select>
	
	<select id="elions.bac.selectNamaLeader" parameterClass="string" resultClass="string">
		SELECT   e.mcl_first
		    FROM eka.mst_agent a,
		         eka.lst_cabang b,
		         eka.lst_wakil c,
		         eka.lst_region d,
		         eka.mst_client_new e
		   WHERE a.lstb_id = 1
		     AND a.msag_active = 1
		     AND a.lsle_id = DECODE (a.lca_id, '46', 0, 1)
		     AND a.msag_sbm = DECODE (a.lca_id, '46', 0, a.msag_sbm)
		     AND a.lca_id NOT IN ('08', '09', '40', '42')
		     AND a.lca_id = b.lca_id
		     AND a.lca_id = c.lca_id
		     AND a.lwk_id = c.lwk_id
		     AND a.lca_id = d.lca_id
		     AND a.lwk_id = d.lwk_id
		     AND a.lsrg_id = d.lsrg_id
		     AND a.mcl_id = e.mcl_id
			 AND a.msag_id = #msag_id#
		ORDER BY b.lca_nama, c.lwk_nama, d.lsrg_nama, e.mcl_first
	</select>

	<select id="elions.bac.selectValidasiPinjamanKonvensional" parameterClass="string" resultClass="int">
		SELECT COUNT (*)
		  FROM eka.mst_pinjaman
		 WHERE     reg_spaj = rpad(replace(#value#,'.'),11,' ')
		       AND flag_ps = 0
		       AND mspin_aktif = 1
		       AND mspin_sisa <![CDATA[<>]]> 0
		       AND flag_pinjam <![CDATA[<>]]> 2
		        <!-- INFO BY RUDY DAN  NIA LB (10 Apr 2014), mspin_paid tidak perlu dilihat
		       AND (mspin_paid <![CDATA[<>]]> 1 OR mspin_paid IS NULL)	  
		       -->
	</select>

	<select id="elions.bac.selectValidasiPinjaman" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT (*)
		  FROM eka.mst_pinjaman
		 WHERE reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
		   AND flag_ps = #flag_ps#
	</select>

	<select id="elions.bac.selectPunyaStableLink" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.lssp_id, a.reg_spaj, a.mspo_policy_no_format, d.mcl_first,
		       d.mspe_no_identity, d.mspe_no_identity_expired, d.mspe_date_birth, c.mspr_premium, c.mspr_tsi,
		       c.lsbs_id, c.lsdbs_number, eka.f_lsbs(a.reg_spaj, c.lsbs_id) lsbs_name, eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) lsdbs_name, g.lspd_position
		  FROM eka.mst_policy a,
		       eka.mst_insured b,
		       eka.mst_product_insured c,
		       eka.mst_client_new d,
			   eka.mst_client_new e,
		       eka.lst_bisnis e,
		       eka.lst_det_bisnis f,
		       eka.lst_document_position g
		       <isNotNull property="msag_id">
		       ,eka.mst_agent_prod h
		       </isNotNull>
		 WHERE a.reg_spaj = b.reg_spaj
		   AND b.reg_spaj = c.reg_spaj
		   AND b.mste_insured_no = c.mste_insured_no
		   AND a.mspo_policy_holder = d.mcl_id
		   AND b.mste_insured = e.mcl_id
		   AND c.lsbs_id = e.lsbs_id
		   AND e.lsbs_id in (164,174)
		   AND c.lsbs_id = f.lsbs_id
		   AND c.lsdbs_number = f.lsdbs_number
		   AND a.lspd_id = g.lspd_id
		   AND a.lstb_id = 1
		   <isNotNull property="lku_id">
		   AND a.lku_id = #lku_id#
		   </isNotNull>
		   AND d.mspe_date_birth = #pp_dob#
		   AND d.mcl_first LIKE #pp_name#
		   AND e.mspe_date_birth = #tt_dob#
		   AND e.mcl_first LIKE #tt_name#
		   AND c.mspr_beg_date >= '10 Sep 2009'
		   <isNotNull property="lsbs_id">
		   AND f.lsbs_id = #lsbs_id#
		   AND f.lsdbs_number = #lsdbs_number#
		   </isNotNull>
		   <isNotNull property="msag_id">
		    AND a.reg_spaj = h.reg_spaj
		   	AND h.msag_id = #msag_id#
		   	AND h.lsle_id = 4
		   </isNotNull>
	</select>
	
	<select id="elions.bac.selectPunyaStableLinkAll" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        SELECT a.lssp_id, a.reg_spaj, a.mspo_policy_no_format, d.mcl_first,
               d.mspe_no_identity, d.mspe_no_identity_expired, d.mspe_date_birth, c.mspr_premium, c.mspr_tsi,
               c.lsbs_id, c.lsdbs_number, eka.f_lsbs(a.reg_spaj, c.lsbs_id) lsbs_name, eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) lsdbs_name, g.lspd_position
          FROM eka.mst_policy a,
               eka.mst_insured b,
               eka.mst_product_insured c,
               eka.mst_client_new d,
               eka.lst_bisnis e,
               eka.lst_det_bisnis f,
               eka.lst_document_position g
         WHERE a.reg_spaj = b.reg_spaj
           AND b.reg_spaj = c.reg_spaj
           AND b.mste_insured_no = c.mste_insured_no
           AND a.mspo_policy_holder = d.mcl_id
           AND c.lsbs_id = e.lsbs_id
           AND e.lsbs_id in (164,174)
           AND c.lsbs_id = f.lsbs_id
           AND c.lsdbs_number = f.lsdbs_number
           AND a.lspd_id = g.lspd_id
           AND a.lstb_id = 1
		   AND d.mspe_date_birth = #pp_dob#
		   AND d.mcl_first LIKE #pp_name#
           AND a.mspo_beg_date >= '10 Sep 2009'
	</select>
	
	<select id="elions.bac.selectPunyaPowStabSaveAll" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.lssp_id, a.reg_spaj, a.mspo_policy_no_format, d.mcl_first,
               d.mspe_no_identity, d.mspe_no_identity_expired, d.mspe_date_birth, c.mspr_premium, c.mspr_tsi,
               c.lsbs_id, c.lsdbs_number, eka.f_lsbs(a.reg_spaj, c.lsbs_id) lsbs_name, eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) lsdbs_name, g.lspd_position
		  FROM eka.mst_policy a,
               eka.mst_insured b,
               eka.mst_product_insured c,
               eka.mst_client_new d,
               eka.lst_bisnis e,
               eka.lst_det_bisnis f,
               eka.lst_document_position g
         WHERE a.reg_spaj = b.reg_spaj
           AND b.reg_spaj = c.reg_spaj
           AND b.mste_insured_no = c.mste_insured_no
           AND a.mspo_policy_holder = d.mcl_id
           AND c.lsbs_id = e.lsbs_id
           AND e.lsbs_id in (142,143,144,158,175,184)
           AND c.lsbs_id = f.lsbs_id
           AND c.lsdbs_number = f.lsdbs_number
           AND a.lspd_id = g.lspd_id
           AND a.lstb_id = 1
		   AND d.mspe_date_birth = #pp_dob#
		   AND d.mcl_first LIKE #pp_name#
           AND a.mspo_beg_date >= '10 Sep 2009'
	</select>
	
	<select id="elions.bac.selectSudahSurrender" parameterClass="string" resultClass="int">
		select count(*)
		from eka.mst_surrender a,
			 eka.mst_pinjaman b
		where a.reg_spaj = b.reg_spaj
		and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.bac.selectPass" parameterClass="string" resultClass="string">
		SELECT (c.kode || 'AJS') pass_pdf
		  FROM eka.mst_policy a, eka.mst_nasabah b, eka.lst_cab_bii c
		 WHERE a.reg_spaj = #value#
		   AND a.mspo_plan_provider = b.mns_kd_nasabah
		   AND b.kd_region = c.kd_region
		   AND b.kd_koord = c.kd_koord
		   AND b.kd_area = c.kd_area
		   AND b.kd_cabang = c.kd_cabang			
	</select>
	
	<select id="elions.bac.selectCountProsaveBayar" parameterClass="string" resultClass="int">
		select count(*) from eka.mst_prosave_bayar where reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.bac.selectCountRolloverPowersave" parameterClass="string" resultClass="int">
		select count(*) from eka.mst_powersave_ro where reg_spaj = rpad(replace(#value#,'.'),11,' ') and mps_kode in (2,3,7)
	</select>

	<select id="elions.bac.selectSpajFromPolis" parameterClass="string" resultClass="string">
		select reg_spaj from eka.mst_policy where mspo_policy_no = #value#
	</select>
	
	<select id="elions.bac.selectGetSpaj" parameterClass="string" resultClass="string">
		select reg_spaj from eka.mst_policy 
		where reg_spaj=rpad(replace(#value#,'.'),11,' ')   
		or mspo_policy_no=rpad(replace(#value#,'.'),14,' ') 
	</select>

	<select id="elions.bac.selectGetMspoPolicyNo" parameterClass="string" resultClass="string">
		select mspo_policy_no from eka.mst_policy 
		where reg_spaj=rpad(replace(#value#,'.'),11,' ')   
		or mspo_policy_no=rpad(replace(#value#,'.'),14,' ') 
	</select>
	
	<select id="elions.bac.selectValidasiEditUnitLink" parameterClass="string" resultClass="int">
		SELECT COUNT (*)
		  FROM eka.mst_trans_ulink a
		 WHERE a.reg_spaj = #value#
		   AND a.mtu_tgl_trans =
		                   (SELECT mtu_tgl_trans
		                      FROM eka.mst_ulink
		                     WHERE mu_ke = 1 AND mtu_ke = 1 AND reg_spaj = a.reg_spaj)
		   AND mtu_saldo_unit > 0	
	</select>

	<select id="elions.bac.selectValidasiStableLink" parameterClass="string" resultClass="java.util.HashMap">
		SELECT (CASE
		           WHEN msl_premi = 0
		            OR msl_premi IS NULL
		            OR (msl_bunga = 0 and flag_bulanan = 0)
		            OR (msl_bunga IS NULL and flag_bulanan = 0)
		            OR msl_tgl_nab IS NULL
		            OR msl_nab = 0
		            OR msl_nab IS NULL
		            OR msl_unit = 0
		            OR msl_unit IS NULL
		            OR msl_saldo_unit = 0
		            OR msl_saldo_unit IS NULL
		              THEN 0
		           ELSE 1
		        END
		       ) v
		  FROM eka.mst_slink
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
		 AND msl_kode not in(9)		
	</select>
	
	<select id="elions.bac.selectValidasiNewStableLink" parameterClass="string" resultClass="java.util.HashMap">
		SELECT (CASE
		           WHEN msl_premi = 0
		            OR msl_premi IS NULL
		            OR (msl_bunga = 0 and flag_bulanan = 0)
		            OR (msl_bunga IS NULL and flag_bulanan = 0)
		              THEN 0
		           ELSE 1
		        END
		       ) v
		  FROM eka.mst_slink
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
		 AND msl_kode not in(9)		
	</select>

	<select id="elions.bac.selectAgentHist" parameterClass="string" resultClass="java.util.HashMap">
		SELECT a.msag_id, b.lstb_name, a.mcl_id, c.mcl_first, d.msag_jn_agen,
			   e.lca_id, e.lwk_id, e.lsrg_id,a.lsle_id, a.lstb_id,
		       (e.lca_id || e.lwk_id || '.' || e.lsrg_id) region, e.lsrg_nama,
		       a.msag_beg_date, a.msag_end_date, sysdate magh_process_date, '' magh_desc,
		       (CASE
		           WHEN a.lca_id in('37','52')
		              THEN DECODE (a.lsle_id, 1, 'AGENCY DIRECTOR', 2, 'AGENCY MANAGER', 3, 'SALES MANAGER', 4, 'SALES EXECUTIVE')
		           WHEN a.lca_id = 46
		              THEN DECODE ((CASE
		                               WHEN (a.lsle_id = 0 AND a.msag_sbm = 0) THEN 1
		                               WHEN (a.lsle_id = 0 AND a.msag_sbm = 1) THEN 2
		                               ELSE (a.lsle_id + 2) END),
		                           1, 'REGIONAL DIRECTOR', 2, 'REGIONAL MANAGER', 3, 'DISTRICT MANAGER', 4, 'BRANCH MANAGER', 5, 'SALES MANAGER', 6, 'FINANCIAL CONSULTANT')
		           ELSE DECODE (a.lsle_id, 0, 'REGIONAL DIRECTOR', 1, 'REGIONAL MANAGER', 2, 'BRANCH MANAGER', 3, 'UNIT MANAGER', 4, 'MARKETING EXECUTIVE')
		        END) jabatan,
		       DECODE (a.lca_id, 37, 'AGENCY', 46, 'HYBRID', 52, 'AGENCY ARTHAMAS', 'REGIONAL') distribusi
		  FROM (SELECT * FROM eka.mst_agent a WHERE a.msag_active = 1
		        START WITH a.msag_id = #value#
		        CONNECT BY (a.msag_id = PRIOR a.mst_leader OR a.msag_id = PRIOR a.msag_rm)) a,
		       eka.lst_type_business b,
		       eka.mst_client_new c,
		       eka.lst_jn_agen d,
		       eka.lst_region e
		 WHERE a.lstb_id = b.lstb_id
		   AND a.mcl_id = c.mcl_id
		   AND a.msag_jenis = d.msag_jenis
		   AND a.lca_id = e.lca_id
		   AND a.lwk_id = e.lwk_id
		   AND a.lsrg_id = e.lsrg_id	
	</select>

	<select id="elions.bac.selectFlagBmSbm" parameterClass="string" resultClass="java.util.HashMap">
		SELECT eka.mst_agent.msag_flag_bm, eka.mst_agent.msag_sbm
		  FROM eka.mst_agent
		 WHERE msag_id = #value#	
	</select>

	<select id="elions.bac.saveHistory" parameterClass="string" resultClass="string">
		SELECT DISTINCT msag_id 
		  FROM eka.mst_agent_hist 
		 WHERE msag_id = #value#	
	</select>

	<select id="elions.bac.selectKetAgent" parameterClass="string" resultClass="java.util.HashMap">
		SELECT eka.mst_client_new.mspe_no_identity, eka.mst_address_new.alamat_rumah,
			   eka.mst_client_new.mspe_date_birth, eka.mst_client_new.mspe_place_birth,
			   eka.mst_client_new.mcl_id 
		  FROM eka.mst_client_new,
		       eka.mst_address_new,
			   eka.mst_agent
		WHERE eka.mst_client_new.mcl_id = eka.mst_address_new.mcl_id
		  AND eka.mst_client_new.mcl_id = eka.mst_agent.mcl_id
		  AND msag_id = #value#	
	</select>

	<select id="elions.bac.selectVP" parameterClass="string" resultClass="string">
		SELECT mrmc_name  
		  FROM eka.mst_rmc,
		       eka.mst_rmc_rm,
			   eka.mst_agent
		 WHERE eka.mst_agent.msag_id = eka.mst_rmc_rm.msag_id
		   AND eka.mst_rmc_rm.mrmc_id = eka.mst_rmc.mrmc_id
		   AND eka.mst_rmc.mrmc_level_name = 'VP'
		   AND eka.mst_agent.msag_active = 1 
		   AND eka.mst_agent.msag_id = #value#  	
	</select>

	<select id="elions.bac.selectCariAgen" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 'AGEN LAMA' jenis, a.msag_id, b.mspe_email, b.mcl_first,
			   eka.utils.agen_jabatan(a.msag_id) jabatan,
		       DECODE (a.lca_id, 37, 'AGENCY', 46, 'HYBRID', 52, 'AGENCY ARTHAMAS', 'REGIONAL') distribusi
		  FROM eka.mst_agent a, 
		  	   eka.mst_client_new b,
			   eka.lst_user c,
			   eka.lst_user_admin d,
			   eka.lst_region e
		 WHERE a.mcl_id = b.mcl_id
		   AND a.msag_active = 1
		   AND (
		   	   UPPER (mcl_first) LIKE UPPER (TRIM ('%' || #cari# || '%'))
			   OR
			   a.msag_id LIKE UPPER (TRIM ('%' || #cari# || '%'))
			   )		  
		   AND c.lus_id = d.lus_id
		   AND d.lar_id = e.lar_id
		   AND e.lca_id = a.lca_id   
		   AND e.lwk_id = a.lwk_id
		   AND e.lsrg_id = a.lsrg_id
		   AND c.lus_id = #lus_id#
		   AND b.mspe_date_birth = to_date(#tgllahir#,'DD/MM/YYYY')
		UNION
		select 'AGEN BARU' jenis, mac_id msag_id, '' mspe_email, mac_nama_agen mcl_first, mac_level jabatan, mac_distribusi distribusi from eka.mst_agent_contract
		where lus_id = #lus_id#
		   AND UPPER (mac_nama_agen) LIKE UPPER (TRIM ('%' || #cari# || '%'))
		   AND mac_tgl_lahir = to_date(#tgllahir#,'DD/MM/YYYY')
		and msag_id is null order by jenis, mcl_first
	</select>

	<select id="elions.bac.selectInformasiPowersaveUntukFeeBased" parameterClass="string" resultClass="java.util.HashMap">
		select a.lku_id, mpr_jangka_invest, b.mpr_deposit, c.mste_beg_date, d.lsbs_id, d.lsdbs_number
		from eka.mst_policy a, eka.mst_powersave_ro b, eka.mst_insured c, eka.mst_product_insured d
		where a.reg_spaj = b.reg_spaj
		and b.mps_kode = 5
		and a.reg_spaj = c.reg_spaj
		and a.reg_spaj = d.reg_spaj
		and d.lsbs_id <![CDATA[<]]> 300
		and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.bac.selectInformasiRegionUntukReferral" parameterClass="string" resultMap="elions.bac.selectInformasiRegionUntukReferral.result">
		SELECT (a.lca_id || a.lwk_id) region, b.lsbs_id, b.lsdbs_number
		  FROM eka.mst_policy a, eka.mst_product_insured b
		 WHERE a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		   AND a.reg_spaj = b.reg_spaj
		   AND b.lsbs_id <![CDATA[<]]> 300
	</select>

	<select id="elions.bac.selectUsiaTertanggung" parameterClass="string" resultClass="int">
		select mste_age from eka.mst_insured where reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.bac.selectIsSupervisorOrPincabBankSinarmas" parameterClass="int" resultClass="int">
		SELECT COUNT (*)
		  FROM eka.lst_user
		 WHERE jn_bank IS NOT NULL
		   AND lus_id = #value#
		   AND lus_active = 1
		   AND (   (jn_bank = 2 AND valid_bank_1 IS NULL AND valid_bank_2 IS NULL)
		        OR (jn_bank = 3 AND flag_approve = 1)
		       )	      
	</select>
	
	<select id="elions.bac.selectDaftarPolisOtorisasiSekuritas" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Policy">
		SELECT *
		  FROM (SELECT   ROWNUM NO, a.reg_spaj, a.mspo_policy_no_format, a.lus_id,
		                 a.mspo_date_print
		            FROM eka.mst_policy a, eka.mst_reff_bii b, eka.lst_user c
		           WHERE a.lspd_id = 6
		             AND a.mspo_date_print IS NOT NULL
		             AND a.reg_spaj = b.reg_spaj
		             AND b.lcb_no = c.cab_bank
		             and b.level_id = 4 and b.no_urut = (select max(no_urut) from eka.mst_reff_bii where level_id = 4 and reg_spaj = a.reg_spaj)
		        ORDER BY a.mspo_date_print DESC)x
		 WHERE NO BETWEEN #dari# AND #sampai#    
		 ORDER BY x.mspo_date_print DESC
	</select>
	
	<select id="elions.bac.selectDaftarPolisOtorisasiBankSinarmas" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Policy">
		SELECT y.*
		FROM (SELECT ROWNUM no, x.*
			  FROM (SELECT a.reg_spaj, a.mspo_policy_no_format, a.lus_id, a.mspo_date_print
				    FROM eka.mst_policy a, eka.mst_reff_bii b, eka.lst_user c
				    WHERE a.reg_spaj = b.reg_spaj
				        AND b.lcb_no = c.cab_bank
				        AND a.lspd_id = 6
				        AND a.mspo_date_print is not null
				        AND b.level_id = 4
				        AND b.no_urut = (SELECT max(no_urut) FROM eka.mst_reff_bii WHERE level_id = 4 AND reg_spaj = a.reg_spaj)
				        AND c.lus_id = #lus_id#
				    ORDER BY a.mspo_date_print DESC) x) Y
		WHERE no BETWEEN #dari# AND #sampai#
	</select>
	

	<select id="elions.bac.selectDaftarPolisOtorisasiUwSimasPrima" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Policy">
		SELECT *
		  FROM (SELECT   ROWNUM NO, a.reg_spaj, a.mspo_policy_no_format, a.lus_id,
		                 a.mspo_date_print
		            FROM eka.mst_policy a, eka.mst_product_insured b
		           WHERE a.lspd_id = 6
		             AND a.mspo_date_print IS NOT NULL
		             AND a.reg_spaj = b.reg_spaj
		             AND (   (b.lsbs_id = 142 AND b.lsdbs_number = 2)
		                  OR (b.lsbs_id = 158 AND b.lsdbs_number = 6)
		                  OR (b.lsbs_id = 164 AND b.lsdbs_number = 2)
		                  OR (b.lsbs_id = 175 AND b.lsdbs_number = 2)
		                 )
		        ORDER BY a.mspo_date_print DESC)x
		 WHERE NO BETWEEN #dari# and #sampai#
		 ORDER BY x.mspo_date_print DESC
	</select>
	
	<select id="elions.bac.selectDaftarPolisOtorisasiUwSimasPrimaUW" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Policy">
		SELECT *
		  FROM (SELECT   ROWNUM NO, a.reg_spaj, a.mspo_policy_no_format, a.lus_id,
		                 a.mspo_date_print
		            FROM eka.mst_policy a, eka.mst_product_insured b , eka.mst_insured c
		           WHERE a.lspd_id = 2
		             AND a.mspo_date_print IS NOT NULL
		             AND a.reg_spaj = b.reg_spaj
		             AND a.reg_spaj = c.reg_spaj
		             AND c.mste_tgl_aksep IS NULL
		             AND (   (b.lsbs_id = 142 AND b.lsdbs_number = 2)
		                  OR (b.lsbs_id = 158 AND b.lsdbs_number = 6)
		                  OR (b.lsbs_id = 164 AND b.lsdbs_number = 2)
		                  OR (b.lsbs_id = 175 AND b.lsdbs_number = 2)
		                 )
		        ORDER BY a.mspo_date_print DESC)x
		 WHERE NO BETWEEN #dari# and #sampai#
		 ORDER BY x.mspo_date_print DESC
	</select>
	
	<select id="elions.bac.selectDaftarPolisValidasiMaterai" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Policy">
	  SELECT y.*
        FROM (SELECT ROWNUM no, x.*
              FROM (SELECT a.reg_spaj, a.mspo_policy_no_format, a.lus_id, a.mspo_date_print
                    FROM eka.mst_policy a, eka.mst_reff_bii b , eka.mst_product_insured c
                    WHERE a.reg_spaj = b.reg_spaj
                        AND a.reg_spaj =c.reg_spaj
                        AND c.lsbs_id <![CDATA[<]]> 300
                        AND C.LSBS_ID in ( 142, 175)
                        AND a.mspo_date_print > to_date('01/04/2016', 'dd/MM/yyyy')
                        AND a.mspo_date_print is not null
                        AND b.level_id = 4
                        AND a.lspd_id not in (95,999)
                        AND b.no_urut = (SELECT max(no_urut) FROM eka.mst_reff_bii WHERE level_id = 4 AND reg_spaj = a.reg_spaj)
                        AND trim(b.lcb_no) = trim(#cab_bank#)
                        AND not exists (select 1 from eka.mst_stamp_det where msd_spaj =a.reg_spaj)
                    ORDER BY a.mspo_date_print DESC) x) Y
        WHERE no BETWEEN #dari# AND #sampai#
	</select>

	<select id="elions.bac.selectcount_rate" resultClass="int" parameterClass="int">
	  SELECT count(*) jumlah   
		 	FROM EKA.LST_PWRSAVE_RATE  
	WHERE 
		  ( LPR_FLAG = #value#) AND 
		  TO_CHAR(LPR_BEGDATE,'YYYYMMDD') <![CDATA[<=]]> TO_CHAR(sysdate,'YYYYMMDD')  AND  
		   TO_CHAR(LPR_ENDDATE,'YYYYMMDD')<![CDATA[>=]]> TO_CHAR(sysdate,'YYYYMMDD') 
	</select>
			   
	<!-- Cek apakah inputan bank, apakah diinput oleh USER ADMIN BANK 
		return -1 bila tidak
		return 0,1 bila BII
		return 2 bila bank sinarmas -->
	<select id="elions.bac.selectIsInputanBank" resultClass="int" parameterClass="string">
		select 
		(case when (b.lcb_no is not null or c.kode is not null) then a.jn_bank else -1 end) flagInputanBank 
		from eka.mst_policy p, eka.lst_user a, eka.lst_cabang_bii b, eka.lst_cab_bii c
		where p.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		and p.lus_id = a.lus_id 
		and a.cab_bank = b.lcb_no (+) 
		and a.cab_bank = c.kode (+)
		and b.level_id = 4
	</select>

	<!-- Cek apakah inputan bank, apakah REFERAL NYA DARI BANK TERTENTU
		return -1 bila tidak
		return 0,1 bila BII
		return 2 bila bank sinarmas -->
	<select id="elions.bac.selectIsInputanBankByReferral" resultClass="int" parameterClass="string">
		select (case when (b.lcb_no is not null or b.kode is not null) then b.jenis else -1 end) flagInputanBank
		from eka.mst_policy a,
		    (
		        select x.reg_spaj, x.lcb_no, y.jenis, y.kode
		        from eka.mst_reff_bii x, eka.lst_cabang_bii y
		        where x.lcb_no = y.lcb_no
		            and x.level_id = 4
		            and x.no_urut = (select max(no_urut) from eka.mst_reff_bii where level_id = 4 and reg_spaj = rpad(replace(#value#,'.'),11,' '))
		            and x.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		    ) b
		where a.reg_spaj = b.reg_spaj (+)
		    and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.bac.selectIsUserYangInputBank" resultClass="int" parameterClass="java.util.HashMap">
		SELECT COUNT (*)
		  FROM eka.mst_reff_bii a, eka.lst_user b
		 WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND a.lcb_no = b.cab_bank
		       AND b.lus_id = #lus_id#
		       and a.level_id = 4 and a.no_urut = (select max(no_urut) from eka.mst_reff_bii where level_id = 4 and reg_spaj = a.reg_spaj)
	</select>
	
	<select id="elions.bac.selectIsUserYangInputSekuritas" resultClass="int" parameterClass="java.util.HashMap">
		SELECT count(*)
			FROM eka.mst_policy a,
                 eka.lst_user b,
                 eka.mst_reff_bii c
            WHERE a.reg_spaj = c.reg_spaj 
            AND a.lus_id = b.lus_id
            AND b.cab_bank = c.lcb_no
            AND c.lcb_no = (select cab_bank from eka.lst_user where lus_id =#lus_id#)
			AND a.reg_Spaj = rpad(replace(#spaj#,'.'),11,' ')
			AND b.jn_bank = 3	
	</select>
	
	<select id="elions.bac.selectCountOtorisasiSpaj" resultClass="int" parameterClass="string">
		select count(*)
			from eka.mst_position_spaj a
			where reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
			and msps_desc like 'OTORISASI INPUT TOPUP KE%'	
	</select>
	<!--
		select count(*) 
		from eka.mst_policy p, eka.lst_user a, eka.lst_cabang_bii b, eka.lst_cab_bii c
		where p.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		and p.lus_id = #lus_id#
		and p.lus_id = a.lus_id 
		and a.cab_bank = b.lcb_no (+) 
		and a.cab_bank = c.kode (+)	
	-->

	<select id="elions.bac.selectIsUserInputBank" resultClass="int" parameterClass="int">
		select 
		(case when (b.lcb_no is not null or c.kode is not null) then a.jn_bank else null end) flagInputanBank 
		from eka.lst_user a, eka.lst_cabang_bii b, eka.lst_cab_bii c
		where a.lus_id = #value#
		and a.cab_bank = b.lcb_no (+) 
		and a.cab_bank = c.kode (+)	
	</select>

	<select id="elions.bac.selectABM" resultClass="java.util.HashMap">
		select 
		   (kd_region||kd_koord||kd_area) area, nvl(substr(nama_area,0,instr(nama_area,' ')-1),nama_area) grup, 
		   nama_area, old_id 
		from eka.lst_area_bii order by nama_area	
	</select>
	
	<select id="elions.bac.selectABM2" resultClass="java.util.HashMap">
		SELECT   kode area, team_name grup, nama_cabang nama_area, NULL old_id
		    FROM eka.lst_cab_bii
		   WHERE kd_region = '02' AND kd_koord = '07'
		ORDER BY team_name, nama_area
	</select>
	
	<select id="elions.bac.selectCabangMayapada" resultClass="java.util.HashMap">
		SELECT lcb_no, nama_cabang FROM eka.lst_cabang_bii WHERE jenis = 9 ORDER BY nama_cabang	
	</select>

	<select id="elions.bac.selectCabangUOB" resultClass="java.util.HashMap">
		SELECT lcb_no, nama_cabang FROM eka.lst_cabang_bii WHERE jenis = 10 ORDER BY nama_cabang	
	</select>

	<resultMap id="elions.bac.select_validbank1" class="java.util.HashMap">
		<result property="LUS_ID" column="LUS_ID" javaType="int" jdbcType="NUMBER" />
		<result property="CAB_BANK" column="CAB_BANK" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
		<result property="JN_BANK" column="JN_BANK" javaType="int" jdbcType="NUMBER" />
		<result property="PASS1" column="PASS1" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
		<result property="PASS2" column="PASS2" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
		<result property="FLAG_APPROVE" column="FLAG_APPROVE" javaType="int" jdbcType="NUMBER" />
	</resultMap>
	
	<select id="elions.bac.select_validbank" resultMap="elions.bac.select_validbank1" parameterClass="integer">
		SELECT A.LUS_ID,A.CAB_BANK, nvl(A.JN_BANK,-1) jn_bank, flag_approve,
		(SELECT eka.decrypt(LUS_PASSWORD)  FROM EKA.LST_USER WHERE LUS_ID = A.VALID_BANK_1)"PASS1" ,
		(SELECT eka.decrypt(LUS_PASSWORD)  FROM EKA.LST_USER WHERE LUS_ID = A.VALID_BANK_2)"PASS2"
		FROM EKA.LST_USER A WHERE A.LUS_ID = #value#
	</select>
		
	<resultMap id="elions.bac.select_tminus11" class="java.util.HashMap">
		<result property="LNU_NILAI" column="LNU_NILAI" javaType="double" jdbcType="DOUBLE" nullValue=""/>
		<result property="LNU_TGL" column="LNU_TGL" javaType="date" jdbcType="DATE" nullValue=""/>
	</resultMap>
	
	<select id="elions.bac.select_tminus" resultMap="elions.bac.select_tminus11" parameterClass="java.util.HashMap">
		SELECT *
		  FROM eka.lst_nab_ulink
		 WHERE lji_id = #id# AND lnu_tgl = trunc(eka.add_workdays (#tgl#, -#minus#))
	</select>
	
	<!-- spectasave only -->
	<select id="elions.bac.selectSpajFromABM" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select 
			   a.reg_spaj, a.mspo_policy_no_format, (b.kd_region||b.kd_koord||b.kd_area) area, 
			   nvl(substr(nama_area,0,instr(nama_area,' ')-1),nama_area) grup,
			   c.nama_area
		from eka.mst_policy a, eka.mst_nasabah b, eka.lst_area_bii c, eka.mst_powersave_proses d, eka.mst_product_insured e
		where a.mspo_plan_provider = b.mns_kd_nasabah
		and b.kd_region = c.kd_region
		and b.kd_koord = c.kd_koord
		and b.kd_area = c.kd_area
		and a.reg_spaj = d.reg_spaj
		and a.reg_spaj = e.reg_spaj
		and d.mps_batas_date-1 between #startDate# and #endDate#
		and d.MPS_KODE in (2,3,4,5)
		and (b.kd_region||b.kd_koord||b.kd_area) = #area#
		and a.lspd_id <![CDATA[<>]]> 95
		and a.lssp_id <![CDATA[<>]]> 5
		<isEqual property="produk" compareValue="155002">
			and ((e.lsbs_id = 155 and e.lsdbs_number = 2) OR (e.lsbs_id = 158 and e.lsdbs_number = 8))
		</isEqual>
		and a.reg_spaj not in (select reg_spaj from eka.mst_pinjaman)
		order by c.nama_area, a.reg_spaj	
	</select>

	<!-- platinum save and smart invest only -->
	<select id="elions.bac.selectSpajFromABM2" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select 
			   a.reg_spaj, a.mspo_policy_no_format, (b.kd_region||b.kd_koord||b.kd_area) area, 
			   nvl(substr(nama_area,0,instr(nama_area,' ')-1),nama_area) grup,
			   c.nama_area
		from eka.mst_policy a, eka.mst_nasabah b, eka.lst_area_bii c, eka.mst_powersave_proses d, eka.mst_product_insured e
		where a.mspo_plan_provider = b.mns_kd_nasabah
		and b.kd_region = c.kd_region
		and b.kd_koord = c.kd_koord
		and b.kd_area = c.kd_area
		and a.reg_spaj = d.reg_spaj
		and a.reg_spaj = e.reg_spaj
		and d.mps_batas_date-1 between #startDate# and #endDate#
		and d.MPS_KODE in (2,3,4,5)
		and b.kode = #area#
		and a.lspd_id <![CDATA[<>]]> 95
		and a.lssp_id <![CDATA[<>]]> 5
		<isEqual property="produk" compareValue="155001">
			and ((e.lsbs_id = 155 and e.lsdbs_number = 1) OR (e.lsbs_id = 158 and e.lsdbs_number = 5))
		</isEqual>
		<isEqual property="produk" compareValue="155003">
			and ((e.lsbs_id = 155 and e.lsdbs_number = 3) OR (e.lsbs_id = 158 and e.lsdbs_number = 9))
		</isEqual>
		and a.reg_spaj not in (select reg_spaj from eka.mst_pinjaman)
		order by c.nama_area, a.reg_spaj	
	</select>
	
<!--		and d.mpr_mature_date = (SELECT MAX (mpr_mature_date) FROM eka.mst_powersave_ro WHERE reg_spaj = d.reg_spaj)-->
	
	<select id="elions.bac.selectSpajFromLCB" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select 
					   a.reg_spaj, a.mspo_policy_no_format, j.nama_cabang, g.mcl_first pp, h.mcl_first tt
				from eka.mst_policy a, eka.mst_powersave_proses d, eka.mst_product_insured e,
				eka.mst_insured f, eka.mst_client_new g, eka.mst_client_new h,
				eka.mst_reff_bii i, eka.lst_cabang_bii j
				where a.reg_spaj = d.reg_spaj
				and a.reg_spaj = e.reg_spaj
				and a.reg_spaj = i.reg_spaj
				and i.lcb_no = RPAD (REPLACE (#lcb#, '.'), 5, ' ')
				and i.lcb_no = j.lcb_no
				and d.mps_batas_date-1 between #startDate# and #endDate#
				and d.MPS_KODE in (2,3,4,5)
				and a.lspd_id <![CDATA[<>]]> 95
				and a.lssp_id <![CDATA[<>]]> 5
				<isEqual property="produk" compareValue="142005">
					and e.lsbs_id = to_number(substr(#produk#,1,3)) and e.lsdbs_number in (5,6)
				</isEqual>
				<isNotEqual property="produk" compareValue="142005">
					and e.lsbs_id = to_number(substr(#produk#,1,3)) and e.lsdbs_number = to_number(substr(#produk#,4,6))
				</isNotEqual>
				and a.reg_spaj not in (select reg_spaj from eka.mst_pinjaman)
				and a.reg_spaj = f.reg_spaj
				and a.mspo_policy_holder = g.mcl_id
				and f.mste_insured = h.mcl_id
				and i.level_id = 4 and i.no_urut = (select max(no_urut) from eka.mst_reff_bii where level_id = 4 and reg_spaj = i.reg_spaj)
				order by j.nama_cabang, a.reg_spaj	
	</select>
	
	<select id="elions.bac.selectHistoryBlanko" parameterClass="int" resultClass="java.util.HashMap">
		SELECT no_blanko, lus_id, tgl_cetak, nama_spaj
		  FROM eka.lst_ulangan_blanko WHERE lus_id = #value# 
		  ORDER BY tgl_cetak
	</select>
	
	<select id="elions.bac.selectHistoryBlankoASM" parameterClass="string" resultClass="java.util.HashMap">
		select lca_id, no_blanko, mssd_lus_id,mssd_dt ,mssd_desc
		from eka.mst_spaj_det
		where mssd_lus_id=#value#
		order by no_blanko asc
	</select>
	
	<select id="elions.bac.selectTanggalJatuhTempoPowersave" resultClass="date" parameterClass="string">
		SELECT DISTINCT mps_batas_date
		  FROM eka.mst_powersave_proses wahaha
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ') AND mps_kode<![CDATA[<>]]>0
		   AND mps_batas_date =
		                (SELECT MAX (mps_batas_date) 
							FROM eka.mst_powersave_proses 
							WHERE reg_spaj = wahaha.reg_spaj)
	</select>
	
	<select id="elions.bac.selectPrintDatePolis" parameterClass="string" resultClass="date">
		select mspo_date_print from eka.mst_policy where reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.bac.selectkodegutri" parameterClass="java.util.HashMap" resultClass="string">
		select mcl_id 
		from eka.mst_client_new 
		where mcl_first like '%' || trim(upper(#nama#)) ||'%'  and
		not(substr(mcl_id,0,2) in('WW','XX')) and
		to_char(mspe_date_birth,'YYYYMMDD') = #tgl#
	</select>
	
	<resultMap id="elions.bac.selectjenisbiaya1" class="java.util.HashMap">
		<result property="LJB_ID" column="LJB_ID" javaType="string" jdbcType="NUMBER" nullValue="" />
		<result property="LJB_BIAYA" column="LJB_BIAYA" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
	</resultMap>

	<select id="elions.bac.selectIsKaryawanEkalife" parameterClass="string" resultClass="int">
		select nvl(mste_flag_el,0) from eka.mst_insured where reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.bac.selectFlagCC" resultClass="int" parameterClass="string">
		select mste_flag_cc from eka.mst_insured where reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.bac.selectcountblanko" resultClass="int" parameterClass="string">
		select count(mspo_no_blanko) jumlah  from eka.mst_policy where mspo_no_blanko=#value#
	</select>
	
	<select id="elions.bac.selectcountblanko_spaj" resultClass="int" parameterClass="java.util.HashMap">
		select count(mspo_no_blanko) jumlah  from eka.mst_policy where mspo_no_blanko=#blanko# 
		and reg_spaj  <![CDATA[<>]]> rpad(replace(#spaj#,'.'),11,' ')
	</select>	

	<!-- Select jenis biaya -->
	<select id="elions.bac.selectjenisbiaya" resultMap="elions.bac.selectjenisbiaya1" parameterClass="java.util.HashMap">
		SELECT EKA.LST_JENIS_BIAYA.LJB_ID , 
		EKA.LST_JENIS_BIAYA.LJB_BIAYA 
		FROM EKA.LST_JENIS_BIAYA
		WHERE EKA.LST_JENIS_BIAYA.LSBS_ID= #kode_rider# AND 
		EKA.LST_JENIS_BIAYA.LSDBS_NUMBER= #number_rider# 
	</select>
	
		<resultMap id="elions.bac.selectbungaprosave1" class="java.util.HashMap">
			<result property="LPR_RATE" column="LPR_RATE" javaType="double" jdbcType="NUMBER" />
			<result property="LPR_BEGDATE" column="LPR_BEGDATE" javaType="date" jdbcType="DATE" />
		</resultMap>

	<!-- Select jenis biaya -->
	<select id="elions.bac.selectbungaprosave" resultMap="elions.bac.selectbungaprosave1" parameterClass="java.util.HashMap">
	  SELECT LPR_RATE,   
			LPR_BEGDATE  
		 	FROM EKA.LST_PWRSAVE_RATE  
	WHERE ( LPR_JENIS = #jenis# ) AND  
		  ( LPR_FLAG = #flag# ) AND  
		  ( LKU_ID = #kurs#  ) AND  
		  (TO_CHAR(LPR_BEGDATE,'YYYYMMDD') <![CDATA[<=]]> TO_CHAR(#tgl_beg_date#,'YYYYMMDD') ) AND  
		  ( TO_CHAR(LPR_ENDDATE,'YYYYMMDD') <![CDATA[>=]]> TO_CHAR(#tgl_beg_date#,'YYYYMMDD')) AND  
		  ( LPR_DARI <![CDATA[<=]]> #up#) AND  
		  ( LPR_AKHIR <![CDATA[>=]]> #up# )   
		  order by LPR_INPUT_DATE
	</select>

		<resultMap id="elions.bac.selectagenpenutup1" class="java.util.HashMap">
			<result property="ID" column="ID" javaType="string" jdbcType="CHAR" nullValue=""/>
			<result property="NAMA" column="NAMA" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
			<result property="MSPE_EMAIL" column="MSPE_EMAIL" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
			<result property="REGION" column="REGION" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
			<result property="REGIONID" column="REGIONID" javaType="string" jdbcType="CHAR" nullValue=""/>
			<result property="ULINK" column="ULINK" javaType="int" jdbcType="NUMBER" nullValue="0"/>
			<result property="SERTIFIKAT" column="SERTIFIKAT" javaType="int" jdbcType="NUMBER" nullValue="0" />
			<result property="LCAID" column="LCAID" javaType="string" jdbcType="CHAR" nullValue=""/>
			<result property="BERLAKU" column="BERLAKU" javaType="date" jdbcType="DATE" />
			<result property="MSAG_ASNEW" column="MSAG_ASNEW" javaType="int" jdbcType="NUMBER" nullValue="0"/>
			<result property="FLAG_CABANG_SYARIAH" column="FLAG_CABANG_SYARIAH" javaType="int" jdbcType="NUMBER" nullValue="0"/>
			<result property="FLAG_AGEN_SYARIAH" column="FLAG_AGEN_SYARIAH" javaType="int" jdbcType="NUMBER" nullValue="0"/>
		</resultMap>
		
	<!-- Select agent -->
	<select id="elions.bac.selectagenpenutup" resultMap="elions.bac.selectagenpenutup1" parameterClass="java.util.HashMap">
           SELECT A.MSAG_ID "ID", B.MCL_FIRST "NAMA",B.MSPE_EMAIL,
              C.LSRG_NAMA "REGION", 
              A.LCA_ID || A.LWK_ID || A.LSRG_ID "REGIONID" ,
              A.MSAG_ULINK "ULINK",
              A.MSAG_SERTIFIKAT "SERTIFIKAT",
              A.LCA_ID "LCAID",
              A.MSAG_BERLAKU "BERLAKU",
              A.MSAG_ASNEW,
              NVL (D.SYARIAH,0) "FLAG_CABANG_SYARIAH",
              NVL (A.MSAG_SERTIFIKAT_FLAG,0) "FLAG_AGEN_SYARIAH"
         FROM EKA.MST_AGENT A, 
              EKA.mst_client_new B, 
              EKA.LST_REGION C,
              EKA.LST_WAKIL D 
        WHERE A.MCL_ID = B.MCL_ID 
          AND ( A.LCA_ID = C.LCA_ID AND  A.LWK_ID = C.LWK_ID AND A.LSRG_ID = C.LSRG_ID AND A.LCA_ID = D.lCA_ID AND  A.LWK_ID = D.LWK_ID ) 
          AND ( LSTB_ID = 1 
          AND A.MSAG_ACTIVE = 1 and
          A.MSAG_ID=#kodeagen#)
        ORDER BY LCAID,REGIONID,ID
	</select>
	
	 <resultMap id="elions.bac.selectMstPolicyCsMap" class="java.util.HashMap">
			<result property="MSCS_HOLDER" column="MSCS_HOLDER" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
			<result property="LSDBS_NAME" column="LSDBS_NAME" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
			<result property="MSCS_POLICY_NO" column="MSCS_POLICY_NO" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
			<result property="MSCS_BIRTH_DATE" column="MSCS_BIRTH_DATE" javaType="string" jdbcType="VARCHAR2"/>
			<result property="MSCS_PREMIUM" column="MSCS_PREMIUM" javaType="int" jdbcType="NUMBER" nullValue="0"/>
			<result property="MSCS_TSI" column="MSCS_TSI" javaType="int" jdbcType="NUMBER" nullValue="0" />
			<result property="MSCS_BEG_DATE" column="MSCS_BEG_DATE" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
			<result property="MSCS_END_DATE" column="MSCS_END_DATE" javaType="string" jdbcType="VARCHAR2" />
		</resultMap>
		
	<select id="elions.bac.selectMstPolicyCs" parameterClass="java.util.HashMap" resultMap="elions.bac.selectMstPolicyCsMap">
		select a.MSCS_HOLDER, b.LSDBS_NAME, a.MSCS_POLICY_NO, to_char( a.MSCS_BIRTH_DATE, 'dd/mm/yyyy' ) MSCS_BIRTH_DATE, a.MSCS_PREMIUM, a.MSCS_TSI, to_char( a.MSCS_BEG_DATE, 'dd/mm/yyyy' ) MSCS_BEG_DATE, to_char( a.MSCS_END_DATE, 'dd/mm/yyyy' ) MSCS_END_DATE
		from 
		eka.mst_policy_cs a,
		eka.lst_det_bisnis b
		where lspd_id = 99
		and upper(mscs_holder) like upper( '%' || #nama_pp# || '%' ) and to_char(mscs_birth_date,'dd/mm/yyyy') = #birth_date#
		and mscs_beg_date = (
			select max(mscs_beg_date) from eka.mst_policy_cs 
			where lspd_id = 99
			and upper(mscs_holder) like upper( '%' || #nama_pp# || '%' ) and to_char(mscs_birth_date,'dd/mm/yyyy') = #birth_date#
		)
		and a.lsbs_id = b.lsbs_id 
		and a.lsdbs_number = b.lsdbs_number
	</select>
	
	
	<select id="elions.bac.selectagenpenutup_endors" resultMap="elions.bac.selectagenpenutup1" parameterClass="java.util.HashMap">
           SELECT A.MSAG_ID "ID", B.MCL_FIRST "NAMA",
              C.LSRG_NAMA "REGION", 
              A.LCA_ID || A.LWK_ID || A.LSRG_ID "REGIONID" ,
              A.MSAG_ULINK "ULINK",
              A.MSAG_SERTIFIKAT "SERTIFIKAT",
              A.LCA_ID "LCAID",
              A.MSAG_BERLAKU "BERLAKU",
              A.MSAG_ASNEW
         FROM EKA.MST_AGENT A, 
              EKA.mst_client_new B, 
              EKA.LST_REGION C 
        WHERE A.MCL_ID = B.MCL_ID 
          AND ( A.LCA_ID = C.LCA_ID AND  A.LWK_ID = C.LWK_ID AND A.LSRG_ID = C.LSRG_ID ) 
          AND ( LSTB_ID = 1 
          AND A.MSAG_ID=#kodeagen#)
        ORDER BY LCAID,REGIONID,ID
	</select>
	
	<select id="elions.bac.selecteditagenpenutup" resultMap="elions.bac.selectagenpenutup1" parameterClass="string">
         SELECT   a.msag_id "ID", 
         TRIM (d.mcl_first) "NAMA",
				 b.lca_id||b.lwk_id||b.lsrg_id "REGIONID",
				 c.lsrg_nama "REGION", 
				 b.msag_ulink "ULINK", 
				 b.msag_sertifikat "SERTIFIKAT" ,
				 b.lca_id "LCAID", 
				 b.msag_berlaku "BERLAKU",
                 b.MSAG_ASNEW
		    FROM eka.mst_agent_prod a, 
		    eka.mst_agent b,
		    eka.lst_region c ,
		     eka.mst_client_new d
		   WHERE a.msag_id = b.msag_id AND 
		   a.reg_spaj = rpad(replace(#value#,'.'),11,' ') and
		   a.lsle_id = (select max(lsle_id) from eka.mst_agent_prod where reg_spaj = a.reg_spaj) and
		   b.lca_id = c.lca_id and
		   b.lwk_id = c.lwk_id and
		   b.lsrg_id = c.lsrg_id and
		   b.mcl_id = d.mcl_id and
		   b.LSTB_ID = 1 
		ORDER BY a.lsle_id DESC
	</select>
		
<!--          AND (A.LSLE_ID > 1  or MSAG_JENIS = 7 OR (  A.MSAG_ID = '015586') OR (  A.MSAG_ID = '016514') or (  A.MSAG_ID = '016189')or (  A.MSAG_ID = '003725') or (  A.MSAG_ID = '000000')or (  A.MSAG_ID = '016374')or (  A.MSAG_ID = '016457')))
  -->

		<resultMap id="elions.bac.selectao1" class="java.util.HashMap">
			<result property="nama" column="nama" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                                      
			<result property="mst_leader" column="mst_leader" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                              
			<result property="lstb_id" column="lstb_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
			<result property="lsle_id" column="lsle_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
			<result property="id" column="id" javaType="string" jdbcType="CHAR" nullValue=""/>   			
		</resultMap>
		
	<!-- Select agent AO-->	
	<select id="elions.bac.selectagenao" resultMap="elions.bac.selectao1" parameterClass="string">
                  SELECT "EKA"."V_AGENT"."AGENT_ID" "ID",   
		         trim("EKA"."V_AGENT"."NAMA") "NAMA",   
		         "EKA"."V_AGENT"."LEAD_ID" "MST_LEADER",   
		         "EKA"."V_AGENT"."TABLE_ID" "LSTB_ID",   
		         "EKA"."V_AGENT"."LEVEL_ID" "LSLE_ID"
				 FROM "EKA"."V_AGENT"  
				 WHERE 
				 "EKA"."V_AGENT"."STS_AKTIF"=1  and
				 "EKA"."V_AGENT"."AGENT_ID" = #value#
				 ORDER BY "EKA"."V_AGENT"."AGENT_ID",
					  trim("EKA"."V_AGENT"."NAMA")
	</select>
	
	<!-- Select nama pp-->	
 	<select id="elions.bac.selectnamapp" resultClass="java.util.HashMap" parameterClass="string">
                 select a.mspo_policy_holder,b.mcl_first 
        			from eka.mst_policy a, eka.mst_client_new b 
    			where a.mspo_policy_no=#nopol# 
     			and a.mspo_policy_holder=b.mcl_id 
	</select>		 
	
	<select id="elions.bac.selectTingkatanAgent" parameterClass="string" resultClass="java.util.HashMap">
				SELECT   *
			      FROM   eka.mst_agent
			START WITH   msag_id = #value#
			CONNECT BY   prior mst_leader = msag_id
	</select>
	
	<select id="elions.bac.selectMsagLeader" resultClass="string" parameterClass="string">
				SELECT MST_LEADER
				FROM EKA.MST_AGENT
				WHERE MSAG_ID = #value#
	</select>
	
	<select id="elions.bac.selectagenleader" resultClass="string" parameterClass="string">
	                  select b.mcl_first
						from eka.mst_agent a,
							 eka.mst_client_new b
						where a.mcl_id = b.mcl_id
						and a.msag_id = #value#
	</select>

		<resultMap id="elions.bac.selectao_list1" class="java.util.HashMap">
			<result property="nama" column="nama" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                                      
			<result property="mst_leader" column="mst_leader" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                              
			<result property="lstb_id" column="lstb_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
			<result property="lsle_id" column="lsle_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
			<result property="id" column="id" javaType="string" jdbcType="CHAR" nullValue=""/>   			
		</resultMap>
		
	<select id="elions.bac.selectagenao_list" resultMap="elions.bac.selectao_list1" parameterClass="java.util.HashMap">
                 SELECT "EKA"."V_AGENT"."AGENT_ID" "ID",   
		         trim("EKA"."V_AGENT"."NAMA") "NAMA",   
		         "EKA"."V_AGENT"."LEAD_ID" "MST_LEADER",   
		         "EKA"."V_AGENT"."TABLE_ID" "LSTB_ID",   
		         "EKA"."V_AGENT"."LEVEL_ID" "LSLE_ID"
				 FROM "EKA"."V_AGENT"  
				 WHERE EKA."V_AGENT"."JENIS" <![CDATA[<]]>5   and
				 "EKA"."V_AGENT"."STS_AKTIF"=1  
				 ORDER BY "EKA"."V_AGENT"."AGENT_ID",
					  trim("EKA"."V_AGENT"."NAMA")	
	</select>
	
		<resultMap id="elions.bac.selectregional2" class="java.util.HashMap">
			<result property="LSRG_NAMA" column="LSRG_NAMA" javaType="string" jdbcType="VARCHAR2" nullValue=""/>	
		</resultMap>

	<!-- Select nama region -->
	<select id="elions.bac.selectregional" resultMap="elions.bac.selectregional2" parameterClass="java.util.HashMap">
		SELECT EKA.LST_REGION.LSRG_NAMA
		FROM EKA.LST_REGION
		WHERE EKA.LST_REGION.LCA_ID||EKA.LST_REGION.LWK_ID||EKA.LST_REGION.LSRG_ID = #kode_regional# 
	</select> 

		<resultMap id="elions.bac.select.regionalagen1" class="java.util.HashMap">
			<result property="STRBRANCH" column="STRBRANCH" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
			<result property="STRWILAYAH" column="STRWILAYAH" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
			<result property="STRREGION" column="STRREGION" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
			<result property="STRAGENTBRANCH" column="STRAGENTBRANCH" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
		</resultMap>

	<!-- Select nama region agen-->
	<select id="elions.bac.select.regionalagen" resultMap="elions.bac.select.regionalagen1" parameterClass="java.util.HashMap">
		SELECT EKA.MST_AGENT.LCA_ID "STRBRANCH", 
		EKA.MST_AGENT.LWK_ID "STRWILAYAH", 
		EKA.MST_AGENT.LSRG_ID "STRREGION", 
		EKA.MST_AGENT.LCA_ID || EKA.MST_AGENT.LWK_ID "STRAGENTBRANCH"
		FROM EKA.MST_AGENT
		WHERE EKA.MST_AGENT.MSAG_ID = #kodeagen#
	</select> 


	<!-- Select counter-->
	<select id="elions.bac.select.counter" resultClass="long" parameterClass="java.util.HashMap">
		SELECT	EKA.MST_COUNTER.MSCO_VALUE 
		FROM 	EKA.MST_COUNTER
		WHERE	EKA.MST_COUNTER.MSCO_NUMBER = 1 AND 
			EKA.MST_COUNTER.LCA_ID = #kodecbg# FOR UPDATE
	</select> 		

	<!-- Select counter, client id-->
	<select id="elions.bac.select.counter_client_id" resultClass="long" parameterClass="java.util.HashMap">
		SELECT EKA.MST_COUNTER.MSCO_VALUE
		FROM EKA.MST_COUNTER
		WHERE EKA.MST_COUNTER.MSCO_NUMBER = 3 AND 
		EKA.MST_COUNTER.LCA_ID = #gc_strTmpBranch# FOR UPDATE
	</select> 
	
	<!-- Select counter, client id-->
	<select id="elions.bac.select.addmonths" resultClass="string" parameterClass="java.util.HashMap">
			SELECT ADD_MONTHS(#v_strBeginDate#, #ai_month#) "ldt_endpay" 
			FROM DUAL 
	</select> 	

		<resultMap id="elions.bac.select.mst_agent1" class="java.util.HashMap">
			<result property="LSTB_ID" column="LSTB_ID" javaType="int" jdbcType="NUMBER" />
			<result property="LSLE_ID" column="LSLE_ID" javaType="int" jdbcType="NUMBER" />
			<result property="MSAG_JENIS" column="MSAG_JENIS" javaType="int" jdbcType="NUMBER" />
			<result property="MST_LEADER" column="MST_LEADER" javaType="string" jdbcType="CHAR" nullValue=""/>
			<result property="MSAG_KOMISI" column="MSAG_KOMISI" javaType="int" jdbcType="NUMBER" />
			<result property="MSAG_FLAG_BM" column="MSAG_FLAG_BM" javaType="int" jdbcType="NUMBER" />
			<result property="MSAG_SBM" column="MSAG_SBM" javaType="int" jdbcType="NUMBER" />	
			<result property="LCA_ID" column="LCA_ID" javaType="string" jdbcType="CHAR" nullValue=""/>	
			<result property="MSAG_RM" column="MSAG_RM" javaType="string" jdbcType="CHAR" nullValue=""/>
			<result property="LVL_FCD" column="LVL_FCD" javaType="int" jdbcType="NUMBER" />	
		</resultMap>
		
	<select id="elions.bac.select.mst_agent" resultMap="elions.bac.select.mst_agent1" parameterClass="java.util.HashMap">
		  SELECT "EKA"."MST_AGENT"."LSTB_ID", 
		         "EKA"."MST_AGENT"."LSLE_ID",   
		         "EKA"."MST_AGENT"."MSAG_JENIS",  
		         (case when #flag# = 2 then "EKA"."MST_AGENT"."MST_LEADER_COMM" else "EKA"."MST_AGENT"."MST_LEADER" end)MST_LEADER, 
		         "EKA"."MST_AGENT"."MSAG_KOMISI",
				 "EKA"."MST_AGENT"."MSAG_FLAG_BM",
				 "EKA"."MST_AGENT"."MSAG_SBM",
				 "EKA"."MST_AGENT"."LCA_ID",
				 "EKA"."MST_AGENT"."MSAG_RM",
				 "EKA"."MST_AGENT"."LVL_FCD"
		    FROM "EKA"."MST_AGENT"  
		   WHERE EKA."MST_AGENT"."MSAG_ID" = #strTmpAgentId#	
	</select> 
	
			<resultMap id="elions.bac.select.lst_user1" class="java.util.HashMap">
				<result property="LUS_ID" column="LUS_ID" javaType="int" jdbcType="NUMBER" />
				<result property="LCA_ID" column="LCA_ID" javaType="string" jdbcType="CHAR" nullValue=""/>	
			</resultMap>

	<select id="elions.bac.select.lst_user" resultMap="elions.bac.select.lst_user1" parameterClass="java.util.HashMap">
		SELECT EKA.LST_USER.LUS_ID,
		EKA.LST_USER.LCA_ID
		FROM EKA.LST_USER
		WHERE EKA.LST_USER.LUS_LOGIN_NAME =#user_name#
	</select> 	

	<resultMap id="elions.bac.select.nik_karyawan1" class="java.util.HashMap">
		<result property="NIK" column="NIK" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                            
		<result property="MCL_FIRST" column="MCL_FIRST" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                            
		<result property="LCA_NAMA" column="LCA_NAMA" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                              
		<result property="LDE_DEPT" column="LDE_DEPT" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                              
		<result property="STS_KRY" column="STS_KRY" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
	</resultMap>

	<select id="elions.bac.select.karyawan_ekalife" resultClass="java.util.HashMap" parameterClass="string">
		select a.reg_spaj, b.mcl_first, c.nik
		from eka.mst_policy a , eka.mst_client_new b, eka.mst_worksite_flag c 
		where a.mspo_customer = b.mcl_id and a.reg_spaj = c.reg_spaj
		and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.bac.select.nik_karyawan" resultMap="elions.bac.select.nik_karyawan1" parameterClass="java.util.HashMap">
		SELECT a.NIK,
		       b.MCL_FIRST,
		       c.LCA_NAMA,
		       d.LDE_DEPT,
		       a.STS_KRY
		  FROM HRD.HRD_MST@absen a,
		       HRD.MST_CLIENT@absen b,
		       HRD.LST_CABANG@absen c,
		       HRD.LST_DEPARTMENT@absen d
		 WHERE     b.MCL_ID = a.MCL_ID
		       AND a.LCA_ID = c.LCA_ID
		       AND a.STS_KRY in ('U01', 'U02', 'U03', 'U09', '013')
		       AND a.LDE_ID = d.LDE_ID
		       AND a.NIK = #nik#
		 UNION
		SELECT a.MSAG_ID NIK,
			   b.MCL_FIRST,
			   c.LSRG_NAMA LCA_NAMA,
			   'AGENT' LDE_DEPT,
			   '1' STS_KRY
		  FROM EKA.MST_AGENT a,
		  	   EKA.MST_CLIENT_NEW b,
		  	   EKA.LST_REGION c
		 WHERE a.MSAG_ID = #nik#
		   AND a.MCL_ID = b.MCL_ID
		   AND a.LCA_ID = c.LCA_ID
		   AND a.LWK_ID = c.LWK_ID
		   AND a.LSRG_ID = c.LSRG_ID
		   AND a.MSAG_ACTIVE = 1
		   AND a.MSAG_SERTIFIKAT in (2,6,7,8)
	</select> 
	
	<resultMap id="elions.bac.select.nama_plan1" class="java.util.HashMap">
		<result property="LSDBS_NAME" column="LSDBS_NAME" javaType="string" jdbcType="VARCHAR2" nullValue=""/> 
	</resultMap>
	
	<select id="elions.bac.select.nama_plan" resultMap="elions.bac.select.nama_plan1" parameterClass="java.util.HashMap">
				SELECT EKA.LST_DET_BISNIS.LSDBS_NAME
				FROM EKA.LST_DET_BISNIS
				WHERE EKA.LST_DET_BISNIS.LSBS_ID=#kode_bisnis# AND
				EKA.LST_DET_BISNIS.LSDBS_NUMBER =#no_bisnis# 
	</select> 	

	<select id="elions.bac.select.bungasimponi" resultClass="date" parameterClass="java.util.HashMap">
           SELECT MAX("EKA"."LST_BUNGA"."LSBUN_TGL") ma
		   FROM "EKA"."LST_BUNGA"  
		   WHERE ( EKA."LST_BUNGA"."LSBUN_JENIS" = 8 ) AND
		         ( EKA."LST_BUNGA"."LKU_ID" = #kurs#) AND
		         ( TO_CHAR(EKA."LST_BUNGA"."LSBUN_TGL",'YYYYMMDD') <![CDATA[<=]]>  TO_CHAR(#tgl_begin_date_polis#,'YYYYMMDD') )   
	</select> 	

	<select id="elions.bac.select.bunga_simponi" resultClass="double" parameterClass="java.util.HashMap">
	   	SELECT "EKA"."LST_BUNGA"."LSBUN_BUNGA"
	      FROM "EKA"."LST_BUNGA"  
	      WHERE ( EKA."LST_BUNGA"."LSBUN_JENIS" = 8 ) AND
	            ( EKA."LST_BUNGA"."LKU_ID" = #kurs# ) AND
	            ( TO_CHAR(EKA."LST_BUNGA"."LSBUN_TGL",'YYYYMMDD') = TO_CHAR(#tgl_max#,'YYYYMMDD') )     
	</select> 		

<!-- titipan premi -->	
	<select id="elions.bac.select.flag_polis" resultClass="int" parameterClass="string">
		select eka.mst_insured.mste_flag_cc from eka.mst_insured where eka.mst_insured.reg_spaj=rpad(replace(#value#,'.'),11,' ')
	</select>

	<resultMap id="elions.bac.select.kursjualbeli1" class="java.util.HashMap">
		<result property="LKH_KURS_BELI" column="LKH_KURS_BELI" javaType="double" jdbcType="NUMBER" nullValue=""/>                                                                                                                                                     
		<result property="LKH_KURS_JUAL" column="LKH_KURS_JUAL" javaType="double" jdbcType="NUMBER" nullValue=""/>                                                                                                                                                     
		<result property="LKH_CURRENCY" column="LKH_CURRENCY" javaType="double" jdbcType="NUMBER" nullValue=""/>  
		<result property="LKU_ID" column="LKH_CURRENCY" javaType="string" jdbcType="CHAR" nullValue=""/>  
	</resultMap>

	<select id="elions.bac.select.kursjualbeli" resultMap="elions.bac.select.kursjualbeli1" parameterClass="java.util.HashMap">
			SELECT "EKA"."LST_DAILY_CURRENCY"."LKH_KURS_BELI" , 
				"EKA"."LST_DAILY_CURRENCY"."LKH_KURS_JUAL" ,
				"EKA"."LST_DAILY_CURRENCY"."LKH_CURRENCY"  ,
				EKA."LST_DAILY_CURRENCY"."LKU_ID"
			  FROM "EKA"."LST_DAILY_CURRENCY"  
			 WHERE (EKA."LST_DAILY_CURRENCY"."LKU_ID"=#kurs#) AND
			 ( EKA."LST_DAILY_CURRENCY"."LKH_DATE" =to_date(#tgl_kurs#,'DD/MM/YYYY') )   
			 ORDER BY EKA."LST_DAILY_CURRENCY"."LKU_ID"
	</select> 	


	<resultMap id="elions.bac.select_jumlah_premike1" class="java.util.HashMap">
		<result property="REG_SPAJ" column="REG_SPAJ" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                  
		<result property="MSDP_NUMBER" column="MSDP_NUMBER" javaType="int" jdbcType="NUMBER" />                                                                                                                                                         
		<result property="MSDP_JTP" column="MSDP_JTP" javaType="int" jdbcType="NUMBER" />                                                                                                                                                               
		<result property="LSJB_ID" column="LSJB_ID" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
		<result property="CLIENT_BANK" column="CLIENT_BANK" javaType="string" jdbcType="VARCHAR2"  nullValue=""/>                                                                                                                                                         
		<result property="MSDP_NO_REK" column="MSDP_NO_REK" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                        
		<result property="MSDP_PAY_DATE" column="MSDP_PAY_DATE" javaType="date" jdbcType="DATE" />                                                                                                                                                      
		<result property="MSDP_DUE_DATE" column="MSDP_DUE_DATE" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                                        
		<result property="MSDP_DATE_BOOK" column="MSDP_DATE_BOOK" javaType="date" jdbcType="DATE" />                                                                                                                                                    
		<result property="LKU_ID" column="LKU_ID" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                      
		<result property="MSDP_PAYMENT" column="MSDP_PAYMENT" javaType="double" jdbcType="NUMBER" />                                                                                                                                                    
		<result property="MSDP_SELISIH_KURS" column="MSDP_SELISIH_KURS" javaType="double" jdbcType="NUMBER" />                                                                                                                                          
		<result property="MSDP_INPUT_DATE" column="MSDP_INPUT_DATE" javaType="date" jdbcType="DATE" />                                                                                                                                                  
		<result property="MSDP_OLD_POLICY" column="MSDP_OLD_POLICY" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                
		<result property="MSDP_DESC" column="MSDP_DESC" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                            
		<result property="LUS_ID" column="LUS_ID" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                   
		<result property="MSDP_ACTIVE" column="MSDP_ACTIVE" javaType="int" jdbcType="NUMBER" />                                                                                                                                                         
		<result property="LSREK_ID" column="LSREK_ID" javaType="int" jdbcType="NUMBER" />                                                                                                                                                               
		<result property="MSDP_FLAG" column="MSDP_FLAG" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                
		<result property="MSDP_NO_PRE" column="MSDP_NO_PRE" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                        
		<result property="MSDP_JURNAL" column="MSDP_JURNAL" javaType="int" jdbcType="NUMBER" />                                                                                                                                                         
		<result property="MSDP_NO_VOUCHER" column="MSDP_NO_VOUCHER" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                
		<result property="NO_KTTP" column="NO_KTTP" javaType="string" jdbcType="VARCHAR2" nullValue=""/>    
		<result property="ACC_NO" column="ACC_NO" javaType="string" jdbcType="VARCHAR2" nullValue=""/>  	
		<result property="KODE" column="KODE" javaType="string" jdbcType="VARCHAR2" nullValue=""/>  	
	</resultMap>
	
	<select id="elions.bac.select_jumlah_premike" resultMap="elions.bac.select_jumlah_premike1" parameterClass="java.util.HashMap">
			   SELECT "EKA"."MST_DEPOSIT_PREMIUM"."REG_SPAJ",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_NUMBER",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_JTP",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."LSJB_ID",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."CLIENT_BANK",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_NO_REK",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_PAY_DATE",   
			         to_char("EKA"."MST_DEPOSIT_PREMIUM"."MSDP_DUE_DATE",'DD/MM/YYYY') MSDP_DUE_DATE,   
			         "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_DATE_BOOK",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."LKU_ID",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_PAYMENT",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_SELISIH_KURS",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_INPUT_DATE",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_OLD_POLICY",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_DESC",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."LUS_ID",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_ACTIVE",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."LSREK_ID",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_FLAG",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_NO_PRE",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_JURNAL",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_NO_VOUCHER",   
			         "EKA"."MST_DEPOSIT_PREMIUM"."NO_KTTP" ,
					 replace(replace(trim(eka.lst_rek_ekalife.lre_acc_no),'.',''),'-','') "ACC_NO",
					 SUBSTR(REPLACE(REPLACE(REPLACE(eka.lst_rek_ekalife.lre_acc_no,'-',''),'.',''),' ','') ,-4) "KODE"
			    FROM "EKA"."MST_DEPOSIT_PREMIUM",
				eka.lst_rek_ekalife  
			   WHERE EKA."MST_DEPOSIT_PREMIUM"."REG_SPAJ" = rpad(replace(#spaj#,'.'),11,' ')
			   and "EKA"."MST_DEPOSIT_PREMIUM"."LSREK_ID" = eka.lst_rek_ekalife.lsrek_id order by "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_NUMBER" asc 
	</select> 	
	
	<select id="elions.bac.selectUserTtpPremi" resultClass="java.util.HashMap">
		select distinct lus_id from EKA.LST_JOB_PIC where ljj_id in (21,25) and lspd_id in (202,210) and active = 1	
	</select>
	
	<resultMap id="elions.bac.select_rek_ekal1" class="java.util.HashMap">
		<result property="ACC_NO" column="ACC_NO" javaType="string" jdbcType="VARCHAR2" nullValue=""/>  	
		<result property="KODE" column="KODE" javaType="string" jdbcType="VARCHAR2" nullValue=""/>  
		<result property="KODE2" column="KODE2" javaType="string" jdbcType="VARCHAR2" nullValue=""/> 	
	</resultMap>
	
	<select id="elions.bac.select_rek_ekal" resultMap="elions.bac.select_rek_ekal1" parameterClass="java.util.HashMap">
	select 
	replace(replace(trim(eka.lst_rek_ekalife.lre_acc_no),'.',''),'-','') "ACC_NO",
	substr(replace(replace(eka.lst_rek_ekalife.lre_acc_no,'.',''),'-',''), length(replace(replace(eka.lst_rek_ekalife.lre_acc_no,'.',''),'-',''))-3) "KODE",
	substr(replace(replace(eka.lst_rek_ekalife.lre_acc_no,'.',''),'-',''), length(replace(replace(eka.lst_rek_ekalife.lre_acc_no,'.',''),'-',''))-4) "KODE2"
	from eka.lst_rek_ekalife where lsrek_id = #lsrek_id#
	</select>
	
	<select id="elions.bac.selectTransDobleTU" resultClass="string" parameterClass="java.util.HashMap">
		SELECT ('Transaksi yang sama sudah pernah diinput sebelumnya dengan  Top-Up No Trx '
             || no_trx
             || ', Oleh '
             || eka.utils.user_input (lus_id)
             || '. Mohon dipastikan tidak double input!')warning
          FROM   eka.mst_slink
         WHERE msl_kode = 5
         AND reg_spaj = #spaj#
         AND msl_bdate = #msl_bdate#
         AND msl_premi = #msl_premi# 
         union
         SELECT ('Transaksi yang sama sudah pernah diinput sebelumnya dengan  Top-Up No Trx '
             || mps_no_trx
             || ', Oleh '
             || eka.utils.user_input (lus_id)
             || '. Mohon dipastikan tidak double input!')warning
          FROM   eka.mst_psave
         WHERE mps_kode = 5
         AND reg_spaj = #spaj#
         AND mps_bdate = #msl_bdate#
         AND mps_premi = #msl_premi#    
    </select>
    
	<select id="elions.bac.select.premike" resultClass="com.ekalife.elions.model.DetailPembayaran" parameterClass="java.util.HashMap">
		SELECT eka.mst_deposit_premium.reg_spaj, 
			   eka.mst_deposit_premium.msdp_number no_ke,
		       eka.mst_deposit_premium.msdp_jtp jenis_ttp, 
		       eka.mst_deposit_premium.lsjb_id cara_bayar,
		       eka.mst_deposit_premium.client_bank,
		       eka.mst_deposit_premium.msdp_no_rek no_rek,
		       eka.mst_deposit_premium.msdp_pay_date tgl_bayar,
		       to_char(eka.mst_deposit_premium.msdp_due_date,'DD/MM/YYYY') tgl_jatuh_tempo,
		       eka.mst_deposit_premium.msdp_date_book tgl_rk, 
		       eka.mst_deposit_premium.lku_id kurs,
		       eka.mst_deposit_premium.msdp_payment jml_bayar,
		       eka.mst_deposit_premium.msdp_selisih_kurs nilai_kurs,
		       eka.mst_deposit_premium.msdp_input_date tgl_skrg,
		       eka.mst_deposit_premium.msdp_old_policy ref_polis_no,
		       eka.mst_deposit_premium.msdp_desc keterangan, 
		       eka.mst_deposit_premium.lus_id,
		       eka.mst_deposit_premium.msdp_active aktif , 
		       eka.mst_deposit_premium.lsrek_id bank,
		       eka.mst_deposit_premium.msdp_flag status, 
		       eka.mst_deposit_premium.msdp_no_pre,
		       eka.mst_deposit_premium.msdp_jurnal,
		       eka.mst_deposit_premium.msdp_no_voucher,
		       eka.mst_deposit_premium.no_kttp,
		       eka.mst_deposit_premium.msdp_payment*eka.mst_deposit_premium.msdp_selisih_kurs total_bayar,
		       SUBSTR(REPLACE(REPLACE(REPLACE(d.lre_acc_no,'-',''),'.',''),' ','') ,-5) "KODE",
			   replace(replace(replace(d.lre_acc_no,'.',''),'-',''),' ','') "ACC_NO",
 			   eka.lst_user.lus_login_name,
 			   eka.mst_deposit_premium.msdp_flag_topup,
 			   eka.mst_deposit_premium.msdp_flag_merchant
		  FROM eka.mst_deposit_premium, eka.lst_rek_ekalife d, eka.lst_user
			   WHERE EKA."MST_DEPOSIT_PREMIUM"."REG_SPAJ" = rpad(replace(#spaj#,'.'),11,' ') and
			   "EKA"."MST_DEPOSIT_PREMIUM"."MSDP_NUMBER" = #ke# and eka.mst_deposit_premium.lsrek_id = d.lsrek_id(+)
			   and eka.mst_deposit_premium.lus_id = eka.lst_user.lus_id
	</select>

	<resultMap id="elions.bac.select.mst_bayar_tahapan1" class="java.util.HashMap">
		<result property="MSTAH_TAHAPAN_KE" column="MSTAH_TAHAPAN_KE" javaType="int" jdbcType="NUMBER" />                                                                                                                                               
		<result property="LSJTA_ID" column="LSJTA_ID" javaType="int" jdbcType="NUMBER" />                                                                                                                                                               
		<result property="MSBAT_JUMLAH" column="MSBAT_JUMLAH" javaType="double" jdbcType="NUMBER" />                                                                                                                                                    
		<result property="MSTAH_NO_TAHAPAN" column="MSTAH_NO_TAHAPAN" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                  
		<result property="MSTAH_TGL_KONFIRMASI" column="MSTAH_TGL_KONFIRMASI" javaType="date" jdbcType="DATE" />                                                                                                                                        
		<result property="LKU_ID" column="LKU_ID" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                      
		<result property="MSPO_POLICY_NO" column="MSPO_POLICY_NO" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                  
		<result property="REG_SPAJ" column="REG_SPAJ" javaType="string" jdbcType="CHAR" nullValue=""/>  
	</resultMap>
	
	<select id="elions.bac.select.mst_bayar_tahapan" resultMap="elions.bac.select.mst_bayar_tahapan1" parameterClass="java.util.HashMap">
		SELECT   eka.mst_bayar_tahapan.reg_spaj,  
		       eka.mst_bayar_tahapan.mstah_tahapan_ke ,      
	   			 eka.mst_bayar_tahapan.lsjta_id,   
				 eka.mst_bayar_tahapan.msbat_jumlah, 
				 eka.mst_tahapan.mstah_no_tahapan,   
				 eka.mst_tahapan.mstah_tgl_konfirmasi,   
				 eka.mst_policy.lku_id  ,eka.mst_policy.mspo_policy_no
	  FROM EKA.MST_POLICY, EKA.MST_TAHAPAN, EKA.MST_BAYAR_TAHAPAN  
	  WHERE ( EKA.MST_TAHAPAN.REG_SPAJ = EKA.MST_POLICY.REG_SPAJ ) and   
			( EKA.MST_BAYAR_TAHAPAN.REG_SPAJ = EKA.MST_TAHAPAN.REG_SPAJ ) and  
			( EKA.MST_BAYAR_TAHAPAN.MSTAH_TAHAPAN_KE = EKA.MST_TAHAPAN.MSTAH_TAHAPAN_KE ) and   
			( ( EKA.MST_POLICY.MSPO_POLICY_NO = #nopolis# ) AND    
			( EKA.MST_TAHAPAN.LSPD_ID = 20 ) AND  
			( EKA.MST_BAYAR_TAHAPAN.LSJTA_ID = 4 ) )
	</select>
	
	<select id="elions.bac.select.countmstcontrolpayment" resultClass="int" parameterClass="java.util.HashMap">
		SELECT COUNT(*) hitung
	  	FROM EKA.MST_CONTROL_PAYMENT
  		WHERE (#no_kttp# <![CDATA[>=]]> TO_NUMBER(NOMOR_DARI) AND TO_NUMBER(NOMOR_DARI) <![CDATA[<=]]> #no_kttp#)
	 	AND (TO_NUMBER(NOMOR_KE) <![CDATA[>=]]> #no_kttp# )
	</select>

	<resultMap id="elions.bac.select.ceknokttp1" class="java.util.HashMap">
			<result property="SPAJ_S" column="SPAJ_S" javaType="string" jdbcType="CHAR" nullValue=""/>   
	</resultMap>
	
	<select id="elions.bac.select.ceknokttp" resultMap="elions.bac.select.ceknokttp1" parameterClass="java.util.HashMap">
	 	SELECT DISTINCT "EKA"."MST_DEPOSIT_PREMIUM"."REG_SPAJ" spaj_s 
    	FROM "EKA"."MST_DEPOSIT_PREMIUM"  
   		WHERE EKA."MST_DEPOSIT_PREMIUM"."NO_KTTP" = #no_kttp#    
   	</select>

	<resultMap id="elions.bac.select.cekflagcc1" class="java.util.HashMap">
		<result property="REG_SPAJ" column="REG_SPAJ" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                  
		<result property="MSTE_FLAG_CC" column="MSTE_FLAG_CC" javaType="int" jdbcType="NUMBER" nullValue="0"/>                                                                                                                                                       
		<result property="LSBS_ID" column="LSBS_ID" javaType="int" jdbcType="NUMBER" />    
	</resultMap>
	
	<select id="elions.bac.select.cekflagcc" resultMap="elions.bac.select.cekflagcc1" parameterClass="java.util.HashMap">
		select eka.mst_insured.reg_spaj,   
	         eka.mst_insured.mste_flag_cc,   
	         eka.mst_product_insured.lsbs_id
	    FROM "EKA"."MST_INSURED",   
	         "EKA"."MST_PRODUCT_INSURED"  
	   WHERE ( "EKA"."MST_PRODUCT_INSURED"."REG_SPAJ" = "EKA"."MST_INSURED"."REG_SPAJ" ) and  
	         ( "EKA"."MST_PRODUCT_INSURED"."MSTE_INSURED_NO" = "EKA"."MST_INSURED"."MSTE_INSURED_NO" ) and  
	         ( ( EKA."MST_INSURED"."REG_SPAJ" = rpad(replace(#spaj#,'.'),11,' ') ) )    
	 </select>

<resultMap id="elions.bac.selectsumber_kyc1" class="com.ekalife.elions.model.Pemegang" >
<!--	<result property="jmlkyc" column="jmlkyc" javaType="int" jdbcType="NUMBER" nullValue="0"/>-->
	<result property="daftarKyc" column="reg_spaj" select="elions.bac.selectDaftar_kyc" ></result>
	<result property="daftarKyc2" column="reg_spaj" select="elions.bac.selectDaftar_kyc2" ></result>
</resultMap>

<!-- .......................................kyc........................................... -->
<!-- Sumber pendanaan pembeliaan asuransi -->
<select id="elions.bac.selectDaftar_kyc" resultClass="com.ekalife.elions.model.SumberKyc" parameterClass="string">
	SELECT a.reg_spaj, a.no_urut, a.kyc_id, a.kyc_pp,
		(a.no_urut || '~Z'|| a.kyc_id)As p_kyc, a.kyc_desc, a.kyc_desc kyc_desc_x, b.kyc_name
	FROM eka.mst_kyc a,
		 eka.lst_kyc b
	WHERE(a.kyc_id = 1)
	  AND(a.kyc_pp = 0 AND a.no_urut != 10)	
	  AND(a.kyc_id = b.kyc_id)
	  AND(a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')) 
</select>

<!-- Sumber penghasilan -->
<select id="elions.bac.selectDaftar_kyc2" resultClass="com.ekalife.elions.model.SumberKyc" parameterClass="string">
	SELECT a.reg_spaj, a.no_urut, a.kyc_id, a.kyc_pp,
		(a.no_urut || '~Z'|| a.kyc_id)As p_kyc, a.kyc_desc,a.kyc_desc kyc_desc2_x, b.kyc_name
	FROM eka.mst_kyc a,
		 eka.lst_kyc b
	WHERE(a.kyc_id = 2)
	  AND(a.kyc_pp = 0 AND a.no_urut != 20)
	  AND(a.kyc_id = b.kyc_id)
	  AND(a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')) 
</select>

<!-- Sumber penghasilan Pembayar Premi-->
<select id="elions.bac.selectDaftar_kyc_pprm" resultClass="com.ekalife.elions.model.SumberKyc" parameterClass="string">
	SELECT a.reg_spaj, a.no_urut, a.kyc_id, a.kyc_pp,
	(a.no_urut || '~Z'|| a.kyc_id)As p_kyc, a.kyc_desc
	FROM eka.mst_kyc a
	WHERE (a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')) 
	and kyc_pp =0
</select>

	<!-- eka.mst_client_new.mkl_smbr_penghasilan smbrhasil -->
	<select id="elions.bac.selectpp" resultClass="com.ekalife.elions.model.Pemegang" parameterClass="string">
			select distinct  eka.mst_policy.mspo_nasabah_dcif,eka.mst_client_new.mcl_first, eka.mst_client_new.lti_id, eka.mst_client_new.mcl_id,
            nvl(eka.mst_client_new.mkl_kerja,'LAINNYA')mkl_kerja ,eka.mst_policy.mspo_input_date, eka.mst_policy.mspo_no_pengiriman,
            decode(mst_client_new.mkl_kerja,'KARYAWAN SWASTA', eka.mst_client_new.mpn_job_desc,decode(eka.lst_jabatan.ljb_note,'','-',eka.lst_jabatan.ljb_note)) KERJAB,
            eka.mst_client_new.mkl_tujuan,
            eka.mst_client_new.mcl_jenis,
            eka.mst_client_new.mkl_tujuan tujuana,
            eka.mst_client_new.mcl_agama,
            eka.mst_client_new.mcl_green_card,
            eka.mst_policy.mspo_korespondensi,
            eka.mst_client_new.mcl_npwp,
             eka.mst_client_new.mkl_penghasilan , eka.mst_client_new.mkl_pendanaan ,
             eka.mst_client_new.mkl_smbr_penghasilan,
             eka.mst_client_new.mkl_smbr_penghasilan shasil,
             eka.mst_client_new.mkl_pendanaan danaa,
             eka.mst_client_new.mkl_pendanaan danaa2,
             eka.mst_client_new.mkl_industri , eka.mst_client_new.mkl_industri industria,
               eka.mst_client_new.mspe_no_identity, eka.mst_client_new.mspe_no_identity_expired, eka.mst_client_new.lside_id,
               eka.mst_client_new.mspe_place_birth,
                eka.mst_client_new.mspe_sex, decode(eka.mst_client_new.mspe_sex,1,'PRIA','WANITA') mspe_sex2,
                    eka.mst_client_new.mkl_dana_from, decode(eka.mst_client_new.mkl_dana_from,1,'DIRI SENDIRI','BUKAN DIRI SENDIRI') mkl_dana_from2,
                   eka.mst_client_new.mkl_hasil_from, decode(eka.mst_client_new.mkl_hasil_from,1,'DIRI SENDIRI','BUKAN DIRI SENDIRI') mkl_hasil_from2,
                   eka.mst_client_new.mkl_smbr_hasil_from, decode(eka.mst_client_new.mkl_smbr_hasil_from,1,'DIRI SENDIRI','BUKAN DIRI SENDIRI') mkl_smbr_hasil_from2,
                eka.mst_client_new.mkl_sumber_premi, decode(eka.mst_client_new.mkl_sumber_premi,1,'PERORANGAN','BADAN HUKUM/USAHA') mkl_sumber_premi2,
                eka.mst_client_new.lsre_id_premi,
               eka.mst_client_new.mspe_date_birth, eka.mst_client_new.mspe_sex, decode(eka.mst_client_new.mspe_sex,1,'PRIA','WANITA') mspe_sex2,
               eka.mst_client_new.mspe_sts_mrt, eka.mst_policy.mspo_umur_beasiswa,
               eka.lst_grp_job.lgj_note,eka.lst_grp_job.lgj_id, eka.mst_client_new.mspe_lama_kerja,
               eka.lst_identity.lside_name, eka.lst_negara.lsne_note,eka.lst_negara.lsne_id,
               eka.mst_client_new.mcl_gelar, eka.mst_client_new.mpn_job_desc,
               eka.mst_client_new.mspe_mother, eka.mst_address_new.alamat_rumah,
               eka.mst_address_new.kd_pos_rumah, eka.mst_address_new.kota_rumah,
               eka.mst_address_new.kota_rumah kota_rumaha,
               eka.mst_address_new.area_code_rumah, eka.mst_address_new.telpon_rumah,
               eka.mst_address_new.alamat_kantor, eka.mst_address_new.kd_pos_kantor,
               eka.mst_address_new.kota_kantor,
               eka.mst_address_new.kota_kantor kota_kantora,
                eka.mst_address_new.no_hp2,
               eka.mst_address_new.no_hp, eka.mst_address_new.email,
               eka.mst_address_new.area_code_kantor,
               eka.mst_address_new.telpon_kantor, 
               eka.mst_address_new.alamat_tpt_tinggal,
               eka.mst_address_new.kota_tpt_tinggal,
               eka.mst_address_new.kd_pos_tpt_tinggal,
               eka.mst_policy.reg_spaj,
               eka.mst_insured.mste_insured_no,
               eka.mst_insured.mste_spaj_asli,
               eka.mst_insured.mste_standard, eka.mst_policy.mspo_age mste_age,
               eka.lst_agama.lsag_name,lst_agama.lsag_id, eka.lst_education.lsed_name,eka.lst_education.lsed_id,
               eka.lst_jabatan.ljb_id, eka.lst_relation.lsre_id,eka.lst_relation.lsre_relation,
               eka.mst_agent.msag_id, eka.mst_agent.lca_id, eka.mst_agent.lwk_id,
               eka.mst_agent.lsrg_id,eka.mst_policy.lscb_id,eka.mst_policy.mspo_policy_no,eka.mst_policy.mspo_policy_holder,
               eka.mst_policy.mspo_no_blanko,
               eka.mst_insured.mste_tgl_recur,
               eka.mst_policy.mspo_under_table,
               eka.mst_policy.mspo_under_table bonus_tahapan,
               eka.mst_policy.mspo_pribadi,
                eka.mst_policy.lus_id,
               eka.mst_policy.mspo_follow_up,
               eka.mst_policy.mspo_ao,
               eka.mst_policy.mspo_age,
               eka.mst_policy.lssp_id,
               eka.mst_policy.mspo_nasabah_acc,
               b.mcl_first nama_ao,
               eka.mst_policy.mspo_ref_bii,
               eka.mst_policy.mspo_spaj_date,
               eka.mst_policy.mspo_komisi_bii,
                eka.mst_address_new.area_code_rumah2,
                eka.mst_address_new.telpon_rumah2,
                eka.mst_address_new.area_code_kantor2,
                eka.mst_address_new.telpon_kantor2,
                eka.mst_address_new.no_fax,
                 eka.mst_address_new.area_code_fax,
                eka.mst_policy.mspo_customer,
                eka.mst_worksite_flag.nik,
                eka.mst_insured.mste_pct_dplk,
                eka.mst_policy.mspo_jenis_terbit,
                eka.mst_client_new.mspe_email,
                (select count(*) from eka.mst_kyc
                    where kyc_id = 1
                    AND (no_urut != 10 AND kyc_pp = 0)
                    AND reg_spaj=rpad(replace(#value#,'.'),11,' ')) jmlkyc,
                (select count(*) from eka.mst_kyc
                    where kyc_id = 2
                    AND (no_urut != 20 AND kyc_pp = 0)
                    AND reg_spaj=rpad(replace(#value#,'.'),11,' ')) jmlkyc2,
                eka.mst_insured.mste_flag_guthrie,
                 t1.*,t2.*,
                eka.mst_policy.mspo_customer sumber_id,
                c.mcl_first nama_sumber,
                eka.mst_policy.mspo_leader,
                eka.mst_policy.mspo_plan_provider,
                eka.mst_policy.msag_asnew,
                nvl(eka.mst_policy.mspo_flag_spaj,0)mspo_flag_spaj,
                eka.mst_client_new.mcl_first_alias,
                eka.mst_client_new.mcl_company_name,
                eka.mst_client_new.mkl_kerja_ket,
				(select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and  kyc_pp=2 and kyc_desc='GAJI')  bulan_gaji,
				(select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and  kyc_pp=2 and kyc_desc='TABUNGAN/DEPOSITO')  bulan_penghasilan,
				(select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and  kyc_pp=2 and kyc_desc='WARISAN')  bulan_orangtua,
				(select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and  kyc_pp=2 and kyc_desc='HIBAH')  bulan_usaha,
				(select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and  kyc_pp=2 and kyc_desc='LAINNYA')  bulan_lainnya,
				(select substr(kyc_desc,9) from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and  kyc_pp=2 and kyc_desc LIKE 'LAINNYA%')  bulan_lainnya_note,
				(select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and  kyc_pp=2 and kyc_desc='INVESTASI')  tujuan_investasi,
				(select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and kyc_pp=2 and kyc_desc='PROTEKSI')  tujuan_proteksi,
				(select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and kyc_pp=2 and kyc_desc like'LAINNYA%')  tujuan_lainnya,
				eka.mst_policy.cf_job_code, eka.mst_policy.cf_customer_id, eka.mst_policy.cf_campaign_code,
				eka.mst_policy.mspo_id_sponsor, eka.mst_policy.mspo_id_place, eka.mst_policy.pega_case_id
          from eka.mst_address_new,
               eka.mst_client_new,
               eka.mst_insured,
               eka.mst_policy,
               eka.lst_negara,
               eka.lst_grp_job,
               eka.lst_identity,
               eka.lst_jabatan,
               eka.lst_agama,
               eka.lst_education,
               eka.lst_relation,
               eka.mst_agent,
               eka.lst_pekerjaan,
               eka.mst_agent_prod,
               eka.mst_agent a,
               eka.mst_client_new b,
               eka.mst_client_new c,
               eka.mst_worksite_flag,
            (select si.reg_spaj,si.nama "nama_si",si.lsre_id "hubungan_si",si.tanggal_lahir "tgllhr_si",
            anak_1.nama "nama_anak1",anak_1.lsre_id "hubungan_anak1", anak_1.tanggal_lahir "tgllhr_anak1",
            anak_2.nama "nama_anak2",anak_2.lsre_id "hubungan_anak2", anak_2.tanggal_lahir "tgllhr_anak2",
            anak_3.nama "nama_anak3",anak_3.lsre_id "hubungan_anak3", anak_3.tanggal_lahir "tgllhr_anak3"
            from                
            (select reg_spaj ,nama,lsre_id,tanggal_lahir 
            from eka.mst_keluarga 
            where lsre_id = 5 and no = 0 and insured = 1)si,
            (select reg_spaj,nama,lsre_id,tanggal_lahir 
            from eka.mst_keluarga 
            where lsre_id = 4 and no = 1 and insured = 1)anak_1,
            (select reg_spaj,nama,lsre_id,tanggal_lahir 
            from eka.mst_keluarga 
            where lsre_id = 4 and no = 2 and insured = 1)anak_2,
            (select reg_spaj,nama,lsre_id,tanggal_lahir 
            from eka.mst_keluarga 
            where lsre_id = 4 and no = 3 and insured = 1)anak_3
            where si.reg_spaj = anak_1.reg_spaj (+) and
            si.reg_spaj = anak_2.reg_spaj (+)and
            si.reg_spaj = anak_3.reg_spaj (+)    ) t1,(SELECT   a.reg_spaj no_spaj_insured
        ,suami.nama nama_suami,
         suami.tanggal_lahir tgl_suami,
         suami.USIA usia_suami,
         suami.KERJA pekerjaan_suami,
         suami.LJB_ID jabatan_suami,
         suami.NAMA_PERUSAHAAN perusahaan_suami,
         suami.BIDANG_USAHA bidang_suami,
         suami.NPWP npwp_suami,
         suami.PENGHASILAN penghasilan_suami,
         ayah.nama nama_ayah,
         ayah.tanggal_lahir tgl_ayah,
         ayah.USIA usia_ayah,
         ayah.KERJA pekerjaan_ayah,
         ayah.LJB_ID jabatan_ayah,
         ayah.NAMA_PERUSAHAAN perusahaan_ayah,
         ayah.BIDANG_USAHA bidang_ayah,
         ayah.NPWP npwp_ayah,
         ayah.PENGHASILAN penghasilan_ayah,
         ibu.nama nama_ibu,
         ibu.tanggal_lahir tgl_ibu,
         ibu.USIA usia_ibu,
         ibu.KERJA pekerjaan_ibu,
         ibu.LJB_ID jabatan_ibu,
         ibu.NAMA_PERUSAHAAN perusahaan_ibu,
         ibu.BIDANG_USAHA bidang_ibu,
         ibu.NPWP npwp_ibu,
         ibu.PENGHASILAN penghasilan_ibu
  FROM   (SELECT   reg_spaj,
                   nama,
                   tanggal_lahir,
                   USIA,
                   KERJA,
                   LJB_ID,
                   NAMA_PERUSAHAAN,
                   BIDANG_USAHA,
                   NPWP,
                   PENGHASILAN
            FROM   eka.mst_keluarga
           WHERE   lsre_id = 5 AND no = 0 AND insured = 0) suami,
         (SELECT   reg_spaj,
                   nama,
                   tanggal_lahir,
                   USIA,
                   KERJA,
                   LJB_ID,
                   NAMA_PERUSAHAAN,
                   BIDANG_USAHA,
                   NPWP,
                   PENGHASILAN
            FROM   eka.mst_keluarga
           WHERE   lsre_id = 2 AND no = 1 AND insured = 0) ayah,
         (SELECT   reg_spaj,
                   nama,
                   tanggal_lahir,
                   USIA,
                   KERJA,
                   LJB_ID,
                   NAMA_PERUSAHAAN,
                   BIDANG_USAHA,
                   NPWP,
                   PENGHASILAN
            FROM   eka.mst_keluarga
           WHERE   lsre_id = 2 AND no = 2 AND insured = 0) ibu,
           eka.mst_insured a
 WHERE   
     a.reg_spaj = suami.reg_spaj(+) 
    AND a.reg_spaj = ayah.reg_spaj(+)
    AND a.reg_spaj = ibu.reg_spaj(+))t2
         where (eka.mst_client_new.mcl_id = eka.mst_address_new.mcl_id)
           and (eka.mst_policy.reg_spaj = eka.mst_insured.reg_spaj)
           and (eka.lst_negara.lsne_id(+) = eka.mst_client_new.lsne_id)
           and (eka.lst_grp_job.lgj_id(+) = eka.mst_client_new.lgj_id)
           and (eka.lst_identity.lside_id(+) = eka.mst_client_new.lside_id)
           and (eka.mst_policy.mspo_policy_holder = eka.mst_client_new.mcl_id)
           and (eka.mst_client_new.lsag_id = eka.lst_agama.lsag_id(+))
           and (eka.mst_client_new.lsed_id = eka.lst_education.lsed_id(+))
           and (eka.mst_policy.lsre_id = eka.lst_relation.lsre_id(+))
           and (eka.mst_client_new.ljb_id = eka.lst_jabatan.ljb_id(+))
           and eka.mst_agent.msag_id = eka.mst_agent_prod.msag_id
           and eka.mst_policy.reg_spaj = eka.mst_agent_prod.reg_spaj
           and eka.mst_policy.mspo_customer = c.mcl_id(+)
           and eka.mst_agent_prod.lsle_id = 4
           and ((eka.mst_policy.reg_spaj = rpad(replace(#value#,'.'),11,' ')))
           and  (eka.mst_policy.mspo_ao = a.msag_id (+))
           and (a.mcl_id = b.mcl_id(+)) 
           and (eka.mst_worksite_flag.reg_spaj(+) = eka.mst_policy.reg_spaj)
           and t1.reg_spaj (+)=  EKA.MST_POLICY.REG_SPAJ
           and t2.no_spaj_insured (+) = eka.mst_policy.reg_spaj
	</select> 
	 
 	<select id="elions.bac.selectttg" resultClass="com.ekalife.elions.model.Tertanggung" parameterClass="string">
		SELECT e.mcl_first, e.mcl_id, e.mkl_kerja, e.mkl_kerja kerjaa, e.lti_id,  b.mste_no_vacc,
		       DECODE (e.mkl_kerja,
		               'KARYAWAN SWASTA', e.mpn_job_desc,
		               DECODE (j.ljb_note, '', '-', j.ljb_note)
		              ) kerjab,
		       e.mkl_tujuan, e.mkl_tujuan tujuana, e.mkl_penghasilan, e.mkl_pendanaan,e.mcl_agama,
		       e.mkl_pendanaan danaa, e.mkl_pendanaan danaa2,
		       e.mkl_smbr_penghasilan, e.mkl_smbr_penghasilan shasil, e.mkl_industri,
			   e.mkl_dana_from, e.mkl_hasil_from, e.mkl_smbr_hasil_from,
			   e.mkl_sumber_premi, DECODE (e.mkl_sumber_premi, 1, 'PERORANGAN', 'BADAN HUKUM/USAHA') mkl_sumber_premi2,
			   e.lsre_id_premi,e.mcl_green_card,
		       e.mkl_industri industria, e.mspe_no_identity, e.mspe_no_identity_expired, e.lside_id,
		       e.mspe_place_birth, e.mspe_date_birth, e.mspe_sex, b.mste_age, e.mcl_company_name, e.mkl_kerja_ket,
		       DECODE (e.mspe_sex, 1, 'PRIA', 'WANITA') mspe_sex2, e.mspe_sts_mrt,
		       a.mspo_umur_beasiswa, h.lgj_note, h.lgj_id, e.mspe_lama_kerja,
		       i.lside_name, g.lsne_note, g.lsne_id, e.mcl_gelar, e.mpn_job_desc,
		       e.mspe_mother, f.alamat_rumah, f.kd_pos_rumah, f.kota_rumah,
		       f.kota_rumah kota_rumaha, f.area_code_rumah, f.telpon_rumah,
		       f.alamat_kantor, f.kd_pos_kantor, f.kota_kantor,
		       f.kota_kantor kota_kantora, f.no_hp2, f.no_hp, f.email,
		       f.area_code_kantor, f.telpon_kantor, a.reg_spaj, b.mste_insured_no,
		       a.lspd_id, b.mste_standard, b.mste_age, k.lsag_name, k.lsag_id,
		       l.lsed_name, l.lsed_id, j.ljb_id, m.lsre_relation, m.lsre_id,
		       d.msag_id, d.lca_id, d.lwk_id, d.lsrg_id, a.lscb_id, a.mspo_policy_no,
		       f.area_code_rumah2, f.telpon_rumah2, f.area_code_kantor2,
		       f.telpon_kantor2, f.no_fax, f.area_code_fax, e.mspe_email,b.mste_kyc_date, t1.*,
		       b.mste_flag_special_offer,b.mste_flag_cc,b.mste_flag_hadiah,b.mste_dth,b.mste_no_vacc,
		       (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ')  and  kyc_id=3 and  kyc_pp=1 and kyc_desc='GAJI')  bulan_gaji,
			    (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and  kyc_id=3 and  kyc_pp=1 and kyc_desc='TABUNGAN/DEPOSITO')  bulan_penghasilan,
				(select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and  kyc_id=3 and  kyc_pp=1 and kyc_desc='WARISAN')  bulan_orangtua,
				(select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and  kyc_id=3 and  kyc_pp=1 and kyc_desc='HIBAH')  bulan_usaha,
				(select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and  kyc_id=3 and  kyc_pp=1 and kyc_desc='LAINNYA')  bulan_lainnya,
				(select substr(kyc_desc,9) from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and  kyc_id=3 and  kyc_pp=1 and kyc_desc LIKE 'LAINNYA%')  bulan_lainnya_note,
				(select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and  kyc_id=5 and  kyc_pp=1 and kyc_desc='INVESTASI')  tujuan_investasi,
				(select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and  kyc_id=5 and kyc_pp=1 and kyc_desc='PROTEKSI')  tujuan_proteksi,
				(select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(#value#,'.'),11,' ') and  kyc_id=5 and kyc_pp=1 and kyc_desc like'LAINNYA%')  tujuan_proteksi
		  FROM eka.mst_policy a,
		       eka.mst_insured b,
		       (
			    select a.reg_spaj, a.msag_id, b.mcl_id, b.lca_id, b.lwk_id, b.lsrg_id from eka.mst_agent_prod a, eka.mst_agent b 
				where a.lsle_id=4
				and a.msag_id = b.msag_id
			   ) d,
		       eka.mst_client_new e,
		       eka.mst_address_new f,
		       eka.lst_negara g,
		       eka.lst_grp_job h,
		       eka.lst_identity i,
		       eka.lst_jabatan j,
		       eka.lst_agama k,
		       eka.lst_education l,
		       eka.lst_relation m,
		       (SELECT si.reg_spaj, si.nama "nama_si", si.lsre_id "hubungan_si",
		               si.tanggal_lahir "tgllhr_si", anak_1.nama "nama_anak1",
		               anak_1.lsre_id "hubungan_anak1",
		               anak_1.tanggal_lahir "tgllhr_anak1", anak_2.nama "nama_anak2",
		               anak_2.lsre_id "hubungan_anak2",
		               anak_2.tanggal_lahir "tgllhr_anak2", anak_3.nama "nama_anak3",
		               anak_3.lsre_id "hubungan_anak3",
		               anak_3.tanggal_lahir "tgllhr_anak3"
		          FROM (SELECT reg_spaj, nama, lsre_id, tanggal_lahir
		                  FROM eka.mst_keluarga
		                 WHERE lsre_id = 5 AND NO = 0 AND insured = 0) si,
		               (SELECT reg_spaj, nama, lsre_id, tanggal_lahir
		                  FROM eka.mst_keluarga
		                 WHERE lsre_id = 4 AND NO = 1 AND insured = 0) anak_1,
		               (SELECT reg_spaj, nama, lsre_id, tanggal_lahir
		                  FROM eka.mst_keluarga
		                 WHERE lsre_id = 4 AND NO = 2 AND insured = 0) anak_2,
		               (SELECT reg_spaj, nama, lsre_id, tanggal_lahir
		                  FROM eka.mst_keluarga
		                 WHERE lsre_id = 4 AND NO = 3 AND insured = 0) anak_3
		         WHERE si.reg_spaj = anak_1.reg_spaj (+)
		           AND si.reg_spaj = anak_2.reg_spaj(+)
		           AND si.reg_spaj = anak_3.reg_spaj(+)) t1
		 WHERE a.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		   AND a.reg_spaj = b.reg_spaj
		   AND a.reg_spaj = d.reg_spaj
		   AND b.mste_insured = e.mcl_id
		   AND e.mcl_id = f.mcl_id
		   AND e.lsne_id = g.lsne_id(+)
		   AND e.lgj_id = h.lgj_id(+)
		   AND e.lside_id = i.lside_id(+)
		   AND e.lsag_id = k.lsag_id(+)
		   AND e.lsed_id = l.lsed_id(+)
		   AND a.lsre_id = m.lsre_id(+)
		   AND e.ljb_id = j.ljb_id(+)
		   AND a.reg_spaj = t1.reg_spaj(+)
	</select>
	
	<select id="elions.bac.selectpic" resultClass="com.ekalife.elions.model.ContactPerson" parameterClass="string">
		select 
		eka.mst_company_contact.MCL_ID, eka.mst_company_contact.NO_URUT, 
		eka.mst_company_contact.FLAG_UT, eka.mst_company_contact.NAMA_LENGKAP, 
		eka.mst_company_contact.TELP_KANTOR, eka.mst_company_contact.TELP_HP, 
		eka.mst_company_contact.EMAIL, eka.mst_company_contact.CARA_BAYAR, 
		eka.mst_company_contact.REK_NO, eka.mst_company_contact.REK_NAMA, 
		eka.mst_company_contact.REK_BANK, eka.mst_company_contact.REK_BANK_CABANG, 
		eka.mst_company_contact.REK_BANK_KOTA, eka.mst_company_contact.LUS_ID, 
		eka.mst_company_contact.INPUT_DATE, eka.mst_company_contact.MSTE_SEX, 
		eka.mst_company_contact.LTI_ID, eka.mst_company_contact.MCL_GELAR, 
		eka.mst_company_contact.MSPE_MOTHER, eka.mst_company_contact.LJB_ID, 
		eka.mst_company_contact.MPN_JOB_DESC, eka.mst_company_contact.LAMA_KERJA, 
		eka.mst_company_contact.LSIDE_ID, eka.mst_company_contact.NO_IDENTITY, 
		eka.mst_company_contact.LSNE_ID, eka.mst_company_contact.DATE_BIRTH, 
		eka.mst_company_contact.MSTE_AGE, eka.mst_company_contact.PLACE_BIRTH, 
		eka.mst_company_contact.STS_MRT, eka.mst_company_contact.AGAMA, 
		eka.mst_company_contact.LSED_ID, eka.mst_company_contact.LSAG_ID, 
		eka.mst_company_contact.PIC_JENIS, eka.mst_company_contact.LSRE_ID,
		eka.mst_company_contact_address.ALAMAT_RUMAH, 
		eka.mst_company_contact_address.KD_POS_RUMAH, eka.mst_company_contact_address.KOTA_RUMAH, 
		eka.mst_company_contact_address.AREA_CODE_RUMAH, eka.mst_company_contact_address.TELPON_RUMAH, 
		eka.mst_company_contact_address.AREA_CODE_RUMAH2, eka.mst_company_contact_address.TELPON_RUMAH2, 
		eka.mst_company_contact_address.NO_HP, eka.mst_company_contact_address.NO_HP2, 
		eka.mst_company_contact_address.EMAIL, eka.mst_company_contact_address.ALAMAT_KANTOR, 
		eka.mst_company_contact_address.KD_POS_KANTOR, eka.mst_company_contact_address.KOTA_KANTOR, 
		eka.mst_company_contact_address.AREA_CODE_KANTOR, eka.mst_company_contact_address.TELPON_KANTOR, 
		eka.mst_company_contact_address.AREA_CODE_KANTOR2, eka.mst_company_contact_address.TELPON_KANTOR2, 
		eka.mst_company_contact_address.AREA_CODE_FAX, eka.mst_company_contact_address.NO_FAX,
		t1.*, eka.mst_company_contact.NO_IDENTITY_EXPIRED
		from eka.mst_company_contact, eka.mst_company_contact_address,
			(select si.mcl_id,si.nama "nama_si",si.lsre_id "hubungan_si",si.tanggal_lahir "tgllhr_si",
			anak_1.nama "nama_anak1",anak_1.lsre_id "hubungan_anak1", anak_1.tanggal_lahir "tgllhr_anak1",
			anak_2.nama "nama_anak2",anak_2.lsre_id "hubungan_anak2", anak_2.tanggal_lahir "tgllhr_anak2",
			anak_3.nama "nama_anak3",anak_3.lsre_id "hubungan_anak3", anak_3.tanggal_lahir "tgllhr_anak3"
			from				
				(select mcl_id ,nama,lsre_id,tanggal_lahir 
				from eka.mst_company_contact_family
				where lsre_id = 5 and no = 0)si,
				(select mcl_id,nama,lsre_id,tanggal_lahir 
				from eka.mst_company_contact_family
				where lsre_id = 4 and no = 1)anak_1,
				(select mcl_id,nama,lsre_id,tanggal_lahir 
				from eka.mst_company_contact_family
				where lsre_id = 4 and no = 2)anak_2,
				(select mcl_id,nama,lsre_id,tanggal_lahir 
				from eka.mst_company_contact_family
				where lsre_id = 4 and no = 3)anak_3
			where si.mcl_id = anak_1.mcl_id and
			si.mcl_id = anak_2.mcl_id (+)and
			si.mcl_id = anak_3.mcl_id (+)	) t1
		where (eka.mst_company_contact.mcl_id = #value#) and
			  (eka.mst_company_contact.mcl_id = eka.mst_company_contact_address.mcl_id) and
			  (eka.mst_company_contact.mcl_id = t1.mcl_id(+))
	</select>

	 <select id="elions.bac.selectAddressBilling"  resultClass="com.ekalife.elions.model.AddressBilling" parameterClass="string">
			SELECT 
			(eka.mst_address_billing.lca_id || eka.mst_address_billing.lwk_id || eka.mst_address_billing.lsrg_id) region,
			(trim(eka.lst_region.lsrg_nama) || ' / ' || trim(eka.lst_wakil.lwk_nama) || ' / ' || trim(eka.lst_cabang.lca_nama)) region_name,
			eka.mst_address_billing.lti_id ,
			eka.mst_address_billing.msap_contact ,
			eka.mst_address_billing.msap_address , 
			eka.mst_address_billing.lska_id ,
			eka.mst_address_billing.msap_zip_code ,
			eka.mst_address_billing.msap_area_code1 ,
			eka.mst_address_billing.msap_phone1 ,
			eka.mst_address_billing.msap_area_code2 ,
			eka.mst_address_billing.msap_phone2 ,
			eka.mst_address_billing.msap_area_code3 ,
			eka.mst_address_billing.msap_phone3 ,
			eka.mst_address_billing.msap_area_code_fax1 ,
			eka.mst_address_billing.msap_fax1 ,
			eka.mst_address_billing.msap_area_code_fax2 ,
			eka.mst_address_billing.msap_fax2 ,
			eka.mst_address_billing.flag_cc ,
			eka.mst_address_billing.e_mail, 
			eka.mst_address_billing.no_hp ,
			eka.mst_address_billing.no_hp2 ,
			eka.mst_address_billing.reg_spaj  ,
			eka.mst_address_billing.kota,
			eka.mst_address_billing.kota kota_tgh,
			eka.mst_address_billing.kota kota_tagih,
			eka.mst_address_billing.lsne_id,
			eka.lst_region.lsrg_nama, eka.lst_wakil.lwk_nama, eka.lst_cabang.lca_nama
		  FROM eka.mst_address_billing ,
		  eka.lst_region, eka.lst_cabang, eka.lst_wakil
		 WHERE eka.mst_address_billing.reg_spaj = rpad(replace(#value#,'.'),11,' ') and
		 ( eka.lst_region.lca_id = eka.mst_address_billing.lca_id ) and
		 ( eka.lst_region.lwk_id = eka.mst_address_billing.lwk_id ) and
		 ( eka.lst_region.lsrg_id = eka.mst_address_billing.lsrg_id) and
		 ( eka.mst_address_billing.lca_id = eka.lst_cabang.lca_id) and
		 ( eka.lst_cabang.lca_id = eka.lst_wakil.lca_id) and 
		 ( eka.mst_address_billing.lwk_id = eka.lst_wakil.lwk_id)
	 </select>
	 
	 <select id="elions.bac.selectGelar" parameterClass="int" resultClass="id.co.sinarmaslife.std.model.vo.DropDown" cacheModel="elions.uw.cache.references">
		select to_char(lti_id) key, lti_note value from eka.lst_title where lti_jn_title=#value# and lti_id <![CDATA[<>]]> 0 order by lti_note
	 </select>
	
<!-- Data Usulan Asuransi plan utama-->

		<resultMap id="elions.bac.selectDataUsulanutama1" class="com.ekalife.elions.model.Datausulan" >
			<result property="tipeproduk" column="tipeproduk" javaType="int" jdbcType="NUMBER" />
			<result property="mste_insured_no" column="mste_insured_no" javaType="int" jdbcType="NUMBER" />                                                                                                                                                 
			<result property="mspr_unit" column="mspr_unit" javaType="int" jdbcType="NUMBER" />                                                                                                                                                             
			<result property="mspr_class" column="mspr_class" javaType="int" jdbcType="NUMBER" />                                                                                                                                                           
			<result property="mspr_tsi" column="mspr_tsi" javaType="double" jdbcType="NUMBER" />                                                                                                                                                            
			<result property="mspr_premium" column="mspr_premium" javaType="double" jdbcType="NUMBER" />
			<result property="mspr_ins_period" column="mspr_ins_period" javaType="int" jdbcType="NUMBER" />                                                                                                                                                 
			<result property="mspr_end_pay" column="mspr_end_pay" javaType="date" jdbcType="DATE" />                                                                                                                                                        
			<result property="mspr_tt" column="mspr_tt" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
			<result property="lsbs_id" column="lsbs_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
			<result property="lsdbs_name" column="lsdbs_name" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
			<result property="mspo_pay_period" column="mspo_pay_period" javaType="int" jdbcType="NUMBER" />                                                                                                                                                 
			<result property="mste_medical" column="mste_medical" javaType="int" jdbcType="NUMBER" />                                                                                                                                                       
			<result property="medis" column="medis" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                                    
			<result property="mste_end_date" column="mste_end_date" javaType="date" jdbcType="DATE" />                                                                                                                                                      
			<result property="mste_beg_date" column="mste_beg_date" javaType="date" jdbcType="DATE" />                                                                                                                                                      
			<result property="mste_flag_cc" column="mste_flag_cc" javaType="int" jdbcType="NUMBER" />
			<result property="mste_flag_el" column="mste_flag_el" javaType="int" jdbcType="NUMBER" />
			<result property="mspo_flag_spaj" column="mspo_flag_spaj" javaType="int" jdbcType="NUMBER" />                                                                                                                                                        
			<result property="lscb_id" column="lscb_id" javaType="int" jdbcType="NUMBER" />
			<result property="lspd_id" column="lspd_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
			<result property="lscb_pay_mode" column="lscb_pay_mode" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                    
			<result property="lku_id" column="lku_id" javaType="string" jdbcType="CHAR" nullValue=""/>      
			<result property="kurs_p" column="kurs_p" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                   
			<result property="lku_symbol" column="lku_symbol" javaType="string" jdbcType="VARCHAR2" nullValue=""/>  
			<result property="lsdbs_number" column="lsdbs_number" javaType="int" jdbcType="NUMBER" />                                                                                                                                         
			<result property="plan" column="plan" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                                      
			<result property="reg_spaj" column="reg_spaj" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                  
			<result property="kurs_premi" column="kurs_premi" javaType="string" jdbcType="CHAR" nullValue=""/>   
			<result property="jmlrider" column="jmlrider" javaType="int" jdbcType="NUMBER" nullValue="0"/>  
			<result property="jml_benef" column="jml_benef" javaType="int" jdbcType="NUMBER" nullValue="0"/> 
			<result property="daftaRider" column="reg_spaj" select="elions.bac.selectDataUsulan_rider" />
			<result property="daftabenef" column="reg_spaj" select="elions.bac.select_benef" />
			<result property="kodeproduk" column="lsbs_id" javaType="string" jdbcType="CHAR" /> 
			<result property="mspo_installment" column="mspo_installment" javaType="int" jdbcType="NUMBER" />
			<result property="mste_flag_investasi" column="mste_flag_investasi" javaType="int" jdbcType="NUMBER" />
			<result property="lca_id" column="lca_id" javaType="string" jdbcType="CHAR" />
			<result property="lwk_id" column="lwk_id" javaType="string" jdbcType="CHAR" />
			<result property="lus_id" column="lus_id" javaType="int" jdbcType="NUMBER" />  
			<result property="mste_flag_guthrie" column="mste_flag_guthrie" javaType="int" jdbcType="NUMBER" />
			<result property="jml_peserta" column="jml_peserta" javaType="int" jdbcType="NUMBER" />
			<result property="mspo_nasabah_acc" column="mspo_nasabah_acc" javaType="string" jdbcType="VARCHAR" />
			<result property="daftapeserta" column="reg_spaj" select="elions.bac.select_semua_mst_peserta" />
			<result property="daftarplus" column="reg_spaj" select="elions.bac.select_all_mst_peserta" />
			<result property="mspr_extra" column="mspr_extra" javaType="double" jdbcType="NUMBER" />
			<result property="jenis_pemegang_polis" column="mcl_jenis" javaType="int" jdbcType="NUMBER" />
			<result property="mspo_provider" column="mspo_provider" javaType="int" jdbcType="NUMBER" />
			<result property="mspo_flag_sph" column="mspo_flag_sph" javaType="int" jdbcType="NUMBER" />
			<result property="flag_paket" column="flag_paket" javaType="int" jdbcType="NUMBER" />
			<result property="mste_gmit" column="mste_gmit" javaType="int" jdbcType="NUMBER" />
			<result property="nama_paket" column="nama_paket" javaType="string" jdbcType="VARCHAR" />
			<result property="lsdbs_depkeu" column="lsdbs_depkeu" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
			<result property="pilih_batch" column="flag_batch" javaType="string" jdbcType="VARCHAR2" nullValue=""/> <!-- tambah pilihan nonbatch untuk simas primelink (rider save). helpdesk [128634/128295] //Chandra -->
			<result property="campaign_id" column="mcp_campaign_id" javaType="string" jdbcType="VARCHAR2" nullValue=""/> <!-- helpdesk [137730] tambahin pilihan campaign -->
			<result property="campaign_name" column="mcp_campaign_name" javaType="string" jdbcType="VARCHAR2" nullValue=""/> <!-- helpdesk [137730] tambahin pilihan campaign -->
			<result property="covid_flag" column="covid_flag" javaType="string" jdbcType="VARCHAR2" nullValue=""/> <!-- covid flag patar timotius -->
			<result property="covid_name" column="covid_name" javaType="string" jdbcType="VARCHAR2" nullValue=""/> <!-- covid name patar timotius -->
			<result property="flag_vip" column="flag_vip" javaType="string" jdbcType="CHAR" nullValue=""/> <!-- flag_vip nana  -->
			<result property="full_autosales" column="full_autosales" javaType="string" jdbcType="VARCHAR2" nullValue=""/> <!-- full autosales -->
		
		</resultMap>

	<select id="elions.bac.selectDataUsulanutama" resultMap="elions.bac.selectDataUsulanutama1" parameterClass="string">
		SELECT /*+ first_rows */ a.reg_spaj,a.mste_insured_no, a.mspr_unit, a.mspr_class, a.mspr_tsi,
		       a.mspr_premium, a.mspr_ins_period, a.mspr_end_pay, a.mspr_tt,
		       a.lsbs_id, eka.f_lsdbs(a.reg_spaj, b.lsbs_id, b.lsdbs_number) lsdbs_name, c.mspo_pay_period, d.mste_medical, decode(d.mste_medical,0,'Tidak','Ya') medis, 
		       d.mste_end_date, d.mste_beg_date, d.mste_flag_cc, e.lscb_id, e.lscb_pay_mode,c.lku_id, c.lku_id kurs_p, f.lku_symbol,
		       a.lsbs_id||'~X'||b.lsdbs_number plan,c.lku_id kurs_premi,b.lsdbs_number,
		       c.lstp_id tipeproduk, c.lspd_id, c.lus_id,
			    ( SELECT count( EKA.MST_PRODUCT_INSURED.LSBS_ID)
			   FROM EKA.MST_PRODUCT_INSURED
			    WHERE ( EKA.MST_PRODUCT_INSURED.LSBS_ID <![CDATA[ >=  ]]> 800 )AND 
			    (EKA.MST_PRODUCT_INSURED.REG_SPAJ =rpad(replace(#value#,'.'),11,' ')) ) jmlrider,
			    (select count(*) from eka.mst_benefeciary where reg_spaj=rpad(replace(#value#,'.'),11,' ')) jml_benef,
			    a.lsbs_id kodeproduk,c.mspo_installment,nvl(a.mspr_discount,0)mspr_discount,d.mste_flag_el,
			    d.mste_flag_investasi,c.lca_id,c.lwk_id,d.mste_flag_guthrie,
				(select count(*) from eka.mst_peserta where reg_spaj =rpad(replace(#value#,'.'),11,' ')and flag_jenis_peserta != 0 and lsbs_id!=839) jml_peserta,
				c.mspo_nasabah_acc, a.mspr_extra, d.mste_flag_el,
				NVL((
					select distinct mcl_jenis from eka.mst_client_new where mcl_id = (select mspo_policy_holder from eka.mst_policy where reg_spaj = rpad(replace(#value#,'.'),11,' ') ) 
				), 0) mcl_jenis, c.mspo_provider, c.mspo_flag_sph, d.flag_packet flag_paket, d.reg_spaj_packet spaj_paket, d.mste_gmit,
				(select nama_packet from EKA.LST_PACKET where flag_packet = d.flag_packet)nama_paket, b.lsdbs_depkeu, c.mspo_syahriah, c.mspo_flag_spaj
				, c.flag_batch <!-- tambah pilihan nonbatch untuk simas primelink (rider save). helpdesk [128634/128295] //Chandra -->
				, c.mcp_campaign_id <!-- helpdesk [137730] tambahin pilihan campaign -->
				, c.covid_flag
				, TRIM (c.flag_vip) as flag_vip  <!-- FLAG_VIP NANA -->
				, TRIM (c.full_autosales) as full_autosales  <!-- FULL_AUTOSALES NANA -->
				, (select f.label_description from eka.mst_face_to_face f where trim(f.flag_id) = trim(c.covid_flag)) covid_name 
				, (select g.mcp_campaign_name from eka.mst_campaign_product g where g.mcp_campaign_id = c.mcp_campaign_id) mcp_campaign_name <!-- helpdesk [137730] tambahin pilihan campaign -->
		  FROM eka.mst_product_insured a,
		       eka.lst_det_bisnis b,
		       eka.mst_policy c,
		       eka.mst_insured d,
		       eka.lst_pay_mode e,
		       eka.lst_kurs f
		 WHERE (b.lsbs_id(+) = a.lsbs_id)
		   AND (b.lsdbs_number(+) = a.lsdbs_number)
		   AND (a.reg_spaj = c.reg_spaj)
		   AND (d.reg_spaj = c.reg_spaj)
		   AND (c.lscb_id = e.lscb_id(+))
		   AND ((a.reg_spaj = rpad(replace(#value#,'.'),11,' ')) 
		   AND c.lku_id = f.lku_id (+)
			<![CDATA[
		   AND (a.lsbs_id < 300))	
		   AND a.mspr_active = 1
		   ]]>
	</select>	
		
	<select id="elions.bac.selectIsPSNSyariah" resultClass="java.util.HashMap" parameterClass="string">
		select 
		    a.id_psn, b.nama_psn jenis_psn, A.NILAI_POTONG besaran
		from
		    eka.mst_psn a,
		    eka.lst_psn b
		where 
		    a.id_psn = b.id_psn
		    and a.reg_Spaj = #spaj#
	</select>		
			
	<select id="elions.bac.selectDataUsulan_rider" resultClass="com.ekalife.elions.model.Datarider" parameterClass="string">
		   	SELECT EKA.MST_PRODUCT_INSURED.MSPR_EXTRA,   
		   	EKA.MST_PRODUCT_INSURED.MSPR_TSI,   
		 	nvl(EKA.MST_PRODUCT_INSURED.MSPR_PREMIUM, 0) MSPR_PREMIUM,
			EKA.MST_PRODUCT_INSURED.MSPR_INS_PERIOD,   
			EKA.MST_PRODUCT_INSURED.MSPR_BEG_DATE,   
			EKA.MST_PRODUCT_INSURED.MSPR_END_DATE,   
			EKA.MST_PRODUCT_INSURED.MSPR_END_PAY,   
			EKA.MST_PRODUCT_INSURED.MSPR_CLASS,   
			EKA.MST_PRODUCT_INSURED.MSPR_UNIT,   
			eka.f_lsdbs(EKA.MST_PRODUCT_INSURED.reg_spaj, EKA.MST_PRODUCT_INSURED.lsbs_id, EKA.MST_PRODUCT_INSURED.lsdbs_number) LSDBS_NAME,   
			EKA.LST_DET_BISNIS.LSDBS_NUMBER, 
			EKA.MST_PRODUCT_INSURED.LSBS_ID,   
			EKA.MST_PRODUCT_INSURED.MSPR_TT ,
			EKA.MST_PRODUCT_INSURED.MSPR_RATE,
			EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO,
			EKA.MST_PRODUCT_INSURED.LKU_ID,
			EKA.MST_PRODUCT_INSURED.MSPR_PERSEN,
			EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_A ,
			EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_B ,
			EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_C ,
			EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_D ,
			EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_M ,
			EKA.MST_PRODUCT_INSURED.LSBS_ID||'~X'||EKA.LST_DET_BISNIS.LSDBS_NUMBER plan_rider
	    		FROM EKA.MST_PRODUCT_INSURED,   
			     EKA.LST_DET_BISNIS   
	    WHERE ( EKA.LST_DET_BISNIS.LSBS_ID = EKA.MST_PRODUCT_INSURED.LSBS_ID ) and    
			     ( EKA.LST_DET_BISNIS.LSDBS_NUMBER = EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER ) and    
			     ( ( EKA.MST_PRODUCT_INSURED.LSBS_ID between 800 and 899) AND
				 (EKA.MST_PRODUCT_INSURED.REG_SPAJ =rpad(replace(#value#,'.'),11,' '))) 
				 and EKA.MST_PRODUCT_INSURED.MSPR_ACTIVE = 1
	</select>	
	
	<select id="elions.bac.selectrider_perkode" resultClass="com.ekalife.elions.model.Datarider" parameterClass="java.util.HashMap">
		   	SELECT EKA.MST_PRODUCT_INSURED.MSPR_EXTRA,   
		   	EKA.MST_PRODUCT_INSURED.MSPR_TSI,   
		 	EKA.MST_PRODUCT_INSURED.MSPR_PREMIUM,
			EKA.MST_PRODUCT_INSURED.MSPR_INS_PERIOD,   
			EKA.MST_PRODUCT_INSURED.MSPR_BEG_DATE,   
			EKA.MST_PRODUCT_INSURED.MSPR_END_DATE,   
			EKA.MST_PRODUCT_INSURED.MSPR_END_PAY,   
			EKA.MST_PRODUCT_INSURED.MSPR_CLASS,   
			EKA.MST_PRODUCT_INSURED.MSPR_UNIT,   
			eka.f_lsdbs(EKA.MST_PRODUCT_INSURED.reg_spaj, EKA.MST_PRODUCT_INSURED.lsbs_id, EKA.MST_PRODUCT_INSURED.lsdbs_number) LSDBS_NAME,   
			EKA.LST_DET_BISNIS.LSDBS_NUMBER, 
			EKA.MST_PRODUCT_INSURED.LSBS_ID,   
			EKA.MST_PRODUCT_INSURED.MSPR_TT ,
			EKA.MST_PRODUCT_INSURED.MSPR_RATE,
			EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO,
			EKA.MST_PRODUCT_INSURED.LKU_ID,
			EKA.MST_PRODUCT_INSURED.MSPR_PERSEN,
			EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_A ,
			EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_B ,
			EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_C ,
			EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_D ,
			EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_M ,
			EKA.MST_PRODUCT_INSURED.LSBS_ID||'~X'||EKA.LST_DET_BISNIS.LSDBS_NUMBER plan_rider
	    		FROM EKA.MST_PRODUCT_INSURED,   
			     EKA.LST_DET_BISNIS   
	    WHERE ( EKA.LST_DET_BISNIS.LSBS_ID = EKA.MST_PRODUCT_INSURED.LSBS_ID ) and    
			     ( EKA.LST_DET_BISNIS.LSDBS_NUMBER = EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER ) and    
			     ( ( EKA.MST_PRODUCT_INSURED.LSBS_ID = #kode# )AND
				 (EKA.MST_PRODUCT_INSURED.REG_SPAJ =rpad(replace(#spaj#,'.'),11,' '))) 
		order by  EKA.MST_PRODUCT_INSURED.LSBS_ID 
	</select>		
	
   	<select id="elions.bac.select_benef" resultClass="com.ekalife.elions.model.Benefeciary" parameterClass="string">
		SELECT "EKA"."MST_BENEFECIARY"."REG_SPAJ",   
			         "EKA"."MST_BENEFECIARY"."MSTE_INSURED_NO",   
			         "EKA"."MST_BENEFECIARY"."MSAW_NUMBER",   
			         "EKA"."MST_BENEFECIARY"."MSAW_FIRST",   
			         "EKA"."MST_BENEFECIARY"."MSAW_MIDDLE",   
			         "EKA"."MST_BENEFECIARY"."MSAW_LAST",   
			         "EKA"."MST_BENEFECIARY"."MSAW_BIRTH",
			         to_char("EKA"."MST_BENEFECIARY"."MSAW_BIRTH",'dd/MM/yyyy') SMSAW_BIRTH,
			         "EKA"."MST_BENEFECIARY"."LSRE_ID" LSRE_ID,   
			         "EKA"."MST_BENEFECIARY"."MSAW_PERSEN",
			         "EKA"."MST_BENEFECIARY"."MSAW_SEX",
			         "EKA"."MST_BENEFECIARY"."MSAW_KET",
			          decode("EKA"."MST_BENEFECIARY"."MSAW_SEX",1,'LAKI-LAKI' ,0,'WANITA')MSAW_SEX_DETAIL,   
			         "EKA"."LST_RELATION"."LSRE_RELATION"  
			    FROM "EKA"."MST_BENEFECIARY",   
			         "EKA"."LST_RELATION"  
			   WHERE  ("EKA"."MST_BENEFECIARY"."LSRE_ID" = "EKA"."LST_RELATION"."LSRE_ID" (+)) and  
	         ( ( EKA."MST_BENEFECIARY"."REG_SPAJ" = rpad(replace(#value#,'.'),11,' ')) ) order by  "EKA"."MST_BENEFECIARY"."MSAW_NUMBER"  
	 </select>	
	 
	 <select id="elions.bac.select_dth" resultClass="com.ekalife.elions.model.RencanaPenarikan" parameterClass="string">
	 	select *
			from eka.mst_rencana_penarikan
			where jenis = 1
			and reg_spaj = rpad(replace(#value#,'.'),11,' ')
	 </select>
	 	 	        	
		<resultMap id="elions.bac.selectinvestasiutama1" class="com.ekalife.elions.model.InvestasiUtama" >
			<result property="mu_ke" column="mu_ke" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                     
			<result property="mu_tgl_nab" column="mu_tgl_nab" javaType="date" jdbcType="DATE" />                                                                                                                                                            
			<result property="mu_tgl_surat" column="mu_tgl_surat" javaType="date" jdbcType="DATE" />                                                                                                                                                        
			<result property="mu_jlh_premi" column="mu_jlh_premi" javaType="double" jdbcType="NUMBER" />                                                                                                                                                    
			<result property="mu_periodic_tu" column="mu_periodic_tu" javaType="int" jdbcType="NUMBER" />                                                                                                                                                   
			<result property="mu_jlh_tu" column="mu_jlh_tu" javaType="double" jdbcType="NUMBER" />                                                                                                                                                          
			<result property="no_register" column="no_register" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                            
			<result property="lt_id" column="lt_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                     
			<result property="mu_tgl_trans" column="mu_tgl_trans" javaType="date" jdbcType="DATE" />                                                                                                                                                        
			<result property="mu_jlh_unit" column="mu_jlh_unit" javaType="double" jdbcType="NUMBER" />                                                                                                                                                      
			<result property="mu_bulan_surat" column="mu_bulan_surat" javaType="int" jdbcType="NUMBER" />                                                                                                                                                   
			<result property="mu_switch_cnt" column="mu_switch_cnt" javaType="int" jdbcType="NUMBER" />                                                                                                                                                     
			<result property="mu_last_switch" column="mu_last_switch" javaType="date" jdbcType="DATE" />                                                                                                                                                    
			<result property="mu_last_wdraw" column="mu_last_wdraw" javaType="date" jdbcType="DATE" />                                                                                                                                                      
			<result property="mu_wdraw_cnt" column="mu_wdraw_cnt" javaType="int" jdbcType="NUMBER" />                                                                                                                                                       
			<result property="mu_lspd_id" column="mu_lspd_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                           
			<result property="mu_tgl_input" column="mu_tgl_input" javaType="date" jdbcType="DATE" />                                                                                                                                                        
			<result property="mu_aktif" column="mu_aktif" javaType="int" jdbcType="NUMBER" />                                                                                                                                                               
			<result property="mu_tahun_ke" column="mu_tahun_ke" javaType="int" jdbcType="NUMBER" />                                                                                                                                                         
			<result property="mu_premi_ke" column="mu_premi_ke" javaType="int" jdbcType="NUMBER" />                                                                                                                                                         
			<result property="mu_flag_print" column="mu_flag_print" javaType="int" jdbcType="NUMBER" />                                                                                                                                                     
			<result property="mu_lus_id" column="mu_lus_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                             
			<result property="reg_spaj" column="reg_spaj" javaType="string" jdbcType="CHAR" nullValue=""/> 
			<result property="jmlh_invest" column="jmlh_invest" javaType="int" jdbcType="NUMBER" nullValue="0"/> 
			<result property="jml_top_up" column="jml_top_up" javaType="int" jdbcType="NUMBER" nullValue="0"/>
			<result property="total_premi_sementara" column="total_premi_sementara" javaType="double" jdbcType="NUMBER" nullValue="0"/> 
			<result property="jmlh_biaya" column="jmlh_biaya" javaType="int" jdbcType="NUMBER" nullValue="0"/> 
			<result property="jml_premium" column="jml_premium" javaType="double" jdbcType="NUMBER" nullValue="0"/> 	
			<result property="daftarinvestasi" column="reg_spaj" select="elions.bac.selectdetilinvestasi" />
			<result property="daftarbiaya" column="reg_spaj" select="elions.bac.selectdetilinvbiaya" />
			<result property="daftartopup" column="reg_spaj" select="elions.bac.select_detil_topup"/>
		</resultMap>
		
		<resultMap id="elions.bac.selectinvestasiutama2" class="com.ekalife.elions.model.InvestasiUtama" >
			<result property="mu_ke" column="mu_ke" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                     
			<result property="mu_tgl_nab" column="mu_tgl_nab" javaType="date" jdbcType="DATE" />                                                                                                                                                            
			<result property="mu_tgl_surat" column="mu_tgl_surat" javaType="date" jdbcType="DATE" />                                                                                                                                                        
			<result property="mu_jlh_premi" column="mu_jlh_premi" javaType="double" jdbcType="NUMBER" />                                                                                                                                                    
			<result property="mu_periodic_tu" column="mu_periodic_tu" javaType="int" jdbcType="NUMBER" />                                                                                                                                                   
			<result property="mu_jlh_tu" column="mu_jlh_tu" javaType="double" jdbcType="NUMBER" />                                                                                                                                                          
			<result property="no_register" column="no_register" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                            
			<result property="lt_id" column="lt_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                     
			<result property="mu_tgl_trans" column="mu_tgl_trans" javaType="date" jdbcType="DATE" />                                                                                                                                                        
			<result property="mu_jlh_unit" column="mu_jlh_unit" javaType="double" jdbcType="NUMBER" />                                                                                                                                                      
			<result property="mu_bulan_surat" column="mu_bulan_surat" javaType="int" jdbcType="NUMBER" />                                                                                                                                                   
			<result property="mu_switch_cnt" column="mu_switch_cnt" javaType="int" jdbcType="NUMBER" />                                                                                                                                                     
			<result property="mu_last_switch" column="mu_last_switch" javaType="date" jdbcType="DATE" />                                                                                                                                                    
			<result property="mu_last_wdraw" column="mu_last_wdraw" javaType="date" jdbcType="DATE" />                                                                                                                                                      
			<result property="mu_wdraw_cnt" column="mu_wdraw_cnt" javaType="int" jdbcType="NUMBER" />                                                                                                                                                       
			<result property="mu_lspd_id" column="mu_lspd_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                           
			<result property="mu_tgl_input" column="mu_tgl_input" javaType="date" jdbcType="DATE" />                                                                                                                                                        
			<result property="mu_aktif" column="mu_aktif" javaType="int" jdbcType="NUMBER" />                                                                                                                                                               
			<result property="mu_tahun_ke" column="mu_tahun_ke" javaType="int" jdbcType="NUMBER" />                                                                                                                                                         
			<result property="mu_premi_ke" column="mu_premi_ke" javaType="int" jdbcType="NUMBER" />                                                                                                                                                         
			<result property="mu_flag_print" column="mu_flag_print" javaType="int" jdbcType="NUMBER" />                                                                                                                                                     
			<result property="mu_lus_id" column="mu_lus_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                             
			<result property="reg_spaj" column="reg_spaj" javaType="string" jdbcType="CHAR" nullValue=""/> 
			<result property="jmlh_invest" column="jmlh_invest" javaType="int" jdbcType="NUMBER" nullValue="0"/> 
			<result property="jml_top_up" column="jml_top_up" javaType="int" jdbcType="NUMBER" nullValue="0"/>
			<result property="total_premi_sementara" column="total_premi_sementara" javaType="double" jdbcType="NUMBER" nullValue="0"/> 
			<result property="jmlh_biaya" column="jmlh_biaya" javaType="int" jdbcType="NUMBER" nullValue="0"/> 
			<result property="jml_premium" column="jml_premium" javaType="double" jdbcType="NUMBER" nullValue="0"/> 	
			<result property="daftarinvestasi" column="reg_spaj" select="elions.bac.selectdetilinvestasimallspaj" />
			<result property="daftarbiaya" column="reg_spaj" select="elions.bac.selectdetilinvbiaya" />
			<result property="daftartopup" column="reg_spaj" select="elions.bac.select_detil_topup"/>
		</resultMap>
		
		<select id="elions.bac.selectinvestasiutamamall" resultMap="elions.bac.selectinvestasiutama2" parameterClass="string">
			select ulink_utama.reg_spaj,   
			ulink_utama.mu_ke,   
			ulink_utama.mu_tgl_nab,   
			ulink_utama.mu_tgl_surat,   
			ulink_utama.mu_jlh_premi,   
			ulink_utama.mu_periodic_tu,   
			ulink_utama.mu_jlh_tu,   
			ulink_utama.no_register,   
			ulink_utama.lt_id,   
			ulink_utama.mu_tgl_trans,   
			ulink_utama.mu_jlh_unit,   
			ulink_utama.mu_bulan_surat,   
			ulink_utama.mu_switch_cnt,   
			ulink_utama.mu_last_switch,   
			ulink_utama.mu_last_wdraw,   
			ulink_utama.mu_wdraw_cnt,   
			ulink_utama.mu_lspd_id,   
			ulink_utama.mu_tgl_input,   
			ulink_utama.mu_aktif,   
			ulink_utama.mu_tahun_ke,   
			ulink_utama.mu_premi_ke,   
			ulink_utama.mu_flag_print,   
			ulink_utama.mu_lus_id  ,
			(select count(*) from eka.lst_jenis_invest ) jmlh_invest,
			(select sum(eka.mst_product_insured.mspr_premium) from eka.mst_product_insured where eka.mst_product_insured.reg_spaj = rpad(replace(ulink_utama.reg_spaj,'.'),11,' ')) jml_premium,
			((select sum(eka.mst_product_insured.mspr_premium) from eka.mst_product_insured where eka.mst_product_insured.reg_spaj=  rpad(replace(ulink_utama.reg_spaj,'.'),11,' ')) + ulink_utama.mu_jlh_tu) total_premi_sementara,
			(select count(*) from eka.mst_biaya_ulink where eka.mst_biaya_ulink.reg_spaj= rpad(replace(ulink_utama.reg_spaj,'.'),11,' ')) jmlh_biaya,
			(select count(*) from eka.mst_ulink ulink_b where ulink_b.mu_ke <![CDATA[ > ]]>1 and mu_tgl_trans = (select ulink_a.mu_tgl_trans from eka.mst_ulink ulink_a where ulink_a.mu_ke = 1 and ulink_a.reg_spaj = ulink_b.reg_spaj)
				and ulink_b.reg_spaj = rpad(replace(ulink_utama.reg_spaj,'.'),11,' ')) jml_top_up  
			from eka.mst_ulink ulink_utama
			where ( ulink_utama.reg_spaj = rpad(replace(#value#,'.'),11,' ')) 
			 and   ( ulink_utama.mu_ke = 1 )   			  
         </select>
	 	        	
		<select id="elions.bac.selectinvestasiutama" resultMap="elions.bac.selectinvestasiutama1" parameterClass="string">
			select ulink_utama.reg_spaj,   
			ulink_utama.mu_ke,   
			ulink_utama.mu_tgl_nab,   
			ulink_utama.mu_tgl_surat,   
			ulink_utama.mu_jlh_premi,   
			ulink_utama.mu_periodic_tu,   
			ulink_utama.mu_jlh_tu,   
			ulink_utama.no_register,   
			ulink_utama.lt_id,   
			ulink_utama.mu_tgl_trans,   
			ulink_utama.mu_jlh_unit,   
			ulink_utama.mu_bulan_surat,   
			ulink_utama.mu_switch_cnt,   
			ulink_utama.mu_last_switch,   
			ulink_utama.mu_last_wdraw,   
			ulink_utama.mu_wdraw_cnt,   
			ulink_utama.mu_lspd_id,   
			ulink_utama.mu_tgl_input,   
			ulink_utama.mu_aktif,   
			ulink_utama.mu_tahun_ke,   
			ulink_utama.mu_premi_ke,   
			ulink_utama.mu_flag_print,   
			ulink_utama.mu_lus_id  ,
			(select count(*) from eka.lst_jenis_invest ) jmlh_invest,
			(select sum(eka.mst_product_insured.mspr_premium) from eka.mst_product_insured where eka.mst_product_insured.reg_spaj = rpad(replace(ulink_utama.reg_spaj,'.'),11,' ')) jml_premium,
			((select sum(eka.mst_product_insured.mspr_premium) from eka.mst_product_insured where eka.mst_product_insured.reg_spaj=  rpad(replace(ulink_utama.reg_spaj,'.'),11,' ')) + ulink_utama.mu_jlh_tu) total_premi_sementara,
			(select count(*) from eka.mst_biaya_ulink where eka.mst_biaya_ulink.reg_spaj= rpad(replace(ulink_utama.reg_spaj,'.'),11,' ')) jmlh_biaya,
			(select count(*) from eka.mst_ulink ulink_b where ulink_b.mu_ke <![CDATA[ > ]]>1 and mu_tgl_trans = (select ulink_a.mu_tgl_trans from eka.mst_ulink ulink_a where ulink_a.mu_ke = 1 and ulink_a.reg_spaj = ulink_b.reg_spaj)
				and ulink_b.reg_spaj = rpad(replace(ulink_utama.reg_spaj,'.'),11,' ')) jml_top_up  
			from eka.mst_ulink ulink_utama
			where ( ulink_utama.reg_spaj = rpad(replace(#value#,'.'),11,' ')) 
			 and   ( ulink_utama.mu_ke = 1 )   			  
         </select>	 
         
		<!-- 
			SELECT   a.reg_spaj reg_spaj1, a.mu_ke mu_ke1, b.lji_id lji_id1,
			         a.mdu_persen mdu_persen1, a.mdu_jumlah mdu_jumlah1,
			         b.lji_invest lji_invest1
			    FROM (SELECT *
			            FROM eka.mst_det_ulink
			           WHERE reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
			             AND mu_ke = 1) a,
			         eka.lst_jenis_invest b
			   WHERE b.lji_id = a.lji_id
			ORDER BY b.lji_id
		 --> 	
		<select id="elions.bac.selectdetilinvestasi" resultClass="com.ekalife.elions.model.DetilInvestasi" parameterClass="string">
			  select a.reg_spaj reg_spaj1,   
			        a.mu_ke mu_ke1,   
			         b.lji_id lji_id1,   
			         a.mdu_persen mdu_persen1,   
			         a.mdu_jumlah mdu_jumlah1,   
			         b.lji_invest lji_invest1  
			    	from (select * from eka.mst_det_ulink where reg_spaj=rpad(replace(#value#,'.'),11,' ') and mu_ke = 1 ) a,   
			         eka.lst_jenis_invest b 
				where ( b.lji_id = a.lji_id (+)) 
				order by b.lji_id 
 		</select>

		<select id="elions.bac.selectdetilinvestasi2" resultClass="com.ekalife.elions.model.DetilInvestasi" parameterClass="string">
			  select a.reg_spaj reg_spaj1,   
			        a.mu_ke mu_ke1,   
			         b.lji_id lji_id1,   
			         a.mdu_persen mdu_persen1,   
			         a.mdu_jumlah mdu_jumlah1,   
			         b.lji_invest lji_invest1  
			    	from (select * from eka.mst_det_ulink where reg_spaj=rpad(replace(#value#,'.'),11,' ') and mu_ke = 1 ) a,   
			         eka.lst_jenis_invest b 
				where (b.lji_id = a.lji_id (+))
					and a.reg_spaj is not null
				order by b.lji_id 
 		</select>
 		
 		<select id="elions.bac.selectdetilinvestasimallspaj" resultClass="com.ekalife.elions.model.DetilInvestasi" parameterClass="string">
			  select a.reg_spaj reg_spaj1,   
			        a.mu_ke mu_ke1,   
			         b.lji_id lji_id1,   
			         a.mdu_persen mdu_persen1,   
			         a.mdu_jumlah mdu_jumlah1,   
			         b.lji_invest lji_invest1  
			    	from (select * from eka.mst_det_ulink where reg_spaj=rpad(replace(#value#,'.'),11,' ') and mu_ke = 1 ) a,   
			         eka.lst_jenis_invest b 
				where ( b.lji_id = a.lji_id (+))
				and   b.lji_id in ('01','02','03','22','23') 
				order by b.lji_id 
 		</select>    
 		
 		<select id="elions.bac.selectdetilinvestasisyariah" resultClass="com.ekalife.elions.model.DetilInvestasi" parameterClass="string">
			  select a.reg_spaj reg_spaj1,   
			        a.mu_ke mu_ke1,   
			         b.lji_id lji_id1,   
			         a.mdu_persen mdu_persen1,   
			         a.mdu_jumlah mdu_jumlah1,   
			         b.lji_invest lji_invest1  
			    	from (select * from eka.mst_det_ulink where reg_spaj=rpad(replace(#value#,'.'),11,' ') and mu_ke = 1 ) a,   
			         eka.lst_jenis_invest b 
				where ( b.lji_id = a.lji_id (+))
				and   b.lji_id in ('06','07','08') 
				order by b.lji_id 
 		</select>
 		
 		<!-- 
		KODE_FLAG
		 * null - buka semua
		 * 0 - (tutup)
		 * 1 - (tutup) POWER SAVE
		 * 2 - (01, 02) MEDIVEST
		 * 3 - (03) EXCELLINK PLATINUM
		 * 4 - (01,02,03) EKALINK, EX18, EDUVEST, EX80+ KARY, PLATLINK, CERDAS SEJAHTERA, CERDAS PROTEKSI, CERDAS SISWA 
		 * 5 - (04,05) ($) EKALINK, EX18, EDUVEST, EX80+ KARY, PLATLINK, CERDAS SEJAHTERA, CERDAS PROTEKSI, CERDAS SISWA
		 * 6 - (06,07) FAST EXCELLINK SYARIAH 
		 * 7 - (06,07,08) EKALINK FAM SYARIAH, EX80+ SYARIAH, EX80 SYARIAH
		 * 8 - (09,10) ($) EKALINK FAM SYARIAH, EX80+ SYARIAH, EX80 SYARIAH
		 * 9 - (11,12,13) ARTHALINK, (16,17,18) EKALINK 88
		 * 10 - (14,15) ($) ARTHALINK, (19,20) ($) EKALINK 88
		 * 11 - (22) RP STABLE LINK, (23) $ STABLE LINK
		 * 12 - (21) INVESTIMAX
		 * 13 - (07,08) AMANAH LINK
 		 -->
		<select id="elions.bac.selectinvestasiutamakosong" resultClass="int" parameterClass="int">
			select count(*) jmlh_invest
			from eka.lst_jenis_invest     
			<isEqual compareValue="2"> where lji_id IN ('01','02')  </isEqual>
			<isEqual compareValue="3"> where lji_id IN ('03')  </isEqual>
			<isEqual compareValue="4"> where lji_id IN ('01', '02', '03')  </isEqual>
			<isEqual compareValue="5"> where lji_id IN ('04', '05')  </isEqual>
			<isEqual compareValue="6"> where lji_id IN ('06', '07')  </isEqual>
			<isEqual compareValue="7"> where lji_id IN ('06', '07', '08')  </isEqual>
			<isEqual compareValue="8"> where lji_id IN ('09', '10')  </isEqual>
			<isEqual compareValue="9"> where lji_id IN ('11', '12', '13', '16', '17', '18')  </isEqual>
			<isEqual compareValue="10"> where lji_id IN ('14', '15', '19', '20')  </isEqual>
			<isEqual compareValue="11"> where lji_id IN ('22', '23')  </isEqual>
			<isEqual compareValue="12"> where lji_id IN ('21')  </isEqual>
			<isEqual compareValue="13"> where lji_id IN ('07', '08')  </isEqual>
         </select>         	
 		<select id="elions.bac.selectdetilinvestasikosong"  resultClass="com.ekalife.elions.model.DetilInvestasi" parameterClass="int">
			SELECT   a.reg_spaj reg_spaj1, a.mu_ke mu_ke1, b.lji_id lji_id1,
			         a.mdu_persen mdu_persen1, a.mdu_jumlah mdu_jumlah1,
			         b.lji_invest lji_invest1
			    FROM (SELECT * FROM eka.mst_det_ulink WHERE reg_spaj = RPAD ('', 11, ' ') AND mu_ke = 1) a,
			         eka.lst_jenis_invest b
			   WHERE 
				<isNotEmpty>
					<isEqual compareValue="2"> b.lji_id IN ('01','02') AND </isEqual>
					<isEqual compareValue="3"> b.lji_id IN ('03') AND </isEqual>
					<isEqual compareValue="4"> b.lji_id IN ('01', '02', '03') AND </isEqual>
					<isEqual compareValue="5"> b.lji_id IN ('04', '05') AND </isEqual>
					<isEqual compareValue="6"> b.lji_id IN ('06', '07') AND </isEqual>
					<isEqual compareValue="7"> b.lji_id IN ('06', '07', '08') AND </isEqual>
					<isEqual compareValue="8"> b.lji_id IN ('09', '10') AND </isEqual>
					<isEqual compareValue="9"> b.lji_id IN ('11', '12', '13', '16', '17', '18') AND </isEqual>
					<isEqual compareValue="10"> b.lji_id IN ('14', '15', '19', '20') AND </isEqual>
					<isEqual compareValue="11"> b.lji_id IN ('22', '23') AND </isEqual>
					<isEqual compareValue="12"> b.lji_id IN ('21') AND </isEqual>
					<isEqual compareValue="13"> b.lji_id IN ('07', '08') AND </isEqual>
				</isNotEmpty>
			         b.lji_id = a.lji_id(+)
			ORDER BY b.lji_id
 		</select>
 		
 		<select id="elions.bac.selectdetilinvestasimall"  resultClass="com.ekalife.elions.model.DetilInvestasi" parameterClass="int">
			SELECT   a.reg_spaj reg_spaj1, a.mu_ke mu_ke1, b.lji_id lji_id1,
			         a.mdu_persen mdu_persen1, a.mdu_jumlah mdu_jumlah1,
			         b.lji_invest lji_invest1
			    FROM (SELECT * FROM eka.mst_det_ulink WHERE reg_spaj = RPAD ('', 11, ' ') AND mu_ke = 1) a,
			         eka.lst_jenis_invest b
			   WHERE b.lji_id in ('01', '02', '03','22','23')
			     AND b.lji_id = a.lji_id(+)
			ORDER BY b.lji_id
 		</select>
         
 		<select id="elions.bac.selectdetilinvbiaya" resultClass="com.ekalife.elions.model.Biayainvestasi" parameterClass="string">
		         select eka.mst_biaya_ulink.reg_spaj,   
		         eka.mst_biaya_ulink.mu_ke,   
		         eka.mst_biaya_ulink.ljb_id,   
		         eka.mst_biaya_ulink.mbu_jumlah,   
		         eka.mst_biaya_ulink.mbu_persen,   
		         eka.lst_jenis_biaya.ljb_biaya ,
				 eka.mst_biaya_ulink.mbu_end_pay,
				 EKA.LST_JENIS_BIAYA.FLAG_JENIS
		    from eka.mst_biaya_ulink,   
		         eka.lst_jenis_biaya  
		   where ( eka.mst_biaya_ulink.ljb_id = eka.lst_jenis_biaya.ljb_id ) and  
		         ( ( eka.mst_biaya_ulink.reg_spaj = rpad(replace(#value#,'.'),11,' ') ) and  
		         ( eka.mst_biaya_ulink.mu_ke in (1,2) ) )  
		         order by eka.mst_biaya_ulink.mu_ke,eka.mst_biaya_ulink.ljb_id
		</select>  
		
 	<select id="elions.bac.select_rek_client" resultClass="com.ekalife.elions.model.Rekening_client" parameterClass="string">
		SELECT "EKA"."MST_REK_CLIENT"."REG_SPAJ", "EKA"."MST_REK_CLIENT"."LSBP_ID",
		       "EKA"."MST_REK_CLIENT"."MRC_CABANG", "EKA"."MST_REK_CLIENT"."MRC_NAMA",
		       "EKA"."MST_REK_CLIENT"."MRC_NO_AC", "EKA"."MST_REK_CLIENT"."MRC_JENIS",
		       "EKA"."MST_REK_CLIENT"."MRC_JN_NASABAH",
		       "EKA"."MST_REK_CLIENT"."MRC_KOTA", "EKA"."MST_REK_CLIENT"."MRC_KURS",
		       "EKA"."MST_REK_CLIENT"."LUS_ID", "EKA"."MST_REK_CLIENT"."TGL_CHANGE",
		       "EKA"."MST_REK_CLIENT"."MRC_KUASA", "EKA"."MST_REK_CLIENT"."TGL_SURAT",
		       DECODE ("EKA"."MST_REK_CLIENT"."MRC_KUASA", 0, 'Tidak', 'Ya') "KUASA",
			   eka.lst_bank_pusat.lsbp_nama
		  FROM "EKA"."MST_REK_CLIENT",eka.lst_bank_pusat
		 WHERE eka."MST_REK_CLIENT"."REG_SPAJ" = RPAD (REPLACE (#value#, '.'), 11, ' ') and
		 eka.lst_bank_pusat.lsbp_id = "EKA"."MST_REK_CLIENT"."LSBP_ID" 
 	</select>	
 	
 	<select id="elions.bac.select_rek_client_temp" resultClass="com.ekalife.elions.model.Rekening_client" parameterClass="string">
		SELECT  "EKA"."MST_REK_CLIENT_TEMP"."LSBP_ID",
		       "EKA"."MST_REK_CLIENT_TEMP"."MRC_CABANG", "EKA"."MST_REK_CLIENT_TEMP"."MRC_NAMA",
		       "EKA"."MST_REK_CLIENT_TEMP"."MRC_NO_AC", "EKA"."MST_REK_CLIENT_TEMP"."MRC_JENIS",
		       "EKA"."MST_REK_CLIENT_TEMP"."MRC_JN_NASABAH",
		       "EKA"."MST_REK_CLIENT_TEMP"."MRC_KOTA", "EKA"."MST_REK_CLIENT_TEMP"."MRC_KURS",
		       "EKA"."MST_REK_CLIENT_TEMP"."LUS_ID", "EKA"."MST_REK_CLIENT_TEMP"."TGL_CHANGE",
		       "EKA"."MST_REK_CLIENT_TEMP"."MRC_KUASA", "EKA"."MST_REK_CLIENT_TEMP"."TGL_SURAT",
		       DECODE ("EKA"."MST_REK_CLIENT_TEMP"."MRC_KUASA", 0, 'Tidak', 'Ya') "KUASA",
			   eka.lst_bank_pusat.lsbp_nama
		  FROM "EKA"."MST_REK_CLIENT_TEMP",eka.lst_bank_pusat
		 WHERE eka."MST_REK_CLIENT_TEMP"."NO_TEMP" = #value# and
		 eka.lst_bank_pusat.lsbp_id = "EKA"."MST_REK_CLIENT_TEMP"."LSBP_ID" 
 	</select>	
 	
  	<select id="elions.bac.select_account_recur" resultClass="com.ekalife.elions.model.Account_recur" parameterClass="string">
		  SELECT "EKA"."MST_ACCOUNT_RECUR"."REG_SPAJ",   
	         "EKA"."MST_ACCOUNT_RECUR"."MAR_NUMBER",   
	         "EKA"."MST_ACCOUNT_RECUR"."LBN_ID",   
	         "EKA"."MST_ACCOUNT_RECUR"."MAR_JENIS",   
	         "EKA"."MST_ACCOUNT_RECUR"."MAR_ACC_NO",   
	         "EKA"."MST_ACCOUNT_RECUR"."MAR_HOLDER",   
	         "EKA"."MST_ACCOUNT_RECUR"."MAR_EXPIRED",   
	         "EKA"."MST_ACCOUNT_RECUR"."MAR_ACTIVE",
	         "EKA"."MST_ACCOUNT_RECUR"."FLAG_JN_TABUNGAN",
	         "EKA"."MST_ACCOUNT_RECUR"."FLAG_AUTODEBET_NB",
	         "EKA"."MST_ACCOUNT_RECUR"."FLAG_SET_AUTO",
	         "EKA"."MST_ACCOUNT_RECUR"."TGL_DEBET"
	    FROM "EKA"."MST_ACCOUNT_RECUR"  
	   WHERE EKA."MST_ACCOUNT_RECUR"."REG_SPAJ" = rpad(replace(#value#,'.'),11,' ')      
 	</select>		
 	
    	
    <select id="elions.bac.select_slink" resultClass="com.ekalife.elions.model.Powersave" parameterClass="string">
		SELECT reg_spaj, msl_no, lji_id, msl_kode MPS_KODE, msl_ro MPS_ROLL_OVER, no_reg, tarik_bunga,
		       msl_posisi, msl_bdate, msl_edate, msl_premi MPS_PRM_DEPOSIT, msl_rate MPS_RATE, msl_mgi MPS_JANGKA_INV,
		       msl_bunga MPS_PRM_INTEREST, msl_tax, msl_tgl_nab, msl_nab, msl_unit, msl_saldo_unit,
		       msl_tarik_pertama, msl_bp_rate, msl_tgl_nab_bp, msl_nab_bp,
		       msl_nilai_polis, msl_bp, msl_bp_pt, msl_up, msl_hari MPR_HARI, msl_next_date MPS_BATAS_DATE,
		       msl_bayar_bunga, msl_bayar_bp, msl_input_date, msl_trans_date,
		       msl_proses_date, msl_confirm_date, msl_prod_date, flag_special MPS_JENIS_PLAN,
		       msl_tahun_ke, msl_premi_ke, msl_note MPR_NOTE, lus_id, msl_flag_print,
		       msl_print_date, msl_aktif, msl_tu_ke, msl_flag_up, msl_jn_rumus,
		       msl_flag_comm, msl_print, no_reg_ref, msl_bayar_tarik, msl_desc,
		       msl_rate_date, msl_new, msl_surr_charge, msl_letter_date,
		       msl_paid_date, msl_cash, nvl(msl_flag_cb,0) FLAG_RIDER, msl_surat_pdf, msl_proses_bsm,
		       flag_bulanan, no_trx, flag_special, msl_employee
		  FROM eka.mst_slink
		 WHERE reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		   AND msl_kode = 5
		   AND msl_no = 1
	</select>
	
	<select id="elions.bac.select_rider_save" resultClass="java.util.HashMap" parameterClass="string">
		select mrs_rider_cb, lscb_id_rider 
		from eka.mst_rider_save 
		where reg_spaj = rpad(replace(#value#,'.'),11,' ') 
		and mps_kode = 5 
		and rownum=1
	</select>

  <select id="elions.bac.select_slink_topup" resultClass="com.ekalife.elions.model.Powersave" parameterClass="string">
		SELECT reg_spaj, msl_no, lji_id, msl_kode MPS_KODE, msl_ro MPS_ROLL_OVER, no_reg, tarik_bunga,
		       msl_posisi, msl_bdate, msl_edate, msl_premi MPS_PRM_DEPOSIT, msl_rate MPS_RATE, msl_mgi MPS_JANGKA_INV,
		       msl_bunga MPS_PRM_INTEREST, msl_tax, msl_tgl_nab, msl_nab, msl_unit, msl_saldo_unit,
		       msl_tarik_pertama, msl_bp_rate, msl_tgl_nab_bp, msl_nab_bp,
		       msl_nilai_polis, msl_bp, msl_bp_pt, msl_up, msl_hari MPR_HARI, msl_next_date MPS_BATAS_DATE,
		       msl_bayar_bunga, msl_bayar_bp, msl_input_date, msl_trans_date,
		       msl_proses_date, msl_confirm_date, msl_prod_date, flag_rate MPS_JENIS_PLAN,
		       msl_tahun_ke, msl_premi_ke, msl_note MPR_NOTE, lus_id, msl_flag_print,
		       msl_print_date, msl_aktif, msl_tu_ke, msl_flag_up, msl_jn_rumus,
		       msl_flag_comm, msl_print, no_reg_ref, msl_bayar_tarik, msl_desc,
		       msl_rate_date, msl_new, msl_surr_charge, msl_letter_date,
		       msl_paid_date, msl_cash,  nvl(msl_flag_cb,0) FLAG_RIDER, msl_surat_pdf, msl_proses_bsm,
		       flag_bulanan, no_trx, flag_special
		  FROM eka.mst_slink
		 WHERE reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		   AND msl_kode = 5
		   AND msl_no = 2 AND msl_new = 1
	</select>

   	<select id="elions.bac.select_powersaver" resultClass="com.ekalife.elions.model.Powersave" parameterClass="string">
		SELECT b.reg_spaj, b.mps_kode, b.mps_deposit_date, (b.mps_batas_date - 1) mps_batas_date, a.mpr_mature_date,
		       b.mps_roll_over, b.mps_jangka_inv, b.mps_rate_date, b.mps_rate,
		       b.mps_prm_deposit, b.mps_prm_interest, b.mps_prm_insurance,
		       b.mps_prm_debet, b.mps_tax, b.mps_input_date, b.lus_id, b.mps_employee,
		       a.mpr_note, DECODE (LENGTH (TRIM (a.mpr_note)), NULL, 0, 1) jenis_rate, b.mps_jenis_plan, a.mpr_nett_tax,
		       a.mpr_hari, a.mpr_jns_rumus, a.mpr_breakable, a.mpr_flag_cb flag_rider
		  FROM eka.mst_powersave_ro a, eka.mst_powersave_proses b
		 WHERE a.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		   AND a.mps_kode = 5
		   AND a.reg_spaj = b.reg_spaj
		   AND a.mps_kode = b.mps_kode
		   AND a.mps_deposit_date = b.mps_deposit_date
 	</select>
 	
 	<select id="elions.bac.select_powersaver_baru" resultClass="com.ekalife.elions.model.Powersave" parameterClass="string">
		select reg_spaj, mps_kode, mps_bdate mps_deposit_date, mps_edate mps_batas_date,
	        mps_ro mps_roll_over, mps_mgi mps_jangka_inv, mps_rate_date, mps_rate,
	        mps_premi mps_prm_deposit, mps_bunga mps_prm_interest, 0 mps_prm_insurance,
	        0 mps_prm_debet, mps_tax, mps_input_date, lus_id,
	        mps_note mpr_note, DECODE (LENGTH (TRIM (mps_note)), NULL, 0, 1) jenis_rate, mps_flag_rate mps_jenis_plan,
	        mps_hari mpr_hari, mps_jn_rumus mpr_jn_rumus, mps_flag_cb flag_rider,flag_bulanan
		from eka.mst_psave
		where reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		AND mps_kode = 5
		AND mps_new = 1
 	</select>
 	
 	<select id="elions.bac.selectMstTamu" resultClass="com.ekalife.elions.model.Tamu" parameterClass="string">
 		select kd_tamu, nama_tamu, tgl_lahir, kd_area_telp kode_area_telp, no_telp, no_hp,
		       a.msag_id, kd_spg lcb_no, email, b.nama_bfa nama_penutup
		from eka.mst_tamu@mallins a,
		     eka.lst_bfa@mallins b
		where a.msag_id = b.msag_id
		and a.kd_tamu = #kd_tamu#
 	</select>
 	
 	<select id="elions.bac.selectMstProposal" resultClass="com.ekalife.elions.model.Datausulan" parameterClass="string">
 		select a.lsbs_id, a.lsdbs_number, a.mspr_tsi, a.mspr_premium, a.mspr_lama_bayar, a.lscb_id, a.lku_id,a.flag_packet ,b.lku_symbol
		from eka.mst_proposal@mallins a,
			 eka.lst_kurs b
		where a.lsbs_id <![CDATA[<]]> 300
		and a.kd_tamu = #kd_tamu#
		and a.lku_id = b.lku_id
 	</select>
 	
 	<select id="elions.bac.selectMstProposalRider" resultClass="com.ekalife.elions.model.Datausulan" parameterClass="string">
 		select lsbs_id, lsdbs_number, mspr_lama_bayar, lscb_id, lku_id, 0 flag_include,mspr_tsi,
 			   (lsbs_id || '~X' || lsdbs_number) plan_rider, lsbs_id plan_rider1
		from eka.mst_proposal@mallins
		where lsbs_id <![CDATA[>=]]> 800
		and kd_tamu = #kd_tamu#
 	</select>
    
	<select id="elions.bac.select_stablesaver" resultClass="com.ekalife.elions.model.Powersave" parameterClass="string">
		SELECT reg_spaj, mss_kode mps_kode, mss_bdate mps_deposit_date,
		       (mss_edate + 1) mps_batas_date, mss_ro mps_roll_over,
		       mss_mgi mps_jangka_inv, mss_rate_date mps_rate_date, mss_rate mps_rate,
		       mss_premi mps_prm_deposit, mss_bunga mps_prm_interest,
		       NULL mps_prm_debet, mss_tax mps_tax, mss_input_date mps_input_date,
		       lus_id, 0 mps_employee, mss_note mpr_note,
		       DECODE (LENGTH (TRIM (mss_note)), NULL, 0, 1) jenis_rate,
		       0 mps_jenis_plan, mss_flag_rate mpr_nett_tax, mss_hari mpr_hari,
		       mss_jn_rumus mpr_jns_rumus, NULL mpr_breakable, mss_flag_cb flag_rider, flag_bulanan
		  FROM eka.mst_ssave
		 WHERE reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ') and mss_kode = 5
	</select> 	
 	
 	<resultMap id="elions.bac.select_produkutama1" class="java.util.HashMap">
	 	<result property="lsbs_id" column="lsbs_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
		<result property="lsbs_name" column="lsbs_name" javaType="string" jdbcType="VARCHAR2" nullValue=""/>    
	</resultMap>
	
	<select id="elions.bac.select_produkutama" resultMap="elions.bac.select_produkutama1" >
          SELECT "EKA"."LST_BISNIS"."LSBS_ID",   
         		 LSBS_NAME ||' ~ '|| LSBS_NAME0 LSBS_NAME
	      FROM "EKA"."LST_BISNIS"
	   	  WHERE ( EKA."LST_BISNIS"."LSBS_ID" <![CDATA[ <  ]]> 300 ) AND  
	         	( EKA."LST_BISNIS"."LSBS_ACTIVE" = 1 )
		  ORDER BY "EKA"."LST_BISNIS"."LSBS_NAME" ASC   
	</select>     

	<select id="elions.bac.select_produkutamamall" resultMap="elions.bac.select_produkutama1" >
          SELECT "EKA"."LST_BISNIS"."LSBS_ID",   
         		 LSBS_NAME ||' ~ '|| LSBS_NAME0 LSBS_NAME
	      	FROM "EKA"."LST_BISNIS"
	   		WHERE ( EKA."LST_BISNIS"."LSBS_ID" in (120,129, 183, 178, 186, 191, 192, 208) ) AND  
	         	  ( EKA."LST_BISNIS"."LSBS_ACTIVE" = 1 )
			ORDER BY "EKA"."LST_BISNIS"."LSBS_NAME" ASC   
	</select>
	
	<select id="elions.bac.select_produkutamacfl" resultMap="elions.bac.select_produkutama1" >
          SELECT "EKA"."LST_BISNIS"."LSBS_ID",   
         		 LSBS_NAME ||' ~ '|| LSBS_NAME0 LSBS_NAME
	    	FROM "EKA"."LST_BISNIS"
	   		WHERE ( EKA."LST_BISNIS"."LSBS_ID" in (159) ) AND
	         	  ( EKA."LST_BISNIS"."LSBS_ACTIVE" = 1 )
			ORDER BY "EKA"."LST_BISNIS"."LSBS_NAME" ASC   
	</select>
	
	<select id="elions.bac.select_produkutama_online" resultMap="elions.bac.select_produkutama1" >
          SELECT "EKA"."LST_BISNIS"."LSBS_ID",   
         		 LSBS_NAME ||' ~ '|| LSBS_NAME0 LSBS_NAME
	    	 FROM "EKA"."LST_BISNIS"  
	   WHERE ( EKA."LST_BISNIS"."LSBS_ID" in (116,130,145,146,159,173,181,183,190,193,153,160,175,182) ) AND  
	         ( EKA."LST_BISNIS"."LSBS_ACTIVE" = 1 )   
	ORDER BY "EKA"."LST_BISNIS"."LSBS_NAME" ASC   
	</select>
	
	<select id="elions.bac.select_produkutama_banksinarmas" resultMap="elions.bac.select_produkutama1" >
		SELECT   lsbs_id, lsbs_name
		    FROM eka.lst_bisnis
		   WHERE lsbs_id in (111,120,142,158,163,164,186,188,183) AND lsbs_active = 1
		ORDER BY lsbs_name ASC
	</select>	
	
	<select id="elions.bac.select_produkutama_banksinarmas_simpol" resultMap="elions.bac.select_produkutama1" >
		SELECT   lsbs_id, lsbs_name
		    FROM eka.lst_bisnis
		   WHERE lsbs_id in (120) AND lsbs_active = 1
		ORDER BY lsbs_name ASC
	</select>	
	
	<select id="elions.bac.select_produkutama_bsim" resultMap="elions.bac.select_produkutama1" >
		SELECT   lsbs_id, lsbs_name
		    FROM eka.lst_bisnis
		   WHERE lsbs_id in (175) AND lsbs_active = 1
		ORDER BY lsbs_name ASC
	</select>	
	
<!--	<select id="elions.bac.select_produkutama_banksinarmas" resultMap="elions.bac.select_produkutama1" >-->
<!--		SELECT   lsbs_id, lsbs_name-->
<!--		    FROM eka.lst_bisnis-->
<!--		   WHERE lsbs_id in (142,158,164,186) AND lsbs_active = 1-->
<!--		ORDER BY lsbs_name ASC-->
<!--	</select>	-->

	<select id="elions.bac.select_produkutama_sekuritas" resultMap="elions.bac.select_produkutama1" >
		SELECT   lsbs_id, LSBS_NAME ||' ~ '|| LSBS_NAME0 LSBS_NAME
		    FROM eka.lst_bisnis
		   WHERE lsbs_id in (142,158,164) AND lsbs_active = 1
		ORDER BY lsbs_name ASC
	</select>	

	<select id="elions.bac.select_produkutama_platinumbii" resultMap="elions.bac.select_produkutama1" >
		SELECT   lsbs_id, lsbs_name
		    FROM eka.lst_bisnis
		   WHERE lsbs_id in (155,158) AND lsbs_active = 1
		ORDER BY lsbs_name ASC
	</select>	

 	<resultMap id="elions.bac.select_detilprodukutama1" class="java.util.HashMap">
		<result property="lsdbs_number" column="lsdbs_number" javaType="int" jdbcType="NUMBER" />                                                                                                                                                       
		<result property="lsdbs_name" column="lsdbs_name" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                          
		<result property="lsbs_id" column="lsbs_id" javaType="int" jdbcType="NUMBER" /> 
		<result property="plan" column="plan" javaType="string" jdbcType="VARCHAR2" nullValue=""/>       
	</resultMap>

	<select id="elions.bac.select_detilprodukutama" resultMap="elions.bac.select_detilprodukutama1" parameterClass="int">
	  SELECT "EKA"."LST_DET_BISNIS"."LSBS_ID",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NUMBER",   
         LSDBS_NAME || ' ~ ' || LSDBS_NAME0 LSDBS_NAME,  
         "EKA"."LST_DET_BISNIS"."LSBS_ID"||'~X'||"EKA"."LST_DET_BISNIS"."LSDBS_NUMBER" plan
    FROM "EKA"."LST_DET_BISNIS"  
   WHERE ( EKA."LST_DET_BISNIS"."LSBS_ID" = #value# ) AND  
         ( EKA."LST_DET_BISNIS"."LSBS_ID" <![CDATA[ <  ]]> 300 )
         and	EKA.LST_DET_BISNIS.LSDBS_AKTIF = 1 
	</select>
	
	<select id="elions.bac.select_detilprodukutamaadminmall" resultMap="elions.bac.select_detilprodukutama1" parameterClass="int">
	  SELECT "EKA"."LST_DET_BISNIS"."LSBS_ID",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NUMBER",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NAME",  
         "EKA"."LST_DET_BISNIS"."LSBS_ID"||'~X'||"EKA"."LST_DET_BISNIS"."LSDBS_NUMBER" plan
    FROM "EKA"."LST_DET_BISNIS"  
   WHERE ( EKA."LST_DET_BISNIS"."LSBS_ID" = #value# ) AND  
         ( EKA."LST_DET_BISNIS"."LSBS_ID" <![CDATA[ <  ]]> 300 )   
         <isEqual compareValue="142">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER = 10
         </isEqual>
         <isEqual compareValue="143">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER = 7
         </isEqual>
         <isEqual compareValue="164">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER in (9,10)
         </isEqual> 
         <isEqual compareValue="188">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER = 9
         </isEqual>   
         <isEqual compareValue="191">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER = 1
         </isEqual>   
         and	EKA.LST_DET_BISNIS.LSDBS_AKTIF = 1 
	</select>		
	
	<select id="elions.bac.select_detilprodukutamamall" resultMap="elions.bac.select_detilprodukutama1" parameterClass="int">
	  SELECT "EKA"."LST_DET_BISNIS"."LSBS_ID",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NUMBER",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NAME",  
         "EKA"."LST_DET_BISNIS"."LSBS_ID"||'~X'||"EKA"."LST_DET_BISNIS"."LSDBS_NUMBER" plan
    FROM "EKA"."LST_DET_BISNIS"  
   WHERE ( EKA."LST_DET_BISNIS"."LSBS_ID" = #value# ) AND  
         ( EKA."LST_DET_BISNIS"."LSBS_ID" <![CDATA[ <  ]]> 300 )   
         <isEqual compareValue="120">
            and EKA.LST_DET_BISNIS.LSDBS_NUMBER in(16,17)           
         </isEqual>         
         <isEqual compareValue="129">
            and EKA.LST_DET_BISNIS.LSDBS_NUMBER in(11,12)          
         </isEqual>
         <isEqual compareValue="178">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER between 1 and 32
         </isEqual>     
         <isEqual compareValue="186">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER = 1
         </isEqual>
         <isEqual compareValue="187">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER <![CDATA[ <=  ]]> 4
         </isEqual>
         <isEqual compareValue="208">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER <![CDATA[ <=  ]]> 4
         </isEqual>
         and	EKA.LST_DET_BISNIS.LSDBS_AKTIF = 1 
	</select>
	
	<select id="elions.bac.select_detilprodukutamacfl" resultMap="elions.bac.select_detilprodukutama1" parameterClass="int">
	  SELECT "EKA"."LST_DET_BISNIS"."LSBS_ID",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NUMBER",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NAME",  
         "EKA"."LST_DET_BISNIS"."LSBS_ID"||'~X'||"EKA"."LST_DET_BISNIS"."LSDBS_NUMBER" plan
    FROM "EKA"."LST_DET_BISNIS"  
   WHERE ( EKA."LST_DET_BISNIS"."LSBS_ID" = #value# ) AND  
         ( EKA."LST_DET_BISNIS"."LSBS_ID" <![CDATA[ <  ]]> 300 )   
         <isEqual compareValue="159">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER in (1,2)
         </isEqual>
         and	EKA.LST_DET_BISNIS.LSDBS_AKTIF = 1 
	</select>	
	
	<select id="elions.bac.select_detilprodukutama_bsim" resultMap="elions.bac.select_detilprodukutama1" parameterClass="int">
	  SELECT "EKA"."LST_DET_BISNIS"."LSBS_ID",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NUMBER",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NAME",  
         "EKA"."LST_DET_BISNIS"."LSBS_ID"||'~X'||"EKA"."LST_DET_BISNIS"."LSDBS_NUMBER" plan
   		 FROM "EKA"."LST_DET_BISNIS"  
   		WHERE ( EKA."LST_DET_BISNIS"."LSBS_ID" = #value# ) AND  
         ( EKA."LST_DET_BISNIS"."LSBS_ID" <![CDATA[<]]> 300 )           
           <isEqual compareValue="175">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER in (2)
         </isEqual>
         and	EKA.LST_DET_BISNIS.LSDBS_AKTIF = 1 
	</select>	
	
	<select id="elions.bac.select_detilprodukutamaonline" resultMap="elions.bac.select_detilprodukutama1" parameterClass="int">
	  SELECT "EKA"."LST_DET_BISNIS"."LSBS_ID",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NUMBER",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NAME",  
         "EKA"."LST_DET_BISNIS"."LSBS_ID"||'~X'||"EKA"."LST_DET_BISNIS"."LSDBS_NUMBER" plan
    FROM "EKA"."LST_DET_BISNIS"  
   WHERE ( EKA."LST_DET_BISNIS"."LSBS_ID" = #value# ) AND  
         ( EKA."LST_DET_BISNIS"."LSBS_ID" <![CDATA[ <  ]]> 300 )   
         <isEqual compareValue="045">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER in (1)
         </isEqual>
         <isEqual compareValue="116">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER in (3,4)
         </isEqual>
         <isEqual compareValue="130">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER in (1)
         </isEqual>
         <isEqual compareValue="143">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER in (1)
         </isEqual>
         <isEqual compareValue="158">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER in (1)
         </isEqual>
         <isEqual compareValue="159">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER in (1,2)
         </isEqual>
          <isEqual compareValue="164">
         	and EKA.LST_DET_BISNIS.LSDBS_NUMBER in (1)
         </isEqual>
         	and	EKA.LST_DET_BISNIS.LSDBS_AKTIF = 1 
	</select>	
	
	<select id="elions.bac.select_detilprodukutama_viewer" resultMap="elions.bac.select_detilprodukutama1" parameterClass="int">
	  SELECT "EKA"."LST_DET_BISNIS"."LSBS_ID",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NUMBER",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NAME" || ' ~ ' || "EKA"."LST_DET_BISNIS"."LSDBS_NAME0" LSDBS_NAME,  
         "EKA"."LST_DET_BISNIS"."LSBS_ID"||'~X'||"EKA"."LST_DET_BISNIS"."LSDBS_NUMBER" plan
    FROM "EKA"."LST_DET_BISNIS"  
   WHERE ( EKA."LST_DET_BISNIS"."LSBS_ID" = #value# )
	</select>	
	
	<select id="elions.bac.select_detilprodukutama_banksinarmas" resultMap="elions.bac.select_detilprodukutama1" parameterClass="int">
		SELECT lsbs_id, lsdbs_number, 
		       lsdbs_name,
		       lsbs_id || '~X' || lsdbs_number PLAN
		  FROM eka.lst_det_bisnis
		 WHERE lsbs_id = #value#
		   AND lsdbs_aktif = 1
		<isEqual compareValue="073">
			AND lsdbs_number between 5 and 7
		</isEqual>
		<isEqual compareValue="111">
			AND lsdbs_number in (2)
		</isEqual>
		<isEqual compareValue="120">
			AND lsdbs_number in (10,11,12,22,23,24)
		</isEqual>
		<isEqual compareValue="142">
			AND lsdbs_number in (2)
		</isEqual>	
		<isEqual compareValue="158">
			AND lsdbs_number in (6)
		</isEqual>	
		<isEqual compareValue="163">
			AND lsdbs_number between 6 and 10
		</isEqual>	   
		<isEqual compareValue="164">
			AND lsdbs_number in (2,11)
		</isEqual>
		<isEqual compareValue="183">
			AND lsdbs_number between 46 and 60
		</isEqual>		
		<isEqual compareValue="186">
			AND lsdbs_number in (3)
		</isEqual>			
		<isEqual compareValue="188">
			AND lsdbs_number in (2)
		</isEqual>
	</select>	
		
	<select id="elions.bac.select_detilprodukutama_sekuritas" resultMap="elions.bac.select_detilprodukutama1" parameterClass="int">
		SELECT lsbs_id, lsdbs_number, 
		       lsdbs_name,
		       lsbs_id || '~X' || lsdbs_number PLAN
		  FROM eka.lst_det_bisnis
		 WHERE lsbs_id = #value#
		   AND lsdbs_aktif = 1
		<isEqual compareValue="142">
			AND lsdbs_number in (9,11)
		</isEqual>		   
		<isEqual compareValue="158">
			AND lsdbs_number in (14)
		</isEqual>
		<isEqual compareValue="164">
			AND lsdbs_number in (8)
		</isEqual>			   
	</select>	
		
	<select id="elions.bac.select_detilprodukutama_platinumbii" resultMap="elions.bac.select_detilprodukutama1" parameterClass="int">
		SELECT lsbs_id, lsdbs_number, lsdbs_name,
		       lsbs_id || '~X' || lsdbs_number PLAN
		  FROM eka.lst_det_bisnis
		 WHERE lsbs_id = #value#
		   AND lsbs_id <![CDATA[ <  ]]> 300
		   AND lsdbs_aktif = 1
		   <isEqual compareValue="155">
			   AND lsdbs_number in (1,2,3)
		   </isEqual>
	</select>	
		
	<select id="elions.bac.select_namaproduk" resultClass="string" parameterClass="string">
	  SELECT "EKA"."LST_DET_BISNIS"."LSDBS_NAME"
    FROM "EKA"."LST_DET_BISNIS"  
   WHERE ( "EKA"."LST_DET_BISNIS"."LSBS_ID"||'~X'||"EKA"."LST_DET_BISNIS"."LSDBS_NUMBER" = #value#) AND  
         ( EKA."LST_DET_BISNIS"."LSBS_ID" <![CDATA[ <  ]]> 300 ) 
	</select>		
	
 	<resultMap id="elions.bac.select_detilproduk1" class="java.util.HashMap">
		<result property="lsdbs_number" column="lsdbs_number" javaType="int" jdbcType="NUMBER" />                                                                                                                                                       
		<result property="lsdbs_name" column="lsdbs_name" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                          
		<result property="lsbs_id" column="lsbs_id" javaType="int" jdbcType="NUMBER" /> 
		<result property="plan" column="plan" javaType="string" jdbcType="VARCHAR2" nullValue=""/>       
	</resultMap>

	<select id="elions.bac.select_detilproduk" resultMap="elions.bac.select_detilproduk1" parameterClass="int">
	  SELECT "EKA"."LST_DET_BISNIS"."LSBS_ID",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NUMBER",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NAME",  
         "EKA"."LST_DET_BISNIS"."LSBS_ID"||'~X'||"EKA"."LST_DET_BISNIS"."LSDBS_NUMBER" plan
    FROM "EKA"."LST_DET_BISNIS"  
   WHERE
         ( EKA."LST_DET_BISNIS"."LSBS_ID" <![CDATA[ <  ]]> 300 )    
         and	EKA.LST_DET_BISNIS.LSDBS_AKTIF = 1 
	</select>	   
	
	<select id="elions.bac.select_detilproduk_rider" resultMap="elions.bac.select_detilproduk1" parameterClass="int">
	  SELECT "EKA"."LST_DET_BISNIS"."LSBS_ID",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NUMBER",   
         LSDBS_NAME || ' ~ ' || LSDBS_NAME0 LSDBS_NAME,  
         "EKA"."LST_DET_BISNIS"."LSBS_ID"||'~X'||"EKA"."LST_DET_BISNIS"."LSDBS_NUMBER" plan
    FROM "EKA"."LST_DET_BISNIS"  
   WHERE
   		 ( EKA."LST_DET_BISNIS"."LSBS_ID" = #value# ) AND  
         ( EKA."LST_DET_BISNIS"."LSBS_ID" <![CDATA[ >=  ]]> 300 )
         and    ( EKA."LST_DET_BISNIS"."LSBS_ID" <![CDATA[ < ]]> 900 )
         and	EKA.LST_DET_BISNIS.LSDBS_AKTIF = 1 
         order by  "EKA"."LST_DET_BISNIS"."LSBS_ID","EKA"."LST_DET_BISNIS"."LSDBS_NUMBER"
	</select>	
	
	<select id="elions.bac.select_spesifik_produk_rider" resultMap="elions.bac.select_detilproduk1" parameterClass="java.util.HashMap">
	  SELECT "EKA"."LST_DET_BISNIS"."LSBS_ID",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NUMBER",   
         LSDBS_NAME || ' ~ ' || LSDBS_NAME0 LSDBS_NAME, 
         "EKA"."LST_DET_BISNIS"."LSBS_ID"||'~X'||"EKA"."LST_DET_BISNIS"."LSDBS_NUMBER" plan
    FROM "EKA"."LST_DET_BISNIS"  
   WHERE
   		 ( EKA."LST_DET_BISNIS"."LSBS_ID" = #kode# ) AND  
   		 ( EKA."LST_DET_BISNIS"."LSDBS_NUMBER" between #lsdbs_from# and #lsdbs_to#) AND
         ( EKA."LST_DET_BISNIS"."LSBS_ID" <![CDATA[ >=  ]]> 300 )   
         and	EKA.LST_DET_BISNIS.LSDBS_AKTIF = 1 
         order by  "EKA"."LST_DET_BISNIS"."LSBS_ID","EKA"."LST_DET_BISNIS"."LSDBS_NUMBER"
	</select>
	
	<select id="elions.bac.select_spesifik_produk_rider_183" resultMap="elions.bac.select_detilproduk1" parameterClass="java.util.HashMap">
	  SELECT "EKA"."LST_DET_BISNIS"."LSBS_ID",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NUMBER",   
         LSDBS_NAME || ' ~ ' || LSDBS_NAME0 LSDBS_NAME, 
         "EKA"."LST_DET_BISNIS"."LSBS_ID"||'~X'||"EKA"."LST_DET_BISNIS"."LSDBS_NUMBER" plan
    FROM "EKA"."LST_DET_BISNIS"  
   WHERE
   		 ( EKA."LST_DET_BISNIS"."LSBS_ID" = #kode# )   
         AND ( EKA."LST_DET_BISNIS"."LSBS_ID" <![CDATA[ >=  ]]> 300 )   
         and EKA.LST_DET_BISNIS.LSDBS_AKTIF = 1 
         and lsdbs_name like upper( '%' || #plan# || '%' )
         AND LSDBS_NUMBER <![CDATA[ >  ]]> 105
         order by  "EKA"."LST_DET_BISNIS"."LSBS_ID","EKA"."LST_DET_BISNIS"."LSDBS_NUMBER"
	</select>
	
	<select id="elions.bac.select_spesifik_produk_rider_bsm" resultMap="elions.bac.select_detilproduk1" parameterClass="java.util.HashMap">
	  SELECT "EKA"."LST_DET_BISNIS"."LSBS_ID",   
         "EKA"."LST_DET_BISNIS"."LSDBS_NUMBER",   
         (case when lsbs_id=819 and lsdbs_number<![CDATA[ <=  ]]> 430
               then lsdbs_name || ' ~ ' || lsdbs_name0
               when lsbs_id=819 and lsdbs_number<![CDATA[ >=  ]]> 431
               then lsdbs_name || ' ~ ' || lsdbs_name0               
               else lsdbs_name || ' ~ ' || lsdbs_name0
          end) lsdbs_name,    
         "EKA"."LST_DET_BISNIS"."LSBS_ID"||'~X'||"EKA"."LST_DET_BISNIS"."LSDBS_NUMBER" plan
    FROM "EKA"."LST_DET_BISNIS"  
   WHERE
   		 ( EKA."LST_DET_BISNIS"."LSBS_ID" = #kode# ) AND  
   		 ( EKA."LST_DET_BISNIS"."LSDBS_NUMBER" between #lsdbs_from# and #lsdbs_to#) AND
         ( EKA."LST_DET_BISNIS"."LSBS_ID" <![CDATA[ >=  ]]> 300 )   
         and	EKA.LST_DET_BISNIS.LSDBS_AKTIF = 1 
         order by  "EKA"."LST_DET_BISNIS"."LSBS_ID","EKA"."LST_DET_BISNIS"."LSDBS_NUMBER"
	</select>             

 	<select id="elions.bac.select_detilkurs" resultClass="string" parameterClass="string">
          SELECT   
         "EKA"."LST_KURS"."LKU_SYMBOL"  
	 	  FROM "EKA"."LST_KURS"  
	   	  WHERE EKA."LST_KURS"."LKU_ID" = #value#   
	   	  ORDER BY "EKA"."LST_KURS"."LKU_SYMBOL" ASC
     </select>       
   
 	<select id="elions.bac.select_detilcrbayar" resultClass="string" parameterClass="int">
            SELECT 
	         "EKA"."LST_PAY_MODE"."LSCB_PAY_MODE"  
		    FROM "EKA"."LST_PAY_MODE"  
		   WHERE EKA."LST_PAY_MODE"."LSCB_ID" = #value#   
		ORDER BY "EKA"."LST_PAY_MODE"."LSCB_PAY_MODE" ASC   
	</select>      

 	<resultMap id="elions.bac.select_listregion1" class="java.util.HashMap">
		<result property="lca_id" column="lca_id" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                      
		<result property="lwk_id" column="lwk_id" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                      
		<result property="lsrg_id" column="lsrg_id" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                    
		<result property="lsrg_nama" column="lsrg_nama" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                            
		<result property="lca_nama" column="lca_nama" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                              
		<result property="lwk_nama" column="lwk_nama" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                              
		<result property="region" column="region" javaType="string" jdbcType="CHAR" nullValue=""/>    
	</resultMap>
	
	<select id="elions.bac.select_listregion" resultMap="elions.bac.select_listregion1" >	
		  SELECT "EKA"."LST_REGION"."LCA_ID",   
		         "EKA"."LST_REGION"."LWK_ID",   
		         "EKA"."LST_REGION"."LSRG_ID",   
		         "EKA"."LST_REGION"."LSRG_NAMA",   
		         "EKA"."LST_CABANG"."LCA_NAMA",   
		         "EKA"."LST_WAKIL"."LWK_NAMA",   
		         EKA."LST_REGION"."LCA_ID"||EKA."LST_REGION"."LWK_ID"||EKA."LST_REGION"."LSRG_ID" as region  
		    FROM "EKA"."LST_REGION",   
		         "EKA"."LST_CABANG",   
		         "EKA"."LST_WAKIL"  
		   WHERE ( "EKA"."LST_CABANG"."LCA_ID" = "EKA"."LST_WAKIL"."LCA_ID" ) and  
		         ( "EKA"."LST_REGION"."LCA_ID" = "EKA"."LST_WAKIL"."LCA_ID" ) and  
		         ( "EKA"."LST_REGION"."LWK_ID" = "EKA"."LST_WAKIL"."LWK_ID" )   
		ORDER BY "EKA"."LST_REGION"."LCA_ID" ASC,   
		         "EKA"."LST_REGION"."LWK_ID" ASC,   
		         "EKA"."LST_REGION"."LSRG_ID" ASC   
	</select>   	 
	
	<select id="elions.bac.select_detilagenWithLv" resultClass="com.ekalife.elions.model.Agen" parameterClass="string">
select   eka.mst_policy.reg_spaj,
         eka.mst_agent.msag_id,
         eka.mst_client_new.mcl_first ,
         eka.mst_agent.mst_leader,
         (SELECT a.mcl_first from eka.mst_client_new  a where a.mcl_id = 
         (SELECT b.mcl_id from eka.mst_agent b where b.msag_id = (select c.mst_leader from eka.mst_agent c where c.msag_id =(select d.msag_id from eka.mst_agent_prod d where d.lsle_id =4 and 
         d.reg_spaj = rpad(replace(#value# ,'.'),11,' '))))) leader,
         eka.mst_agent.lca_id,   
         eka.mst_agent.lwk_id,   
         eka.mst_agent.lsrg_id,  
         eka.lst_region.lsrg_nama,  
         eka.mst_agent.msag_sertifikat,
         eka.lst_level_agent.lsle_name,   
         eka.mst_agent.msag_berlaku,   
         eka.mst_agent.msag_ulink  , 
         eka.mst_agent.lca_id||eka.mst_agent.lwk_id||eka.mst_agent.lsrg_id  kode_regional
    from eka.mst_client_new,   
         eka.mst_agent,   
         eka.mst_agent_prod,   
         eka.mst_policy,
         eka.lst_level_agent,
         eka.lst_region
   where ( eka.mst_agent.mcl_id = eka.mst_client_new.mcl_id ) and  
         ( eka.mst_agent.lsle_id = eka.lst_level_agent.lsle_id ) and 
         ( eka.mst_agent.lstb_id = EKA.LST_LEVEL_AGENT.LSTB_ID ) and 
         ( eka.mst_agent.msag_id = eka.mst_agent_prod.msag_id ) and  
         ( eka.mst_policy.reg_spaj = eka.mst_agent_prod.reg_spaj ) and  
         ( eka.lst_region.lca_id = eka.mst_agent.lca_id ) and  
         ( eka.lst_region.lwk_id = eka.mst_agent.lwk_id ) and  
         ( eka.lst_region.lsrg_id = eka.mst_agent.lsrg_id ) and  
         ( ( eka.mst_policy.reg_spaj =  rpad(replace(#value# ,'.'),11,' ')  ) and  
          eka.mst_agent_prod.lsle_id =4   ) 
    </select>
    
    <select id="elions.bac.select_detilagen" resultClass="com.ekalife.elions.model.Agen" parameterClass="string">
	    select eka.mst_policy.reg_spaj,
	        eka.mst_agent.msag_id,   
	        eka.mst_client_new.mcl_first,
	        eka.mst_agent.lca_id,
	        eka.lst_cabang.lca_nama,   
	        eka.mst_agent.lwk_id,   
	        eka.mst_agent.lsrg_id,  
	        eka.lst_region.lsrg_nama,  
	        eka.mst_agent.msag_sertifikat,   
	        eka.mst_agent.msag_berlaku,   
	        eka.mst_agent.msag_active_date,   
	        eka.mst_agent.msag_ulink  , 
	        eka.mst_agent.lca_id||eka.mst_agent.lwk_id||eka.mst_agent.lsrg_id  kode_regional,
	        eka.mst_client_new.mspe_email,
	        eka.mst_agent.mst_leader,
	        (select b.mspe_email
	            from eka.mst_agent a, eka.mst_client_new b
	            where a.mcl_id =  b.mcl_id
	                and a.msag_id = eka.mst_agent.mst_leader) leader_email
	    from eka.mst_client_new,   
	        eka.mst_agent,   
	        eka.mst_agent_prod,   
	        eka.mst_policy,
	        eka.lst_region,
	        eka.lst_cabang 
	    where ( eka.mst_agent.mcl_id = eka.mst_client_new.mcl_id ) and  
	        ( eka.mst_agent.msag_id = eka.mst_agent_prod.msag_id ) and  
	        ( eka.mst_policy.reg_spaj = eka.mst_agent_prod.reg_spaj ) and  
	        ( eka.lst_region.lca_id = eka.mst_agent.lca_id ) and  
	        ( eka.lst_region.lwk_id = eka.mst_agent.lwk_id ) and  
	        ( eka.lst_region.lsrg_id = eka.mst_agent.lsrg_id ) and  
	        ( eka.lst_cabang.lca_id = eka.mst_agent.lca_id ) and
	        ( ( eka.mst_policy.reg_spaj =  rpad(replace(#value#,'.'),11,' ') ) and  
	        eka.mst_agent_prod.lsle_id = 4 )
    </select>
    
    <select id="elions.bac.select_detilagen2" resultClass="com.ekalife.elions.model.Agen" parameterClass="string">
		select eka.mst_agent.msag_id,
			eka.mst_agent.mcl_id,
			eka.mst_agent.lca_id,
			eka.mst_agent.lwk_id,
			eka.mst_agent.lsrg_id,
			eka.mst_agent.msag_sertifikat,
			eka.mst_agent.msag_berlaku,
			eka.mst_agent.msag_ulink,
			eka.mst_agent.mst_leader,
			eka.mst_agent.lca_id||eka.mst_agent.lwk_id||eka.mst_agent.lsrg_id kode_regional
		from eka.mst_agent   
		where eka.mst_agent.msag_id = #value#
    </select>
    
    
    
    
     <select id="elions.bac.select_agen_reff_bii" resultClass="string" parameterClass="string">
			select agent_code from eka.lst_reff_bii where lrb_id  = #value#
      </select>
    
    
      <select id="elions.bac.select_bsim_no_va_syariah" parameterClass="string" resultClass="string">
		select no_va from eka.mst_det_va where no_va like '8076131914%'
    	and spaj_temp is null 
        and spaj is null 
        and no_spaj_gadget is null 
        and rownum = 1 
  	    order by create_date, substr(no_va,11,6) asc
      </select>
    
      <select id="elions.bac.select_counter_spaj_temp" parameterClass="string" resultClass="string">
		  select eka.pac_counter.get_spaj_temp_id() XXX from dual
      </select>
    
      <select id="elions.bac.select_det_bsim_syariah" parameterClass="string" resultClass="java.util.HashMap">
		select mp.lca_id,mspe_date_birth as dob,mcl_first as full_name,lca_id,alamat_rumah,kota_rumah as kota from eka.mst_policy mp, eka.mst_client_new mn, eka.mst_address_new  mad where
        mp.mspo_policy_holder = mn.mcl_id and mad.mcl_id=mp.mspo_policy_holder
        and mp.reg_spaj =  #value#
      </select>
    
    
      <select id="elions.bac.select_det_prod" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		    select * from eka.lst_det_bisnis where lsbs_id = #lsbs_id# and lsdbs_number = #lsdbs_number#
      </select>
      
      
      
        <select id="elions.bac.select_det_agen_by_mclid" parameterClass="string" resultClass="java.util.HashMap">
		    select * from eka.mst_client_new where mcl_id = #value#
      </select>
    
         <select id="elions.bac.select_det_reff_by_lrb_id" parameterClass="string" resultClass="java.util.HashMap">
		   select * from eka.lst_reff_bii where  lrb_id = #value#
      </select>
    
       <select id="elions.bac.select_by_lbn" parameterClass="string" resultClass="java.util.HashMap">
		 SELECT "EKA"."LST_BANK"."LBN_ID" AS bank_id,   
		         "EKA"."LST_BANK_PUSAT"."LSBP_NAMA"||' '||"EKA"."LST_BANK"."LBN_NAMA" ||  decode(kd_bank,null,'',' (' ||kd_bank|| ')') AS bank_nama 
		    FROM "EKA"."LST_BANK",   
		         "EKA"."LST_BANK_PUSAT"  
		   WHERE ( "EKA"."LST_BANK_PUSAT"."LSBP_ID" = "EKA"."LST_BANK"."LSBP_ID" )   and
           eka.LST_BANK.lbn_id = #value#
           and "EKA"."LST_BANK".flag_aktif = 1
		   and "EKA"."LST_BANK_PUSAT".flag_aktif = 1
		   and "EKA"."LST_BANK".lsbp_id in (select lsbp_id from eka.lst_rek_ekalife y, eka.lst_bank z where y.lbn_id = z.lbn_id and lsrek_auto = 1)
		ORDER BY "EKA"."LST_BANK_PUSAT"."LSBP_NAMA" ASC,   
		"EKA"."LST_BANK"."LBN_NAMA" ASC  
      </select>
    
      <select id="elions.bac.select_region" resultClass="string" parameterClass="java.util.HashMap">
	  select LSRG_NAMA
	    from    
	         eka.lst_region  
	   where  
         eka.lst_region.lca_id=#lca_id#
         and eka.lst_region.lwk_id=#lwk_id#
         and eka.lst_region.lsrg_id=#lsrg_id#
    </select>
    
    <select id="elions.bac.select_detilagen3" resultClass="com.ekalife.elions.model.Agen" parameterClass="string">
 	 select 
            eka.mst_agent.msag_id,   
            eka.mst_client_new.mcl_first,
            eka.mst_agent.lca_id,
            eka.lst_cabang.lca_nama,   
            eka.mst_agent.lwk_id,   
            eka.mst_agent.lsrg_id,  
            eka.lst_region.lsrg_nama,  
            eka.mst_agent.msag_sertifikat,   
            eka.mst_agent.msag_berlaku,   
            eka.mst_agent.msag_ulink  , 
            eka.mst_agent.lca_id||eka.mst_agent.lwk_id||eka.mst_agent.lsrg_id  kode_regional,
            eka.mst_client_new.mspe_email,
            eka.mst_agent.mst_leader,
            (select b.mspe_email
                from eka.mst_agent a, eka.mst_client_new b
                where a.mcl_id =  b.mcl_id
                    and a.msag_id = eka.mst_agent.mst_leader) leader_email
        from eka.mst_client_new,   
            eka.mst_agent,             
            eka.lst_region,
            eka.lst_cabang 
        where ( eka.mst_agent.mcl_id = eka.mst_client_new.mcl_id ) and            
            ( eka.lst_region.lca_id = eka.mst_agent.lca_id ) and  
            ( eka.lst_region.lwk_id = eka.mst_agent.lwk_id ) and  
            ( eka.lst_region.lsrg_id = eka.mst_agent.lsrg_id ) and  
            ( eka.lst_cabang.lca_id = eka.mst_agent.lca_id ) and
            ( ( eka.mst_agent.msag_id = #value#)) 
    </select>
    
    
    
  <select id="elions.bac.select_detilagen_bp" resultClass="com.ekalife.elions.model.Agen" parameterClass="string">
  	select eka.mst_agent.msag_id,   
         eka.mst_agent.lca_id,   
         eka.mst_agent.lwk_id,   
         eka.mst_agent.lsrg_id,   
         eka.mst_agent.msag_sertifikat,   
         eka.mst_agent.msag_berlaku,   
         eka.mst_agent.msag_ulink  , 
         eka.mst_agent.lca_id||eka.mst_agent.lwk_id||eka.mst_agent.lsrg_id  kode_regional
    from    
         eka.mst_agent   
   where  
         ( eka.mst_agent.msag_id = #value#)
         and ((lca_id = '37' and lwk_id in ('B2','B3')) or lca_id = '66')
    </select>
  	
  	<select id="elions.bac.select_detilagen_bpd" resultClass="com.ekalife.elions.model.Agen" parameterClass="string">
  	  select eka.mst_agent.msag_id,   
         eka.mst_agent.lca_id,   
         eka.mst_agent.lwk_id,   
         eka.mst_agent.lsrg_id,   
         eka.mst_agent.msag_sertifikat,   
         eka.mst_agent.msag_berlaku,   
         eka.mst_agent.msag_ulink  , 
         eka.mst_agent.lca_id||eka.mst_agent.lwk_id||eka.mst_agent.lsrg_id  kode_regional
    from    
         eka.mst_agent   
    where  
          ( eka.mst_agent.msag_id = #value#)
  	     and eka.mst_agent.msag_id IN ('025590','025591','025592','025593','025594','025595','025596')
  	</select>
  	
  	<select id="elions.bac.select_detilemployee" resultClass="com.ekalife.elions.model.Employee" parameterClass="string">
	  	  SELECT "EKA"."MST_EMP"."REG_SPAJ",   
	         "EKA"."MST_EMP"."NO_URUT",   
	         "EKA"."MST_EMP"."NIK",   
	         "EKA"."MST_EMP"."NAMA",   
	         "EKA"."MST_EMP"."CABANG",   
	         "EKA"."MST_EMP"."DEPT",   
	         "EKA"."MST_EMP"."PLAN",   
	         "EKA"."MST_EMP"."POTONGAN",   
	         "EKA"."MST_EMP"."TGL_PROSES",   
	         "EKA"."MST_EMP"."STATUS",   
	         "EKA"."MST_EMP"."KETERANGAN"  
	    FROM "EKA"."MST_EMP"  
	   WHERE EKA."MST_EMP"."REG_SPAJ" = rpad(replace(#value# ,'.'),11,' ')   
	</select>  
	
	<select id="elions.bac.selectUserName" parameterClass="int" resultClass="string">
		select TRIM (UPPER (lus_login_name)) from eka.lst_user where lus_id =TRIM (UPPER (#value#))
	</select>
	
	<select id="elions.bac.selectPwdSpv" parameterClass="int" resultClass="string">
		select UPPER (eka.decrypt (lus_password)) from eka.lst_user where lus_id =UPPER(#value#)
	</select>
	
	<select id="elions.bac.selectPasswordFromUsername" parameterClass="string" resultClass="string">
		select eka.decrypt(lus_password) from eka.lst_user where upper(lus_login_name) = trim(upper(#value#))
		and lus_active = 1
	</select>
	
	<resultMap id="elions.bac.select_tipeproduk1" class="java.util.HashMap">
		 <result property="lstb_id" column="lstb_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
		<result property="lstp_produk" column="lstp_produk" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                        
		<result property="lstp_id" column="lstp_id" javaType="int" jdbcType="NUMBER" />     
	</resultMap>
	
	<resultMap id="elions.bac.select_tipeproduk2" class="java.util.HashMap">
		 <result property="lstb_id" column="lstb_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
		<result property="lstp_produk" column="lstp_produk" javaType="string" jdbcType="VARCHAR2"/>                                                                                                                                        
		<result property="lstp_id" column="lstp_id" javaType="int" jdbcType="NUMBER" />     
	</resultMap>
  
	<select id="elions.bac.select_tipeproduk" resultMap="elions.bac.select_tipeproduk1" >
         SELECT "EKA"."LST_TYPE_PRODUK"."LSTP_ID",   
         "EKA"."LST_TYPE_PRODUK"."LSTB_ID",   
         "EKA"."LST_TYPE_PRODUK"."LSTP_PRODUK"  
    FROM "EKA"."LST_TYPE_PRODUK"   						
	</select>
	
	<select id="elions.bac.select_tipeprodukmall" resultMap="elions.bac.select_tipeproduk2" >
         SELECT "EKA"."LST_TYPE_PRODUK"."LSTP_ID",   
         "EKA"."LST_TYPE_PRODUK"."LSTB_ID",   
         "EKA"."LST_TYPE_PRODUK"."LSTP_PRODUK"  
    FROM "EKA"."LST_TYPE_PRODUK"  
    WHERE "EKA"."LST_TYPE_PRODUK"."LSTP_ID"	 = 13					
	</select>
	
	<select id="elions.bac.select_tipeproduk_banksinarmas" resultMap="elions.bac.select_tipeproduk1" >
         SELECT "EKA"."LST_TYPE_PRODUK"."LSTP_ID",   
         "EKA"."LST_TYPE_PRODUK"."LSTB_ID",   
         "EKA"."LST_TYPE_PRODUK"."LSTP_PRODUK"  
    FROM "EKA"."LST_TYPE_PRODUK"   where "EKA"."LST_TYPE_PRODUK"."LSTP_ID" in (5,14)
	</select>
	
	<select id="elions.bac.select_tipeprodukbsim" resultMap="elions.bac.select_tipeproduk1" >
         SELECT "EKA"."LST_TYPE_PRODUK"."LSTP_ID",   
         "EKA"."LST_TYPE_PRODUK"."LSTB_ID",   
         "EKA"."LST_TYPE_PRODUK"."LSTP_PRODUK"  
    FROM "EKA"."LST_TYPE_PRODUK"   where "EKA"."LST_TYPE_PRODUK"."LSTP_ID" in (5,14)
	</select>
	
	<select id="elions.bac.select_listPaket" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select a.flag_packet flag_packet, a.nama_packet nama_packet
				from eka.lst_packet a , eka.lst_packet_det b
				where 
				a.flag_packet=b.flag_packet
				and b.lsbs_id=#lsbs_id#
				and b.lsdbs_number=#lsdbs_number#
		union
        select flag_packet, nama_packet
            from eka.lst_packet
            where flag_packet = 0
            order by flag_packet
	</select>
	
	<select id="elions.bac.select_tipeproduk_platinumbii" resultMap="elions.bac.select_tipeproduk1" >
         SELECT "EKA"."LST_TYPE_PRODUK"."LSTP_ID",   
         "EKA"."LST_TYPE_PRODUK"."LSTB_ID",   
         "EKA"."LST_TYPE_PRODUK"."LSTP_PRODUK"  
    FROM "EKA"."LST_TYPE_PRODUK"   where "EKA"."LST_TYPE_PRODUK"."LSTP_ID" = 7
	</select>
	
	<select id="elions.bac.select_tipeprodukonline" resultMap="elions.bac.select_tipeproduk1" >
         SELECT "EKA"."LST_TYPE_PRODUK"."LSTP_ID",   
         "EKA"."LST_TYPE_PRODUK"."LSTB_ID",   
         "EKA"."LST_TYPE_PRODUK"."LSTP_PRODUK"  
    FROM "EKA"."LST_TYPE_PRODUK"
    WHERE "EKA"."LST_TYPE_PRODUK"."LSTP_ID" = 1   						
	</select>
	
	<select id="elions.bac.select_kabupaten" resultClass="int" parameterClass="string">
	 	SELECT EKA.LST_KABUPATEN.LSKA_ID
		FROM EKA.LST_KABUPATEN
		WHERE TRIM(EKA.LST_KABUPATEN.LSKA_NOTE) = TRIM(#value#) AND ROWNUM = 1
	</select>	
	
	<select id="elions.bac.select_panj_rek1" resultClass="int" parameterClass="string">
		SELECT "EKA"."LST_BANK_PUSAT"."LSBP_PANJANG_REKENING" AS panjang_rek 
    		FROM "EKA"."LST_BANK_PUSAT"  
    		WHERE  "EKA"."LST_BANK_PUSAT"."LSBP_ID"=trim(upper(#value#))
    		and flag_aktif = 1
 			ORDER BY "EKA"."LST_BANK_PUSAT"."LSBP_NAMA" ASC   
	</select>
	
	<select id="elions.bac.select_panj_rek2" resultClass="int" parameterClass="string">
		SELECT "EKA"."LST_BANK_PUSAT"."LSBP_PANJANG_REKENING" AS panjang_rek 
		    FROM "EKA"."LST_BANK",   
		         "EKA"."LST_BANK_PUSAT"  
		   WHERE ( "EKA"."LST_BANK_PUSAT"."LSBP_ID" = "EKA"."LST_BANK"."LSBP_ID" )   and
		   		 "EKA"."LST_BANK"."LBN_ID"=trim(upper(#value#))
		   and "EKA"."LST_BANK".flag_aktif = 1
		   and "EKA"."LST_BANK_PUSAT".flag_aktif = 1
		ORDER BY "EKA"."LST_BANK_PUSAT"."LSBP_NAMA" ASC,   
		         "EKA"."LST_BANK"."LBN_NAMA" ASC  
	</select>
	
	<select id="elions.bac.select_bank1" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
		  SELECT "EKA"."LST_BANK_PUSAT"."LSBP_ID" AS bank_id,   
         "EKA"."LST_BANK_PUSAT"."LSBP_NAMA"  AS bank_nama,
         "EKA"."LST_BANK_PUSAT"."LSBP_PANJANG_REKENING"  AS max_digit
    		FROM "EKA"."LST_BANK_PUSAT"  
    		WHERE  trim(upper("EKA"."LST_BANK_PUSAT"."LSBP_NAMA")) like '%' || trim(upper(#value#)) || '%'
    		and flag_aktif = 1
 			ORDER BY "EKA"."LST_BANK_PUSAT"."LSBP_NAMA" ASC   
	</select>
	
	<select id="elions.bac.select_groupjob" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
			SELECT LGJ_ID,LGJ_NOTE FROM EKA.LST_GRP_JOB
			WHERE trim(upper(LGJ_NOTE)) LIKE '%' ||  trim(upper(#value#)) || '%'
			AND ROWNUM=1
	</select>	
	
	<select id="elions.bac.select_jabatan" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
		SELECT LJB_ID,LJB_NOTE FROM EKA.LST_JABATAN
		WHERE trim(upper(LJB_NOTE)) LIKE '%' || trim(upper(#value#)) || '%'
		AND ROWNUM=1
	</select>		
	
	<select id="elions.bac.select_wilayah" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
		SELECT LSKA_NOTE AS id,LSKA_NOTE AS wilayah
		  FROM EKA.LST_KABUPATEN 
		WHERE  trim(upper(LSKA_NOTE)) LIKE '%' || trim(upper(#VALUE#)) || '%' 
		  ORDER BY LSKA_NOTE
	</select>
	
	<resultMap id="elions.bac.select_wilayah1_1" class="java.util.HashMap">
			<result property="ID" column="ID" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                                          
			<result property="WILAYAH" column="WILAYAH" javaType="string" jdbcType="VARCHAR2" nullValue=""/>   
	</resultMap>	
	
		<select id="elions.bac.select_wilayah1" resultMap="elions.bac.select_wilayah1_1" parameterClass="string">
		SELECT LSKA_NOTE AS id,LSKA_NOTE AS wilayah
		  FROM EKA.LST_KABUPATEN 
		WHERE  LSKA_NOTE =UPPER(#VALUE#) AND ROWNUM = 1
		  ORDER BY LSKA_NOTE
	</select>

	<select id="elions.bac.select_rekclient" resultClass="java.util.HashMap" parameterClass="string">
		SELECT lsbp_id AS bank_id, lsbp_nama AS bank_nama, lsbp_panjang_rekening AS max_digit,
		    lsbp_min_panjang_rekening AS min_digit, lsbp_panjang_cc AS cc_digit
		FROM eka.lst_bank_pusat
		WHERE lsbp_id = #value#
		    AND flag_aktif = 1
	</select>
	
	<select id="elions.bac.select_namaBisnis" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
		  SELECT b.mcl_id as sumber_id, b.mcl_first as nama_sumber
			FROM eka.mst_company a, eka.mst_client b
		   WHERE a.mcl_id = b.mcl_id AND a.flag_grup_sinarmas = 1
		     AND b.mcl_id = #value#
	</select>
	
	<select id="elions.bac.select_bank2" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
		  SELECT "EKA"."LST_BANK"."LBN_ID" AS bank_id,   
		         "EKA"."LST_BANK_PUSAT"."LSBP_NAMA"||' '||"EKA"."LST_BANK"."LBN_NAMA" ||  decode(kd_bank,null,'',' (' ||kd_bank|| ')') AS bank_nama 
		    FROM "EKA"."LST_BANK",   
		         "EKA"."LST_BANK_PUSAT"  
		   WHERE ( "EKA"."LST_BANK_PUSAT"."LSBP_ID" = "EKA"."LST_BANK"."LSBP_ID" )   and
		   trim(upper("EKA"."LST_BANK_PUSAT"."LSBP_NAMA"||' '||"EKA"."LST_BANK"."LBN_NAMA")) like '%' || trim(upper(#value#)) || '%'
		   and "EKA"."LST_BANK".flag_aktif = 1
		   and "EKA"."LST_BANK_PUSAT".flag_aktif = 1
		   and "EKA"."LST_BANK".lsbp_id in (select lsbp_id from eka.lst_rek_ekalife y, eka.lst_bank z where y.lbn_id = z.lbn_id and lsrek_auto = 1)
		ORDER BY "EKA"."LST_BANK_PUSAT"."LSBP_NAMA" ASC,   
		         "EKA"."LST_BANK"."LBN_NAMA" ASC    
	</select>
	
	<select id="elions.bac.select_bank3" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
		  SELECT "EKA"."LST_BANK"."LBN_ID" AS bank_id,   
		         "EKA"."LST_BANK_PUSAT"."LSBP_NAMA"||' '||"EKA"."LST_BANK"."LBN_NAMA" ||  decode(kd_bank,null,'',' (' ||kd_bank|| ')') AS bank_nama 
		    FROM "EKA"."LST_BANK",   
		         "EKA"."LST_BANK_PUSAT"  
		   WHERE ( "EKA"."LST_BANK_PUSAT"."LSBP_ID" = "EKA"."LST_BANK"."LSBP_ID" )   and
		   trim(upper("EKA"."LST_BANK_PUSAT"."LSBP_NAMA"||' '||"EKA"."LST_BANK"."LBN_NAMA")) like '%' || trim(upper(#value#)) || '%'
		   and "EKA"."LST_BANK".flag_aktif = 1
		   and "EKA"."LST_BANK_PUSAT".flag_aktif = 1
		   and "EKA"."LST_BANK_PUSAT".lsbp_id=156
		   and "EKA"."LST_BANK".lsbp_id in (select lsbp_id from eka.lst_rek_ekalife y, eka.lst_bank z where y.lbn_id = z.lbn_id and lsrek_auto = 1)
		ORDER BY "EKA"."LST_BANK_PUSAT"."LSBP_NAMA" ASC,   
		         "EKA"."LST_BANK"."LBN_NAMA" ASC    
	</select>
	
	<select id="elions.bac.select_bankcredit" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
		  SELECT "EKA"."LST_BANK"."LBN_ID" AS bank_id,   
		         "EKA"."LST_BANK_PUSAT"."LSBP_NAMA"||' '||"EKA"."LST_BANK"."LBN_NAMA" ||  decode(kd_bank,null,'',' (' ||kd_bank|| ')') AS bank_nama 
		    FROM "EKA"."LST_BANK",   
		         "EKA"."LST_BANK_PUSAT"  
		   WHERE ( "EKA"."LST_BANK_PUSAT"."LSBP_ID" = "EKA"."LST_BANK"."LSBP_ID" )   and
		   trim(upper("EKA"."LST_BANK_PUSAT"."LSBP_NAMA"||' '||"EKA"."LST_BANK"."LBN_NAMA")) like '%' || trim(upper(#value#)) || '%'
		   and "EKA"."LST_BANK".flag_aktif = 1
		   and "EKA"."LST_BANK_PUSAT".flag_aktif = 1
		ORDER BY "EKA"."LST_BANK_PUSAT"."LSBP_NAMA" ASC,   
		         "EKA"."LST_BANK"."LBN_NAMA" ASC    
	</select>
	
	<select id="elions.bac.cekmuamalat" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references">
	SELECT b.lbn_id as lbn_id2, ('['||d.lca_nama||'] '|| a.lar_admin || ' - ' || c.lsbp_nama || ' ' || b.lbn_nama) as nama
	  FROM eka.lst_addr_region a,
	       eka.lst_bank b,
	       eka.lst_bank_pusat c,
	       eka.lst_cabang d
	 WHERE a.lar_kode_bmi = b.kd_bank
	   AND b.lsbp_id = c.lsbp_id
	   AND a.lar_lca_id = d.lca_id
	   order by nama
	</select>
	
	<select id="elions.bac.select_sumberBisnis" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
		  SELECT b.mcl_id as sumber_id, b.mcl_first as nama_sumber
			FROM eka.mst_company a, eka.mst_client b
		   WHERE a.mcl_id = b.mcl_id AND a.flag_grup_sinarmas = 1
		     AND b.mcl_first like '%' || trim(upper(#value#)) || '%'    
	</select>		
	
	<select id="elions.bac.select_bankautodebet" resultClass="java.util.HashMap" parameterClass="string">
		SELECT a.lsbp_id AS bank_pusat_id, b.lbn_id AS bank_id, a.lsbp_nama || ' ' || b.lbn_nama AS bank_nama,
		    a.lsbp_panjang_rekening AS max_digit, a.lsbp_min_panjang_rekening AS min_digit, lsbp_panjang_cc AS cc_digit
		FROM eka.lst_bank_pusat a, eka.lst_bank b
		WHERE a.lsbp_id = b.lsbp_id
		    AND a.flag_aktif = 1
		    AND b.flag_aktif = 1
		    AND b.lbn_id = #value#
	</select>	
	
	<select id="elions.bac.select_company" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
		SELECT "EKA"."MST_COMPANY"."MCL_ID" AS company_id,   
			"EKA"."MST_CLIENT_NEW"."MCL_FIRST" AS company_nama
		FROM "EKA"."MST_COMPANY",   
			"EKA"."MST_CLIENT_NEW"
		WHERE ( "EKA"."MST_CLIENT_NEW"."MCL_ID" = "EKA"."MST_COMPANY"."MCL_ID" )
			AND ( ( EKA."MST_CLIENT_NEW"."MCL_JENIS" = 1 )
			AND ( not trim(upper("EKA"."MST_CLIENT_NEW"."MCL_FIRST")) like '%EKA LIFE%' and  not trim(upper("EKA"."MST_CLIENT_NEW"."MCL_FIRST")) like '%EKALIFE%' )
			AND trim(upper("EKA"."MST_CLIENT_NEW"."MCL_FIRST")) like '%' || trim(upper(#value#)) || '%')
			AND "EKA"."MST_COMPANY".FLAG_WS IN (1,2)
	</select>
	
	<select id="elions.bac.selectLstStatusAcceptSub" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
		SELECT EKA.LST_STATUS_ACCEPT_SUB.SUB_ID,   
			EKA.LST_STATUS_ACCEPT_SUB.SUB_DESC
		FROM EKA.LST_STATUS_ACCEPT_SUB   
		WHERE EKA.LST_STATUS_ACCEPT_SUB.LSSA_ID = #value#   
	</select> 
	
	<select id="elions.bac.select_company_ekal" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
		    SELECT "EKA"."MST_COMPANY"."MCL_ID" AS company_id,   
		         "EKA"."MST_CLIENT_NEW"."MCL_FIRST" AS company_nama
		    FROM "EKA"."MST_COMPANY",   
		         "EKA"."MST_CLIENT_NEW"
		   WHERE ( "EKA"."MST_CLIENT_NEW"."MCL_ID" = "EKA"."MST_COMPANY"."MCL_ID" ) and  
		         ( ( EKA."MST_CLIENT_NEW"."MCL_JENIS" = 1 ) AND
			 	("EKA"."MST_COMPANY"."MCL_ID" like '%' || trim(upper(#value#)) || '%'))
			 	AND "EKA"."MST_COMPANY".FLAG_WS IN (1,2)
	</select>
	
	<select id="elions.bac.select_namacompany_list_endow" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="list">
		    SELECT "EKA"."MST_COMPANY"."MCL_ID" AS company_id,   
		         "EKA"."MST_CLIENT_NEW"."MCL_FIRST" AS company_nama
		    FROM "EKA"."MST_COMPANY",   
		         "EKA"."MST_CLIENT_NEW"
		   WHERE ( "EKA"."MST_CLIENT_NEW"."MCL_ID" = "EKA"."MST_COMPANY"."MCL_ID" ) and  
		         ( EKA."MST_CLIENT_NEW"."MCL_JENIS" = 1 ) 
		     <iterate prepend="and  " open="(" close=")" conjunction="or">
				(trim(upper("EKA"."MST_CLIENT_NEW"."MCL_FIRST")) like '%' || trim(upper(#value[]#)) || '%')
			</iterate>
	</select>	
	
	<select id="elions.bac.select_namacompany" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
	     SELECT "EKA"."MST_COMPANY"."MCL_ID" AS company_id,   
		         "EKA"."MST_CLIENT_NEW"."MCL_FIRST" AS company_nama
		    FROM "EKA"."MST_COMPANY",   
		         "EKA"."MST_CLIENT_NEW"
		   WHERE ( "EKA"."MST_CLIENT_NEW"."MCL_ID" = "EKA"."MST_COMPANY"."MCL_ID" ) and  
		         ( ( EKA."MST_CLIENT_NEW"."MCL_JENIS" = 1 ) AND
			 	("EKA"."MST_COMPANY"."MCL_ID" = #value#)) and 
			 	"EKA"."MST_COMPANY".FLAG_WS IN (1,2)
	</select>
	
	<select id="elions.bac.select_reff" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
		  SELECT "EKA"."LST_REFF_BII"."LRB_ID",   
		         "EKA"."LST_REFF_BII"."NAMA_REFF"
		    FROM "EKA"."LST_REFF_BII"   
		    WHERE trim(upper("EKA"."LST_REFF_BII"."NAMA_REFF")) like  '%' || trim(upper(#value#)) || '%'  and
		    ( not ( EKA."LST_REFF_BII"."JENIS" = 2 )  or  ( EKA."LST_REFF_BII"."JENIS" is null) )
		    ORDER BY  "EKA"."LST_REFF_BII"."NAMA_REFF"
	</select>
	
	<select id="elions.bac.list_reff" resultClass="com.ekalife.elions.model.ReffBii" parameterClass="java.util.HashMap">
	  		SELECT t1."LRB_ID",   
				t1."NAMA_REFF",   
				t1."LCB_NO",   
				t1."NO_REK",   
				t1."CAB_REK",   
				t1."ATAS_NAMA",   
				t1."FLAG_AKTIF",   
				t1."NPK",
				t1."NAMA_CABANG",
				t1."AKTIF",
				t1."FLAG_EDIT",
				t1."HIT_ERR",
				t1.rn  
			from	  
					  (SELECT "EKA"."LST_REFF_BII"."LRB_ID",   
					         "EKA"."LST_REFF_BII"."NAMA_REFF",   
					         "EKA"."LST_REFF_BII"."LCB_NO",   
					         "EKA"."LST_REFF_BII"."NO_REK",   
					         "EKA"."LST_REFF_BII"."CAB_REK",   
					         "EKA"."LST_REFF_BII"."ATAS_NAMA",   
					         "EKA"."LST_REFF_BII"."FLAG_AKTIF",   
					         "EKA"."LST_REFF_BII"."NPK",
							 "EKA"."LST_CABANG_BII"."NAMA_CABANG",
							 DECODE (  "EKA"."LST_REFF_BII"."FLAG_AKTIF" , '1', 'AKTIF' , 'TIDAK AKTIF') AS "AKTIF",
							 0 "FLAG_EDIT",
							 0 "HIT_ERR",
							 rownum rn 
					    FROM "EKA"."LST_REFF_BII" ,
						"EKA"."LST_CABANG_BII"
						WHERE "EKA"."LST_REFF_BII"."LCB_NO" = "EKA"."LST_CABANG_BII"."LCB_NO" 
						  AND trim(upper("EKA"."LST_REFF_BII"."NAMA_REFF")) like '%' || trim(upper(#kunci#)) || '%' )  t1
			where t1.rn between #number1# and #number2# 
	</select>	
	
	<select id="elions.bac.list_reff1" resultClass="com.ekalife.elions.model.ReffBii" parameterClass="java.util.HashMap">
	  		SELECT t1."LRB_ID",   
				t1."NAMA_REFF",   
				t1."LCB_NO",   
				t1."NO_REK",   
				t1."CAB_REK",   
				t1."ATAS_NAMA",   
				t1."FLAG_AKTIF",   
				t1."NPK",
				t1."NAMA_CABANG",
				t1."AKTIF",
				t1."FLAG_EDIT",
				t1."HIT_ERR",
				t1.rn  
			from	  
					  (SELECT "EKA"."LST_REFF_BII"."LRB_ID",   
					         "EKA"."LST_REFF_BII"."NAMA_REFF",   
					         "EKA"."LST_REFF_BII"."LCB_NO",   
					         "EKA"."LST_REFF_BII"."NO_REK",   
					         "EKA"."LST_REFF_BII"."CAB_REK",   
					         "EKA"."LST_REFF_BII"."ATAS_NAMA",   
					         "EKA"."LST_REFF_BII"."FLAG_AKTIF",   
					         "EKA"."LST_REFF_BII"."NPK",
							 "EKA"."LST_CABANG_BII"."NAMA_CABANG",
							 DECODE (  "EKA"."LST_REFF_BII"."FLAG_AKTIF" , '1', 'AKTIF' , 'TIDAK AKTIF') AS "AKTIF",
							 0 "FLAG_EDIT",
							 0 "HIT_ERR",
							 rownum rn 
					    FROM "EKA"."LST_REFF_BII" ,
						"EKA"."LST_CABANG_BII"
						WHERE "EKA"."LST_REFF_BII"."LCB_NO" = "EKA"."LST_CABANG_BII"."LCB_NO" )  t1
			where t1.rn between #number1# and #number2# 
	</select>		
	
	<select id="elions.bac.count_reff" resultClass="int"  parameterClass="string">
	 SELECT count(*) AS JUMLAH_ROW
		 FROM "EKA"."LST_REFF_BII" 
		 WHERE trim(upper("EKA"."LST_REFF_BII"."NAMA_REFF")) like '%' || trim(upper(#value#)) || '%'
	</select>
	
	<!-- filter untuk agen penutup di reff bank = flag_lisensi = 1 -->
	<select id="elions.bac.select_reff_shinta" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT   max(a.lrb_id)lrb_id, a.nama_reff
		    FROM eka.lst_reff_bii a
		   WHERE TRIM (UPPER (a.nama_reff)) LIKE '%' || TRIM (UPPER (#nama#)) || '%'
		     AND (a.jenis = #kode_flag# OR a.jenis in (8, 9, 10, 11,16,64))
		     AND a.flag_lisensi = 1
		     AND a.lcb_no NOT IN ('M01','M02')
		     AND a.flag_aktif = 1
		     <!-- AND a.lrbj_id1 is null -->
		     <isNotNull property="show_ajspusat">
		         <isEqual property="show_ajspusat" compareValue="false">
		             AND a.lcb_no not in('S179','S178')
		         </isEqual>
		     </isNotNull>
		GROUP by a.nama_reff,a.lcb_no
		ORDER BY a.nama_reff
	</select>
	
	<!-- filter untuk agen referral di reff bank = tidak ada -->
	<select id="elions.bac.select_reff_shinta2" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT   max(a.lrb_id)lrb_id, a.nama_reff
		    FROM eka.lst_reff_bii a
		   WHERE TRIM (UPPER (a.nama_reff)) LIKE '%' || TRIM (UPPER (#nama#)) || '%'
		     AND (a.jenis = #kode_flag# OR a.jenis in (8, 9, 10, 11,16,64))
		     AND a.flag_aktif = 1
		     AND a.lcb_no NOT IN ('M01','M02')
             <isNotNull property="show_ajspusat">
                 <isEqual property="show_ajspusat" compareValue="false">
                      AND a.lcb_no not in('S179','S178')
                 </isEqual>
             </isNotNull>
		GROUP by a.nama_reff,a.lcb_no     
		ORDER BY a.nama_reff
	</select>
	
	<select id="elions.bac.select_reff_shintabyagentcode" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT   max(a.lrb_id)lrb_id, a.nama_reff
		    FROM eka.lst_reff_bii a
		   WHERE TRIM (UPPER (a.agent_code)) LIKE '%' || TRIM (UPPER (#code#)) || '%'
		     AND (a.jenis = #kode_flag# OR a.jenis in (8, 9, 10, 11,16,64))
		     AND a.flag_lisensi = 1
		     AND a.lcb_no NOT IN ('M01','M02')
		     AND a.flag_aktif = 1
		    <!--  AND a.lrbj_id1 is null -->
             <isNotNull property="show_ajspusat">
                 <isEqual property="show_ajspusat" compareValue="false">
                     AND a.lcb_no not in('S179','S178')
                 </isEqual>
             </isNotNull>
		GROUP by a.nama_reff,a.lcb_no
	</select>
	
	<select id="elions.bac.select_reff_shintabyagentcode2" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT   max(a.lrb_id)lrb_id, a.nama_reff
		    FROM eka.lst_reff_bii a
		   WHERE TRIM (UPPER (a.agent_code)) LIKE '%' || TRIM (UPPER (#code#)) || '%'
		     AND (a.jenis = #kode_flag# OR a.jenis in (8, 9, 10, 11,16,64))
		     AND a.flag_aktif = 1
		     AND a.lcb_no NOT IN ('M01','M02')
             <isNotNull property="show_ajspusat">
                 <isEqual property="show_ajspusat" compareValue="false">
                     AND a.lcb_no not in('S179','S178')
                 </isEqual>
             </isNotNull>
		GROUP by a.nama_reff,a.lcb_no
	</select>
	
	<!-- filter untuk agen penutup di reff bank = flag_lisensi = 1 dan BC atau BUKAN BC pada produk tertentu-->
	<select id="elions.bac.select_reff_shintacekBC" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT   max(a.lrb_id)lrb_id, a.nama_reff
		    FROM eka.lst_reff_bii a
		   WHERE TRIM (UPPER (a.nama_reff)) LIKE '%' || TRIM (UPPER (#nama#)) || '%'
		     AND (a.jenis = #kode_flag# OR a.jenis in (8, 9, 10, 11))
		     AND a.flag_lisensi = 1
		     AND a.lcb_no NOT IN ('M01','M02')
		     AND a.flag_aktif = 1
		     <isNotNull property="show_ajspusat">
		         <isEqual property="show_ajspusat" compareValue="false">
		             AND a.lcb_no not in('S179','S178')
		             AND a.lrbj_id1 is null
		         </isEqual>
		          <isEqual property="show_ajspusat" compareValue="true">
		             AND a.lrbj_id1 in (366,367,368)
		         </isEqual>
		     </isNotNull>
		GROUP by a.nama_reff,a.lcb_no
		ORDER BY a.nama_reff
	</select>
	
	<!-- filter untuk agen penutup di reff bank = flag_lisensi = 1 dan BC atau BUKAN BC pada produk tertentu-->
	<select id="elions.bac.select_reff_shintacekBC2" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT   max(a.lrb_id)lrb_id, a.nama_reff
		    FROM eka.lst_reff_bii a
		  WHERE TRIM (UPPER (a.agent_code)) LIKE '%' || TRIM (UPPER (#code#)) || '%'
		     AND (a.jenis = #kode_flag# OR a.jenis in (8, 9, 10, 11))
		     AND a.flag_lisensi = 1
		     AND a.lcb_no NOT IN ('M01','M02')
		     AND a.flag_aktif = 1
		     <isNotNull property="show_ajspusat">
		         <isEqual property="show_ajspusat" compareValue="false">
		             AND a.lcb_no not in('S179','S178')
		             AND a.lrbj_id1 is null
		         </isEqual>
		          <isEqual property="show_ajspusat" compareValue="true">
		             AND a.lrbj_id1 in (366,367,368)
		         </isEqual>
		     </isNotNull>
		GROUP by a.nama_reff,a.lcb_no
		ORDER BY a.nama_reff
	</select>
	
	<select id="elions.bac.select_bii1" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
	     SELECT "EKA"."LST_CABANG_BII"."LCB_NO",   
	         "EKA"."LST_CABANG_BII"."NAMA_CABANG"
	             FROM "EKA"."LST_CABANG_BII"  
		   	WHERE EKA."LST_CABANG_BII"."JENIS" = 1 and
		   	trim(upper("EKA"."LST_CABANG_BII"."NAMA_CABANG")) like '%' ||  trim(upper(#value#)) || '%'
		   	ORDER BY "EKA"."LST_CABANG_BII"."NAMA_CABANG"
	</select>
	
	<resultMap id="elions.bac.select_referrer_1" class="java.util.HashMap">
		<result property="NAMA_REFF" column="NAMA_REFF" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                            
		<result property="LCB_NO" column="LCB_NO" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                      
		<result property="NO_REK" column="NO_REK" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                      
		<result property="CAB_REK" column="CAB_REK" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                                
		<result property="ATAS_NAMA" column="ATAS_NAMA" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                            
		<result property="FLAG_AKTIF" column="FLAG_AKTIF" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                          
		<result property="NPK" column="NPK" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                            
		<result property="LRB_ID" column="LRB_ID" javaType="string" jdbcType="CHAR" nullValue=""/>   
		<result property="LRBJ_ID1" column="LRBJ_ID1" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                            
	</resultMap>
		
	<select id="elions.bac.select_referrer"  resultMap="elions.bac.select_referrer_1"  parameterClass="string">
		  SELECT "EKA"."LST_REFF_BII"."LRB_ID",   
		         "EKA"."LST_REFF_BII"."NAMA_REFF",   
		         "EKA"."LST_REFF_BII"."LCB_NO",   
		         "EKA"."LST_REFF_BII"."NO_REK",   
		         "EKA"."LST_REFF_BII"."CAB_REK",   
		         "EKA"."LST_REFF_BII"."ATAS_NAMA",   
		         "EKA"."LST_REFF_BII"."FLAG_AKTIF",   
		         "EKA"."LST_REFF_BII"."NPK" ,
		         "EKA"."LST_REFF_BII"."LRBJ_ID1"  
		    FROM "EKA"."LST_REFF_BII"   
		    WHERE "EKA"."LST_REFF_BII"."LRB_ID" = #value# 
		    ORDER BY  "EKA"."LST_REFF_BII"."NAMA_REFF"
	</select>
	<!-- and ( not ( EKA."LST_REFF_BII"."JENIS" = 2 )  or  ( EKA."LST_REFF_BII"."JENIS" is null) ) -->	
	
	<select id="elions.bac.select_referrer_shinta"  resultMap="elions.bac.select_referrer_1"  parameterClass="java.util.HashMap">
		  SELECT "EKA"."LST_REFF_BII"."LRB_ID",   
		         "EKA"."LST_REFF_BII"."NAMA_REFF",   
		         "EKA"."LST_REFF_BII"."LCB_NO",   
		         "EKA"."LST_REFF_BII"."NO_REK",   
		         eka.lst_cabang_bii.nama_cabang ||' '||"EKA"."LST_REFF_BII"."CAB_REK" "CAB_REK" ,   
		         "EKA"."LST_REFF_BII"."ATAS_NAMA",   
		         "EKA"."LST_REFF_BII"."FLAG_AKTIF",   
		         "EKA"."LST_REFF_BII"."NPK" ,
		         "EKA"."LST_REFF_BII"."LRBJ_ID1" 
		    FROM "EKA"."LST_REFF_BII"   ,
			eka.lst_cabang_bii
		    WHERE "EKA"."LST_REFF_BII"."LRB_ID" =#lrb_id# and
		 ( EKA."LST_REFF_BII"."JENIS" =#kode_flag# OR EKA."LST_REFF_BII"."JENIS" in (8,9,10,11,64))  and 
		 "EKA"."LST_REFF_BII"."LCB_NO" = eka.lst_cabang_bii.LCB_NO (+)
		    ORDER BY  "EKA"."LST_REFF_BII"."NAMA_REFF"

	</select>	
	
	<select id="elions.bac.select_cabang_kk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
          SELECT lcb_no,nama_cabang
          FROM eka.lst_cabang_bii  WHERE jenis = 2
          AND upper(nama_cabang) like upper('KK%')
          AND flag_aktif = 1
           AND trim(head_no) = trim(#lcb_no#)
    </select>   
	
	<resultMap id="elions.bac.select_bii_1" class="java.util.HashMap">
		<result property="NAMA_CABANG" column="NAMA_CABANG" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                        
		<result property="LEVEL_ID" column="LEVEL_ID" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                                 
		<result property="HEAD_NO" column="HEAD_NO" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                    
		<result property="LCB_NO" column="LCB_NO" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                            
		<result property="JENIS" column="JENIS" javaType="int" jdbcType="NUMBER" /> 
	</resultMap>
 
	<select id="elions.bac.select_bii" resultMap="elions.bac.select_bii_1" parameterClass="string">
	  SELECT "EKA"."LST_CABANG_BII"."LCB_NO",   
        DECODE(EKA."LST_CABANG_BII"."JENIS",1,"EKA"."LST_CABANG_BII"."NAMA_CABANG",  "EKA"."LST_CABANG_BII"."LCB_NO") "NAMA_CABANG", 
         "EKA"."LST_CABANG_BII"."LEVEL_ID",   
         "EKA"."LST_CABANG_BII"."HEAD_NO"  ,
		 EKA."LST_CABANG_BII"."JENIS"
      FROM "EKA"."LST_CABANG_BII"  
	  WHERE "EKA"."LST_CABANG_BII"."LCB_NO" = #value#
	  ORDER BY "EKA"."LST_CABANG_BII"."NAMA_CABANG"
	</select>
	
	<select id="elions.bac.list_cabang_bii" resultMap="elions.bac.select_bii_1" >
 	  SELECT "EKA"."LST_CABANG_BII"."LCB_NO",   
        DECODE(EKA."LST_CABANG_BII"."JENIS",1,"EKA"."LST_CABANG_BII"."NAMA_CABANG",  "EKA"."LST_CABANG_BII"."LCB_NO") "NAMA_CABANG", 
         "EKA"."LST_CABANG_BII"."LEVEL_ID",   
         "EKA"."LST_CABANG_BII"."HEAD_NO"  ,
		 EKA."LST_CABANG_BII"."JENIS"
      FROM "EKA"."LST_CABANG_BII"  
	  ORDER BY "EKA"."LST_CABANG_BII"."NAMA_CABANG"
	</select>			
	
	<select id="elions.bac.selectmst_reff_bii" resultClass="com.ekalife.elions.model.ReffBii" parameterClass="string">
		SELECT a.reg_spaj, a.level_id, a.lcb_no, a.lrb_id, reff_id
		  FROM eka.mst_reff_bii a
		 WHERE reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		and a.level_id = 4 and a.no_urut = (select max(no_urut) from eka.mst_reff_bii where level_id = 4 and reg_spaj = a.reg_spaj)
	</select>  
	
	<select id="elions.bac.select_cic" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
			SELECT "EKA"."LST_CABANG_CIC"."LCC_NO",   
        	 "EKA"."LST_CABANG_CIC"."NAMA_CABANG"  
		    FROM "EKA"."LST_CABANG_CIC"  
			WHERE trim(upper("EKA"."LST_CABANG_CIC"."NAMA_CABANG")) like '%' ||  trim(upper(#value#)) || '%'
		ORDER BY "EKA"."LST_CABANG_CIC"."NAMA_CABANG" ASC 

	</select>	
	
	<resultMap id="elions.bac.select_cic_1" class="java.util.HashMap">
		<result property="NAMA_CABANG" column="NAMA_CABANG" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                        
		<result property="LCC_NO" column="LCC_NO" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                      
		<result property="LEVEL_ID" column="LEVEL_ID" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                               
		<result property="HEAD_NO" column="HEAD_NO" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                                  
	</resultMap>
		
	<select id="elions.bac.select_cic1" resultMap="elions.bac.select_cic_1" parameterClass="string">
			SELECT "EKA"."LST_CABANG_CIC"."LCC_NO",   
        	 "EKA"."LST_CABANG_CIC"."NAMA_CABANG" ,
			  "EKA"."LST_CABANG_CIC"."LEVEL_ID",   
				"EKA"."LST_CABANG_CIC"."HEAD_NO"   
		    FROM "EKA"."LST_CABANG_CIC"  
			WHERE "EKA"."LST_CABANG_CIC"."LCC_NO" = #value#
		ORDER BY "EKA"."LST_CABANG_CIC"."NAMA_CABANG" ASC 

	</select>		               						

	<!-- 
		  SELECT max( EKA."MST_POWERSAVE_PROSES"."MPS_DEPOSIT_DATE")  ldt_maxpro
		    FROM "EKA"."MST_POWERSAVE_PROSES"  
		   WHERE EKA."MST_POWERSAVE_PROSES"."MPS_KODE" = 0 
	 -->	
	<select id="elions.bac.select_max_deposit_date" resultClass="date" >
		select msdef_date from eka.mst_default where msdef_id=24
	</select>
	
	<select id="elions.bac.select_reff_cic" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
		  SELECT "EKA"."LST_REFF_CIC"."LRC_ID",   
		         "EKA"."LST_REFF_CIC"."LRC_NAMA"  
		    FROM "EKA"."LST_REFF_CIC"
			where trim(upper("EKA"."LST_REFF_CIC"."LRC_NAMA")) like '%' ||  trim(upper(#value#)) || '%'
			order by   "EKA"."LST_REFF_CIC"."LRC_NAMA" 
	</select>	
	
	<resultMap id="elions.bac.select_reff_cic_1" class="java.util.HashMap">
		<result property="LRC_NAMA" column="LRC_NAMA" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                              
		<result property="LRC_BANK" column="LRC_BANK" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                              
		<result property="LRC_NO_REK" column="LRC_NO_REK" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                          
		<result property="LRC_ATAS_NAMA" column="LRC_ATAS_NAMA" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                    
		<result property="LRC_ID" column="LRC_ID"  javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                                  
		<result property="LRC_AKTIF" column="LRC_AKTIF"  javaType="string" jdbcType="CHAR" nullValue=""/>  
	</resultMap>
	
	<select id="elions.bac.select_reff_cic1" resultMap="elions.bac.select_reff_cic_1" parameterClass="string">
		  SELECT "EKA"."LST_REFF_CIC"."LRC_ID",   
		         "EKA"."LST_REFF_CIC"."LRC_NAMA" ,
		         "EKA"."LST_REFF_CIC"."LRC_BANK",   
		         "EKA"."LST_REFF_CIC"."LRC_NO_REK",   
		         "EKA"."LST_REFF_CIC"."LRC_ATAS_NAMA",   
		         "EKA"."LST_REFF_CIC"."LRC_AKTIF" 
		    FROM "EKA"."LST_REFF_CIC"
			where "EKA"."LST_REFF_CIC"."LRC_ID" =#value#
			order by   "EKA"."LST_REFF_CIC"."LRC_NAMA" 
	</select>
	
	<select id="elions.bac.selectmst_reff_cic" resultClass="com.ekalife.elions.model.ReffBii" parameterClass="string">
		  SELECT "EKA"."MST_REFF_CIC"."REG_SPAJ",   
		        "EKA"."MST_REFF_CIC"."LEVEL_ID",   
		        "EKA"."MST_REFF_CIC"."LRC_ID",   
		        "EKA"."MST_REFF_CIC"."LCC_NO" 
		    FROM "EKA"."MST_REFF_CIC"  
		   WHERE EKA."MST_REFF_CIC"."REG_SPAJ" = rpad(replace(#value# ,'.'),11,' ')  and
		   "EKA"."MST_REFF_CIC"."LEVEL_ID"=2    
	</select>	
	
		
	<resultMap id="elions.bac.select_cabang_cic1" class="java.util.HashMap">
		<result property="HEAD_NO" column="HEAD_NO" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                    
		<result property="LEVEL_ID" column="LEVEL_ID"   javaType="string" jdbcType="CHAR" nullValue=""/>    
	</resultMap>
	
	<select id="elions.bac.select_cabang_cic" resultMap="elions.bac.select_cabang_cic1" parameterClass="string">
		  SELECT "EKA"."LST_CABANG_CIC"."LEVEL_ID",   
		"EKA"."LST_CABANG_CIC"."HEAD_NO"  
		 FROM "EKA"."LST_CABANG_CIC"  
		WHERE EKA."LST_CABANG_CIC"."LCC_NO" = #value#
	</select>
	
		<resultMap id="elions.bac.select_cabang_bii1" class="java.util.HashMap">
		<result property="HEAD_NO" column="HEAD_NO" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                    
		<result property="LEVEL_ID" column="LEVEL_ID"   javaType="string" jdbcType="CHAR" nullValue=""/>    
	</resultMap>
	
	<select id="elions.bac.select_cabang_bii" resultMap="elions.bac.select_cabang_bii1" parameterClass="string">
	  SELECT "EKA"."LST_CABANG_BII"."LEVEL_ID",   
		"EKA"."LST_CABANG_BII"."HEAD_NO"  
		 FROM "EKA"."LST_CABANG_BII"  
			WHERE ( EKA."LST_CABANG_BII"."LCB_NO" = #value#) AND
		      ( EKA."LST_CABANG_BII"."JENIS" = 1 )
	</select>
	
	<select id="elions.bac.max_reff_bii" resultClass="long" >
		SELECT (max("EKA"."LST_REFF_BII"."LRB_ID")+1) "LRB_ID"
			FROM "EKA"."LST_REFF_BII"
	</select>
	
	<resultMap id="elions.bac.selectregional1" class="java.util.HashMap">
		<result property="LSRG_NAMA" column="LSRG_NAMA" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
		<result property="LSBS_ID" column="LSBS_ID" javaType="int" jdbcType="NUMBER" /> 	
		<result property="LSDBS_NUMBER" column="LSDBS_NUMBER" javaType="int" jdbcType="NUMBER" /> 
		<result property="LUS_ID" column="LUS_ID" javaType="int" jdbcType="NUMBER" /> 
		<result property="CAB_BANK" column="CAB_BANK" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
		<result property="JN_BANK" column="JN_BANK" javaType="int" jdbcType="NUMBER" /> 
	</resultMap>
			
	<select id="elions.bac.selectregion" resultMap="elions.bac.selectregional1" parameterClass="string">
		SELECT DISTINCT eka.mst_agent.lca_id || eka.mst_agent.lwk_id AS lsrg_nama,
		                eka.mst_product_insured.lsbs_id,
		                eka.mst_product_insured.lsdbs_number, eka.mst_policy.lus_id,
		                eka.lst_user.cab_bank, nvl(eka.lst_user.jn_bank,-1) jn_bank,nvl(eka.mst_policy.mspo_customer,-1)mspo_customer
		           FROM eka.mst_policy,
		                eka.mst_insured,
		                eka.mst_product_insured,
		                eka.mst_agent_prod,
		                eka.mst_agent,
		                eka.lst_user
		          WHERE eka.mst_policy.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		            AND eka.mst_policy.reg_spaj = eka.mst_insured.reg_spaj
		            AND eka.mst_policy.reg_spaj = eka.mst_product_insured.reg_spaj
		            AND eka.mst_product_insured.lsbs_id <![CDATA[<]]> 300
		            AND eka.mst_policy.reg_spaj = eka.mst_agent_prod.reg_spaj
		            AND eka.mst_agent_prod.msag_id = eka.mst_agent.msag_id
		            AND eka.mst_agent_prod.lsle_id = 4
		            AND eka.mst_policy.lus_id = eka.lst_user.lus_id
	</select>
	
	<resultMap id="elions.bac.selectDataUsulanDetail.result" class="java.util.HashMap">
		<result property="LSDBS_LAMA_BAYAR" column="LSDBS_LAMA_BAYAR" javaType="int" jdbcType="NUMBER" />                                                                                                                                               
		<result property="MSAP_ADDRESS" column="MSAP_ADDRESS" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                      
		<result property="MSAP_ZIP_CODE" column="MSAP_ZIP_CODE" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                    
		<result property="MSAP_AREA_CODE1" column="MSAP_AREA_CODE1" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                
		<result property="MSAP_PHONE1" column="MSAP_PHONE1" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                        
		<result property="MSAP_AREA_CODE2" column="MSAP_AREA_CODE2" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                
		<result property="MSAP_PHONE2" column="MSAP_PHONE2" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                        
		<result property="MSAP_AREA_CODE3" column="MSAP_AREA_CODE3" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                
		<result property="MSAP_PHONE3" column="MSAP_PHONE3" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                        
		<result property="MSAP_AREA_CODE_FAX1" column="MSAP_AREA_CODE_FAX1" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                        
		<result property="LSDBS_NAME" column="LSDBS_NAME" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                          
		<result property="MSAP_FAX1" column="MSAP_FAX1" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                            
		<result property="MSAP_AREA_CODE_FAX2" column="MSAP_AREA_CODE_FAX2" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                        
		<result property="MSAP_FAX2" column="MSAP_FAX2" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                            
		<result property="NO_HP" column="NO_HP" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                                    
		<result property="KOTA" column="KOTA" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                                      
		<result property="NO_HP2" column="NO_HP2" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                                  
		<result property="MSTE_FLAG_CC" column="MSTE_FLAG_CC" javaType="int" jdbcType="NUMBER" />                                                                                                                                                       
		<result property="MSTE_TGL_RECUR" column="MSTE_TGL_RECUR" javaType="date" jdbcType="DATE" />                                                                                                                                                    
		<result property="MSPR_TSI" column="MSPR_TSI" javaType="double" jdbcType="NUMBER" />                                                                                                                                                            
		<result property="MSPR_PREMIUM" column="MSPR_PREMIUM" javaType="double" jdbcType="NUMBER" />                                                                                                                                                    
		<result property="MSTE_MEDICAL" column="MSTE_MEDICAL" javaType="int" jdbcType="NUMBER" />                                                                                                                                                       
		<result property="MSPR_BEG_DATE" column="MSPR_BEG_DATE" javaType="date" jdbcType="DATE" />                                                                                                                                                      
		<result property="MSPR_END_DATE" column="MSPR_END_DATE" javaType="date" jdbcType="DATE" />                                                                                                                                                      
		<result property="LKU_ID" column="LKU_ID" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                      
		<result property="LSCB_ID" column="LSCB_ID" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
		<result property="MSPO_PAY_PERIOD" column="MSPO_PAY_PERIOD" javaType="int" jdbcType="NUMBER" />                                                                                                                                                 
		<result property="MSPO_INS_PERIOD" column="MSPO_INS_PERIOD" javaType="int" jdbcType="NUMBER" />     
		<result property="LSNE_ID" column="LSNE_ID" javaType="int" jdbcType="NUMBER" />   
	</resultMap>
	
	<select id="elions.bac.selectDataUsulanDetail" resultMap="elions.bac.selectDataUsulanDetail.result" parameterClass="string">
			  SELECT eka.f_lsdbs(EKA.MST_PRODUCT_INSURED.reg_spaj, EKA.MST_PRODUCT_INSURED.lsbs_id, EKA.MST_PRODUCT_INSURED.lsdbs_number) LSDBS_NAME,    
				     EKA.LST_DET_BISNIS.LSDBS_LAMA_BAYAR,    
				     EKA.MST_ADDRESS_BILLING.MSAP_ADDRESS,    
				     EKA.MST_ADDRESS_BILLING.MSAP_ZIP_CODE,    
				     EKA.MST_ADDRESS_BILLING.MSAP_AREA_CODE1,    
				     EKA.MST_ADDRESS_BILLING.MSAP_PHONE1,    
				     EKA.MST_ADDRESS_BILLING.MSAP_AREA_CODE2,    
				     EKA.MST_ADDRESS_BILLING.MSAP_PHONE2,    
				     EKA.MST_ADDRESS_BILLING.MSAP_AREA_CODE3,    
				     EKA.MST_ADDRESS_BILLING.MSAP_PHONE3,    
				     EKA.MST_ADDRESS_BILLING.MSAP_AREA_CODE_FAX1,    
				     EKA.MST_ADDRESS_BILLING.MSAP_FAX1,    
				     EKA.MST_ADDRESS_BILLING.MSAP_AREA_CODE_FAX2,    
				     EKA.MST_ADDRESS_BILLING.MSAP_FAX2,    
				     EKA.MST_ADDRESS_BILLING.NO_HP,    
				     EKA.MST_ADDRESS_BILLING.KOTA,    
				     EKA.MST_ADDRESS_BILLING.NO_HP2,    
				     EKA.MST_ADDRESS_BILLING.LSNE_ID,    
				     EKA.MST_INSURED.MSTE_FLAG_CC,    
				     EKA.MST_INSURED.MSTE_TGL_RECUR,    
				     EKA.MST_PRODUCT_INSURED.MSPR_TSI,    
				     EKA.MST_PRODUCT_INSURED.MSPR_PREMIUM,    
				     EKA.MST_INSURED.MSTE_MEDICAL,    
				     EKA.MST_PRODUCT_INSURED.MSPR_BEG_DATE,    
				     EKA.MST_PRODUCT_INSURED.MSPR_END_DATE,   
				     EKA.MST_POLICY.LKU_ID,   
				     EKA.MST_POLICY.LSCB_ID,   
				     EKA.MST_POLICY.MSPO_PAY_PERIOD, 
				     EKA.MST_POLICY.MSPO_INS_PERIOD 
				 FROM EKA.LST_BISNIS,    
				     EKA.MST_PRODUCT_INSURED,    
				     EKA.LST_DET_BISNIS,    
				     EKA.MST_ADDRESS_BILLING,    
				     EKA.MST_INSURED,    
				     EKA.MST_POLICY   
		     WHERE ( EKA.LST_BISNIS.LSBS_ID = EKA.MST_PRODUCT_INSURED.LSBS_ID ) and   
				     ( EKA.LST_DET_BISNIS.LSBS_ID = EKA.MST_PRODUCT_INSURED.LSBS_ID ) and   
				     ( EKA.LST_DET_BISNIS.LSDBS_NUMBER = EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER ) and   
				     ( EKA.LST_DET_BISNIS.LSBS_ID = EKA.LST_BISNIS.LSBS_ID ) and   
				     ( EKA.MST_PRODUCT_INSURED.REG_SPAJ = EKA.MST_ADDRESS_BILLING.REG_SPAJ ) and   
				     ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_PRODUCT_INSURED.REG_SPAJ ) and   
				     ( EKA.MST_INSURED.MSTE_INSURED_NO = EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO ) and   
				     ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ ) and   
				     ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_ADDRESS_BILLING.REG_SPAJ ) and  
				     ( ( EKA.MST_PRODUCT_INSURED.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') ) AND   
				     ( EKA.LST_BISNIS.LSBS_ID <![CDATA[<]]> 300 ) )
	</select>
	
	<select id="elions.bac.selectAllLstKurs" resultClass="java.util.HashMap" parameterClass="string">
		select * from eka.lst_kurs
	</select>               
	  						
	<select id="elions.bac.selectAllLstPayMode" resultClass="java.util.HashMap" parameterClass="string">
		select * from eka.lst_pay_mode
	</select>                 
	
		<select id="elions.bac.select_company_endow" resultClass="java.util.HashMap" cacheModel="elions.bac.cache.references" parameterClass="string">
		    SELECT "EKA"."MST_COMPANY"."MCL_ID" AS company_id,   
		         "EKA"."MST_CLIENT_NEW"."MCL_FIRST" AS company_nama
		    FROM "EKA"."MST_COMPANY",   
		         "EKA"."MST_CLIENT_NEW"
		   WHERE ( "EKA"."MST_CLIENT_NEW"."MCL_ID" = "EKA"."MST_COMPANY"."MCL_ID" ) and  
		         ( ( EKA."MST_CLIENT_NEW"."MCL_JENIS" = 1 ) AND
			 	("EKA"."MST_CLIENT_NEW"."MCL_FIRST" = upper(#value#) ))
	</select>			
	
	<select id="elions.bac.selectPositionSpaj" resultClass="int" parameterClass="string">
		select lssa_id from eka.mst_insured where reg_spaj=rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.bac.selectEndorsNo" resultClass="string" parameterClass="string">
		select msen_endors_no from eka.mst_endors where reg_spaj=rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.bac.selectPositiondok" resultClass="java.util.HashMap" parameterClass="string">
			select eka.mst_insured.lspd_id,eka.mst_policy.lssp_id 
				from eka.mst_insured,eka.mst_policy where eka.mst_insured.reg_spaj = eka.mst_policy.reg_spaj and
				eka.mst_insured.reg_spaj=rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.bac.selecttransulink" resultClass="com.ekalife.elions.model.TransUlink" parameterClass="string">
		SELECT 
		REG_SPAJ, MU_KE, MTU_KE , MTU_TGL_TRANS , LT_ID ,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
		 MTU_SALDO_UNIT_PP, MTU_SALDO_UNIT_TU, LJI_ID,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
		 MTU_DESC,  MTU_JUMLAH , MTU_TGL_NAB , MTU_NAB,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
		 MTU_UNIT, MTU_DK  , MTU_SALDO_UNIT, MTU_TGL_INPUT,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
		 LUS_ID, MTU_FLAG_PRINT , MTU_FLAG_BIAYA ,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
		 MTU_FLAG_LOCK , MTU_TAHUN_KE, MTU_PREMI_KE ,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
		 LSPD_ID , MTU_TGL_PROSES   
		FROM EKA.MST_TRANS_ULINK  
		WHERE REG_SPAJ=rpad(replace(#value#,'.'),11,' ')
		and MU_KE = 1
		ORDER BY LJI_ID
	</select>
	
		<!-- Select counter, client id-->
	<select id="elions.bac.select_counter" resultClass="long" parameterClass="java.util.HashMap">
		SELECT EKA.MST_COUNTER.MSCO_VALUE
		FROM EKA.MST_COUNTER
		WHERE EKA.MST_COUNTER.MSCO_NUMBER = #number# AND 
		EKA.MST_COUNTER.LCA_ID = #lca_id# FOR UPDATE
	</select> 
	
	<select id="elions.bac.select_counter_eb" resultClass="long" parameterClass="java.util.HashMap">
		SELECT EKA.MST_COUNTER.MSCO_VALUE
		FROM EKA.MST_COUNTER@EB
		WHERE EKA.MST_COUNTER.MSCO_NUMBER = #number# AND 
		EKA.MST_COUNTER.LCA_ID = #lca_id# FOR UPDATE
	</select> 
	
	<select id="elions.bac.select_kurs" resultClass="string" parameterClass="string">
		select eka.mst_product_insured.lku_id
			 from eka.mst_product_insured 
			 where eka.mst_product_insured.reg_spaj =rpad(replace(#value#,'.'),11,' ') and
			 eka.mst_product_insured.lsbs_id <![CDATA[<]]> 300 
	</select>
		
	<select id="elions.bac.select_agent_temp" resultClass="string" parameterClass="string">
		select mat_nama_agent from eka.mst_agent_temp where reg_spaj=rpad(replace(#value# ,'.'),11,' ') 
	</select>
	
	<select id="elions.bac.count_mst_cancel" resultClass="integer" parameterClass="string">
		select count(*) from eka.mst_cancel where mscan_spaj_baru = rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.bac.selectRider" resultClass="string" parameterClass="string">
       SELECT eka.f_lsdbs(aa.reg_spaj, aa.lsbs_id, aa.lsdbs_number) lsdbs_name rider
          FROM eka.mst_product_insured aa, eka.lst_det_bisnis bb
         WHERE aa.lsbs_id = bb.lsbs_id
           AND aa.lsdbs_number = bb.lsdbs_number
           AND aa.lsbs_id <![CDATA[>=]]> 800
           AND reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.bac.selectInvest" resultClass="string" parameterClass="string">
	 	SELECT b.lji_invest 
			 FROM eka.mst_det_ulink a,
			 	  eka.lst_jenis_invest b
			 WHERE a.lji_id=b.lji_id AND
	 	   		    a.reg_spaj=rpad(replace(#value#,'.'),11,' ') AND a.mdu_persen <![CDATA[<>]]>0
		</select>
		
	<select id="elions.bac.selectkesehatan" resultClass="com.ekalife.elions.model.Kesehatan" parameterClass="string">
		select a. reg_spaj ,a.msnm_sehat, a.msnm_berat, a.msnm_tinggi, a.msnm_berubah, 
		a.msnm_turun_naik,a.msnm_banyak,a.msnm_alasan_berat,
		a.msnm_perawatan, a.msnm_operasi, a.msnm_laboratorium, a.msnm_demam, a.msnm_tumor, a.msnm_pendarahan,
		a.msnm_pingsan, a.msnm_asma, a.msnm_jantung, a.msnm_diabetes, a.msnm_darah_tinggi, a.msnm_kencing_darah , 
		a.msnm_gondok, a.msnm_parkinson, a.msnm_lambung, a.msnm_rhematik, a.msnm_kelamin, a.msnm_cacat, a.msnm_alasan_cacat, 
		a.msnm_suntikan, a.msnm_tranfusi, a.msnm_alasan_tolak, a.msnm_menstruasi, a.msnm_hamil, a.msnm_hamil, a.msnm_bulan, 
		a.msnm_melahirkan, a.msnm_banyak_lahir, a.msnm_tahun_akhir, a.msnm_keguguran, a.msnm_suami_ins, a.msnm_desc_ins, a.msnm_alasan_sehat,
		a.msnm_hobi, a.msnm_kelainan, a.msnm_gila, a.msnm_lain,b.reg_spaj, b.msdok_number, b.msdok_penyakit, b.msdok_date, b.msdok_lama, b.msdok_dokter, a.msnm_desc_sakit
		from eka.mst_non_medical a , eka.mst_dokter_rawat b
		where a.reg_spaj = b.reg_spaj(+)	 and
		a.reg_spaj = rpad(replace(#value# ,'.'),11,' ') 
	</select>

	<select id="elions.bac.selectStatusPaidBilling" resultClass="integer" parameterClass="java.util.HashMap">
		select msbi_paid from eka.mst_billing where reg_spaj = #reg_spaj# and msbi_tahun_ke = #msbi_tahun_ke# and msbi_premi_ke = #msbi_premi_ke#
	</select>
	
	<select id="elions.bac.selectStatusPaidBillingStableLink" resultClass="integer" parameterClass="java.util.HashMap">
		SELECT   b.msbi_paid
		  FROM   eka.mst_slink a, eka.mst_billing b
		 WHERE       a.reg_spaj = rpad(replace(#reg_spaj# ,'.'),11,' ')
		         AND a.msl_tu_ke = #tu_ke#
		         AND a.msl_kode = 5
		         AND a.reg_spaj = b.reg_spaj
		         AND a.msl_tahun_ke = b.msbi_tahun_ke
		         AND a.msl_premi_ke = b.msbi_premi_ke		
	</select>

	<select id="elions.bac.selectstsgutri" resultClass="integer" parameterClass="string">
		select lspd_id from eka.mst_billing 
			where eka.mst_billing.reg_spaj =rpad(replace(#value# ,'.'),11,' ')  and 
			eka.mst_billing.msbi_premi_ke = (select max(a.msbi_premi_ke) 
									  from eka.mst_billing a where a.reg_spaj =eka.mst_billing.reg_spaj )
	</select>	

	<select id="elions.bac.selectmst_peserta" resultClass="com.ekalife.elions.model.Simas" parameterClass="com.ekalife.elions.model.Simas">
		select REG_SPAJ, NO_URUT, LSRE_ID, NAMA, TGL_LAHIR, KELAMIN, UMUR, PREMI,LSBS_ID,LSDBS_NUMBER,
		LSBS_ID||'~X'||LSDBS_NUMBER plan_rider,DISCOUNT
		from eka.mst_peserta
		where reg_spaj =rpad(replace(#reg_spaj# ,'.'),11,' ')  and
		no_urut=#no_urut#
		and lsbs_id!=839
	</select>
	
	<select id="elions.bac.selectmax_peserta" resultClass="integer" parameterClass="string">
		select max(NO_URUT) jumlah
		from eka.mst_peserta
		where reg_spaj =rpad(replace(#value# ,'.'),11,' ') 
		and lsbs_id!=839
	</select>
	
	<select id="elions.bac.select_semua_mst_peserta" resultClass="com.ekalife.elions.model.Simas" parameterClass="string">
		select REG_SPAJ, NO_URUT, LSRE_ID, NAMA, TGL_LAHIR, KELAMIN, UMUR, PREMI,LSBS_ID,LSDBS_NUMBER,
		LSBS_ID||'~X'||LSDBS_NUMBER plan_rider,DISCOUNT
		from eka.mst_peserta
		where reg_spaj =rpad(replace(#value# ,'.'),11,' ') 
	</select>
	
	<select id="elions.bac.select_all_mst_peserta" resultClass="com.ekalife.elions.model.PesertaPlus" parameterClass="string">
		select x.REG_SPAJ, rownum NO_URUT, x.LSRE_ID, x.NO_REG, x.NAMA, x.TGL_LAHIR, x.KELAMIN, x.UMUR, x.PREMI, x.LSBS_ID, x.LSDBS_NUMBER,
		x.LSBS_ID||'~X'||x.LSDBS_NUMBER plan_rider, x.DISCOUNT, x.FLAG_JENIS_PESERTA, 
		(case when (x.FLAG_JENIS_PESERTA = 1) then 'TERTANGGUNG II'
              when (x.FLAG_JENIS_PESERTA = 2) then 'TERTANGGUNG III'
              when (x.FLAG_JENIS_PESERTA = 3) then 'TERTANGGUNG IV'
              when (x.FLAG_JENIS_PESERTA = 4) then 'TERTANGGUNG V'
              when (x.FLAG_JENIS_PESERTA = 5) then 'TERTANGGUNG VI'
              when (x.FLAG_JENIS_PESERTA = 6) then 'TERTANGGUNG VII'
              else 'TERTANGGUNG I'
        end) jenis_peserta,
        (case when x.KELAMIN = 0 THEN 'PEREMPUAN'
        	  else 'LAKI-LAKI'
        end)SEX,
		y.LSRE_RELATION, 
		(CASE WHEN x.LSBS_ID IN (840, 841, 842, 843) THEN 840 
		  ELSE x.LSBS_ID
		  END
		) LSBS_ID_PLUS,
		x.height tinggi,x.weight berat, x.mkl_kerja kerja
		from eka.mst_peserta x, eka.lst_relation y
		where x.reg_spaj =rpad(replace(#value# ,'.'),11,' ')
		AND (x.FLAG_JENIS_PESERTA != 0 OR x.NO_REG IS NOT NULL)
		AND x.lsre_id = y.lsre_id
		AND x.lsbs_id > 300
		AND x.lsbs_id!=839
		AND x.aktif =1
	</select>
	
	<resultMap id="elions.bac.select_mst_spaj_det_result" class="java.util.HashMap">
		<result property="LSJS_ID" column="LSJS_ID" javaType="int" jdbcType="NUMBER" />                                                                                                                                               
		<result property="NO_BLANKO" column="NO_BLANKO" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                      
		<result property="LSJS_PREFIX" column="LSJS_PREFIX" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                    
	</resultMap>	
	
	<select id="elions.bac.select_mst_spaj_det" resultMap="elions.bac.select_mst_spaj_det_result" parameterClass="string">
		SELECT a.LSJS_ID, a.NO_BLANKO, b.LSJS_PREFIX
	  FROM eka.mst_spaj_det a, eka.lst_jenis_spaj b
	 WHERE a.lsjs_id = b.lsjs_id AND (b.lsjs_prefix || a.no_blanko) = #value#
	</select>	
	
	<resultMap id="elions.bac.select_detil_topup_result" class="com.ekalife.elions.model.DetilTopUp">
		<result property="id_tunggal" column="ID_TUNGGAL" javaType="int" jdbcType="NUMBER" />                                                                                                                                               
		<result property="premi_tunggal" column="PREMI_TUNGGAL" javaType="double" jdbcType="NUMBER" /> 
		<result property="pil_tunggal" column="PIL_TUNGGAL" javaType="int" jdbcType="NUMBER" /> 
		<result property="id_berkala" column="ID_BERKALA" javaType="int" jdbcType="NUMBER" />                                                                                                                                               
		<result property="premi_berkala" column="PREMI_BERKALA" javaType="double" jdbcType="NUMBER" />       
		<result property="pil_berkala" column="PIL_BERKALA" javaType="int" jdbcType="NUMBER" />                                                                                                                                
	</resultMap>	
	
	<select id="elions.bac.select_detil_topup" resultMap="elions.bac.select_detil_topup_result" parameterClass="string">
		SELECT   x.lt_id ID_TUNGGAL,
		         x.mu_jlh_premi PREMI_TUNGGAL,
		         DECODE (x.lt_id, NULL, '', '2') PIL_TUNGGAL,
		         Y.lt_id ID_BERKALA,
		         Y.mu_jlh_premi PREMI_BERKALA,
		         DECODE (Y.lt_id, NULL, '', '1') PIL_BERKALA
		  FROM   eka.mst_ulink u, eka.mst_ulink x, eka.mst_ulink y
		 WHERE       u.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		         AND u.mu_ke = 1
		         AND u.reg_spaj = x.reg_spaj(+)
		         AND u.mu_tgl_trans = x.mu_tgl_trans(+)
		         AND x.lt_id(+) = 2
		         AND u.reg_spaj = y.reg_spaj(+)
		         AND u.mu_tgl_trans = y.mu_tgl_trans(+)
		         AND y.lt_id(+) = 5
	</select>
	<!-- kuesioner -->
	<select id="elions.bac.selectagenrekrut" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<isEqual property="tipe" compareValue="1">
			 SELECT EKA.MST_AGENT.MSAG_ID "ID", 
             EKA.MST_CLIENT_NEW.MCL_FIRST "NAMA",
             EKA.MST_AGENT.MSAG_TABUNGAN "ACC",
             EKA.LST_BANK_PUSAT.LSBP_ID "NAMABANK", 
             EKA.LST_BANK_PUSAT.LSBP_NAMA "NAMABANK2",
             decode(EKA.LST_LEVEL_AGENT.LSLE_NAME , 'Agency Manager', 'Business Partner **',EKA.LST_LEVEL_AGENT.LSLE_NAME ) "JABATAN"
			FROM EKA.MST_AGENT , 
			     EKA.MST_CLIENT_NEW ,
                 EKA.LST_BANK,
                 EKA.LST_BANK_PUSAT,
    			 EKA.LST_LEVEL_AGENT
            WHERE EKA.MST_AGENT.MCL_ID =  EKA.MST_CLIENT_NEW.MCL_ID 
              AND EKA.MST_AGENT.LSTB_ID = 1
              AND EKA.MST_AGENT.LBN_ID = EKA.LST_BANK.LBN_ID
              AND EKA.LST_BANK.LSBP_ID = EKA.LST_BANK_PUSAT.LSBP_ID
              AND EKA.MST_AGENT.MSAG_ACTIVE = 1 
              AND EKA.MST_AGENT.MSAG_ID=#kode#
			  AND EKA.MST_AGENT.LSTB_ID = EKA.LST_LEVEL_AGENT.LSTB_ID
			  AND EKA.MST_AGENT.LSLE_ID = EKA.LST_LEVEL_AGENT.LSLE_ID
            ORDER BY  EKA.MST_AGENT.MSAG_ID
        </isEqual>
        <isEqual property="tipe" compareValue="2">
            SELECT A.MSAG_ID "ID", B.MCL_FIRST  "NAMA", A.MSAG_ID, A.LSLE_ID, A.MSAG_TABUNGAN "ACC",
            	   D.LSBP_ID "NAMABANK", D.LSBP_NAMA "NAMABANK2",
            	   decode(E.LSLE_NAME , 'Agency Manager', 'Business Partner **',E.LSLE_NAME ) "JABATAN"
 	        FROM EKA.MST_AGENT A, 
                 EKA.MST_CLIENT_NEW B,
                 EKA.LST_BANK C,
                 EKA.LST_BANK_PUSAT D,
                 EKA.LST_LEVEL_AGENT E
            WHERE A.MCL_ID = B.MCL_ID 
              AND A.LSTB_ID = 1 
              AND A.LBN_ID = C.LBN_ID
              AND C.LSBP_ID = D.LSBP_ID
              AND A.MSAG_ACTIVE = 1
              AND A.MSAG_ID=#kode#
              AND E.LSTB_ID = A.LSTB_ID
              AND E.LSLE_ID = A.LSLE_ID
        </isEqual>
        <isEqual property="tipe" compareValue="3">
            SELECT EKA.MST_AGENT.MSAG_ID "ID", EKA.MST_CLIENT_NEW.MCL_FIRST "NAMA", EKA.MST_AGENT.MSAG_TABUNGAN "ACC", 
            	   EKA.LST_BANK_PUSAT.LSBP_ID "NAMABANK", EKA.LST_BANK_PUSAT.LSBP_NAMA "NAMABANK2",
            	   decode(EKA.LST_LEVEL_AGENT.LSLE_NAME , 'Agency Manager', 'Business Partner **',EKA.LST_LEVEL_AGENT.LSLE_NAME ) "JABATAN"
            FROM EKA.MST_AGENT , 
                 EKA.MST_CLIENT_NEW,
                 EKA.LST_BANK,
                 EKA.LST_BANK_PUSAT,
    			 EKA.LST_LEVEL_AGENT
            WHERE EKA.MST_AGENT.MCL_ID =  EKA.MST_CLIENT_NEW.MCL_ID 
              AND EKA.MST_AGENT.LSTB_ID = 1
              AND EKA.MST_AGENT.LBN_ID = EKA.LST_BANK.LBN_ID
              AND EKA.LST_BANK.LSBP_ID = EKA.LST_BANK_PUSAT.LSBP_ID
              AND EKA.MST_AGENT.MSAG_ACTIVE = 1 
              AND EKA.MST_AGENT.MSAG_ID=#kode#
			  AND EKA.MST_AGENT.LSTB_ID = EKA.LST_LEVEL_AGENT.LSTB_ID
			  AND EKA.MST_AGENT.LSLE_ID = EKA.LST_LEVEL_AGENT.LSLE_ID
            ORDER BY  EKA.MST_AGENT.MSAG_ID
        </isEqual>
        <isEqual property="tipe" compareValue="4">
            SELECT "EKA"."MST_CLIENT"."MCL_ID" "ID",
            trim("EKA"."MST_CLIENT"."MCL_FIRST"||' '||"EKA"."MST_CLIENT"."MCL_MIDDLE"||' '||"EKA"."MST_CLIENT"."MCL_LAST") "NAMA"  
                FROM "EKA"."MST_CLIENT",   
                     "EKA"."MST_POLICY"  
               WHERE ( "EKA"."MST_POLICY"."MSPO_POLICY_HOLDER" = "EKA"."MST_CLIENT"."MCL_ID" ) and  
                     ( ( EKA."MST_POLICY"."LSTB_ID" = 1 )  and
                     ( EKA."MST_POLICY"."LSPD_ID" = 99 )  and
                     ("EKA"."MST_POLICY"."MSPO_POLICY_NO"=#kode#) 
                     )
        </isEqual>
        <isEqual property="tipe" compareValue="5">
            SELECT DISTINCT HRD.HRD_MST.NIK "ID",
            HRD.MST_CLIENT.MCL_FIRST "NAMA",
			HRD.MST_PERSON.MST_PERSH_ID "ACC",
			'' "NAMABANK",
			'BANK SINARMAS' "NAMABANK2",
			HRD.LST_JABATAN.LJB_NOTE "JABATAN"
            FROM HRD.HRD_MST@absen,
            HRD.MST_CLIENT@absen ,
			HRD.MST_PERSON@absen,
			HRD.LST_JABATAN@absen
            WHERE ( HRD.MST_CLIENT.MCL_ID = HRD.HRD_MST.MCL_ID) and 
            ((HRD.HRD_MST.TGL_KELUAR is null)) and 
            HRD.HRD_MST.NIK=#kode#	and
			HRD.LST_JABATAN.LJB_ID = HRD.HRD_MST.LJB_ID and
			HRD.MST_PERSON.MCL_ID = HRD.HRD_MST.MCL_ID 
            ORDER BY HRD.HRD_MST.NIK ASC
        </isEqual>
    </select>
	<!-- end kuesioner -->
	<select id="elions.bac.counttransulink" parameterClass="string" resultClass="int">
		select count(*) jumlah
		from eka.mst_trans_ulink where reg_spaj =rpad(replace(#value# ,'.'),11,' ')
	</select>	
	
	<select id="elions.bac.sum_premi" parameterClass="string" resultClass="double">
		select sum(mspr_premium) mspr_premium
		from eka.mst_product_insured 
		where reg_spaj =rpad(replace(#value# ,'.'),11,' ')
	</select>	

	<select id="elions.bac.count_simultan" parameterClass="string" resultClass="integer">
		select count(*) jumlah
		 from eka.mst_simultaneous 
		 where mcl_id = #value# and 
		 mssm_pemegang=0 and 
		 mste_insured_no=1
	</select>
	
	<select id="elions.bac.count_client_simultan" parameterClass="java.util.HashMap" resultClass="integer">
		select count(*) jumlah from eka.mst_client_new
		where mcl_id = #mcl_id# and
		upper(trim(mcl_first)) =upper(trim(#mcl_first#)) and
		to_char(mspe_date_birth,'yyyymmdd') = #mspe_date_birth#
	</select>

	<select id="elions.bac.count_no_blanko" parameterClass="java.util.HashMap" resultClass="integer">
		select count(*)  mspo_no_blanko
		 from eka.mst_policy, eka.mst_product_insured
		where
		eka.mst_policy.reg_spaj = eka.mst_product_insured.reg_spaj
		and eka.mst_product_insured.lsbs_id = #kode#
		and eka.mst_product_insured.lsdbs_number = #number#
		and eka.mst_policy.mspo_no_blanko = upper(trim(#no_blanko#))
	</select>
	
	<select id="elions.bac.count_no_blanko_perspaj" parameterClass="java.util.HashMap" resultClass="integer">
		select count(*)  mspo_no_blanko
		 from eka.mst_policy, eka.mst_product_insured
		where
		eka.mst_policy.reg_spaj = eka.mst_product_insured.reg_spaj
		and eka.mst_product_insured.lsbs_id = #kode#
		and eka.mst_product_insured.lsdbs_number = #number#
		and eka.mst_policy.mspo_no_blanko = upper(replace(trim(#no_blanko#),' ',''))
		and eka.mst_policy.reg_spaj <![CDATA[<>]]> rpad(replace(#spaj# ,'.'),11,' ')
	</select>
	
		<select id="elions.bac.blanko_sama" parameterClass="string" resultClass="string">
		select eka.mst_policy.reg_spaj
		 from eka.mst_policy
		where
		 eka.mst_policy.mspo_no_blanko = upper(trim(#value#))
		 AND ROWNUM = 1
	</select>
	
	<select id="elions.bac.no_virtual_sama" parameterClass="string" resultClass="string">
		select eka.mst_insured.reg_spaj
		 from eka.mst_insured
		where
		 eka.mst_insured.mste_no_vacc = trim(#value#)
		 AND ROWNUM = 1
	</select>

		<select id="elions.bac.cekNoBlanko" parameterClass="string" resultClass="integer">
		select count(*) 
			from eka.mst_policy 
				where eka.mst_policy.mspo_no_blanko = upper(trim(#value#))
	</select>
	
	<select id="elions.bac.select_hcp" parameterClass="string" resultClass="com.ekalife.elions.model.Hcp">
		select eka.mst_product_insured.mspr_extra,   
		   	eka.mst_product_insured.mspr_tsi,   
		 	eka.mst_product_insured.mspr_premium,
			eka.mst_product_insured.mspr_ins_period,   
			eka.mst_product_insured.mspr_beg_date,   
			eka.mst_product_insured.mspr_end_date,   
			eka.mst_product_insured.mspr_end_pay,   
			eka.mst_product_insured.mspr_class,   
			eka.mst_product_insured.mspr_unit,   
			eka.f_lsdbs(eka.mst_product_insured.reg_spaj, eka.mst_product_insured.lsbs_id, eka.mst_product_insured.lsdbs_number) lsdbs_name,   
			eka.lst_det_bisnis.lsdbs_number, 
			eka.mst_product_insured.lsbs_id,   
			eka.mst_product_insured.mspr_tt ,
			eka.mst_product_insured.mspr_rate,
			eka.mst_product_insured.mste_insured_no,
			eka.mst_product_insured.lku_id,
			eka.mst_product_insured.mspr_persen,
			eka.mst_product_insured.mspr_tsi_pa_a ,
			eka.mst_product_insured.mspr_tsi_pa_b ,
			eka.mst_product_insured.mspr_tsi_pa_c ,
			eka.mst_product_insured.mspr_tsi_pa_d ,
			eka.mst_product_insured.mspr_tsi_pa_m ,
			eka.mst_product_insured.lsbs_id||'~X'||eka.lst_det_bisnis.lsdbs_number plan_rider,
			eka.mst_peserta.reg_spaj, eka.mst_peserta.no_urut, eka.mst_peserta.lsre_id, eka.mst_peserta.nama,
			eka.mst_peserta.tgl_lahir, eka.mst_peserta.kelamin, eka.mst_peserta.umur, eka.mst_peserta.premi,
			NVL(eka.mst_peserta.lspc_no,0) lspc_no
	    		from eka.mst_product_insured,   
			     eka.lst_det_bisnis  ,eka.mst_peserta 
	    where ( eka.lst_det_bisnis.lsbs_id = eka.mst_product_insured.lsbs_id ) and    
			     ( eka.lst_det_bisnis.lsdbs_number = eka.mst_peserta.lsdbs_number ) and
				 eka.mst_peserta.reg_spaj = eka.mst_product_insured.reg_spaj and
				 eka.mst_peserta.lsbs_id = eka.mst_product_insured.lsbs_id and
				 (eka.mst_product_insured.reg_spaj =rpad(replace(#value#,'.'),11,' ')) 
		
	</select>	
	
	<select id="elions.bac.select_hcp_perkode" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Hcp">
		select eka.mst_product_insured.mspr_extra,   
		   	eka.mst_product_insured.mspr_tsi,   
		 	eka.mst_product_insured.mspr_premium,
			eka.mst_product_insured.mspr_ins_period,   
			eka.mst_product_insured.mspr_beg_date,   
			eka.mst_product_insured.mspr_end_date,   
			eka.mst_product_insured.mspr_end_pay,   
			eka.mst_product_insured.mspr_class,   
			eka.mst_product_insured.mspr_unit,   
			eka.f_lsdbs(eka.mst_product_insured.reg_spaj, eka.mst_product_insured.lsbs_id, eka.mst_product_insured.lsdbs_number) lsdbs_name,  
			eka.lst_det_bisnis.lsdbs_number, 
			eka.mst_product_insured.lsbs_id,   
			eka.mst_product_insured.mspr_tt ,
			eka.mst_product_insured.mspr_rate,
			eka.mst_product_insured.mste_insured_no,
			eka.mst_product_insured.lku_id,
			eka.mst_product_insured.mspr_persen,
			eka.mst_product_insured.mspr_tsi_pa_a ,
			eka.mst_product_insured.mspr_tsi_pa_b ,
			eka.mst_product_insured.mspr_tsi_pa_c ,
			eka.mst_product_insured.mspr_tsi_pa_d ,
			eka.mst_product_insured.mspr_tsi_pa_m ,
			eka.mst_product_insured.lsbs_id||'~X'||eka.lst_det_bisnis.lsdbs_number plan_rider,
			eka.mst_peserta.reg_spaj, eka.mst_peserta.no_urut, eka.mst_peserta.lsre_id, eka.mst_peserta.nama,
			eka.mst_peserta.tgl_lahir, eka.mst_peserta.kelamin, eka.mst_peserta.umur, eka.mst_peserta.premi
	    		from eka.mst_product_insured,   
			     eka.lst_det_bisnis  ,eka.mst_peserta 
	    where ( eka.lst_det_bisnis.lsbs_id = eka.mst_product_insured.lsbs_id ) and    
			     ( eka.lst_det_bisnis.lsdbs_number = eka.mst_product_insured.lsdbs_number ) and
				 eka.mst_peserta.reg_spaj = eka.mst_product_insured.reg_spaj and
				 eka.mst_peserta.lsbs_id = eka.mst_product_insured.lsbs_id and
				 eka.mst_peserta.lsdbs_number = eka.mst_product_insured.lsdbs_number and
				 (eka.mst_product_insured.reg_spaj =rpad(replace(#spaj#,'.'),11,' '))  and
				 eka.mst_peserta.lsbs_id  = #kode# and
				 eka.mst_peserta.lsdbs_number  between #number1# and #number2#
		order by  eka.mst_product_insured.lsbs_id ,
		 eka.mst_product_insured.lsdbs_number
	</select>
	
	<select id="elions.bac.cek_data_sama" parameterClass="java.util.HashMap" resultClass="integer">
		select count(*) jumlah
		from eka.mst_policy a, eka.mst_insured b, 
			eka.mst_product_insured c, eka.mst_person d
		where a.reg_spaj = b.reg_spaj
			and a.reg_spaj = c.reg_spaj
			and a.mspo_policy_holder = d.mcl_id
		    and a.lspd_id not in (95, 99)
		    and a.lssp_id in (1, 10)
			and c.lsbs_id = #lsbs_id#
			and c.lsdbs_number = #lsdbs_number#
			and c.mspr_tsi = #up#
			and d.mspe_no_identity = #ktp#
			and not exists (select 1 from eka.mst_policy x where x.reg_spaj = #reg_spaj#)
	</select>	
	
	<select id="elions.bac.cek_polis_dobel" parameterClass="java.util.HashMap" resultClass="integer">
		select count(*) jumlah
		from eka.mst_policy a, eka.mst_insured b, 
			eka.mst_product_insured c, eka.mst_client_new d
		where a.reg_spaj = b.reg_spaj
		    and a.reg_spaj = c.reg_spaj
		    and a.lspd_id not in (95, 99)
		    and a.lssp_id in (1, 10)
		    and b.mste_insured = d.mcl_id
		    and c.lsbs_id = #lsbs_id#
		    and c.lsdbs_number = #lsdbs_number#
		    and c.mspr_premium = #premi#
		    and d.mcl_first = trim(upper(#nama#))
		    and to_char(d.mspe_date_birth, 'yyyymmdd') = #tgl#
		    <isNotNull property="site">
		    AND concat(A.LCA_ID,concat(A.LWK_ID,A.LSRG_ID))  = #site#
		    </isNotNull>
	</select>
	
	<select id="elions.bac.cek_polis_dobel_tsi" parameterClass="java.util.HashMap" resultClass="integer">
        select count(*) jumlah
        from eka.mst_policy a, eka.mst_insured b, 
            eka.mst_product_insured c, eka.mst_client_new d
        where a.reg_spaj = b.reg_spaj
            and a.reg_spaj = c.reg_spaj
            and a.lspd_id not in (95, 99)
            and a.lssp_id in (1, 10)
            and b.mste_insured = d.mcl_id
            and c.lsbs_id = #lsbs_id#
            and c.lsdbs_number = #lsdbs_number#
            and c.mspr_tsi = #up#
            and trim(upper(d.mcl_first)) = trim(upper(#nama#))
            and to_char(d.mspe_date_birth, 'yyyymmdd') = #tgl#
	</select>
	
	<select id="elions.bac.cek_data_baru_sama" parameterClass="java.util.HashMap" resultClass="integer">
		select count(*) jumlah
		from eka.mst_policy a, eka.mst_insured b, 
			eka.mst_product_insured c, eka.mst_person d
		where a.reg_spaj = b.reg_spaj
			and a.reg_spaj = c.reg_spaj
			and a.mspo_policy_holder = d.mcl_id
		    and a.lspd_id not in (95, 99)
		    and a.lssp_id in (1, 10)
			and c.lsbs_id = #lsbs_id#
			and c.lsdbs_number = #lsdbs_number#
			and c.mspr_tsi = #up#
			and d.mspe_no_identity = #ktp#
	</select>	
	
	<select id="elions.bac.cek_spaj_sama" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select a.reg_spaj, a.mspo_policy_no
		from eka.mst_policy a, eka.mst_insured b, 
			eka.mst_product_insured c, eka.mst_client_new d
		where a.reg_spaj = b.reg_spaj
			and a.reg_spaj = c.reg_spaj
			and a.mspo_policy_holder = d.mcl_id
			and c.lsbs_id = #lsbs_id#
			and c.lsdbs_number = #lsdbs_number#
			and c.mspr_tsi = #up#
			and d.mspe_no_identity = #ktp#
	</select>   
	
	<select id="elions.bac.cek_spaj_sama1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select a.reg_spaj, a.mspo_policy_no
		from eka.mst_policy a, eka.mst_insured b, 
			eka.mst_product_insured c, eka.mst_client d,
			eka.mst_person e
		where a.reg_spaj = b.reg_spaj
			and a.reg_spaj = c.reg_spaj
			and a.mspo_policy_holder = d.mcl_id
			and a.reg_spaj <![CDATA[<>]]> #reg_spaj#
			and c.lsbs_id = #lsbs_id#
			and c.lsdbs_number = #lsdbs_number#
			and c.mspr_tsi = #up#
			and d.mcl_id = e.mcl_id
			and e.mspe_no_identity = #ktp#
	</select>		

	<select id="elions.bac.selectCountProductHcp" parameterClass="string" resultClass="int">
		select count(*) from eka.mst_product_insured where reg_spaj=#value# and lsbs_id=819
	</select>
	
	<select id="elions.bac.selectDataNasabah" parameterClass="string" resultClass="com.ekalife.elions.model.CommandPowersaveUbah">
		SELECT EKA.MST_POLICY.REG_SPAJ,EKA.MST_POLICY.MSPO_POLICY_NO,
				 EKA.MST_CLIENT_NEW.MCL_FIRST
		 FROM EKA.MST_POLICY,
		 		EKA.MST_CLIENT_NEW
		WHERE ( EKA.MST_POLICY.MSPO_POLICY_HOLDER = EKA.MST_CLIENT_NEW.MCL_ID ) AND
				( EKA.MST_POLICY.REG_SPAJ = #value# )
	</select>
	
	<select id="elions.bac.selectProsesPowersave" parameterClass="string" resultClass="com.ekalife.elions.model.PowersaveProses">
		SELECT eka.mst_policy.mspo_policy_no, eka.mst_client_new.mcl_first,
		       eka.mst_powersave_proses.mps_roll_over,
		       eka.mst_powersave_proses.mps_jangka_inv,
		       eka.mst_powersave_proses.mps_rate,
		       eka.mst_powersave_proses.mps_batas_date,
		       eka.mst_powersave_proses.mps_jenis_plan
		  FROM eka.mst_policy, eka.mst_client_new, eka.mst_powersave_proses
		 WHERE (eka.mst_powersave_proses.reg_spaj = eka.mst_policy.reg_spaj)
		   AND (eka.mst_client_new.mcl_id = eka.mst_policy.mspo_policy_holder)
		   AND (    (eka.mst_policy.reg_spaj = #value#)
		        AND (eka.mst_policy.lssp_id = 1)
		        AND (eka.mst_powersave_proses.mps_batas_date =
		                (SELECT MAX (eka.mst_powersave_proses.mps_batas_date)
		                   FROM eka.mst_powersave_proses
		                  WHERE (eka.mst_powersave_proses.mps_kode NOT IN (0, 7))
		                    AND (eka.mst_powersave_proses.reg_spaj = #value#))
		            )
		        AND (eka.mst_powersave_proses.mps_kode NOT IN (0, 7))
		       ) 
	</select>
	
	<select id="elions.bac.selectRatePowerSave" parameterClass="com.ekalife.elions.model.PowersaveProses" resultClass="double">
		SELECT EKA.MST_POWERSAVE_PROSES.MPS_RATE
		 FROM EKA.MST_POLICY,   
				EKA.MST_POWERSAVE_PROSES  
		WHERE ( EKA.MST_POWERSAVE_PROSES.REG_SPAJ = EKA.MST_POLICY.REG_SPAJ ) and  
				( ( EKA.MST_POLICY.REG_SPAJ = #reg_spaj# ) AND  
				( EKA.MST_POLICY.LSSP_ID = 1 ) AND  
				( EKA.MST_POWERSAVE_PROSES.MPS_BATAS_DATE = #mps_batas_date# ) AND
				( EKA.MST_POWERSAVE_PROSES.MPS_KODE IN (2,3,5) ) )  
	</select>
	
	<select id="elions.bac.selectCekPinjaman0" parameterClass="string" resultClass="int">
		SELECT COUNT(*)
			FROM EKA.MST_PINJAMAN  
				WHERE ( EKA.MST_PINJAMAN.REG_SPAJ = #value# ) AND  
					( EKA.MST_PINJAMAN.MSPIN_AKTIF = 1 ) AND  
					( EKA.MST_PINJAMAN.MSPIN_SISA <![CDATA[<>]]> 0 ) AND   
					( EKA.MST_PINJAMAN.FLAG_PINJAM <![CDATA[<>]]> 2 ) AND
					( EKA.MST_PINJAMAN.FLAG_PS = 0 ) AND
					( EKA.MST_PINJAMAN.MSPIN_PAID <![CDATA[<>]]> 1 OR EKA.MST_PINJAMAN.MSPIN_PAID IS NULL)
	</select>
	
	<select id="elions.bac.selectCekPinjaman1" parameterClass="string" resultClass="int">
		SELECT COUNT(*)			
			FROM EKA.MST_PINJAMAN  
			WHERE ( EKA.MST_PINJAMAN.REG_SPAJ = #value# ) AND  
					( EKA.MST_PINJAMAN.FLAG_PS = 1 )
	</select>
	
	<select id="elions.bac.selectProdInsured" parameterClass="string" resultClass="java.util.HashMap">
		SELECT eka.mst_product_insured.lsbs_id, eka.mst_product_insured.lsdbs_number,
	       eka.mst_product_insured.lku_id, eka.lst_kurs.lku_symbol
		  FROM eka.mst_product_insured, eka.lst_kurs
		 WHERE eka.mst_product_insured.reg_spaj = #value#
		   AND eka.mst_product_insured.lsbs_id <![CDATA[<]]> 300
		   AND eka.lst_kurs.lku_id = eka.mst_product_insured.lku_id
	</select>
	
	<select id="elions.bac.selectRiderSave" parameterClass="string" resultClass="java.util.HashMap">
		select lsbs_id, lsdbs_number, lscb_id_rider, mrs_up, mrs_rider_cb
		from eka.mst_rider_save
		where reg_spaj = #value#
	</select>
	
	<select id="elions.bac.selectCountPwrRO" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(*)
			FROM EKA.MST_POWERSAVE_RO  
		WHERE ( EKA.MST_POWERSAVE_RO.REG_SPAJ = #spaj# ) AND  
				( EKA.MST_POWERSAVE_RO.MPS_KODE = 5 ) AND
				( EKA.MST_POWERSAVE_RO.MPS_DEPOSIT_DATE = #depdate# )
	</select>
	
	<select id="elions.bac.selectUbahView" parameterClass="string" resultClass="com.ekalife.elions.model.PowersaveUbah">
		SELECT EKA.MST_POLICY.MSPO_POLICY_NO,
		       EKA.MST_POWERSAVE_UBAH.REG_SPAJ,
		       EKA.MST_POWERSAVE_UBAH.MPU_JENIS,
		       EKA.MST_POWERSAVE_UBAH.MPU_TGL_AWAL,
		       EKA.MST_POWERSAVE_UBAH.MPU_AWAL,
		       EKA.MST_POWERSAVE_UBAH.MPU_AKHIR,
		       EKA.MST_POWERSAVE_UBAH.LUS_ID,
		       EKA.MST_POWERSAVE_UBAH.MPU_INPUT,
		       EKA.MST_POWERSAVE_UBAH.MPU_NOTE, EKA.MST_CLIENT.MCL_FIRST,
		       EKA.MST_POWERSAVE_UBAH.MPU_CONFIRM_DATE,
		       EKA.MST_POWERSAVE_UBAH.MPU_MATURE_DATE,
		       EKA.MST_POWERSAVE_UBAH.MPU_DEPOSIT,
		       EKA.MST_POWERSAVE_UBAH.MPU_INTEREST,
		       EKA.MST_POWERSAVE_UBAH.MPU_PRINT,
		       EKA.MST_POWERSAVE_UBAH.MPU_NO_REG,
		       EKA.MST_POWERSAVE_UBAH.MPU_PRINT_REG,
		       EKA.MST_POWERSAVE_UBAH.MPU_PRINT_DATE
		  FROM EKA.MST_POLICY, EKA.MST_POWERSAVE_UBAH, EKA.MST_CLIENT
		 WHERE (EKA.MST_POLICY.REG_SPAJ = EKA.MST_POWERSAVE_UBAH.REG_SPAJ
		       )
		   AND (EKA.MST_POLICY.MSPO_POLICY_HOLDER = EKA.MST_CLIENT.MCL_ID
		       )
		   AND ((eka.MST_POLICY.REG_SPAJ = #value#))
		    order by EKA.MST_POWERSAVE_UBAH.MPU_TGL_AWAL
	</select>
	
	<select id="elions.bac.selectUbahCount" parameterClass="com.ekalife.elions.model.PowersaveUbah" resultClass="int">
		SELECT count(*)
			  FROM eka.mst_powersave_ubah
			 WHERE reg_spaj = #reg_spaj# AND mpu_tgl_awal = #mpu_tgl_awal# AND mpu_jenis = #mpu_jenis#
	</select>

	<select id="elions.bac.selectCekBlacklist" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select NVL(DECODE(b.lbl_nama, null, 0, 1),0) MCL_BLACKLIST, NVL(DECODE(b.lbl_nb_process, null, 0, b.lbl_nb_process),0) lbl_nb_process 
	    from eka.lst_black_list b
		where (upper(trim(b.lbl_nama)) = upper(trim(#mcl_first#)) or upper(trim(b.lbl_nama_alias_1)) = upper(trim(#mcl_first#)) 
		or upper(trim(b.lbl_nama_alias_2)) = upper(trim(#mcl_first#)) or upper(trim(b.lbl_nama_alias_3)) = upper(trim(#mcl_first#))
		or upper(trim(b.lbl_nama_alias_4)) = upper(trim(#mcl_first#)) or upper(trim(b.lbl_nama_alias_5)) = upper(trim(#mcl_first#))) 
			and to_date(b.lbl_tgl_lahir) = to_date(#mspe_date_birth#, 'dd/mm/yyyy')
		and rownum = 1
	</select>
	
	<select id="elions.bac.selectCountFreeFluBabi" parameterClass="string" resultClass="int">
		select (a.count + b.count) count from 
			(SELECT COUNT (*) COUNT
			  FROM eka.mst_product_ins_end
			 WHERE reg_spaj = #value# AND lsbs_id = 822 AND lsdbs_number = 1) a, 
			(SELECT COUNT (*) COUNT
			  FROM eka.mst_product_insured
			 WHERE reg_spaj = #value# AND lsbs_id = 822 AND lsdbs_number = 1)b
	</select>
	
	<select id="elions.bac.selectSumPremiSlink" parameterClass="string" resultClass="double">
		SELECT nvl(SUM(EKA.MST_SLINK.MSL_PREMI),0) TOTAL_PREMI			
			FROM EKA.MST_SLINK
		WHERE ( EKA.MST_SLINK.REG_SPAJ = #value# ) AND
				( EKA.MST_SLINK.MSL_KODE IN (5,2,3) ) AND
				( EKA.MST_SLINK.MSL_AKTIF = 1 ) AND
				( EKA.MST_SLINK.MSL_BDATE <![CDATA[>=]]> to_date('12102009','ddmmyyyy'))
	</select>
	
	<select id="elions.bac.selectSumPremiSlinkLama" parameterClass="string" resultClass="double">
		SELECT SUM(TOTAL_PREMI)
		FROM(
			SELECT nvl(SUM(EKA.MST_SLINK.MSL_PREMI),0) TOTAL_PREMI			
				FROM EKA.MST_SLINK
			WHERE ( EKA.MST_SLINK.REG_SPAJ = #value# ) AND
					( EKA.MST_SLINK.MSL_KODE IN (5,2,3) ) AND
					( EKA.MST_SLINK.MSL_AKTIF = 1 ) AND
					( EKA.MST_SLINK.MSL_POSISI <![CDATA[<>]]> 45)
			UNION
			SELECT nvl(SUM(EKA.MST_PSAVE.MPS_PREMI),0) TOTAL_PREMI			
				FROM EKA.MST_PSAVE
			WHERE ( EKA.MST_PSAVE.REG_SPAJ = #value# ) AND
					( EKA.MST_PSAVE.MPS_KODE IN (5,2,3) ) AND
					( EKA.MST_PSAVE.MPS_AKTIF = 1 ) AND
					( EKA.MST_PSAVE.MPS_POSISI <![CDATA[<>]]> 45)
		)
	</select>
		
	
	<select id="elions.bac.selectPrintBabiRider" parameterClass="string" resultClass="java.util.HashMap">
		SELECT a.msen_endors_no,a.MSEN_INPUT_DATE,nvl(c.MSL_TU_KE,'0') MSL_TU_KE
		  FROM eka.mst_endors a, eka.mst_product_ins_end b,eka.mst_slink c
		 WHERE a.msen_print = 0
		   AND a.MSEN_ENDORS_NO = c.MSEN_ENDORS_NO (+)
		   AND a.msen_endors_no = b.msen_endors_no
		   and b.LSBS_ID=822
		   and b.LSDBS_NUMBER=1
		   and a.MSEN_PROSES_BSM=1
		   and a.MSEN_AUTO_RIDER=2
		    AND a.reg_spaj = #value#
	</select>
	
	
	
	<select id="elions.bac.selectMstEndorsGetEndorsNo" parameterClass="java.util.HashMap" resultClass="string">
		select msen_endors_no
		from eka.mst_product_ins_end
		where reg_spaj = #reg_spaj#
		and lsbs_id = #lsbs_id#
		and lsdbs_number = #lsdbs_number#
	</select>	
	
	<select id="elions.bac.selectDaftarSpajOtorisasi" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	
SELECT a.reg_spaj, a.mspo_input_date,m.valid_bank_1, m.valid_bank_2,
         ('[' || d.lsbs_id || '-' || d.lsdbs_number || '] ' || eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number)) produk, eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) lsdbs_name,
         b.mste_beg_date, b.mste_end_date, f.nama_cabang, g.nama_reff penutup,
         h.nama_reff referal, i.mcl_first pemegang, j.mcl_first tertanggung, a.mspo_policy_no, (l.lca_id || l.lwk_id) AS lsrg_nama,
         (CASE
		  WHEN l.lca_id = '09' THEN 'Bancassurance'
		  WHEN l.lca_id IN ('08', '42') THEN 'Worksite' 
		  WHEN l.lca_id in ('37','52') THEN 'Agency' 
		  WHEN l.lca_id = '46' THEN 'Hybrid'
		  ELSE 'Regional'
		  END
		  ) distribusi
    FROM eka.mst_policy a,
         eka.mst_insured b,
         eka.mst_product_insured c,
         eka.lst_det_bisnis d,
         eka.mst_reff_bii e,
         eka.lst_cabang_bii f,
         eka.lst_reff_bii g,
         eka.lst_reff_bii h,
		 eka.mst_client i,
		 eka.mst_client j,
		 eka.mst_agent_prod k,
		 eka.mst_agent l,
		 eka.lst_user m
   WHERE a.lca_id = '09'
     AND a.lstb_id = 1
     AND a.lspd_id = 1
     AND a.reg_spaj = b.reg_spaj
     AND b.mste_insured_no = c.mste_insured_no
     AND b.reg_spaj = c.reg_spaj
     AND c.lsbs_id = d.lsbs_id
     AND c.lsbs_id <![CDATA[<>]]>120
     AND c.lsdbs_number = d.lsdbs_number
     AND a.reg_spaj = e.reg_spaj
   <!--   AND TRIM(e.lcb_no) =TRIM(#cabBank#) -->
      <isNotNull property="cabBank">
         <iterate prepend="AND trim(e.lcb_no) in" property="cabBank" open="(" close=")" conjunction=",">
              #cabBank[]#             
         </iterate>
     </isNotNull> 
     AND e.lcb_no = f.lcb_no
     AND e.lrb_id = g.lrb_id
     AND e.reff_id = h.lrb_id
	 AND a.mspo_policy_holder = i.mcl_id
	 AND b.mste_insured = j.mcl_id
	 AND a.reg_spaj = k.reg_spaj
	 AND k.lsle_id = 4
	 AND k.msag_id = l.msag_id
	 AND m.lus_id = a.lus_id
	 <isEqual property="tipe" compareValue="0">
  	 AND a.reg_spaj $kata$
  	 </isEqual>
  	 <isEqual property="tipe" compareValue="1">
  	 AND a.mspo_policy_no $kata$
  	 </isEqual>
	 <isEqual property="tipe" compareValue="2">
	 AND i.mcl_first $kata$
	 </isEqual>
	 <isEqual property="tipe" compareValue="3">
	 AND j.mcl_first $kata$
	 </isEqual>
	 AND 0 = (select count(*) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ')
ORDER BY a.mspo_input_date DESC

</select>


<select id="elions.bac.selectSpajOtorisasiDisabled" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select reg_spaj, (case when msps_desc ='OTORISASI INPUT SPAJ' then 'enabled' else 'disabled' end) disabled from eka.mst_position_spaj where 
	reg_spaj = #spaj#
	and msps_desc ='OTORISASI INPUT SPAJ'
</select>


<select id="elions.bac.selectAccessMenuOtorisasiSpaj" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT b.lcb_no, b.nama_cabang, a.lus_id, a.valid_bank_1, a.valid_bank_2
  FROM eka.lst_user a, eka.lst_cabang_bii b
 WHERE a.lus_active = 1 AND a.jn_bank = #jn_bank# AND a.cab_bank = b.lcb_no
 	and lcb_no = #cabBank#
</select>
 
<select id="elions.bac.selectMslTuKeMstPositionSpajList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
select substr(msps_desc,26,length(msps_desc)) msl_tu_ke from eka.mst_position_spaj where reg_spaj = #regSpaj# and msps_desc LIKE 'OTORISASI INPUT TOPUP KE%'
</select>

	<select id="elions.bac.selectOtorisasiTopupStableLink" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.InputTopup">
		SELECT   ms.reg_spaj, ms.msl_no, ms.lji_id, ms.msl_kode, ms.msl_ro, ms.no_reg,
		         ms.tarik_bunga, ms.msl_posisi, ms.msl_bdate, ms.msl_edate,
		         ms.msl_premi, ms.msl_rate, ms.msl_mgi, ms.msl_bunga, ms.msl_tax,
		         ms.msl_tgl_nab, ms.msl_nab, ms.msl_unit, ms.msl_saldo_unit,
		         ms.msl_tarik_pertama, ms.msl_bp_rate, ms.msl_tgl_nab_bp,
		         ms.msl_nab_bp, ms.msl_nilai_polis, ms.msl_bp, ms.msl_bp_pt,
		         ms.msl_up, ms.msl_hari, ms.msl_next_date, ms.msl_bayar_bunga,
		         ms.msl_bayar_bp, ms.msl_input_date, ms.msl_trans_date,
		         ms.msl_proses_date, ms.msl_confirm_date, ms.msl_prod_date,
		         ms.flag_rate, ms.msl_tahun_ke, ms.msl_premi_ke, ms.msl_note,
		         ms.lus_id, ms.msl_flag_print, ms.msl_print_date, ms.msl_aktif,
		         ms.msl_tu_ke, ms.msl_flag_up, ms.msl_jn_rumus, ms.msl_flag_comm,
		         ms.msl_print, ms.no_reg_ref, ms.msl_bayar_tarik, ms.msl_desc,
		         ms.msl_rate_date, ms.msl_new, ms.msl_surr_charge, ms.msl_letter_date,
		         ms.msl_paid_date, ms.msl_cash, ms.flag_bulanan, ms.flag_special,
		         mp.mspo_policy_no, 0 flag_new, lji.lji_invest, lk.lku_symbol, lk.lku_id, ms.no_trx
		    FROM eka.mst_policy mp,
		         eka.mst_slink ms,
		         eka.lst_jenis_invest lji,
		         eka.lst_kurs lk
		   WHERE mp.reg_spaj = ms.reg_spaj
		     AND mp.reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ')
		     AND ms.msl_posisi = #msl_posisi#
		     AND ms.msl_no <![CDATA[<>]]> 1
		     AND ms.lji_id = lji.lji_id
		     AND mp.lku_id = lk.lku_id
		      <isNotNull property="mslNo">
		      AND ms.msl_no = #mslNo#
		      </isNotNull>
		     <isNotNull property="tempTuKe">
			     <iterate prepend="AND ms.msl_tu_ke not in" property="tempTuKe" open="(" close=")" conjunction=",">
					#tempTuKe[]#		     
			     </iterate>
		     </isNotNull>	
		ORDER BY ms.msl_tu_ke
	</select>
	
	<select id="elions.bac.selectPemegangAndRekeningInfo" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.PemegangAndRekeningInfo">
	     select a.mrc_nama, c.mcl_first , d.notes , a.mrc_kuasa , d.tgl
		 from 
		 eka.mst_rek_client a,
		 eka.mst_policy b,
		 eka.mst_client_new c,
		 eka.mst_rek_hist d
		 where a.reg_spaj = b.reg_spaj
		 and a.reg_spaj = d.reg_spaj
		 and b.reg_spaj = d.reg_spaj
		 and b.mspo_policy_holder = c.mcl_id
		 and a.reg_spaj = #regSpaj#
		 and d.jenis =  '10' 
		 and d.tgl = (select max(tgl) from eka.mst_rek_hist where reg_spaj = #regSpaj#) 
	</select>

<select id="elions.bac.selectBidangUsaha" resultClass="id.co.sinarmaslife.std.model.vo.DropDown">
		select to_char(lju_id) key, lju_usaha value from eka.lst_jn_usaha
		<isEqual property="flag" compareValue="1">
			where lju_id != 0
		</isEqual>
		<isEqual property="flag" compareValue="2">
			where lju_id = 0
		</isEqual>
		order by lju_usaha asc
</select>
	
	<select id="elions.bac.selectKursAndNominal" resultClass="com.ekalife.elions.model.KursDanJumlah" parameterClass="java.lang.String">
   SELECT   a.lku_id, SUM (NVL (b.msl_premi, c.mpr_deposit)) nominal
    FROM eka.mst_policy a, eka.mst_slink b, eka.mst_powersave_ro c
   WHERE a.reg_spaj = #spaj#
     AND a.reg_spaj = b.reg_spaj(+)
     AND b.msl_new(+) = 1
     AND a.reg_spaj = c.reg_spaj(+)
     AND c.mps_kode(+) = 5
   GROUP BY a.lku_id
   </select>
   
   <select id="elions.bac.selectCekPrintUlang" parameterClass="java.util.HashMap" resultClass="int">
		select count(*) from eka.mst_position_spaj where reg_spaj=#spaj#
			   and upper(msps_desc) like upper(#keterangan#) 
	</select>

     <select id="elions.bac.selectStrukturAgen" parameterClass="java.lang.String" resultClass="java.util.HashMap">
         select
            (case
            when a.lca_id = '46' then
            decode(a.lsle_id, 4, 'FC', 3, 'SM', 2, 'BM', 1, 'DM', 0, decode(a.msag_sbm, 1, 'RM', 'RD'), '-')
            when a.lca_id in ('37','52') then
            decode(a.lsle_id, 4, 'ME', 3, 'SM', 2, 'AM', 1, 'AD', '-')
            when a.lca_id not in ('08','09','40') then
            decode(a.lsle_id, 4, 'ME', 3, 'UM', 2, decode(a.msag_sbm, 1, 'BM', 'AM'), 1, decode(a.msag_sbm, 1, 'SBM', 'RM'), '-')
            else '-'
            end) jabatan,
            a.msag_id kode_agen, eka.utils.agen(a.msag_id) nama, a.msag_npwp npwp, eka.utils.bank(a.lbn_id) bank,
            to_char( a.msag_beg_date, 'dd/mm/yyyy' ) beg_date,
            to_char( a.msag_end_date, 'dd/mm/yyyy' ) end_date,
            to_char( a.msag_active_date, 'dd/mm/yyyy' ) active_date,
            decode(a.msag_sertifikat, 0, 'NO', 1, 'PEMUTIHAN', 2, 'UJIAN', 3, 'SEMENTARA', 4, 'TIDAK LULUS', 5, 'TEMPORARY', 6, 'CPD-1', 7, 'CPD-2', 8, 'CPD-3', '-') jenis_lisensi,
            to_char( a.msag_berlaku, 'dd/mm/yyyy' ) tgl_lisensi_expired
         from eka.mst_agent a
            start with a.msag_id = #msag_id# 
            connect by (msag_id = prior mst_leader) or (msag_id = prior msag_rm)
	</select>
   
	<select id="elions.bac.selectDaftarSpajOtorisasiSpajDanaSekuritas" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT   a.lca_id, SUBSTR (a.reg_spaj, 1, 2) || '.' || SUBSTR (a.reg_spaj, 3, 4) || '.' || SUBSTR (a.reg_spaj, 7) spaj_formatted,
		a.reg_spaj, a.mspo_policy_no_format policy_formatted,a.mspo_input_date,('[' || d.lsbs_id || '-' || d.lsdbs_number || '] ' || eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number)) produk,
		a.mspo_policy_no, a.lspd_id, a.lstb_id,e.mcl_first pemegang, f.mcl_first tertanggung,
		(CASE
		  WHEN h.lca_id = '09' THEN 'Bancassurance'
		  WHEN h.lca_id IN ('08', '42') THEN 'Worksite' 
		  WHEN h.lca_id = '37' THEN 'Agency'
		  WHEN h.lca_id = '52' THEN 'Agency Arthamas'  
		  WHEN h.lca_id = '46' THEN 'Hybrid'
		  ELSE 'Regional'
		  END
		  ) distribusi
		    FROM eka.mst_policy a, 
			eka.mst_insured b, 
			eka.mst_product_insured c, 
			eka.lst_det_bisnis d,		 
			eka.mst_client e,
			eka.mst_client f,
			eka.mst_agent_prod g,
			eka.mst_agent h
		   WHERE a.lspd_id = 1 
		   AND a.lstb_id = 1
		   AND a.reg_spaj = b.reg_spaj
		   AND b.mste_insured_no = c.mste_insured_no
		   AND b.reg_spaj = c.reg_spaj
    	   AND c.lsbs_id = d.lsbs_id
     	   AND c.lsdbs_number = d.lsdbs_number
		   AND a.mspo_policy_holder = e.mcl_id
		   AND b.mste_insured = f.mcl_id
		   AND a.reg_spaj = g.reg_spaj
		   AND g.lsle_id = 4
		   AND g.msag_id = h.msag_id
		   <isEqual property="tipe" compareValue="0">
  		 	AND a.reg_spaj $kata$
		  	 </isEqual>
		  	 <isEqual property="tipe" compareValue="1">
		  	 AND a.mspo_policy_no $kata$
		  	 </isEqual>
			 <isEqual property="tipe" compareValue="2">
			 AND e.mcl_first $kata$
			 </isEqual>
			 <isEqual property="tipe" compareValue="3">
			 AND f.mcl_first $kata$
			 </isEqual>
		   AND a.lus_id in (SELECT lus_id FROM eka.lst_user WHERE lus_active = 1 AND jn_bank = 3 AND TRIM(cab_bank) = TRIM(#cabBank#))
		   AND 0 = (select count(*) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ')
		   ORDER BY a.reg_spaj
   </select>
   
	<select id="elions.bac.selectIsUserYangInputDanaSekuritas" resultClass="int" parameterClass="java.util.HashMap">
				   select count(*)
			   from eka.mst_policy a,
			   eka.lst_user b
			   where a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
			   and a.lus_id = b.lus_id
			   and TRIM(b.cab_bank) = TRIM(#cabBank#)
	</select>  
	
	<select id="elions.bac.selectMstKuesionerPelayananByInsertDate" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.KuesionerPelayananDetails">
	 select c.mcl_first,b.mspo_policy_no_format,d.alamat_rumah, d.kota_rumah, a.telpon_rumah, a.telpon_kantor, a.no_hp, a.no_hp2, a.pin_bb, a.komentar,
	 round(((a.sikap1 + a.inisiatif1 + a.kejelasan_dlm_info1 +  a.solusi1 + a.penguasaan_produk1 + a.ketepatan_waktu1)/6)* 100 ) || '%' as group_a1,
     round(((a.sikap2 + a.inisiatif2 + a.kejelasan_dlm_info2 +  a.solusi2 + a.penguasaan_produk2 + a.ketepatan_waktu2)/6) * 100 ) || '%' as group_a2,
     round(((a.sikap3 + a.inisiatif3 + a.kejelasan_dlm_info3 +  a.solusi3 + a.penguasaan_produk3 + a.ketepatan_waktu3)/6) * 100 ) || '%' as group_a3,
     round(((a.sikap4 + a.inisiatif4 + a.kejelasan_dlm_info4 +  a.solusi4 + a.penguasaan_produk4 + a.ketepatan_waktu4)/6) * 100 ) || '%' as group_a4,
     round(((a.sikap5 + a.inisiatif5 + a.kejelasan_dlm_info5 +  a.solusi5 + a.penguasaan_produk5 + a.ketepatan_waktu5)/6) * 100 ) || '%' as group_a5,
     round(((a.manfaat_produk1 + a.pemahaman_resiko1 + a.perlindungan_asuransi1 + a.tarif_premi1 + a.kelayakan_beban_biaya1)/5) * 100 ) || '%' as group_b1,
     round(((a.manfaat_produk2 + a.pemahaman_resiko2 + a.perlindungan_asuransi2 + a.tarif_premi2 + a.kelayakan_beban_biaya2)/5) * 100 ) || '%' as group_b2,
     round(((a.manfaat_produk3 + a.pemahaman_resiko3 + a.perlindungan_asuransi3 + a.tarif_premi3 + a.kelayakan_beban_biaya3)/5) * 100 ) || '%' as group_b3,
     round(((a.manfaat_produk4 + a.pemahaman_resiko4 + a.perlindungan_asuransi4 + a.tarif_premi4 + a.kelayakan_beban_biaya4)/5) * 100 ) || '%' as group_b4,
     round(((a.manfaat_produk5 + a.pemahaman_resiko5 + a.perlindungan_asuransi5 + a.tarif_premi5 + a.kelayakan_beban_biaya5)/5) * 100 ) || '%' as group_b5,
     round(((a.penggunaan_policy1 + a.ketepatan_waktu_mail_sms1 + a.kemudahan_call_center1)/3) * 100 ) || '%' as group_c1,
     round(((a.penggunaan_policy2 + a.ketepatan_waktu_mail_sms2 + a.kemudahan_call_center2)/3) * 100 ) || '%' as group_c2,
     round(((a.penggunaan_policy3 + a.ketepatan_waktu_mail_sms3 + a.kemudahan_call_center3)/3) * 100 ) || '%' as group_c3,
     round(((a.penggunaan_policy4 + a.ketepatan_waktu_mail_sms4 + a.kemudahan_call_center4)/3) * 100 ) || '%' as group_c4,
     round(((a.penggunaan_policy5 + a.ketepatan_waktu_mail_sms5 + a.kemudahan_call_center5)/3) * 100 ) || '%' as group_c5  
	 from 
	 	 (select (case when(sikap = 1) THEN 1 ELSE 0 END) as sikap1,
		(case when(sikap = 2) THEN 1 ELSE 0 END) as sikap2,
		(case when(sikap = 3) THEN 1 ELSE 0 END) as sikap3,
		(case when(sikap = 4) THEN 1 ELSE 0 END) as sikap4,
		(case when(sikap = 5) THEN 1 ELSE 0 END) as sikap5,
		(case when(inisiatif = 1) THEN 1 ELSE 0 END) as inisiatif1,  
		(case when(inisiatif = 2) THEN 1 ELSE 0 END) as inisiatif2,
		(case when(inisiatif = 3) THEN 1 ELSE 0 END) as inisiatif3,
		(case when(inisiatif = 4) THEN 1 ELSE 0 END) as inisiatif4,
		(case when(inisiatif = 5) THEN 1 ELSE 0 END) as inisiatif5,
		(case when(kejelasan_dlm_info = 1) THEN 1 ELSE 0 END) as kejelasan_dlm_info1,  
		(case when(kejelasan_dlm_info = 2) THEN 1 ELSE 0 END) as kejelasan_dlm_info2,
		(case when(kejelasan_dlm_info = 3) THEN 1 ELSE 0 END) as kejelasan_dlm_info3,
		(case when(kejelasan_dlm_info = 4) THEN 1 ELSE 0 END) as kejelasan_dlm_info4,
		(case when(kejelasan_dlm_info = 5) THEN 1 ELSE 0 END) as kejelasan_dlm_info5,
		(case when(solusi = 1) THEN 1 ELSE 0 END) as solusi1,  
		(case when(solusi = 2) THEN 1 ELSE 0 END) as solusi2,
		(case when(solusi = 3) THEN 1 ELSE 0 END) as solusi3,
		(case when(solusi = 4) THEN 1 ELSE 0 END) as solusi4,
		(case when(solusi = 5) THEN 1 ELSE 0 END) as solusi5,
		(case when(penguasaan_produk = 1) THEN 1 ELSE 0 END) as penguasaan_produk1,  
		(case when(penguasaan_produk = 2) THEN 1 ELSE 0 END) as penguasaan_produk2,
		(case when(penguasaan_produk = 3) THEN 1 ELSE 0 END) as penguasaan_produk3,
		(case when(penguasaan_produk = 4) THEN 1 ELSE 0 END) as penguasaan_produk4,
		(case when(penguasaan_produk = 5) THEN 1 ELSE 0 END) as penguasaan_produk5,
		(case when(ketepatan_waktu = 1) THEN 1 ELSE 0 END) as ketepatan_waktu1,  
		(case when(ketepatan_waktu = 2) THEN 1 ELSE 0 END) as ketepatan_waktu2,
		(case when(ketepatan_waktu = 3) THEN 1 ELSE 0 END) as ketepatan_waktu3,
		(case when(ketepatan_waktu = 4) THEN 1 ELSE 0 END) as ketepatan_waktu4,
		(case when(ketepatan_waktu = 5) THEN 1 ELSE 0 END) as ketepatan_waktu5,
		(case when(manfaat_produk = 1) THEN 1 ELSE 0 END) as manfaat_produk1,  
		(case when(manfaat_produk = 2) THEN 1 ELSE 0 END) as manfaat_produk2,
		(case when(manfaat_produk = 3) THEN 1 ELSE 0 END) as manfaat_produk3,
		(case when(manfaat_produk = 4) THEN 1 ELSE 0 END) as manfaat_produk4,
		(case when(manfaat_produk = 5) THEN 1 ELSE 0 END) as manfaat_produk5,
		(case when(pemahaman_resiko = 1) THEN 1 ELSE 0 END) as pemahaman_resiko1,  
		(case when(pemahaman_resiko = 2) THEN 1 ELSE 0 END) as pemahaman_resiko2,
		(case when(pemahaman_resiko = 3) THEN 1 ELSE 0 END) as pemahaman_resiko3,
		(case when(pemahaman_resiko = 4) THEN 1 ELSE 0 END) as pemahaman_resiko4,
		(case when(pemahaman_resiko = 5) THEN 1 ELSE 0 END) as pemahaman_resiko5,
		(case when(perlindungan_asuransi = 1) THEN 1 ELSE 0 END) as perlindungan_asuransi1,  
		(case when(perlindungan_asuransi = 2) THEN 1 ELSE 0 END) as perlindungan_asuransi2,
		(case when(perlindungan_asuransi = 3) THEN 1 ELSE 0 END) as perlindungan_asuransi3,
		(case when(perlindungan_asuransi = 4) THEN 1 ELSE 0 END) as perlindungan_asuransi4,
		(case when(perlindungan_asuransi = 5) THEN 1 ELSE 0 END) as perlindungan_asuransi5,
		(case when(tarif_premi = 1) THEN 1 ELSE 0 END) as tarif_premi1,  
		(case when(tarif_premi = 2) THEN 1 ELSE 0 END) as tarif_premi2,
		(case when(tarif_premi = 3) THEN 1 ELSE 0 END) as tarif_premi3,
		(case when(tarif_premi = 4) THEN 1 ELSE 0 END) as tarif_premi4,
		(case when(tarif_premi = 5) THEN 1 ELSE 0 END) as tarif_premi5,
		(case when(kelayakan_beban_biaya = 1) THEN 1 ELSE 0 END) as kelayakan_beban_biaya1,  
		(case when(kelayakan_beban_biaya = 2) THEN 1 ELSE 0 END) as kelayakan_beban_biaya2,
		(case when(kelayakan_beban_biaya = 3) THEN 1 ELSE 0 END) as kelayakan_beban_biaya3,
		(case when(kelayakan_beban_biaya = 4) THEN 1 ELSE 0 END) as kelayakan_beban_biaya4,
		(case when(kelayakan_beban_biaya = 5) THEN 1 ELSE 0 END) as kelayakan_beban_biaya5,
		(case when(penggunaan_policy = 1) THEN 1 ELSE 0 END) as penggunaan_policy1,  
		(case when(penggunaan_policy = 2) THEN 1 ELSE 0 END) as penggunaan_policy2,
		(case when(penggunaan_policy = 3) THEN 1 ELSE 0 END) as penggunaan_policy3,
		(case when(penggunaan_policy = 4) THEN 1 ELSE 0 END) as penggunaan_policy4,
		(case when(penggunaan_policy = 5) THEN 1 ELSE 0 END) as penggunaan_policy5,
		(case when(ketepatan_waktu_mail_sms = 1) THEN 1 ELSE 0 END) as ketepatan_waktu_mail_sms1,  
		(case when(ketepatan_waktu_mail_sms = 2) THEN 1 ELSE 0 END) as ketepatan_waktu_mail_sms2,
		(case when(ketepatan_waktu_mail_sms = 3) THEN 1 ELSE 0 END) as ketepatan_waktu_mail_sms3,
		(case when(ketepatan_waktu_mail_sms = 4) THEN 1 ELSE 0 END) as ketepatan_waktu_mail_sms4,
		(case when(ketepatan_waktu_mail_sms = 5) THEN 1 ELSE 0 END) as ketepatan_waktu_mail_sms5,
		(case when(kemudahan_call_center = 1) THEN 1 ELSE 0 END) as kemudahan_call_center1,  
		(case when(kemudahan_call_center = 2) THEN 1 ELSE 0 END) as kemudahan_call_center2,
		(case when(kemudahan_call_center = 3) THEN 1 ELSE 0 END) as kemudahan_call_center3,
		(case when(kemudahan_call_center = 4) THEN 1 ELSE 0 END) as kemudahan_call_center4,
		(case when(kemudahan_call_center = 5) THEN 1 ELSE 0 END) as kemudahan_call_center5,
		mcl_id,telpon_rumah, telpon_kantor, no_hp, no_hp2, pin_bb, komentar,insert_date
		from eka.mst_kuesioner_pelayanan
		) a,
		 eka.mst_policy b,
		 eka.mst_client_new c,
		 eka.mst_address_new d
	 where a.mcl_id = b.mspo_policy_holder
		 and b.mspo_policy_holder = c.mcl_id
		 and c.mcl_id = d.mcl_id
		 and ( a.insert_date <![CDATA[>=]]> #begDate# and a.insert_date <![CDATA[<=]]>  #endDate# )
	</select>
	
	<select id="elions.bac.selectNoBlankoPas" resultClass="string" parameterClass="java.util.HashMap">
		SELECT distinct B.LSJS_PREFIX || a.no_blanko no_blanko
			  FROM   eka.mst_spaj_det a, eka.lst_jenis_spaj b
			 WHERE   A.LSJS_ID = B.LSJS_ID AND a.no_blanko = #no_kartu#
	</select>  
	
	<select id="elions.bac.selectMstPolicyBasedRegSpaj" resultClass="java.util.HashMap" parameterClass="string">
	 SELECT * 
	 FROM eka.mst_policy 
	 WHERE lca_id = '55'
	 and reg_spaj = #reg_spaj#
	</select>
	
	<select id="elions.bac.selectEmailAdminInputter" resultClass="string" parameterClass="string">
	select b.lus_email
		from eka.mst_policy a,
		     eka.lst_user b
		where a.lus_id = b.lus_id
		and a.reg_spaj = #spaj#
	</select>
	
	<select id="elions.bac.select_produkutama_admin_mall" resultMap="elions.bac.select_produkutama1" >
		SELECT   lsbs_id, lsbs_name
		    FROM eka.lst_bisnis
		   WHERE lsbs_id in (143,188,164,191) AND lsbs_active = 1
		ORDER BY lsbs_name ASC
	</select>
	
	<select id="elions.bac.selectFlagSPH" resultClass="int" parameterClass="string">
		SELECT NVL(mspo_flag_sph, 1) FROM eka.mst_policy WHERE reg_spaj = RPAD (#value#, 11, ' ')
	</select>
	
	<select id="elions.bac.selectprodukBSM" resultClass="string" parameterClass="java.util.HashMap">
		select (lsbs_id || '-' || lsdbs_number)
        from eka.lst_det_bisnis 
        where (lsbs_id || '-' || lsdbs_number) in ('142-2', '158-6', '164-2',
        '120-10','120-11','120-12','120-22','120-23','120-24','163-6','163-7','163-8','163-9','163-10',
        '175-2','182-7','182-8','182-9','186-3','187-1','188-2') 
        and lsdbs_aktif = 1
        and lsbs_id =#lsbs_id#
        and lsdbs_number = #lsdbs_number#
        order by lsbs_id, lsdbs_number
	</select>
	
	<select id="elions.bac.selectJumlahPeserta" resultClass="int" parameterClass="string">
		select count(*) 
		from eka.mst_peserta 
		where reg_spaj =rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.bac.selectSumPremiRiderInMstRiderSave" resultClass="double" parameterClass="string">
		SELECT SUM(MRS_PREMI) FROM EKA.MST_RIDER_SAVE WHERE REG_SPAJ = #reg_spaj#
	</select>
	
	<resultMap id="elions.bac.selectProdukRider1" class="java.util.HashMap">
	 	<result property="BISNIS_ID" column="BISNIS_ID" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                                                 
		<result property="NAME" column="NAME" javaType="string" jdbcType="VARCHAR2" nullValue=""/>    
	</resultMap>
	
	<select id="elions.bac.selectProdukRider" resultMap="elions.bac.selectProdukRider1" >
          SELECT LSBS_ID || '~X' || LSDBS_NUMBER BISNIS_ID,
          		 LSDBS_NAME NAME
          FROM EKA.LST_DET_BISNIS
          WHERE LSBS_ID = #value#
          AND LSDBS_AKTIF = 1
          ORDER BY LSDBS_NUMBER 
	</select>  
	
	<select id="elions.bac.selectAgentCodeAO" resultClass="java.util.HashMap" parameterClass="string">
		select a.msag_id as agent_4,
                  nvl(a.mst_leader,a.msag_id) as agent_3,
                  nvl(nvl((select x.mst_leader 
                        from eka.mst_agent x 
                        where x.MSAG_ACTIVE=1 
                        and x.msag_id=nvl(a.mst_leader,a.msag_id)),a.mst_leader),a.msag_id) as agent_2,
                  nvl((select nvl(x.mst_leader,x.msag_id) 
                        from eka.mst_agent x 
                        where x.MSAG_ACTIVE=1 
                        and x.msag_id=nvl(nvl((select x.mst_leader 
                        from eka.mst_agent x 
                        where x.MSAG_ACTIVE=1 
                        and x.msag_id=nvl(a.mst_leader,a.msag_id)),a.mst_leader),a.msag_id)),
                        nvl(nvl((select x.mst_leader 
                        from eka.mst_agent x 
                        where x.MSAG_ACTIVE=1 
                        and x.msag_id=nvl(a.mst_leader,a.msag_id)),a.mst_leader),a.msag_id)) as agent_1
       from
             eka.mst_agent a,
             eka.mst_client_new b
        where a.mcl_id=b.mcl_id
        and a.lca_id='09'
        and a.msag_id = #value#
        and a.MSAG_ACTIVE=1
	</select>
	
	<select id="elions.bac.selectMrsKurangBayarRiderSave" resultClass="double" parameterClass="java.util.HashMap">
		SELECT MRS_KURANG_BAYAR 
			FROM EKA.MST_RIDER_SAVE 
			WHERE REG_SPAJ = #reg_spaj# 
			AND lsbs_id = #lsbs_id#
			AND lsdbs_number = #lsdbs_number#
	</select>
	
		<select id="elions.bac.CountTotalAdmissionBridge" resultClass="int" parameterClass="java.util.HashMap">
		select count(*)
		from eka.mst_policy a,
		     eka.mst_product_insured b,
		     eka.mst_agent c,
		     eka.mst_agent_prod d,
		     eka.mst_client_new e,
		     eka.mst_client_new f,
		     eka.mst_address_new g,
		     eka.lst_det_bisnis h,
		     eka.lst_bisnis i,
		     eka.lst_kurs j,
		     eka.lst_pay_mode k,
		     eka.mst_insured l,
		     eka.mst_client_new m
		where a.reg_spaj = b.reg_spaj
		and a.reg_spaj = l.reg_spaj
		and a.mspo_policy_holder = e.mcl_id
		and l.mste_insured = m.mcl_id
		and b.lsbs_id = i.lsbs_id
		and b.lsbs_id = h.lsbs_id
		and b.lsdbs_number = h.lsdbs_number
		and e.mcl_id = g.mcl_id
		and a.reg_spaj = d.reg_spaj 
		and d.msag_id = c.msag_id
		and c.mcl_id = f.mcl_id
		and a.lku_id= j.lku_id
		and a.lscb_id = k.lscb_id
		and b.lsbs_id <![CDATA[<]]>300
		and d.lsle_id = 4
		and a.lspd_id <![CDATA[<>]]>95
		and a.lca_id= '60'
		and trunc(a.mspo_input_date) between to_date(#tanggalAwal# || ' 00:00:00','dd/MM/yyyy hh24:mi:ss') and to_date(#tanggalAkhir# || ' 23:59:59','dd/MM/yyyy hh24:mi:ss')
	</select>
	
	<select id="elions.bac.selectPesertaUtamaOrTambahan" resultClass="int" parameterClass="java.util.HashMap">
		select count(*)
		from eka.lst_det_bisnis a
		where a.lsbs_id = #lsbs_id#
		and a.lsdbs_number =#lsdbs_number#
		and upper(a.lsdbs_name) like '%BASIC%'
	</select>
	
	<resultMap id="elions.bac.selectKodeAgenByHolder1" class="java.util.HashMap">
			<result property="ID" column="ID" javaType="string" jdbcType="CHAR" nullValue=""/>
			<result property="REG_SPAJ" column="REG_SPAJ" javaType="string" jdbcType="CHAR" nullValue=""/>
			<result property="PRODUK" column="PRODUK" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
		</resultMap>
		
	<!-- Select kode agent by name(holder) -->
	<select id="elions.bac.selectKodeAgenByHolder" resultMap="elions.bac.selectKodeAgenByHolder1" parameterClass="java.util.HashMap">
           select b.msag_id "ID", a.reg_spaj "REG_SPAJ", c.lsdbs_name "PRODUK"
			from eka.mst_policy_cs a, eka.mst_agent_cs b , eka.lst_det_bisnis c
			where a.reg_spaj = b.reg_spaj
				  and a.lsbs_id = c.lsbs_id
				  and b.lsle_id = 4
				  and a.mscs_holder = #mscs_holder#
				  and rownum=1
	</select>
	
	<resultMap id="elions.bac.selectKodeAgenBySpaj1" class="java.util.HashMap">
			<result property="ID" column="ID" javaType="string" jdbcType="CHAR" nullValue=""/>
			<result property="PEMEGANG" column="PEMEGANG" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
	</resultMap>
	
	<!-- Select kode agent by SPAJ -->
	<select id="elions.bac.selectKodeAgenBySpaj" resultMap="elions.bac.selectKodeAgenBySpaj1" parameterClass="java.util.HashMap">
           select b.msag_id "ID", a.mscs_holder "PEMEGANG"
			from eka.mst_policy_cs a, eka.mst_agent_cs b 
			where a.reg_spaj = b.reg_spaj
			and b.lsle_id = 4
			and (a.reg_spaj = rpad(replace(#reg_spaj# ,'.'),11,' ') OR a.mscs_policy_no = rpad(replace(#reg_spaj# ,'.'),14,' '))
	</select>
	
	<select id="elions.bac.selectFlagPowersave" resultClass="int" parameterClass="java.util.HashMap">
		SELECT lpr_flag FROM eka.lst_pwrsave_flag WHERE lsbs_id = #lsbs# AND lsdbs_number = #lsdbs# AND flag_bulanan = #flag_bulanan#
	</select>
	
	<select id="elions.bac.selectCountAkseptasiKhusus" resultClass="int" parameterClass="string">
		SELECT count(reg_spaj) from eka.mst_position_spaj where reg_spaj = rpad(replace(#reg_spaj# ,'.'),14,' ') and lssa_id=10
	</select>
	
	<select id="elions.bac.selectLsbpIdFromNoRek" resultClass="int" parameterClass="int">
		SELECT b.lsbp_id 
		from eka.lst_rek_ekalife a,
			 eka.lst_bank b
		where a.lbn_id = b.lbn_id
		and a.lsrek_id =#lsrek_id#
	</select>
	
	<select id="elions.bac.selectRekAJSMSIG" resultClass="java.util.HashMap">
		SELECT eka.multiple_replace(lre_acc_no, new eka.t_text('.','-',' '), new eka.t_text('','','')) as REK_AJS 
		FROM eka.lst_rek_ekalife
	</select>
	
	<!-- Select Name Seller Reference -->
	<select id="elions.bac.selectNameSellerRef" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select distinct 
            b.nama name_ref, a.flag_reference jenis_ref
        from
            eka.mst_referensi a,
    		eka.prw_seller b
        where
            a.id_seller = #id_ref#
    		and a.id_seller = b.id_seller
    		and a.flag_reference = 0
            and ((upper(a.name) like '%'|| upper(#nama_p#) ||'%' and a.birth_date = to_date(#tgl_lahir_p#,'dd/MM/yyyy'))
            or  (upper(a.name) like '%'|| upper(#nama_t#) ||'%' and a.birth_date = to_date(#tgl_lahir_t#,'dd/MM/yyyy')))
        <!-- union
        select
        	'Generate Kode' nama_ref, 3 jenis_ref
        from
        	eka.lst_kode_tambang_emas
        where      
        	kode = #id_ref#
        	and flag_aktif = 0 -->
	</select>	
	
	<select id="elions.bac.selectCekRef" resultClass="int" parameterClass="java.util.HashMap">
		select
		    count(name)nama
		from
		    eka.mst_referensi
		where
		    ((upper(name) like upper('%' || #nama_p# || '%') and birth_date = to_date(#tgl_lahir_p#,'dd/MM/yyyy'))
		    or (upper(name) like upper('%' || #nama_t# || '%') and birth_date = to_date(#tgl_lahir_t#,'dd/MM/yyyy'))) 
		    and flag_reference = 0
	</select>
	
	<select id="elions.bac.selectIdTrx" resultClass="string" parameterClass="java.util.HashMap">
		select distinct id_seller from eka.prw_trx where id_seller = #id_ref# and substr(nomor_key,1,11) = #spaj#
	</select>
	
	<select id="elions.bac.selectNoTrx" resultClass="string" parameterClass="java.util.HashMap">
		select distinct no_trx from eka.prw_trx 
		where 
			substr(nomor_key,1,11) = #spaj#
			<isNotNull property="id_ref">
		      AND id_seller = #id_ref#
		    </isNotNull>
	</select>
	
	<select id="elions.bac.selectMaxNoTrx" resultClass="string" parameterClass="java.util.HashMap">
		select NVL(max(no_trx),0)+1 as no_trx from eka.prw_trx 
	</select>
	
	<select id="elions.bac.selectTrx" resultClass="string" parameterClass="string">
		select no_trx from eka.prw_trx where id_seller = #value#
	</select>
	
	<select id="elions.bac.selectNoUrutDTRX" resultClass="java.util.HashMap" parameterClass="string">
		select 
		    a.no_trx, a.urut , b.id_seller, (select count(no_trx) from eka.prw_dtrx where no_trx = a.no_trx)jml
		from 
		    eka.prw_dtrx a,
		    eka.prw_trx b
		where 
		    a.no_trx = b.no_trx
		    and a.reg_spaj = #value#
	</select>
	
	<select id="elions.bac.selectDataPolisRef" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		<!-- select
		    b.mcl_first nama, b.mspe_date_birth tgl_lahir, a.mspo_policy_holder, b.mspe_no_identity id, a.mspo_policy_no
		from
		    eka.mst_policy a,
		    eka.mst_client_new b
		where
		    a.mspo_policy_holder = b.mcl_id
		    and ((a.reg_spaj = rpad(replace(#spaj# ,'.'),11,' ') 
		            OR a.mspo_policy_no = rpad(replace(#spaj# ,'.'),14,' '))
		         OR (a.reg_spaj = rpad(replace(#polis# ,'.'),11,' ') 
		            OR a.mspo_policy_no = rpad(replace(#polis# ,'.'),14,' ')))
		union
		select
		    nama, tgl_lahir, '' mspo_policy_holder, no_id id, '' mspo_policy_no
		from
		    eka.prw_seller
		where   
		    id_seller = #spaj# -->
		select
		    b.mcl_first nama, b.mspe_date_birth tgl_lahir, a.mspo_policy_holder, b.mspe_no_identity id, 
		    a.mspo_policy_no, nvl(b.mspe_email, ' ') email
		from
		    eka.mst_policy a,
		    eka.mst_client_new b,
		    eka.lst_user_external c
		where
		    a.mspo_policy_holder = b.mcl_id
		    and b.mspe_no_identity = c.id(+)
		    and ((a.reg_spaj = replace(#spaj# ,'.')
		            OR a.mspo_policy_no = replace(#spaj# ,'.'))
		         OR (a.reg_spaj = replace(#polis# ,'.') 
		            OR a.mspo_policy_no = replace(#polis# ,'.'))
		         OR c.msag_id = #spaj# OR c.msag_id = #polis#)
	</select>
	
	<select id="elions.bac.selectAgentByPolis" resultClass="java.util.HashMap" parameterClass="string">
		select distinct
		    c.msag_id as key, e.mcl_first as value, e.mspe_email as email, f.lsrg_nama
		from
		    eka.mst_policy a,
		    eka.mst_person b,
		    eka.mst_agent_prod c,
		    eka.mst_agent d,
		    eka.mst_client_new e,
		    eka.lst_region f
		where
		    a.mspo_policy_holder = b.mcl_id
		    and a.reg_spaj = c.reg_spaj
		    and c.msag_id = d.msag_id
		    and d.mcl_id = e.mcl_id
		    and d.lca_id = f.lca_id
		    and d.lwk_id = f.lwk_id
		    and d.lsrg_id = f.lsrg_id
		    and c.lsle_id = 4
		    and a.mspo_policy_holder = #value#
	</select>
	
	<select id="elions.bac.selectMsag_id" resultClass="string" parameterClass="string">
		select
		    msag_id
		from 
		    eka.lst_user_external
		where
		    id = TRIM (UPPER (#value#))
	</select>
	
	<select id="elions.bac.selectIdSeller" resultClass="string" parameterClass="java.util.HashMap">
		select
		    id_seller
		from
		    eka.prw_seller
		where 
		    upper(nama) like upper('%' || #nama# || '%')
		    and tgl_lahir = to_date(#tgl_lahir#,'dd/MM/yyyy')
		    and kode_program = 2
		    <isNotNull property="id">
			    and no_polis in (
			            SELECT distinct
			                b.mspo_policy_no
			            FROM 
			                eka.mst_person a,
			                eka.mst_policy b
			            WHERE 
			                a.mspe_no_identity = TRIM (UPPER (#id#))
			                AND a.mcl_id = b.mspo_policy_holder
			                AND b.lstb_id=1 )
            </isNotNull>
	</select>
	
	<select id="elions.bac.selectDataPs" resultClass="com.ekalife.elions.model.PrwSeller" parameterClass="string">
		select distinct
		    b.mcl_first nama, d.alamat_rumah alamat, d.kota_rumah kota, d.kd_pos_rumah kd_pos, d.area_code_rumah area_tlp,
		    d.telpon_rumah no_telp, d.area_code_kantor area_tlp_kantor, d.telpon_kantor tlp_kantor, d.no_hp no_hp, b.mspe_place_birth tp_lahir,
		    b.mspe_date_birth tgl_lahir, b.mspe_no_identity no_id, b.mspe_email email
		from
		    eka.mst_person a,
		    eka.mst_client_new b,
		    eka.mst_policy c,
		    eka.mst_address_new d
		where
		    a.mspe_no_identity = TRIM (UPPER (#value#))
		    and a.mcl_id = b.mcl_id
		    and a.mcl_id = c.mspo_policy_holder
		    and a.mcl_id = d.mcl_id
		    and rownum = 1
	</select>
	
	<select id="elions.bac.selectCounterIDSeller" resultClass="java.lang.Long" parameterClass="string">
		select msco_value from eka.mst_counter where msco_number = 140 and lca_id = 01
	</select>
	
	<select id="elions.bac.selectReference" resultClass="java.util.HashMap" parameterClass="string">
		select
		    a.order_number, a.name, a.birth_date, a.contact_number, a.msag_id, a.msag_name, a.create_date,
		    (case when a.flag_reference = 0 then 'NASABAH' else 'AGENT' end)flag
		from
		    eka.mst_referensi a,
		    eka.prw_seller b
		where
		    b.no_id= TRIM (UPPER (#value#))
		    and a.id_seller = b.id_seller
		order by
		    order_number asc
	</select>
	
	<select id="elions.bac.selectCekRefInput" resultClass="string" parameterClass="java.util.HashMap">
		select
		    id_seller
		from
		    eka.mst_referensi
		where 
		    upper(name) like upper('%' || #nama# || '%')
		    and birth_date = to_date(#tgl_lahir#,'dd/MM/yyyy')
		    and flag_reference = #jenis#
	</select>
	
	<select id="elions.bac.selectExistingSimpol" parameterClass="java.util.HashMap" resultClass="integer">
	SELECT COUNT (*)
		FROM eka.mst_policy a, eka.mst_insured b, eka.mst_product_insured c, eka.mst_client_new pp, eka.mst_client_new tt
	WHERE a.reg_spaj = b.reg_spaj
	AND   a.reg_spaj = c.reg_spaj
	AND   a.mspo_policy_holder = pp.mcl_id
	AND   b.mste_insured = tt.mcl_id
	AND   c.lsbs_id = 120
	AND   a.lspd_id <![CDATA[<>]]>95
	AND   c.lsdbs_number IN (10,11,12)
	AND   (upper(trim(pp.mcl_first)) = upper(trim(#pp_mcl_first#)) or upper(trim(tt.mcl_first)) = upper(trim(#t_mcl_first#)))
	 AND  (PP.MSPE_DATE_BIRTH = TO_DATE (#pp_mspe_date_birth#, 'dd/MM/yyyy') or TT.MSPE_DATE_BIRTH =TO_DATE(#t_mspe_date_birth#, 'dd/MM/yyyy') )
	</select>
	
	<select id="elions.bac.selectKodeTambangEmas" resultClass="string" parameterClass="string">
		select kode from eka.lst_kode_tambang_emas where kode = #value#
	</select>
	
	<select id="elions.bac.selectKodeGenerate" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select distinct
		    a.id_seller id_ref, b.nama nama_ref, a.flag_reference jenis_ref
		from
		    eka.mst_referensi a,
		    eka.prw_seller b
		where
		    upper(name) like '%'|| upper(#nama#) ||'%' 
		    and a.birth_date = to_date(#tgl_lahir#,'dd/MM/yyyy')
		    and a.id_seller = b.id_seller
		<!-- union
		select distinct
		    kode id_ref, 'GENERATE KODE' nama_ref, to_number('3') jenis_ref
		from
		    eka.lst_kode_tambang_emas
		where
		    upper(pemegang) like '%'|| upper(#nama#) ||'%' 
		    and birth_date = to_date(#tgl_lahir#,'dd/MM/yyyy')
		    reg_spaj = #value# -->
	</select>
	
	<select id="elions.bac.selectAgentBySpajnLevelAgent" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select	a.reg_spaj, b.msag_id, b.lsle_id, c.mcl_id, d.mcl_first nama_agent
		from	eka.mst_policy a,
				eka.mst_agent_prod b,
				eka.mst_agent c,
				eka.mst_client_new d
		where 	a.reg_spaj = b.reg_spaj
		and		b.msag_id = c.msag_id
		and		c.mcl_id = d.mcl_id
		and		b.lsle_id = #lsle_id#
		and 	a.reg_spaj = rpad(replace(#spaj# ,'.'),11,' ') 
	</select>
    
    <select id="elions.bac.selectAgenRef" resultClass="java.util.HashMap" parameterClass="string">
		select
		    a.msag_id, a.lca_id, b.mcl_first, c.lsrg_nama, b.mspe_email email
		from
		    eka.mst_agent a,
		    eka.mst_client_new b,
		    eka.lst_region c
		where
		    a.mcl_id = b.mcl_id
		    and a.lca_id = c.lca_id
		    and a.lwk_id = c.lwk_id
		    and a.lsrg_id = c.lsrg_id
		    and a.msag_id = #value#
	</select>
	
	<select id="elions.bac.getInfoRef" resultClass="java.util.HashMap" parameterClass="string">
		select distinct
		    a.id_seller, a.nama, a.tgl_lahir, nvl(a.alamat,'')alamat, nvl(a.kota,'')kota, 
		    (case when a.kd_pos is null then '' else a.kd_pos end)kd_pos, 
		    a.area_tlp,
		    a.no_telp, a.area_tlp_kantor, a.tlp_kantor, a.no_hp,
		    (poin.plus-poin.min)poin
		from
		    eka.prw_seller a,
		    eka.prw_trx b,
		    (select distinct
		            x.id_seller,
		            sum(case when x.jenis_trx = 0 then y.jlh_point else 0 end)plus,
		            sum(case when x.jenis_trx = 1 then y.jlh_point else 0 end)min
		        from
		            eka.prw_trx x,
		            eka.prw_dtrx y
		        where
		            x.id_seller = #value#
		            and x.no_trx = y.no_trx
		        group  by x.id_seller)poin
		where
		    a.id_seller = b.id_seller
		    and a.id_seller = #value#
		    and a.id_seller = poin.id_seller
	</select>
	
	<select id="elions.bac.selectPoinRedeem" resultClass="long" parameterClass="string">
		select
		    nvl(sum(poin_hadiah),0)poin
		from
		    eka.prw_redeem
		where
		    id_seller = #value#
		    and flag_approve = 0
	</select>
	
	<select id="elions.bac.selectRedeemTE" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select
			a.id_redeem, a.id_seller, c.nama,
		    a.create_date tgl, b.id_item,
		    b.nama_item, a.poin_hadiah poin,
		    (case when a.reg_hadiah = 0 then 'Diambil di kantor pusat' else 'Dikirim' end)reg_hadiah,
		    EKA.UTILS.USER_INPUT(a.lus_id)user_input, 
		    (case when a.flag_approve = 0 then 'Belum diapprove'
		          when a.flag_approve = 1 then 'Approve' else 'Tolak' end)approve
		from
		    eka.prw_redeem a,
		    eka.prw_item b,
		    eka.prw_seller c
		where
		    a.id_item = b.id_item
		    and a.id_seller = c.id_seller
		    <isNotNull property="kd">
		    	 and a.id_seller = #kd#
		    </isNotNull>
		    <isNotNull property="id_redeem">
		    	 and a.id_redeem = #id_redeem#
		    </isNotNull>
		    <isNotEqual property="status" compareValue="ALL">
		    	and a.flag_approve = #status#
		    </isNotEqual>
		order by a.create_date asc
	</select>
	
	<!-- kuesioner -->
	<select id="elions.bac.selectagenrekrutStruktur" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT EKA.MST_AGENT.MSAG_ID "ID", EKA.MST_CLIENT_NEW.MCL_FIRST "NAMA", EKA.MST_AGENT.MSAG_TABUNGAN "ACC", 
            	   EKA.LST_BANK_PUSAT.LSBP_ID "NAMABANK", EKA.LST_BANK_PUSAT.LSBP_NAMA "NAMABANK2"
            FROM EKA.MST_AGENT , 
                 EKA.MST_CLIENT_NEW,
                 EKA.LST_BANK,
                 EKA.LST_BANK_PUSAT
            WHERE EKA.MST_AGENT.MCL_ID =  EKA.MST_CLIENT_NEW.MCL_ID 
              AND EKA.MST_AGENT.LSTB_ID = 1
              AND EKA.MST_AGENT.LBN_ID = EKA.LST_BANK.LBN_ID
              AND EKA.LST_BANK.LSBP_ID = EKA.LST_BANK_PUSAT.LSBP_ID
              AND EKA.MST_AGENT.MSAG_ACTIVE = 1 and 
                  EKA.MST_AGENT.MSAG_ID=#kode#
            ORDER BY  EKA.MST_AGENT.MSAG_ID
    </select>
	
	<select id="elions.bac.select_jenis_cabang_x" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <isEqual property="jenis_x" compareValue="1">
             SELECT (lca_id||lwk_id||lsrg_id) as KEY, trim(lsrg_nama) as VALUE
            FROM eka.lst_region where lca_id NOT IN ('37','46','40','52','55','58','60')
            order by lsrg_nama
        </isEqual>
        <isEqual property="jenis_x" compareValue="2">
       		 SELECT   a.msag_id KEY, trim(c.lwk_nama) VALUE 
		    	FROM eka.mst_agent a,
		         	eka.lst_cabang b,
		         	eka.lst_wakil c,
		         	eka.lst_region d,
		         	eka.mst_client_new e
		   		WHERE a.lstb_id = 1
		     		AND a.msag_active = 1
		     		AND a.lsle_id = DECODE (a.lca_id, '46', 0, 1)
		     		AND a.msag_sbm = DECODE (a.lca_id, '46', 0, a.msag_sbm)
		     		AND a.lca_id NOT IN ('08', '09', '40', '42')
		     		AND a.lca_id = b.lca_id
		     		AND a.lca_id = c.lca_id
		     		AND a.lwk_id = c.lwk_id
		    		AND a.lca_id = d.lca_id
		    		AND a.lwk_id = d.lwk_id
		     		AND a.lsrg_id = d.lsrg_id
		     		AND a.mcl_id = e.mcl_id
 		 	 		AND (a.lca_id IN ('37', '52'))
				ORDER BY b.lca_nama, c.lwk_nama, d.lsrg_nama, e.mcl_first
        </isEqual>
        <isEqual property="jenis_x" compareValue="3">
            select * from(
				select distinct a.lca_id||a.lwk_id as KEY, trim(a.lwk_nama) as VALUE
				from eka.lst_wakil a,
					 eka.lst_artha_dm b,
					 eka.lst_artha_rm c,
					 (SELECT  f.lshb_id ,c.lwk_nama, a.lca_id, a.lwk_id
					    FROM eka.mst_agent a,
					         eka.lst_cabang b,
					         eka.lst_wakil c,
					         eka.lst_region d,
					         eka.mst_client_new e,
							 eka.lst_artha_dm f
					   WHERE a.lstb_id = 1
					     AND a.msag_active = 1
					     AND a.lsle_id = DECODE (a.lca_id, '46', 0, 1)
					     AND a.msag_sbm = DECODE (a.lca_id, '46', 0, a.msag_sbm)
					     AND a.lca_id NOT IN ('08', '09', '40', '42')
					     AND a.lca_id = b.lca_id
					     AND a.lca_id = c.lca_id
					     AND a.lwk_id = c.lwk_id
					     AND a.lca_id = d.lca_id
					     AND a.lwk_id = d.lwk_id
					     AND a.lsrg_id = d.lsrg_id
					     AND a.mcl_id = e.mcl_id
						 AND c.lca_id = f.lca_id
						 AND c.lwk_id = f.lwk_id
						 AND f.lshb_id in '00'
						 AND a.msag_id in ('600811','600791','600777')) d
				where a.lca_id = b.lca_id
				and a.lwk_id = b.lwk_id
				and b.lshb_id = c.lshb_id
				and b.lshb_id = d.lshb_id(+)
				and b.lshb_id in ('00','01')
				AND a.lwk_id in ('00','04','15','31','32','36','37','52')
			union
			SELECT   a.msag_id KEY, trim(c.lwk_nama) VALUE 
			    FROM eka.mst_agent a,
			         eka.lst_cabang b,
			         eka.lst_wakil c,
			         eka.lst_region d,
			         eka.mst_client_new e,
					 eka.lst_artha_dm f
			   WHERE a.lstb_id = 1
			     AND a.msag_active = 1
			     AND a.lsle_id = DECODE (a.lca_id, '46', 0, 1)
			     AND a.msag_sbm = DECODE (a.lca_id, '46', 0, a.msag_sbm)
			     AND a.lca_id NOT IN ('08', '09', '40', '42')
			     AND a.lca_id = b.lca_id
			     AND a.lca_id = c.lca_id
			     AND a.lwk_id = c.lwk_id
			     AND a.lca_id = d.lca_id
			     AND a.lwk_id = d.lwk_id
			     AND a.lsrg_id = d.lsrg_id
			     AND a.mcl_id = e.mcl_id
				 AND c.lca_id = f.lca_id
				 AND c.lwk_id = f.lwk_id
				 AND f.lshb_id in ('00')
				 AND a.msag_id not in ('600811','600791','600777')
			)
			order by value
        </isEqual>
        <isEqual property="jenis_x" compareValue="4">
            SELECT (lca_id||lwk_id||lsrg_id) as KEY, trim(lsrg_nama) as VALUE
            FROM eka.lst_region where lca_id NOT IN ('37','46','40','52','55','58','60')
            order by lsrg_nama
        </isEqual>
    </select>
    
    <select id="elions.bac.select_jenis_cabang_xx" parameterClass="string" resultClass="java.util.HashMap">
		SELECT   a.msag_id KEY, trim(c.lwk_nama) VALUE 
		    	FROM eka.mst_agent a,
		         	eka.lst_cabang b,
		         	eka.lst_wakil c,
		         	eka.lst_region d,
		         	eka.mst_client_new e
		   		WHERE a.lstb_id = 1
		     		AND a.msag_active = 1
		     		AND a.lsle_id = DECODE (a.lca_id, '46', 0, 1)
		     		AND a.msag_sbm = DECODE (a.lca_id, '46', 0, a.msag_sbm)
		     		AND a.lca_id NOT IN ('08', '09', '40', '42')
		     		AND a.lca_id = b.lca_id
		     		AND a.lca_id = c.lca_id
		     		AND a.lwk_id = c.lwk_id
		    		AND a.lca_id = d.lca_id
		    		AND a.lwk_id = d.lwk_id
		     		AND a.lsrg_id = d.lsrg_id
		     		AND a.mcl_id = e.mcl_id
 		 	 		AND (a.lca_id IN ('37', '52'))
				ORDER BY b.lca_nama, c.lwk_nama, d.lsrg_nama, e.mcl_first
    </select>
    
    <select id="elions.bac.selectAgentActiveOrNot" parameterClass="string" resultClass="int">
	    select msag_active
	    from eka.mst_agent
	    where msag_id =#msag_id#
    </select>
    <!-- end kuesioner -->
    
	<select id="elions.bac.selectLstAgenRegional_kues" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT (lca_id||lwk_id||lsrg_id) as key, trim(lsrg_nama) as value
			<!-- FROM eka.lst_region where lca_id NOT IN (#indexCabang#) -->
			FROM eka.lst_region where lca_id $indexCabang$
			order by lsrg_nama
	</select>
	
	<select id="elions.bac.selectLstAgenAgency_kues" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
			<!-- SELECT   a.msag_id key, trim(c.lwk_nama) value  -->
			SELECT (d.lca_id||d.lwk_id||d.lsrg_id) as key, trim(d.lsrg_nama) as value
		    FROM eka.mst_agent a,
		         eka.lst_cabang b,
		         eka.lst_wakil c,
		         eka.lst_region d,
		         eka.mst_client_new e
		   WHERE a.lstb_id = 1
		     AND a.msag_active = 1
		     AND a.lsle_id = DECODE (a.lca_id, '46', 0, 1)
		     AND a.msag_sbm = DECODE (a.lca_id, '46', 0, a.msag_sbm)
		     AND a.lca_id NOT IN ('08', '09', '40', '42')
		     AND a.lca_id = b.lca_id
		     AND a.lca_id = c.lca_id
		     AND a.lwk_id = c.lwk_id
		     AND a.lca_id = d.lca_id
		     AND a.lwk_id = d.lwk_id
		     AND a.lsrg_id = d.lsrg_id
		     AND a.mcl_id = e.mcl_id
 		 	 AND (a.lca_id $indexCabang$ OR a.lca_id = 52)
			ORDER BY b.lca_nama, c.lwk_nama, d.lsrg_nama, e.mcl_first
	</select>
	
	<select id="elions.bac.selectLstHybridAJS_kues" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select * from(
        select distinct a.lca_id || a.lwk_id || d.lsrg_id as key, trim(d.lsrg_nama) as value
                from eka.lst_wakil a,
                     eka.lst_artha_dm b,
                     eka.lst_artha_rm c,
                     (SELECT  f.lshb_id ,c.lwk_nama, a.lca_id, a.lwk_id, d.lsrg_id, d.lsrg_nama
                        FROM eka.mst_agent a,
                             eka.lst_cabang b,
                             eka.lst_wakil c,
                             eka.lst_region d,
                             eka.mst_client_new e,
                             eka.lst_artha_dm f
                       WHERE a.lstb_id = 1
                         AND a.msag_active = 1
                         AND a.lsle_id = DECODE (a.lca_id, '46', 0, 1)
                         AND a.msag_sbm = DECODE (a.lca_id, '46', 0, a.msag_sbm)
                         AND a.lca_id NOT IN ('08', '09', '40', '42')
                         AND a.lca_id = b.lca_id
                         AND a.lca_id = c.lca_id
                         AND a.lwk_id = c.lwk_id
                         AND a.lca_id = d.lca_id
                         AND a.lwk_id = d.lwk_id
                         AND a.lsrg_id = d.lsrg_id
                         AND a.mcl_id = e.mcl_id
                         AND c.lca_id = f.lca_id
                         AND c.lwk_id = f.lwk_id
                         AND f.lshb_id in '00'
                         AND a.msag_id in ('600811','600791','600777')) d
				where a.lca_id = b.lca_id
				and a.lwk_id = b.lwk_id
				and b.lshb_id = c.lshb_id
				and b.lshb_id = d.lshb_id(+)
				and b.lshb_id in('00',#lshb_id#)
				AND a.lwk_id in ('00','04','15','31','32','36','37','52')
			union
			SELECT   a.msag_id key, trim(c.lwk_nama) value 
			    FROM eka.mst_agent a,
			         eka.lst_cabang b,
			         eka.lst_wakil c,
			         eka.lst_region d,
			         eka.mst_client_new e,
					 eka.lst_artha_dm f
			   WHERE a.lstb_id = 1
			     AND a.msag_active = 1
			     AND a.lsle_id = DECODE (a.lca_id, '46', 0, 1)
			     AND a.msag_sbm = DECODE (a.lca_id, '46', 0, a.msag_sbm)
			     AND a.lca_id NOT IN ('08', '09', '40', '42')
			     AND a.lca_id = b.lca_id
			     AND a.lca_id = c.lca_id
			     AND a.lwk_id = c.lwk_id
			     AND a.lca_id = d.lca_id
			     AND a.lwk_id = d.lwk_id
			     AND a.lsrg_id = d.lsrg_id
			     AND a.mcl_id = e.mcl_id
				 AND c.lca_id = f.lca_id
				 AND c.lwk_id = f.lwk_id
				 AND f.lshb_id in ('00')
				 AND a.msag_id not in ('600811','600791','600777')
		)
		order by value
	</select>
	
	<select id="elions.bac.selectLstAgenWorksite_kues" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT (lca_id||lwk_id||lsrg_id) as key, trim(lsrg_nama) as value
			FROM eka.lst_region where lca_id IN (#indexCabang#)
			order by lsrg_nama
	</select>
	
	<select id="elions.bac.selectLstAgen_kues" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT (lca_id||lwk_id||lsrg_id) as key, trim(lsrg_nama) as value
			FROM eka.lst_region
			order by lsrg_nama
	</select>
	
	
	<resultMap id="elions.bac.validasiAgenPasBPDbd1" class="java.util.HashMap">
			<result property="ID" column="ID" javaType="string" jdbcType="CHAR" nullValue=""/>
			<result property="NAMA" column="NAMA" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
			<result property="NOKTP" column="NOKTP" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
			<result property="TGLLAHIR" column="TGLLAHIR" javaType="date" jdbcType="DATE" nullValue=""/>
	</resultMap>
		
	<!-- Select agent -->
	<select id="elions.bac.validasiAgenPasBPDbd" resultMap="elions.bac.validasiAgenPasBPDbd1" parameterClass="java.util.HashMap">
           SELECT A.MSAG_ID "ID", B.MCL_FIRST "NAMA",
           		B.MSPE_NO_IDENTITY "NOKTP",
           		B.MSPE_DATE_BIRTH "TGLLAHIR"            
         	FROM EKA.MST_AGENT A, 
                 EKA.mst_client_new B            
        	WHERE A.MCL_ID = B.MCL_ID          
          	AND ( LSTB_ID = 1 
          	AND A.MSAG_ACTIVE = 1 and
          	A.MSAG_ID=#kodeagen#)
        	ORDER BY ID
	</select>
	
	<select id="elions.bac.selectKuesionerByNoReg" resultClass="java.util.HashMap" parameterClass="string">
		select
		    (case when a.mku_jenis_cabang = 0 then 'NONE'
		          when a.mku_jenis_cabang = 1 then 'REGIONAL'
		          when a.mku_jenis_cabang = 2 then 'AGENCY'
		          when a.mku_jenis_cabang = 3 then 'HYBRID(AJS)'
		          when a.mku_jenis_cabang = 0 then 'CORPORATE / WORKSITE' else '' end)distribusi,
		    a.mku_str_lv_rm kd_atasan, c.mcl_first,
		    (select lsrg_nama from eka.lst_region where lca_id = substr(a.mku_region,1,2) and lwk_id = substr(a.mku_region,3,2) and lsrg_id = substr(a.mku_region,5,2))regional,
		    a.mku_first nama, a.mku_no_identity ktp, a.mku_place_birth tempat_lahir, a.mku_date_birth tgl_lahir,
		    a.mku_alamat alamat, a.tgl_aktif tgl_kontrak,
		    (case when (select lska_note from eka.lst_kabupaten where to_char(lska_id) = to_char(a.mku_kota)) is null then a.mku_kota else (select lska_note from eka.lst_kabupaten where to_char(lska_id) = to_char(a.mku_kota)) end)kota 
		from
		    eka.mst_kuesioner a,
		    eka.mst_agent b,
		    eka.mst_client_new c
		where
		    a.mku_no_reg = #value#
		    and a.mku_str_lv_rm = b.msag_id(+)
		    and b.mcl_id = c.mcl_id(+)
	</select>
	
	<select id="elions.bac.struktur_agent" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT 
		    a.msag_id, b.mcl_first, a.lsle_id, c.lsle_name, a.msag_flag_bm bm, a.msag_sbm sbm
		FROM 
		    eka.mst_agent a,
		    eka.mst_client_new b,
		    eka.lst_level_agent c 
		WHERE 
		    a.msag_active = 1
		    and a.mcl_id = b.mcl_id
		    and a.lstb_id = c.lstb_id
		    and a.lsle_id = c.lsle_id
		    START WITH a.msag_id = #msag_id#
		    CONNECT BY a.msag_id = PRIOR a.mst_leader	
	</select>
		
	<select id="elions.bac.selectPremiStableLink" parameterClass="string" resultClass="java.util.HashMap">
		SELECT a.lku_id as "KURS", nvl(b.PREMI,0) as "PREMI"
		FROM eka.mst_policy a,
		     (SELECT sum(msl_premi) as "PREMI"
		      FROM eka.mst_slink
		      WHERE reg_spaj = #spaj#
		      	AND msl_kode in (2,3,5)
		      	AND msl_aktif = 1) b
		WHERE a.reg_spaj = #spaj#
	</select>
	
	<select id="elions.bac.selectPremiPowStabSave" parameterClass="string" resultClass="java.util.HashMap">
		SELECT a.lku_id as "KURS", nvl(b.PREMI,0) as "PREMI"
        FROM eka.mst_policy a,
             (SELECT * FROM
                 (SELECT sum(mpr_deposit) as "PREMI"
                  FROM eka.mst_powersave_ro
                  WHERE reg_spaj = #spaj#
                      AND mps_kode in (2,3,5)
                      AND mpr_aktif = 1
                  UNION
                  SELECT sum(mss_premi) as "PREMI"
                  FROM eka.mst_ssave
                  WHERE reg_spaj = #spaj#
                      AND mss_kode in (2,3,5)
                      AND mss_aktif = 1)
              WHERE rownum = 1) b
        WHERE a.reg_spaj = #spaj#
	</select>
	
	<select id="elions.bac.selectDataUsulan_endors" resultClass="com.ekalife.elions.model.Datarider" parameterClass="string">
	select a.mspr_extra, 
		a.mspr_tsi,  
		nvl(a.mspr_premium, 0) mspr_premium,
		a.mspr_ins_period,
		a.mspr_beg_date,
		a.mspr_end_date,
		a.mspr_end_pay,
		a.mspr_class,
		a.mspr_unit,
		eka.f_lsdbs(a.reg_spaj, a.lsbs_id, a.lsdbs_number) lsdbs_name,
		a.lsbs_id,
		b.lsdbs_number,
		a.mspr_tt,
		a.mspr_rate,
		a.mste_insured_no,
		a.lku_id,
		a.mspr_persen,
		a.MSPR_TSI_PA_A,
		a.MSPR_TSI_PA_B,
		a.MSPR_TSI_PA_C,
		a.MSPR_TSI_PA_D,
		a.MSPR_TSI_PA_M,
		a.LSBS_ID||'~X'||b.LSDBS_NUMBER plan_rider
		from EKA.MST_PRODUCT_INSURED a, EKA.LST_DET_BISNIS b
		where a.lsbs_id = b.lsbs_id
		and a.lsdbs_number = b.lsdbs_number
		and (a.lsbs_id <![CDATA[ >= ]]> 800 or a.lsbs_id = 195 or a.lsbs_id = 183 or a.lsbs_id = 189 or a.lsbs_id = 193 or a.lsbs_id = 204)
		and a.mspr_active = 1
		and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<resultMap id="elions.bac.selectbrokermap" class="java.util.HashMap">
		<result property="ID" column="ID" javaType="string" jdbcType="CHAR" nullValue=""/>
		<result property="NAMA" column="NAMA" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
		<result property="ALAMAT" column="ALAMAT" javaType="string" jdbcType="VARCHAR2" nullValue=""/>
	</resultMap>
	
 	<select id="elions.bac.selectbroker" resultMap="elions.bac.selectbrokermap" parameterClass="java.util.HashMap">
 		SELECT lsb_id as "ID", lsb_nama as "NAMA", lsb_alamat as "ALAMAT"
 		FROM eka.lst_broker
 		WHERE lsb_active = 1
 		    AND lsb_id = #kodebroker#
 	</select>
 	
 	<select id="elions.bac.select_detilbroker" resultClass="com.ekalife.elions.model.Broker" parameterClass="string">
		SELECT a.lsb_id, a.lsb_nama, a.lsb_alamat, b.msbi_tahun_ke, b.msbi_premi_ke,
			   b.lbn_id, b.no_account, b.lspd_id, b.lus_id, b.msco_input_date
		FROM eka.lst_broker a, eka.mst_comm_broker b
		WHERE a.lsb_id = b.lsb_id
		    AND a.lsb_active = 1
		    AND b.reg_spaj = rpad(replace(#value#,'.'),11,' ')
    </select>
	
	<select id="elions.bac.selectEndorsNew" resultClass="com.ekalife.elions.model.Endors" parameterClass="string">	
		SELECT * FROM eka.mst_endors 
			WHERE reg_spaj = #spaj#
			AND msen_input_date = (select max(msen_input_date) from eka.mst_endors where reg_spaj = #spaj#)
	</select>
	
	<select id="elions.bac.selectMstEndors" resultClass="com.ekalife.elions.model.Endors" parameterClass="java.util.HashMap">
		SELECT * FROM eka.mst_endors
		WHERE reg_spaj = #spaj#
		<isNotEmpty property="lspd_id">
			AND lspd_id = #lspd_id#
		</isNotEmpty>
		<isNotEmpty property="msen_issue_spaj">
			AND msen_issue_spaj = #msen_issue_spaj#
		</isNotEmpty>
	</select>
	
	<select id="elions.bac.selectDataKontesProklamasi" resultClass="java.util.HashMap" parameterClass="string">
		select
		    a.master_lead_id, a.master_lead_name nama, b.bdate, c.sal_phone1 telp, b.email, c.sal_detail alamat, 
		    (case when d.marital_status = 0 then 'Belum Menikah'
		          when d.marital_status = 1 then 'Sudah Menikah' else '' end)status,
		    e.snile_desc pendidikan, d.pekerjaan, 
		    replace(replace(d.video,'http:',''),'//www.youtube.com/watch?v=','//www.youtube.com/embed/') video
		from
		    crm.simas_lead a,
		    crm.simas_lead_info b,
		    crm.simas_list_addr c,
		    crm.simas_lead_jobstreet d,
		    crm.simas_name_last_edu e
		where
		    a.master_lead_id = b.lead_id
		    and a.master_lead_id = c.sal_inst_id
		    and a.master_lead_id = d.lead_id
		    and b.last_edu = e.snle_id
		    and a.app_type = 6
		    and d.jenis = 1
		order by 
		    a.master_lead_id asc
	</select>
	
	<select id="elions.bac.selectPolisBatalNonProduction" resultClass="string">
		select b.reg_spaj
          from eka.mst_policy a,  
               eka.mst_production b
         where a.reg_spaj = b.reg_spaj
           and a.lspd_id =95
           and b.mspro_jn_prod <![CDATA[ <> ]]> 3
           and b.mspro_prod_date between to_date('1/8/2013','dd/mm/yyyy') and to_date('31/8/2013','dd/mm/yyyy')
           and not exists(select 1 from eka.mst_production where reg_spaj = a.reg_spaj and mspro_jn_prod = 3)
	</select>
	
	<select id="elions.bac.selectDataKontesPhoto" resultClass="java.util.HashMap" parameterClass="string">
		select
		    a.master_lead_id, a.master_lead_name nama, b.bdate, c.sal_phone1 telp, b.email, c.sal_detail alamat, 
		    (case when d.marital_status = 0 then 'Belum Menikah'
		          when d.marital_status = 1 then 'Sudah Menikah' else '' end)status,
		    e.snile_desc pendidikan, d.pekerjaan, 
		   d.image,replace(replace(d.video,'http:',''),'//www.youtube.com/watch?v=','//www.youtube.com/embed/') video,
		   rtrim (xmlagg (xmlelement (e,'Anak ke-' || f.anak_ke || ' : ' || f.usia || ' thn, ')).extract ('//text()'), ', ')usia_anak
		from
		    crm.simas_lead a,
		    crm.simas_lead_info b,
		    crm.simas_list_addr c,
		    crm.simas_lead_jobstreet d,
		    crm.simas_name_last_edu e,
		    crm.simas_lead_jobstreet_family f
		where
		    a.master_lead_id = b.lead_id
		    and a.master_lead_id = c.sal_inst_id
		    and a.master_lead_id = d.lead_id
		    and b.last_edu = e.snle_id
		    and a.master_lead_id = f.lead_id(+)
		    and a.app_type = 6
		    and d.jenis = 2
		group by
		    a.master_lead_id, a.master_lead_name, b.bdate, 
		    c.sal_phone1, b.email, c.sal_detail,d.marital_status,
		    e.snile_desc, d.pekerjaan, d.image, d.video
		order by 
		    a.master_lead_id asc
	</select>
	<select id="elions.bac.selectCompanyUpload" resultClass="dropDown" parameterClass="string">	
		select
			a.mcl_id key ,b.mcl_first value
		from
			eka.mst_company a, eka.mst_client_new b
		where
			a.mcl_id=b.mcl_id
			and a.flag_ws=#lca#
	</select>
	
	<select id="elions.bac.selectGetAccPremi" resultClass="string" parameterClass="java.util.HashMap">
		SELECT EKA.PACGL.GET_ACC_PREMI(#reg_spaj#, #li_jenis#) FROM DUAL
	</select>
	
	<select id="elions.bac.selectppTemp" resultClass="com.ekalife.elions.model.Pemegang" parameterClass="string">	
        select distinct a.pp_name mcl_first, b.mcl_first_alias, b.mcl_gelar, a.mspe_no_identity_pp mspe_no_identity, b.mspe_no_identity_expired,
            a.pp_bod mspe_date_birth, a.pp_birth_place mspe_place_birth, a.mste_age_pp mspo_age, nvl(a.pp_mom_name, '-') mspe_mother, a.pp_sex mspe_sex,
            decode( a.pp_sex, 1, 'PRIA', 'WANITA') mspe_sex2, b.lsag_id, e.lsag_name, a.marital_status_pp mspe_sts_mrt, a.lsied_id_pp lside_id,
            b.lsne_id, a.lsre_id_pp lsre_id, b.mcl_green_card, b.mcl_npwp, a.mste_age_pp mste_age,
            b.mcl_company_name, d.lsp_id mkl_kerja, b.mkl_kerja_ket, b.mkl_penghasilan, 
            a.home_address alamat_rumah, a.home_postal_code kd_pos_rumah, a.home_city kota_rumah, nvl(a.area_code_rumah_pp, c.area_code_rumah) area_code_rumah, a.pp_telpon_rumah telpon_rumah,
            a.pp_alamat_kantor alamat_kantor, a.pp_kd_pos_kantor kd_pos_kantor, a.pp_kota_kantor kota_kantor, nvl(a.area_code_kantor_pp, c.area_code_kantor) area_code_kantor, a.pp_telpon_kantor telpon_kantor,
            c.alamat_tpt_tinggal, c.kota_tpt_tinggal, c.kd_pos_tpt_tinggal, a.pp_no_hp_rumah no_hp, a.email_pp email,
            (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 2 and kyc_id = 3 and upper(kyc_desc) = 'GAJI') bulan_gaji,
            (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 2 and kyc_id = 3 and upper(kyc_desc) = 'TABUNGAN/DEPOSITO') bulan_penghasilan,
            (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 2 and kyc_id = 3 and upper(kyc_desc) = 'WARISAN') bulan_orangtua,
            (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 2 and kyc_id = 3 and upper(kyc_desc) = 'HIBAH') bulan_usaha,
            (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 2 and kyc_id = 3 and upper(kyc_desc) = 'LAINNYA%') bulan_lainnya,
            (select substr(upper(kyc_desc),9) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 2 and kyc_id = 3 and upper(kyc_desc) like 'LAINNYA%') bulan_lainnya_note,
            (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 2 and kyc_id = 5 and upper(kyc_desc) = 'INVESTASI') tujuan_investasi,
            (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 2 and kyc_id = 5 and upper(kyc_desc) = 'PROTEKSI') tujuan_proteksi,
            (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 2 and kyc_id = 5 and upper(kyc_desc) like 'LAINNYA%') tujuan_lainnya,
            suami.nama nama_suami, suami.tanggal_lahir tgl_suami, suami.usia usia_suami, suami.kerja pekerjaan_suami, suami.ljb_id jabatan_suami,
            suami.nama_perusahaan perusahaan_suami, suami.bidang_usaha bidang_suami, suami.npwp npwp_suami, suami.penghasilan penghasilan_suami,
            ayah.nama nama_ayah, ayah.tanggal_lahir tgl_ayah, ayah.usia usia_ayah, ayah.kerja pekerjaan_ayah, ayah.ljb_id jabatan_ayah,
            ayah.nama_perusahaan perusahaan_ayah, ayah.bidang_usaha bidang_ayah, ayah.npwp npwp_ayah, ayah.penghasilan penghasilan_ayah,
            ibu.nama nama_ibu, ibu.tanggal_lahir tgl_ibu, ibu.usia usia_ibu, ibu.kerja pekerjaan_ibu, ibu.ljb_id jabatan_ibu,
            ibu.nama_perusahaan perusahaan_ibu, ibu.bidang_usaha bidang_ibu, ibu.npwp npwp_ibu, ibu.penghasilan penghasilan_ibu,
            suami.nama nama_si, suami.lsre_id hubungan_si, suami.tanggal_lahir tgllhr_si,
            anak_1.nama nama_anak1, anak_1.lsre_id hubungan_anak1, anak_1.tanggal_lahir tgllhr_anak1,
            anak_2.nama nama_anak2, anak_2.lsre_id hubungan_anak2, anak_2.tanggal_lahir tgllhr_anak2,
            anak_3.nama nama_anak3, anak_3.lsre_id hubungan_anak3, anak_3.tanggal_lahir tgllhr_anak3,
            substr(a.mspo_no_blanko, -12,12) mspo_no_blanko, a.mspo_nasabah_dcif, a.cf_job_code, a.cf_customer_id, a.cf_campaign_code,
            <!-- generate format baru untuk nomor virtual account - start -->
            case 
                when substr(a.mspo_no_blanko, 1, 5) in ('87111', '87222') then trim(substr(a.mste_no_vacc, 1, 4))
            end prefix_va,
            case 
                when substr(a.mste_no_vacc, 1, 5) in ('87111', '87222') then 'VA_BARU'
                else 'VA_LAMA' 
            end jenis_va,
            <!-- generate format baru untuk nomor virtual account - end -->
            a.mste_tgl_recur, a.mspo_spaj_date, a.mspo_jenis_terbit, a.msag_id, a.mspo_ao,
            nvl(a.jenis_spaj, '0') mspo_flag_spaj, a.campaign_id, a.flag_free_pa, a.mspo_korespondensi, a.mspo_id_sponsor,
            a.mspo_id_place, a.mspo_customer, a.nik, a.flag_kpr, 
            DECODE (NVL (a.mspo_ao, '0'), 0, '0','1')  mspo_ref_bii <!-- add mspo_ref_bii retrieve autosales -->
        from eka.mst_spaj_temp a,
            eka.mst_client_new_temp b,
            eka.mst_address_new_temp c,
            eka.lst_pekerjaan d,
            eka.lst_agama e,
            (select * from eka.mst_keluarga_temp where lsre_id = 5 and no = 0 and insured = 0) suami,
            (select * from eka.mst_keluarga_temp where lsre_id = 2 and no = 0 and insured = 0) ayah,
            (select * from eka.mst_keluarga_temp where lsre_id = 2 and no = 1 and insured = 0) ibu,
            (select * from eka.mst_keluarga_temp where lsre_id = 4 and no = 1 and insured = 0) anak_1,
            (select * from eka.mst_keluarga_temp where lsre_id = 4 and no = 2 and insured = 0) anak_2,
            (select * from eka.mst_keluarga_temp where lsre_id = 4 and no = 3 and insured = 0) anak_3
        where a.mcl_id_pp = b.mcl_id (+)
            and a.mcl_id_pp = c.mcl_id (+)
            and a.no_temp = suami.no_temp (+)
            and a.no_temp = ayah.no_temp (+)
            and a.no_temp = ibu.no_temp (+)
            and a.no_temp = anak_1.no_temp (+)
            and a.no_temp = anak_2.no_temp (+)
            and a.no_temp = anak_3.no_temp (+)
            and trim(upper(b.mkl_kerja)) = trim(upper(d.lsp_name (+)))
            and b.lsag_id = e.lsag_id (+)
		    and a.no_temp = #value#
	</select>
	
	<select id="elions.bac.selectttTemp" resultClass="com.ekalife.elions.model.Tertanggung" parameterClass="string">	
		select distinct b.mcl_first, b.mcl_first_alias, b.mcl_gelar, b.mspe_no_identity, b.mspe_no_identity_expired,
		    b.mspe_date_birth, b.mspe_place_birth, a.mste_age_tt mste_age, b.mspe_mother, b.mspe_sex,
		    decode(b.mspe_sex, 1, 'PRIA', 'WANITA') mspe_sex2, b.lsag_id, e.lsag_name,
		    b.mspe_sts_mrt, b.lside_id, b.lsne_id, a.lsre_id_tt lsre_id, b.mcl_green_card,
		    b.mcl_npwp, b.mcl_company_name, d.lsp_id mkl_kerja, b.mkl_kerja_ket, b.mkl_penghasilan, 
		    c.alamat_rumah, c.kd_pos_rumah, c.kota_rumah, c.area_code_rumah, c.telpon_rumah,
		    c.alamat_kantor, c.kd_pos_kantor, c.kota_kantor, c.area_code_kantor, c.telpon_kantor,
		    c.alamat_tpt_tinggal, c.kota_tpt_tinggal, c.kd_pos_tpt_tinggal, c.no_hp, c.email,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 1 and kyc_id = 3 and upper(kyc_desc) = 'GAJI') bulan_gaji,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 1 and kyc_id = 3 and upper(kyc_desc) = 'TABUNGAN/DEPOSITO') bulan_penghasilan,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 1 and kyc_id = 3 and upper(kyc_desc) = 'WARISAN') bulan_orangtua,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 1 and kyc_id = 3 and upper(kyc_desc) = 'HIBAH') bulan_usaha,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 1 and kyc_id = 3 and upper(kyc_desc) = 'LAINNYA%') bulan_lainnya,
		    (select substr(upper(kyc_desc),9) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 1 and kyc_id = 3 and upper(kyc_desc) like 'LAINNYA%') bulan_lainnya_note,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 1 and kyc_id = 5 and upper(kyc_desc) = 'INVESTASI') tujuan_investasi,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 1 and kyc_id = 5 and upper(kyc_desc) = 'PROTEKSI') tujuan_proteksi,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 1 and kyc_id = 5 and upper(kyc_desc) like 'LAINNYA%') tujuan_lainnya,
		    a.mste_no_vacc,
		    a.mste_flag_cc
		from eka.mst_spaj_temp a,
		    eka.mst_client_new_temp b,
		    eka.mst_address_new_temp c,
		    eka.lst_pekerjaan d,
		    eka.lst_agama e
		where a.mcl_id_tt = b.mcl_id
		    and a.mcl_id_tt = c.mcl_id
		    and trim(upper(b.mkl_kerja)) = trim(upper(d.lsp_name))
		    and b.lsag_id = e.lsag_id
		    and a.no_temp = #value#
	</select>
	
	<select id="elions.bac.selectttTemp2" resultClass="com.ekalife.elions.model.Tertanggung" parameterClass="string">	
		 select 
            tt_name mcl_first,tt_sex mspe_sex,tt_mom_name mspe_mother,lsied_tt lside_id,mspe_no_identity_tt mspe_no_identity,
            tt_bod mspe_date_birth,tt_home_address alamat_rumah,tt_home_city kota_rumah,tt_home_postal_code kd_pos_rumah,
            tt_alamat_kantor alamat_kantor,tt_kota_kantor Kota_kantor,tt_kd_pos_kantor kd_pos_kantor,a.tt_birth_place mspe_place_birth,
            a.mste_age_tt mste_age, a.mspo_no_blanko mspo_no_blanko ,a.mste_no_vacc mste_no_vacc,
<!--             a.lsag_id_tt lsag_id, -->
<!--             agm.lsag_name, -->
<!--             a.lsed_id_tt lsed_id,a.mkl_penghasilan_tt mkl_penghasilan, -->
<!--             a.lsne_id_tt lsned_id,a.mkl_kerja_tt mkl_kerja,a.mkl_industri_tt mkl_industri,a.mpn_job_desc_tt mpn_job_desc, -->
<!--             a.expired_date_idtt  mspe_no_identity_expired , -->
            t1.*,b.MCL_FIRST_ALIAS mcl_first_alias,b.MCL_GREEN_CARD mcl_green_card,b.MCL_COMPANY_NAME mcl_company_name,b.mkl_kerja_ket mkl_kerja_ket
        from
                eka.mst_spaj_temp a,
<!--                 eka.lst_agama agm , -->
                (select si.no_temp,si.nama "nama_si",si.lsre_id "hubungan_si",si.tanggal_lahir "tgllhr_si",
                    anak_1.nama "nama_anak1",anak_1.lsre_id "hubungan_anak1", anak_1.tanggal_lahir "tgllhr_anak1",
                    anak_2.nama "nama_anak2",anak_2.lsre_id "hubungan_anak2", anak_2.tanggal_lahir "tgllhr_anak2",
                    anak_3.nama "nama_anak3",anak_3.lsre_id "hubungan_anak3", anak_3.tanggal_lahir "tgllhr_anak3"
                    from                
                    (select no_temp, nama,lsre_id,tanggal_lahir 
                    from eka.mst_keluarga_temp
                    where lsre_id = 5 and no = 0 and insured = 1)si,
                    (select no_temp,nama,lsre_id,tanggal_lahir 
                    from eka.mst_keluarga_temp
                    where lsre_id = 4 and no = 1 and insured = 1)anak_1,
                    (select no_temp, nama,lsre_id,tanggal_lahir 
                    from eka.mst_keluarga_temp
                    where lsre_id = 4 and no = 2 and insured = 1)anak_2,
                    (select no_temp,nama,lsre_id,tanggal_lahir 
                    from eka.mst_keluarga_temp
                    where lsre_id = 4 and no = 3 and insured = 1)anak_3
                    where si.no_temp = anak_1.no_temp and
                    si.no_temp = anak_2.no_temp (+)and
                    si.no_temp = anak_3.no_temp (+)) t1,
                    eka.mst_client_new_temp b
        where
           a.no_temp=#value#
           and a.mcl_id_tt = b.mcl_id(+)
<!--            and a.lsag_id_tt=agm.lsag_id(+) -->
           and t1.no_temp (+)=  a.no_temp
	</select>
	
	<select id="elions.bac.selectAddressBillingTemp" resultClass="com.ekalife.elions.model.AddressBilling" parameterClass="string">	
		select 
		msap_address,kota kota_tgh,msap_zip_code,msap_phone1,no_hp,Msap_area_code1,e_mail		
		from
		eka.mst_address_billing_temp a
		where
		a.no_temp=#value#
	</select>
	
	<select id="elions.bac.selectMstProductTemp" resultClass="com.ekalife.elions.model.Datausulan" parameterClass="string">
 		select a.lsbs_id||'~X'||a.lsdbs_number plan,
 		a.lsbs_id as kodeproduk,a.lsbs_id as lsbs_id, 
 		a.lsdbs_number, a.mspr_tsi, a.mspr_premium,a.mspr_beg_date mste_beg_date,a.mspr_end_date mste_end_date,
 		a.mspo_pay_period, a.mspo_ins_period as mspr_ins_period,
 		c.lscb_id, a.lku_id,b.lku_symbol,c.mste_flag_cc,c.mspo_provider,a.mspr_end_pay, A.CARA_PREMI , A.KOMBINASI, C.LSTP_ID, A.FLAG_PACKET flag_paket,
 		a.thn_cuti_premi mspo_installment,
 		c.covid_flag,
 		TRIM (c.flag_vip) as flag_vip
        from eka.mst_product_temp a,          
             eka.lst_kurs b,
             eka.mst_spaj_temp c,
             eka.lst_det_bisnis d
        where 
        a.no_temp=c.no_temp
        and a.no_temp=#value#
        and a.lku_id = b.lku_id
        and a.lsbs_id <![CDATA[<]]>300
        and a.lsbs_id=d.lsbs_id
        and a.lsdbs_number=d.lsdbs_number
 	</select>
 	
 	<select id="elions.bac.selectMstProductTempRider" resultClass="com.ekalife.elions.model.Datarider" parameterClass="string">
 		select a.lsbs_id, a.lsdbs_number, a.mspo_ins_period, b.lscb_id, a.lku_id ,a.mspr_tsi,
                (a.lsbs_id || '~X' || a.lsdbs_number) plan_rider, a.lsbs_id plan_rider1,a.mspr_premium,
                a.mspr_rate,a.mspr_beg_date,a.mspr_end_date,a.mspr_ins_period,a.mspr_class,
                a.mspr_unit,a.mspr_tsi_pa_a,a.mspr_tsi_pa_b,a.mspr_tsi_pa_c,a.mspr_tsi_pa_d,a.mspr_end_pay,a.mspr_active
        from eka.mst_product_temp a,
             eka.mst_spaj_temp b
        where a.lsbs_id <![CDATA[>=]]> 800
        and a.no_temp = #value#
        and a.no_temp=b.no_temp
 	</select>
 	
 	<select id="elions.bac.selectAccRecurTemp" resultClass="com.ekalife.elions.model.Account_recur" parameterClass="string">
 		select 
 		a.no_temp, a.mste_flag_cc,
 		a.mar_holder, a.mar_expired,
 		a.mar_active,a.mar_acc_no,
 		a.mste_tgl_recur,a.lbn_id,b.lus_id,
 		b.flag_jn_tabungan,b.flag_autodebet_nb,b.flag_set_auto,
 		b.tgl_debet		
 		from
 		eka.mst_spaj_temp a,
 		eka.mst_account_recur_temp b 		
 		where
 		a.no_temp=#value#
 		and a.no_temp=b.no_temp(+)
 	</select>
 	
 	<select id="elions.bac.selectPesertaTemp" resultClass="com.ekalife.elions.model.PesertaPlus_mix" parameterClass="string">
 		select x.REG_SPAJ, x.no_urut+1 as no_urut , x.LSRE_ID, x.NO_REG, x.NAMA, x.TGL_LAHIR, x.KELAMIN, x.UMUR, x.PREMI, x.LSBS_ID, x.LSDBS_NUMBER,
		x.LSBS_ID||'~X'||x.LSDBS_NUMBER plan_rider, x.DISCOUNT, x.FLAG_JENIS_PESERTA, x.PREMI MSPR_PREMIUM, X.MKL_KERJA as kerja,
		(case when (x.no_urut = 2) then 'TERTANGGUNG II'
              when (x.no_urut = 3) then 'TERTANGGUNG III'
              when (x.no_urut = 4) then 'TERTANGGUNG IV'
              when (x.no_urut = 5) then 'TERTANGGUNG V'
              when (x.no_urut = 6) then 'TERTANGGUNG VI'
              when (x.no_urut = 7) then 'TERTANGGUNG VII'
              else 'TERTANGGUNG I'
        end) jenis_peserta,
        (case when x.KELAMIN = 0 THEN 'PEREMPUAN'
        	  else 'LAKI-LAKI'
        end)SEX,
		y.LSRE_RELATION, x.LSBS_ID LSBS_ID_PLUS,x.height tinggi ,x.weight berat
		from eka.mst_peserta_temp x, eka.lst_relation y
		where x.no_temp=#no_temp#
<!-- 		AND (x.FLAG_JENIS_PESERTA != 0 OR x.NO_REG IS NOT NULL) -->
		AND x.lsre_id = y.lsre_id
 	</select>
 	
 	<select id="elions.bac.selectCountMedquestTemp" resultClass="int" parameterClass="string">
		SELECT count(no_temp) from eka.mst_additional_desc_temp where no_temp=#no_temp#
	</select>
	
	<select id="elions.bac.selectdataTempAll" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.no_temp, temp1 jumlah_peserta, a.pp_name, a.pp_bod, nvl(a.reg_spaj,'-') reg_spaj, to_char(a.tgl_upload,'dd/mm/yyyy(hh24:mi:ss)') tgl_upload, premi.mspr_premium,
			to_char(b.mspr_beg_date,'dd/MM/yyyy') mspr_beg_date, a.tt_name, a.tt_bod, b.lsbs_id, b.lsdbs_number, c.msap_address as alamat_penagihan, e.lsdbs_name plan_utama, rider.nama_rider, peserta.daftar_peserta            
        FROM eka.mst_spaj_temp a,
        	eka.mst_product_temp b,
        	eka.mst_address_billing_temp c,
			(select count(x.no_temp)temp1,x.no_temp, rtrim (xmlagg (xmlelement (e,z.lsdbs_name || chr(10))).extract ('//text()'), chr(10)) nama_rider
				from eka.mst_product_temp x,eka.lst_det_bisnis z
				where x.lsdbs_number=z.lsdbs_number
					and x.lsbs_id=z.lsbs_id
					and x.lsbs_id in(819,820,823,825,826,831,832,833)
				group by x.no_temp
         	) rider,
			(select p.no_temp,rtrim (xmlagg (xmlelement (e,p.nama || chr(10))).extract ('//text()'), chr(10))daftar_peserta from eka.mst_peserta_temp p
				where p.lsbs_id<![CDATA[>]]>300
				group by p.no_temp
			) peserta,
			(select sum(cc.mspr_premium)mspr_premium,cc.no_temp from eka.mst_product_temp cc group by cc.no_temp) premi,
	        eka.lst_det_bisnis e,
	        eka.mst_peserta_temp f,
	        eka.mst_policy g
        WHERE a.no_temp=b.no_temp
	        and a.no_temp=c.no_temp 
	        and a.reg_spaj=g.reg_spaj(+)
	        and a.no_temp=peserta.no_temp(+)
	        and a.no_temp=rider.no_temp(+) 
	        and a.no_temp=premi.no_temp (+)
	        and a.no_temp=f.no_temp (+)     
	        and b.lsbs_id<![CDATA[<]]>300
	        and b.lsbs_id=e.lsbs_id     
	        and b.lsdbs_number=e.lsdbs_number
	        and a.tgl_upload between to_date(#bdate#|| ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') and to_date(#edate# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)') 
	        and a.campaign_id=#dist#        
	        <isNotEqual property="company" compareValue="ALL">
	        	and a.id_company=#company#
	        </isNotEqual>         
	        <isEqual property="stpolis" compareValue="0">
	        	and a.reg_spaj is null 
	        </isEqual>
	        <isEqual property="stpolis" compareValue="1">
	        	and a.reg_spaj is not null 
	        	and g.lspd_id=1
	        </isEqual>
        GROUP BY a.no_temp, a.pp_name, a.pp_bod, a.reg_spaj, a.tgl_upload, premi.mspr_premium, b.mspr_beg_date, a.tt_name,
        	a.tt_bod, b.lsbs_id, b.lsdbs_number, c.msap_address, e.lsdbs_name, rider.nama_rider, peserta.daftar_peserta, temp1
        ORDER BY pp_name
	</select>
       
	<select id="elions.bac.selectLbn_id" resultClass="string" parameterClass="string">
		SELECT lbn_id from eka.lst_bank where lsbp_id=#lsbp_id# and flag_aktif=1 and rownum=1 order by lbn_id asc
	</select>
	  
	<select id="elions.bac.selectDataSpajBundle" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select 
                a.reg_spaj spaj,a.lca_id,c.lsbs_id,c.lsdbs_number,b.lssa_id status,d.mcl_first nama ,to_char(d.mspe_date_birth,'dd/MM/yyyy')tgl_lahir,c.mspr_premium premi_pokok,a.lscb_id,                
                (case when c.lsbs_id in(077,084,087,097,100,101,102,107,113,
                                           115,116,117,118,119,120,121,122,127,
                                           128,129,134,138,139,140,141,152,153,154,159,160,162,164,165,166,174,186,190,191,199,200,202 )then 1 else 0 end)flag_ulink  ,
                                 (select sum(case when a.lscb_id=6 then msdb_premium*12
                                                  when a.lscb_id=3 then  msdb_premium*1
                                                  when a.lscb_id=2 then  msdb_premium*2
                                                  when a.lscb_id=1 then  msdb_premium*4
                                                    else msdb_premium end)
                                from eka.mst_det_billing 
                                where 
                                    reg_spaj = a.reg_spaj
                                    and msbi_tahun_ke = 1
                                    and msbi_premi_ke in (select msbi_premi_ke from eka.mst_billing where msbi_beg_date = tgl.msbi_beg_date and reg_spaj = a.reg_spaj))total_premi_tahunan,  
                                     (select sum(msdb_premium) 
                                from eka.mst_det_billing 
                                where 
                                    reg_spaj = a.reg_spaj
                                    and msbi_tahun_ke = 1
                                    and msbi_premi_ke in (select msbi_premi_ke from eka.mst_billing where msbi_beg_date = tgl.msbi_beg_date and reg_spaj = a.reg_spaj))total_premi, 
                                 (select count(z.mspo_spaj_bundle) from eka.mst_policy z where z.mspo_spaj_bundle=#spaj#)flag_boleh                                
                  from
				  eka.mst_policy a,
				  eka.mst_insured b,
				  eka.mst_product_insured c,
				  eka.mst_client_new d,
				  (select distinct
				                msbi_beg_date, reg_spaj
				            from
				                eka.mst_billing 
				            where 
				                msbi_tahun_ke = 1 
				                and msbi_premi_ke = 1
				                and (msbi_flag_topup is null or msbi_flag_topup = 2))tgl
				where
				   a.reg_spaj=b.reg_Spaj
				   and a.reg_spaj=c.reg_spaj
				   and a.mspo_policy_holder=d.mcl_id  
				   and a.reg_spaj = tgl.reg_spaj (+)
				   and c.lsbs_id<![CDATA[<]]>300
				   and d.mcl_first LIKE #pp_name#
				   and d.mspe_date_birth=#dob#
				   and a.reg_spaj=rpad(replace(#spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.bac.selectCounterBlanko" resultClass="java.lang.Long" parameterClass="string">
		select msco_value 
		from eka.mst_counter
	    where lca_id = 01
			<isEqual compareValue="2">
	      		and	msco_number = 161
			</isEqual>
			<isEqual compareValue="3">
	      		and	msco_number = 162
			</isEqual>
			<isEqual compareValue="5">
	      		and	msco_number = 166
			</isEqual>
			<isEqual compareValue="6">
	      		and	msco_number = 167
			</isEqual>
			<isEqual compareValue="7">
	      		and	msco_number = 168
			</isEqual>
			<isEqual compareValue="8">
	      		and	msco_number = 169
			</isEqual>
			<isEqual compareValue="9">
	      		and	msco_number = 175
			</isEqual>
			<isEqual compareValue="10">
	      		and	msco_number = 176
			</isEqual>
			<isEqual compareValue="12">
	      		and	msco_number = 191
			</isEqual>
			<isEqual compareValue="13">
	      		and	msco_number = 196
			</isEqual>
			<isEqual compareValue="14">
	      		and	msco_number = 219
			</isEqual>
			<isEqual compareValue="15">
	      		and	msco_number = 220
			</isEqual>
			<isEqual compareValue="16">
	      		and	msco_number = 221
			</isEqual>
			<isEqual compareValue="18">
	      		and	msco_number = 222
			</isEqual>
			<isEqual compareValue="20">
	      		and	msco_number = 225
			</isEqual>
			<isEqual compareValue="21">
	      		and	msco_number = 228
			</isEqual>
			<isEqual compareValue="22">
	      		and	msco_number = 233
			</isEqual>
			<isEqual compareValue="23">
	      		and	msco_number = 234
			</isEqual>
			<isEqual compareValue="24">
	      		and	msco_number = 235
			</isEqual>
			<isEqual compareValue="25">
	      		and	msco_number = 236
			</isEqual>
			<isEqual compareValue="26">
	      		and	msco_number = 237
			</isEqual>
	</select>
	
	<select id="elions.bac.selectJenisSurat" resultClass="java.util.HashMap" parameterClass="string">
		select * from eka.lst_jenis_surat where aktif = 1 and jenis = '39'<!-- cabang in ($value$) -->
	</select>
	
	<select id="elions.bac.selectFindPolis" resultClass="java.util.HashMap" parameterClass="string">
		select
		    a.reg_spaj, a.mspo_policy_no, eka.utils.pemegang(a.reg_spaj)pemegang, eka.utils.tertanggung(a.reg_spaj)tertanggung,
		    eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number)produk
		from
		    eka.mst_policy a,
		    eka.mst_insured b,
		    eka.mst_client_new pemegang,
		    eka.mst_client_new tertanggung,
		    eka.mst_product_insured c
		where
		    a.reg_spaj = b.reg_spaj
		    and a.mspo_policy_holder = pemegang.mcl_id
		    and b.mste_insured = tertanggung.mcl_id
		    and b.reg_spaj = c.reg_spaj
		    and b.mste_insured_no = c.mste_insured_no
		    and c.lsbs_id <![CDATA[<]]> 300
		    and b.mste_insured_no = 1
		    and upper(pemegang.mcl_first) like upper('%' || #value# || '%')
	</select>
	
	<select id="elions.bac.selectReqPrintSurat" resultClass="java.util.HashMap" parameterClass="string">
		select
		    a.tgl_req, c.mspo_policy_no_format polis, b.nama jn_surat, d.lus_full_name user_req
		from
		    eka.mst_req_surat a,
		    eka.lst_jenis_surat b,
		    eka.mst_policy c,
		    eka.lst_user d
		where
		    a.jenis = b.jenis
		    and a.reg_spaj = c.reg_spaj
		    and a.user_req = d.lus_id
		    and a.user_req = #value#
		    and a.flag = 0
	</select>
	
	<select id="elions.bac.selectKomisiCrossSelling" resultClass="java.util.HashMap" parameterClass="string">
		select
		    a.reg_spaj, a.mscs_policy_no no_polis, a.mscs_holder pemegang, 
		    a.mscs_comm komisi, a.mscs_comm_tax tax, 
		    (case when mscs_comm_paid = 1 then 'paid' else 'not paid' end)status
		from
		    eka.mst_policy_cs a
		where
		    a.mscs_policy_no = replace(#value#,'.','')
		    or upper(a.mscs_holder) like upper('%' || #value# || '%')
	</select>
	
	<select id="elions.bac.selectDataDariProposal" resultClass="java.util.HashMap" parameterClass="string">
		select a.*, b.*
		from eka.mst_data_proposal a, eka.mst_proposal_product b
		where a.no_proposal = b.no_proposal
			and trim(a.no_proposal) = trim(#value#)
			and a.flag_aktif=1
	</select>
	
	<select id="elions.bac.selectMstDataProposal" resultClass="java.util.HashMap" parameterClass="string">
		select *
		from eka.mst_data_proposal
		where trim(no_proposal) = trim(#value#)
		and flag_aktif=1
	</select>
	
	<select id="elions.bac.selectMstProposalProduct" resultClass="java.util.HashMap" parameterClass="string">
		select *
		from eka.mst_proposal_product
		where trim(no_proposal) = trim(#value#)
	</select>
	
	<select id="elions.bac.selectMstProposalProductRider" resultClass="java.util.HashMap" parameterClass="string">
		select *
		from eka.mst_proposal_product_rider
		where trim(no_proposal) = trim(#value#)
	</select>
	
	<select id="elions.bac.selectMstProposalProductPeserta" resultClass="java.util.HashMap" parameterClass="string">
		select *
		from eka.mst_proposal_product_peserta
		where trim(no_proposal) = trim(#value#)
	</select>
	
	<select id="elions.bac.selectMstProposalProductTopUp" resultClass="java.util.HashMap" parameterClass="string">
		select *
		from eka.mst_proposal_product_topup
		where trim(no_proposal) = trim(#value#)
	</select>
	
	<select id="elions.bac.select_psn" resultClass="java.util.HashMap" >
   			   SELECT * FROM EKA.LST_PSN ORDER BY ID_PSN
	</select>
	
	<select id="elions.bac.selectDataLembagaPsn" resultClass="java.util.HashMap" parameterClass="string">
			SELECT a.* 
				FROM eka.lst_lembaga a, eka.LST_LEMBAGA_PSN b
			WHERE A.ID_LBG = B.ID_LBG
				AND B.ID_PSN=#value#
	</select>
	
	<select id="elions.bac.selectDataHargaItem" resultClass="java.util.HashMap" parameterClass="string">
		 SELECT a.* , b.nama_item
                FROM eka.LST_HARGA_ITEM a , eka.lst_item b
            WHERE a.ID_ITEM =b.ID_ITEM
                AND a.tgl_berlaku = (SELECT MAX(TGL_BERLAKU) from eka.lst_harga_item c where c.id_item = a.ID_ITEM)
                AND a.id_item <![CDATA[<>]]> 1
	</select>
		<select id="elions.bac.selectDataReligi" resultClass="java.util.HashMap" parameterClass="string">
		SELECT a.* , b.nama_item
			FROM eka.lst_item_psn a , eka.lst_item b
		WHERE a.ID_ITEM =b.ID_ITEM
			AND ID_PSN=6
	</select>
	
	<select id="elions.bac.selectAgentRekruter" resultClass="java.util.HashMap" parameterClass="string">
		select b.*, nvl(c.msrk_level, a.lsle_id) lsle_id, a.lsle_id lev_rekruter
		from eka.mst_agent a, eka.mst_rekruter c,
		    (select rownum urut, rtrim(a.msrk_id) kd_agen
		    from eka.mst_det_rekruter a
		    connect by nocycle msag_id = prior rtrim(a.msrk_id)
		    start with msag_id = #value# ) b
		where a.msag_id = b.kd_agen
			and b.kd_agen = rtrim(c.msrk_id)
	</select>	
	
	<select id="elions.bac.selectReffTm" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	   select
	   a.tm_code,a.spv_code,a.application_id_dmtm,reff_tm_id
	   from
	   	 eka.mst_spaj_temp a
	   where
	   a.no_temp=#no_temp#  
	
	</select>
	
	<select id="elions.bac.selectReffSinarmas" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	  select 
	  	max(lrb_id)lrb_id ,jenis,lcb_no 
	  from 
	  	eka.lst_reff_bii 
	  where 
	  flag_aktif=1  
	  and (agent_code=#reff_bank# or trim(nik)=trim(#reff_bank#) or trim(pre_nik)=trim(#reff_bank#))
	  <isEqual property="filter" compareValue="2">
			and jenis = #filter#
	</isEqual>
	  group by lrb_id,jenis,lcb_no
	</select>
	
	<select id="elions.bac.selectCountbenefTemp" resultClass="int" parameterClass="string">
		SELECT count(no_temp) from eka.mst_benefeciary_temp where no_temp=#no_temp#
	</select>
	
	<select id="elions.bac.selectCountReffBiiTemp" resultClass="string" parameterClass="string">
		SELECT no_temp from eka.mst_reff_bii_temp where trim(no_temp)=trim(#no_temp#)
	</select>
	
	<select id="elions.bac.select_benef_temp" resultClass="com.ekalife.elions.model.Benefeciary" parameterClass="string">
		SELECT       "EKA"."MST_BENEFECIARY_TEMP"."MSTE_INSURED_NO",   
			         "EKA"."MST_BENEFECIARY_TEMP"."MSAW_NUMBER",   
			         "EKA"."MST_BENEFECIARY_TEMP"."MSAW_FIRST",   
			         "EKA"."MST_BENEFECIARY_TEMP"."MSAW_MIDDLE",   
			         "EKA"."MST_BENEFECIARY_TEMP"."MSAW_LAST",   
			         "EKA"."MST_BENEFECIARY_TEMP"."MSAW_BIRTH",
			         to_char("EKA"."MST_BENEFECIARY_TEMP"."MSAW_BIRTH",'dd/MM/yyyy') SMSAW_BIRTH,
			         "EKA"."MST_BENEFECIARY_TEMP"."LSRE_ID" LSRE_ID,   
			         "EKA"."MST_BENEFECIARY_TEMP"."MSAW_PERSEN",
			         "EKA"."MST_BENEFECIARY_TEMP"."MSAW_SEX",
			          decode("EKA"."MST_BENEFECIARY_TEMP"."MSAW_SEX",1,'LAKI-LAKI' ,0,'WANITA')MSAW_SEX_DETAIL,   
			         "EKA"."LST_RELATION"."LSRE_RELATION",
			         "EKA"."MST_BENEFECIARY_TEMP"."LSNE_ID",
			         "EKA"."LST_NEGARA"."LSNE_NOTE" LSNE_NEGARA
			    FROM "EKA"."MST_BENEFECIARY_TEMP",   
			         "EKA"."LST_RELATION",
			         "EKA"."LST_NEGARA" 
			   WHERE  ("EKA"."MST_BENEFECIARY_TEMP"."LSRE_ID" = "EKA"."LST_RELATION"."LSRE_ID" (+)) and 
			   	      ("EKA"."MST_BENEFECIARY_TEMP"."LSNE_ID" = "EKA"."LST_NEGARA"."LSNE_ID" (+)) and
	         ( ( EKA."MST_BENEFECIARY_TEMP"."NO_TEMP" =(#value#) ))    
	 </select>	

	<select id="elions.bac.selectMstPositionSpajForStatusBas" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		SELECT EKA.MST_POSITION_SPAJ.REG_SPAJ,   
			   TO_CHAR(EKA.MST_POSITION_SPAJ.MSPS_DATE,'dd-MM-yyyy hh24:mi:ss')MSPS_DATE,   
			   EKA.MST_POSITION_SPAJ.MSPS_DATE AS TGL,
			   EKA.MST_POSITION_SPAJ.LSPD_ID,   
			   EKA.MST_POSITION_SPAJ.LSSP_ID,   
			   EKA.MST_POSITION_SPAJ.LSSA_ID_BAS,   
			   EKA.MST_POSITION_SPAJ.LUS_ID,   
			   EKA.MST_POSITION_SPAJ.MSPS_DESC,
			   EKA.MST_POSITION_SPAJ.SUB_ID_BAS,
			   EKA.LST_STATUS_ACCEPT_SUB.SUB_DESC
		  FROM EKA.MST_POSITION_SPAJ,
		  	   EKA.LST_STATUS_ACCEPT_SUB
		 WHERE EKA.MST_POSITION_SPAJ.LSSA_ID_BAS = EKA.LST_STATUS_ACCEPT_SUB.LSSA_ID(+)
		   AND EKA.MST_POSITION_SPAJ.SUB_ID_BAS = EKA.LST_STATUS_ACCEPT_SUB.SUB_ID(+)
		   AND EKA.MST_POSITION_SPAJ.REG_SPAJ = #spaj#
	  ORDER BY EKA.MST_POSITION_SPAJ.MSPS_DATE ASC
	</select>
	
	<select id="elions.bac.selectCEmailAutoComplete" resultClass="dropDown" parameterClass="string">	
		select
            a.email_cab key ,a.nama_cabang value
        from
           eka.lst_cabang_bii a
        where
           jenis=2
           and a.email_cab is not null
           and a.flag_aktif=1
           and upper(a.nama_cabang) like  '%' ||upper(#spaj#) || '%'
	</select>
	
	<select id="elions.bac.selectViewDataGadget" resultClass="java.util.HashMap" >
        <!-- helpdesk 128020, tambah jam di kolom created_date. Chandra A. -->
        SELECT   no_temp, pp_name, tt_name, no_va, premi, dist, TO_CHAR (created_date, 'dd/mm/yyyy hh24:mi:ss') created_date, produk, flag_aktif <!-- , is_prime_link -->
		  FROM   (  SELECT   a.no_temp,
		                     a.pp_name,
		                     a.tt_name,
		                     a.mste_no_vacc no_va,
		                     b.mspr_premium premi,
		                     NVL (d.nm_bank, 'AGENCY') dist,
		                     a.created_date ,
		                     EKA.UTILS.DET_PRODUK (b.lsbs_id, b.lsdbs_number) produk, a.flag_aktif
		                     <!-- case
							 	when (c.lsbs_id = 134 and (c.lsdbs_number = 5 or c.lsdbs_number = 10)) or (c.lsbs_id = 215 and c.lsdbs_number = 1) then '1'
							 	else '0'
							 end is_prime_link -->
		              FROM   eka.mst_spaj_temp a,
		                     eka.mst_product_temp b,
		                     eka.lst_det_bisnis c,
		                     eka.lst_jn_bank d
		             WHERE       a.no_temp = b.no_temp
		                     AND a.campaign_id = 4
		                     AND a.reg_spaj IS NULL
		                     AND b.lsbs_id <![CDATA[<]]> 300
		                     AND b.lsbs_id = c.lsbs_id
		                     AND b.lsdbs_number = c.lsdbs_number
		                     AND c.jn_bank = d.jn_bank(+)
		                     and a.flag_aktif = 1
		                     AND NOT EXISTS
		                           (SELECT   1
		                              FROM   eka.mst_insured
		                             WHERE   lspd_id != 95
		                                     AND mste_no_vacc = a.mste_no_vacc)
		                     AND a.pp_name NOT LIKE 'TEST%'
		                     AND a.pp_name NOT LIKE 'TES %'
		          ORDER BY   created_date, no_temp)
 		WHERE   created_date <![CDATA[>]]> ADD_MONTHS (SYSDATE, -6)
	</select>
	
	<select id="elions.bac.selectReportESpaj" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select to_date(x.tgl_terima_espaj,'dd/mm/yyyy') tgl_terima_espaj, x.no_temp, x.pp_name, x.tt_name, x.no_va, x.premi, x.Top_up_berkala, x.Top_up_tungggal,
		x.user_input, x.tgl_input_spaj, x.status
		from (
		    SELECT distinct 
		    (case when length(a.NO_SPAJ_GADGET) > 20 then
		        (select to_char(to_date((substr(A.NO_SPAJ_GADGET,13,4) || '/' || 
		                                    substr(A.NO_SPAJ_GADGET,18,2) || '/' || 
		                                    substr(A.NO_SPAJ_GADGET,21,2)),'yyyy/mm/dd'),'dd/mm/yyyy') from dual)
		            else (select to_char(to_date('2016/02/11','yyyy/mm/dd'),'dd/mm/yyyy') from dual ) end) tgl_terima_espaj, 
		    a.no_temp, a.pp_name, a.tt_name, A.MSTE_NO_VACC no_va, B.MSPR_PREMIUM premi,
		    (select x.premi from eka.mst_premi_temp x where lt_id = 5 and x.no_temp = a.no_temp) Top_up_berkala, 
		    (select x.premi from eka.mst_premi_temp x where lt_id = 2 and x.no_temp = a.no_temp) Top_up_tungggal, 
		    C.NAMA_REFF user_input, '' tgl_input_spaj, 'Belum proses BAS' status
		    FROM EKA.MST_SPAJ_TEMP a, EKA.MST_PRODUCT_TEMP b, eka.lst_reff_bii c
		    WHERE a.CAMPAIGN_ID=4 and A.NO_TEMP = B.NO_TEMP AND a.REG_SPAJ is null and B.LSBS_ID <![CDATA[<]]> 300 and A.MSAG_ID = C.AGENT_CODE and A.FLAG_AKTIF <![CDATA[<>]]> 0
		    order by no_temp
		) x
		where to_date(x.tgl_terima_espaj,'dd/mm/yyyy') between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
	</select>
	
	<select id="elions.bac.selectViewDataPSN" resultClass="java.util.HashMap" parameterClass="java.lang.String" >
		SELECT  B.* ,A.NAMA_PSN, DECODE(FREQ_POTONG,1,'SINGLE/SEKALIGUS' , 2,'REGULER/TAHUNAN', 0,'-') FREQ
		FROM EKA.LST_PSN A, EKA.MST_PSN B
		WHERE A.ID_PSN = B.ID_PSN
		AND  B.REG_SPAJ =(#value#)
	</select> 
	
	<select id="elions.bac.select_det_va_spaj" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		select
		    a.*
		from
		    eka.mst_det_va a
		where
		    a.spaj_temp = #value#
		    or a.spaj = #value#
	</select>
	
	<select id="elions.bac.selectQuestionareNew" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select to_char(m.answer) answer2, m.key_type, m.key_id, m.question_type_id, 
            m.question_id, m.question_valid_date, m.option_type, 
            m.option_group, m.option_order, m.answer_order, 
            m.input_date, m.lus_id, to_char(b.option_label) option2
		from eka.lst_question_group a,
			eka.lst_question_label b,
			eka.mst_question_answer m
     	where a.question_type_id = b.question_type_id
            and a.question_id = b.question_id
            and a.question_valid_date = b.question_valid_date
            and b.question_type_id = m.question_type_id (+)
            and b.question_id = m.question_id (+)
            and b.question_valid_date = m.question_valid_date (+)
            and b.question_type_id = #type#
            and b.option_type = m.option_type (+)
            and b.option_group = m.option_group(+)
            and b.option_order = m.option_order(+)
            and m.key_id = #spaj#
            <isNotEmpty property="index">
				and m.question_id between #index# and #index2#
			</isNotEmpty>
		order by b.question_id, b.option_group, b.option_order
	</select>
	
	<select id="elions.bac.selectQuestionareGadget" resultClass="com.ekalife.elions.model.MstQuestionAnswer"  parameterClass="java.util.HashMap">
		select to_char(m.answer) answer2, m.key_type, m.key_id,
		m.question_type_id,
		m.question_id, m.question_valid_date, m.option_type,
		m.option_group, m.option_order, m.answer_order,
		m.input_date, m.lus_id, to_char(b.option_label) option2
		from eka.lst_question_group a,
		eka.lst_question_label b,
		eka.mst_question_answer m
		where a.question_type_id = b.question_type_id
		and a.question_id = b.question_id
		and a.question_valid_date = b.question_valid_date
		and b.question_type_id = m.question_type_id (+)
		and b.question_id = m.question_id (+)
		and b.question_valid_date = m.question_valid_date (+)
		and b.question_type_id = #type#
		and b.option_type = m.option_type (+)
		and b.option_group = m.option_group(+)
		and b.option_order = m.option_order(+)
		and m.key_id = #spaj#
		<isNotEmpty property="index">
			and m.question_id between #index# and #index2#
		</isNotEmpty>
		order by b.question_id, b.option_group, b.option_order
	</select>
	
	<select id="elions.bac.selectCountQuestionareNew" parameterClass="string" resultClass="int">
	 	 select count(key_id)
       	    from eka.mst_question_answer
         where key_id = RPAD (REPLACE (#value#, '.'), 11, ' ')
	</select>
	
	<select id="elions.bac.selectLstPekerjaan" resultClass="id.co.sinarmaslife.std.model.vo.DropDown" parameterClass="string">
		select lsp_name as key, lsp_name as value from eka.lst_pekerjaan where flag_active = 1 order by lsp_name asc
	</select>
	
	<select id="elions.bac.selectPropertiesPrinter" resultClass="java.util.HashMap">
		select ip_address,printer_name from eka.lst_printer where flag_aktif = 1
	</select>
	
	<select id="elions.bac.selectAllowPrint"  parameterClass="string" resultClass="string">
		select allow_print from eka.lst_printer where printer_name = #printerName#
	</select> 
	
	<select id="elions.bac.select_report_upload_scan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	    select
		    i.lca_nama cabang,
		    l.mcl_first penutup,
		    upper(nvl(f.lus_full_name, f.lus_login_name)) user_scan,
		    substr(a.reg_spaj, 0, 2) || '.' || substr(a.reg_spaj, 3, 4) || '.' || substr(a.reg_spaj, 7) reg_spaj,
		    h.lsdbs_name product,
		    m.mcl_first pp,
		    n.mcl_first tt,
		    o.lssp_status status,
		    to_char(d.tgl_input, 'dd/mm/yyyy (hh24:mi:ss)') tgl_upload,
		    q.lspd_position posisi_dokumen
		from eka.mst_policy a,
		     eka.mst_insured b,
		     eka.mst_product_insured c,
		     eka.mst_scan d,
		     eka.mst_trans_history e,
		     eka.lst_user f,
		     <!-- eka.lst_user g, -->
		     eka.lst_det_bisnis h,
		     eka.lst_cabang i,
		     eka.mst_agent_prod j,
		     eka.mst_agent k,
		     eka.mst_client_new l,
		     eka.mst_client_new m,
		     eka.mst_client_new n,
		     eka.lst_policy_status o,
		     eka.lst_bisnis p,
		     eka.lst_document_position q
		where a.reg_spaj = b.reg_spaj
		    and a.reg_spaj = c.reg_spaj
		    and a.reg_spaj = d.no_indek
		    and a.reg_spaj = e.reg_spaj
		    and d.lus_id= f.lus_Id
		    <!-- and e.USER_UW_PROSES = g.lus_id -->
		    and c.lsbs_id = h.lsbs_id
		    and c.lsdbs_number = h.lsdbs_number
		    <isEqual prepend="AND" property="status" compareValue="0">
		        b.lssa_id in (3,10)
		    </isEqual>
		    <isEqual prepend="AND" property="status" compareValue="1">
		        b.lssa_id = 3
		    </isEqual>
		    <isEqual prepend="AND" property="status" compareValue="2">
		        b.lssa_id = 10
		    </isEqual>
		    <!-- and a.lspd_id not in (95,999) -->
		    and (<!-- Munculkan polis dgn status NPW req mba Tities #73915 - Daru 30 Juni 2015 -->
		        (a.lssp_id = 29 and a.lspd_id != 95) or (a.lssp_id != 29 and a.lspd_id not in (95,999))
		    )
		    and c.lsbs_id <![CDATA[<]]> 300
		    <!-- and d.TGL_INPUT <![CDATA[>]]> e.TGL_FURTHER -->
		    and d.tgl_input <![CDATA[>]]> (case
		                                      when b.lssa_id = 10
		                                          then e.tgl_special_accept
		                                      else e.tgl_further
		                                  end)
		    and a.lca_id = i.lca_id
		    and a.reg_spaj = j.reg_spaj
		    and j.msag_id = k.msag_id
		    and k.mcl_id = l.mcl_id
		    and j.lsle_id = 4
		    and a.mspo_policy_holder = m.mcl_id
		    and b.mste_insured = n.mcl_id
		    and b.mste_insured_no = 1
		    and a.lssp_id = o.lssp_id
		    and h.lsbs_id = p.lsbs_id
		    <isEqual prepend="AND" property="tipe" compareValue="0">
		        p.lsbs_linkkon in (1,2)
		    </isEqual>
		    <isEqual prepend="AND" property="tipe" compareValue="1">
		        p.lsbs_linkkon = 2
		    </isEqual>
		    <isEqual prepend="AND" property="tipe" compareValue="2">
		        p.lsbs_linkkon = 1
		    </isEqual>
		    and a.lspd_id = q.lspd_id
		    and trunc(d.tgl_input) between <!-- to_date(#tglAwal#,'dd/mm/yyyy') -->#tglAwal# and <!-- to_date(#tglAkhir# || '11:59:59 pm','dd/mm/yyyy hh:mi:ss am') -->#tglAkhir#
		group by 
		    i.lca_nama,
		    l.mcl_first,
		    f.lus_login_name,
		    f.lus_full_name,
		    a.reg_spaj,
		    h.lsdbs_name,
		    m.mcl_first,
		    n.mcl_first,
		    o.lssp_status,
		    d.tgl_input,
		    q.lspd_position
		<!-- order by 
		    a.reg_spaj -->
		<!-- Back transfer ke bas (uw speedy) - Daru 01 April 2015 -->
		union
		select
		    i.lca_nama cabang,
		    l.mcl_first penutup,
		    upper(nvl(f.lus_full_name, f.lus_login_name)) user_scan,
		    substr(a.reg_spaj, 0, 2) || '.' || substr(a.reg_spaj, 3, 4) || '.' || substr(a.reg_spaj, 7) reg_spaj,
		    h.lsdbs_name product,
		    m.mcl_first pp,
		    n.mcl_first tt,
		    o.lssp_status status,
		    to_char(d.tgl_input, 'dd/mm/yyyy (hh24:mi:ss)') tgl_upload,
		    r.lspd_position posisi_dokumen
		from eka.mst_policy a,
		     eka.mst_insured b,
		     eka.mst_product_insured c,
		     eka.mst_scan d,
		     eka.mst_trans_history e,
		     eka.lst_user f,
		     eka.lst_det_bisnis h,
		     eka.lst_cabang i,
		     eka.mst_agent_prod j,
		     eka.mst_agent k,
		     eka.mst_client_new l,
		     eka.mst_client_new m,
		     eka.mst_client_new n,
		     eka.lst_policy_status o,
		     eka.lst_bisnis p,
		     eka.mst_position_spaj q,
		     eka.lst_document_position r
		where a.reg_spaj = b.reg_spaj
		    and a.reg_spaj = c.reg_spaj
		    and a.reg_spaj = d.no_indek
		    and a.reg_spaj = e.reg_spaj
		    and d.lus_id= f.lus_Id
		    and c.lsbs_id = h.lsbs_id
		    and c.lsdbs_number = h.lsdbs_number
		    and b.lssa_id != 5
		    <!-- and a.lspd_id not in (95,999) -->
		    and (<!-- Munculkan polis dgn status NPW req mba Tities #73915 - Daru 30 Juni 2015 -->
                (a.lssp_id = 29 and a.lspd_id != 95) or (a.lssp_id != 29 and a.lspd_id not in (95,999))
            )
		    and c.lsbs_id <![CDATA[<]]> 300
		    and a.reg_spaj = q.reg_spaj
		    <!-- and lower(q.msps_desc) like 'back transfer ke bas:%' -->
		    and (<!-- cari status back transfer ke bas & fr jika kolom di trans historynya kosong - Daru 9 July 2015 -->
		        (lower(q.msps_desc) like 'back transfer ke bas:%' and d.tgl_input > e.tgl_back_to_bas)
		        or (e.tgl_further is null and q.lssa_id = 3 and lower(q.msps_desc) like '%fr:%' and d.tgl_input > q.msps_date)
		    )
		    and d.tgl_input <![CDATA[>]]> e.tgl_back_to_bas
		    and a.lca_id = i.lca_id
		    and a.reg_spaj = j.reg_spaj
		    and j.msag_id = k.msag_id
		    and k.mcl_id = l.mcl_id
		    and j.lsle_id = 4
		    and a.mspo_policy_holder = m.mcl_id
		    and b.mste_insured = n.mcl_id
		    and b.mste_insured_no = 1
		    and a.lssp_id = o.lssp_id
		    and h.lsbs_id = p.lsbs_id
		    <isEqual prepend="and" property="tipe" compareValue="0">
		        p.lsbs_linkkon in (1,2)
		    </isEqual>
		    <isEqual prepend="and" property="tipe" compareValue="1">
		        p.lsbs_linkkon = 2
		    </isEqual>
		    <isEqual prepend="and" property="tipe" compareValue="2">
		        p.lsbs_linkkon = 1
		    </isEqual>
		    and a.lspd_id = r.lspd_id
		    and trunc(d.tgl_input) between <!-- to_date(#tglAwal#,'dd/mm/yyyy') -->#tglAwal# and <!-- to_date(#tglAkhir# || '11:59:59 pm','dd/mm/yyyy hh:mi:ss am') -->#tglAkhir#
		group by 
		    i.lca_nama,
		    l.mcl_first,
		    f.lus_login_name,
		    f.lus_full_name,
		    a.reg_spaj,
		    h.lsdbs_name,
		    m.mcl_first,
		    n.mcl_first,
		    o.lssp_status,
		    d.tgl_input,
		    r.lspd_position
		order by 
		    reg_spaj
	</select>
	
	<select id="elions.bac.selectinvTemp" resultClass="com.ekalife.elions.model.InvestasiUtama" parameterClass="string">
			select 
            ulink_utama.mu_ke,   
            ulink_utama.mu_tgl_nab,   
            ulink_utama.mu_tgl_surat,   
            ulink_utama.mu_jlh_premi,   
            ulink_utama.mu_periodic_tu,   
            ulink_utama.mu_jlh_tu,   
            ulink_utama.no_register,   
            ulink_utama.lt_id,   
            ulink_utama.mu_tgl_trans,   
            ulink_utama.mu_jlh_unit,   
            ulink_utama.mu_bulan_surat,   
            ulink_utama.mu_switch_cnt,   
            ulink_utama.mu_last_switch,   
            ulink_utama.mu_last_wdraw,   
            ulink_utama.mu_wdraw_cnt,   
            ulink_utama.mu_lspd_id,   
            ulink_utama.mu_tgl_input,   
            ulink_utama.mu_aktif,   
            ulink_utama.mu_tahun_ke,   
            ulink_utama.mu_premi_ke,   
            ulink_utama.mu_flag_print,   
            ulink_utama.mu_lus_id  ,
            (select count(*) from eka.lst_jenis_invest ) jmlh_invest,
            (select sum(eka.mst_product_temp.mspr_premium) from eka.mst_product_temp where eka.mst_product_temp.no_temp = rpad(replace(ulink_utama.no_temp,'.'),10,' ')) jml_premium,
            ((select sum(eka.mst_product_temp.mspr_premium) from eka.mst_product_temp where eka.mst_product_temp.no_temp=  rpad(replace(ulink_utama.no_temp,'.'),10,' ')) + ulink_utama.mu_jlh_tu) total_premi_sementara,
            (select count(*) from eka.mst_biaya_ulink_temp where eka.mst_biaya_ulink_temp.no_temp= rpad(replace(ulink_utama.no_temp,'.'),10,' ')) jmlh_biaya,
            (select count(*) from eka.mst_ulink_temp ulink_b where ulink_b.mu_ke  <![CDATA[ > ]]>1and mu_tgl_trans = (select ulink_a.mu_tgl_trans from eka.mst_ulink_temp ulink_a where ulink_a.mu_ke = 1 and ulink_a.no_temp = ulink_b.no_temp)
                and ulink_b.no_temp =#value#) jml_top_up  
            from eka.mst_ulink_temp ulink_utama
            where ( ulink_utama.no_temp = #value#) 
             and   ( ulink_utama.mu_ke = 1 )     
	</select>
	
	<select id="elions.bac.selectDetilTopupTemp" resultClass="com.ekalife.elions.model.DetilTopUp" parameterClass="string">
			SELECT  nvl( x.lt_id,0) ID_TUNGGAL,
		        nvl( x.mu_jlh_premi,0)PREMI_TUNGGAL,
		         DECODE (x.lt_id, NULL, '0', '2') PIL_TUNGGAL,
		        nvl( Y.lt_id,0) ID_BERKALA,
		        nvl( Y.mu_jlh_premi ,0)PREMI_BERKALA,
		         DECODE (Y.lt_id, NULL, '0', '1') PIL_BERKALA
		  FROM   eka.mst_ulink_temp u, eka.mst_ulink_temp x, eka.mst_ulink_temp y
		 WHERE       u.no_temp = #value#
		         AND u.mu_ke = 1
		         AND u.no_temp = x.no_temp(+)
		         AND u.mu_tgl_trans = x.mu_tgl_trans(+)
		         AND x.lt_id(+) = 2
		         AND u.no_temp = y.no_temp(+)
		         AND u.mu_tgl_trans = y.mu_tgl_trans(+)
		         AND y.lt_id(+) = 5
    </select>
    
    <select id="elions.bac.selectDetilInvTemp" resultClass="java.util.HashMap" parameterClass="string">
			  select   
			        a.mu_ke mu_ke1,   
			         b.lji_id lji_id1,   
			         a.mdu_persen mdu_persen1,   
			         a.mdu_jumlah mdu_jumlah1,   
			         b.lji_invest lji_invest1  
			    	from (select * from eka.mst_det_ulink_temp where no_temp= #value# and mu_ke = 1 ) a,   
			         eka.lst_jenis_invest b 
				where ( b.lji_id = a.lji_id (+)) 
				order by b.lji_id 
   </select>

   <select id="elions.bac.selectBiayaInvTemp" resultClass="java.util.HashMap" parameterClass="string">
		         select
		         eka.mst_biaya_ulink_temp.mu_ke,   
		         eka.mst_biaya_ulink_temp.ljb_id,   
		         eka.mst_biaya_ulink_temp.mbu_jumlah,   
		         eka.mst_biaya_ulink_temp.mbu_persen,   
		         eka.lst_jenis_biaya.ljb_biaya ,
				  to_char(eka.mst_biaya_ulink_temp.mbu_end_pay,'dd/MM/yyyy' )mbu_end_pay
		    from eka.mst_biaya_ulink_temp,   
		         eka.lst_jenis_biaya  
		   where ( eka.mst_biaya_ulink_temp.ljb_id = eka.lst_jenis_biaya.ljb_id ) and  
		         ( ( eka.mst_biaya_ulink_temp.no_temp = #value#) and  
		         ( eka.mst_biaya_ulink_temp.mu_ke in (1,2) ) )  
		         order by eka.mst_biaya_ulink_temp.mu_ke,eka.mst_biaya_ulink_temp.ljb_id
	</select>  	   	  
	
	<select id="elions.bac.selectno_virtual_active" resultClass="int" parameterClass="string">
		select count(no_va)
		from eka.mst_det_va
		where no_va=#no_virtual_acc#
	</select>
	
	<select id="elions.bac.selectP_premi" resultClass="com.ekalife.elions.model.PembayarPremi" parameterClass="string">
		SELECT e.mcl_first perusahaan, e.mkl_kerja, e.mkl_kerja kerjaa, e.lti_id,
               DECODE (e.mkl_kerja,
                       'KARYAWAN SWASTA', e.mpn_job_desc,
                       DECODE (j.ljb_note, '', '-', j.ljb_note)
                      ) kerjab,
               e.mkl_tujuan, e.mkl_tujuan tujuana, e.mkl_penghasilan bulan_penghasilan, e.mkl_pendanaan tujuan_dana,e.mcl_agama,
               e.mkl_pendanaan danaa, e.mkl_pendanaan danaa2,
               e.mkl_smbr_penghasilan, e.mkl_smbr_penghasilan shasil, e.mkl_industri,
               e.mkl_dana_from, e.mkl_hasil_from, e.mkl_smbr_hasil_from,
               e.mkl_sumber_premi, DECODE (e.mkl_sumber_premi, 1, 'PERORANGAN', 'BADAN HUKUM/USAHA') mkl_sumber_premi2,
                (select ppg.lsre_id_premi from eka.mst_policy pp ,eka.mst_client_new ppg where pp.mspo_policy_holder = ppg.mcl_id and pp.reg_spaj=a.reg_Spaj )lsre_id_premi,
               e.mkl_industri industria, e.mspe_no_identity, e.mspe_no_identity_expired, e.lside_id,
               e.mspe_place_birth tempat_lahir, e.mspe_date_birth mspe_date_birth_3rd_pendirian, e.mspe_sex,
               DECODE (e.mspe_sex, 1, 'PRIA', 'WANITA') mspe_sex2, e.mspe_sts_mrt,
               a.mspo_umur_beasiswa, h.lgj_note, h.lgj_id, e.mspe_lama_kerja,
               i.lside_name, g.lsne_note, g.lsne_id, e.mcl_gelar, e.mpn_job_desc,
               e.mspe_mother, f.alamat_rumah alamat_perusahaan, f.kd_pos_rumah, f.kota_rumah kota_perusahaan,
               f.kota_rumah kota_rumaha, f.area_code_rumah, f.telpon_rumah telp_rumah,
               f.alamat_kantor, f.kd_pos_kantor kdpos_perusahaan, f.kota_kantor,
               f.kota_kantor kota_kantora, f.no_hp2, f.no_hp, f.email,
               f.area_code_kantor, f.telpon_kantor, a.reg_spaj,
               a.lspd_id, k.lsag_name, k.lsag_id,
               l.lsed_name, l.lsed_id, j.ljb_id, m.lsre_relation, m.lsre_id,a.lscb_id, a.mspo_policy_no,
               f.area_code_rumah2, f.telpon_rumah2, f.area_code_kantor2,
               f.telpon_kantor2, f.no_fax, f.area_code_fax, e.mspe_email, E.MCL_FIRST_3RD nama_pihak_ketiga, e.MSPE_PLACE_BIRTH_3RD tempat_lahir_3rd,
               e.MSPE_DATE_BIRTH_3RD mspe_date_birth_3rd, e.MKL_KERJA_3RD pekerjaan, e.MKL_BIDANG_USAHA_3RD usaha_berbadan_hukum, e.MPN_JOB_DESC_3RD , e.NPWP_3RD no_npwp,
               e.MKL_PENDANAAN_3RD sumber_dana, e.MKL_TUJUAN_PENDANAAN_3RD tujuan_dana_3rd,E.LSRE_ID_PREMI, 
               (select lsre_relation from EKA.LST_RELATION where lsre_id = a.lsre_id_payer) as relation_payor
		FROM eka.mst_policy a,
               eka.mst_client_new e,
               eka.mst_address_new f,
               eka.lst_negara g,
               eka.lst_grp_job h,
               eka.lst_identity i,
               eka.lst_jabatan j,
               eka.lst_agama k,
               eka.lst_education l,
               eka.lst_relation m
		WHERE a.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
           AND a.MSPO_PAYER = e.mcl_id
           AND e.mcl_id = f.mcl_id
           AND e.lsne_id = g.lsne_id(+)
           AND e.lgj_id = h.lgj_id(+)
           AND e.lside_id = i.lside_id(+)
           AND e.lsag_id = k.lsag_id(+)
           AND e.lsed_id = l.lsed_id(+)
           AND a.lsre_id = m.lsre_id(+)
           AND e.ljb_id = j.ljb_id(+)
	</select>
	
	<select id="elions.bac.selectSequenceSimultan" resultClass="string"> 		 
		SELECT EKA.PAC_COUNTER.GET_SIMULTAN_ID () FROM DUAL 	
	</select>
		
	<select id="elions.bac.selectAllUploadPasList" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Pas">
	  	SELECT * FROM(
	 		select
	 		ROWNUM as row_number,
	 		reg_spaj,
	 		msp_full_name,
	 		mspo_policy_no,
	 		to_char(msp_pas_create_date,'dd/mm/yyyy') msp_pas_create_date2,
            to_char(msp_pas_beg_date,'dd/mm/yyyy')   msp_pas_beg_date2,
            to_char(msp_pas_end_date,'dd/mm/yyyy')  msp_pas_end_date2,
	 		jenis_pas,
	 		msp_up,
	 		msp_premi,
	 		msp_identity_no,
	 		msp_mobile,
	 		msp_date_of_birth,
	 		to_char(msp_date_of_birth,'dd/mm/yyyy')  msp_date_of_birth2	 		
	 	FROM eka.mst_pas_sms
	 	WHERE 
	 	jenis_pas = #cari_upload_produk#
	 	AND to_char(msp_pas_create_date, 'DD/MM/YYYY') = #tgl_upload#
	 	)
	 	<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   	</isNotEmpty>		
	</select>
	
	<select id="elions.bac.selectAllUploadPasFreeList" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.TmSales">
	 	SELECT * FROM(	
		 	SELECT
		 		ROWNUM as row_number,
		 		no_sertifikat,
		 		holder_name,
	            to_char(beg_date,'dd/mm/yyyy') beg_date2,
	            to_char(end_date,'dd/mm/yyyy') end_date2,
		 		application_id,
		 		sum_insured,
		 		premium,
		 		cust_no,
		 		mobile_no,
		 		to_char(bod_holder, 'dd/mm/yyyy') bod_holder2 			
		 	FROM  EKA.MST_TMSALES@EB
		 	WHERE 
		 	application_id = #cari_upload_produk#
		 	AND to_char(tgl_sales, 'DD/MM/YYYY') = #tgl_upload#
	 	)
	 	<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   	</isNotEmpty>		
	</select>
		
	<select id="elions.bac.selectTotalAllUploadPasList" parameterClass="java.util.HashMap" resultClass="string">	
		SELECT CEIL( count( * ) / #noRow# ) as total_pages
		FROM eka.mst_pas_sms p
		WHERE 1 = 1
			AND jenis_pas = #cari_upload_produk#
			AND to_char(msp_pas_create_date, 'DD/MM/YYYY') = #tgl_upload#
	</select>	
	
	<select id="elions.bac.selectTotalAllUploadPasFreeList" parameterClass="java.util.HashMap" resultClass="string">	
		SELECT CEIL( count( * ) / #noRow# ) as total_pages
		FROM EKA.MST_TMSALES@EB
		WHERE 1 = 1
			AND application_id = #cari_upload_produk#
			AND to_char(tgl_sales, 'DD/MM/YYYY') = #tgl_upload#
	</select>
	
	<select id="elions.bac.selectPembayarPremi" resultClass="com.ekalife.elions.model.PembayarPremi" parameterClass="string">
		SELECT mcn.mcl_company_payer perusahaan,
	        man.alamat_kantor alamat_perusahaan,
	        man.kd_pos_kantor kdpos_perusahaan,
	        man.kota_kantor kota_perusahaan,
	        man.area_code_kantor  area_code_perusahaan,
	        man.telpon_kantor telp_perusahaan,
	        man.telpon_kantor_3rd telp_kantor,
	        mcn.tpt_kedudukan_payer tempat_kedudukan,
	        man.no_fax faks_perusahaan,
	        man.lspr_id prov_perusahaan,
	        (select case when kyc_desc is null then 0 else 1 end  from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and kyc_id=6) mkl_kerja_other_radio,
	        (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=6 and kyc_pp=0) mkl_kerja_other,
	        (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=3 and kyc_pp=0 and kyc_desc='GAJI') bulan_gaji,
	        (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=3 and kyc_pp=0 and kyc_desc='PENGHASILAN SUAMI/ISTRI') bulan_penghasilan,
	        (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=3 and kyc_pp=0 and kyc_desc='ORANG TUA') bulan_orangtua,
	        (select substr(kyc_desc,13) from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=3 and kyc_pp=0 and kyc_desc LIKE'HASIL USAHA%') bulan_usaha_note,
	        (select 'HASIL USAHA' from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=3 and kyc_pp=0 and kyc_desc LIKE'HASIL USAHA%') bulan_usaha,
	        (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=3 and kyc_pp=0 and kyc_desc='LABA PERUSAHAAN') bulan_laba,
	        (select substr(kyc_desc,9) from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=3 and kyc_pp=0 and kyc_desc LIKE 'LAINNYA%') bulan_lainnya_note,
	        (select 'LAINNYA' from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=3 and kyc_pp=0 and kyc_desc LIKE 'LAINNYA%') bulan_lainnya,
	        (select 'HASIL INVESTASI' from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=3 and kyc_pp=0 and kyc_desc LIKE 'HASIL INVESTASI%') bulan_investasi,
	        (select substr(kyc_desc,17) from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=3 and kyc_pp=0 and kyc_desc LIKE 'HASIL INVESTASI%') bulan_investasi_note,
	        (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=4 and kyc_pp=0 and kyc_desc='BONUS') tahun_bonus,
	        (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=4 and kyc_pp=0 and kyc_desc='KOMISI') tahun_komisi,
	        (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=4 and kyc_pp=0 and kyc_desc='PENJUALAN ASET') tahun_aset,
	        (select substr(kyc_desc,17) from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=4 and kyc_pp=0 and kyc_desc like'HASIL INVESTASI%') tahun_investasi_note,
	        (select 'HASIL INVESTASI' from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=4 and kyc_pp=0 and kyc_desc like'HASIL INVESTASI%') tahun_investasi,
	        (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=4 and kyc_pp=0 and kyc_desc='HADIAH/WARISAN') tahun_hadiah,
	        (select substr(kyc_desc,9) from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=4 and kyc_pp=0 and kyc_desc like'LAINNYA%') tahun_lainnya_note,
	        (select 'LAINNYA' from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=4 and kyc_pp=0 and kyc_desc like'LAINNYA%') tahun_lainnya,
	        (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=5 and kyc_pp=0 and kyc_desc='PROTEKSI') tujuan_proteksi,
	        (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=5 and kyc_pp=0 and kyc_desc='PENDIDIKAN') tujuan_pendidikan,
	        (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=5 and kyc_pp=0 and kyc_desc='INVESTASI') tujuan_investasi,
	        (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=5 and kyc_pp=0 and kyc_desc='TABUNGAN') tujuan_tabungan,
	        (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=5 and kyc_pp=0 and kyc_desc='PENSIUN') tujuan_pensiun,
	        (select substr(kyc_desc,9) from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=5 and kyc_pp=0 and kyc_desc like'LAINNYA%') tujuan_lainnya_note,
	        (select 'LAINNYA' from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=5 and kyc_pp=0 and kyc_desc like'LAINNYA%') tujuan_lainnya,
	        (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=7 and kyc_pp=0) total_rutin,
	        (select kyc_desc from eka.mst_kyc where reg_spaj=rpad(replace(pol.reg_spaj,'.'),11,' ') and  kyc_id=8 and kyc_pp=0) total_non_rutin,
	        mcn.mcl_first nama_pihak_ketiga,
	        (case when mcn.mcl_first is null then 0 else 1 end) ada_pihak_ketiga,
	        (case when mspe_place_birth is null then 0 else 1 end) jenis_pihak_ketiga,
	        mcn.lsne_id kewarganegaraan,
	        mcn.mspe_place_birth tempat_lahir,
	        mcn.mspe_date_birth mspe_date_birth_3rd,
	        mcn.mkl_kerja pekerjaan,
	        mcn.mkl_industri bidang_usaha_individu,
	        mcn.mkl_industri bidang_usaha_individu_lain,
	        mcn.ljb_id jabatan,
	        mcn.mcl_npwp no_npwp,
	        mcn.mkl_pendanaan sumber_dana,
	        mcn.mkl_tujuan tujuan_dana,
	        mcn.tgl_pendirian_payer mspe_date_birth_3rd_pendirian,
	        man.area_code_rumah area_code_3rd,
	        man.telpon_rumah telp_rumah,
	        man.alamat_3rd alamat_lengkap,
	        man.area_code_kantor area_code_kantor_3rd,
	        man.telpon_kantor_3rd telp_kantor,
	        man.email_3rd email_3rd,
	        mcn.mspe_email email,
	        mkl_instansi_payer instansi,
	        (select ppg.lsre_id_premi from eka.mst_policy pp ,eka.mst_client_new ppg where pp.mspo_policy_holder = ppg.mcl_id and pp.reg_spaj=pol.reg_spaj ) lsre_id_premi,
	        mcn.mkl_industri bidang_usaha_pembayar_premi,
	        mcn.mkl_industri bidang_usaha_premi_lainnya,
	        pol.lsre_id_payer lsre_id_payer,mcn.lti_id bidang_usaha_badan_hukum
		FROM eka.mst_policy pol,
		    eka.mst_client_new mcn,
		    eka.mst_address_new man,
		    eka.lst_propinsi lp
		WHERE pol.mspo_payer = mcn.mcl_id
		    and pol.mspo_payer = man.mcl_id
<!-- 		    and pol.lsre_id != 1 -->
		    and pol.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		    and man.lspr_id = lp.lspr_id (+)
	</select> 

	
	<select id="elions.bac.selectPemegangPolis" parameterClass="string" resultClass="int">
		select count(*) from eka.mst_keluarga where reg_spaj=RPAD(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.bac.selectKeteranganKerja" parameterClass="string" resultClass="string">
		select lsp_name from eka.lst_pekerjaan where lsp_id=RPAD(replace(#value#,'.'),11,' ')
	</select>
	   
	<select id="elions.bac.select_mspo_payer_old" parameterClass="string" resultClass="string">
		select mspo_payer from eka.mst_policy where reg_spaj=RPAD(replace(#value#,'.'),11,' ')
	</select>
	   
	<select id="elions.bac.selectJenisPihakKetiga" resultClass="java.util.HashMap" parameterClass="string" >
		select case when mkl_alasan_payer is null then '0' when mcl_first_3rd is not null then '1' else '1' end as pihak_ketiga,case when TGL_PENDIRIAN_PAYER is null then '1' else '0' end as jenis_pihak_ketiga
		from eka.mst_policy pol inner join eka.mst_client_new mcn
		on pol.mspo_payer = mcn.mcl_id 
		where pol.reg_spaj=RPAD(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.bac.selectIdLstPekerjaan" resultClass="string" parameterClass="string">
		select lsp_id from eka.lst_pekerjaan where trim(upper(lsp_name)) = trim(upper(#value#)) and flag_active = 1
	</select>
	
	<select id="elions.bac.selectSpajPrint" resultClass="java.util.HashMap">
 		select pol.reg_spaj from eka.mst_policy pol inner join eka.mst_product_insured mpi
        on pol.reg_spaj = mpi.reg_spaj 
        where pol.lspd_id=6 and mpi.lsbs_id=116 and pol.mspo_date_print is null and pol.lca_id <![CDATA[<>]]> 5 and rownum=1
	</select>
	
	<select id="elions.bac.selectMspoFlagSpaj" resultClass="string" parameterClass="string">
		select mspo_flag_spaj from eka.mst_policy where reg_spaj=RPAD(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.bac.selectMstSpajAo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select id_dok, msag_id, tgl_kembali_ke_agen, tgl_terima_dari_agen, jenis_further, keterangan_further
		from eka.mst_spaj_ao
		where id_dok = #no_blanko#
		<isEqual property="flag_further" compareValue="1">
			and flag_further = 1;
		</isEqual>
	</select>
		
	<select id="elions.bac.selectPersenKomisiReffBiiNew" parameterClass="java.util.HashMap" resultClass="double">
		SELECT EKA.PERSEN_KOMISI_TGL((RPAD (REPLACE (#no_spaj#, '.'), 11, ' ')), #ldt_beg_date#,#ldec_premi#,#mgi#) FROM DUAL
	</select>
	
	<select id="elions.bac.selectGetAccKomisi" resultClass="string" parameterClass="java.util.HashMap">
		SELECT EKA.PACGL.GET_ACC_COMM(#reg_spaj#, #li_bank#, #li_jenis#) FROM DUAL
	</select>


	<select id="elions.bac.selectCountQuestionaireTemp" resultClass="int" parameterClass="string">
		SELECT count(no_temp) from eka.mst_question_answer_temp where no_temp=#no_temp#
	</select>
	
	<select id="elions.bac.selectNoSertifikat" resultClass="string" parameterClass="string">
		select distinct no_policy from eka.mst_spaj_crt where reg_spaj = #reg_spaj#
	</select>
	
	<select id="elions.bac.selectSertifikatTemp" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT EKA.PAC_COUNTER.GET_SERTIFIKAT_TEMP (#lca_id#, #lwk_id#, #lsbs_id#) FROM DUAL
    </select>
	
	<select id="elions.bac.selectPemPremiTemp" resultClass="com.ekalife.elions.model.PembayarPremi" parameterClass="string">	
		select distinct a.lsre_id_payor lsre_id_premi,
		    b.mcl_first nama_pihak_ketiga,
		    b.mcl_company_payer perusahaan,
		    d.lspr_note prov_perusahaan,
		    b.mkl_instansi_payer instansi,
		    b.mkl_industri bidang_usaha_pembayar_premi,
		    b.mkl_industri bidang_usaha_premi_lainnya,
		    b.mkl_pendanaan sumber_dana,
		    b.mkl_pendanaan_3rd sumber_dana_lain,
            b.mkl_tujuan_pendanaan_3rd tujuan_dana,
		    b.mcl_npwp no_npwp,
		    c.alamat_rumah alamat_lengkap,
		    c.area_code_rumah area_code_3rd,
		    c.telpon_rumah telp_rumah,
		    c.area_code_kantor area_code_kantor_3rd,
		    c.telpon_kantor telp_kantor,
		    b.mkl_kerja bidang_usaha_individu_lain,
		    b.mkl_kerja bidang_usaha_individu,		    
		    b.mspe_email email,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 3 and upper(kyc_desc) = 'GAJI') bulan_gaji,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 3 and upper(kyc_desc) = 'PENGHASILAN SUAMI/ISTRI') bulan_penghasilan,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 3 and upper(kyc_desc) = 'ORANG TUA') bulan_orangtua,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 3 and upper(kyc_desc) = 'LABA PERUSAHAAN') bulan_laba,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 3 and upper(kyc_desc) = 'HASIL USAHA') bulan_usaha,
		    (select substr(upper(kyc_desc),13) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 3 and upper(kyc_desc) like 'HASIL USAHA%') bulan_usaha_note,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 3 and upper(kyc_desc) = 'HASIL INVESTASI') bulan_investasi,
		    (select substr(upper(kyc_desc),17) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 3 and upper(kyc_desc) like 'HASIL INVESTASI%') bulan_investasi_note,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 3 and upper(kyc_desc) = 'LAINNYA%') bulan_lainnya,
		    (select substr(upper(kyc_desc),9) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 3 and upper(kyc_desc) like 'LAINNYA%') bulan_lainnya_note,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 4 and upper(kyc_desc) = 'BONUS') tahun_bonus,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 4 and upper(kyc_desc) = 'KOMISI') tahun_komisi,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 4 and upper(kyc_desc) = 'PENJUALAN ASET') tahun_aset,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 4 and upper(kyc_desc) = 'HADIAH/WARISAN') tahun_hadiah,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 4 and upper(kyc_desc) = 'HASIL INVESTASI') tahun_investasi,
		    (select substr(upper(kyc_desc),17) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 4 and upper(kyc_desc) like 'HASIL INVESTASI%') tahun_investasi_note,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 4 and upper(kyc_desc) = 'LAINNYA%') tahun_lainnya,
		    (select substr(upper(kyc_desc),9) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 4 and upper(kyc_desc) like 'LAINNYA%') tahun_lainnya_note,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 5 and upper(kyc_desc) = 'PROTEKSI') tujuan_proteksi,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 5 and upper(kyc_desc) = 'PENDIDIKAN') tujuan_pendidikan,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 5 and upper(kyc_desc) = 'INVESTASI') tujuan_investasi,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 5 and upper(kyc_desc) = 'TABUNGAN') tujuan_tabungan,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 5 and upper(kyc_desc) = 'PENSIUN') tujuan_pensiun,
		    (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 5 and upper(kyc_desc) like 'LAINNYA%') tujuan_lainnya,
		    (select substr(upper(kyc_desc),9) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 5 and upper(kyc_desc) like 'LAINNYA%') tujuan_lainnya_note,
            (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 7) total_rutin,
            (select upper(kyc_desc) from eka.mst_kyc_temp where no_temp = a.no_temp and kyc_pp = 0 and kyc_id = 8) total_non_rutin,
            (select case SUBSTR(MCL_ID_PAYOR,1,2) when 'PY' then '1' else '0' end ada_pihak_ketiga from eka.mst_spaj_temp where no_temp = a.no_temp) ada_pihak_ketiga
   	from eka.mst_spaj_temp a,
		    eka.mst_client_new_temp b,
		    eka.mst_address_new_temp c,
		    eka.lst_propinsi d
		where a.mcl_id_payor = b.mcl_id
		    and a.mcl_id_payor = c.mcl_id
		    and c.lspr_id = d.lspr_id (+)
		    and a.no_temp = #value#
	</select>
	
	<select id="elions.bac.selectCountKeluargaTemp" resultClass="int" parameterClass="string">
		select distinct decode(count(*),0,2,1,0,2,1,count(*)) as jumlah_keluarga from eka.mst_keluarga_temp where no_temp=#no_temp#
	</select>
	
	<select id="elions.bac.selectDaftarInvestasiTemp" resultClass="com.ekalife.elions.model.DetilInvestasi" parameterClass="string">
		select distinct a.no_temp,a.lji_id lji_id1,a.mdu_persen mdu_persen1,a.mdu_jumlah mdu_jumlah1,
			         b.lji_invest lji_invest1  from eka.mst_daftar_invest_temp a,   
			         eka.lst_jenis_invest b where a.lji_id(+) = b.lji_id and no_temp=#value#
	</select>
	
	<select id="elions.bac.select_semua_mst_peserta2" resultClass="java.util.HashMap" parameterClass="string">
		select *
		from eka.mst_peserta
		where reg_spaj =rpad(replace(#value# ,'.'),11,' ') 
	</select>	
	
	<!-- Data Extra Premi-->
	<select id="elions.bac.selectDaftar_extra_premi" resultClass="java.util.HashMap" parameterClass="string">
		SELECT B.LSDBS_NAME,A.mspr_tsi up,
			(SELECT msps_desc FROM eka.mst_position_spaj WHERE reg_spaj = a.reg_spaj
					AND jenis=b.lsbs_id
					AND msps_date IN (SELECT MIN (msps_date)
			FROM eka.mst_position_spaj
					WHERE reg_spaj = a.reg_spaj AND jenis=to_char(b.lsbs_id)))keterangan
		FROM EKA.MST_PRODUCT_INSURED A, EKA.LST_DET_BISNIS B
		WHERE A.LSBS_ID =B.LSBS_ID
			  AND A.LSDBS_NUMBER = B.LSDBS_NUMBER
		      AND A.REG_SPAJ =rpad(replace(#value#,'.'),11,' ')
		      AND A.LSBS_ID <![CDATA[>=]]> 900
	</select>
	
	<select id="elions.bac.selectppTempNewSIO" resultClass="com.ekalife.elions.model.Pemegang" parameterClass="string">
		select
			    a.no_temp as no_temp,
			    A.MSPO_NASABAH_DCIF as mspo_nasabah_dcif,
			    a.msag_id as msag_id,
			    A.APPLICATION_ID_DMTM as application_id,
			    A.REFF_TM_ID as reff_tm_id,
			    b.mcl_first as mcl_first,
			    B.MSPE_MOTHER as mspe_mother,
			    B.LSNE_ID as lsne_id,
			    I.LSNE_NOTE as lsne_note ,
			    B.MCL_GREEN_CARD as mcl_green_card,
			    B.LSIDE_ID as lside_id,
			    B.MSPE_NO_IDENTITY_EXPIRED as  mspe_no_identity_expired, 
			    B.MSPE_NO_IDENTITY as MSPE_NO_IDENTITY ,
			    B.MSPE_SEX as mspe_sex,
			    decode(b.mspe_sex,1,'PRIA','WANITA') as mspe_sex2,
			    B.MSPE_STS_MRT as mspe_sts_mrt,
			    J.LSIDE_NAME as lside_name,
			    B.MSPE_DATE_BIRTH as mspe_date_birth,
			    B.MSPE_PLACE_BIRTH as mspe_place_birth,
			    b.lsag_id as lsag_id,
			    f.lsag_name as lsag_name,
			    B.MCL_COMPANY_NAME as mcl_company_name, 
			    b.mkl_kerja as mkl_kerja ,
			    B.MKL_KERJA_KET as mkl_kerja_ket,
			    D.ALAMAT_KANTOR as alamat_kantor,
			    D.ALAMAT_RUMAH as alamat_rumah,
			    d.alamat_tpt_tinggal as alamat_tpt_tinggal,
			    D.AREA_CODE_RUMAH as area_code_rumah,
			    D.TELPON_RUMAH as telpon_rumah ,
			    D.AREA_CODE_KANTOR as area_code_kantor,
			    D.TELPON_KANTOR as telpon_kantor,
			    D.KD_POS_RUMAH as kd_pos_rumah,
			    D.KD_POS_KANTOR as kd_pos_kantor,
			    D.KD_POS_TPT_TINGGAL as kd_pos_tpt_tinggal,
                D.KOTA_RUMAH as kota_rumah,
                D.KOTA_KANTOR as kota_kantor,
			    b.MSPE_EMAIL as mspe_email,
			    A.MSTE_AGE_PP as mspo_age,
			    A.MSTE_AGE_TT as mste_age,
			    A.MSTE_TGL_RECUR as mste_tgl_recur,  
			    A.LSRE_ID_PP as lsre_id,
			    D.NO_HP as no_hp,
			    G.LSRE_RELATION as lsre_relation,
			    A.MSPO_KORESPONDENSI as mspo_korespondensi,
			    A.MSPO_JENIS_TERBIT as mspo_jenis_terbit,
			    A.JENIS_SPAJ as mspo_flag_spaj,
			    B.MCL_NPWP as mcl_npwp,
			    0 as mcl_black_list,
			    A.TGL_UPLOAD as mspo_spaj_date,
			    sysdate as mspo_input_Date,
			    A.MSPO_NO_BLANKO as mspo_no_blanko,
			    0 as mspo_asnew,
			    (select count(*) from eka.mst_kyc_temp
                    where kyc_id = 1
                    AND (no_urut != 10 AND kyc_pp =2)
                    AND no_temp=#value#) jmlkyc,
                (select count(*) from eka.mst_kyc_temp
                    where kyc_id = 2
                    AND (no_urut != 20 AND kyc_pp = 2)
                    AND no_temp=#value#) jmlkyc2,                
				(select kyc_desc from eka.mst_kyc_temp where no_temp=#value# and  kyc_pp=2 and kyc_id=3  and kyc_desc='GAJI')  bulan_gaji,
				(select kyc_desc from eka.mst_kyc_temp where no_temp=#value# and  kyc_pp=2 and kyc_id=3  and kyc_desc='TABUNGAN/DEPOSITO')  bulan_penghasilan,
				(select kyc_desc from eka.mst_kyc_temp where no_temp=#value# and  kyc_pp=2 and kyc_id=3  and kyc_desc='WARISAN')  bulan_orangtua,
				(select kyc_desc from eka.mst_kyc_temp where no_temp=#value# and  kyc_pp=2 and kyc_id=3  and kyc_desc='HIBAH')  bulan_usaha,
				(select kyc_desc from eka.mst_kyc_temp where no_temp=#value# and  kyc_pp=2 and kyc_id=3  and kyc_desc='LAINNYA')  bulan_lainnya,
				(select substr(kyc_desc,9) from eka.mst_kyc_temp where no_temp=#value# and  kyc_pp=2 and kyc_id=3 and kyc_desc LIKE 'LAINNYA%')  bulan_lainnya_note,
				(select kyc_desc from eka.mst_kyc_temp where no_temp=#value# and  kyc_pp=2 and kyc_id=5  and kyc_desc='INVESTASI')  tujuan_investasi,
				(select kyc_desc from eka.mst_kyc_temp where no_temp=#value# and kyc_pp=2 and kyc_id=5  and kyc_desc='PROTEKSI')  tujuan_proteksi,
				(select kyc_desc from eka.mst_kyc_temp where no_temp=#value# and kyc_pp=2 and kyc_id=5  and kyc_desc like'LAINNYA%')  tujuan_proteksi,
				a.lca_id as lca_id,
				a.lwk_id as lwk_id,
				a.lsrg_id as lsrg_id,
				b.mkl_pendanaan as mkl_pendanaan,
				b.mkl_tujuan as mkl_tujuan	,
				a.lsre_id_payor as lsre_id_premi,
				b.MSPE_EMAIL as email,
				b.mkl_penghasilan as mkl_penghasilan,
 				a.flag_free_pa,
				a.cf_job_code,
				a.cf_customer_id,
				a.cf_campaign_code,
				a.mspo_id_sponsor,
				a.mspo_id_place,
				a.mspo_customer,
				a.nik,
				a.campaign_id,
				a.flag_kpr
	  from
			    eka.mst_spaj_temp a,
			    eka.mst_client_new_temp b,  
			    eka.mst_address_new_temp d,
			    EKA.MST_ADDRESS_BILLING_TEMP e,
			    eka.lst_agama f,
			    eka.lst_relation g,
			    eka.mst_agent h,
			    eka.lst_negara i,
			    EKA.LST_IDENTITY j
       where    
			    a.mcl_id_pp = b.mcl_id
			    and a.mcl_id_pp = d.mcl_id
			    and a.no_temp = e.no_temp
			    and b.lsag_id = f.lsag_id
			    and A.LSRE_ID_PP = G.LSRE_ID
			    and a.msag_id = h.msag_id   
			    and B.LSNE_ID = i.lsne_id
			    and B.LSIDE_ID =J.LSIDE_ID
			    and a.no_temp=#value#
	</select>
	
	<select id="elions.bac.selectttgTempNewSIO" resultClass="com.ekalife.elions.model.Tertanggung" parameterClass="string">
		select
			    a.no_temp as no_temp,			    
			    b.mcl_first as mcl_first,
			    B.MSPE_MOTHER as mspe_mother,
			    B.LSNE_ID as lsne_id,
			    I.LSNE_NOTE as lsne_note ,
			    B.MCL_GREEN_CARD as mcl_green_card,
			    B.LSIDE_ID as lside_id,
			    B.MSPE_NO_IDENTITY_EXPIRED as  mspe_no_identity_expired, 
			    B.MSPE_NO_IDENTITY as MSPE_NO_IDENTITY ,
			    B.MSPE_SEX as mspe_sex,
			    decode(b.mspe_sex,1,'PRIA','WANITA') as mspe_sex2,
			    B.MSPE_STS_MRT as mspe_sts_mrt,
			    J.LSIDE_NAME as lside_name,
			    B.MSPE_DATE_BIRTH as mspe_date_birth,
			    B.MSPE_PLACE_BIRTH as mspe_place_birth,
			    b.lsag_id as lsag_id,
			    f.lsag_name as lsag_name,
			    B.MCL_COMPANY_NAME as mcl_company_name, 
			    b.mkl_kerja as mkl_kerja ,
			    B.MKL_KERJA_KET as mkl_kerja_ket,
			    D.ALAMAT_KANTOR as alamat_kantor,
			    D.ALAMAT_RUMAH as alamat_rumah,
			    d.alamat_tpt_tinggal as alamat_tpt_tinggal,
			    D.AREA_CODE_RUMAH as area_code_rumah,
			    D.TELPON_RUMAH as telepon_rumah ,
			    D.AREA_CODE_KANTOR as area_code_kantor,
			    D.TELPON_KANTOR as telepon_kantor,
			    D.KD_POS_RUMAH as kd_pos_rumah,
			    D.KD_POS_KANTOR as kd_pos_kantor,
			    D.KD_POS_TPT_TINGGAL as kd_pos_tpt_tinggal,
                D.KOTA_RUMAH as kota_rumah,
                D.KOTA_KANTOR as kota_kantor,
			    b.MSPE_EMAIL as mspe_email,
			     b.MSPE_EMAIL as email,
			    A.MSTE_AGE_TT as mste_age,			    
			    A.LSRE_ID_TT as lsre_id,
			    D.NO_HP as no_hp,
			    G.LSRE_RELATION as lsre_relation,
			    a.mste_flag_cc,			    
			    B.MCL_NPWP as mcl_npwp,		   
			    (select count(*) from eka.mst_kyc_temp
                    where kyc_id = 1
                    AND (no_urut != 10 AND kyc_pp = 1)
                    AND no_temp=#value#) jmlkyc,
                (select count(*) from eka.mst_kyc_temp
                    where kyc_id = 2
                    AND (no_urut != 20 AND kyc_pp = 1)
                    AND no_temp=#value#) jmlkyc2,                
				(select kyc_desc from eka.mst_kyc_temp where no_temp=#value# and  kyc_pp=1 and kyc_id=3 and kyc_desc='GAJI')  bulan_gaji,
				(select kyc_desc from eka.mst_kyc_temp where no_temp=#value# and  kyc_pp=1 and kyc_id=3 and kyc_desc='TABUNGAN/DEPOSITO')  bulan_penghasilan,
				(select kyc_desc from eka.mst_kyc_temp where no_temp=#value# and  kyc_pp=1 and kyc_id=3 and kyc_desc='WARISAN')  bulan_orangtua,
				(select kyc_desc from eka.mst_kyc_temp where no_temp=#value# and  kyc_pp=1 and kyc_id=3 and kyc_desc='HIBAH')  bulan_usaha,
				(select kyc_desc from eka.mst_kyc_temp where no_temp=#value# and  kyc_pp=1 and kyc_id=3 and kyc_desc='LAINNYA')  bulan_lainnya,
				(select substr(kyc_desc,9) from eka.mst_kyc_temp where no_temp=#value# and  kyc_pp=1 and kyc_id=3  and kyc_desc LIKE 'LAINNYA%')  bulan_lainnya_note,
				(select kyc_desc from eka.mst_kyc_temp where no_temp=#value# and  kyc_pp=1 and kyc_id=5 and kyc_desc='INVESTASI')  tujuan_investasi,
				(select kyc_desc from eka.mst_kyc_temp where no_temp=#value# and kyc_pp=1 and kyc_id=5 and kyc_desc='PROTEKSI')  tujuan_proteksi,
				(select kyc_desc from eka.mst_kyc_temp where no_temp=#value# and kyc_pp=1 and kyc_id=5 and kyc_desc like'LAINNYA%')  tujuan_lainnya	,
				b.mkl_pendanaan as mkl_pendanaan,
				b.mkl_tujuan as mkl_tujuan	,
				b.mkl_penghasilan as mkl_penghasilan,
				a.mste_no_vacc as mste_no_vacc		
	  from
			    eka.mst_spaj_temp a,
			    eka.mst_client_new_temp b,  
			    eka.mst_address_new_temp d,
			    EKA.MST_ADDRESS_BILLING_TEMP e,
			    eka.lst_agama f,
			    eka.lst_relation g,
			    eka.mst_agent h,
			    eka.lst_negara i,
			    EKA.LST_IDENTITY j
       where    
			    a.mcl_id_tt = b.mcl_id
			    and a.mcl_id_tt = d.mcl_id
			    and a.no_temp = e.no_temp
			    and b.lsag_id = f.lsag_id
			    and A.LSRE_ID_TT = G.LSRE_ID(+)
			    and a.msag_id = h.msag_id   
			    and B.LSNE_ID = i.lsne_id
			    and B.LSIDE_ID =J.LSIDE_ID
			    and a.no_temp=#value#
	</select>	
	
	<select id="elions.bac.selectRekeningNasabahTemp" resultClass="com.ekalife.elions.model.Rekening_client" parameterClass="string">
		SELECT  lsbp_id, mrc_cabang, mrc_nama, mrc_no_ac, mrc_jenis,
		       mrc_jn_nasabah, mrc_kurs, mrc_kota, lus_id, tgl_change, replace(mrc_no_ac, '.') no_account,
		       replace(mrc_no_ac, '.') mrc_no_ac_lama
		  FROM eka.mst_rek_client_temp
  		 WHERE trim(no_temp) = trim(#value#)
	</select>
	
	<select id="elions.bac.selectDaftarPolisBSMBelumPrint" parameterClass="string" resultClass="java.util.HashMap">
		SELECT a.reg_spaj spaj, a.mspo_policy_no polis, d.lus_full_name user_input, to_date(e.tgl_transfer_uw_print, 'dd/MM/yyyy') tgl_transfer_printpolis
		FROM eka.mst_policy a, eka.mst_reff_bii b, eka.lst_user c, eka.lst_user d, eka.mst_trans_history e, eka.mst_product_insured f
		WHERE a.reg_spaj = b.reg_spaj
		    AND a.reg_spaj = e.reg_spaj
		    AND a.lus_id = d.lus_id
		    AND b.lcb_no = c.cab_bank
		    AND a.lspd_id = 6
		    AND a.mspo_date_print is null
		    AND b.level_id = 4
		    AND b.no_urut = (SELECT max(no_urut) FROM eka.mst_reff_bii WHERE level_id = 4 AND reg_spaj = a.reg_spaj)
		    AND c.lus_id = #lus_id#
		    AND e.jenis = 23
		    AND e.tgl_transfer_uw_speedy is not null
		    and a.reg_Spaj = f.reg_spaj
            and f.lsbs_id <![CDATA[<]]> 300
            and f.lsbs_id not in (208)
		ORDER BY a.mspo_date_print DESC
	</select>
	
	<select id="elions.bac.count_answer_order" resultClass="int"  parameterClass="java.util.HashMap">
		SELECT DISTINCT COUNT(ANSWER_ORDER ) FROM EKA.MST_QUESTION_ANSWER 
		where key_id =#key_id# and option_type=3 
		and question_type_id=#question_type_id# 
		and question_id =#question_id#
		<isNotEmpty property="option_order">
		and option_order=#option_order#
		</isNotEmpty>
	</select>
    
    <select id="elions.bac.selectTotalSmsserver_out" parameterClass="java.util.HashMap" resultClass="string">
          SELECT CEIL( count( a.id ) / #noRow# ) as total_pages        
            FROM eka.smsserver_out a, eka.lst_user b
           WHERE a.TYPE = 'O'
             AND a.LUS_ID = b.LUS_ID(+)
             AND a.flag_active = 1
             <isNotNull property="reg_spaj">
                 AND a.reg_spaj = #reg_spaj#
             </isNotNull>
             <isNotNull property="no_polis">
                 AND a.mspo_policy_no = #no_polis#
             </isNotNull>
             <isNotNull property="create_date1">
                 AND a.create_date BETWEEN TO_DATE(#create_date1#, 'dd/mm/yyyy')
                                AND TO_DATE(#create_date2#, 'dd/mm/yyyy') + 1
             </isNotNull>
             <isNotNull property="beg_date" >
                 AND a.sent_modem_date BETWEEN TO_DATE (#beg_date#, 'dd/mm/yyyy')
                                  AND TO_DATE (#end_date#, 'dd/mm/yyyy') + 1
             </isNotNull>
             <isNotNull property="id" >
                 AND a.id = #id#
             </isNotNull>
             <isNotNull property="lus_id" >
                 AND a.lus_id = #lus_id#
             </isNotNull>
             <isNotNull property="no_hp">
                 AND a.recipient = #no_hp#
             </isNotNull>
             <isNotNull property="status">
                 AND a.status = #status#
             </isNotNull>
        ORDER BY a.ID DESC
    </select>
    
    <select id="elions.bac.selectSmsserver_out" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.sms.Smsserver_out">
     SELECT * FROM(
     SELECT ROWNUM as row_number, x.*
     FROM(
        SELECT  a.id,a.recipient,a.create_date,a.sent_modem_date,a.sent_date,a.text,a.status,a.reg_spaj,a.mspo_policy_no,b.LUS_FULL_NAME username
            FROM eka.smsserver_out a, eka.lst_user b
           WHERE a.TYPE = 'O'
             AND a.LUS_ID = b.LUS_ID(+)
             AND a.flag_active = 1
             <isNotNull property="reg_spaj">
                 AND a.reg_spaj = #reg_spaj#
             </isNotNull>
             <isNotNull property="no_polis">
                 AND a.mspo_policy_no = #no_polis#
             </isNotNull>
             <isNotNull property="create_date1">
                 AND a.create_date BETWEEN TO_DATE(#create_date1#, 'dd/mm/yyyy')
                                AND TO_DATE(#create_date2#, 'dd/mm/yyyy') + 1
             </isNotNull>
             <isNotNull property="beg_date" >
                 AND a.sent_modem_date BETWEEN TO_DATE (#beg_date#, 'dd/mm/yyyy')
                                  AND TO_DATE (#end_date#, 'dd/mm/yyyy') + 1
             </isNotNull>
             <isNotNull property="id" >
                 AND a.id = #id#
             </isNotNull>
             <isNotNull property="lus_id" >
                 AND a.lus_id = #lus_id#
             </isNotNull>
             <isNotNull property="no_hp">
                 AND a.recipient = #no_hp#
             </isNotNull>
             <isNotNull property="status">
                 AND a.status = #status#
             </isNotNull>
        ORDER BY a.ID DESC
        )x
        )
        <isNotEmpty property="noPage">
            <isNotNull property="noRow">
                WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
                AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
            </isNotNull>
        </isNotEmpty>   
    </select>
    
    <select id="elions.bac.selectTotalResultSmsserver_out" parameterClass="java.util.HashMap" resultClass="string">
          SELECT count( a.id ) as total_sms        
            FROM eka.smsserver_out a, eka.lst_user b
           WHERE a.TYPE = 'O'
             AND a.LUS_ID = b.LUS_ID(+)
             AND a.flag_active = 1
             <isNotNull property="reg_spaj">
                 AND a.reg_spaj = #reg_spaj#
             </isNotNull>
             <isNotNull property="no_polis">
                 AND a.mspo_policy_no = #no_polis#
             </isNotNull>
             <isNotNull property="create_date1">
                 AND a.create_date BETWEEN TO_DATE(#create_date1#, 'dd/mm/yyyy')
                                AND TO_DATE(#create_date2#, 'dd/mm/yyyy') + 1
             </isNotNull>
             <isNotNull property="beg_date" >
                 AND a.sent_modem_date BETWEEN TO_DATE (#beg_date#, 'dd/mm/yyyy')
                                  AND TO_DATE (#end_date#, 'dd/mm/yyyy') + 1
             </isNotNull>
             <isNotNull property="id" >
                 AND a.id = #id#
             </isNotNull>
             <isNotNull property="lus_id" >
                 AND a.lus_id = #lus_id#
             </isNotNull>
             <isNotNull property="no_hp">
                 AND a.recipient = #no_hp#
             </isNotNull>
             <isNotNull property="status">
                 AND a.status = #status#
             </isNotNull>
        ORDER BY a.ID DESC
    </select>
    
    <select id="elions.bac.selectCountGadgetSpaj" parameterClass="string" resultClass="int">
		select
			count(reg_spaj)
		from
			eka.mst_spaj_temp
		where
			reg_Spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
			and campaign_id=4
	</select>
    
    <select id="elions.bac.selectSmsserver_out_hist" parameterClass="int" resultClass="com.ekalife.elions.model.sms.Smsserver_out_hist">
        SELECT * FROM eka.smsserver_out_hist WHERE id = #value# ORDER BY tgl_input
    </select>
    
    <select id="elions.bac.selectReportTotalSmsOutBulanan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        select
		    bln,op,sum(total_sms) total_sms,
		    sum(case when vendor_sts_drpt in (1,2,3) then total_sms else 0 end) total_success,
		    sum(case when vendor_sts_drpt = 4 then total_sms else 0 end) total_failed,
		    sum(case when vendor_sts_drpt in(0,77,null) then total_sms else 0 end) total_unavail
		from
		(select distinct
		    a.id,to_char(a.sent_modem_date,'MMyyyy') bln,
		    nvl(b.operator,'Others') op,
            b.vendor_msg_id message_id,
            b.batch_id,
		    b.total_sms,
		    a.vendor_sts_drpt
		from
		    eka.smsserver_out a,
		    eka.smsserver_out_hist b
		where
		    a.id = b.id
		    and a.vendor_id = 1
		    and b.vendor_msg_id is not null
		    and to_char(a.sent_modem_date,'MMyyyy') = (#month# || #year#))
		group by bln,op
		order by op
    </select>
    	
	<select id="elions.bac.selectLstLevelDist" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        select key, value FROM(
        select  (key || '~' || value) key, decode(value, 'AD', 'BP***', 'AM', 'BP**','SM', 'BP*', 'SE', 'FC',value) value FROM(
        SELECT id_dist as key, lsle_initial as value           
        FROM eka.lst_level_dist
        WHERE id_dist = #dist#
        ORDER BY id_dist, lsle_id desc  ))
	</select>
       
    <select id="elions.bac.selectReferensiTempSpaj" resultClass="java.util.HashMap" >
   		SELECT * FROM EKA.MST_SPAJ_TEMP WHERE REG_SPAJ = RPAD (REPLACE (#value#, '.'), 11, ' ')
	</select>
	
	<select id="elions.bac.selectCabangBiiUA" parameterClass="com.ekalife.elions.model.User" resultClass="com.ekalife.elions.model.User">
			
			select * from eka.lst_cabang_bii 
			where jenis = 2 
			and flag_aktif = 1
			and kode is not null
            and upper(kode) not in ('00A','00B')
            and substr(upper(kode),1,1) not in ('A')
			<isEqual property="jn_cab" compareValue="1" >
			and trim(lcb_no) = trim(#cab_bank#)
			 </isEqual>
			order by Nama_cabang
	</select>
	
	<select id="elions.bac.selectNewLusIDUA" parameterClass="string" resultClass="string">
			select msco_value+1 from eka.mst_counter where msco_name like '%USER_ID%' and lca_id='01'
	</select>
	
	<select id="elions.bac.selectDaftarUserUA" parameterClass="com.ekalife.elions.model.User" resultClass="com.ekalife.elions.model.User">
			select * from eka.LST_USER u ,eka.lst_cabang_bii cb
            where u.cab_bank is not null
            and u.cab_bank = cb.lcb_no
            <isEqual property="jn_user" compareValue="0" >
            and trim(u.cab_bank) = trim(#cab_bank#)
            and u.lus_active = 0
            order by u.lus_full_name
            </isEqual>
            <isEqual property="jn_user" compareValue="1" >
            and trim(u.cab_bank) = trim(#cab_bank#)
            and u.lus_active = 1
            order by u.lus_full_name
            </isEqual>
             <isEqual property="jn_user" compareValue="2" >
            and trim(u.cab_bank) = trim(#cab_bank#)
             and u.valid_bank_1 is null
            and u.valid_bank_2 is null
            and u.lus_active = 1
            order by u.lus_login_name
            </isEqual>
            <isEqual property="jn_user" compareValue="3" >
            and u.lus_login_name = trim(upper(#lus_login_name#))
            </isEqual>
            <isEqual property="jn_user" compareValue="4" >
            and u.lus_id = #lus_login_name#
            </isEqual>
            
	</select>
	
	<select id="elions.bac.selectDetUserUA" parameterClass="com.ekalife.elions.model.User" resultClass="com.ekalife.elions.model.User">
			select u.lus_id, u.lus_login_name, u.lus_full_name, u.lus_email,
			u.lus_active ,
			u.cab_bank , cb.Nama_cabang,
			u.valid_bank_1, u1.lus_login_name spv1_name, u.valid_bank_2, u2.lus_login_name spv2_name
			from eka.LST_USER u ,eka.LST_USER u1, eka.LST_USER u2, eka.lst_cabang_bii
			cb
			where u.cab_bank is not null
			and u.valid_bank_1 = u1.lus_id (+)
			and u.valid_bank_2 = u2.lus_id (+)
			and u.cab_bank = cb.lcb_no
			<isEqual property="jn_pil" compareValue="1" >
			and trim(u.cab_bank) = trim(#cab_bank#)
			</isEqual>
			<isEqual property="jn_pil" compareValue="2" >
			and (u.valid_bank_1 is null and u.valid_bank_2 is null)
			and u.lus_id = #lus_id#
			and u.lus_active = 1
			</isEqual>
			<isEqual property="jn_pil" compareValue="3" >
			and u.lus_id = #lus_id#
			</isEqual>
			order by u.lus_full_name
	</select>
	
	<select id="elions.bac.cekLoginName" parameterClass="string" resultClass="string">
		SELECT distinct LUS_LOGIN_NAME FROM EKA.LST_USER WHERE EKA.LST_USER.LUS_LOGIN_NAME =trim(upper(#user_name#))
	</select> 	
	
	<select id="elions.bac.cekFullName" parameterClass="string" resultClass="string">
		SELECT distinct LUS_FULL_NAME FROM EKA.LST_USER WHERE EKA.LST_USER.LUS_FULL_NAME =trim(upper(#full_name#))
	</select> 
	
	<select id="elions.bac.cekSpv1" parameterClass="com.ekalife.elions.model.User" resultClass="string">
			select valid_bank_1 from eka.LST_USER where lus_id = #lus_id#
	</select>
		<select id="elions.bac.cekSpv2" parameterClass="com.ekalife.elions.model.User" resultClass="string">
			select valid_bank_2 from eka.LST_USER where lus_id = #lus_id#
	</select>
	
	<select id="elions.bac.select_spesifik_produk_rider_namesub" resultMap="elions.bac.select_detilproduk1" parameterClass="java.util.HashMap">
		SELECT "EKA"."LST_DET_BISNIS"."LSBS_ID",   
			"EKA"."LST_DET_BISNIS"."LSDBS_NUMBER",   
			LSDBS_NAME || ' ~ ' || LSDBS_NAME0 LSDBS_NAME, 
			"EKA"."LST_DET_BISNIS"."LSBS_ID"||'~X'||"EKA"."LST_DET_BISNIS"."LSDBS_NUMBER" plan
		FROM "EKA"."LST_DET_BISNIS"  
		WHERE
			( EKA."LST_DET_BISNIS"."LSBS_ID" = #kode# ) AND  
			( EKA."LST_DET_BISNIS"."LSDBS_NAME_SUB" = #lsdbs_name_sub# ) AND
			( EKA."LST_DET_BISNIS"."LSBS_ID" <![CDATA[ >=  ]]> 300 ) AND
			EKA.LST_DET_BISNIS.LSDBS_AKTIF = 1 
         	<isEqual property="kode" compareValue="840" >
         		AND lsdbs_number not in (1,2)
         	</isEqual>
		ORDER BY "EKA"."LST_DET_BISNIS"."LSBS_ID","EKA"."LST_DET_BISNIS"."LSDBS_NUMBER"
	</select>
	
    <select id="elions.bac.selectMstSpajTemp" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >
   		select * from eka.mst_spaj_temp where reg_spaj = rpad(replace(#spaj#,'.'),11,' ') and campaign_id = #camp_id#
	</select>
	
	<select id="elions.bac.selectUsedMstSpajTemp" parameterClass="string" resultClass="string" >
   		select reg_spaj from eka.mst_spaj_temp where no_temp = #no_temp#
	</select>
	
	<select id="elions.bac.selectAgenESPAJSimasPrima" resultClass="java.util.HashMap" parameterClass="string">
		select 
		a.reg_spaj,(select agent_code from eka.mst_reff_bii i, eka.lst_reff_bii j where i.lrb_id = j.lrb_id and i.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ')
		and i.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = rpad(replace(#spaj#,'.'),11,' '))) as kd_penutup, 
		(select nama_reff from eka.mst_reff_bii i, eka.lst_reff_bii j where i.lrb_id = j.lrb_id and i.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ')
		and i.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = rpad(replace(#spaj#,'.'),11,' '))) as nm_penutup, 
		(select nama_cabang from eka.lst_cabang_bii x, eka.mst_reff_bii y where x.lcb_no = Y.LCB_PENUTUP and Y.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ')
		and y.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = rpad(replace(#spaj#,'.'),11,' '))) as cb_penutup,
		(select agent_code from eka.mst_reff_bii i, eka.lst_reff_bii j where i.reff_id = j.lrb_id and i.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ')
		and i.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = rpad(replace(#spaj#,'.'),11,' '))) as kd_refferal, 
		(select nama_reff from eka.mst_reff_bii i, eka.lst_reff_bii j where i.reff_id = j.lrb_id and i.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ')
		and i.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = rpad(replace(#spaj#,'.'),11,' '))) as nm_refferal,
		(select nama_cabang from eka.lst_cabang_bii x, eka.mst_reff_bii y where x.lcb_no = Y.LCB_REFF and Y.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ')
		and y.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = rpad(replace(#spaj#,'.'),11,' '))) as cb_refferal,
		e.mspo_ao kd_agen,
		(select R.MCL_FIRST from eka.mst_policy p, eka.mst_agent q, eka.mst_client_new r
		where p.MSPO_AO = Q.MSAG_ID
		and Q.MCL_ID = R.MCL_ID
		and P.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ')) nm_agen,
		D.NAMA_CABANG
		from eka.mst_reff_bii a, eka.lst_cabang_bii d, EKA.MST_POLICY e
		where a.lcb_no = d.lcb_no
		and E.REG_SPAJ = A.REG_SPAJ
		and a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
        and a.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = a.reg_spaj)
	</select>
	
	<select id="elions.bac.selectAgenESPAJgadget" resultClass="java.util.HashMap" parameterClass="string">
		select a.reg_spaj, b.agent_code as kd_penutup, b.nama_reff as nm_penutup, 
		(select nama_cabang from eka.lst_cabang_bii x, eka.mst_reff_bii y where x.lcb_no = y.lcb_penutup and y.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')) cb_penutup,
		c.agent_code as kd_refferal, c.nama_reff as nm_refferal,
		(select nama_cabang from eka.lst_cabang_bii x, eka.mst_reff_bii y where x.lcb_no = y.lcb_reff and y.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')) cb_referral,
		e.mspo_ao kd_agen,
		(select r.mcl_first from eka.mst_policy p, eka.mst_agent q, eka.mst_client_new r
		where p.mspo_ao = q.msag_id
		and q.mcl_id = r.mcl_id
		and p.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')) nm_agen,
		d.nama_cabang cb_agen
		from eka.mst_reff_bii a, eka.lst_reff_bii b, eka.lst_reff_bii c, eka.lst_cabang_bii d, eka.mst_policy e
		where a.lrb_id = b.lrb_id
		and a.reff_id = c.lrb_id
		and a.lcb_no = d.lcb_no
		and e.reg_spaj = a.reg_spaj
		and a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
        and a.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = a.reg_spaj)		
	</select>
	
	<select id="elions.bac.selectSumPremiTemp" parameterClass="string" resultClass="double">
		select sum(premi) from eka.mst_premi_temp where no_temp=#no_temp#
	</select>
	
	<select id="elions.bac.selectCountAreaBC" resultClass="int" parameterClass="java.util.HashMap">
		SELECT COUNT(*)
				FROM EKA.LST_REFF_BII A, EKA.LST_REFF_CAB B
		WHERE A.LRB_ID = B.LRB_ID
				AND B.FLAG_AKTIF=1 AND TRIM (B.LCB_NO) =TRIM(#lcb_no#) AND TRIM (B.LRB_ID)=TRIM(#lrb_id#)
	</select>
	
	<select id="elions.bac.selectJnBankDetBisnis" parameterClass="java.util.HashMap" resultClass="integer">
		select nvl(jn_bank, 0) jn_bank from eka.lst_det_bisnis where lsbs_id = #lsbs# and lsdbs_number = #lsdbs#
	</select>
	
	<select id="elions.bac.selectCountAgentSFP" resultClass="int" parameterClass="java.util.HashMap">
		select count(*) 
        from EKA.MST_SFP_AGENT 
        where flag_active = 1 
        and to_date(add_months(active_date,12)) <![CDATA[>=]]> to_date(sysdate)
        and trim(msa_msag_id) = trim(#msag_id#)
	</select>
	
	<select id="elions.bac.selectCountStrukturAgentSFP" resultClass="int" parameterClass="java.util.HashMap">
            select count(*) from EKA.MST_SFP_AGENT 
            where flag_active = 1 
            and to_date(add_months(active_date,12)) <![CDATA[>=]]> to_date(sysdate)
            and msa_msag_id in (select a.msag_id kode_agen
                    from eka.mst_agent a
                    start with trim(a.msag_id) = trim(#msag_id#)
                    connect by (msag_id = prior mst_leader) or (msag_id = prior msag_rm))
	</select>
	
	<select id="elions.bac.selectTanggalHpl" parameterClass="string" resultClass="string">
		select tgl_perkiraan_lahir from eka.mst_trans_history where reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
	</select>
	
	<select id="elions.bac.selectTglLhrPP" parameterClass="string" resultClass="string">
		select to_char(mspe_date_birth,'ddmmyyyy') tgl_lahir_PP from eka.mst_policy a, eka.mst_client_new b  
		where a.mspo_policy_holder = b.mcl_id and a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ') 
	</select>
	
	 <select id="elions.bac.cekUrlSecureFile" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        select * from EKA.MST_URL_SECURE_FILE where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') and note = #note#
	</select>
	
	<select id="elions.bac.selectTglTransToPrintPolis" resultClass="java.util.Date" parameterClass="string">
		select tgl_transfer_uw_print from eka.mst_trans_history where reg_spaj = rpad(replace(#spaj#,'.'),11,' ')		
	</select>
	
	<select id="elions.bac.selectKycDesc" parameterClass="java.util.HashMap" resultClass="string">
		select kyc_desc from eka.mst_kyc 
		where 	no_urut = #no_urut# and kyc_id = #kyc_id#
				and kyc_pp = #kyc_pp# 
				and reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.bac.selectCekSpajPromoUF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<isEqual property="jn_promo" compareValue="1">
		select mp.reg_spaj, MPI.LSBS_ID , mpi.lsdbs_number ,LDB.LSDBS_NAME, 
		       to_char(mspo_input_date,'dd/mm/yyyy')  mspo_input_date, ldp.lspd_position,
		       MRB.LCB_REFF, LCB.NAMA_CABANG , trim(LCB.WIL_NO) WIL_NO, LCBwn.NAMA_CABANG  nama_kanwil ,
		       mcn.mcl_first, TO_CHAR (MCN.MSPE_DATE_BIRTH, 'dd/mm/yyyy') MSPE_DATE_BIRTH,
		       mpi.mspr_tsi up , MPI.MSPR_PREMIUM premi
		from eka.mst_policy mp,
		     eka.mst_product_insured mpi,
		     EKA.LST_DOCUMENT_POSITION ldp,
		     eka.mst_reff_bii mrb,
		     eka.lst_cabang_bii lcb,
		     eka.lst_cabang_bii lcbwn,
		     EKA.LST_DET_BISNIS ldb,
		     eka.mst_client_new mcn
		where   mp.reg_spaj = mpi.reg_spaj
		        and MP.LSPD_ID = LDP.LSPD_ID
		        and mp.lspd_id not in (95)		        
        		and MP.MSPO_POLICY_HOLDER = MCN.MCL_ID
		        and mp.lstb_id = 1        
		        and MPI.LSBS_ID = LDB.LSBS_ID        
		        and MPI.LSDBS_NUMBER = LDB.LSDBS_NUMBER
		        and MPI.LSDBS_NUMBER <![CDATA[<=]]> 300
		        and mp.reg_spaj = mrb.reg_spaj (+)
		        and MRB.LEVEL_ID(+) = 4
		        and MRB.LCB_REFF = lcb.lcb_no (+)
		        and LCB.WIL_NO = LCBWN.LCB_NO (+)
		        <isEqual property="jn_spaj" compareValue="0">
		        and ((MPI.LSBS_ID = 134 and mpi.lsdbs_number = 5) or (MPI.LSBS_ID = 213 and mpi.lsdbs_number = 1))  
		        </isEqual>
		        <isEqual property="jn_spaj" compareValue="1">
		        and (MPI.LSBS_ID = 183 and mpi.lsdbs_number between 50 and 60)  
		        </isEqual>
		     	and  mp.mspo_input_date between to_date( #beg_date_promo#, 'dd/mm/YYYY')and to_date(#end_date_promo#, 'dd/mm/YYYY')
              <isNotNull property="spaj">
                 AND mp.reg_spaj = RPAD (REPLACE (#spaj#, '.'), 11, ' ')	
             </isNotNull>
        order by mspo_input_date
        </isEqual>
	</select>
	
	<select id="elions.bac.selectCekSpajPromo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<isEqual property="jn_promo" compareValue="1">
		select * from eka.MST_FREE_SPAJ
		where program_type = 1 
     		  <isNotNull property="spajReff">
      		  and reg_spaj_primary = RPAD (REPLACE (#spajReff#, '.'), 11, ' ')	
      		  </isNotNull>
      		  <isNotNull property="spajFree">
      		  and reg_spaj_free = RPAD (REPLACE (#spajFree#, '.'), 11, ' ')	
      		  </isNotNull>      		   
        </isEqual>
	</select>
	
	<select id="elions.bac.selectCountandvalidSpajPromo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<isEqual property="jn_promo" compareValue="1">
		select count(*) total_freeSpaj , 
		(CASE WHEN (to_date(to_char(SYSDATE,'dd/mm/yyyy'),'dd/mm/yyyy') BETWEEN to_date(#beg_date_promo#,'dd/mm/yyyy') and to_date(#end_date_promo#,'dd/mm/yyyy')) THEN 'Valid' ELSE 'Expired' END) Promo_valid
		from     eka.MST_FREE_SPAJ mfs,             
		         eka.mst_reff_bii mrb,         
		         eka.lst_cabang_bii lcb,
		         eka.lst_cabang_bii lcbwn
		where 	 mfs.reg_spaj_primary = mrb.reg_spaj
		         AND MRB.LCB_REFF = lcb.lcb_no
		         AND LCB.WIL_NO = LCBWN.LCB_NO(+) 
		         and MRB.NO_URUT = 1
		         AND trim(lcb.wil_no) = #wil_no#
		         <isEqual property="jn_cek" compareValue="0">
		         and mfs.process_type in (0)
		         </isEqual>
		         <isEqual property="jn_cek" compareValue="1">
		         and mfs.process_type in (1)
		         </isEqual>
		          <isEqual property="jn_cek" compareValue="2">
		         and mfs.process_type in (2)
		         </isEqual>
		         <isEqual property="jn_cek" compareValue="3">
		         and mfs.process_type in (0,1)
		         </isEqual>
        </isEqual>
	</select>
	
	<select id="elions.bac.selectListPromoChecklistFreeProd" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Promo">
		select mfs.reg_spaj_primary spaj_utama, mfs.row_num , mfs.reg_spaj_free spaj_free, mfs.process_type, mfs.program_type,
		       to_char(mth.tgl_transfer_uw_print, 'dd/mm/yyyy hh24:mi:ss') tgl_transfer_uw_print, MP1.LSPD_ID posisi_spaj_utama_id, ldp1.lspd_position posisi_spaj_utama,
		       MP2.LSPD_ID posisi_spaj_free_id, ldp2.lspd_position posisi_spaj_free, mp1.lku_id kurs,
		        eka.f_get_ape_prod (MPI.MSPR_PREMIUM, MP1.LSCB_ID, 0,1) ape_manual , MPRD.APE_PROD ape_system,
		        (CASE WHEN ( MPRD.APE_PROD is not null) THEN  MPRD.APE_PROD ELSE eka.f_get_ape_prod (MPI.MSPR_PREMIUM, MP1.LSCB_ID, 0,1) END) nilai_ape,
		        MRB.LCB_REFF, LCB.NAMA_CABANG nama_cabang , LCB.WIL_NO, LCBwn.NAMA_CABANG  nama_kanwil,
		        (CASE WHEN ( mfs.process_type = 0) THEN  'WAITING APPROVAL' WHEN ( mfs.process_type = 1) THEN  'APPROVED' ELSE 'REJECTED' END) status       
		from  eka.mst_free_spaj mfs,
		      eka.mst_trans_history mth,
		      eka.mst_policy mp1,      
		      EKA.LST_DOCUMENT_POSITION ldp1,
		      eka.mst_policy mp2,      
		      EKA.LST_DOCUMENT_POSITION ldp2,
		      eka.mst_product_insured mpi,
		      eka.mst_production mprd,
		      eka.lst_cabang_bii lcb,
		     eka.lst_cabang_bii lcbwn,
		     eka.mst_reff_bii mrb
		where  mfs.reg_spaj_primary = MTH.REG_SPAJ
		      and MFS.REG_SPAJ_PRIMARY = MP1.REG_SPAJ
		       and MP1.LSPD_ID = LDP1.LSPD_ID
		        and mp1.lspd_id not in (95)
		        and MFS.REG_SPAJ_FREE = MP2.REG_SPAJ(+)
		       and MP2.LSPD_ID = LDP2.LSPD_ID (+)
		        and mp2.lspd_id not in (95)
		       and  MP1.REG_SPAJ = MPI.REG_SPAJ
		       and  MP1.REG_SPAJ = mprd.REG_SPAJ (+)
		       and MPRD.MSBI_PREMI_KE(+) = 1
		       and MPRD.MSBI_TAHUN_KE(+) = 1
		       and MPI.LSBS_ID <![CDATA[<=]]> 300
		        and mp1.reg_spaj = mrb.reg_spaj
		        and MRB.LCB_REFF = lcb.lcb_no
		        and LCB.WIL_NO = LCBWN.LCB_NO (+)
		        and MRB.LEVEL_ID = 4
		        and mrb.no_urut = 1
		order by mfs.process_type, mth.tgl_transfer_uw_print , MP1.MSPO_INPUT_DATE,  LCB.WIL_NO  asc
		
	</select>
	
	<select id="elions.bac.selectHitungApe" parameterClass="string" resultClass="int">
		select EKA.F_GET_APE_PROD(MPI.MSPR_PREMIUM, MP1.LSCB_ID, 0, 1) APE_manual
		from  eka.mst_policy mp1,  
		    eka.mst_product_insured mpi
		where  MP1.REG_SPAJ = Mpi.REG_SPAJ   
		    and MPI.LSBS_ID <![CDATA[<=]]> 300
		    and MP1.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')				
	</select>
	
	<select id="elions.bac.selectKanwil711" resultClass="java.util.HashMap"
	parameterClass="java.lang.String">
	   select lcb_no key,nama_cabang value from eka.lst_cabang_bii where lcb_no in ('S161','S279' ) and jenis = 2
       union
       select '00' key,'ALL' value from dual 
	</select>
	
	<select id="elions.bac.selectProducFreeP1" resultClass="java.util.HashMap"
	parameterClass="java.lang.String">
	   select distinct  LSBS_ID key , 
                (case when LSBS_ID = 183 then 'SMiLe MEDICAL AC PLAN E - O (BANCASS/TM)'  else lsdbs_name  end  ) value
		from eka.lst_det_bisnis 
		where (LSBS_ID = 134 and lsdbs_number = 5) 
		        or (LSBS_ID = 213 and lsdbs_number = 1) 
		        or (LSBS_ID = 183 and lsdbs_number between 50 and 60)
		order by value 
	</select>
	
	<select id="elions.bac.selectReportProductFreeSmileM" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select * from (
		<isNotEqual property="produk" compareValue="All">
		<isNotEqual property="produk" compareValue="183">
			select mp.reg_spaj, MFS.REG_SPAJ_PRIMARY , MFS.ROW_NUM, MFS.REG_SPAJ_FREE, MFS.PROCESS_TYPE,
			        (case when MFS.PROCESS_TYPE = 0 then 'WAITING APPROVAL' when MFS.PROCESS_TYPE = 1 then 'APPROVED' else 'REJECTED' end) Kriteria,
			         MFS.PROGRAM_TYPE ,
			         ljd.NAMA_DIST as channel1,lc.lca_nama|| '||'||lr.LSRG_NAMA as cabang1, 
			        MP.LCA_ID , lc.lca_nama channel,MRB.LCB_REFF, lr.LSRG_NAMA || '||' || lcb.nama_cabang cabang,LCB.WIL_NO , LCBWN.NAMA_CABANG kanwil,
			        EKA.UTILS.PEMEGANG (mp.reg_Spaj) AS pemegang,
			        EKA.UTILS.TERTANGGUNG (mp.reg_Spaj) AS tertanggung,
			        MPI.MSPR_PREMIUM Premi, MPI.MSPR_TSI UP , mpi.lsbs_id , MPI.LSDBS_NUMBER , LDB.LSDBS_NAME ,
			        mpi.MSPR_PREMIUM AS premi_pokok,       
			        (select mu_jlh_premi from eka.mst_ulink where reg_spaj = mp.reg_Spaj and lt_id = 2 AND mu_ke IN (1, 2, 3)) premi_pokok_tunggal,
			        (select mu_jlh_premi from eka.mst_ulink where reg_spaj = mp.reg_Spaj and lt_id = 5 AND mu_ke IN (1, 2, 3)) premi_pokok_berkala,
			        EKA.F_GET_APE_PROD(MPI.MSPR_PREMIUM, MP.LSCB_ID, 0, 1) APE_manual , MPRD.APE_PROD APE_system, mp.lku_id kurs,
			        (CASE WHEN ( MPRD.APE_PROD is not null) THEN  MPRD.APE_PROD ELSE EKA.F_GET_APE_PROD(MPI.MSPR_PREMIUM, MP.LSCB_ID, 0, 1) END) NILAI_APE,
			        EKA.UTILS.PAY_MODE(mp.lscb_id) cara_bayar,
			        EKA.UTILS.STATUS_POLIS(MP.lssp_ID) STATUS_POLIS,
			        EKA.UTILS.det_produk(mpi.lsbs_id, MPI.LSDBS_NUMBER ) produk,
			        MSPO_INPUT_DATE MSPO_INPUT_DATE_ORG,
			        to_char(MP.MSPO_INPUT_DATE , 'dd/mm/yyyy hh24:mi:ss') MSPO_INPUT_DATE,
			        to_char(MTH.TGL_TRANSFER_UW_SPEEDY , 'dd/mm/yyyy hh24:mi:ss') TGL_TRANSFER_UW_SPEEDY,
			        to_char(MTH.TGL_BACK_TO_BAS , 'dd/mm/yyyy hh24:mi:ss') TGL_BACK_TO_BAS,
			        to_char(MTH.TGL_BACK_TO_ADMIN , 'dd/mm/yyyy hh24:mi:ss') TGL_BACK_TO_ADMIN,
			        to_char(MTH.TGL_TRANSFER_UW , 'dd/mm/yyyy hh24:mi:ss') TGL_TRANSFER_UWPROSES,
			        to_char(MTH.TGL_FURTHER , 'dd/mm/yyyy hh24:mi:ss') TGL_FURTHER,
			        to_char(MTH.TGL_PRINT_POLIS , 'dd/mm/yyyy hh24:mi:ss') TGL_PRINT_POLIS,
			        to_char(MTH.TGL_KIRIM_POLIS , 'dd/mm/yyyy hh24:mi:ss') TGL_KIRIM_POLIS,
			        to_char(MTH.TGL_TTP , 'dd/mm/yyyy hh24:mi:ss') TGL_TTP,
			        (case when mi.FLAG_SPEEDY =1 then to_char(mth.tgl_akseptasi_polis,'dd/MM/yyyy hh24:mi:ss')else '' end )tgl_aksep_speedy,
			        (case when (mi.FLAG_SPEEDY =0 or mi.FLAG_SPEEDY is null ) 
			                    then to_char(mth.tgl_akseptasi_polis,'dd/MM/yyyy hh24:mi:ss')
			                    else (select to_char(pst.msps_date,'dd/MM/yyyy hh24:mi:ss') from eka.mst_position_Spaj pst where pst.reg_Spaj= mp.reg_Spaj and pst.msps_date=(select min(msps_date) from eka.mst_position_Spaj where reg_Spaj=pst.reg_Spaj and lssa_id=5 and lspd_id=2)) 
			              end )tgl_aksep_uwproses,
			        TO_CHAR (
			                (SELECT MIN (pst.msps_date)
			                   FROM eka.mst_position_spaj pst
			                  WHERE     pst.reg_spaj = mp.reg_Spaj
			                        AND pst.msps_desc LIKE '%KIRIM ENROLLMENT%'),
			                'dd/MM/yyyy hh24:mi:ss')
			                    tgl_enrollment_admedika,
			        TO_CHAR (
			                    (SELECT X.MSDP_INPUT_DATE
			                       FROM eka.mst_deposit_premium x
			                      WHERE x.msdp_number = 1 AND x.reg_Spaj = mp.reg_Spaj),
			                    'dd/MM/yyyy hh24:mi:ss')
			                    tgl_input_tp,
			        TO_CHAR (
			                    (SELECT MIN (yy.MSpa_INPUT_DATE)
			                       FROM eka.mst_payment yy
			                      WHERE     yy.reg_Spaj = mp.reg_spaj
			                            AND (yy.msdp_number = 1 OR yy.msdp_number IS NULL)),
			                    'dd/MM/yyyy hh24:mi:ss')
			                    tgl_input_payment_pertama,
			        TO_CHAR (mi.mste_tgl_spaj_doc, 'dd/MM/yyyy hh24:mi:ss') tgl_upload_scan,
			        TO_CHAR (mth.tgl_transfer_uw_print, 'dd/MM/yyyy hh24:mi:ss') tgl_transfer_print_polis,
			        TO_CHAR (mprd.mspro_prod_date, 'dd/MM/yyyy') tgl_produksi,
			        mspo_ao kode_ao, MRB.LRB_ID am_id , LRBBC.NAMA_REFF nama_bc , LRBBC.leader_id , LRBam.NAMA_REFF nama_am
			from eka.mst_free_spaj mfs,
			     eka.mst_policy mp,
			     eka.lst_cabang lc,
			     eka.mst_reff_bii mrb ,
			     eka.lst_cabang_bii lcb,
			     eka.lst_cabang_bii lcbwn,
			     eka.mst_insured mi,
			     eka.mst_product_insured mpi,
			     eka.lst_det_bisnis ldb,
			     eka.mst_ulink mu,
			     eka.mst_production mprd,
			     eka.mst_trans_history mth,
			     eka.lst_region lr,
			     eka.lst_jalur_dist ljd,
			     eka.lst_reff_bii lrbbc,
			     eka.lst_reff_bii lrbam
			where MFS.REG_SPAJ_PRIMARY = MP.REG_SPAJ
			      and mp.lca_id = LC.LCA_ID
			      and MFS.REG_SPAJ_PRIMARY = MRB.REG_SPAJ 
			      AND MRB.LEVEL_ID = 4
			      AND MRB.LCB_REFF = lcb.lcb_no
			      AND LCB.WIL_NO = LCBWN.LCB_NO(+)
			      and MFS.REG_SPAJ_PRIMARY = Mi.REG_SPAJ
			      and MFS.REG_SPAJ_PRIMARY = Mpi.REG_SPAJ
			      and mpi.lsbs_id = LDB.LSBS_ID
			      and MPI.LSDBS_NUMBER = LDB.LSDBS_NUMBER
			      and MFS.REG_SPAJ_PRIMARY = Mu.REG_SPAJ
			      and mu_ke = 1
			      and MFS.REG_SPAJ_PRIMARY= mprd.REG_SPAJ (+)
			      and MPRD.MSBI_PREMI_KE(+) = 1
			      and MPRD.MSBI_TAHUN_KE(+) = 1
			      and MPI.LSBS_ID <![CDATA[<=]]> 300
			      and MFS.REG_SPAJ_PRIMARY = MTH.REG_SPAJ
			      and mp.lca_id=lr.lca_id
			      and mp.lwk_id=lr.lwk_id
			      and mp.lsrg_id=lr.lsrg_id
			      and lc.jalurdis = LJD.ID_DIST
			      and mrb.LRB_ID = LRBBC.LRB_ID
			      and LRBBC.leader_id = LRBam.LRB_ID (+)
			      <isNotEqual property="kanwil" compareValue="All">
			      AND trim(LCB.WIL_NO) = trim(#kanwil#)
			      </isNotEqual>
			      <isNotEqual property="produk" compareValue="All">
			      and MPI.LSBS_ID = trim(#produk#)
			      </isNotEqual>
			      and mp.mspo_input_date between #tanggalAwal# and #tanggalAkhir# 
		</isNotEqual>  		
		<isEqual property="produk" compareValue="183">
		select mp.reg_spaj, MFS.REG_SPAJ_PRIMARY , MFS.ROW_NUM, MFS.REG_SPAJ_FREE, MFS.PROCESS_TYPE,
			        (case when MFS.PROCESS_TYPE = 0 then 'WAITING APPROVAL' when MFS.PROCESS_TYPE = 1 then 'APPROVED' else 'REJECTED' end) Kriteria,
			         MFS.PROGRAM_TYPE ,
			         ljd.NAMA_DIST as channel1,lc.lca_nama|| '||'||lr.LSRG_NAMA as cabang1, 
			        MP.LCA_ID , lc.lca_nama channel,MRB.LCB_REFF, lr.LSRG_NAMA || ' || ' || lcb.nama_cabang cabang,LCB.WIL_NO , LCBWN.NAMA_CABANG kanwil,
			        EKA.UTILS.PEMEGANG (mp.reg_Spaj) AS pemegang,
			        EKA.UTILS.TERTANGGUNG (mp.reg_Spaj) AS tertanggung,
			        MPI.MSPR_PREMIUM Premi, MPI.MSPR_TSI UP , mpi.lsbs_id , MPI.LSDBS_NUMBER , LDB.LSDBS_NAME ,
			        mpi.MSPR_PREMIUM AS premi_pokok,       
			        (select mu_jlh_premi from eka.mst_ulink where reg_spaj = mp.reg_Spaj and lt_id = 2 AND mu_ke IN (1, 2, 3)) premi_pokok_tunggal,
			        (select mu_jlh_premi from eka.mst_ulink where reg_spaj = mp.reg_Spaj and lt_id = 5 AND mu_ke IN (1, 2, 3)) premi_pokok_berkala,
			        EKA.F_GET_APE_PROD(MPI.MSPR_PREMIUM, MP.LSCB_ID, 0, 1) APE_manual , MPRD.APE_PROD APE_system, mp.lku_id kurs,
			        (CASE WHEN ( MPRD.APE_PROD is not null) THEN  MPRD.APE_PROD ELSE EKA.F_GET_APE_PROD(MPI.MSPR_PREMIUM, MP.LSCB_ID, 0, 1) END) NILAI_APE,
			        EKA.UTILS.PAY_MODE(mp.lscb_id) cara_bayar,
			        EKA.UTILS.STATUS_POLIS(MP.lssp_ID) STATUS_POLIS,
			        EKA.UTILS.det_produk(mpi.lsbs_id, MPI.LSDBS_NUMBER ) produk,
			        MSPO_INPUT_DATE MSPO_INPUT_DATE_ORG,
			        to_char(MP.MSPO_INPUT_DATE , 'dd/mm/yyyy hh24:mi:ss') MSPO_INPUT_DATE,
			        to_char(MTH.TGL_TRANSFER_UW_SPEEDY , 'dd/mm/yyyy hh24:mi:ss') TGL_TRANSFER_UW_SPEEDY,
			        to_char(MTH.TGL_BACK_TO_BAS , 'dd/mm/yyyy hh24:mi:ss') TGL_BACK_TO_BAS,
			        to_char(MTH.TGL_BACK_TO_ADMIN , 'dd/mm/yyyy hh24:mi:ss') TGL_BACK_TO_ADMIN,
			        to_char(MTH.TGL_TRANSFER_UW , 'dd/mm/yyyy hh24:mi:ss') TGL_TRANSFER_UWPROSES,
			        to_char(MTH.TGL_FURTHER , 'dd/mm/yyyy hh24:mi:ss') TGL_FURTHER,
			        to_char(MTH.TGL_PRINT_POLIS , 'dd/mm/yyyy hh24:mi:ss') TGL_PRINT_POLIS,
			        to_char(MTH.TGL_KIRIM_POLIS , 'dd/mm/yyyy hh24:mi:ss') TGL_KIRIM_POLIS,
			        to_char(MTH.TGL_TTP , 'dd/mm/yyyy hh24:mi:ss') TGL_TTP,
			        (case when mi.FLAG_SPEEDY =1 then to_char(mth.tgl_akseptasi_polis,'dd/MM/yyyy hh24:mi:ss')else '' end )tgl_aksep_speedy,
			        (case when (mi.FLAG_SPEEDY =0 or mi.FLAG_SPEEDY is null ) 
			                    then to_char(mth.tgl_akseptasi_polis,'dd/MM/yyyy hh24:mi:ss')
			                    else (select to_char(pst.msps_date,'dd/MM/yyyy hh24:mi:ss') from eka.mst_position_Spaj pst where pst.reg_Spaj= mp.reg_Spaj and pst.msps_date=(select min(msps_date) from eka.mst_position_Spaj where reg_Spaj=pst.reg_Spaj and lssa_id=5 and lspd_id=2)) 
			              end )tgl_aksep_uwproses,
			        TO_CHAR (
			                (SELECT MIN (pst.msps_date)
			                   FROM eka.mst_position_spaj pst
			                  WHERE     pst.reg_spaj = mp.reg_Spaj
			                        AND pst.msps_desc LIKE '%KIRIM ENROLLMENT%'),
			                'dd/MM/yyyy hh24:mi:ss')
			                    tgl_enrollment_admedika,
			        TO_CHAR (
			                    (SELECT X.MSDP_INPUT_DATE
			                       FROM eka.mst_deposit_premium x
			                      WHERE x.msdp_number = 1 AND x.reg_Spaj = mp.reg_Spaj),
			                    'dd/MM/yyyy hh24:mi:ss')
			                    tgl_input_tp,
			        TO_CHAR (
			                    (SELECT MIN (yy.MSpa_INPUT_DATE)
			                       FROM eka.mst_payment yy
			                      WHERE     yy.reg_Spaj = mp.reg_spaj
			                            AND (yy.msdp_number = 1 OR yy.msdp_number IS NULL)),
			                    'dd/MM/yyyy hh24:mi:ss')
			                    tgl_input_payment_pertama,
			        TO_CHAR (mi.mste_tgl_spaj_doc, 'dd/MM/yyyy hh24:mi:ss') tgl_upload_scan,
			        TO_CHAR (mth.tgl_transfer_uw_print, 'dd/MM/yyyy hh24:mi:ss') tgl_transfer_print_polis,
			        TO_CHAR (mprd.mspro_prod_date, 'dd/MM/yyyy') tgl_produksi,
			        mspo_ao kode_ao, MRB.LRB_ID am_id , LRBBC.NAMA_REFF nama_bc , LRBBC.leader_id , LRBam.NAMA_REFF nama_am
			from eka.mst_free_spaj mfs,
			     eka.mst_policy mp,
			     eka.lst_cabang lc,
			     eka.mst_reff_bii mrb ,
			     eka.lst_cabang_bii lcb,
			     eka.lst_cabang_bii lcbwn,
			     eka.mst_insured mi,
			     eka.mst_product_insured mpi,
			     eka.lst_det_bisnis ldb,
			     eka.mst_ulink mu,
			     eka.mst_production mprd,
			     eka.mst_trans_history mth,
			     eka.lst_region lr,
			     eka.lst_jalur_dist ljd,
			     eka.lst_reff_bii lrbbc,
			     eka.lst_reff_bii lrbam
			where MFS.REG_SPAJ_FREE = MP.REG_SPAJ
			      and mp.lca_id = LC.LCA_ID
			      and MFS.REG_SPAJ_FREE = MRB.REG_SPAJ 
			      AND MRB.LEVEL_ID = 4
			      AND MRB.LCB_REFF = lcb.lcb_no
			      AND LCB.WIL_NO = LCBWN.LCB_NO(+)
			      and MFS.REG_SPAJ_FREE = Mi.REG_SPAJ
			      and MFS.REG_SPAJ_FREE = Mpi.REG_SPAJ
			      and mpi.lsbs_id = LDB.LSBS_ID
			      and MPI.LSDBS_NUMBER = LDB.LSDBS_NUMBER
			      and MFS.REG_SPAJ_FREE = Mu.REG_SPAJ (+)
			      and mu_ke(+) = 1
			      and MFS.REG_SPAJ_FREE= mprd.REG_SPAJ (+)
			      and MPRD.MSBI_PREMI_KE(+) = 1
			      and MPRD.MSBI_TAHUN_KE(+) = 1
			      and MPI.LSBS_ID <![CDATA[<=]]> 300
			      and MFS.REG_SPAJ_FREE = MTH.REG_SPAJ
			      and mp.lca_id=lr.lca_id
			      and mp.lwk_id=lr.lwk_id
			      and mp.lsrg_id=lr.lsrg_id
			      and lc.jalurdis = LJD.ID_DIST
			      and mrb.LRB_ID = LRBBC.LRB_ID
			      and LRBBC.leader_id = LRBam.LRB_ID (+)
			      <isNotEqual property="kanwil" compareValue="All">
			      AND trim(LCB.WIL_NO) = trim(#kanwil#)
			      </isNotEqual>
			      <isNotEqual property="produk" compareValue="All">
			      and MPI.LSBS_ID = trim(#produk#)
			      </isNotEqual>
			      and mp.mspo_input_date between #tanggalAwal# and #tanggalAkhir# 
		</isEqual> 
		</isNotEqual>
		<isEqual property="produk" compareValue="All">
		select mp.reg_spaj, MFS.REG_SPAJ_PRIMARY , MFS.ROW_NUM, MFS.REG_SPAJ_FREE, MFS.PROCESS_TYPE,
			        (case when MFS.PROCESS_TYPE = 0 then 'WAITING APPROVAL' when MFS.PROCESS_TYPE = 1 then 'APPROVED' else 'REJECTED' end) Kriteria,
			         MFS.PROGRAM_TYPE ,
			         ljd.NAMA_DIST as channel1,lc.lca_nama|| '||'||lr.LSRG_NAMA as cabang1, 
			        MP.LCA_ID , lc.lca_nama channel,MRB.LCB_REFF, lr.LSRG_NAMA || ' || ' || lcb.nama_cabang cabang,LCB.WIL_NO , LCBWN.NAMA_CABANG kanwil,
			        EKA.UTILS.PEMEGANG (mp.reg_Spaj) AS pemegang,
			        EKA.UTILS.TERTANGGUNG (mp.reg_Spaj) AS tertanggung,
			        MPI.MSPR_PREMIUM Premi, MPI.MSPR_TSI UP , mpi.lsbs_id , MPI.LSDBS_NUMBER , LDB.LSDBS_NAME ,
			        mpi.MSPR_PREMIUM AS premi_pokok,       
			        (select mu_jlh_premi from eka.mst_ulink where reg_spaj = mp.reg_Spaj and lt_id = 2 AND mu_ke IN (1, 2, 3)) premi_pokok_tunggal,
			        (select mu_jlh_premi from eka.mst_ulink where reg_spaj = mp.reg_Spaj and lt_id = 5 AND mu_ke IN (1, 2, 3)) premi_pokok_berkala,
			        EKA.F_GET_APE_PROD(MPI.MSPR_PREMIUM, MP.LSCB_ID, 0, 1) APE_manual , MPRD.APE_PROD APE_system, mp.lku_id kurs,
			        (CASE WHEN ( MPRD.APE_PROD is not null) THEN  MPRD.APE_PROD ELSE EKA.F_GET_APE_PROD(MPI.MSPR_PREMIUM, MP.LSCB_ID, 0, 1) END) NILAI_APE,
			        EKA.UTILS.PAY_MODE(mp.lscb_id) cara_bayar,
			        EKA.UTILS.STATUS_POLIS(MP.lssp_ID) STATUS_POLIS,
			        EKA.UTILS.det_produk(mpi.lsbs_id, MPI.LSDBS_NUMBER ) produk,
			        MSPO_INPUT_DATE MSPO_INPUT_DATE_ORG,
			        to_char(MP.MSPO_INPUT_DATE , 'dd/mm/yyyy hh24:mi:ss') MSPO_INPUT_DATE,
			        to_char(MTH.TGL_TRANSFER_UW_SPEEDY , 'dd/mm/yyyy hh24:mi:ss') TGL_TRANSFER_UW_SPEEDY,
			        to_char(MTH.TGL_BACK_TO_BAS , 'dd/mm/yyyy hh24:mi:ss') TGL_BACK_TO_BAS,
			        to_char(MTH.TGL_BACK_TO_ADMIN , 'dd/mm/yyyy hh24:mi:ss') TGL_BACK_TO_ADMIN,
			        to_char(MTH.TGL_TRANSFER_UW , 'dd/mm/yyyy hh24:mi:ss') TGL_TRANSFER_UWPROSES,
			        to_char(MTH.TGL_FURTHER , 'dd/mm/yyyy hh24:mi:ss') TGL_FURTHER,
			        to_char(MTH.TGL_PRINT_POLIS , 'dd/mm/yyyy hh24:mi:ss') TGL_PRINT_POLIS,
			        to_char(MTH.TGL_KIRIM_POLIS , 'dd/mm/yyyy hh24:mi:ss') TGL_KIRIM_POLIS,
			        to_char(MTH.TGL_TTP , 'dd/mm/yyyy hh24:mi:ss') TGL_TTP,
			        (case when mi.FLAG_SPEEDY =1 then to_char(mth.tgl_akseptasi_polis,'dd/MM/yyyy hh24:mi:ss')else '' end )tgl_aksep_speedy,
			        (case when (mi.FLAG_SPEEDY =0 or mi.FLAG_SPEEDY is null ) 
			                    then to_char(mth.tgl_akseptasi_polis,'dd/MM/yyyy hh24:mi:ss')
			                    else (select to_char(pst.msps_date,'dd/MM/yyyy hh24:mi:ss') from eka.mst_position_Spaj pst where pst.reg_Spaj= mp.reg_Spaj and pst.msps_date=(select min(msps_date) from eka.mst_position_Spaj where reg_Spaj=pst.reg_Spaj and lssa_id=5 and lspd_id=2)) 
			              end )tgl_aksep_uwproses,
			        TO_CHAR (
			                (SELECT MIN (pst.msps_date)
			                   FROM eka.mst_position_spaj pst
			                  WHERE     pst.reg_spaj = mp.reg_Spaj
			                        AND pst.msps_desc LIKE '%KIRIM ENROLLMENT%'),
			                'dd/MM/yyyy hh24:mi:ss')
			                    tgl_enrollment_admedika,
			        TO_CHAR (
			                    (SELECT X.MSDP_INPUT_DATE
			                       FROM eka.mst_deposit_premium x
			                      WHERE x.msdp_number = 1 AND x.reg_Spaj = mp.reg_Spaj),
			                    'dd/MM/yyyy hh24:mi:ss')
			                    tgl_input_tp,
			        TO_CHAR (
			                    (SELECT MIN (yy.MSpa_INPUT_DATE)
			                       FROM eka.mst_payment yy
			                      WHERE     yy.reg_Spaj = mp.reg_spaj
			                            AND (yy.msdp_number = 1 OR yy.msdp_number IS NULL)),
			                    'dd/MM/yyyy hh24:mi:ss')
			                    tgl_input_payment_pertama,
			        TO_CHAR (mi.mste_tgl_spaj_doc, 'dd/MM/yyyy hh24:mi:ss') tgl_upload_scan,
			        TO_CHAR (mth.tgl_transfer_uw_print, 'dd/MM/yyyy hh24:mi:ss') tgl_transfer_print_polis,
			        TO_CHAR (mprd.mspro_prod_date, 'dd/MM/yyyy') tgl_produksi,
			        mspo_ao kode_ao, MRB.LRB_ID am_id , LRBBC.NAMA_REFF nama_bc , LRBBC.leader_id , LRBam.NAMA_REFF nama_am
			from eka.mst_free_spaj mfs,
			     eka.mst_policy mp,
			     eka.lst_cabang lc,
			     eka.mst_reff_bii mrb ,
			     eka.lst_cabang_bii lcb,
			     eka.lst_cabang_bii lcbwn,
			     eka.mst_insured mi,
			     eka.mst_product_insured mpi,
			     eka.lst_det_bisnis ldb,
			     eka.mst_ulink mu,
			     eka.mst_production mprd,
			     eka.mst_trans_history mth,
			     eka.lst_region lr,
			     eka.lst_jalur_dist ljd,
			     eka.lst_reff_bii lrbbc,
			     eka.lst_reff_bii lrbam
			where MFS.REG_SPAJ_PRIMARY = MP.REG_SPAJ
			      and mp.lca_id = LC.LCA_ID
			      and MFS.REG_SPAJ_PRIMARY = MRB.REG_SPAJ 
			      AND MRB.LEVEL_ID = 4
			      AND MRB.LCB_REFF = lcb.lcb_no
			      AND LCB.WIL_NO = LCBWN.LCB_NO(+)
			      and MFS.REG_SPAJ_PRIMARY = Mi.REG_SPAJ
			      and MFS.REG_SPAJ_PRIMARY = Mpi.REG_SPAJ
			      and mpi.lsbs_id = LDB.LSBS_ID
			      and MPI.LSDBS_NUMBER = LDB.LSDBS_NUMBER
			      and MFS.REG_SPAJ_PRIMARY = Mu.REG_SPAJ
			      and mu_ke = 1
			      and MFS.REG_SPAJ_PRIMARY= mprd.REG_SPAJ (+)
			      and MPRD.MSBI_PREMI_KE(+) = 1
			      and MPRD.MSBI_TAHUN_KE(+) = 1
			      and MPI.LSBS_ID <![CDATA[<=]]> 300
			      and MFS.REG_SPAJ_PRIMARY = MTH.REG_SPAJ
			      and mp.lca_id=lr.lca_id
			      and mp.lwk_id=lr.lwk_id
			      and mp.lsrg_id=lr.lsrg_id
			      and lc.jalurdis = LJD.ID_DIST
			      and mrb.LRB_ID = LRBBC.LRB_ID
			      and LRBBC.leader_id = LRBam.LRB_ID (+)
			      <isNotEqual property="kanwil" compareValue="All">
			      AND trim(LCB.WIL_NO) = trim(#kanwil#)
			      </isNotEqual>
			      and mp.mspo_input_date between #tanggalAwal# and #tanggalAkhir# 
		union
		select mp.reg_spaj, MFS.REG_SPAJ_PRIMARY , MFS.ROW_NUM, MFS.REG_SPAJ_FREE, MFS.PROCESS_TYPE,
			        (case when MFS.PROCESS_TYPE = 0 then 'WAITING APPROVAL' when MFS.PROCESS_TYPE = 1 then 'APPROVED' else 'REJECTED' end) Kriteria,
			         MFS.PROGRAM_TYPE ,
			         ljd.NAMA_DIST as channel1,lc.lca_nama|| '||'||lr.LSRG_NAMA as cabang1, 
			        MP.LCA_ID , lc.lca_nama channel,MRB.LCB_REFF, lr.LSRG_NAMA || ' || ' || lcb.nama_cabang cabang,LCB.WIL_NO , LCBWN.NAMA_CABANG kanwil,
			        EKA.UTILS.PEMEGANG (mp.reg_Spaj) AS pemegang,
			        EKA.UTILS.TERTANGGUNG (mp.reg_Spaj) AS tertanggung,
			        MPI.MSPR_PREMIUM Premi, MPI.MSPR_TSI UP , mpi.lsbs_id , MPI.LSDBS_NUMBER , LDB.LSDBS_NAME ,
			        mpi.MSPR_PREMIUM AS premi_pokok,       
			        (select mu_jlh_premi from eka.mst_ulink where reg_spaj = mp.reg_Spaj and lt_id = 2 AND mu_ke IN (1, 2, 3)) premi_pokok_tunggal,
			        (select mu_jlh_premi from eka.mst_ulink where reg_spaj = mp.reg_Spaj and lt_id = 5 AND mu_ke IN (1, 2, 3)) premi_pokok_berkala,
			        EKA.F_GET_APE_PROD(MPI.MSPR_PREMIUM, MP.LSCB_ID, 0, 1) APE_manual , MPRD.APE_PROD APE_system, mp.lku_id kurs,
			        (CASE WHEN ( MPRD.APE_PROD is not null) THEN  MPRD.APE_PROD ELSE EKA.F_GET_APE_PROD(MPI.MSPR_PREMIUM, MP.LSCB_ID, 0, 1) END) NILAI_APE,
			        EKA.UTILS.PAY_MODE(mp.lscb_id) cara_bayar,
			        EKA.UTILS.STATUS_POLIS(MP.lssp_ID) STATUS_POLIS,
			        EKA.UTILS.det_produk(mpi.lsbs_id, MPI.LSDBS_NUMBER ) produk,
			        MSPO_INPUT_DATE MSPO_INPUT_DATE_ORG,
			        to_char(MP.MSPO_INPUT_DATE , 'dd/mm/yyyy hh24:mi:ss') MSPO_INPUT_DATE,
			        to_char(MTH.TGL_TRANSFER_UW_SPEEDY , 'dd/mm/yyyy hh24:mi:ss') TGL_TRANSFER_UW_SPEEDY,
			        to_char(MTH.TGL_BACK_TO_BAS , 'dd/mm/yyyy hh24:mi:ss') TGL_BACK_TO_BAS,
			        to_char(MTH.TGL_BACK_TO_ADMIN , 'dd/mm/yyyy hh24:mi:ss') TGL_BACK_TO_ADMIN,
			        to_char(MTH.TGL_TRANSFER_UW , 'dd/mm/yyyy hh24:mi:ss') TGL_TRANSFER_UWPROSES,
			        to_char(MTH.TGL_FURTHER , 'dd/mm/yyyy hh24:mi:ss') TGL_FURTHER,
			        to_char(MTH.TGL_PRINT_POLIS , 'dd/mm/yyyy hh24:mi:ss') TGL_PRINT_POLIS,
			        to_char(MTH.TGL_KIRIM_POLIS , 'dd/mm/yyyy hh24:mi:ss') TGL_KIRIM_POLIS,
			        to_char(MTH.TGL_TTP , 'dd/mm/yyyy hh24:mi:ss') TGL_TTP,
			        (case when mi.FLAG_SPEEDY =1 then to_char(mth.tgl_akseptasi_polis,'dd/MM/yyyy hh24:mi:ss')else '' end )tgl_aksep_speedy,
			        (case when (mi.FLAG_SPEEDY =0 or mi.FLAG_SPEEDY is null ) 
			                    then to_char(mth.tgl_akseptasi_polis,'dd/MM/yyyy hh24:mi:ss')
			                    else (select to_char(pst.msps_date,'dd/MM/yyyy hh24:mi:ss') from eka.mst_position_Spaj pst where pst.reg_Spaj= mp.reg_Spaj and pst.msps_date=(select min(msps_date) from eka.mst_position_Spaj where reg_Spaj=pst.reg_Spaj and lssa_id=5 and lspd_id=2)) 
			              end )tgl_aksep_uwproses,
			        TO_CHAR (
			                (SELECT MIN (pst.msps_date)
			                   FROM eka.mst_position_spaj pst
			                  WHERE     pst.reg_spaj = mp.reg_Spaj
			                        AND pst.msps_desc LIKE '%KIRIM ENROLLMENT%'),
			                'dd/MM/yyyy hh24:mi:ss')
			                    tgl_enrollment_admedika,
			        TO_CHAR (
			                    (SELECT X.MSDP_INPUT_DATE
			                       FROM eka.mst_deposit_premium x
			                      WHERE x.msdp_number = 1 AND x.reg_Spaj = mp.reg_Spaj),
			                    'dd/MM/yyyy hh24:mi:ss')
			                    tgl_input_tp,
			        TO_CHAR (
			                    (SELECT MIN (yy.MSpa_INPUT_DATE)
			                       FROM eka.mst_payment yy
			                      WHERE     yy.reg_Spaj = mp.reg_spaj
			                            AND (yy.msdp_number = 1 OR yy.msdp_number IS NULL)),
			                    'dd/MM/yyyy hh24:mi:ss')
			                    tgl_input_payment_pertama,
			        TO_CHAR (mi.mste_tgl_spaj_doc, 'dd/MM/yyyy hh24:mi:ss') tgl_upload_scan,
			        TO_CHAR (mth.tgl_transfer_uw_print, 'dd/MM/yyyy hh24:mi:ss') tgl_transfer_print_polis,
			        TO_CHAR (mprd.mspro_prod_date, 'dd/MM/yyyy') tgl_produksi,
			        mspo_ao kode_ao, MRB.LRB_ID am_id , LRBBC.NAMA_REFF nama_bc , LRBBC.leader_id , LRBam.NAMA_REFF nama_am
			from eka.mst_free_spaj mfs,
			     eka.mst_policy mp,
			     eka.lst_cabang lc,
			     eka.mst_reff_bii mrb ,
			     eka.lst_cabang_bii lcb,
			     eka.lst_cabang_bii lcbwn,
			     eka.mst_insured mi,
			     eka.mst_product_insured mpi,
			     eka.lst_det_bisnis ldb,
			     eka.mst_ulink mu,
			     eka.mst_production mprd,
			     eka.mst_trans_history mth,
			     eka.lst_region lr,
			     eka.lst_jalur_dist ljd,
			     eka.lst_reff_bii lrbbc,
			     eka.lst_reff_bii lrbam
			where MFS.REG_SPAJ_FREE = MP.REG_SPAJ
			      and mp.lca_id = LC.LCA_ID
			      and MFS.REG_SPAJ_FREE = MRB.REG_SPAJ 
			      AND MRB.LEVEL_ID = 4
			      AND MRB.LCB_REFF = lcb.lcb_no
			      AND LCB.WIL_NO = LCBWN.LCB_NO(+)
			      and MFS.REG_SPAJ_FREE = Mi.REG_SPAJ
			      and MFS.REG_SPAJ_FREE = Mpi.REG_SPAJ
			      and mpi.lsbs_id = LDB.LSBS_ID
			      and MPI.LSDBS_NUMBER = LDB.LSDBS_NUMBER
			      and MFS.REG_SPAJ_FREE = Mu.REG_SPAJ (+)
			      and mu_ke(+) = 1
			      and MFS.REG_SPAJ_FREE= mprd.REG_SPAJ (+)
			      and MPRD.MSBI_PREMI_KE(+) = 1
			      and MPRD.MSBI_TAHUN_KE(+) = 1
			      and MPI.LSBS_ID <![CDATA[<=]]> 300
			      and MFS.REG_SPAJ_FREE = MTH.REG_SPAJ
			      and mp.lca_id=lr.lca_id
			      and mp.lwk_id=lr.lwk_id
			      and mp.lsrg_id=lr.lsrg_id
			      and lc.jalurdis = LJD.ID_DIST
			      and mrb.LRB_ID = LRBBC.LRB_ID
			      and LRBBC.leader_id = LRBam.LRB_ID (+)
			      <isNotEqual property="kanwil" compareValue="All">
			      AND trim(LCB.WIL_NO) = trim(#kanwil#)
			      </isNotEqual>
			      and mp.mspo_input_date between #tanggalAwal# and #tanggalAkhir# 
		</isEqual>
		) data
		order by data.MSPO_INPUT_DATE_ORG asc
	</select>
	
	<select id="elions.bac.selectProductDMTMDS" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		select distinct lsbs_id key,
			(case when lsbs_id = 163 then 'DANA SEJAHTERA' 
        	when lsbs_id = 183 then 'SMiLe MEDICAL'
        	when lsbs_id = 189 then 'SMiLe MEDICAL SYARIAH'
        	when lsbs_id = 195 then 'SMiLe HOSPITAL PLUS' else '' end)  value
         from eka.lst_det_bisnis where lsbs_id in (163, 183, 189, 195 )
		order by key
	</select>
	
	<select id="elions.bac.selectReportProductDMTMDS" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
	SELECT Nama_Pemegang_Polis, Nomor_SPAJ, No_Polis,Nama_Produk, Kode_Agen, Nama_Agent, No_Rek_Autodebit, Tgl_Bayar_Premi_Pertama, Uang_Pertanggungan, Premi,
	APE, Premi_Ke, Last_Debet, Total_Paid,  Total_Aging, Status_Police, Status_Akseptasi, Keterangan FROM (
		select EKA.UTILS.PEMEGANG(a.reg_spaj) Nama_Pemegang_Polis, 
	       a.reg_spaj Nomor_SPAJ, a.mspo_policy_no No_Polis, 
	       EKA.UTILS.det_produk(c.lsbs_id, c.lsdbs_number) Nama_Produk,b.MSAG_ID Kode_Agen,
	       EKA.UTILS.AGEN(b.MSAG_ID) Nama_Agent, d.mar_acc_no No_Rek_Autodebit, to_char(c.mspr_beg_date ,'dd/MM/yyyy') Tgl_Bayar_Premi_Pertama,
	       c.mspr_tsi Uang_Pertanggungan, c.mspr_premium Premi,
	       (select sum(ape_kontes) from eka.mst_production where reg_spaj= a.reg_spaj and mspro_jn_prod = 1) APE,
	       (select  max(MSBI_PREMI_KE) from eka.mst_billing where reg_spaj= a.reg_spaj and msbi_paid = 1) Premi_Ke,
	       to_char((select  max(MSBI_PAID_DATE) from eka.mst_billing where reg_spaj= a.reg_spaj and msbi_paid = 1)  ,'dd/MM/yyyy')Last_Debet,
	       (select  (max(MSBI_PREMI_KE) * c.mspr_premium) from eka.mst_billing where reg_spaj= a.reg_spaj and msbi_paid = 1) Total_Paid,
	       (select  sum(msbi_remain)  from eka.mst_billing where reg_spaj= a.reg_spaj and msbi_paid = 0) Total_Aging,
	       e.lssp_status Status_Police,
	       (select sa.status_accept from EKA.LST_STATUS_ACCEPT sa , EKA.MST_INSURED mi where sa.lssa_id = mi.lssa_id and MI.REG_SPAJ = a.reg_spaj) Status_Akseptasi,
	       '' Keterangan
	 	from eka.mst_policy a ,EKA.MST_AGENT_PROD b, eka.mst_product_insured c, eka.mst_account_recur d  , eka.LST_POLICY_STATUS e
	 	where 
	        a.reg_spaj = b.reg_spaj
	        and a.reg_spaj = c.reg_spaj
	        and a.reg_spaj = d.reg_spaj
	        and lsle_id = 4
	        <isNotEqual property="produk" compareValue="All">
	        and c.lsbs_id =  #produk# 
	        </isNotEqual>
	        <isEqual property="produk" compareValue="All">
	        and c.lsbs_id in (163, 183, 189, 195) 
	        </isEqual>
	        and a.lspd_id <![CDATA[<>]]> 95
	        and a.lca_id =40
			and a.lssp_id= e.lssp_id 
		<isNotNull property="kdagen">
			and  b.MSAG_ID = #kdagen#
		</isNotNull>
		order by EKA.UTILS.PEMEGANG(a.reg_spaj))
	</select>
	
	<select id="elions.bac.selectDetailKartuPasBSMIB" resultClass="java.util.HashMap" parameterClass="string">
        select
		    a.*,
		    (case when a.jenis = 0 then b.lsdbs_number else c.plan end) plan,
		    (case when a.jenis = 0 then b.lsdbs_name else c.nama_plan end) nama_plan,
		    (case when a.jenis = 0 then b.mpi_mou else d.no_polis end) no_polis_induk
		from
		    eka.mst_kartu_pas a,
		    eka.lst_det_bisnis b,
		    eka.lst_tm_proddet@eb c,
		    eka.lst_tm_product@eb d
		where
		    a.product_code = b.lsbs_id(+)
		    and a.product_sub_code = b.lsdbs_number(+)
		    and a.product_code = c.product_code(+)
		    and a.product_sub_code = c.plan(+)
		    and a.product_code = d.product_code(+)
		    and a.produk = '16'
		    and a.no_kartu like '%' || #value#
    </select>
    
    <select id="elions.bac.selectSequenceClientID" resultClass="string"> 		 
		SELECT EKA.PAC_COUNTER.GET_CLIENT_ID () FROM DUAL 	
	</select>
	
	<select id="elions.bac.selectSeqNoSpaj" resultClass="string" parameterClass="string"> 		 
		select EKA.PAC_COUNTER.GET_NO_SPAJ_SEQ ( #value# ) from DUAL
	</select>
	
	<select id="elions.bac.selectMst_Crp_Result" parameterClass="string" resultClass="java.util.HashMap">
		select * from EKA.MST_CRP_RESULT where reg_spaj =  RPAD (REPLACE (#regspaj#, '.'), 11, ' ') order by reg_spaj , question_id asc
	</select>
	
	<select id="elions.bac.selectMst_Crp_Result_ESPAJ" parameterClass="string" resultClass="java.util.HashMap">
		select MST.REG_SPAJ , MCT.NO_TEMP , MCT.QUESTION_ID , MCT.ANSWER_ID , MCT.RESULT 
		from EKA.MST_CRP_TEMP mct , eka.mst_spaj_temp mst
		where MST.NO_TEMP = MCT.NO_TEMP
		and MST.REG_SPAJ = RPAD (REPLACE (#regspaj#, '.'), 11, ' ')	
		order by question_id	
	</select>
	
	<select id="elions.bac.selectlistAMLCFT_Monitoring" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		Select *
		From (	   select mp.mspo_input_date , mp.reg_spaj , EKA.UTILS.GRUP_BISNIS(mp.lstb_id) Jenis_nasabah,
			       EKA.UTILS.PEMEGANG(mp.reg_spaj) pemegang ,MP.MSPO_POLICY_HOLDER, EKA.UTILS.TERTANGGUNG(mp.reg_spaj) tertanggung ,
			       EKA.UTILS.det_PRODUK(MPI.LSBS_ID,MPI.LSDBS_NUMBER) produk,
			       MI.MSTE_BEG_DATE, MI.MSTE_END_DATE , EKA.UTILS.KURS_SIMBOL(mp.lku_id) kurs,
			       MPI.MSPR_PREMIUM , nvl(MU1.MU_JLH_PREMI,0) Premi_pokok ,
			       nvl(MU2.MU_JLH_PREMI,0) topup_tunggal ,nvl(MU5.MU_JLH_PREMI,0) topup_berkala,
			       MAN.KOTA_RUMAH  , MCN.MKL_KERJA , MCN.LJB_ID , LJ.LJB_NOTE jabatan,MCN.MPN_JOB_DESC, MCN.MKL_INDUSTRI bidang_usaha,
			       MCN.MKL_PENGHASILAN , MCN.MKL_PENDANAAN , MCN.MKL_TUJUAN,
			       lne.LSNE_ID, LNE.LSNE_NOTE negara,
			       MCN.MCL_COMPANY_NAME , MCN.MCL_COMPANY_PAYER,
			       EKA.UTILS.STATUS_POLIS(mp.lssp_id) status_policy , EKA.UTILS.POSISI_POLIS(MP.LSPD_ID) posisi_polis,
			       (select nvl(count(b.reg_spaj),0)
			        from eka.mst_client_new a
			            , eka.mst_policy b
			            , eka.mst_insured c
			        where b.reg_spaj = mp.reg_spaj
			            and b.reg_spaj = c.reg_spaj
			            and 
			                (a.mcl_id=b.mspo_policy_holder 
			                    or a.mcl_id=c.mste_insured )
			            and exists
			            (
			                select lbl_nama from eka.lst_black_list where (trim(lbl_nama)=trim(a.mcl_first) or upper(trim(lbl_nama_alias_1)) = upper(trim(a.mcl_first)) 
			                    or upper(trim(lbl_nama_alias_2)) = upper(trim(a.mcl_first)) or upper(trim(lbl_nama_alias_3)) = upper(trim(a.mcl_first))
			                    or upper(trim(lbl_nama_alias_4)) = upper(trim(a.mcl_first)) or upper(trim(lbl_nama_alias_5)) = upper(trim(a.mcl_first))) and lbl_tgl_lahir = a.MSPE_DATE_BIRTH 
			                    and lbl_flag_alasan = 6 and rownum = 1
			            ) and rownum = 1) black_list_terorist,
			            (case when MCN.MKL_KERJA in ('BURUH','IBU RUMAH TANGGA','JASA','KARYAWAN SWASTA','PELAJAR','PEMASARAN','PEMILIK/PENGUSAHA','PROFESIONAL') then 999999 
			                   when MCN.MKL_KERJA in ('AKUNTAN/KONSULTASI KEUANGAN','HAKIM','PNS','PEJABAT NEGARA','PENGACARA/ADVOKAT','POLRI','TNI')  then 666666 
			                   else LP.LSP_ID end ) LSP_ID,
			            (case when LP.LSP_ID in (9,10,28,31,55,56,65,70,76,79,96,97,106,128,129,130,137,138,145,146,148,152,169,170,172,173,174,175,176,185,186,187,188,192,193,205,228,230,231,232,235,236,237,247,265,283,306,308,309,316,325,326,327,328,329,332) then 1 
			                   when MCN.MKL_KERJA in ('AKUNTAN/KONSULTASI KEUANGAN','HAKIM','PNS','PEJABAT NEGARA','PENGACARA/ADVOKAT','POLRI','TNI') then 1 else 0 end ) pekerjaan_hr,
			            (case when mcn.ljb_id in ('002','003','004','005','008','010','014','015','016','020','021','022') then 1 else 0 end) LJB_jabatan_hr,
			            (case when MCN.MPN_JOB_DESC like 'SUPERVISOR%' or MCN.MPN_JOB_DESC like 'MANAGER%' 
			                        or MCN.MPN_JOB_DESC like 'GENERAL MANAGER%' or MCN.MPN_JOB_DESC like 'DIREKTUR%'
			                        or MCN.MPN_JOB_DESC like 'DOSEN%' or MCN.MPN_JOB_DESC like 'ABRI%'
			                        or MCN.MPN_JOB_DESC like 'PENGACARA%' or MCN.MPN_JOB_DESC like 'KOMISARIS%'
			                        or MCN.MPN_JOB_DESC like 'UNIT MANAGER%' or MCN.MPN_JOB_DESC like 'MKT. MANAGER%'
			                        or MCN.MPN_JOB_DESC like 'KONSULTAN%' 
			                  then 1 
			                  else 0 end) jabatan_hr,
			            (case when upper(MCN.MKL_PENDANAAN) like '%WARISAN%' then 1 else 0 end) pendanaan_hr,
			            (case when upper(lne.LSNE_ID) in (7,12,19,23,24,30,31,33,34,36,38,39,40) then 1 else 0 end) negara_hr,
			            (case when upper(MCN.MKL_INDUSTRI) in ('JASA KEUANGAN','KONSTRUKSI','PEMERINTAHAN','PERTAMBANGAN') then 1 else 0 end) bidang_usaha_hr            
					from eka.mst_policy mp ,
					     eka.mst_insured mi,
					     eka.mst_product_insured mpi,
					     eka.mst_ulink mu1,
					     eka.mst_ulink mu2,
					     eka.mst_ulink mu5,
					     EKA.MST_ADDRESS_NEW man,
					     eka.mst_client_new mcn,
					     EKA.LST_JABATAN lj,
					     EKA.LST_NEGARA lne,
					     EKA.LST_PEKERJAAN lp
					where mp.lstb_id = 1
					    and MP.REG_SPAJ = MI.REG_SPAJ
					    and MP.REG_SPAJ = MPI.REG_SPAJ
					    and MPI.LSBS_ID  <![CDATA[ <= ]]>300
					    and MP.REG_SPAJ = MU1.REG_SPAJ (+)
					    and MU1.lt_id(+) = 1
					    and MP.REG_SPAJ = MU2.REG_SPAJ (+)
					    and MU2.lt_id(+) = 2
					    and MP.REG_SPAJ = MU5.REG_SPAJ (+)
					    and MU5.lt_id(+) = 5
					    and MP.MSPO_POLICY_HOLDER = MAN.MCL_ID
					    and MP.MSPO_POLICY_HOLDER = MCN.MCL_ID
					    and MCN.LJB_ID = LJ.LJB_ID (+)
					    and MCN.LSNE_ID = lne.LSNE_ID(+)
					    and upper(MCN.MKL_KERJA) = upper(LP.LSP_NAME(+)) 
						and trunc(mp.mspo_input_date) <![CDATA[ >= ]]>  to_date(#dariTanggal#,'dd/MM/yyyy')
					   	and trunc(mp.mspo_input_date) <![CDATA[ <= ]]>  to_date(#sampaiTanggal#,'dd/MM/yyyy')) datahighrisk
		where (datahighrisk.black_list_terorist > 0 
		        or datahighrisk.pekerjaan_hr > 0 
		        or datahighrisk.jabatan_hr > 0 
		        or datahighrisk.pendanaan_hr > 0 
		        or datahighrisk.negara_hr > 0 
		        or datahighrisk.Bidang_usaha_hr > 0 )
		order by datahighrisk.mspo_input_date
	</select>
	
	<select id="elions.bac.cekKodeCabang" resultClass="string" parameterClass="string"> 		 
		select upper(nama_cabang) from eka.lst_cabang_bii cb
            where jenis = 2 
            and flag_aktif = 1
            and upper(kode) not in ('00A','00B')
            and substr(upper(kode),1,1) not in ('A')
            and upper(kode) = #kode#
            and rownum =1
	</select>
	
	<select id="elions.bac.selectSnowsDireksi" resultClass="java.util.HashMap" parameterClass="java.util.HashMap"> 
		SELECT * FROM(
        SELECT AA1.KODE_ID,AA1.KET,AA1.EMAIL_KIRIM_CC,AA1.EMAIL_KIRIM_TO,AA1.SUBJECT_KIRIM,AA1.SUBJECT_KIRIM_INFO,AA1.EMAIL_APPROVE_TO,AA1.EMAIL_APPROVE_CC,AA1.SUBJECT_APPROVE,AA1.LUS_AKSEPTOR_1,
        AA1.PATH_TTD_1,AA1.EMAIL_AKSEPTOR_1,AA1.SENDER_NAME,AA1.POST_DESC,AA1.POST_JN_DESC,AA1.POST_DESC_APPROVE, AA1.LUS_AKSEPTOR_2, AA1.EMAIL_AKSEPTOR_2, AA1.PATH_TTD_2, 
        AA1.NAME_AKSEPTOR_1, AA2.NAME_AKSEPTOR_2, AA1.EMAIL_CC_AKSEPTOR_2 FROM 
        (SELECT APP.*, LS.LUS_FULL_NAME NAME_AKSEPTOR_1 FROM EKA.MST_INBOX_APPROVAL APP, EKA.LST_USER LS
        WHERE APP.LUS_AKSEPTOR_1 = LS.LUS_ID)AA1
        LEFT JOIN
        (SELECT LU.LUS_FULL_NAME AS NAME_AKSEPTOR_2 , KODE_ID FROM EKA.MST_INBOX_APPROVAL MIA, EKA.LST_USER LU
         WHERE MIA.LUS_AKSEPTOR_2 = LU.LUS_ID)AA2
        ON AA1.KODE_ID = AA2.KODE_ID) PP
        WHERE PP.KODE_ID = #jns#
	</select>
	
	<select id="elions.bac.selectPlanSmileMedicalPlus" parameterClass="java.util.HashMap" resultMap="elions.bac.result.selectPlanSmileMedicalPlus">
		select DISTINCT (case when D.lsdbs_name like '%COPPER%' then 'COPPER' 
						 	 when D.lsdbs_name like '%BRONZE%' then 'BRONZE'
							 when D.lsdbs_name like '%SILVER%' then 'SILVER'
							 when D.lsdbs_name like '%SAPPHIRE%' then 'SAPPHIRE'
							 when D.lsdbs_name like '%DIAMOND%' then 'DIAMOND'
							 when D.lsdbs_name like '%PLATINUM%' then 'PLATINUM'
		else '' end) jenis  
	    from eka.mst_product_insured a, eka.mst_peserta  b, eka.mst_insured c, EKA.LST_DET_BISNIS D
	    where   A.REG_SPAJ = b.reg_spaj(+) 
	        and a.lsdbs_number = b.lsdbs_number(+) 
	        AND A.REG_SPAJ = C.reg_spaj        
	        AND a.lsbs_id = #lsbs_id#
	       AND A.LSBS_ID = D.LSBS_ID
	       AND A.lsdbs_number = D.lsdbs_number
	      AND A.REG_SPAJ = rpad(#spaj#,11,' ')
	       AND D.lsdbs_name like upper('%'||#lsdbs_name_plan#||'%')	
	        
	</select>
	
		
	<select id="elions.bac.selectDistibusiData" resultClass="id.co.sinarmaslife.std.model.vo.DropDown">	
		select  '00' as key
	          	,'------PILIH DISTRIBUSI---------' as value
		from   	EKA.LST_DISTRIBUSI
		where 	rownum = 1
		union all
		select  kode
	          	,nama 
		from   	EKA.LST_DISTRIBUSI
	</select>
	
	<select id="elions.bac.selectDistibusi2Data" resultClass="id.co.sinarmaslife.std.model.vo.DropDown">	
		select  '00' as key
	          	,'------PILIH DISTRIBUSI---------' as value
		from   	EKA.LST_DISTRIBUSI_2
		where 	rownum = 1
		union all
		select  kode
	          	,nama 
		from   	EKA.LST_DISTRIBUSI_2
	</select>
	
	<select id="elions.bac.selectUploadSpajTempConf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select  VALIDASI_MIN_UP
	            ,VALIDASI_MIN_PREMI
	            ,PROSES_DATA_USULAN_SIO
	            ,AUTOACCEPTED
		from    eka.LST_UPLOAD_SPAJ_TEMP_CONF
		where  	LSBS_ID  = #LSBS_ID#
		and     LSDBS_NUMBER = #LSDBS_NUMBER#
    </select>
	
	<select id="elions.bac.selectDropDownDaftarPesertaSMP" resultClass="id.co.sinarmaslife.std.model.vo.DropDown" parameterClass="string">	
		select a.no_urut+1 key , a.flag_jenis_peserta,
		       (case when flag_jenis_peserta=1 then 'TERTANGGUNG/PESERTA II'
		             when flag_jenis_peserta=2 then 'TERTANGGUNG/PESERTA III'
		             when flag_jenis_peserta=3 then 'TERTANGGUNG/PESERTA IV'
		             when flag_jenis_peserta=4 then 'TERTANGGUNG/PESERTA V'
		             else 'TERTANGGUNG/PESERTA UTAMA'end)value
		from  eka.mst_peserta a
        where 
             a.reg_Spaj = rpad(#spaj#,11,' ')
             and no_urut = (select min(no_urut) from eka.mst_peserta 
                            where reg_spaj = a.reg_spaj 
                                  and flag_jenis_peserta = a.flag_jenis_peserta)  
	</select>
	
	<select id="elions.bac.selectBillingCount" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT (reg_spaj) 
		from eka.mst_billing 
		where reg_spaj = rpad(replace(#spaj#,'.'),11,' ') 
				AND msbi_tahun_ke = #tahun# and msbi_nb = 1
	 		
	</select>
	
	<select id="elions.bac.selectDetailBilling" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		select MB.REG_SPAJ ,MB.MSBI_PREMI_KE, MDB.MSDB_PREMIUM , nvl(MB.MSBI_FLAG_TOPUP, 0) MSBI_FLAG_TOPUP ,MB.LKU_ID,
         (select mspro_prod_date from eka.mst_production where reg_spaj = mb.reg_spaj and msbi_tahun_ke = 1 and msbi_premi_ke =1) tgl_production
		from eka.mst_billing  mb, eka.mst_det_billing mdb, EKA.MST_POLICY mp
		where MB.REG_SPAJ = mdb.reg_spaj
		      and MB.REG_SPAJ = MP.REG_SPAJ
		      and MB.MSBI_TAHUN_KE = MDB.MSBI_TAHUN_KE
		      and MB.MSBI_PREMI_KE = MDB.MSBI_PREMI_KE
		      and MB.MSBI_NB = 1
		      and mb.msbi_tahun_ke =  #tahun#
		      and MDB.LSBS_ID <![CDATA[ <= ]]> 300
		      and mb.reg_spaj = rpad(replace(#spaj#,'.'),11,' ') 
				 	
	</select>
	
	<select id="elions.bac.select_PKP" resultClass="integer" parameterClass="java.util.HashMap">
	  select nvl(LSRG_PKP, 0)
	    from    
	         eka.lst_region  
	   where  
         eka.lst_region.lca_id=#lca_id#
         and eka.lst_region.lwk_id=#lwk_id#
         and eka.lst_region.lsrg_id=#lsrg_id#
    </select>
    
    <select id="elions.bac.selectCekSpajNonPega" resultClass="integer" parameterClass="string">
	  select count(pega_case_id) from eka.mst_policy where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
    </select>
    
	<select id="elions.bac.selectJumlahContract" resultClass="java.util.HashMap"> <!-- Chandra A - 20180413 -->
		select <!-- count(a.contract_no) jumlah -->
		  	  a.contract_no
		      ,b.no_va
        from eka.mst_va_trx@eb a
        inner join eka.mst_va_online@eb b on (a.contract_no = b.contract_no)
        inner join eka.mst_insured c on (c.mste_no_vacc = b.no_va)
        where a.process_date is null
        <!-- group by a.contract_no, b.no_va -->
	</select>
	
	<select id="elions.bac.selectDataBelumProd" resultClass="java.util.HashMap"> <!-- Chandra A - 20180417 -->
		select  a.noid
	           ,a.fullname
	           ,a.no_va
	           ,a.input_date
	           ,b.reg_spaj
		from    eka.lst_member a
		inner join eka.mst_insured b    on (A.NO_VA = B.MSTE_NO_VACC)
		where  a.flag_submit = '1'
		and    a.flag_payment = '1'
		and    a.flag_production = '0'
	</select>
	
	<select id="elions.bac.selectDataJsonTemp" resultClass="java.util.HashMap"> <!-- Chandra A - 20180425 -->
		select  input_date
		        ,no_gadget
		        ,no_va
		        ,spaj_temp
		        ,process_status 
		from   eka.lst_json_temp 
		where process_status != 1
		and     to_date(input_date, 'dd/mm/yyyy') = to_date(sysdate, 'dd/mm/yyyy')
	</select>
	
	
	
	
	
<select id="elions.bac.selectFailSiap2UProd" resultClass="java.util.HashMap"> <!-- Patar Timotius Tambunan - 20180910 -->
		select t.process_api,
			t.noid,
			t.no_polis,
			mp.reg_spaj,
			lm.flag_production,
			'YES' as already_production
			 from (
			 select sum(status),
			 process_api,trim(substr(process_api,80,instr(process_api,'&amp;')-80)) as noid,
			 trim(substr(process_api,instr(process_api,'polisnum=')+9)) as no_polis  
			from EKA.LST_HIST_ACTIVITY_WS_OUT where process_api like '%production%' 
			and 
			process_api like '%smileultimate%' and client_id = '3' and jenis_id='83' 
			group by process_api having sum(status)<![CDATA[<=]]>0 
		) t,eka.mst_policy mp,eka.mst_production mprod, eka.lst_member lm  where t.no_polis=mp.mspo_policy_no and mp.reg_spaj = mprod.reg_spaj and lm.noid=t.noid
	</select>

<select id="elions.bac.selectFailPayment" resultClass="java.util.HashMap"> <!-- Patar Timotius Tambunan - 20180910 -->
	select p.process_api,p.noid,lm.no_va,oa.contract_no,tr.amount,lm.flag_payment from (
		select sum(status),process_api,trim(substr(process_api,70,instr(process_api,'&amp;')-70)) as noid from EKA.LST_HIST_ACTIVITY_WS_OUT
		where process_api like '%payment%' and process_api like '%smileultimate%' and client_id = '3' and jenis_id='83' group by process_api 
		having sum(status)<![CDATA[<=]]>0 ) p, eka.lst_member lm ,eka.mst_va_online@eb oa, eka.mst_Va_trx@eb  tr where lm.noid=p.noid and oa.no_va = lm.no_va and tr.contract_no = oa.contract_no
</select>

<select id="elions.bac.selectDepositPremiumFailed" resultClass="java.util.HashMap"> <!-- Patar Timotius Tambunan - 20180910 -->
	select t.reg_spaj,count(t.reg_spaj) as total from eka.mst_deposit_premium dp right join (
	select reg_spaj from eka.lst_member a,eka.mst_insured b
	where (a.no_va = b.mste_no_vacc) and a.flag_submit = 1 and a.flag_payment = 1 and a.flag_production = 0
	) t on (t.reg_spaj = dp.reg_spaj)
	group by t.reg_spaj having count(t.reg_spaj)=1
</select>
	
    <resultMap id="elions.bac.select_kabupaten2_1" class="java.util.HashMap">
		<result property="lska_id" column="lska_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                       
		<result property="kabupaten" column="kabupaten" javaType="string" jdbcType="VARCHAR2" nullValue=""/>     
	</resultMap>
    <select id="elions.bac.select_kabupaten2" resultMap="elions.bac.select_kabupaten2_1" parameterClass="int">
    	select  distinct lska_id
		          , kabupaten 
		from   EKA.V_PROPINSI
		where lspr_id   = #value# 
		order by kabupaten asc
	</select>
	
	<resultMap id="elions.bac.select_kecamatan1" class="java.util.HashMap">
		<result property="lskc_id" column="lskc_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                       
		<result property="kecamatan" column="kecamatan" javaType="string" jdbcType="VARCHAR2" nullValue=""/>     
	</resultMap>
    <select id="elions.bac.select_kecamatan" resultMap="elions.bac.select_kecamatan1" parameterClass="java.util.HashMap">
    	select  distinct lskc_id
		          , kecamatan 
		from   EKA.V_PROPINSI
		where lspr_id   = #lspr_id# 
		and   lska_id	= #lska_id#
		order by kecamatan asc
	</select>
	
	<resultMap id="elions.bac.select_kelurahan1" class="java.util.HashMap">
		<result property="lskl_id" column="lskl_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                       
		<result property="kelurahan" column="kelurahan" javaType="string" jdbcType="VARCHAR2" nullValue=""/>     
	</resultMap>
    <select id="elions.bac.select_kelurahan" resultMap="elions.bac.select_kelurahan1" parameterClass="java.util.HashMap">
    	select  distinct lskl_id
		          , kelurahan 
		from   EKA.V_PROPINSI
		where lspr_id   = #lspr_id# 
		and   lska_id	= #lska_id#
		and   lskc_id	= #lskc_id#
		order by kelurahan asc
	</select>
	
	<select id="elions.bac.selectDaftarInvestasiTemp2" resultClass="com.ekalife.elions.model.DetilInvestasi" parameterClass="string">
		 SELECT a.no_temp,
		         b.lji_id lji_id1,
		         a.mdu_persen mdu_persen1,
		         a.mdu_jumlah mdu_jumlah1,
		         b.lji_invest lji_invest1
		    FROM (SELECT *
		            FROM eka.mst_daftar_invest_temp
		           WHERE no_temp = #value#) a,
		         eka.lst_jenis_invest b
		   WHERE b.lji_id = a.lji_id(+)
		ORDER BY b.lji_id
	</select>
	
    <select id="elions.bac.selectMstSpajTempAutoSales" resultClass="java.util.HashMap" >
   		SELECT * FROM EKA.MST_SPAJ_TEMP WHERE NO_TEMP = RPAD (REPLACE (#value#, '.'), 12, ' ')
	</select>	
	
	<select id="elions.bac.selectKodePenutup" parameterClass="java.util.HashMap" resultClass="string">
	select msag_id
		from eka.mst_kd_penutup
		<!--
		where lca_id = #lca_id#
		and lwk_id = #lwk_id#
		and lsrg_id = #lsrg_id# 
		-->
		where lsbs_id = #lsbs_id# 
		and lsdbs_number = #lsdbs_number# 						
	</select>	
	
	<!-- helpdesk [133348] email validasi transaksi Direksi/ Dept Head -->
	<select id="elions.bac.selectMstPembayaranApproval" resultClass="java.util.HashMap" parameterClass="java.util.HashMap"> 
		SELECT a.KODE_ID
               ,a.KET
               ,a.EMAIL_KIRIM_CC
               ,a.EMAIL_KIRIM_TO
               ,a.SUBJECT_KIRIM
               ,a.SUBJECT_KIRIM_INFO
               ,a.EMAIL_APPROVE_TO
               ,a.EMAIL_APPROVE_CC
               ,a.SUBJECT_APPROVE
               ,a.LUS_AKSEPTOR_1
               ,a.PATH_TTD_1
               ,a.EMAIL_AKSEPTOR_1
               ,a.SENDER_NAME
               ,a.POST_DESC
               ,a.POST_JN_DESC
               ,a.POST_DESC_APPROVE
               ,a.LUS_AKSEPTOR_2
               ,a.EMAIL_AKSEPTOR_2
               ,a.PATH_TTD_2
               ,a.EMAIL_CC_AKSEPTOR_2
               ,b.LUS_FULL_NAME NAME_AKSEPTOR_1
               ,c.LUS_FULL_NAME NAME_AKSEPTOR_2
        from   eka.MST_PEMBAYARAN_APPROVAL a
               left join eka.LST_USER b on (b.LUS_ID = a.LUS_AKSEPTOR_1)
               left join eka.LST_USER c on (c.LUS_ID = a.LUS_AKSEPTOR_2)
        where  a.KODE_ID = #ls_jenis#
	</select>
	
	<!-- helpdesk [133348] email validasi transaksi Direksi/ Dept Head -->
	<select id="elions.bac.selectMstBatchPembayaran" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select APP_1
               ,APP_2
               ,LOCATION
        from  eka.MST_BATCH_PEMBAYARAN
        where BATCH_NO = #batch_no#
        and   APP_1 = #status#
        and   APP_2 = #status#
        and   ACTIVE = 1
	</select>
	
	<!-- helpdesk [133348] email validasi transaksi Direksi/ Dept Head -->
	<select id="elions.bac.selectSpajBatchPembayaran" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT C.KET AS jenis_trx,                                       
		       F.MSPO_POLICY_NO AS Polis,
		       G.MCL_FIRST AS Pemegang_polis,
		       A.MRC_ATAS_NAMA AS rek_atas_nama,
		       A.MRC_NO_AC AS no_rek,
		       A.NOMINAL AS nominal,
		       D.LSBP_NAMA AS bank,
		       A.NO_PRE
		  FROM EKA.MST_PEMBAYARAN A,
		       EKA.MST_BATCH_PEMBAYARAN B,
		       EKA.MST_PEMBAYARAN_APPROVAL C,
		       EKA.LST_BANK_PUSAT D,
		       EKA.MST_INBOX E,
		       EKA.MST_POLICY F,
		       EKA.MST_CLIENT_NEW G
		WHERE     A.BATCH_NO = B.BATCH_NO
		       AND B.KODE_ID = C.KODE_ID
		       AND A.LSBP_ID = D.LSBP_ID
		       AND A.NO_PRE = E.NO_PRE
		       AND E.REG_SPAJ = F.REG_SPAJ
		       AND F.MSPO_POLICY_HOLDER = G.MCL_ID
		       AND A.BATCH_NO = #batch_no#
		       AND B.ACTIVE = 1
		UNION ALL
		SELECT C.KET AS jenis_trx,                                                 
		       F.MSPO_POLICY_NO AS Polis,
		       G.MCL_FIRST AS Pemegang_polis,
		       A.MRC_ATAS_NAMA AS rek_atas_nama,
		       A.MRC_NO_AC AS no_rek,
		       A.NOMINAL AS nominal,
		       D.LSBP_NAMA AS bank,
		       A.NO_PRE
		  FROM EKA.MST_PEMBAYARAN A,
		       EKA.MST_BATCH_PEMBAYARAN B,
		       EKA.MST_PEMBAYARAN_APPROVAL C,
		       EKA.LST_BANK_PUSAT D,
		       EKA.MST_INBOX E,
		       EKA.MST_POLICY@eb F,
		       EKA.MST_CLIENT@eb G
		WHERE     A.BATCH_NO = B.BATCH_NO
		       AND B.KODE_ID = C.KODE_ID
		       AND A.LSBP_ID = D.LSBP_ID
		       AND A.NO_PRE = E.NO_PRE
		       AND E.REG_SPAJ = F.REG_SPAJ
		       AND F.MSPO_POLICY_HOLDER = G.MCL_ID
		       AND A.BATCH_NO = #batch_no#
		       AND B.ACTIVE = 1
		UNION ALL
		SELECT C.KET AS jenis_trx,                                               
		       F.NO_SERTIFIKAT AS Polis,
		       F.HOLDER_NAME AS Pemegang_polis,
		       A.MRC_ATAS_NAMA AS rek_atas_nama,
		       A.MRC_NO_AC AS no_rek,
		       A.NOMINAL AS nominal,
		       D.LSBP_NAMA AS bank,
		       A.NO_PRE
		  FROM EKA.MST_PEMBAYARAN A,
		       EKA.MST_BATCH_PEMBAYARAN B,
		       EKA.MST_PEMBAYARAN_APPROVAL C,
		       EKA.LST_BANK_PUSAT D,
		       EKA.MST_INBOX E,
		       EKA.MST_TMMS@eb F
		WHERE     A.BATCH_NO = B.BATCH_NO
		       AND B.KODE_ID = C.KODE_ID
		       AND A.LSBP_ID = D.LSBP_ID
		       AND A.NO_PRE = E.NO_PRE
		       AND E.REG_SPAJ = F.ID
		       AND A.BATCH_NO = #batch_no#
		       AND B.ACTIVE = 1
		<!-- select 	C.KET as jenis_trx
				,F.MSPO_POLICY_NO as Polis
				,G.MCL_FIRST as Pemegang_polis
				,A.MRC_ATAS_NAMA as rek_atas_nama
				,A.MRC_NO_AC as no_rek
				,A.NOMINAL as nominal
				,D.LSBP_NAMA as bank
				,A.NO_PRE
		from 	EKA.MST_PEMBAYARAN A,
		    	EKA.MST_BATCH_PEMBAYARAN B,
		    	EKA.MST_PEMBAYARAN_APPROVAL C,
		    	EKA.LST_BANK_PUSAT D,
		    	EKA.MST_INBOX E,
		    	EKA.MST_POLICY F,
		    	EKA.MST_CLIENT_NEW G
		where 	A.BATCH_NO = B.BATCH_NO and
		    	B.KODE_ID = C.KODE_ID and
		    	A.LSBP_ID = D.LSBP_ID and
		    	A.NO_PRE = E.NO_PRE and
		    	E.REG_SPAJ = F.REG_SPAJ and
		    	F.MSPO_POLICY_HOLDER = G.MCL_ID and
		    	A.BATCH_NO = #batch_no# and
		    	B.ACTIVE = 1 -->
		<!-- select 	C.KET
			   	,A.MRC_ATAS_NAMA
			   	,A.MRC_NO_AC
			   	,A.NOMINAL
			   	,D.LSBP_NAMA
			   	,A.NO_PRE
		from 	EKA.MST_PEMBAYARAN A,
		    	EKA.MST_BATCH_PEMBAYARAN B,
		    	EKA.MST_PEMBAYARAN_APPROVAL C,
		    	EKA.LST_BANK_PUSAT D
		where 	A.BATCH_NO = B.BATCH_NO and
		    	B.KODE_ID = C.KODE_ID and
		    	A.LSBP_ID = D.LSBP_ID and
		    	A.BATCH_NO = #batch_no# -->
	</select>
	
	<!-- helpdesk [] -->
	<!-- helpdesk [148067] Update body email approval Finance, 20200720 -->
	<select id="elions.bac.selectSpajBatchPembayaranJns3" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT C.KET AS jenis_trx,                                       
		       F.MSPO_POLICY_NO AS Polis,
		       G.MCL_FIRST AS Pemegang_polis,
		       A.MRC_ATAS_NAMA AS rek_atas_nama,
		       A.MRC_NAMA_VALIDASI AS rek_nama_validasi,
		       A.MRC_NO_AC AS no_rek,
		       A.NOMINAL AS nominal,
		       D.LSBP_NAMA AS bank,
		       A.NO_PRE,
		       (case when A.flag_validasi = 2 Then 'Berhasil Validasi by System' when A.flag_validasi = 3 Then 'Need manual validation by Finance Head !' end ) as Status
		  FROM EKA.MST_PEMBAYARAN A,
		       EKA.MST_BATCH_PEMBAYARAN B,
		       EKA.MST_PEMBAYARAN_APPROVAL C,
		       EKA.LST_BANK_PUSAT D,
		       EKA.MST_INBOX E,
		       EKA.MST_POLICY F,
		       EKA.MST_CLIENT_NEW G
		WHERE     A.BATCH_NO = B.BATCH_NO
		       AND B.KODE_ID = C.KODE_ID
		       AND A.LSBP_ID = D.LSBP_ID
		       AND A.NO_PRE = E.NO_PRE
		       AND E.REG_SPAJ = F.REG_SPAJ
		       AND F.MSPO_POLICY_HOLDER = G.MCL_ID
		       AND A.BATCH_NO =  #batch_no#
		       AND B.ACTIVE = 1
		UNION
		SELECT C.KET AS jenis_trx,                                                 
		       F.MSPO_POLICY_NO AS Polis,
		       G.MCL_FIRST AS Pemegang_polis,
		       A.MRC_ATAS_NAMA AS rek_atas_nama,
		       A.MRC_NAMA_VALIDASI AS rek_nama_validasi,       
		       A.MRC_NO_AC AS no_rek,
		       A.NOMINAL AS nominal,
		       D.LSBP_NAMA AS bank,
		       A.NO_PRE,
		       (case when A.flag_validasi = 2 Then 'Berhasil Validasi by System' when A.flag_validasi = 3 Then 'Need manual validation by Finance Head !' end ) as Status       
		  FROM EKA.MST_PEMBAYARAN A,
		       EKA.MST_BATCH_PEMBAYARAN B,
		       EKA.MST_PEMBAYARAN_APPROVAL C,
		       EKA.LST_BANK_PUSAT D,
		       EKA.MST_INBOX E,
		       EKA.MST_POLICY@eb F,
		       EKA.MST_CLIENT@eb G
		WHERE     A.BATCH_NO = B.BATCH_NO
		       AND B.KODE_ID = C.KODE_ID
		       AND A.LSBP_ID = D.LSBP_ID
		       AND A.NO_PRE = E.NO_PRE
		       AND E.REG_SPAJ = F.REG_SPAJ
		       AND F.MSPO_POLICY_HOLDER = G.MCL_ID
		       AND A.BATCH_NO =  #batch_no#
		       AND B.ACTIVE = 1
		UNION
		SELECT C.KET AS jenis_trx,                                               
		       F.NO_SERTIFIKAT AS Polis,
		       F.HOLDER_NAME AS Pemegang_polis,
		       A.MRC_ATAS_NAMA AS rek_atas_nama,
		       A.MRC_NAMA_VALIDASI AS rek_nama_validasi,       
		       A.MRC_NO_AC AS no_rek,
		       A.NOMINAL AS nominal,
		       D.LSBP_NAMA AS bank,
		       A.NO_PRE,
		       (case when A.flag_validasi = 2 Then 'Berhasil Validasi by System' when A.flag_validasi = 3 Then 'Need manual validation by Finance Head !' end ) as Status       
		  FROM EKA.MST_PEMBAYARAN A,
		       EKA.MST_BATCH_PEMBAYARAN B,
		       EKA.MST_PEMBAYARAN_APPROVAL C,
		       EKA.LST_BANK_PUSAT D,
		       EKA.MST_INBOX E,
		       EKA.MST_TMMS@eb F
		WHERE     A.BATCH_NO = B.BATCH_NO
		       AND B.KODE_ID = C.KODE_ID
		       AND A.LSBP_ID = D.LSBP_ID
		       AND A.NO_PRE = E.NO_PRE
		       AND E.REG_SPAJ = F.ID
		       AND A.BATCH_NO =  #batch_no#
		       AND B.ACTIVE = 1       
		Order by Status desc
		<!-- SELECT C.KET AS jenis_trx,                                       
		       F.MSPO_POLICY_NO AS Polis,
		       G.MCL_FIRST AS Pemegang_polis,
		       A.MRC_ATAS_NAMA AS rek_atas_nama,
		       A.MRC_NAMA_VALIDASI AS rek_nama_validasi,
		       A.MRC_NO_AC AS no_rek,
		       A.NOMINAL AS nominal,
		       D.LSBP_NAMA AS bank,
		       A.NO_PRE,
		       (case when A.flag_validasi = 2 Then 'Berhasil Validasi by System' when A.flag_validasi = 3 Then 'Need manual validation by Finance Head !' end ) as Status
		  FROM EKA.MST_PEMBAYARAN A,
		       EKA.MST_BATCH_PEMBAYARAN B,
		       EKA.MST_PEMBAYARAN_APPROVAL C,
		       EKA.LST_BANK_PUSAT D,
		       EKA.MST_INBOX E,
		       EKA.MST_POLICY F,
		       EKA.MST_CLIENT_NEW G
		WHERE     A.BATCH_NO = B.BATCH_NO
		       AND B.KODE_ID = C.KODE_ID
		       AND A.LSBP_ID = D.LSBP_ID
		       AND A.NO_PRE = E.NO_PRE
		       AND E.REG_SPAJ = F.REG_SPAJ
		       AND F.MSPO_POLICY_HOLDER = G.MCL_ID
		       AND A.BATCH_NO =  #batch_no#
		       AND B.ACTIVE = 1
		UNION ALL
		SELECT C.KET AS jenis_trx,                                                 
		       F.MSPO_POLICY_NO AS Polis,
		       G.MCL_FIRST AS Pemegang_polis,
		       A.MRC_ATAS_NAMA AS rek_atas_nama,
		       A.MRC_NAMA_VALIDASI AS rek_nama_validasi,       
		       A.MRC_NO_AC AS no_rek,
		       A.NOMINAL AS nominal,
		       D.LSBP_NAMA AS bank,
		       A.NO_PRE,
		       (case when A.flag_validasi = 2 Then 'Berhasil Validasi by System' when A.flag_validasi = 3 Then 'Need manual validation by Finance Head !' end ) as Status       
		  FROM EKA.MST_PEMBAYARAN A,
		       EKA.MST_BATCH_PEMBAYARAN B,
		       EKA.MST_PEMBAYARAN_APPROVAL C,
		       EKA.LST_BANK_PUSAT D,
		       EKA.MST_INBOX E,
		       EKA.MST_POLICY@eb F,
		       EKA.MST_CLIENT@eb G
		WHERE     A.BATCH_NO = B.BATCH_NO
		       AND B.KODE_ID = C.KODE_ID
		       AND A.LSBP_ID = D.LSBP_ID
		       AND A.NO_PRE = E.NO_PRE
		       AND E.REG_SPAJ = F.REG_SPAJ
		       AND F.MSPO_POLICY_HOLDER = G.MCL_ID
		       AND A.BATCH_NO =  #batch_no#
		       AND B.ACTIVE = 1
		UNION ALL
		SELECT C.KET AS jenis_trx,                                               
		       F.NO_SERTIFIKAT AS Polis,
		       F.HOLDER_NAME AS Pemegang_polis,
		       A.MRC_ATAS_NAMA AS rek_atas_nama,
		       A.MRC_NAMA_VALIDASI AS rek_nama_validasi,       
		       A.MRC_NO_AC AS no_rek,
		       A.NOMINAL AS nominal,
		       D.LSBP_NAMA AS bank,
		       A.NO_PRE,
		       (case when A.flag_validasi = 2 Then 'Berhasil Validasi by System' when A.flag_validasi = 3 Then 'Need manual validation by Finance Head !' end ) as Status       
		  FROM EKA.MST_PEMBAYARAN A,
		       EKA.MST_BATCH_PEMBAYARAN B,
		       EKA.MST_PEMBAYARAN_APPROVAL C,
		       EKA.LST_BANK_PUSAT D,
		       EKA.MST_INBOX E,
		       EKA.MST_TMMS@eb F
		WHERE     A.BATCH_NO = B.BATCH_NO
		       AND B.KODE_ID = C.KODE_ID
		       AND A.LSBP_ID = D.LSBP_ID
		       AND A.NO_PRE = E.NO_PRE
		       AND E.REG_SPAJ = F.ID
		       AND A.BATCH_NO =  #batch_no#
		       AND B.ACTIVE = 1       
		Order by Status desc -->
	</select>
	
	<!-- helpdesk [133348] email validasi transaksi Direksi/ Dept Head -->
	<select id="elions.bac.selectMstBatchPembayaranApprover1" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
	   select APP_1 from eka.MST_BATCH_PEMBAYARAN where BATCH_NO = #batch_no# and ACTIVE = 1
	</select>
	<select id="elions.bac.selectMstBatchPembayaranApprover2" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
	   select APP_2 from eka.MST_BATCH_PEMBAYARAN where BATCH_NO = #batch_no# and ACTIVE = 1
	</select>	
	
	<!-- helpdesk [] -->
	<select id="elions.bac.selectMstPembayaranApiIsUpdated" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select 	batch_no
		from 	eka.mst_pembayaran_api
		where 	batch_no = #batch_no#
	    and 	payment_method = #payment_method#
	    and 	flag_aktif = #flag_aktif#
	</select>
	
	<!-- helpdesk [137730] tambahin pilihan campaign -->
	<select id="elions.bac.selectMstCampaignProduct" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
		SELECT MCP_CAMPAIGN_ID
               ,MCP_CAMPAIGN_NAME
		FROM eka.MST_CAMPAIGN_PRODUCT
		WHERE LSBS_ID = #lsbs_id#
		AND LSDBS_NUMBER = #lsdbs_number#
		AND TO_DATE(#now_date#, 'yyyy-MM-dd') BETWEEN MCP_START_DATE AND MCP_END_DATE   
	</select>
	
	<!-- helpdesk [143180] autosales tambah campaign_id -->
	<select id="elions.bac.selectMstCampaignProductAutoSales" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
		SELECT MCP_CAMPAIGN_ID
		FROM eka.MST_CAMPAIGN_PRODUCT
		WHERE MCP_CAMPAIGN_ID = #campaign_id#
		AND LSBS_ID = #lsbs_id#
		AND LSDBS_NUMBER = #lsdbs_number#
	</select>
	
	<!-- OFAC LIST  -->
		<select id="elions.bac.selectOfacList" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
									
			<!-- 	select ROW_NUMBER, REG_SPAJ, PEMEGANG_POLIS, STATUS, NAMA_PRODUK, TERTANGGUNG
		    from( 
		         select rownum as row_number, B.* 
		         from (   
		                select rownum, a.*
		                from(SELECT DISTINCT
						       P.REG_SPAJ,
						       D.MCL_FIRST AS PEMEGANG_POLIS,
						       P.LSPD_ID AS STATUS_POLIS,
						       STATUS,
						       MSPO_POLICY_NO,
						       (SELECT LSDBS_NAME
						          FROM EKA.LST_DET_BISNIS
						         WHERE LSBS_ID = PI.LSBS_ID AND LSDBS_NUMBER = PI.LSDBS_NUMBER)
						          AS NAMA_PRODUK,
						       PI.MSPR_PREMIUM AS PREMI,
						       PI.MSPR_TSI AS UP,
						       (SELECT LSCB_PAY_MODE
						          FROM EKA.LST_PAY_MODE
						         WHERE LSCB_ID = P.LSCB_ID)
						          AS CARA_BAYAR,
						       (SELECT MCL_FIRST
						          FROM EKA.MST_CLIENT_NEW
						         WHERE MCL_ID = MI.MSTE_INSURED)
						          AS TERTANGGUNG,
						       1 TYPE_DATA
						  FROM (  SELECT TRIM (MST_OFAC_SCREENING.REG_SPAJ) REG_SPAJ,
						                 MCL_FIRST,
						                 (SELECT CASE JUMLAH_STATUS
						                            WHEN 2 THEN 10
						                            WHEN 1 THEN MOFS_STATUS
						                         END
						                            STATUS
						                    FROM (SELECT REG_SPAJ,
						                                 MOFS_STATUS,
						                                 (SELECT COUNT (*) JUMLAH_STATUS
						                                    FROM (  SELECT MOFS_STATUS
						                                              FROM EKA.MST_OFAC_SCREENING MST
						                                             WHERE     MST.REG_SPAJ = SCR.REG_SPAJ
						                                                   AND MOFS_STATUS IN (2, 3)
						                                          GROUP BY MOFS_STATUS) JUMLAH_STATUS)
						                                    JUMLAH_STATUS
						                            FROM EKA.MST_OFAC_SCREENING SCR
						                           WHERE     ROWNUM <![CDATA[<=]]> 1
						                                 AND SCR.REG_SPAJ = MST_OFAC_SCREENING.REG_SPAJ
						                                 AND MOFS_STATUS IN (2, 3)) A)
						                    STATUS
						            FROM EKA.MST_OFAC_SCREENING MST_OFAC_SCREENING
						                 INNER JOIN EKA.MST_POLICY MST_POLICY
						                    ON MST_OFAC_SCREENING.REG_SPAJ = MST_POLICY.REG_SPAJ
						                 INNER JOIN EKA.MST_CLIENT_NEW
						                    ON MST_POLICY.MSPO_POLICY_HOLDER = MCL_ID
						                 INNER JOIN
						                 (SELECT DISTINCT REG_SPAJ
						                    FROM EKA.MST_OFAC_SCREENING_PROCESSED
						                   WHERE     LUS_ID IS NULL
						                         AND LSPD_ID IS NULL
						                         AND UPDATE_DATE IS NULL) PCS
						                    ON PCS.REG_SPAJ = MST_OFAC_SCREENING.REG_SPAJ
						           WHERE     MST_OFAC_SCREENING.REG_SPAJ IN
						                        (SELECT REG_SPAJ
						                           FROM (  SELECT COUNT (REG_SPAJ) AS TOTAL,
						                                          REG_SPAJ,
						                                          (SELECT COUNT (*) AS TOTAL_MATCH
						                                             FROM EKA.MST_OFAC_SCREENING
						                                            WHERE REG_SPAJ = SR.REG_SPAJ
						                                                  AND MOFS_STATUS = 3)
						                                             TOTAL_MATCH
						                                     FROM EKA.MST_OFAC_SCREENING SR
						                                 GROUP BY REG_SPAJ
						                                 ORDER BY REG_SPAJ) B
						                          WHERE TOTAL_MATCH <![CDATA[<>]]> TOTAL)
						                 AND MOFS_STATUS IN (2, 3)
						        GROUP BY MST_OFAC_SCREENING.REG_SPAJ, MCL_FIRST
						        ORDER BY MST_OFAC_SCREENING.REG_SPAJ) D,
						       EKA.MST_POLICY P,
						       EKA.MST_PRODUCT_INSURED PI,
						       EKA.MST_INSURED MI
						 WHERE     P.REG_SPAJ = D.REG_SPAJ
						       AND MI.REG_SPAJ = D.REG_SPAJ
						       AND PI.REG_SPAJ = D.REG_SPAJ
						       AND PI.LSBS_ID <![CDATA[<]]>300
						       AND P.LSPD_ID = 200
						       AND MI.LSPD_ID = 200
						UNION
						  SELECT X.REG_SPAJ, X.PEMEGANG_POLIS, X.STATUS_POLIS, X.STATUS, X.MSPO_POLICY_NO, (SELECT LSDBS_NAME
						                                                                                      FROM EKA.LST_DET_BISNIS
						                                                                                     WHERE LSBS_ID = Y.LSBS_ID AND LSDBS_NUMBER = Y.LSDBS_NUMBER)
						                                                                                      AS NAMA_PRODUK, X.PREMI, X.UP, X.CARA_BAYAR, X.TERTANGGUNG, X.TYPE_DATA
						  FROM (  SELECT DISTINCT
						                 (REG_SPAJ),
						                 (SELECT MOFS_NAME
						                    FROM EKA.MST_OFAC_SCREENING PP
						                   WHERE     PP.REG_SPAJ = CERTIFICATE.REG_SPAJ
						                         AND MOFS_TYPE = 'PEMEGANG')
						                    PEMEGANG_POLIS,
						                 2 AS STATUS_POLIS,
						                 (SELECT CASE JUMLAH_STATUS
						                            WHEN 2 THEN 10
						                            WHEN 1 THEN MOFS_STATUS
						                         END
						                            STATUS
						                    FROM (SELECT REG_SPAJ,
						                                 MOFS_STATUS,
						                                 (SELECT COUNT (*) JUMLAH_STATUS
						                                    FROM (  SELECT MOFS_STATUS
						                                              FROM EKA.MST_OFAC_SCREENING MST
						                                             WHERE     MST.REG_SPAJ =
						                                                          SCR.REG_SPAJ
						                                                   AND MOFS_STATUS IN (2, 3)
						                                          GROUP BY MOFS_STATUS) JUMLAH_STATUS)
						                                    JUMLAH_STATUS
						                            FROM EKA.MST_OFAC_SCREENING SCR
						                           WHERE     ROWNUM <![CDATA[<=]]> 1
						                                 AND SCR.REG_SPAJ = CERTIFICATE.REG_SPAJ
						                                 AND MOFS_STATUS IN (2, 3)) A)
						                    STATUS,
						                 'SERTITIKAT' MSPO_POLICY_NO,
						                 0 AS PREMI,
						                 0 AS UP,
						                 '' AS CARA_BAYAR,
						                 'SERTIFIKAT' AS TERTANGGUNG,
						                 2 TYPE_DATA
						            FROM (SELECT *
						                    FROM EKA.MST_OFAC_SCREENING T
						                   WHERE REG_SPAJ IN
						                            (SELECT DISTINCT REG_SPAJ
						                               FROM EKA.MST_OFAC_SCREENING_PROCESSED
						                              WHERE     LUS_ID IS NULL
						                                    AND LSPD_ID IS NULL
						                                    AND UPDATE_DATE IS NULL)) CERTIFICATE
						           WHERE     REG_SPAJ IN
						                        (SELECT REG_SPAJ
						                           FROM (  SELECT COUNT (REG_SPAJ) AS TOTAL,
						                                          REG_SPAJ,
						                                          (SELECT COUNT (*) AS TOTAL_MATCH
						                                             FROM EKA.MST_OFAC_SCREENING
						                                            WHERE     REG_SPAJ = SR.REG_SPAJ
						                                                  AND MOFS_STATUS = 3)
						                                             TOTAL_MATCH
						                                     FROM EKA.MST_OFAC_SCREENING SR
						                                 GROUP BY REG_SPAJ
						                                 ORDER BY REG_SPAJ) B
						                          WHERE TOTAL_MATCH <![CDATA[<>]]>TOTAL)
						                 AND MOFS_STATUS IN (2, 3)
						        GROUP BY REG_SPAJ, MOFS_NAME, MOFS_STATUS) X,
						        EKA.MST_SPAJ_CRT Y
						 WHERE X.REG_SPAJ = Y.NO_POLICY
						 ORDER BY REG_SPAJ
		                ) a       
		                order by rownum
		            ) b
		      WHERE 1=1
				<isNotNull property="spaj">
							and trim(reg_spaj) like '%'||#spaj#||'%'
							and type_data = 1
							<isNotNull property="possible">
								and (status = 2 or status = 10)
							</isNotNull>
							<isNotNull property="matched">
								and (status = 3 or status = 10)
							</isNotNull>
				</isNotNull>
				<isNotNull property="nopol">
							and trim(mspo_policy_no)  like '%'||#nopol#||'%'
							<isNotNull property="possible">
								and (status = 2 or status = 10)
							</isNotNull>
							<isNotNull property="matched">
								and (status = 3 or status = 10)
							</isNotNull>
				</isNotNull>
				<isNotNull property="sertifikat">
							and trim(reg_spaj) like '%'||#sertifikat#||'%'
							and type_data = 2
							<isNotNull property="possible">
								and (status = 2 or status = 10)
							</isNotNull>
							<isNotNull property="matched">
								and (status = 3 or status = 10)
							</isNotNull>
				</isNotNull>
				order by row_number
				 )         
				WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
						AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
						order by row_number -->
					select ROW_NUMBER, REG_SPAJ, PEMEGANG_POLIS, STATUS, NAMA_PRODUK, TERTANGGUNG
		    from( 
		         select rownum as row_number, B.* 
		         from (   
		                select rownum, a.*
		                from(SELECT DISTINCT P.REG_SPAJ,D.MCL_FIRST AS PEMEGANG_POLIS,P.LSPD_ID AS STATUS_POLIS,STATUS,MSPO_POLICY_NO,
										(SELECT LSDBS_NAME
										 FROM EKA.LST_DET_BISNIS
										 WHERE LSBS_ID = PI.LSBS_ID AND LSDBS_NUMBER = PI.LSDBS_NUMBER)AS NAMA_PRODUK,
										PI.MSPR_PREMIUM AS PREMI,PI.MSPR_TSI AS UP,
										(SELECT LSCB_PAY_MODE
										FROM EKA.LST_PAY_MODE
										 WHERE LSCB_ID = P.LSCB_ID) AS CARA_BAYAR,
										(SELECT MCL_FIRST
										 FROM EKA.MST_CLIENT_NEW
										WHERE MCL_ID = MI.MSTE_INSURED)AS TERTANGGUNG,
												1 TYPE_DATA
								FROM (SELECT TRIM (MST_OFAC_SCREENING.REG_SPAJ) REG_SPAJ,MCL_FIRST,PCS.STATUS
									  FROM EKA.MST_OFAC_SCREENING MST_OFAC_SCREENING
								      INNER JOIN EKA.MST_POLICY MST_POLICY
										ON MST_OFAC_SCREENING.REG_SPAJ = MST_POLICY.REG_SPAJ
									  INNER JOIN EKA.MST_CLIENT_NEW
										ON MST_POLICY.MSPO_POLICY_HOLDER = MCL_ID
									  INNER JOIN(SELECT REG_SPAJ, STATUS
												 FROM EKA.MST_OFAC_SCREENING_PROCESSED
												 WHERE LUS_ID IS NULL
												 AND LSPD_ID IS NULL
												 AND UPDATE_DATE IS NULL
												 AND STATUS = 2) PCS
										ON PCS.REG_SPAJ = MST_OFAC_SCREENING.REG_SPAJ
									  GROUP BY MST_OFAC_SCREENING.REG_SPAJ, MCL_FIRST, PCS.STATUS
									  ORDER BY MST_OFAC_SCREENING.REG_SPAJ) D,
								    EKA.MST_POLICY P,
								    EKA.MST_PRODUCT_INSURED PI,
								    EKA.MST_INSURED MI
								WHERE P.REG_SPAJ = D.REG_SPAJ
								  AND MI.REG_SPAJ = D.REG_SPAJ
								  AND PI.REG_SPAJ = D.REG_SPAJ
								  AND PI.LSBS_ID <![CDATA[<]]> 300
								  AND P.LSPD_ID = 200
								  AND MI.LSPD_ID = 200
								UNION
								SELECT DISTINCT T.REG_SPAJ ,MOFS_NAME PEMEGANG_POLIS,2 AS STATUS_POLIS,STATUS,'SERTITIKAT' MSPO_POLICY_NO, 
								       (SELECT LSDBS_NAME
										FROM EKA.LST_DET_BISNIS
										WHERE LSBS_ID = CRT.LSBS_ID AND LSDBS_NUMBER = CRT.LSDBS_NUMBER) AS NAMA_PRODUK,
								        0 AS PREMI,0 AS UP, '' AS CARA_BAYAR,'SERTIFIKAT' AS TERTANGGUNG,2 TYPE_DATA
								FROM (SELECT REG_SPAJ, MOFS_NAME
								      FROM EKA.MST_OFAC_SCREENING 
								      WHERE MOFS_TYPE = 'PEMEGANG') T
								INNER JOIN(SELECT DISTINCT REG_SPAJ, STATUS
								           FROM EKA.MST_OFAC_SCREENING_PROCESSED
								           WHERE LUS_ID IS NULL
								            AND LSPD_ID IS NULL
								            AND UPDATE_DATE IS NULL
								            AND STATUS = 2) CERTIFICATE
								    ON CERTIFICATE.REG_SPAJ = T.REG_SPAJ
								INNER JOIN EKA.MST_SPAJ_CRT CRT
								    ON CRT.NO_POLICY = T.REG_SPAJ
								GROUP BY T.REG_SPAJ, MOFS_NAME, CERTIFICATE.STATUS, CRT.LSDBS_NUMBER, CRT.LSBS_ID		                	
		                ) a       
		                order by rownum
		            ) b
		      WHERE 1=1
				<isNotNull property="spaj">
							and trim(reg_spaj) like '%'||#spaj#||'%'
							and type_data = 1
							<isNotNull property="possible">
								and (status = 2 or status = 10)
							</isNotNull>
							<isNotNull property="matched">
								and (status = 3 or status = 10)
							</isNotNull>
				</isNotNull>
				<isNotNull property="nopol">
							and trim(mspo_policy_no)  like '%'||#nopol#||'%'
							<isNotNull property="possible">
								and (status = 2 or status = 10)
							</isNotNull>
							<isNotNull property="matched">
								and (status = 3 or status = 10)
							</isNotNull>
				</isNotNull>
				<isNotNull property="sertifikat">
							and trim(reg_spaj) like '%'||#sertifikat#||'%'
							and type_data = 2
							<isNotNull property="possible">
								and (status = 2 or status = 10)
							</isNotNull>
							<isNotNull property="matched">
								and (status = 3 or status = 10)
							</isNotNull>
				</isNotNull>
				order by row_number
				 )         
				WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
						AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
						order by row_number
		</select>
	
	<select id="elions.bac.selectmstofacresultscreening" resultClass="com.ekalife.elions.model.MstOfacScreeningResult" parameterClass="java.util.HashMap" >
			<!-- 	select  s.reg_spaj, a.mofr_id,a.mofs_id,a.ent_num,a.sdn_name,a.sdn_type,a.program,a.title,a.remarks,a.score,d.address,a.lists,a.type_result,d.country,d.add_num,s.mofs_status_message,s.mofs_type from eka.mst_ofac_screening_result a
		    left join EKA.MST_OFAC_SDN c 
			    on c.ENT_NUM = a.ENT_NUM 
			left join EKA.MST_OFAC_SDN_ADD d 
			 on d.ENT_NUM = c.ENT_NUM 
			left join EKA.MST_OFAC_SCREENING s 
					 on s.mofs_id = a.mofs_id
			 where a.mofs_id in (
			select mofs_id from eka.mst_ofac_screening a where a.reg_spaj = #spaj# and a.mofs_type = #type#
			and  a.mofs_status in (2,3) and  TRIM(UPPER(A.MOFS_NAME)) = #name#
			)
			order by a.sdn_type,a.mofs_id -->
			
			select *
	        from (
	            select  s.reg_spaj, a.mofr_id,a.mofs_id,a.ent_num,a.sdn_name,a.sdn_type,a.program,a.title,a.remarks,a.score,d.address,a.lists,a.type_result,d.country,d.add_num,s.mofs_status_message,s.mofs_type from eka.mst_ofac_screening_result a
			    left join EKA.MST_OFAC_SDN c 
				    on c.ENT_NUM = a.ENT_NUM 
				left join EKA.MST_OFAC_SDN_ADD d 
				 on d.ENT_NUM = c.ENT_NUM 
				left join EKA.MST_OFAC_SCREENING s 
						 on s.mofs_id = a.mofs_id
				 where a.mofs_id in (
				select mofs_id from eka.mst_ofac_screening a where a.reg_spaj = #spaj# and a.mofs_type = #type#
				and  a.mofs_status in (2,3) and  TRIM(UPPER(A.MOFS_NAME)) = #name#
				and type_data = 1
				)
				order by a.sdn_type,a.mofs_id
			) polis 
				union
			select *
	        from (
	            select  s.reg_spaj, a.mofr_id,a.mofs_id,a.ent_num,a.sdn_name,a.sdn_type,a.program,a.title,a.remarks,a.score,d.address,a.lists,a.type_result,d.country,d.add_num,s.mofs_status_message,s.mofs_type from eka.mst_ofac_screening_result a
			    left join EKA.MST_OFAC_SDN c 
				    on c.ENT_NUM = a.ENT_NUM 
				left join EKA.MST_OFAC_SDN_ADD d 
				 on d.ENT_NUM = c.ENT_NUM 
				left join EKA.MST_OFAC_SCREENING s 
						 on s.mofs_id = a.mofs_id
				 where a.mofs_id in (
				select mofs_id from eka.mst_ofac_screening a where a.reg_spaj = #spaj# and a.mofs_type = #type#
				and  a.mofs_status in (2,3) and  TRIM(UPPER(A.MOFS_NAME)) = #name#
				and type_data = 2
				)
				order by a.sdn_type,a.mofs_id
				) sertifikat
		</select>
	
		<!-- covid patar timotius -->
	<select id="elions.bac.selectFaceToFaceCategory" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
		SELECT FLAG_ID
               ,LABEL_DESCRIPTION
		FROM eka.MST_FACE_TO_FACE
		WHERE IS_ACTIVE = 1
	</select>
	
	
	<!-- RDS SCREENING TOOLS-->
		<select id="elions.bac.selectrdsscreening" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
	 	select * from (
 	select p.reg_spaj, P.MSPO_POLICY_NO, p.lspd_id,(select lspd_position from EKA.LST_DOCUMENT_POSITION where lspd_id = p.lspd_id) as position_label,ep.tgl_print,ep.tgl_deliver,ep.tgl_generate,p.mspo_date_print,ep.tgl_konfirmasi,p.pega_case_id,ep.flag_konfirmasi,ep.folder,ep.keterangan,
  	to_char((select min(pst.msps_date) from eka.mst_position_spaj pst where pst.reg_spaj=p.reg_Spaj and pst.msps_desc like '%GENERATE OUTSOURCE%' ),'dd/MM/yyyy')tgl_generate_latest
 	from eka.mst_policy p, EKA.MST_EKSTERNAL_PRINT ep
 	where p.reg_spaj = ep.reg_spaj
 	and p.reg_spaj = #reg_spaj#
 	order by ep.tgl_generate desc)
 	where rownum = 1
	</select>
	
	<!-- RDS SCREENING TOOLS-->
	<select id="elions.bac.selecthistoryrds" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
	select ep.reg_spaj, P.MSPO_POLICY_NO, P.PEGA_CASE_ID,EP.TGL_GENERATE, EP.TGL_TRANSFER, EP.FLAG_KONFIRMASI, EP.TGL_KONFIRMASI,
 	EP.TGL_PRINT, EP.TGL_DELIVER, U.LUS_FULL_NAME, ep.keterangan, PS.MSPS_DESC from EKA.MST_EKSTERNAL_PRINT ep, EKA.MST_POLICY p, EKA.LST_USER u, EKA.MST_POSITION_SPAJ ps
 	where EP.REG_SPAJ = P.REG_SPAJ
 	and ep.lus_id = U.LUS_ID
 	and p.reg_spaj = #reg_spaj#
 	and PS.REG_SPAJ = P.REG_SPAJ
    and PS.MSPS_DESC like '%GENERATE OUTSOURCE%'
    and trunc(ep.tgl_generate) = trunc (PS.MSPS_DATE)
 	order by ep.tgl_generate desc
	</select>
	
	<!-- VIP Flag Nana 148420 -->
	<select id="elions.bac.selectParamDescMedisListConfig" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
		SELECT NAME AS FLAG_ID, 
       		   NAME2 LABEL_DESCRIPTION
  		FROM eka.mst_config
	    WHERE SECTION = 'medis' AND 
	          SUB_SECTION = 'flag_vip' 
	</select>
	
	<!-- begDate coi config -->
	<select id="elions.bac.selectBegDateCoiFromConfig" parameterClass="string" resultClass="date">
		SELECT TO_DATE (
          (SELECT NAME
             FROM EKA.MST_CONFIG
            WHERE     APP_ID = 1
                  AND SECTION = 'Setting'
                  AND SUB_SECTION = 'begDate'),
          'DD/MM/YYYY')
          AS PARAM
  		FROM DUAL
	</select>
	
	<!-- select premi top up dan berkala saja -->
	<select id="elions.bac.selectSumPremiPokokAndBerkalaTemp" parameterClass="string" resultClass="double">
		select sum(premi) from eka.mst_premi_temp where no_temp=#no_temp# and lt_id != 2
	</select>
	
	<!-- select premi tunggal -->
	<select id="elions.bac.selectPremiTunggalTemp" parameterClass="string" resultClass="double">
		select premi from eka.mst_premi_temp where no_temp=#no_temp# and lt_id = 2
	</select>
	
	<!-- Full autosales Flag -->
	<select id="elions.bac.selectParamFullAutoSalesConfig" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
		SELECT NAME AS FLAG_ID, 
       		   NAME2 LABEL_DESCRIPTION
  		FROM eka.mst_config
	    WHERE SECTION = 'setting' AND 
	          SUB_SECTION = 'full_autosales' 
	</select>
	
	<!-- Cek full autosales Flag -->
	<select id="elions.bac.selectFullAutoSalesFromMstPolicy" resultClass="string" parameterClass="string">
		SELECT TRIM (full_autosales) AS full_autosales
		FROM eka.mst_policy
		WHERE reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
    </select>
	
	<!-- helpdesk [149354] Project SMS Polis Retur -->
	<select id="elions.bac.selectForSmsPolisReturn" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select a.reg_spaj      
	          ,c.no_hp
	          ,c.no_hp2
		from eka.mst_policy a
		      inner join eka.mst_client_new b on (b.mcl_id = a.mspo_policy_holder) 
		      inner join eka.mst_address_new c on (c.mcl_id = b.mcl_id)
		where a.mspo_policy_no = #mspo_policy_no#
		and a.lssp_id = 1
		and rownum = 1
	</select>
	
	<!-- Ticket [SD-572] tambah validasi agent expired pada saat submit spaj -->
	<select id="elions.bac.selectDaftarAgentBlacklist" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select 	name as agent_code
		from 	eka.mst_config 
		where 	mc_id = 196 
		and 	app_id = 1
	</select>
</sqlMap>