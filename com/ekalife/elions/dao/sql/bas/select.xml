<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap>

	<typeAlias alias="hashMap" type="java.util.HashMap"/>
	<typeAlias alias="formSpaj" type="com.ekalife.elions.model.FormSpaj"/>
	<typeAlias alias="formHist" type="com.ekalife.elions.model.FormHist"/>
	<typeAlias alias="spaj" type="com.ekalife.elions.model.Spaj"/>
	<typeAlias alias="spajDet" type="com.ekalife.elions.model.SpajDet"/>
	<typeAlias alias="region" type="com.ekalife.elions.model.Region"/>
	<typeAlias alias="agen" type="com.ekalife.elions.model.Agen"/>
	<typeAlias alias="dropDown" type="id.co.sinarmaslife.std.model.vo.DropDown"/>
	<typeAlias alias="user" type="com.ekalife.elions.model.User"/>
	<typeAlias alias="clientHistory" type="com.ekalife.elions.model.ClientHistory"/>
	<typeAlias alias="sms_in" type="com.ekalife.elions.model.sms.Smsserver_in"/>
	<typeAlias alias="sms_out" type="com.ekalife.elions.model.sms.Smsserver_out"/>
	<typeAlias alias="travelIns" type="com.ekalife.elions.model.TravelInsurance" />
	<typeAlias alias="suratHist" type="com.ekalife.elions.model.Surat_history" />
	<typeAlias alias="kartuNama" type="com.ekalife.elions.model.KartuNama"/>
	
	<cacheModel id="elions.bas.cache" type="LRU" readOnly="true" serialize="false">
		<flushInterval hours="8" />
		<property name="cache-size" value="100" />
		<flushOnExecute statement="elions.common.resetIbatisCache"/>
	</cacheModel>

	<!-- Yusuf (8/3/2010) - Start of Travel Insurance -->
	
	<select id="elions.bas.polispasKetinggalanSoftcopy" parameterClass="string" resultClass="java.util.HashMap">
			select a.reg_spaj
				from eka.mst_policy a,
				    eka.mst_client_new b
				where a.mspo_policy_holder = b.mcl_id
				and mspe_email is not null
				and a.reg_spaj in ('37201202622')
	</select>
	
	<select id="elions.bas.selectFormBlankoTravelIns" parameterClass="travelIns" resultClass="string">
		SELECT   a.msf_id
		  FROM   eka.mst_spaj_det a, eka.mst_form b
		 WHERE       a.msf_id_asli = b.msf_id
		         AND a.lca_id = b.lca_id
		         AND a.lsjs_id = b.lsjs_id
		         AND a.msab_id = b.msab_id
		         AND a.mssd_lus_id = b.lus_id
		         AND a.lsjs_id = 15
		         AND a.lsp_id = 2
		         AND a.msf_id LIKE (upper(#lsb_code#) || '%')
		         AND a.lsjs_id = 15
		         AND a.lca_id = #lca_id#
		         AND b.trav_ins_type = #msid_premi#
		         AND a.no_blanko = SUBSTR (#msid_blanko#, -6)
	</select>
	
	<select id="elions.bas.selectTravelInsuranceDet" parameterClass="java.util.HashMap" resultClass="travelIns">
		  SELECT   b.lsb_code,
		           b.lsb_desc,
		           b.lsb_kota,
		           M.MSTI_ID,
		           M.MSTI_JENIS,
		           M.MSID_BEG_DATE,
		           M.MSID_END_DATE,
		           M.MSID_NO,
		           M.MSID_PREMI,
		           M.MSID_PREMI_SETOR,
		           M.MSID_UP,
		           SUBSTR(M.MSID_BLANKO, 1, 1) KODE_PREMI, 
		           SUBSTR(M.MSID_BLANKO, 2) MSID_BLANKO,
		           M.MSID_NAMA,
		           M.MSID_SEX,
		           M.MSID_ALAMAT,
		           M.MSID_KOTA,
		           M.MSID_KD_POS,
		           M.MSID_PLACE_BIRTH,
		           M.MSID_DATE_BIRTH,
		           M.MSID_KD_TELP_RMH,
		           M.MSID_TELP_RMH,
		           M.MSID_HP,
		           t.msti_posisi
		    FROM   EKA.MST_TRAVEL_INS_DET M, eka.mst_travel_ins t, eka.lst_bandara b
		   WHERE       m.msti_id = #msti_id#
		           AND m.msti_jenis = #msti_jenis#
					<isNotEmpty prepend=" AND " property="msid_no"> m.msid_no = #msid_no# </isNotEmpty>
		           AND m.msti_id = t.msti_id
		           AND m.msti_jenis = t.msti_jenis
		           AND t.lsb_id = b.lsb_id
		ORDER BY   m.msid_no
	</select>
	<select id="elions.bas.selectValidasiMaxUpTravelInsurance" parameterClass="travelIns" resultClass="double">
		SELECT   SUM (msid_up)
		  FROM   eka.mst_travel_ins_det
		 WHERE       msid_nama = #msid_nama#
		         AND msid_date_birth = #msid_date_birth#
		         AND #msid_beg_date# BETWEEN msid_beg_date AND msid_end_date	
	</select>
	<select id="elions.bas.selectValidasiTravelInsurance" parameterClass="java.util.HashMap" resultClass="travelIns">
		  SELECT   a.msti_id,
		           a.msti_jenis,
		           a.msti_premi,
		           a.msti_premi_setor,
		           a.msti_up,
		           a.msti_jml_peserta,
		           (SELECT COUNT(*) FROM eka.mst_travel_ins_det WHERE msti_id = a.msti_id and msti_jenis = a.msti_jenis) jml_peserta_terinput,
		           NVL(SUM (b.msid_premi), 0) msid_premi,
		           NVL(SUM (b.msid_premi_setor), 0) msid_premi_setor,
		           NVL(SUM (b.msid_up), 0) msid_up
		    FROM   eka.mst_travel_ins a, eka.mst_travel_ins_det b
		   WHERE       a.msti_id = b.msti_id(+)
		           AND a.msti_jenis = b.msti_jenis(+)
		<isNotEmpty prepend=" AND " property="msti_id"> a.msti_id = #msti_id# </isNotEmpty>
		<isNotEmpty prepend=" AND " property="msti_jenis"> a.msti_jenis = #msti_jenis# </isNotEmpty>
		GROUP BY   a.msti_id,
		           a.msti_jenis,
		           a.msti_premi,
		           a.msti_premi_setor,
		           a.msti_up,
		           a.msti_jml_peserta
	</select>
	<select id="elions.bas.selectIdTravelInsurance" resultClass="int" parameterClass="int">
		(select nvl(max(msti_id), 0)+1 from eka.mst_travel_ins where msti_jenis = #msti_jenis#)
	</select>
	<select id="elions.bas.selectBandara" resultClass="travelIns">
		  SELECT   L.LSB_ID,
		           L.LSB_CODE,
		           L.LSB_DESC,
		           L.LSB_KOTA
		    FROM   EKA.LST_BANDARA L
		ORDER BY   l.lsb_code  
	</select>
	
	<select id="elions.bas.selectTravelInsurance" parameterClass="java.util.HashMap" resultClass="travelIns">
		SELECT 0 flag,
		M.MSTI_ID, M.MSTI_JENIS, M.LCA_ID, 
		   M.LSB_ID, M.NO_PRE, M.NO_VOUCHER, 
		   M.MSTI_POSISI, M.MSTI_TGL, M.MSTI_TGL_RK, M.MSTI_JML_PESERTA, 
		   M.MSTI_PREMI, M.MSTI_PREMI_SETOR, M.MSTI_UP, 
		   M.MSTI_MSAG_ID, M.MSTI_KOMISI, M.MSTI_KOM_TAX, 
		   M.MSTI_TGL_INPUT, M.MSTI_TGL_PROD, M.MSTI_TGL_AKSEP, 
		   M.MSTI_TGL_KOMISI, M.LUS_ID_INPUT, M.LUS_ID_AKSEP, 
		   M.LUS_ID_KOMISI, b.lsb_code, b.lsb_desc, b.lsb_kota,
		   EKA.UTILS.USER_INPUT(m.lus_id_input) user_input,
		   EKA.UTILS.USER_INPUT(m.lus_id_aksep) user_aksep,
		   EKA.UTILS.USER_INPUT(m.lus_id_komisi) user_komisi
		FROM EKA.MST_TRAVEL_INS M, eka.lst_bandara b
		WHERE m.lsb_id = b.lsb_id
		<isNotEmpty prepend=" AND " property="tglAwal"> (m.msti_tgl BETWEEN #tglAwal# AND #tglAkhir#) </isNotEmpty>
		<isNotEmpty prepend=" AND " property="lca_id"> m.lca_id = #lca_id# </isNotEmpty>
		<isNotEmpty prepend=" AND " property="posisi"> m.msti_posisi = #posisi# </isNotEmpty>
		<isNotEmpty prepend=" AND " property="msti_id"> m.msti_id = #msti_id# </isNotEmpty>
		<isNotEmpty prepend=" AND " property="msti_jenis"> m.msti_jenis = #msti_jenis# </isNotEmpty>
		ORDER BY m.msti_tgl, m.msti_tgl_input	
	</select>
	<!-- Yusuf (8/3/2010) - End Of Travel Insurance -->

	<!-- Yusuf (11/02/2010) - Start of Validasi Random Sample BII -->

	<select id="elions.bas.selectQuestionnaireFromSpaj" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Questionnaire">
		SELECT a.lsqu_id, a.lsqu_jenis, a.lsqu_desc, a.lsqu_active, b.reg_spaj,
		       b.msqu_jawab, b.msqu_desc
		  FROM eka.lst_questionnaire a, eka.mst_questionnaire b
		 WHERE a.lsqu_jenis = #lsqu_jenis# AND a.lsqu_id = b.lsqu_id(+) 
		   AND b.reg_spaj(+) = rpad(replace(#reg_spaj# ,'.'),11,' ')
	</select>

	<select id="elions.bas.selectBegDateInsuredFromSpaj" parameterClass="string" resultClass="date">
		SELECT mste_beg_date FROM eka.mst_insured WHERE reg_spaj = rpad(replace(#value# ,'.'),11,' ')
	</select>

	<select id="elions.bas.selectReferrerIdBiiFromSpaj" parameterClass="string" resultClass="string">
		SELECT nvl(b.referrer_id, b.referrer_fa) referrer
		  FROM eka.mst_policy a,
		       eka.mst_nasabah b
		 WHERE a.reg_spaj = rpad(replace(#value# ,'.'),11,' ') 
		   AND a.mspo_plan_provider = b.mns_kd_nasabah
	</select>
	
	<!-- Jumlah Tutupan BII per referrer, tapi yang LINK only -->
	<select id="elions.bas.selectJumlahTutupanBiiPerReferrer" parameterClass="string" resultClass="java.util.HashMap">
        SELECT * FROM (
            SELECT   rownum no, a.reg_spaj, a.mspo_policy_no_format, d.nama_ref
                FROM eka.mst_policy a, eka.mst_production b, eka.mst_nasabah c, eka.lst_referrer_bii d, eka.mst_det_production e, eka.lst_bisnis f
               WHERE a.reg_spaj = b.reg_spaj
                 AND a.mspo_plan_provider = c.mns_kd_nasabah
                 AND b.mspro_prod_date >= TO_DATE('01/02/2010','dd/mm/yyyy')
                 AND b.mspro_prod_ke = 1
                 AND c.referrer_id = #value#
                 AND c.referrer_id = d.referrer_id
                 AND b.lstb_id = e.lstb_id
                 AND b.reg_spaj = e.reg_spaj
                 AND b.mspro_prod_ke = e.mspro_prod_ke
                 AND b.mspro_prod_date = e.mspro_prod_date
                 AND e.lsbs_id = f.lsbs_id
                 AND f.lsgb_id = 17
                 and e.lsbs_id not in (155)
            UNION
            SELECT ROWNUM NO, a.reg_spaj, a.mspo_policy_no_format, d.nama_bfa nama_ref
              FROM eka.mst_policy a,
                   eka.mst_production b,
                   eka.mst_nasabah c,
                   (SELECT   msag_id, nama_bfa FROM eka.mst_bfa WHERE msag_id = #value# GROUP BY msag_id, nama_bfa) d,
                   eka.mst_det_production e,
                   eka.lst_bisnis f
             WHERE a.reg_spaj = b.reg_spaj
               AND a.mspo_plan_provider = c.mns_kd_nasabah
               AND b.mspro_prod_date >= TO_DATE ('01/02/2010', 'dd/mm/yyyy')
               AND b.mspro_prod_ke = 1
               AND c.referrer_fa = d.msag_id
                 AND b.lstb_id = e.lstb_id
                 AND b.reg_spaj = e.reg_spaj
                 AND b.mspro_prod_ke = e.mspro_prod_ke
                 AND b.mspro_prod_date = e.mspro_prod_date
                 AND e.lsbs_id = f.lsbs_id
                 AND f.lsgb_id = 17
                 and e.lsbs_id not in (155)
        )     
        ORDER BY no
	</select>

	<!-- Yusuf (11/02/2010) - End of Validasi Random Sample BII -->
	
	<select id="elions.bas.selectTotalAgentTax" parameterClass="hashMap" resultClass="hashMap">
		SELECT   SUM (comm_month) adec_comm_month, SUM (comm) adec_comm_year,
		         SUM (comm_month) adec_pkp_month, SUM (comm) adec_pkp_year,
		         SUM (tax) adec_tax_paid
		    FROM (SELECT   #ldt_beg_mon# tgl, kom.msag_id,
		                   SUM (CASE WHEN kom.msco_pay_date >= #ldt_beg_mon# THEN kom.msco_comm ELSE 0 END) comm_month,
		                   SUM (kom.msco_comm) comm, SUM (kom.msco_tax) tax
		              FROM eka.mst_commission kom
		             WHERE kom.msco_paid = 1
		               AND kom.msco_pay_date BETWEEN #ldt_beg_year# AND #ldt_end_mon#
		               AND kom.msag_id = #as_msag#
		          GROUP BY kom.msag_id
		          UNION ALL
		          SELECT   #ldt_beg_mon#, abon.msag_id,
		                   SUM (CASE WHEN abon.msab_pay_date >= #ldt_beg_mon# THEN abon.msab_jlh_bonus + abon.msab_tax + abon.msab_ttl_potongan ELSE 0 END) comm_month,
		                   SUM (abon.msab_jlh_bonus + abon.msab_tax + abon.msab_ttl_potongan) comm_year,
		                   SUM (abon.msab_tax) tax_year
		              FROM eka.mst_agent_bonus abon
		             WHERE abon.msab_paid = 1
		               AND (abon.msab_pay_date BETWEEN #ldt_beg_year# AND #ldt_end_mon#)
		               AND (abon.msab_jlh_bonus + abon.msab_tax + abon.msab_ttl_potongan <![CDATA[<>]]> 0)
		               AND abon.msag_id = #as_msag#
		          GROUP BY abon.msag_id
		          UNION ALL
		          SELECT   #ldt_beg_mon#, TRIM(rw.msrk_id) msrk_id,
		                   SUM (CASE WHEN rw.msco_pay_date >= #ldt_beg_mon# THEN rw.msco_comm ELSE 0 END) comm_month,
		                   SUM (rw.msco_comm) comm_year, SUM (rw.msco_tax) tax_year
		              FROM eka.mst_reward rw
		             WHERE rw.msco_paid = 1
		               AND (rw.msco_pay_date BETWEEN #ldt_beg_year# AND #ldt_end_mon#)
		               AND rw.msrk_id = #as_msag#
		          GROUP BY TRIM(rw.msrk_id)
		          UNION ALL
		          SELECT   #ldt_beg_mon#, kombon.msag_id,
		                   SUM (CASE WHEN kombon.msco_pay_date >= #ldt_beg_mon# THEN kombon.msco_comm ELSE 0 END) comm_month,
		                   SUM (kombon.msco_comm) comm_year,
		                   SUM (kombon.msco_tax) tax_year
		              FROM eka.mst_comm_bonus kombon
		             WHERE kombon.msco_paid = 1
		               AND (kombon.msco_pay_date BETWEEN #ldt_beg_year# AND #ldt_end_mon#)
		               AND kombon.msag_id = #as_msag#
		          GROUP BY kombon.msag_id)
		GROUP BY tgl, TRIM (msag_id)
	</select>
	
	<select id="elions.bas.selectPtkp" parameterClass="com.ekalife.elions.model.AgentTax" resultClass="double">
		SELECT b.lspt_value
		  FROM eka.mst_agent a, eka.mst_ptkp_value b
		 WHERE a.lspt_id = b.lspt_id
		   AND a.msag_id = #as_msag#
		   AND (b.lspt_date =
		           (SELECT MAX (b.lspt_date)
		              FROM eka.mst_agent, eka.mst_ptkp_value
		             WHERE a.lspt_id = b.lspt_id
		               AND (a.msag_id = #as_msag# AND b.lspt_date <![CDATA[>=]]> #adt_date#))
		       )
	</select>
	
	<select id="elions.bas.selectSumPtkp" parameterClass="hashMap" resultClass="double">
		SELECT NVL(SUM (ptkp), 0) 
		  FROM eka.mst_agent_tax
		 WHERE msag_id = #as_msag#
		       AND tgl BETWEEN #ldt_beg_year# AND #ldt_beg_mon#
	</select>
	
	<select id="elions.bas.selectCountAgentTax" parameterClass="com.ekalife.elions.model.AgentTax" resultClass="int">
		SELECT COUNT (*)
		  FROM eka.mst_agent_tax
		 WHERE msag_id = #as_msag# AND tgl <![CDATA[<=]]> #adt_date#
	</select>
	
	<select id="elions.bas.selectAgentTax" parameterClass="com.ekalife.elions.model.AgentTax" resultClass="com.ekalife.elions.model.AgentTax">
		SELECT kom_bulan adec_comm_month,
		       kom_akum adec_comm_year,
		       ptkp adec_ptkp, 
			   pkp adec_pkp_month,
		       pkp_akum adec_pkp_year,
		       pct_tax adec_tax_pct,
		       tax_bayar adec_tax_paid,
		       tax_real adec_tax_real,
		       tgl_bayar adt_pay, 
			   no_spt as_spt,
			   tgl adt_date,
			   msag_id as_msag
		  FROM eka.mst_agent_tax
		 WHERE tgl = #adt_date# AND msag_id = #as_msag#
	</select>
	
	<select id="elions.bas.selectDapatSwineFlu" parameterClass="string" resultClass="int">
		select count(*) from eka.mst_product_insured where reg_spaj = #value# and lsbs_id = 822
	</select>
	
	<select id="elions.bas.selectPolisLamaSurrenderEndorsement" parameterClass="string" resultClass="java.util.HashMap">
		SELECT b.mspo_policy_no_format, b.mspo_policy_no
		  FROM eka.mst_policy a, eka.mst_policy b
		 WHERE a.lstb_id = 1
		   AND a.mspo_joint_policy = b.reg_spaj
		   AND a.reg_spaj = rpad(replace(#value# ,'.'),11,' ') 
	</select>
	
	<select id="elions.bas.selectAksesAdminTerhadapAgen" parameterClass="hashMap" resultClass="int">
		SELECT count(*)
		  FROM eka.lst_user a, eka.lst_user_admin b, eka.lst_region c,
		       eka.mst_agent d
		 WHERE a.lus_id = #lus_id#
		   AND a.lus_id = b.lus_id
		   AND b.lar_id = c.lar_id
		   AND c.lca_id = d.lca_id
		   AND c.lwk_id = d.lwk_id
		   AND c.lsrg_id = d.lsrg_id
		   AND d.msag_id = #msag_id#
	</select>
	
	<select id="elions.bas.selectSlipPajakPerAdminCabangTaxRev" parameterClass="hashMap" resultClass="hashMap">
		SELECT   agen.msag_id, (klien.mcl_first ||' '|| klien.mcl_middle ||' '|| klien.mcl_last) nama_agen,
		         tax.comm msco_comm,
		         tax.tax msco_tax,
		         tax.tax_no msco_no, addr.alamat, addr.kd_pos, wakil.lwk_nama,
		         wakil.lwk_admin, agen.lca_id, agen.lwk_id, agen.lsrg_id,
		         TO_CHAR(tax.tgl, 'Mon yyyy') pay_date, addrreg.lar_nama, addrreg.lar_admin,
		         addrreg.lar_alamat, agen.msag_id, agen.msag_npwp,
		         NVL (agen.lspt_id, 0) lspt_id, 1 lstb_id
		    FROM eka.mst_address addr,
		         eka.mst_agent agen,
		         eka.mst_client klien,
		         eka.mst_agent_tax_rev tax,
		         eka.lst_wakil wakil,
		         eka.lst_addr_region addrreg,
		         eka.lst_region reg,
				 eka.lst_user_admin lus
		   WHERE tax.msag_id = agen.msag_id
		     AND agen.mcl_id = klien.mcl_id
		     AND klien.mcl_id = addr.mcl_id
		     AND reg.lar_id = addrreg.lar_id
		     AND agen.lca_id = reg.lca_id
		     AND agen.lwk_id = reg.lwk_id
		     AND agen.lsrg_id = reg.lsrg_id
		     AND agen.lca_id = wakil.lca_id
		     AND agen.lwk_id = wakil.lwk_id
		     AND tax.tgl = to_date(#yyyymm# || '01', 'yyyymmdd')
		     AND addr.msal_id = 1
			 AND lus.lus_id = #lus_id#
			 AND lus.lar_id = reg.lar_id	
	</select>
	
	<select id="elions.bas.selectSlipPajakPerAdminCabang" parameterClass="hashMap" resultClass="hashMap">
		SELECT msag_id, lca_id, lwk_id, lsrg_id, msag_npwp, lspt_id, lstb_id, nama_agen, alamat, kd_pos, lwk_nama, lwk_admin, lar_nama, lar_admin, lar_alamat, pay_date, msco_no, sum(msco_comm) msco_comm, sum(msco_tax) msco_tax, 
			   msag_kry, mspe_no_identity, nvl(lspt_value,0)lspt_value 
	   	FROM (
		SELECT   a.msag_id,
		         a.lca_id, a.lwk_id, a.lsrg_id,
		         a.msag_npwp, nvl(a.lspt_id, 0) lspt_id, 1 lstb_id,
		         eka.utils.agen (a.msag_id) nama_agen,
		         eka.utils.agen_alamat (a.msag_id) alamat,
		         eka.utils.agen_kd_pos (a.msag_id) kd_pos,
		         eka.utils.kanwil_nama(a.lca_id, a.lwk_id) lwk_nama,
		         eka.utils.kanwil_admin(a.lca_id, a.lwk_id) lwk_admin,
		         eka.utils.addr_reg_nama (a.lca_id, a.lwk_id, a.lsrg_id) lar_nama,
		         eka.utils.addr_reg_admin (a.lca_id, a.lwk_id, a.lsrg_id) lar_admin,
		         eka.utils.addr_reg_alamat (a.lca_id, a.lwk_id, a.lsrg_id) lar_alamat,
		         TO_CHAR(TO_DATE(#yyyymm# || '01','yyyymmdd'), 'Mon, yyyy') pay_date, 
		         d.msco_no, d.comm msco_comm, d.tax msco_tax,
                 a.msag_kry, klien_new.mspe_no_identity, 
                 (select
			            ptkp_val.lspt_value
			        from 
			            eka.lst_ptkp ptkp,
			            eka.mst_ptkp_value ptkp_val
			        where
			            ptkp.lspt_id = ptkp_val.lspt_id
			            and ptkp.lspt_id = a.lspt_id
			            and ptkp_val.lspt_date = (select max(lspt_date)
			                                              from eka.mst_ptkp_value
			                                              where lspt_id = a.lspt_id))lspt_value
		  FROM   eka.mst_agent a, eka.lst_region b, eka.lst_user_admin c,
		         (
					SELECT msag_id, msco_no, sum(comm) comm, sum(tax) tax FROM (		         
			          SELECT msag_id, msco_no, 
			            SUM (msco_comm + NVL (eka.comm_bonus (reg_spaj, msbi_tahun_ke, msbi_premi_ke, 0, msco_id, 1), 0)) comm, 
			            SUM (msco_tax + NVL (eka.comm_bonus (reg_spaj, msbi_tahun_ke, msbi_premi_ke, 0, msco_id, 2), 0)) tax 
			          FROM eka.mst_commission WHERE (msco_pay_date(+) BETWEEN TO_DATE(#yyyymm# || '01','yyyymmdd') AND ADD_MONTHS(TO_DATE(#yyyymm# || '01','yyyymmdd'), 1) - 1) AND msco_paid(+) = 1
			          GROUP BY msag_id, msco_no
			          UNION
			          SELECT msrk_id msag_id, msco_no, SUM(msco_comm) comm, SUM(msco_tax) tax
			          FROM eka.mst_reward WHERE (msco_pay_date(+) BETWEEN TO_DATE(#yyyymm# || '01','yyyymmdd') AND ADD_MONTHS(TO_DATE(#yyyymm# || '01','yyyymmdd'), 1) - 1) AND msco_paid(+) = 1
			          GROUP BY msrk_id, msco_no
			          UNION 
			          SELECT msag_id, msab_no msco_no,
			          SUM (msab_jlh_bonus + msab_tax + NVL(MSAB_TTL_POTONGAN, 0)) comm, 
			          SUM(msab_tax) tax 
			          FROM eka.mst_agent_bonus WHERE (msab_pay_date(+) BETWEEN TO_DATE(#yyyymm# || '01','yyyymmdd') AND ADD_MONTHS(TO_DATE(#yyyymm# || '01','yyyymmdd'), 1) - 1) AND msab_paid(+) = 1
			          GROUP BY msag_id, msab_no	          
		            ) GROUP BY msag_id, msco_no
		          ) d,
                  eka.mst_client_new klien_new
		 WHERE    a.lca_id = b.lca_id and a.lwk_id = b.lwk_id and a.lsrg_id = b.lsrg_id and b.lar_id = c.lar_id   
		      AND c.lus_id = #lus_id# AND a.msag_id = d.msag_id
		      AND a.mcl_id = klien_new.mcl_id
		) GROUP BY msag_id, lca_id, lwk_id, lsrg_id, msag_npwp, lspt_id, lstb_id, nama_agen, alamat, kd_pos, lwk_nama, lwk_admin, lar_nama, lar_admin, lar_alamat, pay_date, msco_no, msag_kry, mspe_no_identity, lspt_value
	</select>
	
	<select id="elions.bas.selectSlipPajakPerAgenTaxRev" parameterClass="hashMap" resultClass="hashMap">
		SELECT   agen.msag_id, (klien.mcl_first ||' '|| klien.mcl_middle ||' '|| klien.mcl_last) nama_agen,
		         tax.comm msco_comm,
		         tax.tax msco_tax,
		         tax.tax_no msco_no, 
				 addr.alamat, addr.kd_pos, wakil.lwk_nama,
		         wakil.lwk_admin, agen.lca_id, agen.lwk_id, agen.lsrg_id,
		         TO_CHAR(tax.tgl, 'Mon yyyy') pay_date, addrreg.lar_nama, addrreg.lar_admin,
		         addrreg.lar_alamat, agen.msag_id, agen.msag_npwp,
		         NVL (agen.lspt_id, 0) lspt_id, 1 lstb_id,
                 agen.msag_kry, klien_new.mspe_no_identity, 
                 nvl((select
			            ptkp_val.lspt_value
			        from 
			            eka.lst_ptkp ptkp,
			            eka.mst_ptkp_value ptkp_val
			        where
			            ptkp.lspt_id = ptkp_val.lspt_id
			            and ptkp.lspt_id = agen.lspt_id
			            and ptkp_val.lspt_date = (select max(lspt_date)
			                                              from eka.mst_ptkp_value
			                                              where lspt_id = agen.lspt_id)),0)lspt_value
		    FROM eka.mst_address addr,
		         eka.mst_agent agen,
		         eka.mst_client klien,
		         eka.mst_agent_tax_rev tax,
		         eka.lst_wakil wakil,
		         eka.lst_addr_region addrreg,
		         eka.lst_region reg,
                 eka.mst_client_new klien_new
		   WHERE tax.msag_id = agen.msag_id
		     AND agen.msag_id = #msag_id#
		     AND agen.mcl_id = klien.mcl_id
		     AND agen.mcl_id = klien_new.mcl_id
		     AND klien.mcl_id = addr.mcl_id
		     AND reg.lar_id = addrreg.lar_id
		     AND agen.lca_id = reg.lca_id
		     AND agen.lwk_id = reg.lwk_id
		     AND agen.lsrg_id = reg.lsrg_id
		     AND agen.lca_id = wakil.lca_id
		     AND agen.lwk_id = wakil.lwk_id
		     AND tax.tgl = to_date(#yyyymm# || '01', 'yyyymmdd')
		     AND addr.msal_id = 1			
	</select>
	
	<select id="elions.bas.selectSlipPajakPerAgen" parameterClass="hashMap" resultClass="hashMap">
		<!-- SELECT msag_id, lca_id, lwk_id, lsrg_id, msag_npwp, lspt_id, lstb_id, nama_agen, alamat, kd_pos, lwk_nama, lwk_admin, lar_nama, lar_admin, lar_alamat, pay_date, msco_no, sum(msco_comm) msco_comm, sum(msco_tax) msco_tax,
			   msag_kry, mspe_no_identity, nvl(lspt_value,0)lspt_value 
		FROM (
		SELECT   a.msag_id,
		         a.lca_id, a.lwk_id, a.lsrg_id,
		         a.msag_npwp, nvl(a.lspt_id, 0) lspt_id, 1 lstb_id,
		         eka.utils.agen (a.msag_id) nama_agen,
		         eka.utils.agen_alamat (a.msag_id) alamat,
		         eka.utils.agen_kd_pos (a.msag_id) kd_pos,
		         eka.utils.kanwil_nama(a.lca_id, a.lwk_id) lwk_nama,
		         eka.utils.kanwil_admin(a.lca_id, a.lwk_id) lwk_admin,
		         eka.utils.addr_reg_nama (a.lca_id, a.lwk_id, a.lsrg_id) lar_nama,
		         eka.utils.addr_reg_admin (a.lca_id, a.lwk_id, a.lsrg_id) lar_admin,
		         eka.utils.addr_reg_alamat (a.lca_id, a.lwk_id, a.lsrg_id) lar_alamat,
		         TO_CHAR(TO_DATE(#yyyymm# || '01','yyyymmdd'), 'Mon, yyyy') pay_date, 
		         kom.nomor msco_no,
		         kom.comm msco_comm,
		         kom.tax msco_tax,
                 a.msag_kry, klien_new.mspe_no_identity, 
                 (select
			            ptkp_val.lspt_value
			        from 
			            eka.lst_ptkp ptkp,
			            eka.mst_ptkp_value ptkp_val
			        where
			            ptkp.lspt_id = ptkp_val.lspt_id
			            and ptkp.lspt_id = a.lspt_id
			            and ptkp_val.lspt_date = (select max(lspt_date)
			                                              from eka.mst_ptkp_value
			                                              where lspt_id = a.lspt_id))lspt_value
		  FROM   eka.mst_agent a,
		            (
		            SELECT   msag_id msag_id, msco_no nomor, 
		                     SUM (msco_comm + NVL (eka.comm_bonus (reg_spaj, msbi_tahun_ke, msbi_premi_ke, 0, msco_id, 1), 0)) comm, 
		                     SUM (msco_tax + NVL (eka.comm_bonus (reg_spaj, msbi_tahun_ke, msbi_premi_ke, 0, msco_id, 2), 0)) tax
		                FROM eka.mst_commission
		               WHERE msag_id = #msag_id# AND (msco_pay_date BETWEEN TO_DATE(#yyyymm# || '01','yyyymmdd') AND ADD_MONTHS(TO_DATE(#yyyymm# || '01','yyyymmdd'), 1) - 1) AND msco_paid = 1
		            GROUP BY msag_id, msco_no   
		            UNION
		            SELECT   trim(msrk_id) msag_id, msco_no nomor, 
		                     SUM (msco_comm) comm, 
		                     SUM (msco_tax) tax 
		                FROM EKA.MST_REWARD 
		               WHERE trim(msrk_ID) = #msag_id# AND (msco_pay_date BETWEEN TO_DATE(#yyyymm# || '01','yyyymmdd') AND ADD_MONTHS(TO_DATE(#yyyymm# || '01','yyyymmdd'), 1) - 1) AND msco_paid = 1
		            GROUP BY msrk_id, msco_no 
		            UNION
		            SELECT   msag_id, msab_no nomor, 
							 SUM (msab_jlh_bonus + msab_tax + NVL(MSAB_TTL_POTONGAN, 0)) comm, 
		                     SUM (msab_tax) tax 
		                FROM EKA.MST_AGENT_BONUS 
		               WHERE msag_id = #msag_id# AND (msab_pay_date BETWEEN TO_DATE(#yyyymm# || '01','yyyymmdd') AND ADD_MONTHS(TO_DATE(#yyyymm# || '01','yyyymmdd'), 1) - 1) AND msab_paid = 1
		            GROUP BY msag_id, msab_no
		            UNION
                    SELECT   #msag_id# msag_id, msco_no nomor, 
                             SUM (msco_comm) comm, 
                             SUM (msco_tax) tax
                        FROM eka.mst_commission@eb
                       WHERE (msag_id = (select msag_eb from eka.mst_agent where msag_id = #msag_id#) or msag_id = #msag_id#) 
                       	 AND (msco_pay_date BETWEEN TO_DATE(#yyyymm# || '01','yyyymmdd') AND ADD_MONTHS(TO_DATE(#yyyymm# || '01','yyyymmdd'), 1) - 1) AND msco_paid = 1
                    GROUP BY msag_id, msco_no                       
		            ) kom,
                    eka.mst_client_new klien_new
		 WHERE   a.msag_id = #msag_id# AND a.msag_id = kom.msag_id
		 		 AND a.mcl_id = klien_new.mcl_id
		) GROUP BY msag_id, lca_id, lwk_id, lsrg_id, msag_npwp, lspt_id, lstb_id, nama_agen, alamat, kd_pos, lwk_nama, lwk_admin, lar_nama, lar_admin, lar_alamat, pay_date, msco_no, msag_kry, mspe_no_identity, lspt_value
	 -->
	select b.msag_id, b.lca_id, b.lwk_id, b.lsrg_id, b.msag_npwp, nvl(b.lspt_id, 0) lspt_id, 1 lstb_id,
	    c.mcl_first nama_agen, d.alamat, d.kd_pos, eka.utils.kanwil_nama(b.lca_id, b.lwk_id) lwk_nama, eka.utils.kanwil_admin(b.lca_id, b.lwk_id) lwk_admin, 
	    eka.utils.addr_reg_nama (b.lca_id, b.lwk_id, b.lsrg_id) lar_nama, eka.utils.addr_reg_admin (b.lca_id, b.lwk_id, b.lsrg_id) lar_admin,
	    eka.utils.addr_reg_alamat (b.lca_id, b.lwk_id, b.lsrg_id) lar_alamat, to_char(to_date(#yyyymm#,'yyyymm'), 'Mon, yyyy') pay_date, 
	    msco_no, bruto msco_comm, tax msco_tax, b.msag_kry, c.mspe_no_identity, 
	    nvl(
	        (select ptkp_val.lspt_value
	        from 
	        eka.lst_ptkp ptkp,
	        eka.mst_ptkp_value ptkp_val
	        where
	        ptkp.lspt_id = ptkp_val.lspt_id
	        and ptkp.lspt_id = b.lspt_id
	        and ptkp_val.lspt_date = (select max(lspt_date)
	                                    from eka.mst_ptkp_value
	                                    where lspt_id = b.lspt_id))
	        , 0
	        )lspt_value
	from (      
	      select x.mta_no msco_no,  x.msag_id msag_id,
	         sum(x.mta_bruto) bruto, sum(x.mta_tax) tax,
	         trunc( sum(x.mta_tax)/(sum(x.mta_bruto) /2 - (select nvl(lspt_value /12, 0) from eka.mst_ptkp_value x, eka.mst_agent z where x.lspt_id = z.lspt_id and z.msag_id = x.msag_id and x.lspt_date = (select max(y.lspt_date) from eka.mst_ptkp_value  y where x.lspt_id = y.lspt_id) ))*100,0) as tarif,
	         nvl((select nvl(lspt_value /12, 0) from eka.mst_ptkp_value x, eka.mst_agent z where x.lspt_id = z.lspt_id and z.msag_id = x.msag_id and x.lspt_date = (select max(y.lspt_date) from eka.mst_ptkp_value  y where x.lspt_id = y.lspt_id)),0) as ptkp
	      from  eka.mst_tax_all x
	      where to_char(x.mta_tahun)||trim(to_char(x.mta_bulan, '00')) = #yyyymm#
	      and mta_jenis in (1,2,3,10)
	      group by x.mta_no, x.msag_id) a,
	      eka.mst_agent b, 
	      eka.mst_client_new c,
	      eka.mst_address d,
	      eka.lst_ptkp e,
	      eka.lst_wakil f
	where  a.msag_id      = b.msag_id    and
	      b.mcl_id       = c.mcl_id     and
	      c.mcl_id       = d.mcl_id(+)  and
	      b.lspt_id      = e.lspt_id(+) and
	      b.lca_id = f.lca_id and
	      b.lwk_id = f.lwk_id and
	      d.msal_id(+) = 1    and 
	      d.lja_id (+) = 1     
	      and a.msag_id = #msag_id#
	union all
	select g.msag_id, g.lca_id, g.lwk_id, g.lsrg_id, g.msag_npwp, nvl(g.lspt_id, 0) lspt_id, 1 lstb_id,
    c.mcl_first nama_agen, d.alamat, d.kd_pos, eka.utils.kanwil_nama(g.lca_id, g.lwk_id) lwk_nama, eka.utils.kanwil_admin(g.lca_id, g.lwk_id) lwk_admin, 
    eka.utils.addr_reg_nama (g.lca_id, g.lwk_id, g.lsrg_id) lar_nama, eka.utils.addr_reg_admin (g.lca_id, g.lwk_id, g.lsrg_id) lar_admin,
    eka.utils.addr_reg_alamat (g.lca_id, g.lwk_id, g.lsrg_id) lar_alamat, to_char(to_date(#yyyymm#,'yyyymm'), 'Mon, yyyy') pay_date,
    msco_no, bruto msco_comm, tax msco_tax, g.msag_kry, '' mspe_no_identity, 
	nvl(
        (select ptkp_val.lspt_value
        from 
        eka.lst_ptkp ptkp,
        eka.mst_ptkp_value ptkp_val
        where
        ptkp.lspt_id = ptkp_val.lspt_id
        and ptkp.lspt_id(+) = g.lspt_id
        and ptkp_val.lspt_date = (select max(lspt_date)
                                    from eka.mst_ptkp_value
                                    where lspt_id (+)= g.lspt_id))
        , 0
        )lspt_value
	from (      
	      select x.mta_no msco_no,  x.msag_id msag_id,       
	       sum(x.mta_bruto) bruto, sum(x.mta_tax) tax,
	       trunc( sum(x.mta_tax)/(sum(x.mta_bruto) /2 )*100,0) as tarif,
	       0 as ptkp
	      from  eka.mst_tax_all x
	      where to_char(x.mta_tahun)||trim(to_char(x.mta_bulan, '00')) = #yyyymm#
	      and mta_jenis in (5,6,11)
	      group by x.mta_no, x.msag_id) a,
	      eka.mst_agent@eb b, 
	      eka.mst_client@eb c,
	      eka.mst_address@eb d,      
	      eka.mst_person@eb e,
	      eka.lst_wakil@eb f,
	      eka.mst_agent g
	where  a.msag_id      = b.msag_id    and
	      b.mcl_id       = c.mcl_id     and
	      e.mcl_id = b.mcl_id and
	      c.mcl_id       = d.mcl_id(+)  and  
	      b.lca_id = f.lca_id and
          b.lwk_id = f.lwk_id and
	      b.msag_id = g.msag_eb and
	      g.msag_id= #msag_id# and
	      d.msal_id(+) = 1    and 
	      d.lja_id (+) = 1   
	</select>
	<!-- SELECT   agen.msag_id, (klien.mcl_first ||' '|| klien.mcl_middle ||' '|| klien.mcl_last) nama_agen,
		         SUM (kom.msco_comm + NVL (eka.comm_bonus (kom.reg_spaj, kom.msbi_tahun_ke, kom.msbi_premi_ke, 0, kom.msco_id, 1), 0)) msco_comm,
		         SUM (kom.msco_tax + NVL (eka.comm_bonus (kom.reg_spaj, kom.msbi_tahun_ke, kom.msbi_premi_ke, 0, kom.msco_id, 2),0)) msco_tax,
		         kom.msco_no, addr.alamat, addr.kd_pos, wakil.lwk_nama,
		         wakil.lwk_admin, agen.lca_id, agen.lwk_id, agen.lsrg_id,
		         TO_CHAR(kom.msco_pay_date, 'Mon yyyy') pay_date, addrreg.lar_nama, addrreg.lar_admin,
		         addrreg.lar_alamat, agen.msag_id, agen.msag_npwp,
		         NVL (agen.lspt_id, 0) lspt_id, pol.lstb_id
		    FROM eka.mst_address addr,
		         eka.mst_agent agen,
		         eka.mst_client klien,
		         eka.mst_commission kom,
		         eka.lst_wakil wakil,
		         eka.lst_addr_region addrreg,
		         eka.lst_region reg,
		         eka.mst_policy pol
		   WHERE kom.msag_id = agen.msag_id
		     AND agen.msag_id = #msag_id#
		     AND agen.mcl_id = klien.mcl_id
		     AND klien.mcl_id = addr.mcl_id
		     AND reg.lar_id = addrreg.lar_id
		     AND agen.lca_id = reg.lca_id
		     AND agen.lwk_id = reg.lwk_id
		     AND agen.lsrg_id = reg.lsrg_id
		     AND agen.lca_id = wakil.lca_id
		     AND agen.lwk_id = wakil.lwk_id
		     AND kom.reg_spaj = pol.reg_spaj
		     AND (kom.msco_pay_date BETWEEN TO_DATE(#yyyymm# || '01','yyyymmdd') AND ADD_MONTHS(TO_DATE(#yyyymm# || '01','yyyymmdd'), 1) - 1)
		     AND kom.msco_comm <![CDATA[<>]]> 0
		     AND kom.msag_id NOT IN ('021016')
		     AND addr.msal_id = 1
		     AND (kom.msco_tax + NVL (eka.comm_bonus (kom.reg_spaj, kom.msbi_tahun_ke, kom.msbi_premi_ke, 0, kom.msco_id, 2), 0) <![CDATA[<>]]> 0)
		GROUP BY agen.msag_id,
			  	 (klien.mcl_first ||' '|| klien.mcl_middle ||' '|| klien.mcl_last),
		         kom.msco_no,
		         addr.alamat,
		         addr.kd_pos,
		         wakil.lwk_nama,
		         wakil.lwk_admin,
		         agen.lca_id,
		         agen.lwk_id,
		         agen.lsrg_id,
		         TO_CHAR(kom.msco_pay_date, 'Mon yyyy'),
		         addrreg.lar_nama,
		         addrreg.lar_admin,
		         addrreg.lar_alamat,
		         agen.msag_id,
		         agen.msag_npwp,
		         NVL (agen.lspt_id, 0),
		         pol.lstb_id -->
		         	
	<!--
		0 / null = belum di approve, 
		1 = approve / diapprove oleh BAS
		2 = reject / ditolak oleh BAS
		3 = cancel / dibatalkan oleh branch admin
		4 = sent / sudah dikirim GA
		5 = received / sudah diterima cabang
		6 = acknowledged / sudah dipertanggungjawabkan oleh agen
	-->
		
	<select id="elions.bas.selectFormHistory" parameterClass="formHist" resultClass="formHist">
		SELECT   msf_id, msf_urut, posisi, msfh_lus_id, msfh_dt, msfh_desc, b.lus_login_name,
			(case 
				when (posisi = 0 or posisi = null) then 'REQUESTED' 
				when posisi = 1 then 'APPROVED' when posisi = 2 then 'CANCELLED'
				when posisi = 3 then 'REJECTED' when posisi = 4 then 'SENT'
				when posisi = 5 then 'RECEIVED' when posisi = 6 then 'ACKNOWLEDGED'
			else 'ERROR' end) status_form
		    FROM eka.mst_form_hist a, eka.lst_user b
		   WHERE a.msfh_lus_id = b.lus_id
			<dynamic>
				<isNotEmpty prepend=" AND " property="msf_id"> msf_id = #msf_id# </isNotEmpty>
				<isNotEmpty prepend=" AND " property="msf_urut"> msf_urut = #msf_urut# </isNotEmpty>
				<isNotEmpty prepend=" AND " property="posisi"> posisi = #posisi# </isNotEmpty>
			</dynamic>
		ORDER BY msf_urut
	</select>
	
	<select id="elions.bas.selectMstformGetNoBlanko" parameterClass="string" resultClass="string">
		SELECT NO_BLANKO_REQ
			FROM EKA.MST_FORM
			WHERE LSJS_ID = 9
			AND MSF_ID = #msf_id#
	</select>

	<select id="elions.bas.selectNoUrutFormHistory" parameterClass="string" resultClass="int">
		SELECT MAX (msf_urut)
		  FROM eka.mst_form_hist
		 WHERE msf_id = #msf_id#
	</select>
	
	<select id="elions.bas.selectExistNoKartuSimasCard" parameterClass="string" resultClass="string">
		SELECT no_kartu
		  FROM eka.mst_kartu_pas
		 WHERE no_kartu = #nokartu# 
		 AND produk = '05'
	</select>
	
	<select id="elions.bas.selectExistNoKartuDbd" parameterClass="string" resultClass="string">
		SELECT no_kartu
		  FROM eka.mst_kartu_pas
		 WHERE no_kartu = #nokartu# 
		 AND produk = '09'
	</select>
	
	<select id="elions.bas.selectExistNoKartuPasBp" parameterClass="string" resultClass="string">
		SELECT no_kartu
		  FROM eka.mst_kartu_pas
		 WHERE no_kartu = #nokartu# 
		 AND produk = '10'
	</select>
	
	<select id="elions.bas.selectExistNoKartuHcp" parameterClass="string" resultClass="string">
		SELECT no_kartu
		  FROM eka.mst_kartu_pas
		 WHERE no_kartu = #nokartu# 
		 AND produk = '07'
	</select>

	<select id="elions.bas.selectNewFormSpaj" parameterClass="formSpaj" resultClass="formSpaj">
		  SELECT #mss_jenis# mss_jenis, b.lca_id, b.lca_nama, lsjs_id, 0 msab_id, 0 msf_amount_req, lsjs_desc, lsjs_prefix,
				 'REQUESTED' status_form, 0 posisi, 0 status_permintaan
		    FROM eka.lst_jenis_spaj a, eka.lst_cabang b WHERE lsjs_id not in(0,15)
		     AND a.aktif = 1
		     AND b.lca_id = #lca_id#
		     AND a.jenis = 0
		UNION 
		  SELECT #mss_jenis# mss_jenis, b.lca_id, b.lca_nama, a.lsjs_id, 0 msab_id,
		         0 msf_amount_req, lsjs_desc, lsjs_prefix, 'REQUESTED' status_form,
		         0 posisi, 0 status_permintaan
		    FROM eka.lst_jenis_spaj a, 
				 eka.lst_cabang b,
				 eka.lst_adm_travel_ins c
		   WHERE aktif = 1 
		     AND b.lca_id = #lca_id#
			 AND a.lsjs_id = c.lsjs_id
			 AND c.lus_id = #lus_id#
			 and a.jenis = 0     
		ORDER BY lsjs_desc
	</select>

	<select id="elions.bas.selectNewFormBlanko" parameterClass="formSpaj" resultClass="formSpaj">
		SELECT   #mss_jenis# mss_jenis, b.lca_id, b.lca_nama, lsjs_id, 0 msab_id, 0 msf_amount_req, lsjs_desc, lsjs_prefix,
			'REQUESTED' status_form, 0 posisi, 0 status_permintaan
		    FROM eka.lst_jenis_spaj a, eka.lst_cabang b WHERE lsjs_id = 0
		    AND b.lca_id = #lca_id#
		ORDER BY lsjs_desc
	</select>
	
	<select id="elions.bas.selectFormSpaj" parameterClass="formSpaj" resultClass="formSpaj">
		SELECT   a.msf_id, a.mss_jenis, a.lca_id, a.lsjs_id, a.msab_id, a.lus_id,a.msf_amount,
		         a.msf_amount_req, a.start_no_blanko, a.end_no_blanko,a.no_blanko_req,a.bmi_id,a.trav_ins_type,
		         NVL (a.posisi, 0) posisi, b.lsjs_desc, b.lsjs_prefix, c.lca_nama,
		         (CASE WHEN (posisi = 0 OR posisi = NULL) THEN 'REQUESTED' WHEN posisi = 1 THEN 'APPROVED'
		             WHEN posisi = 2 THEN 'CANCELLED' WHEN posisi = 3 THEN 'REJECTED'
		             WHEN posisi = 4 THEN 'SENT' WHEN posisi = 5 THEN 'RECEIVED'
		             WHEN posisi = 6 THEN 'ACKNOWLEDGED' ELSE 'ERROR'
		          END) status_form,
		         a.status_permintaan,a.no_blanko_req,e.msag_id ,f.mcl_first nama_agen, a.bukti_pemb_pas as bukti_pembayaran
		    FROM eka.mst_form a,
		         eka.lst_jenis_spaj b,
		         eka.lst_cabang c,
		         eka.mst_agent_branch d,
		         eka.mst_agent e,
		         eka.mst_client_new f
		   WHERE a.msf_id = #msf_id#
		     AND a.lsjs_id = b.lsjs_id
		     AND a.lca_id = c.lca_id
		     AND a.msab_id=d.msab_id
		     AND d.msag_id=e.msag_id
		     AND e.mcl_id=f.mcl_id
		     AND b.jenis = 0
		ORDER BY b.lsjs_desc
	</select>

	<select id="elions.bas.selectCekSpaj" parameterClass="formSpaj" resultClass="int">
		SELECT COUNT (*)
		  FROM eka.mst_spaj
		 WHERE mss_jenis = #mss_jenis# AND lca_id = #lca_id# AND lsjs_id = #lsjs_id# 
		 		AND msab_id = #msab_id# and lus_id=#lus_id#
	</select>

	<select id="elions.bas.selectSisaSpaj" parameterClass="formSpaj" resultClass="int">
		SELECT mss_amount
		  FROM eka.mst_spaj
		 WHERE mss_jenis = #mss_jenis# AND lca_id = #lca_id# AND lsjs_id = #lsjs_id# AND msab_id = #msab_id# and lus_id=#lus_id#
	</select>

	<select id="elions.bas.selectDaftarFormSpaj" parameterClass="formSpaj" resultClass="formSpaj">
		SELECT   b.lca_nama, a.msf_id,
				(case 
					when (a.posisi = 0 or a.posisi = null) then 'REQUESTED' 
					when a.posisi = 1 then 'APPROVED' when a.posisi = 2 then 'CANCELLED'
					when a.posisi = 3 then 'REJECTED' when a.posisi = 4 then 'SENT'
					when a.posisi = 5 then 'RECEIVED' when a.posisi = 6 then 'ACKNOWLEDGED'
				else 'ERROR' end) status_form, a.status_permintaan, c.msfh_dt
		    FROM eka.mst_form a, eka.lst_cabang b, eka.mst_form_hist c
		    <isEqual property="mcl_first" compareValue="special">
		    ,(select distinct msf_id from eka.mst_form 
                   where lsjs_id in (16,17,18,19)
                     and msf_amount_req != '0') special_case	
		    </isEqual>
		   WHERE a.lca_id = b.lca_id 
		   		and a.mss_jenis = #mss_jenis# 
           		AND a.msab_id = #msab_id#
           		AND a.msf_id=c.msf_id
           		AND a.posisi=c.posisi
		   <isNotEmpty property="lus_id" prepend=" AND "> a.lus_id= #lus_id# </isNotEmpty>
		   <isNotEmpty property="lca_id" prepend=" AND "> a.lca_id = #lca_id# </isNotEmpty>
		   <isEqual property="mcl_first" compareValue="special">
		   		AND a.msf_id = special_case.msf_id
		   </isEqual>
		   <isEmpty property="pos"> 
			   <isNotEmpty property="posisi" prepend=" AND "> nvl(a.posisi,0) = #posisi# 
			   </isNotEmpty> 
		   </isEmpty> 
		   <isNotEmpty property="pos" prepend=" AND "> a.posisi in($pos$)</isNotEmpty> 
		GROUP BY b.lca_nama, a.msf_id, a.posisi, a.status_permintaan, c.msfh_dt
		ORDER BY b.lca_nama, msf_id
	</select>

	<select id="elions.bas.selectJenisForm" resultClass="dropDown">
		SELECT lsjs_id value, lsjs_desc label, lsjs_prefix key
		FROM eka.lst_jenis_spaj 
		WHERE lsjs_id != 0 
		ORDER BY lsjs_id
	</select>

	<select id="elions.bas.selectDaftarFormCari" parameterClass="string" resultClass="formSpaj">
		SELECT   b.lca_nama, a.msf_id,
				(case 
					when (posisi = 0 or posisi = null) then 'REQUESTED' 
					when posisi = 1 then 'APPROVED' when posisi = 2 then 'CANCELLED'
					when posisi = 3 then 'REJECTED' when posisi = 4 then 'SENT'
					when posisi = 5 then 'RECEIVED' when posisi = 6 then 'ACKNOWLEDGED'
				else 'ERROR' end) status_form, a.status_permintaan
		    FROM eka.mst_form a, eka.lst_cabang b
		   WHERE a.lca_id = b.lca_id AND a.msf_id like upper('%' || #value# || '%')
		GROUP BY b.lca_nama, a.msf_id, a.posisi, a.status_permintaan
		ORDER BY b.lca_nama, msf_id
	</select>

	<!-- AND lca_id = #lca_id# -->
	<select id="elions.bas.selectStokSpaj" parameterClass="spaj" resultClass="spaj">
		<!-- Stock Cabang-->
		  SELECT a.mss_jenis, a.lca_id, a.lsjs_id, a.msab_id, nvl(a.mss_amount,0) mss_amount,
		         a.modify_lus_id, a.modify_dt, b.lsjs_desc,
		         NVL (b.lsjs_prefix, '-') lsjs_prefix
		    FROM (SELECT *
		            FROM eka.mst_spaj
		           WHERE mss_jenis = #mss_jenis# AND msab_id = #msab_id# 
		           	AND lca_id = #lca_id# 
		           	AND lus_id=#lus_id#
		           ) a,
		         eka.lst_jenis_spaj b
		   WHERE b.lsjs_id not in(0,15) AND b.lsjs_id = a.lsjs_id(+) AND b.jenis = 0
		   UNION   
		  SELECT a.mss_jenis, a.lca_id, a.lsjs_id, a.msab_id,
		         NVL (a.mss_amount, 0) mss_amount, a.modify_lus_id, a.modify_dt,
		         b.lsjs_desc, NVL (b.lsjs_prefix, '-') lsjs_prefix
		    FROM (SELECT *
		            FROM eka.mst_spaj
		           WHERE mss_jenis = #mss_jenis# AND msab_id = #msab_id# AND lca_id = #lca_id# AND lus_id = #lus_id#) a,
		         eka.lst_jenis_spaj b,
				 eka.lst_adm_travel_ins c
		   WHERE b.lsjs_id > 0 AND b.lsjs_id = a.lsjs_id(+)
		     AND b.lsjs_id = c.lsjs_id
			 AND c.lus_id = #lus_id#    
			 AND b.jenis = 0
		ORDER BY lsjs_prefix
	</select>	
	<select id="elions.bas.selectStokSpajAgen" parameterClass="spaj" resultClass="spaj">
		<!-- Stock Agen-->
			SELECT   SUM(NVL(a.mss_amount,0))mss_amount , a.lsjs_id,a.msab_id,b.lsjs_desc  ,NVL (b.lsjs_prefix, '-') lsjs_prefix
				,a.mss_jenis
			    FROM (SELECT *
			            FROM eka.mst_spaj
			           WHERE mss_jenis = #mss_jenis# AND msab_id = #msab_id#
					   ) a,
			         eka.lst_jenis_spaj b
			   WHERE b.lsjs_id > 0 
			        AND b.lsjs_id = a.lsjs_id(+)
			        AND b.jenis = 0
			GROUP BY mss_amount,a.lsjs_id,a.msab_id,b.lsjs_desc,lsjs_prefix,a.mss_jenis
			ORDER BY lsjs_id	
	</select>

	<select id="elions.bas.selectStokBlanko" parameterClass="spaj" resultClass="spaj">
	SELECT   a.mss_jenis, a.lca_id, a.lsjs_id, a.msab_id, nvl(a.mss_amount,0) mss_amount,
		         a.modify_lus_id, a.modify_dt, b.lsjs_desc,
		         c.lca_nama lsjs_prefix, a.damage,d.lus_login_name,c.lca_nama
		    FROM (SELECT *
		            FROM eka.mst_spaj
		           WHERE mss_jenis = #mss_jenis# AND lca_id = #lca_id# AND msab_id = #msab_id#) a,
		         eka.lst_jenis_spaj b,
				 eka.lst_cabang c,
				 eka.lst_user d
		   WHERE b.lsjs_id = 0 AND b.lsjs_id = a.lsjs_id(+) and
		   c.lca_id = a.lca_id and
		   a.modify_lus_id = d.lus_id
		ORDER BY b.lsjs_prefix
	</select>

	<select id="elions.bas.selectUserAdmin" parameterClass="int" resultClass="region">
		SELECT   a.lus_id, b.lar_id, b.lca_id, b.lwk_id, b.lsrg_id, b.lsrg_nama,
		         b.lsrg_alamat, (b.lca_id || b.lwk_id || b.lsrg_id) lca_lwk_lsrg
		    FROM eka.lst_user_admin a, eka.lst_region b
		   WHERE a.lus_id = #value# AND a.lar_id = b.lar_id
		ORDER BY lsrg_nama 	
	</select>

	<select id="elions.bas.selectAgentFromRegion" parameterClass="string" resultClass="agen">
		SELECT   a.msag_id, b.mcl_first,
		         (CASE
		             WHEN a.lsle_id = 4 THEN 'ME'
		             WHEN a.lsle_id = 3 THEN 'UM'
		             WHEN a.lsle_id = 2 THEN 'BM'
		             WHEN (a.lsle_id = 1 AND msag_sbm = 1) THEN 'SBM'
		             WHEN (a.lsle_id = 1 AND msag_sbm = 0) THEN 'RM'
		             ELSE '-'
		          END
		         ) tingkat, c.msab_id, replace(b.mcl_first, '''', '\''') msab_nama, a.lca_id, a.lwk_id, a.lsrg_id
		    FROM eka.mst_agent a, eka.mst_client_new b, eka.mst_agent_branch c
		   WHERE a.mcl_id = b.mcl_id and a.msag_id = c.msag_id(+)
		     AND a.lstb_id = 1
		     AND a.msag_active = 1
		     AND a.lca_id = SUBSTR (#value#, 1, 2)
		     AND a.lwk_id = SUBSTR (#value#, 3, 2)
		     AND a.lsrg_id = SUBSTR (#value#, 5, 2)
		ORDER BY b.mcl_first		
	</select>

	<select id="elions.bas.selectAllAgentFromRegion" parameterClass="int" resultClass="agen">
		SELECT   a.msag_id, b.mcl_first,
		         (CASE
		             WHEN a.lsle_id = 4 THEN 'ME'
		             WHEN a.lsle_id = 3 THEN 'UM'
		             WHEN a.lsle_id = 2 THEN 'BM'
		             WHEN (a.lsle_id = 1 AND msag_sbm = 1) THEN 'SBM'
		             WHEN (a.lsle_id = 1 AND msag_sbm = 0) THEN 'RM'
		             ELSE '-' END) tingkat,
		         c.msab_id, replace(b.mcl_first, '''', '\''') msab_nama, d.lsrg_nama, a.lca_id, a.lwk_id, a.lsrg_id
		    FROM eka.mst_agent a,
		         eka.mst_client_new b,
		         eka.mst_agent_branch c,
		         (SELECT b.lca_id, b.lwk_id, b.lsrg_id, b.lsrg_nama
		            FROM eka.lst_user_admin a, eka.lst_region b
		           WHERE a.lus_id = #value# AND a.lar_id = b.lar_id) d
		   WHERE a.mcl_id = b.mcl_id
		     AND a.msag_id = c.msag_id(+)
		     AND a.lstb_id = 1
		     AND a.msag_active = 1
		     AND a.lca_id = d.lca_id
		     AND a.lwk_id = d.lwk_id
		     AND a.lsrg_id = d.lsrg_id
		ORDER BY d.lsrg_nama, b.mcl_first			
	</select>

	<select id="elions.bas.selectAgentBranchFromRegion" parameterClass="string" resultClass="agen">
		SELECT msab_id, msag_id, replace(msab_nama, '''', '\''') msab_nama, lca_id, lwk_id, lsrg_id
		  FROM eka.mst_agent_branch
		   WHERE lca_id = SUBSTR (#value#, 1, 2)
		     AND lwk_id = SUBSTR (#value#, 3, 2)
		     AND lsrg_id = SUBSTR (#value#, 5, 2)
		     AND msag_id = '000000'
		ORDER BY msab_nama
	</select>

	<select id="elions.bas.selectAllAgentBranchFromRegion" parameterClass="int" resultClass="agen">
		SELECT msab_id, msag_id, replace(msab_nama, '''', '\''') msab_nama, b.lsrg_nama, a.lca_id, a.lwk_id, a.lsrg_id
		  FROM eka.mst_agent_branch a,
		         (SELECT b.lca_id, b.lwk_id, b.lsrg_id, b.lsrg_nama
		            FROM eka.lst_user_admin a, eka.lst_region b
		           WHERE a.lus_id = #value# AND a.lar_id = b.lar_id) b		  
		   WHERE a.lca_id = b.lca_id
		     AND a.lwk_id = b.lwk_id
		     AND a.lsrg_id = b.lsrg_id
		     AND a.msag_id = '000000'
		ORDER BY b.lsrg_nama, a.msab_nama
	</select>

	<select id="elions.bas.selectAllAgentFromBranch" parameterClass="agen" resultClass="agen">
			SELECT   a.msag_id, b.mcl_first,
		         (CASE
		             WHEN a.lsle_id = 4
		                THEN 'ME'
		             WHEN a.lsle_id = 3
		                THEN 'UM'
		             WHEN a.lsle_id = 2
		                THEN 'BM'
		             WHEN (a.lsle_id = 1 AND msag_sbm = 1)
		                THEN 'SBM'
		             WHEN (a.lsle_id = 1 AND msag_sbm = 0)
		                THEN 'RM'
		             ELSE '-'
		          END
		         ) tingkat,
		         c.msab_id, REPLACE (b.mcl_first, '''', '\''') msab_nama,
		         a.lca_id, a.lwk_id, a.lsrg_id,d.lsrg_nama,a.msag_sp
		    FROM eka.mst_agent a,
		         eka.mst_client_new b,
		         eka.mst_agent_branch c,
				 eka.lst_region d
		   WHERE a.mcl_id = b.mcl_id
		     AND a.msag_id = c.msag_id(+)
		     AND a.lstb_id = #lstb_id#
		     AND a.msag_active = #msag_active#
			 AND a.lca_id=d.lca_id 
			 AND a.lwk_id=d.lwk_id
			 AND a.lsrg_id=d.lsrg_id 
			 <isNotEqual property="lca_id" compareValue="All">
			     AND a.lca_id = #lca_id#
			 </isNotEqual>
	</select>


	<select id="elions.bas.selectLastAgentBranchId" resultClass="int">
		select max(msab_id)+1 from eka.mst_agent_branch
	</select>

	<resultMap id="result.historyAgent" class="com.ekalife.elions.model.FormSpaj">
		<result property="msf_id" column="msf_id" javaType="string" jdbcType="VARCHAR" />
		<result property="posisi" column="posisi" javaType="int" jdbcType="NUMBER" />
		<result property="status_form" column="status_form" javaType="string" jdbcType="CHAR" nullValue="" />
		<result property="agen.lca_id" column="lca_id" javaType="string" jdbcType="CHAR" nullValue="" />
		<result property="agen.lwk_id" column="lwk_id" javaType="string" jdbcType="CHAR" nullValue="" />
		<result property="agen.lsrg_id" column="lsrg_id" javaType="string" jdbcType="CHAR" nullValue="" />
		<result property="agen.msag_id" column="msag_id" javaType="string" jdbcType="CHAR" nullValue="" />
		<result property="agen.msab_nama" column="msab_nama" javaType="string" jdbcType="VARCHAR" />
		<result property="agen.msab_id" column="msab_id" javaType="int" jdbcType="NUMBER" />
		<result property="agen.lsrg_nama" column="lsrg_nama" javaType="string" jdbcType="VARCHAR" />	
	</resultMap>

	<select id="elions.bas.selectHistoryAgentAllRegion" parameterClass="int" resultMap="result.historyAgent">
		SELECT a.msag_id, a.msab_nama, a.msab_id, b.lsrg_nama, b.lca_id, b.lwk_id,
		       b.lsrg_id, c.msf_id, c.posisi,
		       (CASE
		           WHEN (posisi = 0 OR posisi = NULL) THEN 'REQUESTED' WHEN posisi = 1 THEN 'APPROVED' 
				   WHEN posisi = 2 THEN 'CANCELLED' WHEN posisi = 3 THEN 'REJECTED' 
				   WHEN posisi = 4 THEN 'SENT' WHEN posisi = 5 THEN 'RECEIVED'
		           WHEN posisi = 6 THEN 'ACKNOWLEDGED' ELSE 'ERROR'
		        END
		       ) status_form
		  FROM eka.mst_agent_branch a,
		       (SELECT b.lca_id, b.lwk_id, b.lsrg_id, b.lsrg_nama
		          FROM eka.lst_user_admin a, eka.lst_region b
		         WHERE a.lus_id = #value# AND a.lar_id = b.lar_id) b,
		       (SELECT   msab_id, msf_id, posisi
		            FROM eka.mst_form
		           WHERE mss_jenis = 1
		        GROUP BY msab_id, msf_id, posisi) c
		 WHERE a.lca_id = b.lca_id
		   <!--AND c.posisi <![CDATA[<>]]> 6-->
		   AND a.lwk_id = b.lwk_id
		   AND a.lsrg_id = b.lsrg_id
		   AND a.msab_id = c.msab_id
	</select>

	<select id="elions.bas.selectHistoryAgent" parameterClass="hashMap" resultMap="result.historyAgent">
		SELECT a.msag_id, a.msab_nama, a.msab_id, b.lsrg_nama, b.lca_id, b.lwk_id,
		       b.lsrg_id, c.msf_id, c.posisi,
		       (CASE
		           WHEN (posisi = 0 OR posisi = NULL) THEN 'REQUESTED' WHEN posisi = 1 THEN 'APPROVED' 
				   WHEN posisi = 2 THEN 'CANCELLED' WHEN posisi = 3 THEN 'REJECTED' 
				   WHEN posisi = 4 THEN 'SENT' WHEN posisi = 5 THEN 'RECEIVED'
		           WHEN posisi = 6 THEN 'ACKNOWLEDGED' ELSE 'ERROR'
		        END
		       ) status_form
		  FROM eka.mst_agent_branch a,
		       (SELECT b.lca_id, b.lwk_id, b.lsrg_id, b.lsrg_nama
		          FROM eka.lst_user_admin a, eka.lst_region b
		         WHERE a.lus_id = #lus_id# AND a.lar_id = b.lar_id) b,
		       (SELECT   msab_id, msf_id, posisi
		            FROM eka.mst_form
		           WHERE mss_jenis = 1
		        GROUP BY msab_id, msf_id, posisi) c
		 WHERE a.lca_id = b.lca_id
		   AND c.posisi <![CDATA[<>]]> 6
		   AND a.lwk_id = b.lwk_id
		   AND a.lsrg_id = b.lsrg_id
		   AND a.lca_id = SUBSTR (#lca_lwk_lsrg#, 1, 2)
		   AND a.lwk_id = SUBSTR (#lca_lwk_lsrg#, 3, 2)
		   AND a.lsrg_id = SUBSTR (#lca_lwk_lsrg#, 5, 2)
		   AND a.msab_id = c.msab_id
		   
	</select>
	
	<resultMap id="elions.bas.select_mst_form1" class="java.util.HashMap">
		<result property="LCA_ID" column="LCA_ID" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                      
		<result property="LSJS_ID" column="LSJS_ID" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
		<result property="MSAB_ID" column="MSAB_ID" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
		<result property="MSF_AMOUNT" column="MSF_AMOUNT" javaType="int" jdbcType="NUMBER" />                                                                                                                                                           
		<result property="MSF_AMOUNT_REQ" column="MSF_AMOUNT_REQ" javaType="int" jdbcType="NUMBER" />                                                                                                                                                   
		<result property="MSS_JENIS" column="MSS_JENIS" javaType="int" jdbcType="NUMBER" />                                                                                                                                                             
		<result property="POSISI" column="POSISI" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                   
		<result property="STATUS_PERMINTAAN" column="STATUS_PERMINTAAN" javaType="int" jdbcType="NUMBER" />                                                                                                                                             
		<result property="START_NO_BLANKO" column="START_NO_BLANKO" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                
		<result property="END_NO_BLANKO" column="END_NO_BLANKO" javaType="string" jdbcType="VARCHAR2" nullValue=""/>   
		<result property="NO_BLANKO_REQ" column="NO_BLANKO_REQ" javaType="string" jdbcType="VARCHAR2" nullValue=""/>   
	</resultMap>	
	
	<select id="elions.bas.select_mst_form"  resultMap="elions.bas.select_mst_form1" parameterClass="string" >
		select mss_jenis,lca_id ,lsjs_id , msab_id, msf_amount, 
			msf_amount_req,posisi,status_permintaan,start_no_blanko, 
			end_no_blanko,no_blanko_req 
			from eka.mst_form 
			where msf_id =#value#
	</select>

	<select id="elions.bas.select_mst_form_lca_id"  resultClass="string" parameterClass="string" >
		select distinct lca_id
			from eka.mst_form 
			where msf_id =#value#
	</select>

	<resultMap id="result.warning30hari" class="com.ekalife.elions.model.FormSpaj">
		<result property="msf_id" column="msf_id" javaType="string" jdbcType="VARCHAR" />
		<result property="msfh_dt" column="msfh_dt" javaType="date" jdbcType="DATE" />
		<result property="agen.msab_nama" column="msab_nama" javaType="string" jdbcType="VARCHAR" />
		<result property="msfh_desc" column="msfh_desc" javaType="string" jdbcType="VARCHAR" />
		<result property="selisih" column="selisih" javaType="int" jdbcType="NUMBER" />
	</resultMap>

	<select id="elions.bas.selectWarning30Hari" parameterClass="int" resultMap="result.warning30hari">
		SELECT a.msf_id, b.msfh_dt, c.msab_nama, b.msfh_desc, ceil(sysdate - b.msfh_dt) selisih
		  FROM eka.mst_form a, eka.mst_form_hist b, eka.mst_agent_branch c,
		       (SELECT b.lca_id, b.lwk_id, b.lsrg_id, b.lsrg_nama
		          FROM eka.lst_user_admin a, eka.lst_region b
		         WHERE a.lus_id = #value# AND a.lar_id = b.lar_id) d
		 WHERE a.msf_id = b.msf_id AND a.mss_jenis = 1 AND b.posisi = 1 AND a.msab_id = c.msab_id 
		   AND c.lca_id = d.lca_id AND c.lwk_id = d.lwk_id AND c.lsrg_id = d.lsrg_id AND ceil(sysdate - b.msfh_dt) >= 30
		   GROUP BY a.msf_id, b.msfh_dt, c.msab_nama, b.msfh_desc, b.msfh_dt
	</select>

	<select id="elions.bas.selectPertanggungjawaban" parameterClass="string" resultClass="spajDet">
		SELECT   a.lsjs_id, a.no_blanko, a.lsp_id, a.msf_id, a.mssd_desc, a.lca_id, a.msab_id,
		         a.mssd_lus_id, a.mssd_dt, b.lsjs_prefix, b.lsjs_desc, c.lsp_jenis,a.reg_spaj,a.mspo_policy_no
		    FROM eka.mst_spaj_det a, eka.lst_jenis_spaj b, eka.lst_pertgjwbn c
		   WHERE a.lsjs_id = b.lsjs_id
		     AND a.msf_id = #value#
		     AND a.lsp_id = c.lsp_id
		     and a.lsp_id <![CDATA[<>]]> 1 
		ORDER BY a.lsjs_id, a.no_blanko	
	</select>

	<select id="elions.bas.selectUpdatePertanggungjawaban" parameterClass="hashMap" resultClass="spajDet">
		SELECT d.msab_id, d.msf_id, d.msab_nama, a.no_blanko, a.lsp_id, a.mssd_desc, a.msf_id_asli, a.msf_id_bef, 
			   a.mssd_lus_id, a.mssd_dt, b.lsjs_id, b.lsjs_prefix, b.lsjs_desc, c.lsp_jenis,a.reg_spaj,a.mspo_policy_no, d.status_from,  
			   d.mss_jenis, e.lca_id      
		  FROM eka.mst_spaj_det a, 
		       eka.lst_jenis_spaj b, 
			   eka.lst_pertgjwbn c,
			   (SELECT a.msag_id, a.msab_nama, a.msab_id, b.lsrg_nama, b.lca_id, b.lwk_id,          
					   b.lsrg_id, c.msf_id, c.posisi,       
					   (CASE              
					    WHEN (posisi = 0 OR posisi = NULL) THEN 'REQUESTED' WHEN posisi = 1 THEN 'APPROVED'         
						WHEN posisi = 2 THEN 'CANCELLED' WHEN posisi = 3 THEN 'REJECTED'         
						WHEN posisi = 4 THEN 'SENT' WHEN posisi = 5 THEN 'RECEIVED'              
						WHEN posisi = 6 THEN 'ACKNOWLEDGED' ELSE 'ERROR'           
						END) status_from,
						c.mss_jenis
					FROM eka.mst_agent_branch a,          
						(SELECT b.lca_id, b.lwk_id, b.lsrg_id, b.lsrg_nama             
						   FROM eka.lst_user_admin a, eka.lst_region b            
						  WHERE a.lus_id = #lus_id# 
						    AND a.lar_id = b.lar_id) b,          
					    (SELECT msab_id, msf_id, posisi, mss_jenis               
						   FROM eka.mst_form              
						  WHERE mss_jenis = 1
						    AND posisi = 6           
					   GROUP BY msab_id, msf_id, posisi, mss_jenis) c    
				 WHERE a.lca_id = b.lca_id            
				   AND a.lwk_id = b.lwk_id      
				   AND a.lsrg_id = b.lsrg_id      
				   AND a.msab_id = c.msab_id) d,   
				(SELECT lca_id from eka.lst_user where lus_id = #lus_id#) e      
		 WHERE a.lsjs_id = b.lsjs_id        
		   AND a.lsp_id = c.lsp_id        
		   AND a.lsp_id <![CDATA[<>]]> 1
		   AND d.msf_id = a.msf_id
		   AND a.lsp_id = 2 
		   AND d.msag_id = #msag_id#
		ORDER BY d.msf_id,a.lsjs_id, a.no_blanko      		
	</select>

	<select id="elions.bas.selectJenisPertanggungjawaban" resultClass="dropDown" cacheModel="elions.bas.cache">
		select lsp_id key, lsp_jenis value from eka.lst_pertgjwbn where lsp_id>1 order by lsp_id
	</select>

	<select id="elions.bas.selectSpajFromBlanko" resultClass="hashMap" parameterClass="string">
		SELECT *
		  FROM (SELECT   reg_spaj, mspo_policy_no, mspo_no_blanko, mspo_spaj_date
		            FROM eka.mst_policy
		           WHERE upper(replace(mspo_no_blanko,' ','')) = upper(replace(#value#,' ',''))
		        ORDER BY mspo_spaj_date DESC)
		 WHERE ROWNUM = 1	
	</select>

	<select id="elions.bas.selectCekPosisiFormSpaj" parameterClass="string" resultClass="int">
		SELECT   posisi
		    FROM eka.mst_form
		   WHERE mss_jenis = 1 AND msf_id = #value#
		GROUP BY msf_id, mss_jenis, posisi
	</select>

	<select id="elions.bas.selectJenisSpaj" resultClass="hashMap" cacheModel="elions.bas.cache">
		  SELECT lsjs_prefix, lsjs_desc
		    FROM eka.lst_jenis_spaj
		   WHERE lsjs_id > 0 
		   		 and jenis = 0
		ORDER BY lsjs_desc	
	</select>

	<select id="elions.bas.selectCekBlankoDiAgen" resultClass="hashMap" parameterClass="hashMap">
		SELECT b.lsjs_desc, b.lsjs_prefix, a.no_blanko, c.msag_id, c.msab_nama
		  FROM eka.mst_spaj_det a, eka.lst_jenis_spaj b, eka.mst_agent_branch c
		 WHERE a.mss_jenis = 1
		   AND a.lsjs_id = #lsjs_id#
		   AND a.no_blanko BETWEEN #start_no_blanko# and #end_no_blanko#
		   AND a.lsjs_id = b.lsjs_id
		   AND a.msab_id = c.msab_id	
	</select>

	<select id="elions.bas.selectDetailBlankoCabang" resultClass="formSpaj" parameterClass="string">
		SELECT   b.lsjs_desc, (b.lsjs_prefix || MIN (a.no_blanko)) start_no_blanko, (b.lsjs_prefix || MAX (a.no_blanko)) end_no_blanko
		    FROM eka.mst_spaj_det a, eka.lst_jenis_spaj b
		   WHERE a.lca_id = #lca_id# AND a.mss_jenis = 0 AND a.lsjs_id = b.lsjs_id
		GROUP BY a.msab_id, a.mss_jenis, a.lsjs_id, b.lsjs_prefix, b.lsjs_desc		
		ORDER BY b.lsjs_desc
	</select>

	<select id="elions.bas.selectJumlahSpajPerTgJbwn" resultClass="int" parameterClass="java.util.HashMap">
	   SELECT count(*)  FROM eka.mst_form  WHERE lca_id=#lca_id# 
	   					AND mss_jenis=1 
	   					AND posisi<![CDATA[<>]]> 6 
	   					AND msab_id=#msab_id#
	   
	</select>

	<select id="elions.bas.selectDetailStokCabang" resultClass="spajDet" parameterClass="java.util.HashMap">
		SELECT a.*
		    FROM eka.mst_spaj_det a
		    <isNotEmpty property="trav_ins_type">
				 ,eka.mst_form b
			</isNotEmpty>	 
		   WHERE a.lca_id = #lca_id#
		     AND a.lsjs_id = #lsjs_id#
		     AND a.mss_jenis = #mss_jenis#
		     AND a.lsp_id = #lsp_id#
		     AND a.mssd_lus_id = #mssd_lus_id#
		  	 <isNotEmpty property="trav_ins_type">   
			     AND a.lca_id = b.lca_id
				 AND a.lsjs_id = b.lsjs_id
			     AND b.trav_ins_type = #trav_ins_type#
				 AND a.msf_id = b.msf_id
			 </isNotEmpty> 		     	  		  
	  	<isNotEmpty property="no_blanko">AND no_blanko = #no_blanko#</isNotEmpty>	  
	  	 ORDER BY no_blanko asc
	</select>
	
	<select id="elions.bas.selectDetailStockSimasCard" resultClass="spajDet">
		select no_kartu as no_blanko 
		  from eka.mst_kartu_pas 
		 where dist = '05'
		   and produk = '05'
		   and no_kartu not in (select no_blanko from eka.mst_spaj_det where lsjs_id = 21)	
	</select>

	<select id="elions.bas.selectLstJenisSpaj" resultClass="java.util.HashMap" parameterClass="int">
			 SELECT *  
			 	FROM eka.lst_jenis_spaj WHERE lsjs_id=#value#
	</select>
	
	<select id="elions.bas.selectMsfIdPertanggungjawaban" resultClass="string" parameterClass="java.util.HashMap">
	SELECT DISTINCT a.msf_id
           FROM eka.mst_form a, eka.mst_agent_branch b
          WHERE a.msab_id = b.msab_id
            AND b.msag_id = #msag_id#
            AND a.lca_id = #lca_id#
            AND a.mss_jenis = 1
            AND a.posisi <![CDATA[<>]]> 6
             
	</select>
	
	<select id="elions.bas.selectMsfIdBef" resultClass="string" parameterClass="int">
		SELECT distinct msf_id 
				FROM eka.mst_spaj_det  
					WHERE msab_id=#value#     
					AND lsp_id in(2,3)    
	</select>
	
	<select id="elions.bas.selectAgentByMsagId" resultClass="agen" parameterClass="string">
		SELECT a.msag_id, b.msab_nama, c.lsle_name, (d.lsrg_nama || '/' || e.lwk_nama) as lsrg_nama, f.lca_nama
		FROM eka.mst_agent a,
			 eka.mst_agent_branch b,
			 eka.lst_level_agent c,
			 eka.lst_region d,
			 eka.lst_wakil e,
			 eka.lst_cabang f
		WHERE a.msag_id = b.msag_id
		  AND a.lstb_id = c.lstb_id
		  AND a.lsle_id = c.lsle_id
		  AND a.lsrg_id = d.lsrg_id
		  AND a.lca_id = d.lca_id
		  AND a.lwk_id = d.lwk_id
		  AND d.lwk_id = e.lwk_id
		  AND d.lca_id = e.lca_id
		  AND e.lca_id = f.lca_id
		  AND a.msag_id = #msag_id#
	</select>
	
	<select id="elions.bas.selectSearchFormSpajExpress" resultClass="formSpaj" parameterClass="string">
		SELECT    d.msag_id,e.mcl_first,b.lca_nama,a.lca_id, a.msf_id,
		         (CASE
		             WHEN (posisi = 0 OR posisi = NULL)
		                THEN 'REQUESTED'
		             WHEN posisi = 1
		                THEN 'APPROVED'
		             WHEN posisi = 2
		                THEN 'CANCELLED'
		             WHEN posisi = 3
		                THEN 'REJECTED'
		             WHEN posisi = 4
		                THEN 'SENT'
		             WHEN posisi = 5
		                THEN 'RECEIVED'
		             WHEN posisi = 6
		                THEN 'ACKNOWLEDGED'
		             ELSE 'ERROR'
		          END
		         ) status_form,posisi,
		         a.status_permintaan
		    FROM eka.mst_form a, eka.lst_cabang b, eka.mst_agent_branch  c, eka.mst_agent d, eka.mst_client_new e
		   WHERE a.lca_id = b.lca_id AND a.msab_id=c.msab_id AND c.msag_id=d.msag_id AND d.mcl_id=e.mcl_id
		   AND  upper(a.msf_id) LIKE '%'||upper(#value#)||'%' AND a.mss_jenis <![CDATA[<>]]> 2
		GROUP BY d.msag_id,e.mcl_first,b.lca_nama, a.lca_id,a.msf_id, a.posisi, a.status_permintaan
		ORDER BY b.lca_nama, msf_id
	</select>

	<select id="elions.bas.selectSearchFormSpajDetail" resultClass="formSpaj" parameterClass="formSpaj">
		SELECT    d.msag_id,e.mcl_first,b.lca_nama, a.msf_id,
		         (CASE
		             WHEN (posisi = 0 OR posisi = NULL)
		                THEN 'REQUESTED'
		             WHEN posisi = 1
		                THEN 'APPROVED'
		             WHEN posisi = 2
		                THEN 'CANCELLED'
		             WHEN posisi = 3
		                THEN 'REJECTED'
		             WHEN posisi = 4
		                THEN 'SENT'
		             WHEN posisi = 5
		                THEN 'RECEIVED'
		             WHEN posisi = 6
		                THEN 'ACKNOWLEDGED'
		             ELSE 'ERROR'
		          END
		         ) status_form,
		         a.status_permintaan
		    FROM eka.mst_form a, eka.lst_cabang b, eka.mst_agent_branch  c, eka.mst_agent d, eka.mst_client_new e
		   WHERE a.lca_id = b.lca_id AND a.msab_id=c.msab_id AND c.msag_id=d.msag_id AND d.mcl_id=e.mcl_id
		   AND  a.lca_id=#lca_id# 
		   AND a.mss_jenis=#mss_jenis#
		   <isEqual property="mss_jenis" compareValue="0">
		   AND a.msab_id=0
		   </isEqual>
		   AND a.mss_jenis <![CDATA[<>]]> 2
		GROUP BY d.msag_id,e.mcl_first,b.lca_nama, a.msf_id, a.posisi, a.status_permintaan
		ORDER BY b.lca_nama, msf_id

	</select>
	
	<select id="elions.bas.selectAllUserInCabang" resultClass="hashMap" parameterClass="string">
		select distinct lus_id key, lus_full_name value from eka.lst_user 
		where lus_active=1
		  and lca_id = #value#
	</select>	
	
	<select id="elions.bas.selectAllUserRegional" resultClass="hashMap" parameterClass="string">
		select lus_id key, lus_full_name value from eka.lst_user 
		where lus_active=1
 		and lca_id not in('08','37','42','52')
 	
	</select>

	
	<select id="elions.bas.selectAllUserAgency" resultClass="hashMap" parameterClass="string">
		select distinct lus_id key, lus_full_name value from eka.lst_user 
		where lus_active=1
 		and lca_id in ('37','52')

	</select>
	
	<select id="elions.bas.selectAllUserWorksite" resultClass="hashMap" parameterClass="string">
		select distinct lus_id key, lus_full_name value from eka.lst_user 
		where lus_active=1
 		and lca_id not in('08','42')
	</select>
	
	<select id="elions.bas.selectLstUser" resultClass="user" parameterClass="int">
  		select  
		    a.*, a.lus_email email, b.lca_nama cabang 
		from 
		    eka.lst_user a,
		    eka.lst_cabang b 
		where
		    a.lca_id = b.lca_id 
		    and a.lus_id= #value#
	</select>					  					 
	
<!--	<select id="" resultClass="java.util.HashMap">-->
<!--		SELECT   to_char(lar_id) KEY, (lar_admin || ' - ' || lar_nama) VALUE-->
<!---->
<!--	</select>-->

   <select id="elions.bas.selectEkpedisiSpaj" parameterClass="hashMap" resultClass="java.util.HashMap">
        SELECT /*+ first_rows */
            a.mspo_input_date, a.reg_spaj, b.mcl_first, to_char(sysdate,'yyyy') tahun, a.mspo_cash_back
        FROM
            eka.mst_policy a,
            eka.mst_client_new b,
			eka.lst_user c
        WHERE
            a.mspo_policy_holder = b.mcl_id
			and a.lus_id = c.lus_id and c.lca_id='01'
			and lstb_id=1 
            and mspo_input_date between to_date(#tanggalAwal#,'dd/mm/yyyy') and to_date(#tanggalAkhir#,'dd/mm/yyyy')+1
            <isNotEmpty property="codeToPrintList">
	            <iterate prepend="AND reg_spaj in " property="codeToPrintList" open="(" close=")" conjunction=",">
	                #codeToPrintList[]#
	            </iterate>
            </isNotEmpty>
        ORDER BY
            a.mspo_cash_back desc, a.mspo_input_date
    </select>
    
    
    <select id="elions.bas.cariNomor" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.btpp.Btpp">
		<isEqual property="tipe" compareValue="1">
			SELECT    SUBSTR (btpp.mst_no, 0, 3)	
		       || '/'
		       || SUBSTR (btpp.mst_no, 4, 6)
		       || '/'
		       || SUBSTR (btpp.mst_no, 10) AS mst_noFormated,
		       btpp.*,cabang.lca_nama,lst_user.lus_full_name
		  FROM (SELECT *
		          FROM eka.mst_btpp where mst_no $kata$) btpp	,
		        eka.lst_cabang cabang,
		        eka.lst_user lst_user
		  where cabang.lca_id=btpp.lst_kd_cab 
		  		and btpp.lus_id=lst_user.lus_id	
		  		<isNotEqual property="lca_id" compareValue="01"> 
			  		and btpp.lst_kd_cab=#lca_id#   
		  		</isNotEqual>
		</isEqual>
		<isEqual property="tipe" compareValue="2">
			SELECT    SUBSTR (btpp.mst_no, 0, 3)	
		       || '/'
		       || SUBSTR (btpp.mst_no, 4, 6)
		       || '/'
		       || SUBSTR (btpp.mst_no, 10) AS mst_noFormated,
		      btpp.*,cabang.lca_nama,lst_user.lus_full_name
		  FROM (SELECT *
		          FROM eka.mst_btpp where mst_nm_pemegang $kata$) btpp,
		        eka.lst_cabang cabang,
		        eka.lst_user lst_user
		  WHERE cabang.lca_id=btpp.lst_kd_cab   
		  		and btpp.lus_id=lst_user.lus_id	
		  		<isNotEqual property="lca_id" compareValue="01"> 
			  		and btpp.lst_kd_cab=#lca_id#   
		  		</isNotEqual>
		 </isEqual>
	</select>
	
	<select id="elions.bas.selectLstHistoryPrintBtpp" resultClass="java.util.HashMap" parameterClass="string">
		select a.ke,a.mst_no,a.kd_cab,a.tgl_print,a.ket_print,b.lus_full_name
			  from eka.lst_history_print_btpp a,
			  	   eka.lst_user b ,
				   eka.mst_tts c
			  where c.lus_id=b.lus_id and
			  		a.mst_no=c.mst_no and
			  		a.mst_no=#mst_no#
	</select>
	
	<select id="elions.bas.selectMstCaraByrBtpp" parameterClass="string" resultClass="com.ekalife.elions.model.btpp.CaraBayar">
		select a.lsjb_id,a.no_urut,a.mst_no,to_char(a.tgl_jth_tempo,'dd/mm/yyyy')s_tgl_jth_tempo, a.tgl_jth_tempo,a.mst_no_rekening,a.mst_nama_bank,b.lsjb_type
		from eka.mst_cara_byr a,
			 eka.lst_payment_type b
		where a.mst_no=#value#  and
			  a.lsjb_id=b.lsjb_id order by no_urut
	</select>
	
	<select id="elions.bas.selectMstPolicyBtpp" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.btpp.PolicyBtpp">
		 SELECT    SUBSTR (policy_btpp.mst_no_polis, 0, 2)	
		       || '.'
		       || SUBSTR (policy_btpp.mst_no_polis, 3, 3)
		       || '.'
		       || SUBSTR (policy_btpp.mst_no_polis, 6, 4)
		       || '.'
		       || SUBSTR (policy_btpp.mst_no_polis, 10) AS mst_no_polis_formated,1 as pil,
		       kurs.lku_symbol,to_char(policy_btpp.beg_date,'dd/mm/yyyy') s_beg_date,
		       to_char(policy_btpp.end_date,'dd/mm/yyyy') s_end_date,
   		       to_char(policy_btpp.due_date,'dd/mm/yyyy') s_due_date,
		       policy_btpp.*,policy_btpp.mst_jumlah_tahapan mstah_jumlah,kurs2.lku_symbol lku_symbol_tahapan
		  FROM (SELECT a.*,b.mcl_first
		          FROM  eka.mst_policy_btpp a,
		          		eka.mst_client_new b,
		          		eka.mst_policy c
		         WHERE a.mst_no = #mstNo# 
		        <isNotNull property="kurs" prepend=" AND ">
			        a.mst_kurs=#kurs# 
		        </isNotNull>
		        and a.mst_no_polis=c.mspo_policy_no
		        and c.mspo_policy_holder=b.mcl_id
		        ) policy_btpp,
		         eka.lst_kurs kurs,
		         eka.lst_kurs kurs2
		   where kurs.lku_id=policy_btpp.mst_kurs and
		   		 kurs2.lku_id(+)=policy_btpp.lku_id_tahapan
		   order by policy_btpp.no_urut asc
		
	</select>
	<select id="elions.bas.selectMstBtpp" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.btpp.Btpp">
		 Select * from eka.mst_btpp
		 where mst_no= #mst_no#
	</select>
	
	<select id="elions.bas.selectMstBtppTglSetor" resultClass="date" parameterClass="string">
		select mst_tgl_setor 
		from eka.mst_btpp where mst_no=#mst_no_polis#
	</select> 
	
	<select id="elions.bas.selectMstPolicyBtppNopolis" resultClass="string" parameterClass="string">
		SELECT distinct mst_no_polis
		  FROM eka.mst_policy_btpp
		 WHERE mst_no = #value#
	</select>
	
	<select id="elions.bas.selectMstProduct_Insured" resultClass="string" parameterClass="string">
		select reg_spaj, mspr_premium, mspr_extra from eka.mst_product_insured
		where reg_spaj =rpad(replace(#value# ,'.'),11,' ') 
	</select>

<!--	<select id="elions.bas.selectMstHistoryBtpp" resultMap="elions.bas.selectMstHistoryBtpp.result" parameterClass="hashMap">-->
<!--		select rownum no,mst_TGL,lus_full_name,mst_desc -->
<!--		from eka.lst_user a,-->
<!--			 eka.mst_history_btpp b-->
<!--		where a.lus_id=b.lus_id and-->
<!--			  b.MST_NO=#value#-->
<!--	 </select>-->

	<!-- mengambil waktu dari server database -->
	<select id="selectSysdate" resultClass="date" parameterClass="hashMap">
		<isEqual property="add" compareValue="dd">
			<isEqual property="trunc" compareValue="true">
				select trunc(sysdate+#nilai#) hasil from dual
			</isEqual>
			<isEqual property="trunc" compareValue="false">
				select (sysdate+#nilai#) hasil from dual
			</isEqual>		
		</isEqual>
		<isEqual property="add" compareValue="mm">
			<isEqual property="trunc" compareValue="true">
				select trunc(add_months(sysdate,#nilai#)) hasil from dual
			</isEqual>
			<isEqual property="trunc" compareValue="false">
				select add_months(sysdate,#nilai#) hasil from dual
			</isEqual>		
		</isEqual>
		<isEqual property="add" compareValue="yy">
			<isEqual property="trunc" compareValue="true">
				select trunc(add_months(sysdate,#nilai#*12)) hasil from dual
			</isEqual>
			<isEqual property="trunc" compareValue="false">
				select add_months(sysdate,#nilai#*12) hasil from dual
			</isEqual>		
		</isEqual>
	</select>
	
	<select id="elions.bas.selectGetCounterBtpp" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT     trim(TO_CHAR (  (CASE
		                             WHEN a.msco_value <![CDATA[>=]]> a.msco_max
		                                THEN 0
		                             ELSE a.msco_value
		                          END
		                         )
		                       + 1,
		                       '000'
		                      )) format_counter,
		           msco_mont_year,
		           CASE
		           		WHEN a.msco_value <![CDATA[>=]]> a.msco_max
		                	THEN 0
		                ELSE a.msco_value
		           END +1 counter
		      FROM eka.mst_counter_Btpp a
		     WHERE a.msco_number = #aplikasi# AND a.lca_id = #cabang#
			FOR UPDATE
	</select>
	
	<select id="elions.bas.selectCekCounterBtppMonthAndYear" resultClass="integer" parameterClass="java.util.HashMap">
		select case
		   	   when (tglTable.tgl=tglSkr.tgl) then
			   	   1
				else
			   	   0
			end	flag_ounter
	   from	(select MSCO_mont_year tgl from eka.mst_counter_btpp where msco_number=#aplikasi# and lca_id=#cabang#)tglTable,
	   		(select to_char(sysdate,'mmyyyy') tgl from dual)tglSkr
	</select>
	
	<resultMap id="result.mst_selectAgent" class="java.util.HashMap">
		<result property="KODE_AGEN" column="KODE_AGEN" javaType="string" jdbcType="VARCHAR2" nullValue="" />                                                                                                                                    
		<result property="NM_PENUTUP" column="NM_PENUTUP" javaType="string" jdbcType="VARCHAR2" nullValue="" />                                                                                                                                                                 
	</resultMap>
	
	<select id="elions.bas.selectAgent" resultMap="result.mst_selectAgent" parameterClass="string">
		SELECT   a.msag_id kode_agen, SUBSTR (b.mcl_first, 0, 50) nm_penutup
   		FROM eka.mst_agent a, eka.mst_client_new b
   		WHERE a.mcl_id = b.mcl_id AND UPPER (a.msag_id) = #kd_agen#
		ORDER BY b.mcl_first DESC
	</select>
	
	<select id="elions.bas.selectAgentTemp" resultClass="com.ekalife.elions.model.btpp.Btpp" parameterClass="string">
		SELECT   a.msag_id kd_agen, SUBSTR (b.mcl_first, 0, 50) nm_penutup
   		FROM eka.mst_agent a, eka.mst_client_new b
   		WHERE a.mcl_id = b.mcl_id 
		ORDER BY b.mcl_first DESC
	</select>
	
	<select id="elions.bas.select_agent_temp" resultClass="string" parameterClass="string">
		select mat_nama_agent from eka.mst_agent_temp 
	</select>
	
	<select id="elions.bas.selectMaxLstHistoryPrintBtpp" resultClass="integer" parameterClass="string">
		select max(ke)ke 
			from eka.lst_history_print_btpp 
				where mst_no=#mst_no#
	</select>
	
	
	<select id="elions.bas.selectViewerBtpp" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select * 
		from eka.mst_Btpp btpp,
			 eka.lst_user lst_user,
			 eka.lst_cabang lst_cabang
		where  btpp.lus_id=lst_user.lus_id 
			   and lst_user.lca_id=lst_cabang.lca_id 
				<isNotNull property="lcaId">
					<isNotEqual property="lcaId" compareValue="All">
						and btpp.lst_kd_cab=#lcaId# 
					</isNotEqual>
				</isNotNull>
				<isNotNull property="lusId" >
					<isNotEqual property="lusId" compareValue="All">
						and lst_user.lus_id=#lusId# 
					</isNotEqual>
				</isNotNull>
				<isNotEqual property="flagPrint" compareValue="All">
					and btpp.flag_print=#flagPrint#
				</isNotEqual>
		order by lst_kd_cab ,lus_full_name,mst_no asc
	</select>
	
	<select id="elions.bas.monitorPolisIssued" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select k.*,(case 
			 when k.lama_proses_nab <![CDATA[<]]> 0
			 then 0
			 else k.lama_proses_nab
			 end) LAMA_PROSES_NAB_NEW from
	(SELECT   
			 i.mcl_first pp, j.mcl_first tt, 
			 l.nama_dist dist,
			 b.reg_spaj, nvl(b.mspo_provider,0) mspo_provider,
			 (case 
			 when h.jn_bank = 2 and c.lsbs_id = 142 and c.lsdbs_number = 2 then 'SIMAS PRIMA'
			 when h.jn_bank = 2 and c.lsbs_id = 158 and c.lsdbs_number = 6 then 'SIMAS PRIMA MANFAAT BULANAN'
			when h.jn_bank = 2 and c.lsbs_id = 175 and c.lsdbs_number = 2 then 'SIMAS PRIMA SYARIAH'
			 else d.lsdbs_name
			 end) lsdbs_name,
			 b.mspo_spaj_date,
             b.mspo_input_date,
             (SELECT msps_date
                    FROM eka.mst_position_spaj
                   WHERE reg_spaj = a.reg_spaj
                     AND msps_desc like '%TRANSFER KE U/W%'
                     AND msps_date IN (SELECT MIN (msps_date)
                                         FROM eka.mst_position_spaj
                                        WHERE reg_spaj = a.reg_spaj AND msps_desc like '%TRANSFER KE U/W%'))tgl_transfer_keuw,
               (SELECT msps_date
                    FROM eka.mst_position_spaj
                   WHERE reg_spaj = a.reg_spaj
                     AND msps_desc like '%TGL TERIMA TTP%'
                     AND msps_date IN (SELECT MIN (msps_date)
                                         FROM eka.mst_position_spaj
                                        WHERE reg_spaj = a.reg_spaj AND msps_desc like '%TGL TERIMA TTP%'))tgl_ttp_diterima,
			 a.mste_tgl_terima_spaj,
	         a.mste_tgl_spaj_doc, a.mste_tgl_aksep, b.mspo_date_print,
	         a.mste_tgl_kirim_polis, e.lsrg_nama,
			 NVL(a.mste_tgl_valid_print,a.mste_tgl_kirim_polis) mste_tgl_valid_print,
			 (case 
			 when a.mste_tgl_valid_print is null
			 then (SELECT 
								eka.workdays (
									(CASE WHEN a.mste_tgl_spaj_doc is null 
										  	   THEN a.mste_tgl_spaj_doc 
										  WHEN (a.mste_tgl_terima_spaj <![CDATA[>=]]> to_date(to_char(mste_tgl_terima_spaj,'dd/mm/yyyy')||' 12:00:00','dd/mm/yyyy hh24:mi:ss') 
										  	   and to_char(a.mste_tgl_terima_spaj,'dd/mm/yyyy') = to_char(a.mste_tgl_kirim_polis+1,'dd/mm/yyyy')
										  	   and to_char(a.mste_tgl_terima_spaj,'dd/mm/yyyy') = to_char(a.mste_tgl_spaj_doc,'dd/mm/yyyy'))   
											   or 
											   (a.mste_tgl_terima_spaj <![CDATA[>=]]> to_date(to_char(mste_tgl_terima_spaj,'dd/mm/yyyy')||' 12:00:00','dd/mm/yyyy hh24:mi:ss') 
										  	   and to_char(a.mste_tgl_terima_spaj,'dd/mm/yyyy') = to_char(a.mste_tgl_kirim_polis+1,'dd/mm/yyyy')
										  	   and to_char(a.mste_tgl_terima_spaj,'dd/mm/yyyy') = to_char(a.mste_tgl_spaj_doc+1,'dd/mm/yyyy'))
											   or 
											   (a.mste_tgl_terima_spaj <![CDATA[<=]]> to_date(to_char(mste_tgl_terima_spaj,'dd/mm/yyyy')||' 12:00:00','dd/mm/yyyy hh24:mi:ss') 
										  	   and to_char(a.mste_tgl_terima_spaj,'dd/mm/yyyy') = to_char(a.mste_tgl_kirim_polis,'dd/mm/yyyy')
										  	   and to_char(a.mste_tgl_terima_spaj,'dd/mm/yyyy') = to_char(a.mste_tgl_spaj_doc,'dd/mm/yyyy'))
											   or
											   (a.mste_tgl_terima_spaj <![CDATA[>=]]> to_date(to_char(mste_tgl_terima_spaj,'dd/mm/yyyy')||' 12:00:00','dd/mm/yyyy hh24:mi:ss')) 			  
										  THEN a.mste_tgl_spaj_doc+1 
										  ELSE a.mste_tgl_spaj_doc 
										  END), 
									(CASE WHEN h.jn_bank=2 
										  	   THEN a.mste_tgl_aksep 
											   ELSE a.mste_tgl_kirim_polis 
											   END))-1 
								FROM DUAL)
			 else (SELECT 
								eka.workdays (
									(CASE WHEN a.mste_tgl_spaj_doc is null 
										  	   THEN a.mste_tgl_spaj_doc 
										  WHEN (a.mste_tgl_terima_spaj <![CDATA[>=]]> to_date(to_char(mste_tgl_terima_spaj,'dd/mm/yyyy')||' 12:00:00','dd/mm/yyyy hh24:mi:ss') 
										  	   and to_char(a.mste_tgl_terima_spaj,'dd/mm/yyyy') = to_char(a.mste_tgl_valid_print+1,'dd/mm/yyyy')
										  	   and to_char(a.mste_tgl_terima_spaj,'dd/mm/yyyy') = to_char(a.mste_tgl_spaj_doc,'dd/mm/yyyy'))   
											   or 
											   (a.mste_tgl_terima_spaj <![CDATA[>=]]> to_date(to_char(mste_tgl_terima_spaj,'dd/mm/yyyy')||' 12:00:00','dd/mm/yyyy hh24:mi:ss') 
										  	   and to_char(a.mste_tgl_terima_spaj,'dd/mm/yyyy') = to_char(a.mste_tgl_valid_print+1,'dd/mm/yyyy')
										  	   and to_char(a.mste_tgl_terima_spaj,'dd/mm/yyyy') = to_char(a.mste_tgl_spaj_doc+1,'dd/mm/yyyy'))
											   or 
											   (a.mste_tgl_terima_spaj <![CDATA[<=]]> to_date(to_char(mste_tgl_terima_spaj,'dd/mm/yyyy')||' 12:00:00','dd/mm/yyyy hh24:mi:ss') 
										  	   and to_char(a.mste_tgl_terima_spaj,'dd/mm/yyyy') = to_char(a.mste_tgl_valid_print,'dd/mm/yyyy')
										  	   and to_char(a.mste_tgl_terima_spaj,'dd/mm/yyyy') = to_char(a.mste_tgl_spaj_doc,'dd/mm/yyyy'))
											   or
											   (a.mste_tgl_terima_spaj <![CDATA[>=]]> to_date(to_char(mste_tgl_terima_spaj,'dd/mm/yyyy')||' 12:00:00','dd/mm/yyyy hh24:mi:ss')) 			  
										  THEN a.mste_tgl_spaj_doc+1 
										  ELSE a.mste_tgl_spaj_doc 
										  END), 
									(CASE WHEN h.jn_bank=2 
										  	   THEN a.mste_tgl_aksep 
											   ELSE a.mste_tgl_valid_print 
											   END))-1 
								FROM DUAL)
			 end) lama_proses_nab,
	         (SELECT 
				eka.workdays (a.mste_tgl_terima_spaj, SYSDATE)-1 
				FROM DUAL) lama_pending, 
			 SYSDATE, d.lsbs_id, d.lsdbs_number, f.msps_desc
	    FROM eka.mst_insured a,
	         eka.mst_policy b,
	         eka.mst_product_insured c,
	         eka.lst_det_bisnis d,
	         eka.lst_region e,
	         eka.mst_position_spaj f,
			 eka.lst_bisnis g,
			 eka.lst_user h,
			 eka.mst_client i,
			 eka.mst_client j,
	         eka.lst_cabang k,
	         eka.lst_jalur_dist l
	   WHERE b.reg_spaj = a.reg_spaj
	     AND a.reg_spaj = c.reg_spaj
	     AND a.mste_insured_no = c.mste_insured_no
		 AND d.lsbs_id = g.lsbs_id
	     AND d.lsbs_id = c.lsbs_id
	     AND d.lsdbs_number = c.lsdbs_number
	     AND e.lca_id = b.lca_id
	     AND e.lwk_id = b.lwk_id
	     AND e.lsrg_id = b.lsrg_id
	     AND c.lsbs_id <![CDATA[<]]> 300
		 AND (a.mste_tgl_terima_spaj BETWEEN #tanggalAwal# AND #tanggalAkhir#)
	     AND b.lstb_id = 1
	     AND a.reg_spaj = f.reg_spaj
		 AND b.lus_id = h.lus_id
		 AND b.mspo_policy_holder = i.mcl_id
		 AND a.mste_insured = j.mcl_id
	     AND b.lca_id = k.lca_id
	     AND k.jalurdis = l.id_dist
	     <isNotNull property="dist">
	     	<isEqual property="dist" compareValue="agreg">
	     		AND l.id_dist in (1,2)
	     	</isEqual>
	     	<isEqual property="dist" compareValue="bancass">
	     		AND l.id_dist in (9)
	     	</isEqual>
	     	<isEqual property="dist" compareValue="ws">
	     		AND l.id_dist in (7)
	     	</isEqual>
	     	<isEqual property="dist" compareValue="dmtm">
	     		AND l.id_dist in (8)
	     	</isEqual>
	     	<isEqual property="dist" compareValue="mnc">
	     		AND l.id_dist in (6)
	     	</isEqual>
	     	<isEqual property="dist" compareValue="efc">
	     		AND l.id_dist in (11)
	     	</isEqual>
	     </isNotNull>
		 <isNotNull property="lsgb">
			<isEqual property="lsgb" compareValue="link">
				AND g.lsgb_id <![CDATA[=]]> 17
			</isEqual>
			<isEqual property="lsgb" compareValue="nonlink">
				AND g.lsgb_id <![CDATA[<>]]> 17
			</isEqual>
		 </isNotNull>
		 <isNotNull property="provider">
			<isEqual property="provider" compareValue="prov">
				AND b.mspo_provider = 2
			</isEqual>
			<isEqual property="provider" compareValue="nonprov">
				AND nvl(b.mspo_provider,0) = 0
			</isEqual>
		 </isNotNull>
	     AND f.msps_date = (SELECT MAX (msps_date)
	                          FROM eka.mst_position_spaj
	                         WHERE reg_spaj = a.reg_spaj)
	ORDER BY l.nama_dist,  
		 (case 
		 when h.jn_bank = 2 and c.lsbs_id = 142 and c.lsdbs_number = 2 then 'SIMAS PRIMA'
		 when h.jn_bank = 2 and c.lsbs_id = 158 and c.lsdbs_number = 6 then 'SIMAS PRIMA MANFAAT BULANAN'
		when h.jn_bank = 2 and c.lsbs_id = 175 and c.lsdbs_number = 2 then 'SIMAS PRIMA SYARIAH'
		 else d.lsdbs_name
		 end),
		 b.reg_spaj) k
	</select>
	
	<select id="elions.bas.selectflagBatal" resultClass="integer" parameterClass="string">
		Select mst_flag_batal from eka.mst_btpp
		where mst_no=#mst_no#
	</select>
	<!-- untuk mengambil tanggal setor yang digunakan saat edit data btpp   -->
	<select id="elions.bas.selectTglRk" resultClass="string" parameterClass="string">
		select mst_tgl_setor from eka.mst_btpp
		where mst_no=#mst_no#
	</select>


	<!-- untuk mengambil periode awal yang digunakan saat edit data btpp   -->
	<select id="elions.bas.selectperiodeAwal" resultClass="string" parameterClass="string">
		select prde_byr_awal from eka.mst_btpp
		where mst_no=#mst_no#
	</select>
	
	
	<!-- untuk mengambil periode akhir yang digunakan saat edit data btpp   -->
	<select id="elions.bas.selectperiodeAkhr" resultClass="string" parameterClass="string">
		select prde_byr_akhr from eka.mst_btpp
		where mst_no=#mst_no#
	</select>

	<select id="elions.bas.selectCountHist" resultClass="int" parameterClass="string">
		select count(*) from eka.mst_history_btpp
		where mst_no=#mst_no#
	</select>
	
	<select id="elions.bas.selectMstNoNew" resultClass="string" parameterClass="string">
		select mst_no_new from eka.mst_history_btpp
		where mst_no =#mst_no# and flg_btl=5
	</select>	
	<select id="elions.bas.selectMstKeluarga"  resultClass="com.ekalife.elions.model.Keluarga" parameterClass="java.util.HashMap">
		select eka.mst_keluarga.reg_spaj,eka.mst_keluarga.nama,
		   eka.mst_keluarga.lsre_id, eka.mst_keluarga.no,
		   eka.mst_keluarga.insured, eka.mst_keluarga.tanggal_lahir,
		   eka.lst_relation.lsre_relation
		   from eka.mst_keluarga,eka.lst_relation 
		   where eka.mst_keluarga.lsre_id = eka.lst_relation.lsre_id and
		   eka.mst_keluarga.reg_spaj = rpad(replace(#spaj# ,'.'),11,' ')  and
		   eka.mst_keluarga.insured = #insured#
	</select>
	
	<select id="elions.bas.selectMstProductInsuredLsdbsName" resultClass="string" parameterClass="string">
		select eka.f_lsdbs(a.reg_spaj, a.lsbs_id, a.lsdbs_number) lsdbs_name
			from eka.mst_product_insured a,
				 eka.lst_det_bisnis b	 
			where a.lsbs_id=b.lsbs_id and
				  a.lsdbs_number=b.lsdbs_number and
				  a.reg_spaj=rpad(replace(#value# ,'.'),11,' ')  and a.lsbs_id <![CDATA[ <  ]]>  300
	</select>
	
	<resultMap id="selectAllPolis.result" class="hashMap" >
		<result property="REG_SPAJ" column="REG_SPAJ" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                  
		<result property="MSPO_POLICY_HOLDER" column="MSPO_POLICY_HOLDER" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                              
		<result property="MSPO_POLICY_NO" column="MSPO_POLICY_NO" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                  
		<result property="MSPO_POLICY_NO_FORMAT" column="MSPO_POLICY_NO_FORMAT" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                  
		<result property="MSPO_BEG_DATE" column="MSPO_BEG_DATE" javaType="date" jdbcType="DATE" />                                                                                                                                                      
		<result property="MSPO_END_DATE" column="MSPO_END_DATE" javaType="date" jdbcType="DATE" />     
		<result property="daftarProduct" column="reg_spaj" select="elions.bas.selectMstProductInsuredLsdbsName"/>
	</resultMap>

	<select id="elions.bas.selectAllPolis" resultMap="selectAllPolis.result" parameterClass="java.util.HashMap">
		select 	a.reg_spaj,a.mspo_policy_holder,a.mspo_policy_no,
				a.mspo_policy_no_format,a.mspo_beg_date,a.mspo_end_date
		from eka.mst_policy a,
			(SELECT *
			  FROM eka.mst_client_new
			 <!--  WHERE mspe_no_identity = #no_identity# -->
			 WHERE replace((trim(upper(mcl_id))),'.') = trim(upper(#mcl_id#))
			   AND mcl_id NOT LIKE 'XX%'
			   AND mcl_id NOT LIKE 'WW%')b
	<!--	   AND mspe_date_birth = #date_birth#) b -->
		where a.mspo_policy_holder=b.mcl_id
		<isNotNull property="nopolis">
			and a.mspo_policy_no like '%'||#nopolis#
		</isNotNull>
	</select>

		<resultMap id="com.ekalife.elions.model.selectDataUsulanutama1" class="com.ekalife.elions.model.Datausulan" >
			<result property="tipeproduk" column="tipeproduk" javaType="int" jdbcType="NUMBER" />  
			<result property="mste_insured_no" column="mste_insured_no" javaType="int" jdbcType="NUMBER" />                                                                                                                                                 
			<result property="mspr_unit" column="mspr_unit" javaType="int" jdbcType="NUMBER" />                                                                                                                                                             
			<result property="mspr_class" column="mspr_class" javaType="int" jdbcType="NUMBER" />                                                                                                                                                           
			<result property="mspr_tsi" column="mspr_tsi" javaType="double" jdbcType="NUMBER" />                                                                                                                                                            
			<result property="mspr_premium" column="mspr_premium" javaType="double" jdbcType="NUMBER" />                                                                                                                                                    
			<result property="mspr_ins_period" column="mspr_ins_period" javaType="int" jdbcType="NUMBER" />                                                                                                                                                 
			<result property="mspr_end_pay" column="mspr_end_pay" javaType="date" jdbcType="DATE" />                                                                                                                                                        
			<result property="mspr_tt" column="mspr_tt" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
			<result property="lsbs_id" column="lsbs_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
			<result property="lsdbs_name" column="lsdbs_name" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                          
			<result property="mspo_pay_period" column="mspo_pay_period" javaType="int" jdbcType="NUMBER" />                                                                                                                                                 
			<result property="mste_medical" column="mste_medical" javaType="int" jdbcType="NUMBER" />                                                                                                                                                       
			<result property="medis" column="medis" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                                    
			<result property="mste_end_date" column="mste_end_date" javaType="date" jdbcType="DATE" />                                                                                                                                                      
			<result property="mste_beg_date" column="mste_beg_date" javaType="date" jdbcType="DATE" />                                                                                                                                                      
			<result property="mste_flag_cc" column="mste_flag_cc" javaType="int" jdbcType="NUMBER" />                                                                                                                                                       
			<result property="lscb_id" column="lscb_id" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
			<result property="lscb_pay_mode" column="lscb_pay_mode" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                    
			<result property="lku_id" column="lku_id" javaType="string" jdbcType="CHAR" nullValue=""/>      
			<result property="kurs_p" column="kurs_p" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                   
			<result property="lku_symbol" column="lku_symbol" javaType="string" jdbcType="VARCHAR2" nullValue=""/>  
			<result property="lsdbs_number" column="lsdbs_number" javaType="int" jdbcType="NUMBER" />                                                                                                                                         
			<result property="plan" column="plan" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                                      
			<result property="reg_spaj" column="reg_spaj" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                  
			<result property="kurs_premi" column="kurs_premi" javaType="string" jdbcType="CHAR" nullValue=""/>   
			<result property="jmlrider" column="jmlrider" javaType="int" jdbcType="NUMBER" nullValue="0"/>  
			<result property="jml_benef" column="jml_benef" javaType="int" jdbcType="NUMBER" nullValue="0"/> 
			<result property="kodeproduk" column="lsbs_id" javaType="string" jdbcType="CHAR" /> 
			<result property="mspo_installment" column="mspo_installment" javaType="int" jdbcType="NUMBER" />
			<result property="mste_flag_investasi" column="mste_flag_investasi" javaType="int" jdbcType="NUMBER" />
			<result property="lca_id" column="lca_id" javaType="string" jdbcType="CHAR" /> 
			<result property="lwk_id" column="lwk_id" javaType="string" jdbcType="CHAR" />
			<result property="mste_flag_guthrie" column="mste_flag_guthrie" javaType="int" jdbcType="NUMBER" />
			<result property="jml_peserta" column="jml_peserta" javaType="int" jdbcType="NUMBER" />
			<result property="mste_gmit" column="mste_gmit" javaType="int" jdbcType="NUMBER" />
		</resultMap>

	<select id="elions.bas.selectDataUsulanutama" resultMap="com.ekalife.elions.model.selectDataUsulanutama1" parameterClass="string">
		SELECT /*+ first_rows */ a.reg_spaj,a.mste_insured_no, a.mspr_unit, a.mspr_class, a.mspr_tsi,
		       a.mspr_premium, a.mspr_ins_period, a.mspr_end_pay, a.mspr_tt,
		       a.lsbs_id, eka.f_lsdbs(a.reg_spaj, a.lsbs_id, a.lsdbs_number) lsdbs_name, c.mspo_pay_period, d.mste_medical, decode(d.mste_medical,0,'Tidak','Ya') medis, 
		       d.mste_end_date, d.mste_beg_date, d.mste_flag_cc,e.lscb_id, e.lscb_pay_mode,c.lku_id, c.lku_id kurs_p, f.lku_symbol,
		       a.lsbs_id||'~X'||b.lsdbs_number plan,c.lku_id kurs_premi,b.lsdbs_number,
		       c.lstp_id tipeproduk,
		        ( SELECT count( EKA.MST_PRODUCT_INSURED.LSBS_ID)
			   FROM EKA.MST_PRODUCT_INSURED
			    WHERE ( EKA.MST_PRODUCT_INSURED.LSBS_ID <![CDATA[ >=  ]]> 800 )AND 
			    (EKA.MST_PRODUCT_INSURED.REG_SPAJ =rpad(replace(#value#,'.'),11,' ')) ) jmlrider,
			    (select count(*) from eka.mst_benefeciary where reg_spaj=rpad(replace(#value#,'.'),11,' ')) jml_benef,
			    a.lsbs_id kodeproduk,c.mspo_installment,nvl(a.mspr_discount,0)mspr_discount,d.mste_flag_el,
			    d.mste_flag_investasi,c.lca_id,c.lwk_id,d.mste_flag_guthrie,
				(select count(*) from eka.mst_peserta where reg_spaj =rpad(replace(#value#,'.'),11,' ') and lsbs_id!=839 ) jml_peserta, d.mste_gmit
		  FROM eka.mst_product_insured a,
		       eka.lst_det_bisnis b,
		       eka.mst_policy c,
		       eka.mst_insured d,
		       eka.lst_pay_mode e,
		       eka.lst_kurs f
		 WHERE (b.lsbs_id(+) = a.lsbs_id)
		   AND (b.lsdbs_number(+) = a.lsdbs_number)
		   AND (a.reg_spaj = c.reg_spaj)
		   AND (d.reg_spaj = c.reg_spaj)
		   AND (c.lscb_id = e.lscb_id(+))
		   AND ((a.reg_spaj = rpad(replace(#value#,'.'),11,' ')) 
		   AND c.lku_id = f.lku_id (+)
			<![CDATA[
		   AND (a.lsbs_id < 300))	
		   ]]>
	</select>	
<!--			 eka.mst_client_new.mkl_smbr_penghasilan,-->
	<select id="elions.bas.selectpemegangpolis" resultClass="com.ekalife.elions.model.Pemegang2" parameterClass="string">
			select distinct eka.mst_client_new.mcl_first, eka.mst_client_new.mcl_id,eka.mst_client_new.mkl_kerja,
			eka.mst_client_new.mkl_kerja kerjaa,
			decode(mst_client_new.mkl_kerja,'KARYAWAN SWASTA', eka.mst_client_new.mpn_job_desc,decode(eka.lst_jabatan.ljb_note,'','-',eka.lst_jabatan.ljb_note)) KERJAB,
			eka.mst_client_new.mkl_tujuan,
			eka.mst_client_new.mkl_tujuan tujuana,
			 eka.mst_client_new.mkl_penghasilan , eka.mst_client_new.mkl_pendanaan ,
			 eka.mst_client_new.mkl_pendanaan danaa,
			 eka.mst_client_new.mkl_pendanaan danaa2,
			 eka.mst_client_new.mkl_industri , eka.mst_client_new.mkl_industri industria,
		       eka.mst_client_new.mspe_no_identity, eka.mst_client_new.mspe_no_identity_expired, eka.mst_client_new.lside_id,
		       eka.mst_client_new.mspe_place_birth,
		       eka.mst_client_new.mspe_date_birth, eka.mst_client_new.mspe_sex, decode(eka.mst_client_new.mspe_sex,1,'PRIA','WANITA') mspe_sex2,
		       eka.mst_client_new.mspe_sts_mrt, eka.mst_policy.mspo_umur_beasiswa,
		       eka.lst_grp_job.lgj_note,eka.lst_grp_job.lgj_id, eka.mst_client_new.mspe_lama_kerja,
		       eka.lst_identity.lside_name, eka.lst_negara.lsne_note,eka.lst_negara.lsne_id,
		       eka.mst_client_new.mcl_gelar, eka.mst_client_new.mpn_job_desc,
		       eka.mst_client_new.mspe_mother, eka.mst_address_new.alamat_rumah,
		       eka.mst_address_new.kd_pos_rumah, eka.mst_address_new.kota_rumah,
		       eka.mst_address_new.kota_rumah kota_rumaha,
		       eka.mst_address_new.area_code_rumah, eka.mst_address_new.telpon_rumah,
		       eka.mst_address_new.alamat_kantor, eka.mst_address_new.kd_pos_kantor,
		       eka.mst_address_new.kota_kantor,
		       eka.mst_address_new.kota_kantor kota_kantora,
		        eka.mst_address_new.no_hp2,
		       eka.mst_address_new.no_hp, eka.mst_address_new.email,
		       eka.mst_address_new.area_code_kantor,
		       eka.mst_address_new.telpon_kantor, eka.mst_policy.reg_spaj,
		       eka.mst_insured.mste_insured_no,
		       eka.mst_insured.mste_spaj_asli,
		       eka.mst_insured.mste_standard, eka.mst_policy.mspo_age mste_age,
		       eka.lst_agama.lsag_name,lst_agama.lsag_id, eka.lst_education.lsed_name,eka.lst_education.lsed_id,
		       eka.lst_jabatan.ljb_id, eka.lst_relation.lsre_id,eka.lst_relation.lsre_relation,
		       eka.mst_agent.msag_id, eka.mst_agent.lca_id, eka.mst_agent.lwk_id,
		       eka.mst_agent.lsrg_id,eka.mst_policy.lscb_id,eka.mst_policy.mspo_policy_no,eka.mst_policy.mspo_policy_holder,
		       eka.mst_policy.mspo_no_blanko,
		       eka.mst_insured.mste_tgl_recur,
		       eka.mst_policy.mspo_under_table,
		       eka.mst_policy.mspo_under_table bonus_tahapan,
		       eka.mst_policy.mspo_pribadi,
		       eka.mst_policy.mspo_follow_up,
		       eka.mst_policy.mspo_ao,
		       eka.mst_policy.lssp_id,
		       b.mcl_first nama_ao,
		       eka.mst_policy.mspo_ref_bii,
		       eka.mst_policy.mspo_spaj_date,
		       eka.mst_policy.mspo_komisi_bii,
		        eka.mst_address_new.area_code_rumah2,
		        eka.mst_address_new.telpon_rumah2,
		        eka.mst_address_new.area_code_kantor2,
		        eka.mst_address_new.telpon_kantor2,
		        eka.mst_address_new.no_fax,
		         eka.mst_address_new.area_code_fax,
		        eka.mst_policy.mspo_customer,
				eka.mst_worksite_flag.nik,
				eka.mst_insured.mste_pct_dplk,
				eka.mst_policy.mspo_jenis_terbit,
				eka.mst_client_new.mspe_email,
				eka.mst_insured.mste_flag_guthrie,
				 t1.*,
				 eka.mst_policy.lssp_id
		  from eka.mst_address_new,
		       eka.mst_client_new,
		       eka.mst_insured,
		       eka.mst_policy,
		       eka.lst_negara,
		       eka.lst_grp_job,
		       eka.lst_identity,
		       eka.lst_jabatan,
		       eka.lst_agama,
		       eka.lst_education,
		       eka.lst_relation,
		       eka.mst_agent,
		       eka.mst_agent_prod,
		       eka.mst_agent a,
		       eka.mst_client_new b,
			   eka.mst_worksite_flag,
			(select si.reg_spaj,si.nama "nama_si",si.lsre_id "hubungan_si",si.tanggal_lahir "tgllhr_si",
			anak_1.nama "nama_anak1",anak_1.lsre_id "hubungan_anak1", anak_1.tanggal_lahir "tgllhr_anak1",
			anak_2.nama "nama_anak2",anak_2.lsre_id "hubungan_anak2", anak_2.tanggal_lahir "tgllhr_anak2",
			anak_3.nama "nama_anak3",anak_3.lsre_id "hubungan_anak3", anak_3.tanggal_lahir "tgllhr_anak3"
			from				
			(select reg_spaj ,nama,lsre_id,tanggal_lahir 
			from eka.mst_keluarga 
			where lsre_id = 5 and no = 0 and insured = 1)si,
			(select reg_spaj,nama,lsre_id,tanggal_lahir 
			from eka.mst_keluarga 
			where lsre_id = 4 and no = 1 and insured = 1)anak_1,
			(select reg_spaj,nama,lsre_id,tanggal_lahir 
			from eka.mst_keluarga 
			where lsre_id = 4 and no = 2 and insured = 1)anak_2,
			(select reg_spaj,nama,lsre_id,tanggal_lahir 
			from eka.mst_keluarga 
			where lsre_id = 4 and no = 3 and insured = 1)anak_3
			where si.reg_spaj = anak_1.reg_spaj and
			si.reg_spaj = anak_2.reg_spaj (+)and
			si.reg_spaj = anak_3.reg_spaj (+)	) t1
		 where (eka.mst_client_new.mcl_id = eka.mst_address_new.mcl_id)
		   and (eka.mst_policy.reg_spaj = eka.mst_insured.reg_spaj)
		   and (eka.lst_negara.lsne_id(+) = eka.mst_client_new.lsne_id)
		   and (eka.lst_grp_job.lgj_id(+) = eka.mst_client_new.lgj_id)
		   and (eka.lst_identity.lside_id(+) = eka.mst_client_new.lside_id)
		   and (eka.mst_policy.mspo_policy_holder = eka.mst_client_new.mcl_id)
		   and (eka.mst_client_new.lsag_id = eka.lst_agama.lsag_id(+))
		   and (eka.mst_client_new.lsed_id = eka.lst_education.lsed_id(+))
		   and (eka.mst_policy.lsre_id = eka.lst_relation.lsre_id(+))
		   and (eka.mst_client_new.ljb_id = eka.lst_jabatan.ljb_id(+))
		   and eka.mst_agent.msag_id = eka.mst_agent_prod.msag_id
		   and eka.mst_policy.reg_spaj = eka.mst_agent_prod.reg_spaj
		   and eka.mst_agent_prod.lsle_id = 4
		   and ((eka.mst_policy.reg_spaj = rpad(replace(#value#,'.'),11,' ')))
		   and  (eka.mst_policy.mspo_ao = a.msag_id (+))
		   and (a.mcl_id = b.mcl_id(+)) 
		   and (eka.mst_worksite_flag.reg_spaj(+) = eka.mst_policy.reg_spaj)
		   and t1.reg_spaj (+)=  EKA.MST_POLICY.REG_SPAJ
	</select>	 

	<select id="elions.bas.select_detilagen" resultClass="com.ekalife.elions.model.Agen" parameterClass="string">
  select eka.mst_insured.reg_spaj,
			eka.mst_agent.msag_id,   
         eka.mst_client_new.mcl_first , 
         eka.mst_agent.lca_id,   
         eka.mst_agent.lwk_id,   
         eka.mst_agent.lsrg_id,  
			eka.lst_region.lsrg_nama,  
         eka.mst_agent.msag_sertifikat,   
         eka.mst_agent.msag_berlaku,   
         eka.mst_agent.msag_ulink  , 
         eka.mst_agent.lca_id||eka.mst_agent.lwk_id||eka.mst_agent.lsrg_id  kode_regional
    from eka.mst_client_new,   
         eka.mst_insured,   
         eka.mst_agent,   
         eka.mst_agent_prod,   
         eka.mst_policy,
			eka.lst_region 
   where ( eka.mst_agent.mcl_id = eka.mst_client_new.mcl_id ) and  
         ( eka.mst_agent.msag_id = eka.mst_agent_prod.msag_id ) and  
         ( eka.mst_insured.reg_spaj = eka.mst_policy.reg_spaj ) and  
         ( eka.mst_policy.reg_spaj = eka.mst_agent_prod.reg_spaj ) and  
         ( eka.lst_region.lca_id = eka.mst_agent.lca_id ) and  
         ( eka.lst_region.lwk_id = eka.mst_agent.lwk_id ) and  
         ( eka.lst_region.lsrg_id = eka.mst_agent.lsrg_id ) and  
         ( ( eka.mst_insured.reg_spaj =  rpad(replace(#value# ,'.'),11,' ')   ) and  
         eka.mst_agent_prod.lsle_id = 4 )   
    </select>
    
    <select id="elions.bas.select_count_client" resultClass="int" parameterClass="java.util.HashMap">
		select count(*) jumlah
		from eka.mst_policy,eka.mst_client_new where 
		eka.mst_policy.mspo_policy_holder = eka.mst_client_new.mcl_id and
		eka.mst_policy.mspo_policy_no = #nopolis#  and
		upper(trim(eka.mst_client_new.mcl_first))= upper(trim(#nama#)) and
		to_char(eka.mst_client_new.mspe_date_birth,'yyyymmdd') = #tgl#
	</select>

    <select id="elions.bas.cari_mcl_id" resultClass="java.util.HashMap" parameterClass="string">
		select a.mspo_policy_holder , b.mste_insured ,b.reg_spaj 
		from eka.mst_policy a , eka.mst_insured b where a.reg_spaj = b. reg_spaj and
		a.lstb_id = 1 and a.mspo_policy_no=#value#
	</select>	
 		
    <select id="elions.bas.cari_polis_lain" resultClass="java.util.HashMap" parameterClass="string">
 		select reg_spaj , mspo_policy_no from eka.mst_policy where mspo_policy_holder =#string#
	</select>
	
	<!-- ryan - select cabang bridge -->
	<select id="elions.bas.select_cabangbridge" resultClass="java.util.HashMap">
	select lca_id, lwk_id, lsrg_id, lsrg_nama from eka.lst_region where lca_id =60 and lsrg_id in ('00','01','02')
    </select>
    
    <select id="elions.bas.jml_diubah" resultClass="int" parameterClass="string">
		select count(*) jumlah from eka.mst_address_billing_old where reg_spaj =rpad(replace(#value# ,'.'),11,' ') 
	</select>	
	
	<select id="elions.bas.selectkota" parameterClass="string" resultClass="java.util.HashMap" >
		SELECT lska_note "lska_id", lska_note
		  FROM eka.lst_kabupaten 
		  where upper(lska_note) like '%'||upper(#value#)||'%'
		  order by  lska_note
	</select>
	
	<select id="elions.bas.select_groupjob" resultClass="java.util.HashMap" parameterClass="string">
			SELECT LGJ_ID,LGJ_NOTE FROM EKA.LST_GRP_JOB
			WHERE trim(upper(LGJ_NOTE)) LIKE '%' ||  trim(upper(#value#)) || '%'
			AND ROWNUM=1
	</select>	
	
	<select id="elions.bas.select_jabatan" resultClass="java.util.HashMap" parameterClass="string">
		SELECT LJB_ID,LJB_NOTE FROM EKA.LST_JABATAN
		WHERE trim(upper(LJB_NOTE)) LIKE '%' || trim(upper(#value#)) || '%'
		AND ROWNUM=1
	</select>		
	
	<select id="elions.bas.select_mst_client_old"  resultClass="int" parameterClass="string">
		 select count(*) from eka.mst_client_old where mcl_id=#value#
	</select>
	
	<select id="elions.bas.list_mst_keluarga"  resultClass="com.ekalife.elions.model.Keluarga" parameterClass="java.util.HashMap">
		select eka.mst_keluarga.reg_spaj,eka.mst_keluarga.nama,
		   eka.mst_keluarga.lsre_id, eka.mst_keluarga.no,
		   eka.mst_keluarga.insured, eka.mst_keluarga.tanggal_lahir,
		   eka.lst_relation.lsre_relation
		   from eka.mst_keluarga,eka.lst_relation 
		   where eka.mst_keluarga.lsre_id = eka.lst_relation.lsre_id and
		   eka.mst_keluarga.reg_spaj = rpad(replace(#spaj# ,'.'),11,' ')  and
		   eka.mst_keluarga.insured = #insured#
	</select>
	
	<select id="elions.bas.selectPeriode" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT mst_no, mst_tgl_setor periodeAwal, mst_tgl_setor periodeAkhr, lst_nm_cab,
       		   lst_nm_admin, tot_byr
  		FROM eka.mst_btpp
 		WHERE mst_tgl_setor  <![CDATA[ <= ]]> TO_DATE (periodeAwal, 'dd/mm/yyyy')
  			  OR mst_tgl_setor <![CDATA[ >=  ]]>TO_DATE (periodeAkhr, 'dd/mm/yyyy')
	</select>
	
	<select id="elions.bas.selectMstPolicyRegSpaj"  resultClass="string" parameterClass="string">
		 select reg_spaj from eka.mst_policy where rpad(replace(mspo_policy_no,'.'),14,' ')=rpad(replace(#value#,'.'),14,' ')
	</select>	
	
	<select id="elions.bas.selectAllAgent"  resultClass="com.ekalife.elions.model.Agen" parameterClass="hashMap">
		SELECT   a.msag_id, b.mcl_first,b.mspe_no_identity,a.msag_active,e.lside_name,
		         (CASE
		             WHEN a.lsle_id = 4 THEN 'ME'
		             WHEN a.lsle_id = 3 THEN 'UM'
		             WHEN a.lsle_id = 2 THEN 'BM'
		             WHEN (a.lsle_id = 1 AND msag_sbm = 1) THEN 'SBM'
		             WHEN (a.lsle_id = 1 AND msag_sbm = 0) THEN 'RM'
		             ELSE '-' END) tingkat,
		         c.msab_id, replace(b.mcl_first, '''', '\''') msab_nama, d.lsrg_nama, a.lca_id, a.lwk_id, a.lsrg_id
		    FROM eka.mst_agent a,
		         eka.mst_client_new b,
		         eka.mst_agent_branch c,
		         eka.lst_region d,
		         eka.lst_identity e
		   WHERE a.mcl_id = b.mcl_id
		     AND a.msag_id = c.msag_id(+)
		     AND a.lstb_id = 1
		     AND a.msag_active = 1
		     AND a.lca_id = d.lca_id
		     AND a.lwk_id = d.lwk_id
		     AND a.lsrg_id = d.lsrg_id
		     AND b.lside_id=e.lside_id(+)
		     <isNotEqual property="lca_id" compareValue="00">
				 AND a.lca_id=#lca_id#
			 </isNotEqual>
             <isEqual property="flag" compareValue="1">
        	     AND a.msag_id=#query#
			 </isEqual>
             <isEqual property="flag" compareValue="2">
				 AND trim(upper(b.mcl_first)) LIKE '%' || trim(upper(#query#)) || '%'
			 </isEqual>	
             <isEqual property="flag" compareValue="3">
				 AND trim(upper(b.mspe_no_identity)) LIKE '%' || trim(upper(#query#)) || '%'
			 </isEqual>
		ORDER BY d.lsrg_nama, b.mcl_first
		</select>	
		
		<select id="elions.bas.selectCekAgenInUserAdmin"  resultClass="int" parameterClass="hashMap">
			SELECT count(*)
				  FROM eka.mst_form x,
				       eka.mst_agent_branch y,
				       eka.mst_agent z,
				       eka.lst_user_admin a,
				       eka.lst_region b
				 WHERE x.msab_id = y.msab_id
				   AND y.msag_id = z.msag_id
				   AND msf_id = #msf_id#
				   AND a.lar_id = b.lar_id
				   AND b.lca_id = z.lca_id
				   AND b.lwk_id = z.lwk_id
				   AND b.lsrg_id = z.lsrg_id
				   AND a.lus_id = #lus_id#
		</select>
		<!-- Data yang berhasil di update (lengkap) oleh nasabah maupun bas  -->
		<select id="elions.bas.selectbasCekDataInputData"  resultClass="clientHistory" parameterClass="hashMap">
				   SELECT   1 retour, 1 kirim,tabel1.*,
			       	NVL(tabel6.msap_area_code1,'-') msap_area_code1, NVL(tabel6.msap_phone1,'-') msap_phone1, NVL(tabel6.msap_area_code2,'-')msap_area_code2, NVL(tabel6.msap_phone2,'-') msap_phone2,
			       NVL(tabel6.msap_area_code3,'-')msap_area_code3, NVL(tabel6.msap_phone3,'-') msap_phone3, NVL(tabel6.no_hp,'-') no_hp, NVL(tabel6.no_hp2,'-') no_hp2
			  FROM (
			       SELECT DISTINCT mspo_policy_no
			          FROM eka.mst_client_history 
			         WHERE lssh_id =1
			           AND msch_status_input IN( 1,2)
			           AND TRUNC(msch_tgl_upload) <![CDATA[>=]]>to_date(#tanggalAwal#,'dd/MM/yyyy')
					   AND TRUNC(msch_tgl_upload) <![CDATA[<=]]>to_date(#tanggalAkhir# ,'dd/MM/yyyy')
			           
					) tabel1,
					eka.mst_policy tabel3,
					eka.mst_insured tabel4,
				    eka.mst_address_billing tabel6
			 WHERE tabel4.mste_flag_update_nasabah=1 AND
				   tabel4.mste_insured_no=1 AND
			 	   tabel4.reg_spaj = tabel3.reg_spaj AND
				   tabel4.reg_spaj = tabel6.reg_spaj AND
			 	   tabel1.mspo_policy_no = tabel3.mspo_policy_no 
		   		   <isNotEqual property="lcaId" compareValue="0">
	   				   AND tabel3.lca_id=#lcaId#
 	   			   </isNotEqual>	   
 	    </select>
 	    
		<!-- Data yang telah berhasil di kirim - data yang telah berhasil diupdate  -->
		<select id="elions.bas.selectbasCekDataBalik"  resultClass="clientHistory" parameterClass="hashMap">
				  SELECT   1 retour, 1 kirim,tabel1.*,
			       	NVL(tabel6.msap_area_code1,'-') msap_area_code1, NVL(tabel6.msap_phone1,'-') msap_phone1, NVL(tabel6.msap_area_code2,'-')msap_area_code2, NVL(tabel6.msap_phone2,'-') msap_phone2,
			       NVL(tabel6.msap_area_code3,'-')msap_area_code3, NVL(tabel6.msap_phone3,'-') msap_phone3, NVL(tabel6.no_hp,'-') no_hp, NVL(tabel6.no_hp2,'-') no_hp2
			  FROM (SELECT DISTINCT mspo_policy_no
			       							            FROM eka.mst_client_history
														                  WHERE lssh_id IN (1, 2, 3) AND msch_status_input = 3
															             AND TRUNC(msch_tgl_upload) <![CDATA[>=]]>to_date(#tanggalAwal#,'dd/MM/yyyy')
															           AND TRUNC(msch_tgl_upload) <![CDATA[<=]]>to_date(#tanggalAkhir# ,'dd/MM/yyyy')
			 MINUS	
			       SELECT DISTINCT mspo_policy_no
			          FROM eka.mst_client_history 
			         WHERE lssh_id in(1,6)
			           AND msch_status_input IN( 1,2)
					) tabel1,
					eka.mst_policy tabel3,
					eka.mst_insured tabel4,
				    eka.mst_address_billing tabel6
			 WHERE tabel4.mste_flag_update_nasabah=0 AND
				   tabel4.mste_insured_no=1 AND
			 	   tabel4.reg_spaj = tabel3.reg_spaj AND
				   tabel4.reg_spaj = tabel6.reg_spaj AND
			 	   tabel1.mspo_policy_no = tabel3.mspo_policy_no 
			 	   <isNotEqual property="lcaId" compareValue="0">
	   				   AND tabel3.lca_id=#lcaId#
 	   			   </isNotEqual>	
 	    </select>
		<select id="elions.bas.selectDataVendor"  resultClass="clientHistory" parameterClass="string">
			  SELECT vendorMaster.*,b.lssh_name
		       	FROM eka.mst_client_history vendorMaster ,
		       		 eka.lst_status_history b
				WHERE vendorMaster.lssh_id IN (1, 2, 3) 
								  AND vendorMaster.msch_status_input = 3
					              AND vendorMaster.mspo_policy_no=#mspo_policy_no#
								  AND vendorMaster.msch_no_urut=(SELECT MAX (msch_no_urut)
								                         FROM eka.mst_client_history subVendor
								                        WHERE vendorMaster.mspo_policy_no=subVendor.mspo_policy_no 
														AND subVendor.msch_status_input = 3
													  ) 
								  AND vendorMaster.lssh_id=b.lssh_id								  
		</select>
		
		<select id="elions.bas.selectDataNasabahUpdate"  resultClass="clientHistory" parameterClass="string">
				SELECT nasabahMaster.*,b.lssh_name
				          FROM eka.mst_client_history nasabahMaster,
				               eka.lst_status_history b
				         WHERE nasabahMaster.lssh_id IN( 1)
				           	   AND nasabahMaster.msch_status_input IN( 1,2)
							   AND nasabahMaster.mspo_policy_no=#mspo_policy_no#
						   	   AND nasabahMaster.msch_no_urut = (
												                  SELECT MAX (msch_no_urut)
												                    FROM eka.mst_client_history subNasabah
												                   WHERE 
																	 nasabahMaster.MSPO_POLICY_NO=subNasabah.MSPO_POLICY_NO
																	 AND subNasabah.msch_status_input IN(1,2)
									 							)
							   AND nasabahMaster.lssh_id=b.lssh_id		 							
		</select>
		
	<select id="elions.uw.selectJatuhTempoSekuritas" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        SELECT h.jenis_trans, d.nama_cabang, b.mspo_policy_no_format, a.reg_spaj, j.mcl_first pemegang, 
               eka.f_lsdbs(c.reg_spaj, c.lsbs_id, c.lsdbs_number) lsdbs_name,
               h.mgi, k.lku_symbol, 
               c.mspr_premium, decode(h.ro,1,'Rollover Nilai Tunai',2,'Rollover premi',3,'Autobreak') jenis_ro,
               a.mspro_beg_date, a.mspro_end_date, h.edate mpr_mature_date, 
               e.nama_reff, l.lus_login_name, a.lku_id,
               nvl(b.mspo_nasabah_dcif,'-') cif, m.nama_cabang cabang_induk, n.nama_cabang wilayah,
               h.premi, h.rate, h.bunga, a.mspro_prod_date TGL_PRODUKSI, h.premi * a.mspro_nilai_kurs PREMI_PRODUKSI
          FROM eka.mst_production a,
               eka.mst_policy b,
               eka.mst_product_insured c,
               eka.lst_cabang_bii d,
               eka.lst_reff_bii e,
               (select * from eka.mst_reff_bii a
                where level_id=4 and no_urut=(select max(no_urut) from eka.mst_reff_bii where reg_spaj=a.reg_spaj)) f,
               eka.mst_rek_client g,
               (select 'PREMI UTAMA' jenis_trans, reg_spaj, mpr_jangka_invest mgi, mpr_jns_ro ro, mpr_mature_date edate, mpr_interest bunga, mpr_rate rate, mpr_deposit premi 
                from eka.mst_powersave_ro where mps_kode IN (2, 3, 5)
                and reg_spaj in (SELECT reg_spaj FROM eka.mst_powersave_ro MINUS (SELECT reg_spaj FROM eka.mst_pinjaman UNION SELECT reg_spaj FROM eka.mst_powersave_ro WHERE mps_kode = 4))
                union
                select msl_desc jenis_trans, reg_spaj, msl_mgi mgi, msl_ro ro, msl_edate edate, msl_bunga bunga, msl_rate rate, msl_premi premi
                from eka.mst_slink where msl_kode in (2,3,5) and msl_aktif = 1
                ) h,
               eka.lst_det_bisnis i,
               eka.mst_client j,
               eka.lst_kurs k,
               eka.lst_user l,
        eka.lst_cabang_bii m, eka.lst_cabang_bii n
         WHERE c.reg_spaj = b.reg_spaj
         AND b.lspd_id <![CDATA[<>]]> 95
           AND a.reg_spaj = c.reg_spaj
           AND g.reg_spaj(+) = b.reg_spaj
           AND h.reg_spaj = b.reg_spaj
           AND f.reg_spaj = b.reg_spaj
           AND f.lcb_no = d.lcb_no
           AND f.lrb_id = e.lrb_id
           AND c.lsbs_id = i.lsbs_id
           AND c.lsdbs_number = i.lsdbs_number
           AND j.mcl_id = b.mspo_policy_holder
           AND (h.edate BETWEEN #startDate# and #endDate#)
           AND c.lsbs_id IN (142, 158, 164)
           AND d.jenis = 3
           AND b.lca_id = '09'
           AND a.msbi_premi_ke = 1
           AND f.level_id = 4
           AND b.lku_id = k.lku_id
           AND b.lus_id = l.lus_id
           <isNotEmpty property="lcb_no">
           	AND f.lcb_no = #lcb_no#
           </isNotEmpty>
        and d.head_no = m.lcb_no(+)
        and d.wil_no = n.lcb_no(+)
           ORDER BY nama_cabang, mspo_policy_no_format
	</select>

	<select id="elions.uw.selectRolloverSekuritas" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT k.jenis_trans, e.nama_cabang, b.mspo_policy_no_format, a.reg_spaj, l.mcl_first pemegang,   
               eka.f_lsdbs(c.reg_spaj, c.lsbs_id, c.lsdbs_number) lsdbs_name,
               k.MGI, m.lku_symbol,
               c.mspr_premium, decode(k.ro,1,'Rollover Nilai Tunai',2,'Rollover premi',3,'Autobreak') jenis_ro, 
               a.mspro_beg_date, a.mspro_end_date, k.edate, 
               h.nama_reff, n.lus_login_name, g.lku_id,
               nvl(b.mspo_nasabah_dcif,'-') cif, o.nama_cabang cabang_induk, p.nama_cabang wilayah,
               k.premi, k.rate, k.bunga, a.mspro_prod_date TGL_PRODUKSI, k.premi * a.mspro_nilai_kurs PREMI_PRODUKSI
          FROM eka.mst_production a,
               eka.mst_policy b,
               eka.mst_product_insured c,
               (select * from eka.mst_reff_bii a
                where level_id=4 and no_urut=(select max(no_urut) from eka.mst_reff_bii where reg_spaj=a.reg_spaj)) d,
               eka.lst_cabang_bii e,
               eka.mst_rek_client f,
               eka.mst_billing g,
               eka.lst_reff_bii h,
               eka.lst_det_bisnis i,
               (select 'PREMI POKOK' jenis_trans, reg_spaj, mpr_jangka_invest mgi, mpr_mature_date edate, mps_kode kode, 
                mpr_interest bunga, mpr_rate rate, mpr_deposit premi, mpr_jns_ro ro, msbi_tahun_ke tahunke, msbi_premi_ke premike 
                from eka.mst_powersave_ro 
                where mps_kode IN (2, 3) and (trunc(mpr_tgl_prod) BETWEEN #startDate# and #endDate#)
                and reg_spaj IN (
                        SELECT reg_spaj FROM eka.mst_powersave_ro
                        MINUS
                        SELECT reg_spaj FROM eka.mst_pinjaman WHERE TRUNC (mspin_tgl_input) BETWEEN #startDate# and #endDate#)
                union
                select msl_desc jenis_trans, reg_spaj, msl_mgi mgi, msl_edate edate, msl_kode kode, msl_bunga bunga, msl_rate rate, msl_premi premi, msl_ro ro,
                msl_tahun_ke tahunke, msl_premi_ke premike
                from eka.mst_slink where msl_kode in (2,3) and msl_prod_date between #startDate# and #endDate#
                ) k,
               eka.mst_client_new l,
               eka.lst_kurs m,
               eka.lst_user n,
        eka.lst_cabang_bii o, eka.lst_cabang_bii p
         WHERE c.reg_spaj = b.reg_spaj
         AND b.lspd_id <![CDATA[<>]]> 95
           AND b.mspo_policy_holder = l.mcl_id
           AND a.reg_spaj = c.reg_spaj
           AND g.reg_spaj = a.reg_spaj
           AND g.msbi_tahun_ke = a.msbi_tahun_ke
           AND g.msbi_premi_ke = a.msbi_premi_ke
           AND f.reg_spaj(+) = b.reg_spaj
           AND a.reg_spaj = k.reg_spaj
           AND a.msbi_tahun_ke = k.tahunke
           AND a.msbi_premi_ke = k.premike
           AND d.reg_spaj = b.reg_spaj
           AND h.jenis = 3
           AND d.lrb_id = h.lrb_id
           AND e.lcb_no = d.lcb_no
           AND i.lsbs_id = c.lsbs_id
           AND i.lsdbs_number = c.lsdbs_number
           AND b.lku_id = m.lku_id
           AND d.level_id = 4
           AND b.lus_id = n.lus_id
           AND c.lsbs_id IN (150, 151, 142, 158, 164)
           <isNotEmpty property="lcb_no">
           	AND d.lcb_no = #lcb_no#
           </isNotEmpty>
        and e.head_no = o.lcb_no(+)
        and e.wil_no = p.lcb_no(+)
        and a.mspro_beg_date between  #startDate# and #endDate#
            ORDER BY e.nama_cabang, b.mspo_policy_no   	
	</select>
	<!-- AND a.msbi_tahun_ke = 1 -->	
		
	<select id="elions.uw.selectSudahCairSekuritas" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        SELECT monyong.jenis_trans, d.nama_cabang, b.mspo_policy_no_format, a.reg_spaj, j.mcl_first pemegang, 
               eka.f_lsdbs(c.reg_spaj, c.lsbs_id, c.lsdbs_number) lsdbs_name,
               monyong.mgi, k.lku_symbol, 
               c.mspr_premium, decode(monyong.ro,1,'Rollover Nilai Tunai',2,'Rollover premi',3,'Autobreak') jenis_ro,
               a.mspro_beg_date, a.mspro_end_date, monyong.edate mpr_mature_date, 
               e.nama_reff, l.lus_login_name, a.lku_id,
               nvl(b.mspo_nasabah_dcif,'-') cif, m.nama_cabang cabang_induk, n.nama_cabang wilayah,
               monyong.premi, monyong.rate, monyong.bunga, a.mspro_prod_date TGL_PRODUKSI, monyong.premi * a.mspro_nilai_kurs PREMI_PRODUKSI,
               monyong.tgl_bayar, monyong.jum_bayar
          FROM eka.mst_production a,
               eka.mst_policy b,
               eka.mst_product_insured c,
               eka.lst_cabang_bii d,
               eka.lst_reff_bii e,
               (select * 
                                     from eka.mst_reff_bii a
                                     where      level_id=4
                                     and      no_urut=(select max(no_urut) from eka.mst_reff_bii where reg_spaj=a.reg_spaj)) f,
               eka.mst_rek_client g,
               eka.lst_det_bisnis i,
               eka.mst_client j,
               eka.lst_kurs k,
               eka.lst_user l,
               eka.lst_cabang_bii m, eka.lst_cabang_bii n,
                (
                    select a.reg_spaj, 'PREMI UTAMA' jenis_trans, a.mpr_jangka_invest mgi, a.mpr_jns_ro ro, (b.mps_batas_date-1) edate, a.mpr_deposit premi,
                    a.mpr_rate rate, a.mpr_interest bunga, c.mspin_jlh_nt jum_bayar
                    from eka.mst_powersave_ro a, eka.mst_powersave_proses b, eka.mst_pinjaman c
                    where a.mps_kode IN (2, 3, 5) 
                    and a.reg_spaj = b.reg_spaj
                    AND a.mps_kode = b.mps_kode
                    AND a.mps_deposit_date = b.mps_deposit_date            
                    AND a.reg_spaj = c.reg_spaj
                    and ((b.mps_batas_date-1) BETWEEN #startDate# and #endDate#)
                    union
                    SELECT   a.reg_spaj,
                             a.msl_desc jenis_trans,
                             a.msl_mgi mgi,
                             a.msl_ro ro,
                             a.msl_edate edate,
                             a.msl_premi premi,
                             a.msl_rate rate,
                             a.msl_bunga bunga,
                             b.mslb_jum_bayar jum_bayar  
                      FROM   eka.mst_slink a, eka.mst_slink_bayar b
                     WHERE   a.msl_kode = 8 AND a.reg_spaj = b.reg_spaj AND a.msl_no = b.msl_no
                             AND (a.msl_edate BETWEEN #startDate# and #endDate#)
                ) monyong
         WHERE c.reg_spaj = b.reg_spaj
         AND b.lspd_id <![CDATA[<>]]> 95
           AND a.reg_spaj = c.reg_spaj
           AND g.reg_spaj(+) = b.reg_spaj
           AND b.reg_spaj = monyong.reg_spaj
           AND f.reg_spaj = b.reg_spaj
           AND f.lcb_no = d.lcb_no
           AND f.lrb_id = e.lrb_id
           AND c.lsbs_id = i.lsbs_id
           AND c.lsdbs_number = i.lsdbs_number
           AND j.mcl_id = b.mspo_policy_holder
           AND c.lsbs_id IN (142, 158, 164)
           AND d.jenis = 3
           AND b.lca_id = '09'
           AND a.msbi_premi_ke = 1
           AND f.level_id = 4
           AND b.lku_id = k.lku_id
           AND b.lus_id = l.lus_id
           <isNotEmpty property="lcb_no">
           	AND f.lcb_no = #lcb_no#
           </isNotEmpty>
        and d.head_no = m.lcb_no(+)
        and d.wil_no = n.lcb_no(+)
           ORDER BY nama_cabang, mspo_policy_no_format
	</select>
						
		<!-- Data yang berisi data nasabah sinarmas sekuritas  -->
		<select id="elions.uw.selectDataNasabahSinarmasSekuritas"  resultClass="com.ekalife.elions.model.NasabahSinarmasSekuriti" parameterClass="java.util.HashMap">
            SELECT /*+ first_rows */
                   a.lku_id, t.jenis_trans, a.mspo_no_blanko "NO_SERI", a.mspo_nasabah_dcif "NO_CIF",
                   a.mspo_policy_no "NO_POLIS", a.reg_spaj "NO_SPAJ",
                   c.lsbs_id "KODE_PRODUK", eka.f_lsdbs(c.reg_spaj, c.lsbs_id, c.lsdbs_number) "NAMA_PRODUK",
                   
                   f.mcl_first "PP_NAMA", u.lti_note "PP_GELAR",
                   f.mspe_mother "PP_MOTHER", ac.lside_name "PP_JENIS_ID", f.mspe_no_identity "PP_ID",
                   f.mspe_place_birth "PP_BIRTHPLACE", f.mspe_date_birth "PP_BIRTHDATE",
                   w.lsne_note "PP_WN",
                   DECODE (f.mspe_sex, 0, 'Ibu ', 1, 'Bapak ') "PP_SEX",
                   y.lsag_name "PP_AGAMA", aa.lsed_name "PP_PENDIDIKAN",
                   
                   f.mpn_job_desc "PP_JOB_DESC",
                   f.mkl_tujuan "PP_TUJUAN",
                   f.mkl_penghasilan "PP_PENGHASILAN",
                   f.mkl_pendanaan "PP_PENDANAAN",
                   f.mkl_kerja "PP_KERJA",
                   f.mkl_smbr_penghasilan "PP_SMBR_PENGHASILAN",
                   f.mkl_industri "PP_INDUSTRI",
                          
                   m.alamat_rumah "PP_ALAMAT_RUMAH", m.kd_pos_rumah "PP_KD_POS_RUMAH",
                   m.kota_rumah "PP_KOTA_RUMAH", m.area_code_rumah "PP_AREA_CODE_RUMAH",
                   m.telpon_rumah "PP_TELPON_RUMAH",
                   m.area_code_rumah2 "PP_AREA_CODE_RUMAH2",
                   m.telpon_rumah2 "PP_TELPON_RUMAH2", m.alamat_kantor "PP_ALAMAT_KANTOR",
                   m.kd_pos_kantor "PP_KD_POS_RUMAH2", m.kota_kantor "PP_KOTA_KANTOR",
                   m.area_code_kantor "PP_AREA_CODE_KANTOR",
                   m.telpon_kantor "PP_TELPON_KANTOR",
                   m.area_code_kantor2 "PP_AREA_CODE_KANTOR2",
                   m.telpon_kantor2 "PP_TELPON_KANTOR2", m.email "PP_EMAIL",
                   NVL (m.no_hp, m.no_hp2) "PP_HP", m.area_code_fax "PP_AREA_CODE_FAX",
                   m.no_fax "PP_NO_FAX", 
            
                   g.mcl_first "TT_NAMA", v.lti_note "TT_GELAR",
                   g.mspe_mother "TT_MOTHER", ad.lside_name "PP_JENIS_ID2", g.mspe_no_identity "TT_ID",
                   g.mspe_place_birth "TT_BIRTHPLACE", g.mspe_date_birth "TT_BIRTHDATE",
                   x.lsne_note "TT_WN",
                   DECODE (g.mspe_sex, 0, 'Ibu ', 1, 'Bapak ') "TT_SEX",
                   z.lsag_name "TT_AGAMA", ab.lsed_name "TT_PENDIDIKAN",
                   
                   f.mpn_job_desc "PP_JOB_DESC2",
                   f.mkl_tujuan "PP_TUJUAN2",
                   f.mkl_penghasilan "PP_PENGHASILAN2",
                   f.mkl_pendanaan "PP_PENDANAAN2",
                   f.mkl_kerja "PP_KERJA2",
                   f.mkl_smbr_penghasilan "PP_SMBR_PENGHASILAN2",
                   f.mkl_industri "PP_INDUSTRI2",
                                 
                   n.alamat_rumah "TT_ALAMAT_RUMAH", n.kd_pos_rumah "TT_KD_POS_RUMAH",
                   n.kota_rumah "TT_KOTA_RUMAH", n.area_code_rumah "TT_AREA_CODE_RUMAH",
                   n.telpon_rumah "TT_TELPON_RUMAH",
                   n.area_code_rumah2 "TT_AREA_CODE_RUMAH2",
                   n.telpon_rumah2 "TT_TELPON_RUMAH2", n.alamat_kantor "TT_ALAMAT_KANTOR",
                   n.kd_pos_kantor "TT_KD_POS_RUMAH2", n.kota_kantor "TT_KOTA_KANTOR",
                   n.area_code_kantor "TT_AREA_CODE_KANTOR",
                   n.telpon_kantor "TT_TELPON_KANTOR",
                   n.area_code_kantor2 "TT_AREA_CODE_KANTOR2",
                   n.telpon_kantor2 "TT_TELPON_KANTOR2", n.email "TT_EMAIL",
                   NVL (n.no_hp, n.no_hp2) "TT_HP", n.area_code_fax "TT_AREA_CODE_FAX",
                   n.no_fax "TT_NO_FAX", 
            
                   t.bdate "INV_EFFECTIVEDATE", t.edate "INV_EXPIRYDATE",
                   t.rate "INV_RETURN", t.mgi "INV_PERIOD",
                   t.premi "INV_TOT_NOMINAL", t.bunga "INV_TOT_BUNGA",
                   DECODE (t.ro,
                           1, 'ALL',
                           2, 'PREMI',
                           3, 'AUTOBREAK'
                          ) "INV_JENIS_RO",
                    
                   af.lsbp_nama "INV_BANK", ae.mrc_cabang "INV_BANK_BRANCH", ae.mrc_kota "INV_BANK_CITY",
                   ae.mrc_nama "INV_BANK_ONBEHALF", ae.mrc_no_ac "INV_BANK_NOREK",
                   
                   ag.lspd_position "POSISI_DOKUMEN", ai.lssp_status "STATUS_POLIS", ah.status_accept "STATUS_AKSEP",

                   l.msap_address tagihan_alamat, l.msap_zip_code tagihan_kd_pos,
                   l.msap_phone1 tagihan_telp, l.msap_area_code1 tagihan_area_code,
                   l.msap_phone2 tagihan_telp2, l.msap_area_code2 tagihan_area_code2,
                   l.e_mail tagihan_email, l.no_hp tagihan_hp, l.kota tagihan_kota
                   
              FROM eka.mst_policy a,
                   eka.mst_insured b,
                   eka.mst_product_insured c,
                   eka.mst_agent_prod d,
                   eka.lst_cabang e,
                   eka.mst_client_new f,
                   eka.mst_client_new g,
                   eka.mst_client_new h,
                   eka.mst_agent i,
                   eka.lst_bisnis j,
                   eka.lst_det_bisnis k,
                   eka.mst_address_billing l,
                   eka.mst_address_new m,
                   eka.mst_address_new n,
                   (SELECT a.lcb_no, a.reg_spaj, b.nama_cabang, c.nama_reff
                      FROM eka.mst_reff_bii a, eka.lst_cabang_bii b, eka.lst_reff_bii c
                     WHERE a.level_id = 4 AND a.lcb_no = b.lcb_no AND a.lrb_id = c.lrb_id
                     and a.no_urut = (select max(no_urut) from eka.mst_reff_bii where level_id = 4 and reg_spaj = a.reg_spaj)) p,
                   (SELECT a.mcl_id, b.mcl_first
                      FROM eka.mst_company a, eka.mst_client_new b
                     WHERE a.mcl_id = b.mcl_id) q,
                   eka.lst_status_accept r,
                   eka.lst_document_position s,
                   (select 'PREMI UTAMA' jenis_trans, reg_spaj, mps_kode kode, mps_deposit_date bdate, mpr_mature_date edate, 
                    mpr_rate rate, mpr_jangka_invest mgi, mpr_deposit premi, mpr_interest bunga, mpr_jns_ro ro 
                    from eka.mst_powersave_ro where mps_kode = 5
                    union
                    select msl_desc jenis_trans, reg_spaj, msl_kode kode, msl_bdate bdate, msl_edate edate, 
                    msl_rate rate, msl_mgi mgi, msl_premi premi, msl_bunga bunga, msl_ro ro 
                    from eka.mst_slink where msl_kode = 5
                   ) t,
                   eka.lst_title u,
                   eka.lst_title v,
                   eka.lst_negara w,
                   eka.lst_negara x,
                   eka.lst_agama y,
                   eka.lst_agama z,
                   eka.lst_education aa,
                   eka.lst_education ab,
                   eka.lst_identity ac,
                   eka.lst_identity ad,
                   eka.mst_rek_client ae,
                   eka.lst_bank_pusat af,
                   eka.lst_document_position ag,
                   eka.lst_status_accept ah,
                   eka.lst_policy_status ai
             WHERE a.lstb_id = 1
			   AND a.lspd_id <![CDATA[<>]]> 95
               AND a.reg_spaj = b.reg_spaj
               AND b.reg_spaj = c.reg_spaj
			   AND c.lsbs_id <![CDATA[<]]> 800
               AND c.reg_spaj = d.reg_spaj
               AND d.lsle_id = 4
               AND a.lca_id = e.lca_id
               AND a.mspo_policy_holder = f.mcl_id
               AND b.mste_insured = g.mcl_id
               AND d.msag_id = i.msag_id
               AND i.mcl_id = h.mcl_id
               AND c.lsbs_id = j.lsbs_id
               AND c.lsbs_id = k.lsbs_id
               AND c.lsdbs_number = k.lsdbs_number
               AND a.reg_spaj = l.reg_spaj
               AND f.mcl_id = m.mcl_id
               AND g.mcl_id = n.mcl_id
               AND a.reg_spaj = p.reg_spaj(+)
               AND a.mspo_customer = q.mcl_id(+)
               AND b.lssa_id = r.lssa_id
               AND a.lca_id = '09'
               AND (
                    (c.lsbs_id = 142 AND c.lsdbs_number = 9) OR 
                    (c.lsbs_id = 158 AND c.lsdbs_number = 14) OR
                    (c.lsbs_id = 164 AND c.lsdbs_number = 8))
               AND a.lspd_id = s.lspd_id
               AND a.reg_spaj = t.reg_spaj
               AND f.lti_id = u.lti_id(+)
               AND g.lti_id = v.lti_id(+)
               AND f.lsne_id = w.lsne_id(+)
               AND g.lsne_id = x.lsne_id(+)
               AND f.lsag_id = y.lsag_id(+)
               AND g.lsag_id = z.lsag_id(+)
               AND f.lsed_id = aa.lsed_id(+)
               AND g.lsed_id = ab.lsed_id(+)
               AND f.lside_id = ac.lside_id(+)
               AND g.lside_id = ad.lside_id(+)
               and a.reg_spaj = ae.reg_spaj
               and ae.lsbp_id = af.lsbp_id
               and a.lspd_id = ag.lspd_id
               and a.lssp_id = ai.lssp_id
               and b.lssa_id = ah.lssa_id
			   <isEqual property="jenisReport" compareValue="tanggal_input">
				   AND trunc(b.mste_input_date) BETWEEN #tglAwal# AND #tglAkhir#							
			   </isEqual>
			   <isEqual property="jenisReport" compareValue="tanggal_efektif">
				   AND b.mste_beg_date BETWEEN #tglAwal# AND #tglAkhir#							
			   </isEqual>
               <isNotEmpty property="lcb_no">
               	AND p.lcb_no = #lcb_no#
               </isNotEmpty>			   
		</select>

		<select id="elions.uw.selectDataNasabahSinarmasSekuritasProduksi"  resultClass="com.ekalife.elions.model.NasabahSinarmasSekuriti" parameterClass="java.util.HashMap">
SELECT /*+ first_rows */
                   a.lku_id, t.jenis_trans, a.mspo_no_blanko "NO_SERI", a.mspo_nasabah_dcif "NO_CIF",
                   a.mspo_policy_no "NO_POLIS", a.reg_spaj "NO_SPAJ",
                   c.lsbs_id "KODE_PRODUK", eka.f_lsdbs(c.reg_spaj, c.lsbs_id, c.lsdbs_number) "NAMA_PRODUK",
                   
                   f.mcl_first "PP_NAMA", u.lti_note "PP_GELAR",
                   f.mspe_mother "PP_MOTHER", ac.lside_name "PP_JENIS_ID", f.mspe_no_identity "PP_ID",
                   f.mspe_place_birth "PP_BIRTHPLACE", f.mspe_date_birth "PP_BIRTHDATE",
                   w.lsne_note "PP_WN",
                   DECODE (f.mspe_sex, 0, 'Ibu ', 1, 'Bapak ') "PP_SEX",
                   y.lsag_name "PP_AGAMA", aa.lsed_name "PP_PENDIDIKAN",
                   
                   f.mpn_job_desc "PP_JOB_DESC",
                   f.mkl_tujuan "PP_TUJUAN",
                   f.mkl_penghasilan "PP_PENGHASILAN",
                   f.mkl_pendanaan "PP_PENDANAAN",
                   f.mkl_kerja "PP_KERJA",
                   f.mkl_smbr_penghasilan "PP_SMBR_PENGHASILAN",
                   f.mkl_industri "PP_INDUSTRI",
                          
                   m.alamat_rumah "PP_ALAMAT_RUMAH", m.kd_pos_rumah "PP_KD_POS_RUMAH",
                   m.kota_rumah "PP_KOTA_RUMAH", m.area_code_rumah "PP_AREA_CODE_RUMAH",
                   m.telpon_rumah "PP_TELPON_RUMAH",
                   m.area_code_rumah2 "PP_AREA_CODE_RUMAH2",
                   m.telpon_rumah2 "PP_TELPON_RUMAH2", m.alamat_kantor "PP_ALAMAT_KANTOR",
                   m.kd_pos_kantor "PP_KD_POS_RUMAH2", m.kota_kantor "PP_KOTA_KANTOR",
                   m.area_code_kantor "PP_AREA_CODE_KANTOR",
                   m.telpon_kantor "PP_TELPON_KANTOR",
                   m.area_code_kantor2 "PP_AREA_CODE_KANTOR2",
                   m.telpon_kantor2 "PP_TELPON_KANTOR2", m.email "PP_EMAIL",
                   NVL (m.no_hp, m.no_hp2) "PP_HP", m.area_code_fax "PP_AREA_CODE_FAX",
                   m.no_fax "PP_NO_FAX", 
            
                   g.mcl_first "TT_NAMA", v.lti_note "TT_GELAR",
                   g.mspe_mother "TT_MOTHER", ad.lside_name "PP_JENIS_ID2", g.mspe_no_identity "TT_ID",
                   g.mspe_place_birth "TT_BIRTHPLACE", g.mspe_date_birth "TT_BIRTHDATE",
                   x.lsne_note "TT_WN",
                   DECODE (g.mspe_sex, 0, 'Ibu ', 1, 'Bapak ') "TT_SEX",
                   z.lsag_name "TT_AGAMA", ab.lsed_name "TT_PENDIDIKAN",
                   
                   f.mpn_job_desc "PP_JOB_DESC2",
                   f.mkl_tujuan "PP_TUJUAN2",
                   f.mkl_penghasilan "PP_PENGHASILAN2",
                   f.mkl_pendanaan "PP_PENDANAAN2",
                   f.mkl_kerja "PP_KERJA2",
                   f.mkl_smbr_penghasilan "PP_SMBR_PENGHASILAN2",
                   f.mkl_industri "PP_INDUSTRI2",
                                 
                   n.alamat_rumah "TT_ALAMAT_RUMAH", n.kd_pos_rumah "TT_KD_POS_RUMAH",
                   n.kota_rumah "TT_KOTA_RUMAH", n.area_code_rumah "TT_AREA_CODE_RUMAH",
                   n.telpon_rumah "TT_TELPON_RUMAH",
                   n.area_code_rumah2 "TT_AREA_CODE_RUMAH2",
                   n.telpon_rumah2 "TT_TELPON_RUMAH2", n.alamat_kantor "TT_ALAMAT_KANTOR",
                   n.kd_pos_kantor "TT_KD_POS_RUMAH2", n.kota_kantor "TT_KOTA_KANTOR",
                   n.area_code_kantor "TT_AREA_CODE_KANTOR",
                   n.telpon_kantor "TT_TELPON_KANTOR",
                   n.area_code_kantor2 "TT_AREA_CODE_KANTOR2",
                   n.telpon_kantor2 "TT_TELPON_KANTOR2", n.email "TT_EMAIL",
                   NVL (n.no_hp, n.no_hp2) "TT_HP", n.area_code_fax "TT_AREA_CODE_FAX",
                   n.no_fax "TT_NO_FAX", 
            
                   t.bdate "INV_EFFECTIVEDATE", t.edate "INV_EXPIRYDATE",
                   t.rate "INV_RETURN", t.mgi "INV_PERIOD",
                   t.premi "INV_TOT_NOMINAL", t.bunga "INV_TOT_BUNGA",
                   DECODE (t.ro,
                           1, 'ALL',
                           2, 'PREMI',
                           3, 'AUTOBREAK'
                          ) "INV_JENIS_RO",
                    
                   af.lsbp_nama "INV_BANK", ae.mrc_cabang "INV_BANK_BRANCH", ae.mrc_kota "INV_BANK_CITY",
                   ae.mrc_nama "INV_BANK_ONBEHALF", ae.mrc_no_ac "INV_BANK_NOREK",
                   
                   ag.lspd_position "POSISI_DOKUMEN", ai.lssp_status "STATUS_POLIS", ah.status_accept "STATUS_AKSEP",

                   l.msap_address tagihan_alamat, l.msap_zip_code tagihan_kd_pos,
                   l.msap_phone1 tagihan_telp, l.msap_area_code1 tagihan_area_code,
                   l.msap_phone2 tagihan_telp2, l.msap_area_code2 tagihan_area_code2,
                   l.e_mail tagihan_email, l.no_hp tagihan_hp, l.kota tagihan_kota,
                   
                   prod.mspro_prod_date TGL_PRODUKSI, prod.mspro_nilai_kurs * detprod.msdpr_premium PREMI_PRODUKSI
                   
              FROM eka.mst_policy a,
                   eka.mst_insured b,
                   eka.mst_product_insured c,
                   eka.mst_agent_prod d,
                   eka.lst_cabang e,
                   eka.mst_client_new f,
                   eka.mst_client_new g,
                   eka.mst_client_new h,
                   eka.mst_agent i,
                   eka.lst_bisnis j,
                   eka.lst_det_bisnis k,
                   eka.mst_address_billing l,
                   eka.mst_address_new m,
                   eka.mst_address_new n,
                   (SELECT a.lcb_no, a.reg_spaj, b.nama_cabang, c.nama_reff
                      FROM eka.mst_reff_bii a, eka.lst_cabang_bii b, eka.lst_reff_bii c
                     WHERE a.level_id = 4 AND a.lcb_no = b.lcb_no AND a.lrb_id = c.lrb_id
                     and a.no_urut = (select max(no_urut) from eka.mst_reff_bii where level_id = 4 and reg_spaj = a.reg_spaj and b.jenis=3)) p,
                   (SELECT a.mcl_id, b.mcl_first
                      FROM eka.mst_company a, eka.mst_client_new b
                     WHERE a.mcl_id = b.mcl_id) q,
                   eka.lst_status_accept r,
                   eka.lst_document_position s,
                   (select 'PREMI UTAMA' jenis_trans, reg_spaj, mps_kode kode, mps_deposit_date bdate, mpr_mature_date edate, 
                    mpr_rate rate, mpr_jangka_invest mgi, mpr_deposit premi, mpr_interest bunga, mpr_jns_ro ro, msbi_tahun_ke tahun_ke, msbi_premi_ke premi_ke  
                    from eka.mst_powersave_ro where mps_kode = 5 
                    and (exists( select 1 from eka.mst_reff_bii a,
                                                eka.lst_cabang_bii b
                                 where a.lcb_no=b.lcb_no
                                 and    a.no_urut=1 and a.level_id=4  
                                 and    b.jenis=3
                                 and    a.reg_spaj=eka.mst_powersave_ro.reg_spaj))
                    union
                    select msl_desc jenis_trans, reg_spaj, msl_kode kode, msl_bdate bdate, msl_edate edate, 
                    msl_rate rate, msl_mgi mgi, msl_premi premi, msl_bunga bunga, msl_ro ro, msl_tahun_ke tahun_ke, msl_premi_ke premi_ke
                    from eka.mst_slink where msl_kode = 5
                    and (exists( select 1 from eka.mst_reff_bii a,
                                                eka.lst_cabang_bii b
                                 where a.lcb_no=b.lcb_no
                                 and    a.no_urut=1 and a.level_id=4  
                                 and    b.jenis=3
                                 and    a.reg_spaj=eka.mst_slink.reg_spaj))
                   ) t,
                   eka.lst_title u,
                   eka.lst_title v,
                   eka.lst_negara w,
                   eka.lst_negara x,
                   eka.lst_agama y,
                   eka.lst_agama z,
                   eka.lst_education aa,
                   eka.lst_education ab,
                   eka.lst_identity ac,
                   eka.lst_identity ad,
                   eka.mst_rek_client ae,
                   eka.lst_bank_pusat af,
                   eka.lst_document_position ag,
                   eka.lst_status_accept ah,
                   eka.lst_policy_status ai,
                   eka.mst_production prod,
                   eka.mst_det_production detprod
             WHERE a.lstb_id = 1
               AND a.lspd_id <![CDATA[<>]]> 95
               AND a.reg_spaj = b.reg_spaj
               AND b.reg_spaj = c.reg_spaj
               AND c.lsbs_id <![CDATA[<]]> 300
               AND c.reg_spaj = d.reg_spaj
               AND d.lsle_id = 4
               AND a.lca_id = e.lca_id
               AND a.mspo_policy_holder = f.mcl_id
               AND b.mste_insured = g.mcl_id
               AND d.msag_id = i.msag_id
               AND i.mcl_id = h.mcl_id
               AND c.lsbs_id = j.lsbs_id
               AND c.lsbs_id = k.lsbs_id
               AND c.lsdbs_number = k.lsdbs_number
               AND a.reg_spaj = l.reg_spaj
               AND f.mcl_id = m.mcl_id
               AND g.mcl_id = n.mcl_id
               AND a.reg_spaj = p.reg_spaj(+)
               AND a.mspo_customer = q.mcl_id(+)
               AND b.lssa_id = r.lssa_id
               AND a.lca_id = '09'
               AND (
                    (c.lsbs_id = 142 AND c.lsdbs_number = 9) OR 
                    (c.lsbs_id = 158 AND c.lsdbs_number = 14) OR
                    (c.lsbs_id = 164 AND c.lsdbs_number = 8))
               AND a.lspd_id = s.lspd_id
               AND a.reg_spaj = t.reg_spaj
               AND f.lti_id = u.lti_id(+)
               AND g.lti_id = v.lti_id(+)
               AND f.lsne_id = w.lsne_id(+)
               AND g.lsne_id = x.lsne_id(+)
               AND f.lsag_id = y.lsag_id(+)
               AND g.lsag_id = z.lsag_id(+)
               AND f.lsed_id = aa.lsed_id(+)
               AND g.lsed_id = ab.lsed_id(+)
               AND f.lside_id = ac.lside_id(+)
               AND g.lside_id = ad.lside_id(+)
               and a.reg_spaj = ae.reg_spaj
               and ae.lsbp_id = af.lsbp_id
               and a.lspd_id = ag.lspd_id
               and a.lssp_id = ai.lssp_id
               and b.lssa_id = ah.lssa_id
               AND t.reg_spaj = prod.reg_spaj
               AND t.tahun_ke = prod.msbi_tahun_ke
               AND t.premi_ke = prod.msbi_premi_ke
               AND prod.mspro_jn_prod = 1
               AND prod.lstb_id = detprod.lstb_id
               AND prod.reg_spaj = detprod.reg_spaj
               AND prod.mspro_prod_ke = detprod.mspro_prod_ke
               AND prod.mspro_prod_date = detprod.mspro_prod_date
               AND prod.mspro_prod_date BETWEEN #tglAwal# AND #tglAkhir#
               <isNotEmpty property="lcb_no">
               	AND p.lcb_no = #lcb_no#
               </isNotEmpty>
		</select>
		
		<!--<select id="elions.bas.getMsfIdMssdDt"  resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
			SELECT msf_id,mssd_dt 
	          FROM eka.mst_spaj_det 
	         WHERE msab_id = (SELECT msab_id FROM eka.mst_agent_branch WHERE msag_id = #kodeAgent#)
   	           AND no_blanko = #noBlanko#			
		</select>-->
		
		<select id="elions.bas.selectFitrah21Hari" resultClass="java.util.HashMap" parameterClass="com.ekalife.elions.model.FormSpaj">	
			SELECT distinct msf_id_asli
			  FROM eka.mst_spaj_det a 
			 WHERE msf_id_asli in (select msf_id 
							from eka.mst_form a
							where a.lsjs_id = 9 
							and no_blanko_req != '000000000000' 
							AND  a.lca_id = #lca_id#
							and a.mss_jenis = #mss_jenis#               
							AND a.msab_id = #msab_id#
							and posisi in(4,5))
			  AND mss_jenis = 1
			  AND lsp_id = 2
			  AND eka.workdays(a.mssd_dt, sysdate) > 21 				
		</select>
		
	<select id="elions.bas.selectNoUrutFormFitrah" parameterClass="java.util.HashMap" resultClass="int">
		SELECT MAX (msf_urut)
		  FROM eka.mst_fitrah_hist
		 WHERE no_blanko = #no_blanko#
		   AND lsjs_id = #lsjs_id#
	</select>
	
	<select id="elions.bas.selectNoUrutFlagFitrah" parameterClass="java.util.HashMap" resultClass="int">
		SELECT MAX (flag_urut)
		  FROM eka.mst_fitrah_hist
		 WHERE no_blanko = #no_blanko#
		   AND msab_id = #msab_id#
		   AND lsp_id = 2	
	</select>


    <select id="elions.bas.selectStableRO" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
        SELECT  b.reg_spaj, b.mspo_policy_no polis, e.mcl_first pemegang,
                eka.f_lsdbs(c.reg_spaj, c.lsbs_id, c.lsdbs_number) produk, a.msl_bdate begdate, a.msl_edate enddate,
                a.no_reg, a.msl_desc, a.msl_tu_ke, a.msl_premi, a.msl_mgi,
                a.msl_bunga, a.msl_print_date
        FROM eka.mst_slink a,
             eka.mst_policy b,
             eka.mst_product_insured c,
             eka.lst_det_bisnis d,
             eka.mst_client_new e,
             eka.lst_region f,
             eka.lst_user_admin g
        WHERE a.msl_kode IN (2, 3)
            AND a.reg_spaj = b.reg_spaj
            AND b.lstb_id = 1
            AND b.reg_spaj = c.reg_spaj
            AND c.lsbs_id <![CDATA[<]]> 300
            AND c.lsbs_id = d.lsbs_id
            AND c.lsdbs_number = d.lsdbs_number
            AND b.mspo_policy_holder = e.mcl_id
            AND b.lca_id = f.lca_id
            AND b.lwk_id = f.lwk_id
            AND b.lsrg_id = f.lsrg_id
            AND f.lar_id = g.lar_id
            AND g.lus_id = #lusId#
            AND a.msl_bdate BETWEEN #dateFrom# AND #dateTo#
	        AND a.msl_print_date is not null
        ORDER BY b.mspo_policy_no, a.msl_tu_ke
    </select>
    
    <select id="elions.bas.selectCabBmi" resultClass="dropDown">
		SELECT bmi_id KEY, bmi_name VALUE
		  FROM eka.lst_cab_bmi    
	  ORDER BY bmi_name 		  
    </select>
    
    <select id="elions.bas.selectCabBmiForReport" resultClass="dropDown">
		  SELECT bmi_id KEY, bmi_name VALUE
		    FROM eka.lst_cab_bmi
		   WHERE bmi_id IN (SELECT DISTINCT bmi_id
		                               FROM eka.mst_form
		                              WHERE bmi_id IS NOT NULL)
		ORDER BY bmi_name    
    </select>
    
    <select id="elions.bas.selectPermintaanBandara" parameterClass="java.lang.String" resultClass="dropDown">
		  SELECT no_permintaan value, no_permintaan key
		    FROM eka.mst_form_bandara
		   WHERE lus_admin = #value#
		ORDER BY no_permintaan    	
    </select>
    
    <select id="elions.bas.selectAdminBandara" parameterClass="java.lang.String" resultClass="dropDown">
		SELECT b.lus_id AS key, b.lus_login_name ||' - ' || c.lsb_desc AS value
		  FROM eka.lst_adm_travel_ins a, 
		  	   eka.lst_user b,
			   eka.lst_bandara c
		 WHERE a.lus_id = b.lus_id
		   AND a.lsb_id = c.lsb_id   	
    </select>
    
    <select id="elions.bas.selectNoBlankoBandara" parameterClass="java.util.HashMap" resultClass="dropDown">
		  SELECT no_blanko AS VALUE, no_blanko AS KEY
		    FROM eka.mst_spaj_det
		   WHERE lsp_id = 2 AND lsjs_id = 15 AND mssd_lus_id = #lus_id# AND lca_id = #lca_id#
		ORDER BY no_blanko    
    </select>
    
    <select id="elions.bas.getMaxPermintaanId" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT MAX (no_permintaan)
		  FROM eka.lst_adm_travel_ins a, 
		  	   eka.lst_bandara b, 
		  	   eka.mst_form_bandara c
		 WHERE a.lsb_id = b.lsb_id
		   AND c.no_permintaan LIKE b.lsb_code || '%'
		   AND a.lus_id = #value#    	
    </select>
    
    <select id="elions.bas.getKodeBandara" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT b.lsb_code
		  FROM eka.lst_adm_travel_ins a, 
		  	   eka.lst_bandara b 
		 WHERE a.lsb_id = b.lsb_id
		   AND a.lus_id = #value#    	
    </select>    
    
    <select id="elions.bas.selectFormPermintaanBandara" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT no_permintaan ID, TO_CHAR (tgl_permintaan, 'dd/mm/yyyy') tglminta,
		       nama_perwakilan nama, juml_blanko jumlh, no_blanko noblanko, trav_ins_type jenis
		  FROM eka.mst_form_bandara
		 WHERE no_permintaan = #value#  	
    </select>
    
    <select id="elions.bas.cekAdmTravIns" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT (*)
		  FROM eka.lst_adm_travel_ins
		 WHERE lus_id = #value#    	
    </select>
    
    <select id="elions.bas.cekNoBlankoIsExist" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">
		SELECT COUNT (*)
		 FROM eka.mst_spaj_det a,
		 	  eka.mst_form b
		WHERE a.msf_id = b.msf_id
		  AND a.mss_jenis = b.mss_jenis
		  AND a.msab_id = b.msab_id
		  AND a.lca_id = b.lca_id
		  AND a.lsjs_id = b.lsjs_id 
		  AND a.lsjs_id = #lsjs_id#
		  AND a.mss_jenis = #mss_jenis#
		  AND a.msab_id = #msab_id#
		  AND a.lca_id = #lca_id#
		  AND a.mssd_lus_id = #lus_id#
		  AND a.no_blanko = #no_blanko#
		  AND b.trav_ins_type = #jnsTravIns#		       	
    </select>
    
    <select id="elions.bas.selectSmsserver_in" parameterClass="java.util.HashMap" resultClass="sms_in">
     SELECT * FROM(
     SELECT ROWNUM as row_number, x.*
	 FROM(
    	SELECT  a.*, b.LUS_FULL_NAME username, c.id id_kirim, c.TEXT msg_reply, c.STATUS status_delivery
		    FROM eka.smsserver_in a, eka.lst_user b, eka.smsserver_out c
		   WHERE a.TYPE = 'I'
		     AND a.LUS_ID = b.LUS_ID(+)
		     AND a.ID =c.ID_REFRENCE (+)
		     AND (UPPER (a.text) NOT LIKE 'SHUTDOWN%' AND UPPER (a.text) NOT LIKE
		                                                                    'RESTART%'
		         )
		     AND a.flag_active = 1
			<isNotNull property="update" >
		     AND UPPER (a.text) LIKE 'UPDATE%'
		    </isNotNull>
		    <isNotNull property="process" >
		     AND a.process in  (0,4)
		     </isNotNull>
		     <isNotNull property="followup" >
		     AND a.process not in  (0)
		     and a.lus_id is not null
		     </isNotNull>
		     <isNotNull property="beg_date" >
		    	 AND a.receive_date BETWEEN TO_DATE (#beg_date#, 'dd/mm/yyyy')
		                          AND TO_DATE (#end_date#, 'dd/mm/yyyy') + 1
		     </isNotNull>
		     <isNotNull property="id" >
			     AND a.id = #id#
		     </isNotNull>
		     <isNotNull property="lus_id" >
			     AND a.lus_id = #lus_id#
		     </isNotNull>
		ORDER BY a.ID DESC
		)x
		)
		<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   	</isNotEmpty>	
    </select>
    
     <select id="elions.bas.selectTotalSmsserver_in" parameterClass="java.util.HashMap" resultClass="string">
   		  SELECT CEIL( count( * ) / #noRow# ) as total_pages    	
		    FROM eka.smsserver_in a, eka.lst_user b, eka.smsserver_out c
		   WHERE a.TYPE = 'I'
		     AND a.LUS_ID = b.LUS_ID(+)
		     AND a.ID =c.ID_REFRENCE (+)
		     AND (UPPER (a.text) NOT LIKE 'SHUTDOWN%' AND UPPER (a.text) NOT LIKE
		                                                                    'RESTART%'
		         )
             AND a.flag_active = 1
			<isNotNull property="update" >
		     AND UPPER (a.text) LIKE 'UPDATE%'
		    </isNotNull>
		    <isNotNull property="process" >
		     AND a.process in  (0,4)
		     </isNotNull>
		     <isNotNull property="followup" >
		     AND a.process not in  (0)
		     and a.lus_id is not null
		     </isNotNull>
		     <isNotNull property="beg_date" >
		    	 AND a.receive_date BETWEEN TO_DATE (#beg_date#, 'dd/mm/yyyy')
		                          AND TO_DATE (#end_date#, 'dd/mm/yyyy') + 1
		     </isNotNull>
		     <isNotNull property="id" >
			     AND a.id = #id#
		     </isNotNull>
		     <isNotNull property="lus_id" >
			     AND a.lus_id = #lus_id#
		     </isNotNull>
		ORDER BY a.ID DESC
    </select>
    
    <select id="elions.bas.selectSmsserver_out" parameterClass="java.util.HashMap" resultClass="sms_out">
    	SELECT a.*, b.LUS_FULL_NAME username
			  FROM eka.smsserver_out a, eka.lst_user b
			 WHERE a.LUS_ID = b.LUS_ID(+)
			<isNotNull property="lus_id" >
				 a.lus_id = #lus_id# 
			 </isNotNull>
			  <isNotNull property="id" >
			     AND a.id_refrence = #id#
		     </isNotNull>
			   
    </select>
    
    <select id="elions.bas.selectSmsserver_in_by_originator" parameterClass="string" resultClass="sms_in">
    	SELECT a.*, b.lus_full_name username, c.id id_kirim, c.TEXT msg_reply, c.STATUS status_delivery
		  FROM eka.smsserver_in a, eka.lst_user b, eka.smsserver_out c
		 WHERE a.originator LIKE '%'||#value#
		   AND a.TYPE = 'I'
		   AND (    UPPER (a.text) NOT LIKE 'SHUTDOWN%'
		        AND UPPER (a.text) NOT LIKE 'RESTART%'
		       )
		   AND a.lus_id = b.lus_id(+)  
		   AND a.ID =c.ID_REFRENCE (+)
	</select>
	
	<select id="elions.bas.selectSmsserver_out_by_recipient" parameterClass="string" resultClass="sms_out">
		SELECT a.*, b.LUS_FULL_NAME username
		  FROM eka.smsserver_out a, eka.lst_user b
		 WHERE a.recipient LIKE '%'||#value#
		    and a.LUS_ID = b.LUS_ID(+)
	</select>
	
	<select id="elions.bas.selectPermintaanSpajBlomAccept" resultClass="java.util.HashMap">
		SELECT   *
		    FROM (SELECT   MAX (a.msfh_dt) msfh_dt, a.msf_id, a.lca_id, a.lus_id,
		                   b.lus_full_name, c.lca_nama
		              FROM (SELECT DISTINCT a.msf_id, a.lca_id, a.lus_id, b.msfh_dt
		                               FROM eka.mst_form a, eka.mst_form_hist b
		                              WHERE a.msf_id = b.msf_id
		                                AND a.posisi = b.posisi
		                                AND a.mss_jenis = 0
                                        AND a.msab_id = 0
		                                AND a.posisi = 0) a,
		                   eka.lst_user b,
		                   eka.lst_cabang c
		             WHERE a.lus_id = b.lus_id AND a.lca_id = c.lca_id
		          GROUP BY b.lus_full_name, a.msf_id, a.lca_id, c.lca_nama, a.lus_id)
		ORDER BY msfh_dt DESC, lus_full_name, msf_id	
	</select>
	
	<select id="elions.bas.selectPermintaanSpajBlomPertgjwbn" resultClass="java.util.HashMap">
	    SELECT DISTINCT a.msf_id, a.mssd_lus_id, a.mssd_dt, eka.add_workdays(a.mssd_dt,30) max_date, 
                        b.msag_id, b.msab_nama, c.lus_full_name, c.lus_email, d.lca_nama, e.posisi, f.lsjs_desc,
                        f.lsjs_prefix, e.no_blanko_req
                   FROM eka.mst_spaj_det a,
                        eka.mst_agent_branch b,
                        eka.lst_user c,
                        eka.lst_cabang d,
                        eka.mst_form e,
                        eka.lst_jenis_spaj f,
                        eka.mst_agent g
                  WHERE a.lsp_id = 2
                    AND a.msab_id = b.msab_id
                    AND b.msag_id = g.msag_id
                    AND a.mssd_lus_id = c.lus_id
                    AND a.lca_id = d.lca_id
                    AND a.msf_id = e.msf_id
                    AND e.posisi != 6
                    AND eka.workdays (a.mssd_dt, SYSDATE) > 30
                    AND a.lsjs_id = f.lsjs_id
                    AND c.lus_active = 1
                    AND g.msag_active=1
                    AND e.no_blanko_req is not null
               ORDER BY c.lus_full_name, a.mssd_dt DESC  		
	</select>
	
	<select id="elions.bas.getLstJnsAlasan" resultClass="dropDown">
		  SELECT nama value, nama key
		    FROM  eka.lst_jenis_alasan
		   WHERE aktif = 1
		ORDER BY no		
	</select>
	
	<select id="elions.bas.selectSuratHistByDate" parameterClass="java.util.HashMap" resultClass="suratHist">
	    SELECT a.reg_spaj, a.jenis, a.no, a.periode, a.no_ref, a.lde_id, a.tgl_print,
	           a.user_print, g1.lus_login_name as nama_user_print, a.tgl_kirim, a.user_kirim, 
	           g2.lus_login_name as nama_user_kirim, a.tgl_back, a.user_back, g3.lus_login_name as nama_user_back,
	           a.alasan_back, a.tgl_fu1, a.user_fu1, g4.lus_login_name as nama_user_fu1, a.ket_fu1, a.tgl_fu2, 
	           a.user_fu2, g5.lus_login_name as nama_user_fu2, a.ket_fu2, a.tgl_fu3, a.user_fu3, g6.lus_login_name as nama_user_fu3, 
	           a.ket_fu3, a.tgl_fu4, a.user_fu4, g7.lus_login_name as nama_user_fu4,
	           a.ket_fu4, a.tgl_fu5, a.user_fu5, g8.lus_login_name as nama_user_fu5, a.ket_fu5, a.tgl_kirim_back, a.user_kirim_back, 
	           g9.lus_login_name as nama_user_kirim_back, a.ket_kirim_back, a.flag_selesai, a.flag_insert, a.kirim_via,
	           a.kirim_back_via, b.mspo_policy_no, c.lde_dept, d.nama, a.ket2_fu1, a.ket2_fu2, a.ket2_fu3,
	           e.mcl_first || ' ' || e.mcl_middle || ' ' || e.mcl_last AS nm_pp, f.lca_nama, d.nama as jenis_surat
	      FROM eka.mst_surat_history a,
	           eka.mst_policy b,
	           eka.lst_department c,
	           eka.lst_jenis_surat d,
	           eka.mst_client e,
	           eka.lst_cabang f,
	           eka.lst_user g1,
	           eka.lst_user g2,
	           eka.lst_user g3,
	           eka.lst_user g4,
	           eka.lst_user g5,
	           eka.lst_user g6,
	           eka.lst_user g7,
	           eka.lst_user g8,
	           eka.lst_user g9
	     WHERE c.lde_id = a.lde_id
	       AND d.jenis = a.jenis
	       AND b.mspo_policy_holder = e.mcl_id
	       AND a.reg_spaj = b.reg_spaj
	       AND d.kategori <![CDATA[<>]]> 'Agency'
	       AND b.lca_id = f.lca_id
	       AND a.tgl_back IS NOT NULL
	       AND a.user_print = g1.lus_id(+)
	       AND a.user_kirim = g2.lus_id(+)
	       AND a.user_back = g3.lus_id(+)
	       AND a.user_fu1 = g4.lus_id(+)
	       AND a.user_fu2 = g5.lus_id(+)
	       AND a.user_fu3 = g6.lus_id(+)
	       AND a.user_fu4 = g7.lus_id(+)
	       AND a.user_fu5 = g8.lus_id(+)
	       AND a.user_kirim_back = g9.lus_id(+)
	       <isEmpty property="bypolis">
	       AND TRUNC (a.tgl_kirim) BETWEEN TO_DATE (#begDate#,'dd/mm/yyyy') AND  TO_DATE (#endDate#,'dd/mm/yyyy')
	       </isEmpty>
	       <isEqual property="allAccess" compareValue="0">
	       AND (b.lca_id,b.lwk_id,b.lsrg_id) in (select a.lca_id, a.lwk_id,a.lsrg_id
                                                   from eka.lst_region a,
                                                        eka.lst_user_admin b
                                                  where a.lar_id = b.lar_id
                                                    and b.lus_id = #lus_id#)	       
	       </isEqual>
	       <isEqual property="jenis" compareValue="0">
	       AND a.ket_fu1 is null
	       AND a.ket_fu2 is null
	       AND a.ket_fu3 is null
	       AND a.ket2_fu1 is null
	       AND a.ket2_fu2 is null
	       AND a.ket2_fu3 is null
	       </isEqual>
	       <isEqual property="jenis" compareValue="2">
	       AND a.jenis = 2
	       </isEqual>
	       <isEmpty property="bypolis">
		       <isNotEmpty property="polis">
		       AND b.mspo_policy_no = #polis#
		       </isNotEmpty>
	       </isEmpty>
	       <isNotEmpty property="bypolis">
		       AND b.mspo_policy_no = #bypolis#
	       </isNotEmpty>
	  ORDER BY f.lca_nama, a.tgl_kirim, a.tgl_back, d.nama, a.reg_spaj 	
	</select> 
	
	
	<select id="elions.bas.selectCekPinExist" parameterClass="string" resultClass="java.lang.Integer">
		select Count(*) from eka.mst_buku_pas where pin=#value#
	</select>

	<select id="elions.bas.selectCekKartuExist" parameterClass="string" resultClass="java.lang.Integer">
		select count(*) from eka.mst_kartu_pas where no_kartu=#value#
	</select>
	
	<select id="elions.bas.selectMiaMsagId" resultClass="dropDown">
		  select msag_id key, msag_id value
		    from eka.mst_input_agensys
		   where msag_id is not null
		order by msag_id  	
	</select>
	
	<select id="elions.bas.selectlsRegion" parameterClass="string" resultClass="dropDown">
		select a.lca_id || '.' || a.lwk_id || '.' || a.lsrg_id as value, a.lsrg_nama as key
		  from eka.lst_region a,
		       eka.lst_cabang b,
		       eka.lst_wakil c
		 where b.lca_id = c.lca_id
		   and a.lca_id = c.lca_id
		   and a.lwk_id = c.lwk_id
		   and b.lca_id = #value#
		order by a.lca_id, a.lwk_id, a.lsrg_id	
	</select>
	
	<select id="elions.bas.selectlsBank" resultClass="dropDown">
		select lbn_id as value, lsbp_nama || ' ' || lbn_nama as key 
		  from eka.lst_bank a,
		       eka.lst_bank_pusat b
		 where b.lsbp_id = a.lsbp_id
		order by lsbp_nama, lbn_nama 	
	</select>
	
	<select id="elions.bas.isAgentExist" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select b.msag_id
		  from eka.mst_client_new a,
		       eka.mst_agent b
		 where a.mcl_id = b.mcl_id
		   and a.mcl_first like '%'||#name#||'%'
		   and a.mspe_date_birth = to_date(#birth_date#,'dd/mm/yyyy')     
		   and b.msag_active = 1 	
	</select>
	
	<select id="elions.bas.selectCountMstRecuiter" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(*)
		  from eka.mst_rekruter
		 where msrk_id = #value#	
	</select>
	
	<select id="elions.bas.getAgenBlackList" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(*)
		  from eka.mst_agent_black_list
		 where msab_tgl_lahir = to_date(#birth_date#,'dd/mm/yyyy')
		   and upper(trim(msab_nama)) = #name#	
	</select>
	
	<select id="elions.bas.wf_cek_rekruter" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(*)
		  from eka.mst_agent
		 where msag_id = #value#
		   and msag_active = 1   	
	</select>
	
	<select id="elions.bas.getLevelRecruiter" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select lsle_id
		  from eka.mst_agent
		 where msag_id = #ls_agent#	
	</select>
	
	<select id="elions.bas.getMstInputAgensys" parameterClass="java.lang.String" resultClass="com.ekalife.elions.model.Mia">
		select a.mia_agensys_id, a.lus_id, a.msag_id, a.mia_recruiter, a.mia_level_recruit, a.mcl_id, a.lbn_id, a.lca_id, a.lwk_id, a.lsrg_id,
		       a.mia_no_kontrak, a.mia_ktp, a.mia_nama, a.mia_birth_place, to_char(a.mia_birth_date,'dd/mm/yyyy') mia_birth_date, a.mia_input_date, 
		       a.mia_alamat, to_char(a.mia_awal_kontrak,'dd/mm/yyyy') mia_awal_kontrak, to_char(a.mia_akhir_kontrak,'dd/mm/yyyy') mia_akhir_kontrak, 
		       to_char(a.mia_tgl_aktif,'dd/mm/yyyy') mia_tgl_aktif, a.mia_aktif, a.mia_level, a.mia_no_rek, a.lca_id || '.' || a.lwk_id || '.' || a.lsrg_id as region, 
		       c.mcl_first as nama_recruiter, to_char(mia_tgl_berkas,'dd/mm/yyyy') mia_tgl_berkas
		  from eka.mst_input_agensys a,
		       eka.mst_agent b,
		       eka.mst_client c
		 where a.mia_recruiter = b.msag_id(+)
		   and b.mcl_id = c.mcl_id(+) 
		   and a.mia_agensys_id = #value# 	
	</select>
	
	<select id="elions.bas.getMisFromName" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select mia_agensys_id, mia_nama, to_char(mia_birth_date,'dd/mm/yyyy') mia_birth_date, lca_id
		  from eka.mst_input_agensys
		 where mia_nama like '%'||upper(#value#)||'%' 			
	</select>
	
	<select id="elions.bas.getMisFromSpaj" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select mia_agensys_id, mia_nama, to_char(mia_birth_date,'dd/mm/yyyy') mia_birth_date, lca_id
		  from eka.mst_input_agensys
		 where mia_agensys_id like '%'||#value#||'%' 			
	</select>
	
	<!-- ryan - Bridge -->
	<select id="elions.bas.getNamaBridge" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	   select a.msag_id, b.mcl_first, to_char(b.mspe_date_birth,'dd/mm/yyyy')birth_date
          from eka.mst_agent a,
               eka.mst_client_new b
         where A.mcl_id = b.mcl_id
         and b.MCL_FIRST like '%'||upper(#value#)||'%'  
         and a.lca_id = 60
    </select>
	
	<select id="elions.bas.getKodeBridge" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	   select a.msag_id, b.mcl_first, to_char(b.mspe_date_birth,'dd/mm/yyyy')birth_date
          from eka.mst_agent a,
               eka.mst_client_new b
         where A.mcl_id = b.mcl_id
         and a.msag_id like '%'||#value#||'%'  
         and a.lca_id = 60
    </select>
	
	<!-- status : 0 = Outstanding (Sudah Followup), 1 = Closed, 2 = All, 3 = Belum Followup -->
	<!-- jenis  : gagaldebet, jatuhtempo, all -->
	<select id="elions.bas.selectFollowupBilling" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Followup">
		SELECT DISTINCT
		    to_char (msbi_beg_date, 'dd/mm/yyyy') msbi_beg_date, to_char (msbi_end_date, 'dd/mm/yyyy') msbi_end_date, to_char (msbi_due_date, 'dd/mm/yyyy') msbi_due_date, 
		    eka.utils.pemegang (tabel.reg_spaj) pemegang,
		    mspo_policy_no_format, reg_spaj, msbi_tahun_ke, 
		    msbi_premi_ke,  
		    ket, 
		    (select count(*) from eka.mst_followup where lsfu_id = 99 and reg_spaj = tabel.reg_spaj and msbi_tahun_ke = tabel.msbi_tahun_ke and msbi_premi_ke = tabel.msbi_premi_ke) jml_fu,
		    (
				select lsfu_id from eka.mst_followup fol
				where reg_spaj = tabel.reg_spaj and msbi_tahun_ke = tabel.msbi_tahun_ke and msbi_premi_ke = tabel.msbi_premi_ke
				and msfu_urut = (select max(msfu_urut) from eka.mst_followup where reg_spaj = fol.reg_spaj and msbi_tahun_ke = fol.msbi_tahun_ke and msbi_premi_ke = fol.msbi_premi_ke)		    
		    ) lsfu_id, msbi_flag_topup
		FROM (
			<isEqual property="jenis" compareValue="powersave">
				select distinct
				    a.mps_deposit_date msbi_beg_date,
				    <!-- a.mpr_mature_date msbi_beg_date, -->
				    a.mpr_mature_date msbi_end_date,
				    trunc(a.mps_deposit_date+7)msbi_due_date, 
				    b.mspo_policy_no_format,
				    b.reg_spaj,
				    mb.msbi_tahun_ke, 
				    mb.msbi_premi_ke, 
				    'JATUH TEMPO POWER SAVE' ket,
				    lu.lca_id, 
				    lu.lus_id, 
				    mb.msbi_flag_topup, b.lca_id cabang
				from 
				    eka.mst_powersave_ro a, eka.mst_policy b, eka.mst_agent_prod c, eka.lst_region d, eka.lst_user_admin e,
				    eka.mst_billing mb, eka.mst_det_billing mdb, eka.lst_user lu
				where
				    a.mps_kode in (2,3,5)
				    <!-- and (a.mpr_mature_date between TO_DATE('01/01/2013', 'dd/mm/yyyy') and TO_DATE('01/01/2013', 'dd/mm/yyyy')) -->
				    and a.reg_spaj = b.reg_spaj                           
				    and b.lspd_id <![CDATA[<>]]> 95
				    and b.lssp_id = 1
				    and b.reg_spaj = c.reg_spaj
				    and c.lsle_id = 4
				    and b.lca_id = d.lca_id
				    and b.lwk_id = d.lwk_id
				    and b.lsrg_id = d.lsrg_id
				    and d.lar_id = e.lar_id
				    and mdb.reg_spaj = mb.reg_spaj
				    and mdb.msbi_tahun_ke = mb.msbi_tahun_ke
				    and mdb.msbi_premi_ke = mb.msbi_premi_ke
				    and c.reg_spaj = mb.reg_spaj
				    and mb.msbi_premi_ke <![CDATA[>]]> 1
				    and e.lus_id = lu.lus_id  
				    and mb.msbi_tahun_ke = (select max(msbi_tahun_ke) from eka.mst_billing where reg_spaj = b.reg_spaj)
    				and mb.msbi_premi_ke = (select max(msbi_premi_ke) from eka.mst_billing where reg_spaj = b.reg_spaj)
				    and mb.msbi_flag_topup is not null
				    <isNotEmpty property="aging" prepend=" and ">
			           (msbi_beg_date between trunc(sysdate-#aging#) and trunc(sysdate))
			        </isNotEmpty>
			        <isEmpty property="aging" prepend=" and ">
				    <isEqual property="jn" compareValue="0">
					    (msbi_beg_date between to_date(#begdate#, 'dd/mm/yyyy') and to_date(#enddate#, 'dd/mm/yyyy'))
				    </isEqual>
				    <isEqual property="jn" compareValue="1">
					    (msbi_end_date between to_date(#begdate#, 'dd/mm/yyyy') and to_date(#enddate#, 'dd/mm/yyyy'))
				    </isEqual>
			        </isEmpty>
			        <isNotEmpty property="cabang">
			        <isNotEqual property="cabang" compareValue="ALL" prepend=" and ">
			            b.lca_id = #cabang#
			        </isNotEqual>
			        </isNotEmpty>                   
			        <isNotEmpty property="admin">
			        <isNotEqual property="admin" compareValue="ALL" prepend=" and ">
			            e.lus_id = #admin#
			        </isNotEqual>
			        </isNotEmpty>
			        <isNotEmpty property="lus_id" prepend=" and ">
			            e.lus_id = #lus_id#
			        </isNotEmpty>
                    and b.lca_id not in ('09', '58','42','67', '40','66') <!-- EFC dibuka lagi , khusus produk agency -->	    
				    <!-- and e.lus_id = #lus_id# -->
				<!-- order by 1, 2, 3, 4, 5 -->
			</isEqual>
			<isEqual property="jenis" compareValue="stablelink">
				SELECT DISTINCT /*+ first_rows */
				    <!-- b.msl_edate msbi_beg_date, -->
				    b.msl_bdate msbi_beg_date,
				    b.msl_edate msbi_end_date,
				    trunc(b.msl_bdate+7)msbi_due_date, 
				    a.mspo_policy_no_format,
				    b.reg_spaj,
				    mb.msbi_tahun_ke, 
				    mb.msbi_premi_ke, 
				    'JATUH TEMPO STABLE LINK' ket,
				    lu.lca_id, 
				    lu.lus_id, 
				    mb.msbi_flag_topup, a.lca_id cabang
				FROM 
				    eka.mst_policy a,   
				    eka.mst_slink b,   
				    eka.mst_product_insured c,
				    eka.lst_region d,
				    eka.mst_billing mb, eka.mst_det_billing mdb,
    				eka.lst_user_admin lua, eka.lst_user lu
				WHERE 
				    b.reg_spaj = a.reg_spaj                  
				    and a.reg_spaj = c.reg_spaj               
				    and a.lca_id = d.lca_id
				    and a.lwk_id = d.lwk_id
				    and a.lsrg_id = d.lsrg_id
				    and b.reg_spaj = mb.reg_spaj
				    and mdb.reg_spaj = mb.reg_spaj
				    and mdb.msbi_tahun_ke = mb.msbi_tahun_ke
				    and mdb.msbi_premi_ke = mb.msbi_premi_ke
				    and d.lar_id = lua.lar_id
    				and lua.lus_id = lu.lus_id
				    and mb.msbi_tahun_ke = (select max(msbi_tahun_ke) from eka.mst_billing where reg_spaj = b.reg_spaj)
				    and mb.msbi_premi_ke = (select max(msbi_premi_ke) from eka.mst_billing where reg_spaj = b.reg_spaj)
				    and c.lsbs_id <![CDATA[<]]> 300                                                        
				    and b.msl_kode IN (2,3)                                               
				    and b.msl_aktif = 1                                                         
				    <!-- and a.lus_id = '133' -->
				    <!-- and b.msl_edate BETWEEN to_date('01/01/2011','dd/mm/yyyy') and to_date('31/01/2012','dd/mm/yyyy') -->  
				    <!-- and b.reg_spaj = '01200800086' -->
				    and b.MSL_TU_KE = 0
				    <isNotEmpty property="aging" prepend=" and ">
			           (msbi_beg_date between trunc(sysdate-#aging#) and trunc(sysdate))
			        </isNotEmpty>
			        <isEmpty property="aging" prepend=" and ">
				    <isEqual property="jn" compareValue="0">
					    (msbi_beg_date between to_date(#begdate#, 'dd/mm/yyyy') and to_date(#enddate#, 'dd/mm/yyyy'))
				    </isEqual>
				    <isEqual property="jn" compareValue="1">
					    (msbi_end_date between to_date(#begdate#, 'dd/mm/yyyy') and to_date(#enddate#, 'dd/mm/yyyy'))
				    </isEqual>
			        </isEmpty>
			        <isNotEmpty property="cabang">
			        <isNotEqual property="cabang" compareValue="ALL" prepend=" and ">
			            a.lca_id = #cabang#
			        </isNotEqual>
			        </isNotEmpty>                   
			        <isNotEmpty property="admin">
			        <isNotEqual property="admin" compareValue="ALL" prepend=" and ">
			            lua.lus_id = #admin#
			        </isNotEqual>
			        </isNotEmpty>
			        <isNotEmpty property="lus_id" prepend=" and ">
			            lua.lus_id = #lus_id#
			        </isNotEmpty>
                    and a.lca_id not in ('09', '58','42','67', '40','66') <!-- EFC dibuka lagi , khusus produk agency -->
			</isEqual>
			<isEqual property="jenis" compareValue="list_aging">
				select 
			        mb.msbi_beg_date, mb.msbi_end_date, mb.msbi_due_date, mp.mspo_policy_no_format, mp.reg_spaj, mb.msbi_tahun_ke, mb.msbi_premi_ke, 'JATUH TEMPO' ket,
			        lu.lca_id, lu.lus_id, mb.msbi_flag_topup, mp.lca_id cabang
			    from 
			        eka.mst_billing mb, eka.mst_det_billing mdb, eka.mst_policy mp, eka.mst_billing_hcr mbh, eka.mst_insured mi,
			        eka.lst_region lr, eka.lst_user_admin lua, eka.lst_user lu
			    where
			        mb.reg_spaj = mbh.reg_spaj(+)
			        and mb.msbi_tahun_ke = mbh.msbih_tahun_ke(+)
			        and mb.msbi_premi_ke = mbh.msbih_premi_ke(+)
			        and mdb.reg_spaj = mb.reg_spaj
			        and mdb.msbi_tahun_ke = mb.msbi_tahun_ke
			        and mdb.msbi_premi_ke = mb.msbi_premi_ke
			        and mp.reg_spaj = mb.reg_spaj
			        and mp.reg_spaj = mi.reg_spaj
			        and mp.lscb_id not in (0)
			        and mb.lspd_id in (11,12,21,56,57,58)
			        and mb.msbi_premi_ke > 1
			        and mb.lca_id = lr.lca_id
			        and mb.lwk_id = lr.lwk_id
			        and mb.lsrg_id = lr.lsrg_id
			        and lr.lar_id = lua.lar_id
			        and lua.lus_id = lu.lus_id			        
			        <isNotEmpty property="aging" prepend=" and ">
			           (msbi_beg_date between trunc(sysdate-#aging#) and trunc(sysdate))
			        </isNotEmpty>
			        <isEmpty property="aging" prepend=" and ">
				    <isEqual property="jn" compareValue="0">
					    (msbi_beg_date between to_date(#begdate#, 'dd/mm/yyyy') and to_date(#enddate#, 'dd/mm/yyyy'))
				    </isEqual>
				    <isEqual property="jn" compareValue="1">
					    (msbi_end_date between to_date(#begdate#, 'dd/mm/yyyy') and to_date(#enddate#, 'dd/mm/yyyy'))
				    </isEqual>
			        </isEmpty>
			        <isNotEmpty property="cabang">
			        <isNotEqual property="cabang" compareValue="ALL" prepend=" and ">
			            mp.lca_id = #cabang#
			        </isNotEqual>
			        </isNotEmpty>                   
			        <isNotEmpty property="admin">
			        <isNotEqual property="admin" compareValue="ALL" prepend=" and ">
			            lua.lus_id = #admin#
			        </isNotEqual>
			        </isNotEmpty>
			        <isNotEmpty property="lus_id" prepend=" and ">
			            lua.lus_id = #lus_id#
			        </isNotEmpty>
                    and mp.lca_id not in ('09', '58','42','67', '40','66') <!-- EFC dibuka lagi , khusus produk agency -->
			</isEqual>
			<isNotEqual property="jenis" compareValue="list_aging">
				<isNotEqual property="jenis" compareValue="powersave">
					<isNotEqual property="jenis" compareValue="stablelink">
						<isNotEqual property="jenis" compareValue="gagaldebet">
						    select 
						        mb.msbi_beg_date, mb.msbi_end_date, mb.msbi_due_date, mp.mspo_policy_no_format, mp.reg_spaj, mb.msbi_tahun_ke, mb.msbi_premi_ke, 'JATUH TEMPO' ket,
						        lu.lca_id, lu.lus_id, mb.msbi_flag_topup, mp.lca_id cabang
						    from 
						        eka.mst_billing mb, eka.mst_det_billing mdb, eka.mst_policy mp, eka.mst_billing_hcr mbh, eka.mst_insured mi,
						        eka.lst_region lr, eka.lst_user_admin lua, eka.lst_user lu
						    where
						        mb.reg_spaj = mbh.reg_spaj(+)
						        and mb.msbi_tahun_ke = mbh.msbih_tahun_ke(+)
						        and mb.msbi_premi_ke = mbh.msbih_premi_ke(+)
						        and mdb.reg_spaj = mb.reg_spaj
						        and mdb.msbi_tahun_ke = mb.msbi_tahun_ke
						        and mdb.msbi_premi_ke = mb.msbi_premi_ke
						        and mp.reg_spaj = mb.reg_spaj
						        and mp.reg_spaj = mi.reg_spaj
						        and mp.lscb_id not in (0)
						        and mb.lspd_id in (11,12,58)<!-- 56 untuk yg recuring setara 12 --> 
						        <isNotEqual property="jenis" compareValue="jatuhtempo">
						        and mp.lssp_id in (1, 14)<!-- permintaan ZEKE -->
						        </isNotEqual>
						        <isEqual property="jenis" compareValue="jatuhtempo">
						        and mp.lssp_id in (1)<!-- update ibu June 2/13/2017 -->
						        </isEqual>
						        and mb.msbi_premi_ke > 1
						        and mb.lca_id = lr.lca_id
						        and mb.lwk_id = lr.lwk_id
						        and mb.lsrg_id = lr.lsrg_id
						        and lr.lar_id = lua.lar_id
						        and lua.lus_id = lu.lus_id
						        <isNotEmpty property="aging" prepend=" and ">
			                    (msbi_beg_date between trunc(sysdate-#aging#) and trunc(sysdate))
			                    </isNotEmpty>
			                    <isEmpty property="aging" prepend=" and ">
				                <isEqual property="jn" compareValue="0">
					            (msbi_beg_date between to_date(#begdate#, 'dd/mm/yyyy') and to_date(#enddate#, 'dd/mm/yyyy'))
				                </isEqual>
				                <isEqual property="jn" compareValue="1">
					             (msbi_end_date between to_date(#begdate#, 'dd/mm/yyyy') and to_date(#enddate#, 'dd/mm/yyyy'))
				                </isEqual>
			                    </isEmpty>
			                    <isNotEmpty property="cabang">
			                    <isNotEqual property="cabang" compareValue="ALL" prepend=" and ">
			                     mp.lca_id = #cabang#
			                    </isNotEqual>
			                    </isNotEmpty>                   
			                    <isNotEmpty property="admin">
			                    <isNotEqual property="admin" compareValue="ALL" prepend=" and ">
			                      lua.lus_id = #admin#
			                    </isNotEqual>
			                    </isNotEmpty>
			                    <isNotEmpty property="lus_id" prepend=" and ">
			                      lua.lus_id = #lus_id#
			                    </isNotEmpty>
                                and mp.lca_id not in ('09', '58','42','67', '40','66') <!-- EFC dibuka lagi , khusus produk agency -->
							</isNotEqual>
							<isEqual property="jenis" compareValue="all"> UNION </isEqual>
						    <isNotEqual property="jenis" compareValue="jatuhtempo">
						    select 
						        mb.msbi_beg_date, mb.msbi_end_date, mb.msbi_due_date, mp.mspo_policy_no_format, mp.reg_spaj, mb.msbi_tahun_ke, mb.msbi_premi_ke, ljhr.ljhr_keterangan ket,
						        lu.lca_id, lu.lus_id, mb.msbi_flag_topup, mp.lca_id cabang
						    from 
						        eka.mst_billing mb, eka.mst_policy mp, eka.mst_insured mi, eka.mst_account_recur mar, eka.lst_jn_hasil_recur ljhr,
						        (select subs_number spaj, ket3 gagal_ke, ket2 th_ke, ket1 premi_ke, tgl_tagihan, ljhr_id, no_rekening, total_invoice, kode_plan, tgl_terima 
						         from eka.mst_eka_recur 
						         where tgl_terima = (select max (tgl_terima) from eka.mst_eka_recur where vat = 0) and vat = 0) gagal,
						         eka.lst_region lr, eka.lst_user_admin lua, eka.lst_user lu
						    where
						        mp.reg_spaj = mb.reg_spaj
						        and mp.reg_spaj = mi.reg_spaj
						        and mp.reg_spaj = mar.reg_spaj
						        and mb.msbi_premi_ke > 1
						        and gagal.spaj = mb.reg_spaj
						        and gagal.premi_ke = mb.msbi_premi_ke
						        and gagal.th_ke = mb.msbi_tahun_ke
						        and gagal.ljhr_id = ljhr.ljhr_id
						        and mb.lca_id = lr.lca_id
						        and mb.lwk_id = lr.lwk_id
						        and mb.lsrg_id = lr.lsrg_id
						        and lr.lar_id = lua.lar_id
						        and lua.lus_id = lu.lus_id
						        <isNotEmpty property="lca_id">
						        	and mp.lca_id = #lca_id#
						        </isNotEmpty>
						        <isNotEmpty property="aging" prepend=" and ">
			                       (msbi_beg_date between trunc(sysdate-#aging#) and trunc(sysdate))
			                    </isNotEmpty>
			                    <isEmpty property="aging" prepend=" and ">
				                <isEqual property="jn" compareValue="0">
					               (msbi_beg_date between to_date(#begdate#, 'dd/mm/yyyy') and to_date(#enddate#, 'dd/mm/yyyy'))
				                </isEqual>
				                <isEqual property="jn" compareValue="1">
					               (msbi_end_date between to_date(#begdate#, 'dd/mm/yyyy') and to_date(#enddate#, 'dd/mm/yyyy'))
				                </isEqual>
			                    </isEmpty>
			                    <isNotEmpty property="cabang">
			                    <isNotEqual property="cabang" compareValue="ALL" prepend=" and ">
			                        mp.lca_id = #cabang#
			                    </isNotEqual>
			                    </isNotEmpty>                   
			                    <isNotEmpty property="admin">
			                    <isNotEqual property="admin" compareValue="ALL" prepend=" and ">
			                        lua.lus_id = #admin#
			                    </isNotEqual>
			                    </isNotEmpty>
			                    <isNotEmpty property="lus_id" prepend=" and ">
			                        lua.lus_id = #lus_id#
			                   </isNotEmpty>
                               and mp.lca_id not in ('09', '58','42','67', '40','66') <!-- EFC dibuka lagi , khusus produk agency -->
						</isNotEqual>
					</isNotEqual>
				</isNotEqual>
			</isNotEqual>
		) tabel
		<dynamic prepend=" WHERE ">
		    <isNotEqual property="jenis" compareValue="powersave">
				<isNotEqual property="jenis" compareValue="stablelink">
					msbi_flag_topup is null
				</isNotEqual>
			</isNotEqual>
			<isNotNull property="spaj">
				and reg_spaj = #spaj#
			</isNotNull>			                  
			<isEqual property="stfu" compareValue="0" prepend=" and ">
			    exists 
			        (select * from eka.mst_followup msfu where lsfu_id <![CDATA[<>]]> 99
			            and reg_spaj = tabel.reg_spaj and msbi_tahun_ke = tabel.msbi_tahun_ke and msbi_premi_ke = tabel.msbi_premi_ke
			            and msfu_status = 0
			            and msfu.msfu_urut = 
			            (select max(msfu_urut) from eka.mst_followup 
			             where lsfu_id <![CDATA[<>]]> 99 and reg_spaj = msfu.reg_spaj and msbi_tahun_ke = msfu.msbi_tahun_ke and msbi_premi_ke = msfu.msbi_premi_ke))                            
			</isEqual>
			<isEqual property="stfu" compareValue="1" prepend=" and ">
			    exists 
			        (select * from eka.mst_followup msfu where lsfu_id <![CDATA[<>]]> 99
			            and reg_spaj = tabel.reg_spaj and msbi_tahun_ke = tabel.msbi_tahun_ke and msbi_premi_ke = tabel.msbi_premi_ke
			            and msfu_status = 1
			            and msfu.msfu_urut = 
			            (select max(msfu_urut) from eka.mst_followup 
			             where lsfu_id <![CDATA[<>]]> 99 and reg_spaj = msfu.reg_spaj and msbi_tahun_ke = msfu.msbi_tahun_ke and msbi_premi_ke = msfu.msbi_premi_ke))                            
			</isEqual>
			<isEqual property="stfu" compareValue="3" prepend=" and ">
			    not exists 
			        (select * from eka.mst_followup msfu where lsfu_id <![CDATA[<>]]> 99
			            and reg_spaj = tabel.reg_spaj and msbi_tahun_ke = tabel.msbi_tahun_ke and msbi_premi_ke = tabel.msbi_premi_ke
			            and msfu.msfu_urut = 
			            (select max(msfu_urut) from eka.mst_followup 
			             where lsfu_id <![CDATA[<>]]> 99 and reg_spaj = msfu.reg_spaj and msbi_tahun_ke = msfu.msbi_tahun_ke and msbi_premi_ke = msfu.msbi_premi_ke))                            
			</isEqual>			
		</dynamic>
		GROUP BY msbi_beg_date, msbi_end_date, msbi_due_date, mspo_policy_no_format, reg_spaj, msbi_tahun_ke, msbi_premi_ke, ket, msbi_flag_topup
		ORDER BY msbi_beg_date, mspo_policy_no_format
	</select>
	<!--
	<select id="elions.bas.selectFollowupBilling" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Followup">
		  SELECT   to_char(b.msbi_beg_date, 'dd/mm/yyyy') msbi_beg_date, to_char(b.msbi_due_date, 'dd/mm/yyyy') msbi_due_date,
		  		   eka.utils.pemegang(b.reg_spaj) pemegang, 
		  		   a.mspo_policy_no_format, b.reg_spaj, b.msbi_tahun_ke, b.msbi_premi_ke,
		  		   (select count(*) from eka.mst_followup where lsfu_id = 99 and reg_spaj = b.reg_spaj and msbi_tahun_ke = b.msbi_tahun_ke and msbi_premi_ke = b.msbi_premi_ke) jml_fu
		    FROM   eka.mst_policy a,
		           eka.mst_billing b,
		           eka.lst_region c,
		           eka.lst_user_admin d,
		           eka.lst_user e
		   WHERE       a.reg_spaj = b.reg_spaj
		           AND a.lca_id = c.lca_id
		           AND a.lwk_id = c.lwk_id
		           AND a.lsrg_id = c.lsrg_id
		           AND c.lar_id = d.lar_id
		           AND d.lus_id = e.lus_id
		           AND a.LSCB_ID <![CDATA[<>]]> 0
					<isNotEmpty property="aging">
						AND (b.MSBI_BEG_DATE BETWEEN TRUNC(sysdate-#aging#) AND TRUNC(sysdate))
					</isNotEmpty>
					<isEmpty property="aging">
						AND (b.MSBI_BEG_DATE BETWEEN TO_DATE(#begdate#, 'DD/MM/YYYY') and TO_DATE(#enddate#, 'DD/MM/YYYY'))
					</isEmpty>
		           AND b.LSPD_ID IN (11, 12, 36, 56, 57)
		           AND a.lssp_id in (1, 14)
		           AND b.msbi_paid = 0
		           AND b.MSBI_PREMI_KE > 1
					<isNotEmpty property="cabang">
						<isNotEqual property="cabang" compareValue="ALL" prepend=" AND ">
							e.lca_id = #cabang#
						</isNotEqual>
					</isNotEmpty>		           
					<isNotEmpty property="admin">
						<isNotEqual property="admin" compareValue="ALL" prepend=" AND ">
							e.lus_id = #admin#
						</isNotEqual>
					</isNotEmpty>
					<isNotEmpty property="lus_id" prepend=" AND ">
			           e.lus_id = #lus_id#
					</isNotEmpty>		           
					<isEqual property="stfu" compareValue="0">
						AND exists 
							(select * from eka.mst_followup msfu where lsfu_id <![CDATA[<>]]> 99
								and reg_spaj = b.reg_spaj and msbi_tahun_ke = b.msbi_tahun_ke and msbi_premi_ke = b.msbi_premi_ke
								and msfu_status = 0
								and msfu.msfu_urut = 
								(select max(msfu_urut) from eka.mst_followup 
								 where lsfu_id <![CDATA[<>]]> 99 and reg_spaj = msfu.reg_spaj and msbi_tahun_ke = msfu.msbi_tahun_ke and msbi_premi_ke = msfu.msbi_premi_ke))							
					</isEqual>
					<isEqual property="stfu" compareValue="1">
						AND exists 
							(select * from eka.mst_followup msfu where lsfu_id <![CDATA[<>]]> 99
								and reg_spaj = b.reg_spaj and msbi_tahun_ke = b.msbi_tahun_ke and msbi_premi_ke = b.msbi_premi_ke
								and msfu_status = 1
								and msfu.msfu_urut = 
								(select max(msfu_urut) from eka.mst_followup 
								 where lsfu_id <![CDATA[<>]]> 99 and reg_spaj = msfu.reg_spaj and msbi_tahun_ke = msfu.msbi_tahun_ke and msbi_premi_ke = msfu.msbi_premi_ke))							
					</isEqual>
					<isEqual property="stfu" compareValue="3">
						AND not exists 
							(select * from eka.mst_followup msfu where lsfu_id <![CDATA[<>]]> 99
								and reg_spaj = b.reg_spaj and msbi_tahun_ke = b.msbi_tahun_ke and msbi_premi_ke = b.msbi_premi_ke
								and msfu.msfu_urut = 
								(select max(msfu_urut) from eka.mst_followup 
								 where lsfu_id <![CDATA[<>]]> 99 and reg_spaj = msfu.reg_spaj and msbi_tahun_ke = msfu.msbi_tahun_ke and msbi_premi_ke = msfu.msbi_premi_ke))							
					</isEqual>
		GROUP BY b.msbi_beg_date, b.msbi_due_date, a.mspo_policy_no_format, b.reg_spaj, b.msbi_tahun_ke, b.msbi_premi_ke				
		ORDER BY   b.msbi_beg_date, a.mspo_policy_no_format	
	</select>
	-->
	
	<select id="elions.bas.selectFollowupBillingVC" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Followup">
		SELECT distinct 
		    to_char (x.msbi_beg_date, 'dd/mm/yyyy') msbi_beg_date,
		    to_char (x.msbi_end_date, 'dd/mm/yyyy') msbi_end_date, to_char (x.msbi_due_date, 'dd/mm/yyyy') msbi_due_date,        
		    eka.utils.pemegang (x.reg_spaj) pemegang, x.mspo_policy_no_format, x.reg_spaj, x.msbi_tahun_ke, x.msbi_premi_ke, x.ket,
		    (select count(*)
		        from eka.mst_followup
		        where lsfu_id = 99
		          and reg_spaj = x.reg_spaj
		          and msbi_tahun_ke = x.msbi_tahun_ke
		          and msbi_premi_ke = x.msbi_premi_ke) jml_fu,       
		    (select lsfu_id
		        from eka.mst_followup fol
		        where reg_spaj = x.reg_spaj
		          and msbi_tahun_ke = x.msbi_tahun_ke
		          and msbi_premi_ke = x.msbi_premi_ke
		          and msfu_urut = (select max(msfu_urut)
		                            from eka.mst_followup
		                            where reg_spaj = fol.reg_spaj
		                              and msbi_tahun_ke = fol.msbi_tahun_ke
		                              and msbi_premi_ke = fol.msbi_premi_ke)) lsfu_id, x.msbi_flag_topup
		FROM 
		    (SELECT 
		        A.REG_SPAJ, A.MSPO_POLICY_NO, A.MSPO_POLICY_NO_FORMAT, H.MSBI_END_DATE, H.MSBI_BEG_DATE, H.MSBI_DUE_DATE ,
		        H.MSBI_PREMI_KE, H.MSBI_TAHUN_KE, H.MSBI_FLAG_TOPUP, 'VISA CAMP' KET,
		        ((ADD_MONTHS(B.MSTE_BEG_DATE, 12 * A.MSPO_PAY_PERIOD) - to_date(#begdate#,'dd/MM/yyyy')) / 365) SISA_LAMA_BAYAR
		    FROM 
		        EKA.MST_POLICY A, EKA.MST_INSURED B, EKA.MST_ACCOUNT_RECUR C, EKA.LST_BANK D, EKA.LST_BANK_PUSAT E, EKA.LST_PAY_MODE F, EKA.MST_CLIENT_NEW G, EKA.MST_BILLING H,
		        EKA.LST_CABANG I, EKA.LST_REGION J, EKA.MST_PRODUCT_INSURED K, EKA.LST_BISNIS L
		    WHERE  
		        A.REG_SPAJ = B.REG_SPAJ
		        AND A.REG_SPAJ = C.REG_SPAJ(+)
		        AND C.LBN_ID = D.LBN_ID
		        AND D.LSBP_ID = E.LSBP_ID
		        AND A.LSCB_ID = F.LSCB_ID
		        AND A.MSPO_POLICY_HOLDER = G.MCL_ID
		        AND A.REG_SPAJ = H.REG_SPAJ
		        AND A.LCA_ID = I.LCA_ID
		        AND A.LCA_ID = J.LCA_ID
		        AND A.LWK_ID = J.LWK_ID
		        AND A.LSRG_ID = J.LSRG_ID
		        AND K.LSBS_ID = L.LSBS_ID
		        AND A.REG_SPAJ = K.REG_SPAJ
		        AND K.LSBS_ID <![CDATA[<]]> 300
		        AND A.LSSP_ID = 1
		        AND A.LSTB_ID = 1
		        AND A.LSCB_ID IN (1, 2, 3)
		        AND C.MAR_ACTIVE = 1
		        AND A.LKU_ID = '01'
		        AND (NVL(B.MSTE_FLAG_CC, 0) IN (0,1) OR (NVL(B.MSTE_FLAG_CC, 0) = 2 AND E.LSBP_ID <![CDATA[<>]]> 156))
		        AND B.MSTE_END_DATE <![CDATA[>]]> ADD_MONTHS(to_date(#begdate#,'dd/MM/yyyy'), 12)
		        AND (EKA.PACPOLIS.GET_PREMI_TOTAL (A.REG_SPAJ) * F.LSCB_KALI) <![CDATA[>=]]> 1200000
		        AND NOT EXISTS (SELECT X.REG_SPAJ
		                            FROM EKA.MST_VISA_CAMP X
		                            WHERE   X.REG_SPAJ = A.REG_SPAJ )
		        AND H.MSBI_PREMI_KE = (SELECT MAX(MSBI_PREMI_KE) 
		                                FROM EKA.MST_BILLING 
		                                WHERE REG_SPAJ = H.REG_SPAJ )) X
		WHERE 
		    X.SISA_LAMA_BAYAR >= 1
		    <isNotNull property="spaj">
				and x.reg_spaj = #spaj#
			</isNotNull>
		GROUP BY 
		    x.msbi_beg_date,
		    x.msbi_end_date, x.msbi_due_date, x.mspo_policy_no_format, x.reg_spaj,
		    x.msbi_tahun_ke, x.msbi_premi_ke, x.ket, x.msbi_flag_topup
		ORDER BY 
		    msbi_end_date, mspo_policy_no_format
	</select>
		
	<select id="elions.bas.selectDetailPolisFollowupBilling" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Followup">
          SELECT   eka.utils.pemegang (a.reg_spaj) pemegang,
                   d.msap_address alamat1,
                   d.kota||' '||d.msap_zip_code alamat2,
                   (d.msap_area_code1 || ' ' || d.msap_phone1) telp1,
                   (d.msap_area_code2 || ' ' || d.msap_phone2) telp2,
                   nvl(no_hp, ' ') no_hp,
                   nvl(no_hp2, ' ') no_hp2,
                   TO_CHAR (b.msbi_due_date, 'dd/mm/yyyy') tgl_jt,
                   eka.utils.kurs_simbol (a.lku_id) kurs,
                   SUM (c.msdb_premium) premi,
                   nvl(sum((select
					        sum(y.msdb_premium)topup
					    from
					        eka.mst_billing x,
					        eka.mst_det_billing y
					    where
					        x.reg_spaj = y.reg_spaj
					        and x.msbi_tahun_ke = y.msbi_tahun_ke
					        and x.msbi_premi_ke = y.msbi_premi_ke
					        and x.reg_spaj = a.reg_spaj
					        and x.msbi_tahun_ke = b.msbi_tahun_ke
					        and x.msbi_premi_ke = b.msbi_premi_ke+1
					        and x.msbi_flag_topup = 2)),0)topup,
                   eka.utils.tertanggung(a.reg_spaj) tertanggung,
                   eka.utils.det_produk(e.lsbs_id, e.lsdbs_number) produk,
                   TO_CHAR(f.mste_beg_date, 'dd/mm/yyyy') beg_date, 
                   TO_CHAR(f.mste_end_date, 'dd/mm/yyyy') end_date,
                   TO_CHAR(b.msbi_beg_date, 'dd/mm/yyyy') msbi_beg_date, 
                   TO_CHAR(b.msbi_end_date, 'dd/mm/yyyy') msbi_end_date,
                   eka.utils.pay_mode(a.lscb_id) pay_mode,
                   f.mste_no_vacc vacc,
                   a.mspo_pay_period pay_period,
                   e.mspr_tsi tsi,
                   d.e_mail email,
				   (case when g.mspe_sex = 0 then 'WANITA' 
					     when g.mspe_sex = 1 then 'PRIA' else '' end)jenkel,
			       (case when g.mspe_sex = 0 then 'IBU' 
                         when g.mspe_sex = 1 then 'BAPAK' else '' end)title,
                   (case when (select mspe_sex from eka.mst_client_new where mcl_id = f.mste_insured) = 0 then 'IBU' 
                         when (select mspe_sex from eka.mst_client_new where mcl_id = f.mste_insured) = 1 then 'BAPAK' else '' end)title_tertanggung,
                   h.lca_id, h.lca_nama,
                   i.lwk_id, i.lwk_nama,
                   j.lsrg_id, j.lsrg_nama,
         		   k.lssp_status
            FROM   eka.mst_policy a,
                   eka.mst_billing b,
                   eka.mst_det_billing c,
                   eka.mst_address_billing d,
                   eka.mst_product_insured e,
                   eka.mst_insured f,
                   eka.mst_client_new g,
                   eka.lst_cabang h,
                   eka.lst_wakil i,
                   eka.lst_region j,
        		   EKA.LST_POLICY_STATUS k
           WHERE       a.reg_spaj = b.reg_spaj
                   AND b.reg_spaj = c.reg_spaj
                   AND b.msbi_tahun_ke = c.msbi_tahun_ke
                   AND b.msbi_premi_ke = c.msbi_premi_ke
                   AND a.reg_spaj = d.reg_spaj
                   AND a.reg_spaj = e.reg_spaj
                   AND a.reg_spaj = f.reg_spaj
                   AND a.mspo_policy_holder = g.mcl_id
                   and a.lca_id = h.lca_id
                   and a.lca_id = i.lca_id
                   and a.lwk_id = i.lwk_id
                   and a.lca_id = j.lca_id
                   and a.lwk_id = j.lwk_id
                   and a.lsrg_id = j.lsrg_id
                   and a.lssp_id = k.lssp_id
                   AND e.lsbs_id <![CDATA[<]]> 300
		           AND a.reg_spaj = rpad(replace(#reg_spaj# ,'.'),11,' ')
		           AND b.msbi_tahun_ke = #tahun_ke#
		           AND b.msbi_premi_ke = #premi_ke#
		           AND a.lssp_id in (1, 14)
                  <!--  AND b.msbi_due_date >= TRUNC (SYSDATE) -->
                  <!-- sementara -->
                   <!-- AND a.LSCB_ID <![CDATA[<>]]> 0
                   AND b.LSPD_ID IN (11, 12, 36, 56, 57)
		           AND b.msbi_paid = 0 -->
                   AND b.MSBI_PREMI_KE > 1
        GROUP BY   a.reg_spaj, b.msbi_due_date,
                   a.lku_id, d.msap_area_code1, d.msap_phone1,
                   d.msap_area_code2, d.msap_phone2,
                   d.no_hp, d.no_hp2,
                   e.lsbs_id, e.lsdbs_number,
                   f.mste_beg_date, f.mste_end_date,
                   a.lscb_id, f.mste_no_vacc,
                   a.mspo_pay_period, e.mspr_tsi,
                   b.msbi_beg_date, b.msbi_end_date, d.e_mail, g.mspe_sex, 
                   f.mste_insured, d.msap_address, d.kota, d.msap_zip_code, h.lca_id, h.lca_nama, i.lwk_id, i.lwk_nama,
                   j.lsrg_id, j.lsrg_nama, k.lssp_status
	</select>
	
	<select id="elions.bas.selectDetailPaymentFollowupBilling" parameterClass="string" resultClass="com.ekalife.elions.model.Followup">
		select 
		    b.msbi_tahun_ke tahun_ke, b.msbi_premi_ke premi_ke, 
		    to_char(c.msbi_beg_date, 'dd/mm/yyyy') beg_date, 
		    to_char(c.msbi_end_date, 'dd/mm/yyyy') end_date, sum(d.msdb_premium) premi,
		    to_char(a.mspa_date_book, 'dd/mm/yyyy') tgl_rk, 
		    to_char(a.mspa_pay_date, 'dd/mm/yyyy') tgl_payment, a.mspa_payment paid,
		    decode(c.msbi_paid, 1, 'Paid', 'Outstanding') status_paid
		from 
		    eka.mst_payment a, eka.mst_tag_payment b, eka.mst_billing c, eka.mst_det_billing d
		where 
		    a.reg_spaj = rpad(replace(#value# ,'.'),11,' ')
		    and a.mspa_payment_id = b.mspa_payment_id
		    and b.reg_spaj = c.reg_spaj
		    and b.msbi_tahun_ke = c.msbi_tahun_ke
		    and b.msbi_premi_ke = c.msbi_premi_ke
		    and c.reg_spaj = d.reg_spaj
		    and c.msbi_tahun_ke = d.msbi_tahun_ke
		    and c.msbi_premi_ke = d.msbi_premi_ke
		group by
		    b.msbi_tahun_ke, b.msbi_premi_ke, c.msbi_beg_date, c.msbi_end_date,
		    a.mspa_date_book, a.mspa_pay_date, a.mspa_payment, c.msbi_paid
		order by b.msbi_tahun_ke, b.msbi_premi_ke	
	</select>
	
	<select id="elions.bas.selectLstFollowUp" parameterClass="int" resultClass="com.ekalife.elions.model.Followup">
		SELECT	lsfu_id, lsfu_desc, lsfu_email, lsfu_status
		  FROM	eka.lst_followup
		 WHERE	lsfu_id = #lsfu_id#
	</select>
	
	<select id="elions.bas.selectHistoryFollowupBilling" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Followup">
		  SELECT   m.msfu_urut,
		           TO_CHAR (m.msfu_create_date, 'dd/mm/yyyy') create_date,
		           eka.utils.user_input (m.lus_id) user_name,
		           decode(m.msfu_status, 0, 'Follow Up', 1, 'Closed', '-') status,
		           m.msfu_status,
		           l.lsfu_desc,
		           m.msfu_ket,
		           l.lsfu_id
		    FROM   eka.mst_followup m, eka.lst_followup l
		   WHERE   m.lsfu_id = l.lsfu_id
	   		 AND   m.reg_spaj = rpad(replace(#reg_spaj# ,'.'),11,' ')
 	   		 AND   m.msbi_tahun_ke = #tahun_ke# 
	 	   	 AND   m.msbi_premi_ke = #premi_ke#
		ORDER BY   m.msfu_urut
	</select>

	<select id="elions.bas.selectEmailAdminCabangFollowupBilling" parameterClass="java.util.HashMap" resultClass="string">
		select lus_email 
		from eka.lst_user 
		where lus_bas = 1 and lus_active = 1 and lus_email is not null
		<isNotEmpty property="cabang">
			<isNotEqual property="cabang" compareValue="ALL" prepend=" AND ">
				lca_id = #cabang#
			</isNotEqual>
		</isNotEmpty>		           
		<isNotEmpty property="admin">
			<isNotEqual property="admin" compareValue="ALL" prepend=" AND ">
				lus_id = #admin#
			</isNotEqual>
		</isNotEmpty>
	</select>

	<select id="elions.bas.selectReportFollowupBilling" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Followup">
	select distinct * from(
		select 
		    to_char(b.msbi_beg_date, 'dd/mm/yyyy') msbi_beg_date, 
		    to_char(b.msbi_end_date, 'dd/mm/yyyy') msbi_end_date,
		    to_char(b.msbi_due_date, 'dd/mm/yyyy') msbi_due_date,
		    c.mspo_policy_no_format, eka.utils.pemegang(a.reg_spaj) pemegang, a.msfu_urut, 
		    d.lsfu_desc, eka.utils.user_input(a.lus_id) user_name, a.msfu_ket, a.msfu_status, 
		    decode(a.msfu_status, 0, 'Follow Up', 1, 'Closed', '-') status,
		    to_char(a.msfu_create_date, 'dd/mm/yyyy') create_date,
		    a.reg_spaj, a.msbi_tahun_ke, a.msbi_premi_ke, a.msfu_attachment,
	        H.MSPR_BEG_DATE beg_date,
	        H.MSPR_END_DATE end_date,
	        EKA.UTILS.pay_mode(C.LSCB_ID) cara_bayar,
	        EKA.UTILS.nama_Agen(I.MSAG_ID) agen,
	        EKA.UTILS.region(J.LCA_ID, J.LWK_ID, J.LSRG_ID) agency,
	        '' jumlah_premi,
	        (select decode(mar_jenis,1,'CC',2,'Tabungan','') from eka.mst_account_recur where reg_spaj = a.reg_Spaj) jenis_tabungan
		from 
		    eka.mst_followup a, eka.mst_billing b, eka.mst_policy c, eka.lst_followup d, eka.lst_region e, eka.lst_user_admin f, eka.lst_user g,
		    EKA.MST_PRODUCT_INSURED h, eka.mst_agent_prod i, eka.mst_agent j
		where 
		    a.reg_spaj = b.reg_spaj
		    and a.msbi_tahun_ke = b.msbi_tahun_ke
		    and a.msbi_premi_ke = b.msbi_premi_ke
		    and a.reg_spaj = c.reg_spaj
		    and a.lsfu_id = d.lsfu_id
		    and c.lca_id = e.lca_id
		    and c.lwk_id = e.lwk_id
		    and c.lsrg_id = e.lsrg_id
		    and e.lar_id = f.lar_id
		    and f.lus_id = g.lus_id
		    and a.reg_Spaj = h.reg_spaj
		    and a.reg_Spaj = i.reg_spaj
		    and H.LSBS_ID <![CDATA[<]]> 300
		    and I.LSLE_ID = 4
		    and i.msag_id = J.msag_id
		    <isEqual property="jn_tgl" compareValue="0">
		    	and (b.MSBI_BEG_DATE BETWEEN TO_DATE(#begdate#, 'DD/MM/YYYY') and TO_DATE(#enddate#, 'DD/MM/YYYY'))
		    </isEqual>
		    <isEqual property="jn_tgl" compareValue="1">
		    	and (a.MSFU_CREATE_DATE BETWEEN TO_DATE(#begdate# || '00:00:00', 'DD/MM/YYYY hh24:mi:ss') and TO_DATE(#enddate# || '23:59:59', 'DD/MM/YYYY hh24:mi:ss'))
		    </isEqual>
		     <isEqual property="jn_tgl" compareValue="2">
		    	and (b.MSBI_END_DATE BETWEEN TO_DATE(#begdate#, 'DD/MM/YYYY') and TO_DATE(#enddate#, 'DD/MM/YYYY'))
		    </isEqual>
			<isNotEmpty property="cabang">
				<isNotEqual property="cabang" compareValue="ALL" prepend=" AND ">
					g.lca_id = #cabang#
				</isNotEqual>
			</isNotEmpty>		           
			<isNotEmpty property="admin">
				<isNotEqual property="admin" compareValue="ALL" prepend=" AND ">
					g.lus_id = #admin#
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="kat">
				<isNotEqual property="kat" compareValue="ALL" prepend=" AND ">
					a.lsfu_id = #kat#
				</isNotEqual>
			</isNotEmpty>		           
			<isNotEmpty property="stfu">
				<isNotEqual property="stfu" compareValue="2" prepend=" AND ">
					a.msfu_status = #stfu#
				</isNotEqual>
			</isNotEmpty>
		order by 
		    b.msbi_beg_date, a.reg_spaj, a.msfu_urut asc	 
	)report	
		order by 
		    report.msbi_beg_date, report.reg_spaj, report.msfu_urut asc	
	</select>
	<!--  0 = case followup, 1 = case closed, 2 = all case, 3 = outstanding -->
	
	<select id="elions.bas.selectReportFollowupBillingPerUser" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Followup">
	select distinct * from(
		select 
		    to_char(b.msbi_beg_date, 'dd/mm/yyyy') msbi_beg_date, 
		    to_char(b.msbi_end_date, 'dd/mm/yyyy') msbi_end_date,
		    to_char(b.msbi_due_date, 'dd/mm/yyyy') msbi_due_date,
		    c.mspo_policy_no_format, eka.utils.pemegang(a.reg_spaj) pemegang, a.msfu_urut, 
		    d.lsfu_desc, eka.utils.user_input(a.lus_id) user_name, a.msfu_ket, a.msfu_status, 
		    decode(a.msfu_status, 0, 'Follow Up', 1, 'Closed', '-') status,
		    to_char(a.msfu_create_date, 'dd/mm/yyyy') create_date,
		    a.reg_spaj, a.msbi_tahun_ke, a.msbi_premi_ke, a.msfu_attachment,
	        EKA.UTILS.pay_mode(C.LSCB_ID) cara_bayar,
	        EKA.UTILS.nama_Agen(h.MSAG_ID) agen,
	        EKA.UTILS.region(i.LCA_ID, i.LWK_ID, i.LSRG_ID) agency,
	        (select sum(msbi_remain) from eka.mst_billing where a.reg_Spaj = reg_Spaj and msbI_beg_date = b.msbi_beg_date)  jumlah_premi,
	        (select decode(mar_jenis,1,'CC',2,'Tabungan','') from eka.mst_account_recur where reg_spaj = a.reg_Spaj) jenis_tabungan
		from 
		    eka.mst_followup a, eka.mst_billing b, eka.mst_policy c, eka.lst_followup d, eka.lst_region e, eka.lst_user_admin f, eka.lst_user g,
		    eka.mst_agent_prod h, eka.mst_agent i
		where 
		    a.reg_spaj = b.reg_spaj
		    and a.msbi_tahun_ke = b.msbi_tahun_ke
		    and a.msbi_premi_ke = b.msbi_premi_ke
		    and a.reg_spaj = c.reg_spaj
		    and a.lsfu_id = d.lsfu_id
		    and c.lca_id = e.lca_id
		    and c.lwk_id = e.lwk_id
		    and c.lsrg_id = e.lsrg_id
		    and e.lar_id = f.lar_id
		    and f.lus_id = g.lus_id
   		    and a.reg_Spaj = h.reg_spaj
		    and h.LSLE_ID = 4
		    and h.msag_id = i.msag_id
		    <isEqual property="jn_tgl" compareValue="0">
		    	and (b.MSBI_BEG_DATE BETWEEN TO_DATE(#begdate#, 'DD/MM/YYYY') and TO_DATE(#enddate#, 'DD/MM/YYYY'))
		    </isEqual>
		    <isEqual property="jn_tgl" compareValue="1">
		    	and (a.MSFU_CREATE_DATE BETWEEN TO_DATE(#begdate#|| ' 00:00:00', 'DD/MM/YYYY hh24:mi:ss') and TO_DATE(#enddate# || ' 23:59:59', 'DD/MM/YYYY hh24:mi:ss'))
		    </isEqual>
		    <isEqual property="jn_tgl" compareValue="2">
		    	and (b.MSBI_END_DATE BETWEEN TO_DATE(#begdate#, 'DD/MM/YYYY') and TO_DATE(#enddate#, 'DD/MM/YYYY'))
		    </isEqual>
			<isNotEmpty property="cabang">
				<isNotEqual property="cabang" compareValue="ALL" prepend=" AND ">
					g.lca_id = #cabang#
				</isNotEqual>
			</isNotEmpty>		           
			<isNotEmpty>
				<isEqual property="rep" compareValue="0">
					and a.lus_id = #lus_id#
				</isEqual>
				<isEqual property="rep" compareValue="1">
					<isNotEmpty property="admin">
						<isNotEqual property="admin" compareValue="ALL" prepend=" AND ">
							a.lus_id = #admin#
						</isNotEqual>
					</isNotEmpty>
				</isEqual>
				<isEqual property="rep" compareValue="2">
					<isNotEmpty property="admin">
						<isEqual property="admin" compareValue="ALL" prepend=" AND ">
							a.lus_id in (2475,4180,690,3041)
						</isEqual>
						<isNotEqual property="admin" compareValue="ALL" prepend=" AND ">
							a.lus_id = #admin#
						</isNotEqual>
					</isNotEmpty>
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="kat">
				<isNotEqual property="kat" compareValue="ALL" prepend=" AND ">
					a.lsfu_id = #kat#
				</isNotEqual>
			</isNotEmpty>		           
			<isNotEmpty property="stfu">
				<isNotEqual property="stfu" compareValue="2" prepend=" AND ">
					a.msfu_status = #stfu#
				</isNotEqual>
			</isNotEmpty>
		order by 
		    b.msbi_beg_date, a.reg_spaj, a.msfu_urut asc	 
	)report
		order by 
		    report.msbi_beg_date, report.reg_spaj, report.msfu_urut asc	
	</select>

	<select id="elions.bas.selectAttachmentFollowupBilling" parameterClass="java.util.HashMap" resultClass="string">
		select msfu_attachment from eka.mst_followup 
		where reg_spaj = rpad(replace(#reg_spaj# ,'.'),11,' ') and msbi_tahun_ke = #msbi_tahun_ke# and msbi_premi_ke = #msbi_premi_ke#
	</select>

	<select id="elions.bas.selectReportJTPowersave" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
		    eka.utils.cabang(b.lca_id) cabang, eka.utils.kanwil_nama(b.lca_id, b.lwk_id) wakil, d.lsrg_nama region,
		    c.msag_id, eka.utils.agen(c.msag_id) agen, b.mspo_policy_no_format polis, eka.utils.pemegang(b.reg_spaj) pemegang, 
		    a.mps_deposit_date bdate, a.mpr_mature_date edate, a.mpr_jangka_invest mgi, decode(a.mpr_jns_ro, 1, 'RO All', 2, 'RO Premi', 3, 'Autobreak', '-') ro, eka.utils.kurs_simbol(b.lku_id) kurs,
		    (select lsfu_desc from eka.lst_followup where lsfu_id = f.lsfu_id)kategori,f.msfu_ket ket
		from 
		    eka.mst_powersave_ro a, eka.mst_policy b, eka.mst_agent_prod c, eka.lst_region d, eka.lst_user_admin e,
		    (select * from eka.mst_followup  where lsfu_id in (0,15,16)) f
		where
		    a.mps_kode in (2,3,5)
		    and (a.mpr_mature_date between TO_DATE(#bdate#, 'dd/mm/yyyy') and TO_DATE(#edate#, 'dd/mm/yyyy'))
		    and a.reg_spaj = b.reg_spaj
			<isNotEmpty property="lca">
				<isNotEqual property="lca" compareValue="ALL" prepend=" AND ">
					b.lca_id = #lca#
				</isNotEqual>
			</isNotEmpty>		           		    
			<isNotEmpty property="lwk">
				<isNotEqual property="lwk" compareValue="ALL" prepend=" AND ">
					b.lwk_id = #lwk#
				</isNotEqual>
			</isNotEmpty>		           		    
			<isNotEmpty property="lsrg">
				<isNotEqual property="lsrg" compareValue="ALL" prepend=" AND ">
					b.lsrg_id = #lsrg#
				</isNotEqual>
			</isNotEmpty>		           		    
		    and b.lspd_id <![CDATA[<>]]> 95
		    and b.lssp_id = 1
		    and b.reg_spaj = c.reg_spaj
		    and c.lsle_id = 4
		    and b.lca_id = d.lca_id
		    and b.lwk_id = d.lwk_id
		    and b.lsrg_id = d.lsrg_id
		    and d.lar_id = e.lar_id
		    and a.reg_spaj = f.reg_spaj(+)
		    <!-- and (f.msfu_create_date(+) between TO_DATE(#bdate#, 'dd/mm/yyyy') and TO_DATE(#edate#, 'dd/mm/yyyy')) -->
		    <isNotEmpty property="kategori">
		    	<isEqual property="kategori" compareValue="butuh_dana">
		    		and f.lsfu_id = 15
		    	</isEqual>
		    	<isEqual property="kategori" compareValue="bunga">
		    		and f.lsfu_id = 16
		    	</isEqual>
		    	<isEqual property="kategori" compareValue="lain-lain">
		    		and f.lsfu_id = 0
		    	</isEqual>
		    </isNotEmpty>
		    and e.lus_id = #lus_id#
		order by 1, 2, 3, 4, 5	
	</select>
	
	<select id="elions.bas.selectreportPrintPolisCabang" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct
		    b.reg_spaj, eka.utils.pemegang (b.reg_spaj) pemegang, b.MSPO_POLICY_NO polis, eka.f_lsdbs(h.reg_spaj, h.lsbs_id, h.lsdbs_number) product,
    		g.mspe_email, b.MSPO_DATE_PRINT tgl_print, a.mste_tgl_kirim_polis tgl_kirim
		from 
		    eka.mst_insured a, 
		     eka.mst_policy b, 
		     eka.mst_position_spaj c, 
		     eka.lst_user d,
		     eka.lst_cabang e, eka.mst_client_new g, 
		     eka.mst_product_insured h,
		     eka.lst_det_bisnis i,(SELECT   reg_spaj, MAX (msps_date) msps_date
		            FROM eka.mst_position_spaj
		           WHERE lspd_id <![CDATA[<>]]> 95 and msps_desc like 'PRINT%'
		        GROUP BY reg_spaj) j,
		     eka.lst_region k, eka.lst_user_admin l
		where
		     c.msps_desc like 'PRINT%'
		    and a.reg_spaj = b.reg_spaj
		    and a.reg_spaj = c.reg_spaj
		    and c.lus_id = d.lus_id
		    and b.lca_id = e.lca_id
		    and b.lca_id = e.lca_id
		    and b.mspo_policy_holder = g.mcl_id
		    and a.reg_spaj = h.reg_spaj 
		    and h.lsbs_id = i.lsbs_id 
		    and h.lsdbs_number=i.lsdbs_number
		    and h.lsbs_id <![CDATA[<]]> 300
		    and a.reg_spaj = j.reg_spaj(+)
		    and b.lca_id = k.lca_id
	        and b.lwk_id = k.lwk_id
	        and b.lsrg_id = k.lsrg_id
	        and k.lar_id = l.lar_id
	        and l.lus_id = #lus_id#
			<isNotEmpty property="lca">
				<isNotEqual property="lca" compareValue="ALL" prepend=" AND ">
					b.lca_id = #lca#
				</isNotEqual>
			</isNotEmpty>		           		    
			<isNotEmpty property="lwk">
				<isNotEqual property="lwk" compareValue="ALL" prepend=" AND ">
					b.lwk_id = #lwk#
				</isNotEqual>
			</isNotEmpty>		           		    
			<isNotEmpty property="lsrg">
				<isNotEqual property="lsrg" compareValue="ALL" prepend=" AND ">
					b.lsrg_id = #lsrg#
				</isNotEqual>
			</isNotEmpty>
			and (b.MSPO_DATE_PRINT between TO_DATE(#bdate#, 'dd/mm/yyyy') and TO_DATE(#edate#, 'dd/mm/yyyy'))
		order by 1, 2, 3, 4, 5	
	</select>
	
	<select id="elions.bas.selectreportSimascardCabang" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
		    EKA.UTILS.PEMEGANG (b.reg_spaj) Pemegang, EKA.UTILS.TERTANGGUNG (b.reg_spaj) Tertanggung, eka.f_lsdbs(e.reg_spaj, e.lsbs_id, e.lsdbs_number) Product, e.mspr_tsi UP, e.mspr_premium Premi,
	        a.no_blanko No_SimasCard, b.no_kartu Status_Pemakainan, 
	        EKA.UTILS.USER_INPUT(a.mssd_lus_id) User_Request, EKA.UTILS.USER_INPUT(b.lus_id) User_Pakai
		from 
		    eka.mst_spaj_det a,
			eka.mst_simcard b,
			eka.mst_policy c,
			eka.mst_insured d,
			eka.mst_product_insured e,
			eka.lst_det_bisnis f,
			eka.lst_user g,
			eka.lst_user h,
			eka.lst_pertgjwbn i,
			eka.lst_region j, eka.lst_user_admin k
		where
			a.no_blanko = b.no_kartu(+)
			and b.reg_spaj = c.reg_spaj(+)
			and b.reg_spaj = d.reg_spaj(+)
			and b.reg_spaj = e.reg_spaj(+)
			and e.lsbs_id = f.lsbs_id(+)
			and e.lsdbs_number = f.lsdbs_number(+)
			and a.mssd_lus_id = g.lus_id(+)
			and b.lus_id = h.lus_id(+)
			and a.lsp_id = i.lsp_id
			and e.lsbs_id(+)<![CDATA[<]]>300
			and a.lsjs_id = 21
			and c.lspd_id(+) <![CDATA[<>]]>95
			and c.lca_id = j.lca_id
	        and c.lwk_id = j.lwk_id
	        and c.lsrg_id = j.lsrg_id
	        and j.lar_id = k.lar_id
	        and k.lus_id = #lus_id#
			<isNotEmpty property="lca">
				<isNotEqual property="lca" compareValue="ALL" prepend=" AND ">
					c.lca_id = #lca#
				</isNotEqual>
			</isNotEmpty>		           		    
			<isNotEmpty property="lwk">
				<isNotEqual property="lwk" compareValue="ALL" prepend=" AND ">
					c.lwk_id = #lwk#
				</isNotEqual>
			</isNotEmpty>		           		    
			<isNotEmpty property="lsrg">
				<isNotEqual property="lsrg" compareValue="ALL" prepend=" AND ">
					c.lsrg_id = #lsrg#
				</isNotEqual>
			</isNotEmpty>
			and (b.tgl_input between TO_DATE(#bdate#, 'dd/mm/yyyy') and TO_DATE(#edate#, 'dd/mm/yyyy'))
		order by 1, 2, 3, 4, 5	
	</select>
	
	<select id="elions.bas.selectreportSummaryInput" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
		    b.REG_SPAJ, TO_CHAR (b.MSPO_INPUT_DATE, 'dd/mm/yyyy') tglinput, b.MSPO_NO_BLANKO, b.MSPO_INPUT_DATE,
		    c.MSTE_BEG_DATE, c.MSTE_END_DATE, c.MSTE_FLAG_UPLOAD_SCAN scan,
		    d.LKU_ID, d.MSPR_TSI, d.MSPR_PREMIUM,
		    e.MSAG_ID,
		    g.LWK_NAMA, g.LWK_ID, g.LCA_ID,
		    h.LSBS_ID, eka.f_lsdbs(b.reg_spaj, d.lsbs_id, d.lsdbs_number) lsdbs_name,
		    TRIM (eka.utils.agen (f.msag_id)) AS NAMA_AGENT, TRIM (eka.utils.pemegang (b.reg_spaj)) AS NAMA_PEMPOLIS, TRIM (eka.utils.tertanggung (b.reg_spaj)) AS NAMA_TERTANGGUNG,
		    i.LUS_LOGIN_NAME, i.LUS_ID,
		    j.MSAP_ADDRESS,
		    a.MU_JLH_PREMI, a.LJI_ID, a.MDU_PERSEN, a.MU_JLH_TU, a.LJI_INVEST, a.jumlah_invest, a.MU_PERIODIC_TU,
		    eka.utils.cabang (k.lca_id) cabang, eka.utils.kanwil_nama (k.lca_id, k.lwk_id) kanwil, k.lsrg_nama region
		FROM 
		    EKA.MST_POLICY b, EKA.MST_INSURED c, EKA.MST_PRODUCT_INSURED d, EKA.MST_AGENT_PROD e, EKA.MST_AGENT f, EKA.LST_WAKIL g,
		    EKA.LST_DET_BISNIS h, EKA.LST_USER i, EKA.MST_ADDRESS_BILLING j, eka.lst_region k, eka.lst_user_admin l,
		    ( SELECT 
		            aa.REG_SPAJ, bb.MU_JLH_PREMI, cc.LJI_ID, cc.MDU_PERSEN, bb.MU_JLH_TU, dd.LJI_INVEST, COUNT (cc.LJI_ID) jumlah_invest, bb.MU_PERIODIC_TU
		        FROM 
		            EKA.MST_POLICY aa, EKA.MST_ULINK bb, EKA.MST_DET_ULINK cc, EKA.LST_JENIS_INVEST dd
		        WHERE 
		            bb.REG_SPAJ = aa.REG_SPAJ AND cc.REG_SPAJ = bb.REG_SPAJ AND cc.MU_KE = bb.MU_KE AND bb.MU_KE = 1 AND dd.LJI_ID = cc.LJI_ID
		        GROUP BY 
		            aa.REG_SPAJ, bb.MU_JLH_PREMI, cc.LJI_ID, cc.MDU_PERSEN, bb.MU_JLH_TU, dd.LJI_INVEST, bb.MU_PERIODIC_TU
		        ORDER BY 
		            cc.LJI_ID ) a
		WHERE
		    b.REG_SPAJ = c.REG_SPAJ
		    AND c.REG_SPAJ = d.REG_SPAJ
		    AND b.REG_SPAJ = e.REG_SPAJ
		    AND d.LSBS_ID = h.LSBS_ID
		    AND d.LSDBS_NUMBER = h.LSDBS_NUMBER
		    AND e.MSAG_ID = f.MSAG_ID
		    AND b.LCA_ID = g.LCA_ID
		    AND b.LWK_ID = g.LWK_ID
		    AND e.LSLE_ID = 4
		    AND b.REG_SPAJ = j.REG_SPAJ
		    AND b.LUS_ID = i.LUS_ID
		    AND b.LSTB_ID = 1
			AND h.LSBS_ID <![CDATA[<]]>300
		    AND a.reg_spaj(+) = b.REG_SPAJ
		    AND NVL (c.MSTE_FLAG_GUTHRIE, 0) = 0
		    AND b.lca_id = k.lca_id
		    AND b.lwk_id = k.lwk_id
		    AND b.lsrg_id = k.lsrg_id
		    AND k.lar_id = l.lar_id
		    <isNotEmpty property="lus_id">
				and l.lus_id = #lus_id#
		    </isNotEmpty>
		    AND k.lca_id NOT IN (09)
			<isNotEmpty property="lca">
				<isNotEqual property="lca" compareValue="ALL" prepend=" AND ">
					b.lca_id = #lca#
				</isNotEqual>
			</isNotEmpty>		           		    
			<isNotEmpty property="lwk">
				<isNotEqual property="lwk" compareValue="ALL" prepend=" AND ">
					b.lwk_id = #lwk#
				</isNotEqual>
			</isNotEmpty>		           		    
			<isNotEmpty property="lsrg">
				<isNotEqual property="lsrg" compareValue="ALL" prepend=" AND ">
					b.lsrg_id = #lsrg#
				</isNotEqual>
			</isNotEmpty>		    
		    AND (b.MSPO_INPUT_DATE BETWEEN TO_DATE (#bdate# || ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') AND TO_DATE (#edate# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)'))
		GROUP BY
		    b.REG_SPAJ, b.MSPO_INPUT_DATE, b.MSPO_NO_BLANKO, b.MSPO_INPUT_DATE,
		    c.MSTE_BEG_DATE, c.MSTE_END_DATE, c.MSTE_FLAG_UPLOAD_SCAN,
		    d.LKU_ID, d.MSPR_TSI, d.MSPR_PREMIUM, e.MSAG_ID,
		    g.LWK_NAMA, g.LWK_ID, g.LCA_ID,
		    h.LSBS_ID, h.LSDBS_NAME,
		    f.msag_id, i.LUS_LOGIN_NAME, i.LUS_ID,
		    j.MSAP_ADDRESS,
		    a.MU_JLH_PREMI, a.LJI_ID, a.MDU_PERSEN, a.MU_JLH_TU, a.LJI_INVEST, a.jumlah_invest, a.MU_PERIODIC_TU,
		    k.lca_id, k.lwk_id, k.lsrg_nama,
		    d.lsbs_id, d.lsdbs_number
		ORDER BY 
		    g.LCA_ID ASC, g.LWK_ID ASC, i.LUS_ID, b.MSPO_INPUT_DATE ASC, b.REG_SPAJ ASC, h.LSBS_ID ASC, a.LJI_ID ASC
	</select>
      
    <select id="elions.bas.selectreportSummaryInputUserBas" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select lus_id, initcap(trim(lus_full_name)) lus_full_name from(
		select lus_id, lus_full_name from eka.lst_user where lde_id = 19 and lus_active=1 and lus_bas=1
		union
		select lus_id, lus_full_name from  eka.lst_user where lde_id = 29 and lus_active= 1
		order by lus_full_name)
    </select>
    
    <select id="elions.bas.selectReportUserDailyAksep" resultClass="java.util.HashMap">
		select lus_id KEY, lus_login_name VALUE from eka.lst_user where lde_id = 39 and lus_active= 1 order by lus_login_name
    </select>
    
    <select id="elions.bas.selectLsbsSsu" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct trim(to_char(lsbs_id,'000')) lsbs_id 
			from eka.lst_det_bisnis where lsbs_id <![CDATA[<]]> 300 order by lsbs_id desc
    </select>
        
	<select id="elions.bas.selectLsdbsSsu" resultClass="java.util.HashMap"  parameterClass="int">
		select distinct trim(to_char(lsdbs_number,'000')) lsdbs_number 
			from eka.lst_det_bisnis where lsbs_id = #value# order by lsdbs_number
    </select>
    
    <select id="elions.bas.selectLsbsSrc" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select '[' || trim(to_char(lsbs_id,'000')) || '] ' || lsbs_name as nama_lsbs, trim(to_char(lsbs_id,'000')) lsbs_id  
			from eka.lst_bisnis where lsbs_id <![CDATA[<]]> 300 order by lsbs_id desc
    </select>
    
    <select id="elions.bas.selectLsdbsSrc" resultClass="java.util.HashMap"  parameterClass="int">
		select '[' || trim(to_char(lsdbs_number,'000')) || '] ' || lsdbs_name as nama_lsdbs, trim(to_char(lsdbs_number,'000')) lsdbs_number 
			from eka.lst_det_bisnis where lsbs_id = #value# order by lsdbs_number     
	</select>
	
	<select id="elions.bas.selectNamaProduk" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select trim(upper(lsdbs_name)) from eka.lst_det_bisnis where lsbs_id = #lsbs# and lsdbs_number = #lsdbs# 
	</select>
	
	<select id="elions.bas.selectLsdbsSrc2" resultClass="java.util.HashMap"  parameterClass="java.lang.String">
	select '[' || trim(to_char(LSBS_ID,'000')) ||'-'||trim(to_char(lsdbs_number,'000')) || '] ' || lsdbs_name as nama_lsdbs, trim(to_char(lsdbs_number,'000')) lsdbs_number, 
	    trim(to_char(lsbs_id,'000')) ||'-'|| trim(to_char(lsdbs_number,'000')) KODE_FILE
	    from eka.lst_det_bisnis
	    where UPPER(TRIM(LSDBS_NAME)) like TRIM(UPPER('%' || #value# || '%'))
	    and lsbs_id <![CDATA[<]]> 300
	    order by lsbs_id, lsdbs_number      
	</select>
    
    <select id="elions.bas.selectHistoryUploadSsu" resultClass="java.util.HashMap" >
		select rownum, b.* from (
		        select a.upload_id, a.filename, a.upload_jenis, upper(B.LUS_LOGIN_NAME) LUS_FULL_NAME, a.ketentuan,
		                    to_char(a.upload_date,'dd MON yyyy') upload_date, a.temp_filename
		        from eka.mst_history_upload a, eka.lst_user b
		        where a.keterangan = 'SSU/SSK'
		        and a.status = 'AKTIF'
		        and a.lus_id = b.lus_id
		        order by a.upload_id desc 
		) b where 
		rownum <![CDATA[<=]]> 200
	</select>
    
    <select id="elions.bas.selectReportDailyAksep" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select distinct no_rek, no_trx, premi, spaj, no_voucher, tgl_print_polis_approved, Tgl_Transfer_to_Speedy_paymnet, username, 
		    abs(eka.workdays(to_date(tgl_print_polis_approved),to_date(Tgl_Transfer_to_Speedy_paymnet))-1) sla from (
		select distinct 
		    B.NOREK_AJS no_Rek,
		    B.NO_TRX No_Trx,
		    a.mspa_payment Premi,
		    A.REG_SPAJ spaj,
		    A.MSPA_NO_VOUCHER No_Voucher,
		    (select to_char(to_date(msps_date,'dd/MM/yyyy')) from eka.mst_position_spaj where upper(MSPS_DESC) = 'APPROVE BY COLLECTION'
		        and reg_spaj = a.reg_spaj and lus_id in (select lus_id from eka.lst_user where lde_id=39 and lus_active=1)) Tgl_print_polis_approved,     
		    (select to_char(to_date(msps_date,'dd/MM/yyyy')) from eka.mst_position_spaj where 
		        (upper(MSPS_DESC)='TRANSFER KE NON-SPEEDY ' or upper(MSPS_DESC)='TRANSFER KE SPEEDY' or upper(MSPS_DESC)='AUTOTRANSFER KE UW SPEEDY')
		        and reg_spaj = a.reg_spaj and msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and 
		        (upper(MSPS_DESC)='TRANSFER KE NON-SPEEDY ' or upper(MSPS_DESC)='TRANSFER KE SPEEDY' or upper(MSPS_DESC)='AUTOTRANSFER KE UW SPEEDY'))) Tgl_Transfer_to_Speedy_paymnet,    
		    u.lus_login_name username
		from  
		    eka.mst_payment a, 
		    eka.mst_drek_det b, 
		    eka.lst_user u,
		    eka.mst_position_spaj ps,
		    eka.mst_product_insured pi
		where
		        a.mspa_payment_id = (select min(mspa_payment_id) from eka.mst_payment where reg_spaj = a.reg_spaj)
		    and A.MSPA_PAYMENT_ID = B.PAYMENT_ID
		    and A.LUS_ID = u.lus_id
		    and a.mspa_input_date between to_date(#bdate#|| ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') and to_date(#edate# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)')
		    and a.mspa_no_pre = B.NO_PRE
		    and a.reg_spaj = ps.reg_spaj
		    and a.reg_spaj = pi.reg_spaj
		    and pi.lsbs_id  <![CDATA[<]]> 300
		    <isNotEqual property="lus_id" compareValue="0">
				AND a.lus_id = #lus_id#
			</isNotEqual>
		    and (upper(ps.MSPS_DESC) = 'APPROVE BY COLLECTION')
		union
		select distinct 
		    B.NOREK_AJS no_Rek,
		    B.NO_TRX No_Trx,
		    a.mspa_payment Premi,
		    A.REG_SPAJ spaj,
		    A.MSPA_NO_VOUCHER No_Voucher,
		    (select to_char(to_date(msps_date,'dd/MM/yyyy')) from eka.mst_position_spaj where upper(MSPS_DESC) = 'TRANSFER KE PRINT POLIS'
		        and reg_spaj = a.reg_spaj and lus_id in (select lus_id from eka.lst_user where lde_id=39 and lus_active=1)) Tgl_print_polis_approved,     
		    (select to_char(to_date(msps_date,'dd/MM/yyyy')) from eka.mst_position_spaj where 
		        (upper(MSPS_DESC) = 'TRANSFER DARI U/W KE PAYMENT' or upper(MSPS_DESC)='TRANSFER KE NON-SPEEDY ' or 
		            upper(MSPS_DESC)='TRANSFER KE SPEEDY' or upper(MSPS_DESC)='AUTOTRANSFER KE UW SPEEDY')
		        and reg_spaj = a.reg_spaj and msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and 
		        (upper(MSPS_DESC)='TRANSFER KE NON-SPEEDY ' or upper(MSPS_DESC) = 'TRANSFER DARI U/W KE PAYMENT' or upper(MSPS_DESC)='TRANSFER KE SPEEDY' or upper(MSPS_DESC)='AUTOTRANSFER KE UW SPEEDY'))) Tgl_Transfer_to_Speedy_paymnet,    
		    u.lus_login_name username
		from  
		    eka.mst_payment a, 
		    eka.mst_drek_det b, 
		    eka.lst_user u,
		    eka.mst_position_spaj ps,
		    eka.mst_product_insured pi,
		    (select reg_spaj from eka.mst_position_spaj where upper(MSPS_DESC) = 'TRANSFER KE PRINT POLIS'
		    and msps_date between to_date(#bdate#|| ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') and to_date(#edate# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)')
		    and lus_id in (select lus_id from eka.lst_user where lde_id=39 and lus_active=1)) x
		where
		        a.mspa_payment_id = (select min(mspa_payment_id) from eka.mst_payment where reg_spaj = a.reg_spaj)
		    and A.MSPA_PAYMENT_ID = B.PAYMENT_ID
		    and A.LUS_ID = u.lus_id
		    and a.mspa_input_date between to_date(#bdate#|| ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') and to_date(#edate# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)')
		    and a.mspa_no_pre = B.NO_PRE
		    and a.reg_spaj = ps.reg_spaj
		    and a.reg_spaj = pi.reg_spaj
		    and pi.lsbs_id <![CDATA[<]]> 300
		    <isNotEqual property="lus_id" compareValue="0">
				AND a.lus_id = #lus_id#
			</isNotEqual>
		    and x.reg_spaj = a.reg_spaj
		union
		select distinct 
		    B.NOREK_AJS no_Rek,
		    B.NO_TRX No_Trx,
		    a.mspa_payment Premi,
		    A.REG_SPAJ spaj,
		    A.MSPA_NO_VOUCHER No_Voucher,
		    (select to_char(to_date(msps_date,'dd/MM/yyyy')) from eka.mst_position_spaj where (upper(MSPS_DESC) = 'TRANSFER KE PRINT POLIS' or upper(MSPS_DESC) = 'AUTO PROSES PAYMENT')
		        and reg_spaj = a.reg_spaj  
		        and msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and
		            (upper(MSPS_DESC) = 'TRANSFER KE PRINT POLIS' or upper(MSPS_DESC) = 'AUTO PROSES PAYMENT')
		        and lus_id in (select lus_id from eka.lst_user where lde_id=39 and lus_active=1))) Tgl_print_polis_approved,    
		    (select to_char(to_date(msps_date,'dd/MM/yyyy')) from eka.mst_position_spaj where upper(MSPS_DESC)='INPUT SPAJ'
		        and reg_spaj = a.reg_spaj) Tgl_Transfer_to_Speedy_paymnet,    
		    u.lus_login_name username
		from  
		    eka.mst_payment a, 
		    eka.mst_drek_det b, 
		    eka.lst_user u,
		    eka.mst_position_spaj ps,
		    eka.mst_product_insured pi,
		    eka.mst_pas_sms pa
		where
		        a.mspa_payment_id = (select min(mspa_payment_id) from eka.mst_payment where reg_spaj = a.reg_spaj)
		    and A.MSPA_PAYMENT_ID = B.PAYMENT_ID
		    and A.LUS_ID = u.lus_id
		    and a.mspa_input_date between to_date(#bdate#|| ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') and to_date(#edate# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)')
		    and a.mspa_no_pre = B.NO_PRE
		    and a.reg_spaj = ps.reg_spaj
		    and a.reg_spaj = pi.reg_spaj
		    and pi.lsbs_id <![CDATA[<]]> 300
		    <isNotEqual property="lus_id" compareValue="0">
				AND a.lus_id = #lus_id#
			</isNotEqual>
		    and a.reg_spaj = pa.reg_spaj
		order by spaj
		) where Tgl_Transfer_to_Speedy_paymnet is not null
	</select>
      
    <select id="elions.bas.selectReportFollowUpBillingCol" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT A.* FROM(
		SELECT  DISTINCT EKA.MST_POLICY.REG_SPAJ , EKA.MST_POLICY.MSPO_POLICY_NO POLIS,
		        TO_CHAR(EKA.MST_BILLING.MSBI_BEG_DATE, 'dd/MM/yyyy') TGL_JATUH_TEMPO,
		        EKA.MST_CLIENT_NEW.MCL_FIRST PEMEGANG,
		        (CASE WHEN EKA.MST_POLICY.LSRE_ID != 1 THEN (SELECT MCL_FIRST FROM EKA.MST_CLIENT_NEW WHERE EKA.MST_INSURED.MSTE_INSURED = MCL_ID) ELSE EKA.MST_CLIENT_NEW.MCL_FIRST END) TERTANGGUNG,
		        EKA.MST_PRODUCT_INSURED.mspr_premium + NVL((select ber.mu_jlh_premi from eka.mst_ulink ber where ber.reg_Spaj=EKA.MST_POLICY.REG_SPAJ and ber.mu_ke in(1,2,3) and ber.lt_id=5 and rownum=1),0) premium,
		        EKA.LST_PAY_MODE.LSCB_PAY_MODE CARA_BAYAR,
		        EKA.LST_DET_BISNIS.LSDBS_NAME PRODUK,
		        EKA.LST_POLICY_STATUS.LSSP_STATUS STATUS_POLIS,
		        EKA.LST_CABANG.LCA_NAMA CABANG,
		        (select b.lsfu_desc from eka.mst_followup a, eka.lst_followup b where a.lsfu_id = b.lsfu_id and A.REG_SPAJ = EKA.MST_BILLING.REG_SPAJ 
            		and a.msfu_urut = (select max(msfu_urut) from eka.mst_followup where reg_Spaj = a.reg_spaj) 
           			and a.msbi_premi_ke = (select max(msbi_premi_ke) from eka.mst_followup where reg_Spaj = a.reg_spaj)
        			) hasil_follow_up_bas,
		        EKA.LST_REGION.LSRG_NAMA REGION,
		        EKA.LST_PAY_MODE.LSCB_ID,
		        'UNPAID' STATUS_BAYAR,
		        (CASE WHEN EKA.MST_PRODUCT_INSURED.LKU_ID='01' THEN 'IDR' ELSE 'USD' END )KURS,
		        TO_CHAR(EKA.MST_BILLING.MSBI_end_DATE, 'dd/MM/yyyy') END_DATE,
		        EKA.MST_POLICY.LCA_ID LCA_ID
		FROM EKA.MST_BILLING ,
		   EKA.MST_DET_BILLING ,
		   EKA.MST_POLICY ,
		   EKA.MST_CLIENT_NEW ,
		   EKA.LST_PAY_MODE ,
		   EKA.LST_KURS ,
		   EKA.MST_BILLING_HCR ,
		   EKA.MST_ADDRESS_BILLING ,
		   EKA.LST_REGION ,
		   EKA.LST_ADDR_REGION ,
		   EKA.MST_INSURED,
		   EKA.LST_CABANG,
		   EKA.MST_PRODUCT_INSURED,
		   EKA.LST_DET_BISNIS,
		   EKA.LST_POLICY_STATUS     
		WHERE ( EKA.MST_BILLING.REG_SPAJ = EKA.MST_BILLING_HCR.REG_SPAJ (+)) 
		and          ( EKA.MST_BILLING.MSBI_TAHUN_KE = EKA.MST_BILLING_HCR.MSBIH_TAHUN_KE (+)) 
		and          ( EKA.MST_BILLING.MSBI_PREMI_KE = EKA.MST_BILLING_HCR.MSBIH_PREMI_KE (+)) 
		and          ( EKA.MST_DET_BILLING.REG_SPAJ = EKA.MST_BILLING.REG_SPAJ ) 
		and          ( EKA.MST_DET_BILLING.MSBI_TAHUN_KE = EKA.MST_BILLING.MSBI_TAHUN_KE ) 
		and          ( EKA.MST_DET_BILLING.MSBI_PREMI_KE = EKA.MST_BILLING.MSBI_PREMI_KE ) 
		and          ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_BILLING.REG_SPAJ ) 
		and          ( EKA.MST_POLICY.MSPO_POLICY_HOLDER = EKA.MST_CLIENT_NEW.MCL_ID ) 
		and          ( EKA.LST_PAY_MODE.LSCB_ID = EKA.MST_POLICY.LSCB_ID ) 
		and          ( EKA.MST_POLICY.LKU_ID = EKA.LST_KURS.LKU_ID ) 
        <isNotEqual property="status" compareValue="1">
        	<isEqual property="status" compareValue="2">
        	and ( EKA.MST_POLICY.LSSP_ID = 1 )
        	</isEqual>
        	<isEqual property="status" compareValue="3">
        	and ( EKA.MST_POLICY.LSSP_ID = 14 )
        	</isEqual>
        </isNotEqual> 
		and          ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_ADDRESS_BILLING.REG_SPAJ ) 
		and          ( EKA.MST_ADDRESS_BILLING.LCA_ID = EKA.LST_REGION.LCA_ID ) 
		and          ( EKA.LST_ADDR_REGION.LAR_ID = EKA.LST_REGION.LAR_ID ) 
		and          ( EKA.MST_ADDRESS_BILLING.LWK_ID = EKA.LST_REGION.LWK_ID ) 
		and          ( EKA.MST_ADDRESS_BILLING.LSRG_ID = EKA.LST_REGION.LSRG_ID ) 
		and          ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ ) 
		and          ( EKA.MST_POLICY.LSCB_ID <![CDATA[<>]]> 0 ) 
		and          (  EKA.MST_POLICY.LSSP_ID = EKA.LST_POLICY_STATUS.LSSP_ID) 
		<isEqual property="tipe" compareValue="1">
		and          ( ( EKA.MST_BILLING.MSBI_BEG_DATE between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')) 
		</isEqual>
		<isEqual property="tipe" compareValue="2">
		and          ( ( EKA.MST_BILLING.MSBI_BEG_DATE between add_months(to_date(#bdate#,'dd/MM/yyyy'),-1) and add_months(to_date(#edate#,'dd/MM/yyyy'),-1)) 
		</isEqual>
		and          ( EKA.MST_BILLING.LSPD_ID in (11,12,56,57) ) 
		and          ( EKA.MST_BILLING.MSBI_PREMI_KE <![CDATA[>]]> 1 ) ) 
		and          ( EKA.MST_POLICY.LCA_ID = EKA.LST_CABANG.LCA_ID )  
		and          ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_PRODUCT_INSURED.REG_SPAJ ) 
		and          ( EKA.MST_INSURED.MSTE_INSURED_NO = EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO ) 
		and          ( EKA.MST_PRODUCT_INSURED.LSBS_ID = EKA.LST_DET_BISNIS.LSBS_ID )
		and          ( EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER = EKA.LST_DET_BISNIS.LSDBS_NUMBER )
		and          ( EKA.MST_PRODUCT_INSURED.LSBS_ID <![CDATA[<]]> 300)
		and          ( EKA.MST_POLICY.LCA_ID NOT IN ('42','67', '40','09','58','66'))
		<isNotEqual property="prod" compareValue="3">
			<isEqual property="prod" compareValue="1">
			and          (( EKA.MST_POLICY.LCA_ID IN (37) AND EKA.MST_POLICY.LWK_ID IN('M1') AND EKA.MST_POLICY.LSRG_ID IN('00','01','02','03','04'))
			or           ( EKA.MST_POLICY.LCA_ID IN (66) AND EKA.MST_POLICY.LWK_ID IN('00') AND EKA.MST_POLICY.LSRG_ID IN('B2')))
			</isEqual>
			<isEqual property="prod" compareValue="2">
			and          NOT (( EKA.MST_POLICY.LCA_ID IN (37) AND EKA.MST_POLICY.LWK_ID IN('M1') AND EKA.MST_POLICY.LSRG_ID IN('00','01','02','03','04'))
			or           ( EKA.MST_POLICY.LCA_ID IN (66) AND EKA.MST_POLICY.LWK_ID IN('00') AND EKA.MST_POLICY.LSRG_ID IN('B2')))
			</isEqual>
		</isNotEqual>
		and          NOT ( EKA.MST_PRODUCT_INSURED.LSBS_ID||EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER) IN('2032','1535', '1593')
		and EKA.MST_BILLING.MSBI_PAID = 0
		ORDER BY TGL_JATUH_TEMPO, EKA.LST_CABANG.LCA_NAMA, EKA.LST_REGION.LSRG_NAMA, EKA.LST_DET_BISNIS.LSDBS_NAME) A,
		<isEqual property="tipe" compareValue="1">
		(SELECT DISTINCT REG_SPAJ FROM EKA.MST_BILLING A WHERE A.MSBI_BEG_DATE  between add_months(to_date(#bdate#,'dd/MM/yyyy'),-6) and add_months(to_date(#edate#,'dd/MM/yyyy'),-6) AND A.MSBI_PAID = 1)B
		</isEqual>
		<isEqual property="tipe" compareValue="2">
		(SELECT DISTINCT REG_SPAJ FROM EKA.MST_BILLING A WHERE A.MSBI_BEG_DATE  between add_months(to_date(#bdate#,'dd/MM/yyyy'),-7) and add_months(to_date(#edate#,'dd/MM/yyyy'),-7) AND A.MSBI_PAID = 1)B
		</isEqual>
		WHERE A.REG_SPAJ = B.REG_SPAJ AND A.LSCB_ID = 2
		UNION ALL 
		SELECT A.* FROM(
		SELECT  DISTINCT EKA.MST_POLICY.REG_SPAJ , EKA.MST_POLICY.MSPO_POLICY_NO POLIS,
		        TO_CHAR(EKA.MST_BILLING.MSBI_BEG_DATE, 'dd/MM/yyyy') TGL_JATUH_TEMPO,
		        EKA.MST_CLIENT_NEW.MCL_FIRST PEMEGANG,
		        (CASE WHEN EKA.MST_POLICY.LSRE_ID != 1 THEN (SELECT MCL_FIRST FROM EKA.MST_CLIENT_NEW WHERE EKA.MST_INSURED.MSTE_INSURED = MCL_ID) ELSE EKA.MST_CLIENT_NEW.MCL_FIRST END) TERTANGGUNG,
		        EKA.MST_PRODUCT_INSURED.mspr_premium + NVL((select ber.mu_jlh_premi from eka.mst_ulink ber where ber.reg_Spaj=EKA.MST_POLICY.REG_SPAJ and ber.mu_ke in(1,2,3) and ber.lt_id=5 and rownum=1),0) premium,
		        EKA.LST_PAY_MODE.LSCB_PAY_MODE CARA_BAYAR,
		        EKA.LST_DET_BISNIS.LSDBS_NAME PRODUK,
		        EKA.LST_POLICY_STATUS.LSSP_STATUS STATUS_POLIS,
		        EKA.LST_CABANG.LCA_NAMA CABANG,
		        (select b.lsfu_desc from eka.mst_followup a, eka.lst_followup b where a.lsfu_id = b.lsfu_id and A.REG_SPAJ = EKA.MST_BILLING.REG_SPAJ 
            		and a.msfu_urut = (select max(msfu_urut) from eka.mst_followup where reg_Spaj = a.reg_spaj) 
           			and a.msbi_premi_ke = (select max(msbi_premi_ke) from eka.mst_followup where reg_Spaj = a.reg_spaj)
        			) hasil_follow_up_bas,
		        EKA.LST_REGION.LSRG_NAMA REGION,
		        EKA.LST_PAY_MODE.LSCB_ID,
		        'UNPAID' STATUS_BAYAR,
		        (CASE WHEN EKA.MST_PRODUCT_INSURED.LKU_ID='01' THEN 'IDR' ELSE 'USD' END )KURS,
		        TO_CHAR(EKA.MST_BILLING.MSBI_end_DATE, 'dd/MM/yyyy') END_DATE,
		        EKA.MST_POLICY.LCA_ID LCA_ID
		FROM EKA.MST_BILLING ,
		   EKA.MST_DET_BILLING ,
		   EKA.MST_POLICY ,
		   EKA.MST_CLIENT_NEW ,
		   EKA.LST_PAY_MODE ,
		   EKA.LST_KURS ,
		   EKA.MST_BILLING_HCR ,
		   EKA.MST_ADDRESS_BILLING ,
		   EKA.LST_REGION ,
		   EKA.LST_ADDR_REGION ,
		   EKA.MST_INSURED,
		   EKA.LST_CABANG,
		   EKA.MST_PRODUCT_INSURED,
		   EKA.LST_DET_BISNIS,
		   EKA.LST_POLICY_STATUS     
		WHERE ( EKA.MST_BILLING.REG_SPAJ = EKA.MST_BILLING_HCR.REG_SPAJ (+)) 
		and          ( EKA.MST_BILLING.MSBI_TAHUN_KE = EKA.MST_BILLING_HCR.MSBIH_TAHUN_KE (+)) 
		and          ( EKA.MST_BILLING.MSBI_PREMI_KE = EKA.MST_BILLING_HCR.MSBIH_PREMI_KE (+)) 
		and          ( EKA.MST_DET_BILLING.REG_SPAJ = EKA.MST_BILLING.REG_SPAJ ) 
		and          ( EKA.MST_DET_BILLING.MSBI_TAHUN_KE = EKA.MST_BILLING.MSBI_TAHUN_KE ) 
		and          ( EKA.MST_DET_BILLING.MSBI_PREMI_KE = EKA.MST_BILLING.MSBI_PREMI_KE ) 
		and          ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_BILLING.REG_SPAJ ) 
		and          ( EKA.MST_POLICY.MSPO_POLICY_HOLDER = EKA.MST_CLIENT_NEW.MCL_ID ) 
		and          ( EKA.LST_PAY_MODE.LSCB_ID = EKA.MST_POLICY.LSCB_ID ) 
		and          ( EKA.MST_POLICY.LKU_ID = EKA.LST_KURS.LKU_ID ) 
        <isNotEqual property="status" compareValue="1">
        	<isEqual property="status" compareValue="2">
        	and ( EKA.MST_POLICY.LSSP_ID = 1 )
        	</isEqual>
        	<isEqual property="status" compareValue="3">
        	and ( EKA.MST_POLICY.LSSP_ID = 14 )
        	</isEqual>
        </isNotEqual> 
		and          ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_ADDRESS_BILLING.REG_SPAJ ) 
		and          ( EKA.MST_ADDRESS_BILLING.LCA_ID = EKA.LST_REGION.LCA_ID ) 
		and          ( EKA.LST_ADDR_REGION.LAR_ID = EKA.LST_REGION.LAR_ID ) 
		and          ( EKA.MST_ADDRESS_BILLING.LWK_ID = EKA.LST_REGION.LWK_ID ) 
		and          ( EKA.MST_ADDRESS_BILLING.LSRG_ID = EKA.LST_REGION.LSRG_ID ) 
		and          ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ ) 
		and          ( EKA.MST_POLICY.LSCB_ID <![CDATA[<>]]> 0 ) 
		and          (  EKA.MST_POLICY.LSSP_ID = EKA.LST_POLICY_STATUS.LSSP_ID)
		<isEqual property="tipe" compareValue="1">
		and          ( ( EKA.MST_BILLING.MSBI_BEG_DATE between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')) 
		</isEqual> 
		<isEqual property="tipe" compareValue="2">
		and          ( ( EKA.MST_BILLING.MSBI_BEG_DATE between add_months(to_date(#bdate#,'dd/MM/yyyy'),-1) and add_months(to_date(#edate#,'dd/MM/yyyy'),-1)) 
		</isEqual>
		and          ( EKA.MST_BILLING.LSPD_ID in (11,12,56,57) ) 
		and          ( EKA.MST_BILLING.MSBI_PREMI_KE <![CDATA[>]]> 1 ) ) 
		and          ( EKA.MST_POLICY.LCA_ID = EKA.LST_CABANG.LCA_ID )  
		and          ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_PRODUCT_INSURED.REG_SPAJ ) 
		and          ( EKA.MST_INSURED.MSTE_INSURED_NO = EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO ) 
		and          ( EKA.MST_PRODUCT_INSURED.LSBS_ID = EKA.LST_DET_BISNIS.LSBS_ID )
		and          ( EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER = EKA.LST_DET_BISNIS.LSDBS_NUMBER )
		and          ( EKA.MST_PRODUCT_INSURED.LSBS_ID <![CDATA[<]]> 300)
		and          ( EKA.MST_POLICY.LCA_ID NOT IN ('42','67', '40','09','58','66'))
		<isNotEqual property="prod" compareValue="3">	
			<isEqual property="prod" compareValue="1">
			and          (( EKA.MST_POLICY.LCA_ID IN (37) AND EKA.MST_POLICY.LWK_ID IN('M1') AND EKA.MST_POLICY.LSRG_ID IN('00','01','02','03','04'))
			or           ( EKA.MST_POLICY.LCA_ID IN (66) AND EKA.MST_POLICY.LWK_ID IN('00') AND EKA.MST_POLICY.LSRG_ID IN('B2')))
			</isEqual>
			<isEqual property="prod" compareValue="2">
			and          NOT (( EKA.MST_POLICY.LCA_ID IN (37) AND EKA.MST_POLICY.LWK_ID IN('M1') AND EKA.MST_POLICY.LSRG_ID IN('00','01','02','03','04'))
			or           ( EKA.MST_POLICY.LCA_ID IN (66) AND EKA.MST_POLICY.LWK_ID IN('00') AND EKA.MST_POLICY.LSRG_ID IN('B2')))
			</isEqual>
		</isNotEqual>
		and          NOT ( EKA.MST_PRODUCT_INSURED.LSBS_ID||EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER) IN('2032','1535', '1593')
		and EKA.MST_BILLING.MSBI_PAID = 0
		ORDER BY TGL_JATUH_TEMPO, EKA.LST_CABANG.LCA_NAMA, EKA.LST_REGION.LSRG_NAMA, EKA.LST_DET_BISNIS.LSDBS_NAME) A,
		<isEqual property="tipe" compareValue="1">
		(SELECT DISTINCT REG_SPAJ FROM EKA.MST_BILLING A WHERE A.MSBI_BEG_DATE  between add_months(to_date(#bdate#,'dd/MM/yyyy'),-12) and add_months(to_date(#edate#,'dd/MM/yyyy'),-12) AND A.MSBI_PAID = 1)B
		</isEqual>
		<isEqual property="tipe" compareValue="2">
		(SELECT DISTINCT REG_SPAJ FROM EKA.MST_BILLING A WHERE A.MSBI_BEG_DATE  between add_months(to_date(#bdate#,'dd/MM/yyyy'),-13) and add_months(to_date(#edate#,'dd/MM/yyyy'),-13) AND A.MSBI_PAID = 1)B
		</isEqual>
		WHERE A.REG_SPAJ = B.REG_SPAJ AND A.LSCB_ID = 3
		UNION ALL 
		SELECT A.* FROM(
		SELECT  DISTINCT EKA.MST_POLICY.REG_SPAJ , EKA.MST_POLICY.MSPO_POLICY_NO POLIS,
		        TO_CHAR(EKA.MST_BILLING.MSBI_BEG_DATE, 'dd/MM/yyyy') TGL_JATUH_TEMPO,
		        EKA.MST_CLIENT_NEW.MCL_FIRST PEMEGANG,
		        (CASE WHEN EKA.MST_POLICY.LSRE_ID != 1 THEN (SELECT MCL_FIRST FROM EKA.MST_CLIENT_NEW WHERE EKA.MST_INSURED.MSTE_INSURED = MCL_ID) ELSE EKA.MST_CLIENT_NEW.MCL_FIRST END) TERTANGGUNG,
		        EKA.MST_PRODUCT_INSURED.mspr_premium + NVL((select ber.mu_jlh_premi from eka.mst_ulink ber where ber.reg_Spaj=EKA.MST_POLICY.REG_SPAJ and ber.mu_ke in(1,2,3) and ber.lt_id=5 and rownum=1),0) premium,
		        EKA.LST_PAY_MODE.LSCB_PAY_MODE CARA_BAYAR,
		        EKA.LST_DET_BISNIS.LSDBS_NAME PRODUK,
		        EKA.LST_POLICY_STATUS.LSSP_STATUS STATUS_POLIS,
		        EKA.LST_CABANG.LCA_NAMA CABANG,
		        (select b.lsfu_desc from eka.mst_followup a, eka.lst_followup b where a.lsfu_id = b.lsfu_id and A.REG_SPAJ = EKA.MST_BILLING.REG_SPAJ 
            		and a.msfu_urut = (select max(msfu_urut) from eka.mst_followup where reg_Spaj = a.reg_spaj) 
           			and a.msbi_premi_ke = (select max(msbi_premi_ke) from eka.mst_followup where reg_Spaj = a.reg_spaj)
        			) hasil_follow_up_bas,
		        EKA.LST_REGION.LSRG_NAMA REGION,
		        EKA.LST_PAY_MODE.LSCB_ID,
		        'UNPAID' STATUS_BAYAR,
		        (CASE WHEN EKA.MST_PRODUCT_INSURED.LKU_ID='01' THEN 'IDR' ELSE 'USD' END )KURS,
		        TO_CHAR(EKA.MST_BILLING.MSBI_end_DATE, 'dd/MM/yyyy') END_DATE,
		        EKA.MST_POLICY.LCA_ID LCA_ID
		FROM EKA.MST_BILLING ,
		   EKA.MST_DET_BILLING ,
		   EKA.MST_POLICY ,
		   EKA.MST_CLIENT_NEW ,
		   EKA.LST_PAY_MODE ,
		   EKA.LST_KURS ,
		   EKA.MST_BILLING_HCR ,
		   EKA.MST_ADDRESS_BILLING ,
		   EKA.LST_REGION ,
		   EKA.LST_ADDR_REGION ,
		   EKA.MST_INSURED,
		   EKA.LST_CABANG,
		   EKA.MST_PRODUCT_INSURED,
		   EKA.LST_DET_BISNIS,
		   EKA.LST_POLICY_STATUS     
		WHERE ( EKA.MST_BILLING.REG_SPAJ = EKA.MST_BILLING_HCR.REG_SPAJ (+)) 
		and          ( EKA.MST_BILLING.MSBI_TAHUN_KE = EKA.MST_BILLING_HCR.MSBIH_TAHUN_KE (+)) 
		and          ( EKA.MST_BILLING.MSBI_PREMI_KE = EKA.MST_BILLING_HCR.MSBIH_PREMI_KE (+)) 
		and          ( EKA.MST_DET_BILLING.REG_SPAJ = EKA.MST_BILLING.REG_SPAJ ) 
		and          ( EKA.MST_DET_BILLING.MSBI_TAHUN_KE = EKA.MST_BILLING.MSBI_TAHUN_KE ) 
		and          ( EKA.MST_DET_BILLING.MSBI_PREMI_KE = EKA.MST_BILLING.MSBI_PREMI_KE ) 
		and          ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_BILLING.REG_SPAJ ) 
		and          ( EKA.MST_POLICY.MSPO_POLICY_HOLDER = EKA.MST_CLIENT_NEW.MCL_ID ) 
		and          ( EKA.LST_PAY_MODE.LSCB_ID = EKA.MST_POLICY.LSCB_ID ) 
		and          ( EKA.MST_POLICY.LKU_ID = EKA.LST_KURS.LKU_ID ) 
        <isNotEqual property="status" compareValue="1">
        	<isEqual property="status" compareValue="2">
        	and ( EKA.MST_POLICY.LSSP_ID = 1 )
        	</isEqual>
        	<isEqual property="status" compareValue="3">
        	and ( EKA.MST_POLICY.LSSP_ID = 14 )
        	</isEqual>
        </isNotEqual> 
		and          ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_ADDRESS_BILLING.REG_SPAJ ) 
		and          ( EKA.MST_ADDRESS_BILLING.LCA_ID = EKA.LST_REGION.LCA_ID ) 
		and          ( EKA.LST_ADDR_REGION.LAR_ID = EKA.LST_REGION.LAR_ID ) 
		and          ( EKA.MST_ADDRESS_BILLING.LWK_ID = EKA.LST_REGION.LWK_ID ) 
		and          ( EKA.MST_ADDRESS_BILLING.LSRG_ID = EKA.LST_REGION.LSRG_ID ) 
		and          ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ ) 
		and          ( EKA.MST_POLICY.LSCB_ID <![CDATA[<>]]> 0 ) 
		and          (  EKA.MST_POLICY.LSSP_ID = EKA.LST_POLICY_STATUS.LSSP_ID) 
		<isEqual property="tipe" compareValue="1">
		and          ( ( EKA.MST_BILLING.MSBI_BEG_DATE between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')) 
		</isEqual>
		<isEqual property="tipe" compareValue="2">
		and          ( ( EKA.MST_BILLING.MSBI_BEG_DATE between add_months(to_date(#bdate#,'dd/MM/yyyy'),-1) and add_months(to_date(#edate#,'dd/MM/yyyy'),-1)) 
		</isEqual>
		and          ( EKA.MST_BILLING.LSPD_ID in (11,12,56,57) ) 
		and          ( EKA.MST_BILLING.MSBI_PREMI_KE <![CDATA[>]]> 1 ) ) 
		and          ( EKA.MST_POLICY.LCA_ID = EKA.LST_CABANG.LCA_ID )  
		and          ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_PRODUCT_INSURED.REG_SPAJ ) 
		and          ( EKA.MST_INSURED.MSTE_INSURED_NO = EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO ) 
		and          ( EKA.MST_PRODUCT_INSURED.LSBS_ID = EKA.LST_DET_BISNIS.LSBS_ID )
		and          ( EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER = EKA.LST_DET_BISNIS.LSDBS_NUMBER )
		and          ( EKA.MST_PRODUCT_INSURED.LSBS_ID <![CDATA[<]]> 300)
		and          ( EKA.MST_POLICY.LCA_ID NOT IN ('42','67', '40','09','58','66'))
		<isNotEqual property="prod" compareValue="3">
			<isEqual property="prod" compareValue="1">
			and          (( EKA.MST_POLICY.LCA_ID IN (37) AND EKA.MST_POLICY.LWK_ID IN('M1') AND EKA.MST_POLICY.LSRG_ID IN('00','01','02','03','04'))
			or           ( EKA.MST_POLICY.LCA_ID IN (66) AND EKA.MST_POLICY.LWK_ID IN('00') AND EKA.MST_POLICY.LSRG_ID IN('B2')))
			</isEqual>
			<isEqual property="prod" compareValue="2">
			and          NOT (( EKA.MST_POLICY.LCA_ID IN (37) AND EKA.MST_POLICY.LWK_ID IN('M1') AND EKA.MST_POLICY.LSRG_ID IN('00','01','02','03','04'))
			or           ( EKA.MST_POLICY.LCA_ID IN (66) AND EKA.MST_POLICY.LWK_ID IN('00') AND EKA.MST_POLICY.LSRG_ID IN('B2')))
			</isEqual>
		</isNotEqual>
		and          NOT ( EKA.MST_PRODUCT_INSURED.LSBS_ID||EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER) IN('2032','1535', '1593')
		and EKA.MST_BILLING.MSBI_PAID = 0
		ORDER BY TGL_JATUH_TEMPO, EKA.LST_CABANG.LCA_NAMA, EKA.LST_REGION.LSRG_NAMA, EKA.LST_DET_BISNIS.LSDBS_NAME) A,
		<isEqual property="tipe" compareValue="1">
		(SELECT DISTINCT REG_SPAJ FROM EKA.MST_BILLING A WHERE A.MSBI_BEG_DATE  between add_months(to_date(#bdate#,'dd/MM/yyyy'),-3) and add_months(to_date(#edate#,'dd/MM/yyyy'),-3) AND A.MSBI_PAID = 1)B
		</isEqual>
		<isEqual property="tipe" compareValue="2">
		(SELECT DISTINCT REG_SPAJ FROM EKA.MST_BILLING A WHERE A.MSBI_BEG_DATE  between add_months(to_date(#bdate#,'dd/MM/yyyy'),-4) and add_months(to_date(#edate#,'dd/MM/yyyy'),-4) AND A.MSBI_PAID = 1)B
		</isEqual>
		WHERE A.REG_SPAJ = B.REG_SPAJ AND A.LSCB_ID = 1
		UNION ALL 
		SELECT A.* FROM(
		SELECT  DISTINCT EKA.MST_POLICY.REG_SPAJ , EKA.MST_POLICY.MSPO_POLICY_NO POLIS,
		        TO_CHAR(EKA.MST_BILLING.MSBI_BEG_DATE, 'dd/MM/yyyy') TGL_JATUH_TEMPO,
		        EKA.MST_CLIENT_NEW.MCL_FIRST PEMEGANG,
		        (CASE WHEN EKA.MST_POLICY.LSRE_ID != 1 THEN (SELECT MCL_FIRST FROM EKA.MST_CLIENT_NEW WHERE EKA.MST_INSURED.MSTE_INSURED = MCL_ID) ELSE EKA.MST_CLIENT_NEW.MCL_FIRST END) TERTANGGUNG,
		        EKA.MST_PRODUCT_INSURED.mspr_premium + NVL((select ber.mu_jlh_premi from eka.mst_ulink ber where ber.reg_Spaj=EKA.MST_POLICY.REG_SPAJ and ber.mu_ke in(1,2,3) and ber.lt_id=5 and rownum=1),0) premium,
		        EKA.LST_PAY_MODE.LSCB_PAY_MODE CARA_BAYAR,
		        EKA.LST_DET_BISNIS.LSDBS_NAME PRODUK,
		        EKA.LST_POLICY_STATUS.LSSP_STATUS STATUS_POLIS,
		        EKA.LST_CABANG.LCA_NAMA CABANG,
		        (select b.lsfu_desc from eka.mst_followup a, eka.lst_followup b where a.lsfu_id = b.lsfu_id and A.REG_SPAJ = EKA.MST_BILLING.REG_SPAJ 
            		and a.msfu_urut = (select max(msfu_urut) from eka.mst_followup where reg_Spaj = a.reg_spaj) 
           			and a.msbi_premi_ke = (select max(msbi_premi_ke) from eka.mst_followup where reg_Spaj = a.reg_spaj)
        			) hasil_follow_up_bas,
		        EKA.LST_REGION.LSRG_NAMA REGION,
		        EKA.LST_PAY_MODE.LSCB_ID,
		        'UNPAID' STATUS_BAYAR,
		        (CASE WHEN EKA.MST_PRODUCT_INSURED.LKU_ID='01' THEN 'IDR' ELSE 'USD' END )KURS,
		        TO_CHAR(EKA.MST_BILLING.MSBI_end_DATE, 'dd/MM/yyyy') END_DATE,
		        EKA.MST_POLICY.LCA_ID LCA_ID
		FROM EKA.MST_BILLING ,
		   EKA.MST_DET_BILLING ,
		   EKA.MST_POLICY ,
		   EKA.MST_CLIENT_NEW ,
		   EKA.LST_PAY_MODE ,
		   EKA.LST_KURS ,
		   EKA.MST_BILLING_HCR ,
		   EKA.MST_ADDRESS_BILLING ,
		   EKA.LST_REGION ,
		   EKA.LST_ADDR_REGION ,
		   EKA.MST_INSURED,
		   EKA.LST_CABANG,
		   EKA.MST_PRODUCT_INSURED,
		   EKA.LST_DET_BISNIS,
		   EKA.LST_POLICY_STATUS     
		WHERE ( EKA.MST_BILLING.REG_SPAJ = EKA.MST_BILLING_HCR.REG_SPAJ (+)) 
		and          ( EKA.MST_BILLING.MSBI_TAHUN_KE = EKA.MST_BILLING_HCR.MSBIH_TAHUN_KE (+)) 
		and          ( EKA.MST_BILLING.MSBI_PREMI_KE = EKA.MST_BILLING_HCR.MSBIH_PREMI_KE (+)) 
		and          ( EKA.MST_DET_BILLING.REG_SPAJ = EKA.MST_BILLING.REG_SPAJ ) 
		and          ( EKA.MST_DET_BILLING.MSBI_TAHUN_KE = EKA.MST_BILLING.MSBI_TAHUN_KE ) 
		and          ( EKA.MST_DET_BILLING.MSBI_PREMI_KE = EKA.MST_BILLING.MSBI_PREMI_KE ) 
		and          ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_BILLING.REG_SPAJ ) 
		and          ( EKA.MST_POLICY.MSPO_POLICY_HOLDER = EKA.MST_CLIENT_NEW.MCL_ID ) 
		and          ( EKA.LST_PAY_MODE.LSCB_ID = EKA.MST_POLICY.LSCB_ID ) 
		and          ( EKA.MST_POLICY.LKU_ID = EKA.LST_KURS.LKU_ID ) 
        <isNotEqual property="status" compareValue="1">
        	<isEqual property="status" compareValue="2">
        	and ( EKA.MST_POLICY.LSSP_ID = 1 )
        	</isEqual>
        	<isEqual property="status" compareValue="3">
        	and ( EKA.MST_POLICY.LSSP_ID = 14 )
        	</isEqual>
        </isNotEqual>
		and          ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_ADDRESS_BILLING.REG_SPAJ ) 
		and          ( EKA.MST_ADDRESS_BILLING.LCA_ID = EKA.LST_REGION.LCA_ID ) 
		and          ( EKA.LST_ADDR_REGION.LAR_ID = EKA.LST_REGION.LAR_ID ) 
		and          ( EKA.MST_ADDRESS_BILLING.LWK_ID = EKA.LST_REGION.LWK_ID ) 
		and          ( EKA.MST_ADDRESS_BILLING.LSRG_ID = EKA.LST_REGION.LSRG_ID ) 
		and          ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ ) 
		and          ( EKA.MST_POLICY.LSCB_ID <![CDATA[<>]]> 0 ) 
		and          (  EKA.MST_POLICY.LSSP_ID = EKA.LST_POLICY_STATUS.LSSP_ID) 
		<isEqual property="tipe" compareValue="1">
		and          ( ( EKA.MST_BILLING.MSBI_BEG_DATE between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')) 
		</isEqual>
		<isEqual property="tipe" compareValue="2">
		and          ( ( EKA.MST_BILLING.MSBI_BEG_DATE between add_months(to_date(#bdate#,'dd/MM/yyyy'),-1) and add_months(to_date(#edate#,'dd/MM/yyyy'),-1)) 
		</isEqual>
		and          ( EKA.MST_BILLING.LSPD_ID in (11,12,56,57) ) 
		and          ( EKA.MST_BILLING.MSBI_PREMI_KE <![CDATA[>]]> 1 ) ) 
		and          ( EKA.MST_POLICY.LCA_ID = EKA.LST_CABANG.LCA_ID )  
		and          ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_PRODUCT_INSURED.REG_SPAJ ) 
		and          ( EKA.MST_INSURED.MSTE_INSURED_NO = EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO ) 
		and          ( EKA.MST_PRODUCT_INSURED.LSBS_ID = EKA.LST_DET_BISNIS.LSBS_ID )
		and          ( EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER = EKA.LST_DET_BISNIS.LSDBS_NUMBER )
		and          ( EKA.MST_PRODUCT_INSURED.LSBS_ID <![CDATA[<]]> 300)
		and          ( EKA.MST_POLICY.LCA_ID NOT IN ('42','67', '40','09','58','66'))
		<isNotEqual property="prod" compareValue="3">
			<isEqual property="prod" compareValue="1">
			and          (( EKA.MST_POLICY.LCA_ID IN (37) AND EKA.MST_POLICY.LWK_ID IN('M1') AND EKA.MST_POLICY.LSRG_ID IN('00','01','02','03','04'))
			or           ( EKA.MST_POLICY.LCA_ID IN (66) AND EKA.MST_POLICY.LWK_ID IN('00') AND EKA.MST_POLICY.LSRG_ID IN('B2')))
			</isEqual>
			<isEqual property="prod" compareValue="2">
			and          NOT (( EKA.MST_POLICY.LCA_ID IN (37) AND EKA.MST_POLICY.LWK_ID IN('M1') AND EKA.MST_POLICY.LSRG_ID IN('00','01','02','03','04'))
			or           ( EKA.MST_POLICY.LCA_ID IN (66) AND EKA.MST_POLICY.LWK_ID IN('00') AND EKA.MST_POLICY.LSRG_ID IN('B2')))
			</isEqual>
		</isNotEqual>
		and          NOT ( EKA.MST_PRODUCT_INSURED.LSBS_ID||EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER) IN('2032','1535', '1593')
		and EKA.MST_BILLING.MSBI_PAID = 0
		ORDER BY TGL_JATUH_TEMPO, EKA.LST_CABANG.LCA_NAMA, EKA.LST_REGION.LSRG_NAMA, EKA.LST_DET_BISNIS.LSDBS_NAME) A,
		<isEqual property="tipe" compareValue="1">
		(SELECT DISTINCT REG_SPAJ FROM EKA.MST_BILLING A WHERE A.MSBI_BEG_DATE  between add_months(to_date(#bdate#,'dd/MM/yyyy'),-1) and add_months(to_date(#edate#,'dd/MM/yyyy'),-1) AND A.MSBI_PAID = 1)B
		</isEqual>
		<isEqual property="tipe" compareValue="2">
		(SELECT DISTINCT REG_SPAJ FROM EKA.MST_BILLING A WHERE A.MSBI_BEG_DATE  between add_months(to_date(#bdate#,'dd/MM/yyyy'),-2) and add_months(to_date(#edate#,'dd/MM/yyyy'),-2) AND A.MSBI_PAID = 1)B
		</isEqual>
		WHERE A.REG_SPAJ = B.REG_SPAJ AND A.LSCB_ID = 6
	</select>
	
	<select id="elions.bas.selectReportHasilFollowUpBilling" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT DISTINCT *
    FROM (  SELECT TO_CHAR (b.msbi_beg_date, 'dd/mm/yyyy') msbi_beg_date,
                   TO_CHAR (b.msbi_end_date, 'dd/mm/yyyy') msbi_end_date,
                   TO_CHAR (b.msbi_due_date, 'dd/mm/yyyy') msbi_due_date,
                   c.mspo_policy_no_format,
                   eka.utils.pemegang (a.reg_spaj) pemegang,
                   EKA.UTILS.TERTANGGUNG(a.reg_spaj) Tertanggung,              
                   a.msfu_urut,
                   d.lsfu_desc,
                   eka.utils.user_input (a.lus_id) user_name,
                   a.msfu_ket,
                   a.msfu_status,
                   n.lssp_status status,
                   TO_CHAR (a.msfu_create_date, 'dd/mm/yyyy') create_date,
                   a.reg_spaj,
                   a.msbi_tahun_ke,
                   a.msbi_premi_ke,
                   EKA.UTILS.KURS_SIMBOL (c.lku_id) kurs,
                   j.mspr_premium + NVL((select ber.mu_jlh_premi from eka.mst_ulink ber where ber.reg_Spaj=a.reg_spaj and ber.mu_ke in(1,2,3) and ber.lt_id=5 and rownum=1),0) mspr_premium,
                   a.msfu_attachment,
                   h.mrmc_name apam,
                   i.mrmc_name aprh,
                   e.lsrg_nama Region,
                   k.lca_nama Cabang,
                   L.LSDBS_NAME Produk,
                   M.LSCB_PAY_MODE Cara_Bayar
              FROM eka.mst_followup a,
                   eka.mst_billing b,
                   eka.mst_policy c,
                   eka.lst_followup d,
                   eka.lst_region e,
                   eka.lst_user_admin f,
                   eka.lst_user g,
                   eka.mst_rmc h,
                   eka.mst_rmc i,
                   eka.mst_product_insured j,
                   eka.lst_cabang k,
                   eka.LST_det_BISNIS l,
                   eka.lst_pay_mode m,
                   EKA.LST_POLICY_STATUS n
                 WHERE a.reg_spaj = b.reg_spaj
                   AND a.msbi_tahun_ke = b.msbi_tahun_ke
                   AND a.msbi_premi_ke = b.msbi_premi_ke
                   AND a.reg_spaj = c.reg_spaj
                   AND a.lsfu_id = d.lsfu_id
                   AND c.lca_id = e.lca_id
                   AND c.lwk_id = e.lwk_id
                   AND c.lsrg_id = e.lsrg_id
                   and C.LSCB_ID = M.LSCB_ID
                   AND e.lar_id = f.lar_id
                   AND f.lus_id = g.lus_id
                   AND c.lca_id = k.lca_id
					and (b.MSBI_BEG_DATE between to_date(#bdate#,'DD/MM/YYYY') and to_date(#edate#,'DD/MM/YYYY')) 
                   AND e.aam_id = h.mrmc_id
                   AND e.rad_id = i.mrmc_id
                    <isNotEqual property="status" compareValue="1">
                    	<isEqual property="status" compareValue="2">
                    	and C.LSSP_ID = 1
                    	</isEqual>
                    	<isEqual property="status" compareValue="3">
                    	and C.LSSP_ID = 14
                    	</isEqual>
                    </isNotEqual>
                   AND a.reg_spaj = j.reg_spaj
                   and J.LSBS_ID = L.LSBS_ID
                   and J.lsdbs_number = L.lsdbs_number
                   and c.lssp_id = n.lssp_id
                   <isNotEqual property="prod" compareValue="3">
                   	<isEqual property="prod" compareValue="1">
					and          (( b.LCA_ID IN (37) AND b.LWK_ID IN('M1') AND b.LSRG_ID IN('00','01','02','03','04'))
					or           ( b.LCA_ID IN (66) AND b.LWK_ID IN('00') AND b.LSRG_ID IN('B2')))
					</isEqual>
					<isEqual property="prod" compareValue="2">
					and          NOT (( b.LCA_ID IN (37) AND b.LWK_ID IN('M1') AND b.LSRG_ID IN('00','01','02','03','04'))
					or           ( b.LCA_ID IN (66) AND b.LWK_ID IN('00') AND b.LSRG_ID IN('B2')))
					</isEqual>
			       </isNotEqual>	
                   AND j.lsbs_id <![CDATA[<]]> 300
                   and A.MSFU_CREATE_DATE = (select max(x.MSFU_CREATE_DATE) from eka.mst_followup x where a.reg_Spaj  = x.reg_spaj)
          GROUP BY b.msbi_beg_date,
                   b.msbi_end_date,
                   b.msbi_due_date,
                   c.mspo_policy_no_format,
                   a.reg_spaj,
                   a.msfu_urut,
                   d.lsfu_desc,
                   a.lus_id,
                   a.msfu_ket,
                   a.msfu_status,
                   n.lssp_status,
                   a.msfu_create_date,
                   a.reg_spaj,
                   a.msbi_tahun_ke,
                   a.msbi_premi_ke,
                   a.msfu_attachment,
                   h.mrmc_name,
                   i.mrmc_name,
                   j.mspr_premium,
                   c.lku_id,
                   e.lsrg_nama,
                   k.lca_nama,
                   L.LSDBS_NAME,
                   M.LSCB_PAY_MODE
          ORDER BY b.msbi_beg_date, a.reg_spaj, a.msfu_urut ASC) report
	ORDER BY report.msbi_beg_date, report.reg_spaj, report.msfu_urut ASC
	</select>
	
	<select id="elions.bas.selectReportFollowUpBillingSum" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select sum(inforce) inforce, sum(lapse) lapse, sum(lapse)+sum(inforce) jumlah from(
    SELECT DISTINCT count(a.reg_spaj) inforce, 0 lapse
        FROM (  SELECT distinct TO_CHAR (b.msbi_beg_date, 'dd/mm/yyyy') msbi_beg_date,
                       TO_CHAR (b.msbi_end_date, 'dd/mm/yyyy') msbi_end_date,
                       TO_CHAR (b.msbi_due_date, 'dd/mm/yyyy') msbi_due_date,
                       a.reg_spaj
                    FROM eka.mst_followup a,
                       eka.mst_billing b,
                       eka.mst_policy c,
                       eka.lst_followup d,
                       eka.lst_region e,
                       eka.lst_user_admin f,
                       eka.lst_user g,
                       eka.mst_rmc h,
                       eka.mst_rmc i,
                       eka.mst_product_insured j,
                       eka.lst_cabang k,
                       eka.LST_det_BISNIS l,
                       eka.lst_pay_mode m
                     WHERE a.reg_spaj = b.reg_spaj
                       AND a.msbi_tahun_ke = b.msbi_tahun_ke
                       AND a.msbi_premi_ke = b.msbi_premi_ke
                       AND a.reg_spaj = c.reg_spaj
                       AND a.lsfu_id = d.lsfu_id
                       AND c.lca_id = e.lca_id
                       AND c.lwk_id = e.lwk_id
                       AND c.lsrg_id = e.lsrg_id
                       and C.LSCB_ID = M.LSCB_ID
                       AND e.lar_id = f.lar_id
                       AND f.lus_id = g.lus_id
                       AND c.lca_id = k.lca_id
					   and (b.MSBI_BEG_DATE between to_date(#bdate#,'DD/MM/YYYY') and to_date(#edate#,'DD/MM/YYYY')) 
                       AND e.aam_id = h.mrmc_id
                       and C.LSSP_ID = 1
	                   <isNotEqual property="prod" compareValue="3">
	                   	<isEqual property="prod" compareValue="1">
						and          (( b.LCA_ID IN (37) AND b.LWK_ID IN('M1') AND b.LSRG_ID IN('00','01','02','03','04'))
						or           ( b.LCA_ID IN (66) AND b.LWK_ID IN('00') AND b.LSRG_ID IN('B2')))
						</isEqual>
						<isEqual property="prod" compareValue="2">
						and          NOT (( b.LCA_ID IN (37) AND b.LWK_ID IN('M1') AND b.LSRG_ID IN('00','01','02','03','04'))
						or           ( b.LCA_ID IN (66) AND b.LWK_ID IN('00') AND b.LSRG_ID IN('B2')))
						</isEqual>
				       </isNotEqual>
                       AND e.rad_id = i.mrmc_id
                       AND a.reg_spaj = j.reg_spaj
                       and J.LSBS_ID = L.LSBS_ID
                       and J.lsdbs_number = L.lsdbs_number
                       AND j.lsbs_id <![CDATA[<]]> 300) a
    union
    SELECT DISTINCT 0 inforce, count(b.reg_spaj) lapse
        FROM (  SELECT distinct TO_CHAR (b.msbi_beg_date, 'dd/mm/yyyy') msbi_beg_date,
                       TO_CHAR (b.msbi_end_date, 'dd/mm/yyyy') msbi_end_date,
                       TO_CHAR (b.msbi_due_date, 'dd/mm/yyyy') msbi_due_date,
                       a.reg_spaj
                    FROM eka.mst_followup a,
                       eka.mst_billing b,
                       eka.mst_policy c,
                       eka.lst_followup d,
                       eka.lst_region e,
                       eka.lst_user_admin f,
                       eka.lst_user g,
                       eka.mst_rmc h,
                       eka.mst_rmc i,
                       eka.mst_product_insured j,
                       eka.lst_cabang k,
                       eka.LST_det_BISNIS l,
                       eka.lst_pay_mode m
                     WHERE a.reg_spaj = b.reg_spaj
                       AND a.msbi_tahun_ke = b.msbi_tahun_ke
                       AND a.msbi_premi_ke = b.msbi_premi_ke
                       AND a.reg_spaj = c.reg_spaj
                       AND a.lsfu_id = d.lsfu_id
                       AND c.lca_id = e.lca_id
                       AND c.lwk_id = e.lwk_id
                       AND c.lsrg_id = e.lsrg_id
                       and C.LSCB_ID = M.LSCB_ID
                       AND e.lar_id = f.lar_id
                       AND f.lus_id = g.lus_id
                       AND c.lca_id = k.lca_id
					   and (b.MSBI_BEG_DATE between to_date(#bdate#,'DD/MM/YYYY') and to_date(#edate#,'DD/MM/YYYY')) 
                       AND e.aam_id = h.mrmc_id
                       and C.LSSP_ID = 14
	                   <isNotEqual property="prod" compareValue="3">
	                   	<isEqual property="prod" compareValue="1">
						and          (( b.LCA_ID IN (37) AND b.LWK_ID IN('M1') AND b.LSRG_ID IN('00','01','02','03','04'))
						or           ( b.LCA_ID IN (66) AND b.LWK_ID IN('00') AND b.LSRG_ID IN('B2')))
						</isEqual>
						<isEqual property="prod" compareValue="2">
						and          NOT (( b.LCA_ID IN (37) AND b.LWK_ID IN('M1') AND b.LSRG_ID IN('00','01','02','03','04'))
						or           ( b.LCA_ID IN (66) AND b.LWK_ID IN('00') AND b.LSRG_ID IN('B2')))
						</isEqual>
				       </isNotEqual>
                       AND e.rad_id = i.mrmc_id
                       AND a.reg_spaj = j.reg_spaj
                       and J.LSBS_ID = L.LSBS_ID
                       and J.lsdbs_number = L.lsdbs_number
                       AND j.lsbs_id <![CDATA[<]]> 300) b
)
	</select>
      
	<select id="elions.bas.selectreportSummaryInputUser" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
     SELECT DISTINCT * FROM (        
     SELECT a.MSPO_NO_BLANKO,        
            to_char(a.MSPO_INPUT_DATE,'dd/mm/yyyy') tgl_input,  
            ma.MSAG_ID kode_agen,
            trim(mca.MCL_FIRST) AS agen,
            lw.LWK_NAMA cabang,   
            trim(EKA.UTILS.PEMEGANG(a.reg_spaj)) AS PEMEGANG,
            trim(EKA.UTILS.tertanggung(a.reg_spaj)) AS TERTANGGUNG,
            eka.f_lsdbs(a.reg_spaj, pi.lsbs_id, pi.lsdbs_number) produk,
            MAB.MSAP_ADDRESS alamat_tagih,        
            pi.MSPR_TSI UP,            
            pi.MSPR_PREMIUM premi_pokok,                
            (select tung.mu_jlh_premi from eka.mst_ulink tung where tung.reg_Spaj=a.reg_spaj and tung.mu_ke in(1,2,3) and tung.lt_id=2 and tung.reg_Spaj=a.reg_spaj and rownum=1) Top_up_tunggal,
            (select ber.mu_jlh_premi from eka.mst_ulink ber where ber.reg_Spaj=a.reg_spaj and ber.mu_ke in(1,2,3) and ber.lt_id=5 and ber.reg_Spaj=a.reg_Spaj and rownum=1) Top_up_berkala,
            a.reg_spaj,   
            a.MSPO_POLICY_NO,   
            to_char(i.mste_tgl_aksep,'dd/mm/yyyy') tgl_produksi,
            lu.LUS_LOGIN_NAME user_input, 
            to_char(y.msps_date,'dd/mm/yyyy') tgl_info,
            y.msps_desc keterangan
        FROM 
            eka.mst_policy a,
            eka.mst_insured i,   
            EKA.MST_PRODUCT_INSURED pi,   
            EKA.MST_AGENT_PROD map,   
            EKA.MST_AGENT ma,   
            EKA.LST_WAKIL lw,
            EKA.LST_DET_BISNIS ldb, 
            EKA.MST_CLIENT_NEW mca,   
            EKA.MST_CLIENT_NEW mcb, 
            EKA.MST_CLIENT_NEW mcc,   
            EKA.LST_USER  lu, 
            EKA.MST_ADDRESS_BILLING mab,
                    (SELECT 
                         p.REG_SPAJ,   
                         u.MU_JLH_PREMI,   
                        du.LJI_ID,   
                        du.MDU_PERSEN  ,
                         u.MU_JLH_TU,
                        ji.LJI_INVEST,
                        count(du.LJI_ID) jumlah_invest,
                         u.MU_PERIODIC_TU
                        FROM 
                         EKA.MST_POLICY p,   
                         EKA.MST_ULINK u,   
                         EKA.MST_DET_ULINK du,
                         EKA.LST_JENIS_INVEST ji
                       WHERE 
                         (  u.REG_SPAJ = p.REG_SPAJ ) and  
                         ( du.REG_SPAJ = u.REG_SPAJ ) and  
                         ( du.MU_KE = u.MU_KE ) and  
                         (  u.MU_KE=1 ) AND
                         ( ji.LJI_ID = du.LJI_ID)
                        group by 
                          p.REG_SPAJ,   
                          u.MU_JLH_PREMI,   
                         du.LJI_ID,   
                         du.MDU_PERSEN  ,
                          u.MU_JLH_TU ,
                         ji.LJI_INVEST,
                          u.MU_PERIODIC_TU
                     ORDER BY du.LJI_ID) x,
                     (SELECT a.reg_spaj, a.msps_desc, a.msps_date
                        FROM eka.mst_position_spaj a
                        WHERE A.MSPS_DATE = (select max(msps_date) from eka.mst_position_spaj b where a.reg_spaj = b.reg_spaj)                 
                     ) y
        WHERE 
            a.REG_SPAJ = i.REG_SPAJ and  
            i.REG_SPAJ = pi.REG_SPAJ and  
            a.REG_SPAJ = map.REG_SPAJ and  
            pi.LSBS_ID = ldb.LSBS_ID and  
            pi.LSDBS_NUMBER = ldb.LSDBS_NUMBER and  
            map.MSAG_ID = ma.MSAG_ID and  
            ma.MCL_ID = mca.MCL_ID and  
            i.MSTE_INSURED = mcb.MCL_ID and  
            a.MSPO_POLICY_HOLDER = mcc.MCL_ID and  
            a.LCA_ID = lw.LCA_ID and  
            a.LWK_ID = lw.LWK_ID and  
            map.LSLE_ID=4 AND
            a.REG_SPAJ = mab.REG_SPAJ and  
            a.LUS_ID = lu.LUS_ID and
            a.LSTB_ID =1 AND
            ldb.LSBS_ID  <![CDATA[<]]> 300 AND 
            a.MSPO_INPUT_DATE between to_date(#bdate#|| ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') and to_date(#edate# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)') and 
            x.reg_spaj (+)=  a.REG_SPAJ and
            y.reg_spaj (+)=  a.REG_SPAJ and
            NVL(i.MSTE_FLAG_GUTHRIE,0) = 0
            <isNotEqual property="lus_id" compareValue="ALL">
            	and a.lus_id in ($lus_id$)
            </isNotEqual>
            <isNotEqual property="prods" compareValue="'ALL'">
            	and a.lca_id in (select lca_id from eka.lst_cabang where jalurdis in (select id_dist from EKA.LST_JALUR_DIST where grup_report in ($prods$)))
            </isNotEqual>
            <isEqual property="preview" compareValue="1">
            	and rownum=1
            </isEqual>
        ORDER BY   
            lu.LUS_LOGIN_NAME,
            lw.LCA_ID ASC,
            lw.LWK_ID asc,
            a.MSPO_INPUT_DATE ASC,
            a.REG_SPAJ ASC,
            ldb.LSBS_ID ASC,
            x.LJI_ID ASC
		) 
		order by user_input asc
	</select>
	
	<select id="elions.bas.selectReportSummaryInputRegisterAgen" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select * from (
		    select 
		        eka.utils.user_input(a.lus_id)user_input, a.mku_tglinput tgl_input, a.mku_no_reg no_reg, trim(a.mku_first || ' ' || a.mku_middle || ' ' || a.mku_last) nama_rekrut, '?' level_rekrut,
		        nvl(a.mku_diundang, a.mku_rekruiter) nama_rekruter, eka.utils.agen_jabatan(a.msrk_id) level_rekruter, a.mku_region kode_region, 
		        eka.utils.cabang(substr(a.mku_region, 1, 2)) cabang, eka.utils.kanwil_nama(substr(a.mku_region, 1, 2), substr(mku_region, 3, 2)) wakil, b.lsrg_nama region, a.mku_tgl_berkas tgl_berkas,
		        c.lus_full_name
		    from 
		        eka.mst_kuesioner a, eka.lst_region b, eka.lst_user c
		    where 
		        a.mku_region = (b.lca_id || b.lwk_id || b.lsrg_id)
		        and (a.mku_tglinput between TO_DATE(#bdate#, 'dd/mm/yyyy') and TO_DATE(#edate#, 'dd/mm/yyyy')) 
		        and a.lus_id = c.lus_id
		        <isNotEmpty property="userBas">
		        	<isNotEqual property="userBas" compareValue="ALL">
		        		and a.lus_id = #userBas#
		        	</isNotEqual>
		        </isNotEmpty>
				<isNotEmpty property="cabang">
					<isNotEqual property="cabang" compareValue="ALL" prepend=" AND ">
						c.lca_id = #cabang#
					</isNotEqual>
				</isNotEmpty>		           		    
				<isNotEmpty property="userinput">
					<isNotEqual property="userinput" compareValue="ALL" prepend=" AND ">
						c.lus_id = #userinput#
					</isNotEqual>
				</isNotEmpty>		           		    
		    union
		    select 
		        eka.utils.user_input(a.lus_id)user_input, a.mia_input_date tgl_input, a.mia_agensys_id no_reg, a.mia_nama nama_rekrut, decode(a.mia_level_recruit, 1, 'Agency Director', 2, 'Agency Manager', 3, 'Sales Manager', 4, 'Sales Executive') level_rekrut,
		        eka.utils.agen(a.mia_recruiter) nama_rekruter, eka.utils.agen_jabatan(a.mia_recruiter) level_rekruter, (a.lca_id || a.lwk_id || a.lsrg_id) kode_region, 
		        eka.utils.cabang(a.lca_id) cabang, eka.utils.kanwil_nama(a.lca_id, a.lwk_id) wakil, b.lsrg_nama region, a.mia_tgl_berkas tgl_berkas, c.lus_full_name
		    from 
		        eka.mst_input_agensys a, eka.lst_region b, eka.lst_user c
		    where 
		        a.lca_id = b.lca_id and a.lwk_id = b.lwk_id and a.lsrg_id = b.lsrg_id
		        and (a.mia_input_date between TO_DATE(#bdate#, 'dd/mm/yyyy') and TO_DATE(#edate#, 'dd/mm/yyyy'))
		        and a.lus_id = c.lus_id
		        <isNotEmpty property="userBas">
		        	<isNotEqual property="userBas" compareValue="ALL">
		        		and a.lus_id = #userBas#
		        	</isNotEqual>
		        </isNotEmpty>
				<isNotEmpty property="cabang">
					<isNotEqual property="cabang" compareValue="ALL" prepend=" AND ">
						c.lca_id = #cabang#
					</isNotEqual>
				</isNotEmpty>		           		    
				<isNotEmpty property="userinput">
					<isNotEqual property="userinput" compareValue="ALL" prepend=" AND ">
						c.lus_id = #userinput#
					</isNotEqual>
				</isNotEmpty>		           		    
		) 
		<isNotEmpty property="jn_report">
			<isEqual property="jn_report" compareValue="1">
				order by user_input
			</isEqual>
			<isNotEqual property="jn_report" compareValue="1">
				order by tgl_input
			</isNotEqual>
		</isNotEmpty>
	</select>

	<select id="elions.bas.selectHitungBungaPinjaman" parameterClass="string" resultClass="java.util.HashMap">
		select 
		b.reg_spaj, b.mspo_policy_no_format, a.mspin_no_pinjaman, a.mspin_beg_date, a.mspin_end_date, a.mspin_pinjaman, a.mspin_bunga, a.mspin_sisa, a.mspin_jlh_nt
		from eka.mst_pinjaman a, eka.mst_policy b
		where a.reg_spaj = rpad(replace(#value# ,'.'),11,' ') and a.mspin_aktif = 1
		and a.reg_spaj = b.reg_spaj	
	</select>
	
	<select id="elions.bas.selectMstPinjaman" parameterClass="string" resultClass="java.util.HashMap">
		select *
		from eka.mst_pinjaman
		where reg_spaj = rpad(replace(#value# ,'.'),11,' ')
	</select>

	<select id="elions.bas.selectMaxNoAgentContract" resultClass="string">
		select max(mac_id) from eka.mst_agent_contract
	</select>

	<select id="elions.bas.selectReportSummaryAgentContract" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select a.tgl_input, eka.utils.user_input(a.lus_id) user_input, a.mac_level, a.mac_nama_agen, a.region 
		from eka.mst_agent_contract a
		where 
			a.tgl_input between TO_DATE(#bdate#, 'dd/mm/yyyy') and TO_DATE(#edate#, 'dd/mm/yyyy')
			<isNotEmpty property="userBas">
				<isNotEqual property="userBas" compareValue="ALL">
					and a.lus_id = #userBas#
				</isNotEqual>			
			</isNotEmpty>
		<isNotEmpty property="jn_report">
			<isEqual property="jn_report" compareValue="1">
				order by a.lus_id asc
			</isEqual>
		</isNotEmpty>
	</select>

	<select id="elions.bas.selectAgentContract" parameterClass="string" resultClass="java.util.HashMap">
		SELECT MAC_ID, REGION, MSAG_ID, 
		   MAC_ATASAN_CAB, MAC_NAMA_AGEN, MAC_LEVEL, 
		   MAC_IDENTITAS, MAC_TMPT_LAHIR, MAC_TGL_LAHIR, 
		   MAC_ALAMAT, MAC_TGL_KONTRAK, MAC_KOTA_CAB, 
		   MAC_ATASAN_PUSAT, MAC_JBTN_ATASAN_PUSAT, LUS_ID, 
		   TGL_INPUT, MAC_FILENAME, MAC_DISTRIBUSI
		FROM EKA.MST_AGENT_CONTRACT WHERE MAC_ID = #value#	
	</select>
	
	<!--
		select
		    nvl(nvl(d.no_hp, e.no_hp), ' ') hp1, 
		    nvl(nvl(d.no_hp2, e.no_hp2), ' ') hp2, 
		    nvl(nvl(f.mspe_email, e.email), ' ') email1, 
		    nvl(d.e_mail, ' ') email2, 
		group by
			d.no_hp, e.no_hp, d.no_hp2, e.no_hp2, f.mspe_email, e.email, d.e_mail, 
	-->
	<select id="elions.bas.selectReportDemografiBSM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
		    f.mcl_first nama, 
		    a.mspo_nasabah_dcif cif,
		    nvl(nvl(d.no_hp, e.no_hp), ' ') hp1, 
			nvl(nvl(d.no_hp2, e.no_hp2), ' ') hp2, 
			nvl(nvl(f.mspe_email, e.email), ' ') email1, 
		    a.mspo_age umur,
		    decode(f.mspe_sex, '1', 'Pria', 'Wanita') sex, 
		    decode(f.mspe_sts_mrt, 1, 'Belum Menikah', 2, 'Menikah', 3, 'Janda', '4', 'Duda') marital,
		    g.lsag_name agama, f.mkl_kerja pekerjaan, f.mkl_penghasilan penghasilan, 
		    eka.utils.cabang_bsm(c.wil_no) wilayah,
		    eka.utils.det_produk(h.lsbs_id, h.lsdbs_number) produk,
		    EKA.UTILS.KURS_SIMBOL(a.lku_id) kurs, i.mgi tenor, 
		    SUM(i.premi) outstanding,
            j.mrc_no_ac,
            j.mrc_cabang
		from 
		    eka.mst_policy a, eka.mst_reff_bii b, eka.lst_cabang_bii c, eka.mst_address_billing d, eka.mst_address_new e, eka.mst_client_new f, eka.lst_agama g, eka.mst_product_insured h,
		    (
		    SELECT a.reg_spaj, 'Premi Utama' ket, mpr_jangka_invest mgi, (mpr_deposit * b.mspro_nilai_kurs) premi
		      FROM eka.mst_powersave_ro a, eka.mst_production b WHERE a.mps_kode IN (2, 3, 5, 7) AND mpr_aktif = 1 AND a.reg_spaj = b.reg_spaj AND a.msbi_tahun_ke = b.msbi_tahun_ke AND a.msbi_premi_ke = b.msbi_premi_ke
		    UNION
		    SELECT a.reg_spaj, msl_desc ket, msl_mgi mgi, (msl_premi * b.mspro_nilai_kurs) premi
		      FROM eka.mst_slink a, eka.mst_production b WHERE msl_kode IN (2, 3, 5) AND msl_aktif = 1 AND a.reg_spaj = b.reg_spaj AND a.msl_tahun_ke = b.msbi_tahun_ke AND a.msl_premi_ke = b.msbi_premi_ke
		    UNION
		    SELECT a.reg_spaj, decode(a.mu_periodic_tu, 0, 'Premi Utama', 'Premi Top Up Ke-' || a.mu_premi_ke) ket, c.lscb_id mgi, 
		           (select sum(aa.mdu_saldo_unit * bb.lnu_nilai)
                    from eka.mst_det_ulink aa,
                         ( select a.lji_id, a.lnu_nilai, a.lnu_tgl as tgl_nab
                           from eka.lst_nab_ulink a, 
                                (select lji_id, max(lnu_tgl) as tgl from eka.lst_nab_ulink group by lji_id) link 
                           where   a.lji_id = link.lji_id and
                                   a.lnu_tgl = link.tgl ) bb
                    where aa.lji_id = bb.lji_id
                    and aa.reg_spaj = a.reg_spaj
                    and aa.mu_ke = 1) premi
		      FROM eka.mst_ulink a, eka.mst_production b, eka.mst_policy c
		      WHERE lt_id IN (2, 3, 5) 
		        AND mu_aktif = 1 AND a.reg_spaj = b.reg_spaj AND a.reg_spaj = c.reg_spaj
		        AND a.mu_tahun_ke = b.msbi_tahun_ke AND a.mu_premi_ke = b.msbi_premi_ke
		    ) i,
            eka.mst_rek_client j
		where 
			a.lstb_id = 1 and a.lspd_id <![CDATA[<>]]> 95 and a.lssp_id = 1
		    and a.reg_spaj = b.reg_spaj
		    and a.reg_spaj = j.reg_spaj
		    and b.level_id = 4 and b.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = b.reg_spaj and level_id = 4)
		    and b.lcb_no = c.lcb_no
		    and c.jenis= #jn_bank#
		    and a.reg_spaj = d.reg_spaj
		    and a.mspo_policy_holder = e.mcl_id
		    and a.mspo_policy_holder = f.mcl_id
		    and f.lsag_id = g.lsag_id
		    and a.reg_spaj = h.reg_spaj
		    and h.lsbs_id <![CDATA[<]]> 300
		    and a.reg_spaj = i.reg_spaj
		    $where$
		group by
		    f.mcl_first, a.mspo_nasabah_dcif, a.mspo_age, f.mspe_sex, f.mspe_sts_mrt,
		    g.lsag_name, f.mkl_kerja, f.mkl_penghasilan, c.wil_no, h.lsbs_id, h.lsdbs_number, a.lku_id, i.mgi,
		    d.no_hp, e.no_hp, d.no_hp2, e.no_hp2, f.mspe_email, e.email, j.mrc_no_ac, j.mrc_cabang
		$having$
		order by f.mcl_first
	</select>
	
	<select id="elions.bas.selectReportSummaryJapaneseDesk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select a.mpps_tgl_input, a.mpps_agen_pic, b.lstp_desc, c.mpt_nama_pt, c.mpt_nama_asuransi_ex, c.mpt_bidang_usaha, d.lssb_nama, a.broker_name, e.lscb_pay_mode, a.mpps_no
		from 
		    eka.mst_proposal@eb a, eka.lst_type_proposal@eb b, eka.mst_perusahaan@eb c, eka.lst_sumber_bisnis@eb d, eka.lst_pay_mode@eb e
		where 
		    a.msag_id = '800257'
		    and (trunc(a.mpps_tgl_input) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy'))
		    and a.lstp_id = b.lstp_id
		    and a.mpps_no = c.mpps_no
		    and c.lssb_kode = d.lssb_kode
		    and a.lscb_id = e.lscb_id
		order by a.mpps_tgl_input
	</select>
    <select id="elions.bas.selectDataAgenBridge" parameterClass="string" resultClass="java.util.HashMap">
        SELECT a.msag_id, a.lsrg_id ,a.mcl_id,a.lca_id,A.MSAG_SERTIFIKAT_NO,decode(a.msag_active,'1','ACTIVE','0','NON ACTIVE')Status, a.msag_active_date,a.msag_beg_date,a.msag_end_date, b.lsrg_nama, c.mcl_first,TO_CHAR(c.mspe_date_birth, 'dd/mm/yyyy')Tanggal_lahir,
       c.mspe_place_birth, d.alamat_rumah
        FROM eka.mst_agent a,
             eka.lst_region b,
             eka.mst_client_new c,
             eka.mst_address_new d
        WHERE a.mcl_id = c.mcl_id
          AND a.lsrg_id = b.lsrg_id
          AND a.mcl_id = d.mcl_id
          AND a.lca_id = b.lca_id
          AND a.msag_id = #msag_id#
    </select>

	<select id="elions.bas.selectBlanko2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select id_dok, msag_id, tgl_kembali_ke_agen, tgl_terima_dari_agen, jenis_further, keterangan_further 
		from eka.mst_spaj_ao 
		where id_dok = #no_blanko#
		and flag_further = 1
	</select>
	
	<!-- ORIGINAL -->
	<select id="elions.bas.selectDataPolisUntukInputHadiah" parameterClass="string" resultClass="com.ekalife.elions.model.Hadiah">
		SELECT a.reg_spaj, a.mspo_policy_no policy_no, eka.utils.pemegang (a.reg_spaj) pemegang,
		       to_char(b.mste_beg_date, 'dd/mm/yyyy') beg_date, to_char(b.mste_end_date, 'dd/mm/yyyy') end_date, 
		       to_char(b.mste_tgl_aksep, 'dd/mm/yyyy') tgl_aksep,
		       c.msap_address mh_alamat, c.msap_zip_code mh_kodepos, c.kota mh_kota, c.no_hp mh_telepon
		  FROM eka.mst_policy a, eka.mst_insured b, eka.mst_address_billing c
		 WHERE     (a.reg_spaj = rpad(replace(#value# ,'.'),11,' ') OR a.mspo_policy_no = rpad(replace(#value# ,'.'),14,' '))
		       AND a.reg_spaj = b.reg_spaj
		       AND b.reg_spaj = c.reg_spaj
		       AND a.lspd_id <![CDATA[<>]]> 95
               AND b.lssa_id = 5      	
	</select>
	
	<select id="elions.bas.selectDataPolisUntukInputHadiah2" parameterClass="string" resultClass="com.ekalife.elions.model.Hadiah">
		SELECT a.reg_spaj, a.mspo_policy_no policy_no, eka.utils.pemegang (a.reg_spaj) pemegang,
               to_char(b.mste_beg_date, 'dd/mm/yyyy') beg_date, to_char(b.mste_end_date, 'dd/mm/yyyy') end_date, 
              to_char(b.mste_tgl_aksep, 'dd/mm/yyyy') tgl_aksep,
               c.msap_address mh_alamat, d.mh_kodepos, d.mh_kota, c.no_hp mh_telepon,
               d.mh_no, d.mh_flag_kirim, d.lhc_id, d.lh_id, h.lhc_nama, i.LH_NAMA, i.LH_HARGA, d.mh_budget, d.mh_harga, d.mh_quantity, 
               d.supplier_id, d.lbn_id,
               d.mh_rek_no, d.mh_rek_nama, d.lspd_id,
               d.mh_keterangan,
               concat(concat(f.lsbp_nama,' '),e.lbn_nama) bank_name, g.supplier_name
          FROM eka.mst_policy a, eka.mst_insured b, eka.mst_address_billing c, eka.mst_hadiah d, eka.lst_bank e, eka.lst_bank_pusat f, stok.master_supplier g, eka.lst_hadiah_cat h, eka.lst_hadiah i
         WHERE     (a.reg_spaj = rpad(replace(#value# ,'.'),11,' ') OR a.mspo_policy_no = rpad(replace(#value# ,'.'),14,' '))
               AND a.reg_spaj = b.reg_spaj
               AND b.reg_spaj = c.reg_spaj
               AND c.reg_spaj = d.reg_spaj
               AND d.lbn_id = e.lbn_id 
               AND e.lsbp_id = f.lsbp_id
               AND d.supplier_id = g.supplier_id
               AND d.lhc_id = h.lhc_id
               AND d.lh_id = i.lh_id
               AND h.LHC_ID = i.LHC_ID
               AND a.lspd_id <![CDATA[<>]]> 95
               AND b.lssa_id = 5
               AND d.program_hadiah = 0
	</select>
	
	<select id="elions.bas.selectDataPolisUntukInputHadiah3" parameterClass="string" resultClass="com.ekalife.elions.model.Hadiah">
		SELECT a.reg_spaj, a.mspo_policy_no policy_no, eka.utils.pemegang (a.reg_spaj) pemegang,
               to_char(b.mste_beg_date, 'dd/mm/yyyy') beg_date, to_char(b.mste_end_date, 'dd/mm/yyyy') end_date, 
              to_char(b.mste_tgl_aksep, 'dd/mm/yyyy') tgl_aksep,
               c.msap_address mh_alamat, d.mh_kodepos, d.mh_kota, c.no_hp mh_telepon,
               d.mh_no, d.mh_flag_kirim, d.lhc_id, d.lh_id, h.lhc_nama, i.LH_NAMA, i.LH_HARGA, d.mh_budget, d.mh_harga, d.mh_quantity, 
               d.supplier_id, d.lbn_id, EKA.UTILS.bank(d.lbn_id) bank_name,
               d.mh_rek_no, d.mh_rek_nama, d.lspd_id,
               d.mh_keterangan
          FROM eka.mst_policy a, eka.mst_insured b, eka.mst_address_billing c, eka.mst_hadiah d, eka.lst_hadiah_cat h, eka.lst_hadiah i
         WHERE     (a.reg_spaj = rpad(replace(#value# ,'.'),11,' ') OR a.mspo_policy_no = rpad(replace(#value# ,'.'),14,' '))
               AND a.reg_spaj = b.reg_spaj
               AND b.reg_spaj = c.reg_spaj
               AND c.reg_spaj = d.reg_spaj
               AND d.lhc_id = h.lhc_id
               AND d.lh_id = i.lh_id
               AND h.LHC_ID = i.LHC_ID
               AND a.lspd_id <![CDATA[<>]]> 95
               AND b.lssa_id = 5
               AND d.program_hadiah = 0
	</select>
	
	<select id="elions.bas.selectMasterSupplier" parameterClass="string" resultClass="java.util.HashMap">
		select 
			supplier_id, supplier_name, nvl(dist_name, '-') dist_name, 
			nvl(address, '-') address, 
			nvl(city, '-') city, 
			nvl(phone, '-') phone, 
			nvl(fax, '-') fax, 
			input_date 
		from stok.master_supplier
		where (UPPER(supplier_id) like UPPER('%' || #value# || '%') 
			OR UPPER(supplier_name) like UPPER('%' || #value# || '%')
			OR UPPER(dist_name) like UPPER('%' || #value# || '%')) 
		order by supplier_name	
	</select>
	
	<select id="elions.bas.selectLstHadiah" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Hadiah">
		select lhc_id,
		       lh_id,
		       lh_nama,
		       lh_harga,
		       lh_hari,
		       create_id,
		       create_dt
		  from eka.lst_hadiah where lhc_id = #lhc_id# and lh_id = #lh_id#
	</select>
	
	<select id="elions.bas.selectHadiahHist" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT to_char(create_dt, 'dd/mm/yyyy (hh24:mi:ss)') tgl,
		       eka.utils.user_input (create_id) username,
		       b.lspd_position posisi,
		       keterangan
		  FROM eka.mst_hadiah_hist a, eka.lst_document_position b
		 WHERE a.lspd_id = b.lspd_id(+) and reg_spaj = #reg_spaj# and mh_no = #mh_no# order by create_dt asc	
	</select>
	
	<!-- Show tanggal history -->
	<select id="elions.bas.selecttglHistory" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT to_char(create_dt, 'dd/mm/yyyy (hh24:mi:ss)') tgl,eka.utils.user_input (create_id) username,
               mh_tgl_input, mh_tgl_aksep, mh_tgl_paid, mh_tgl_kirim_vendor, mh_tgl_terima_ajs, mh_tgl_kirim_ajs, mh_tgl_terima_nsbh
          FROM eka.mst_hadiah a
         WHERE reg_spaj = #reg_spaj#	
	</select>
	<!-- END -->
	
	<!-- SELECT PARAMETER-->
	<select id="elions.bas.selectHadiahCek" parameterClass="string" resultClass="com.ekalife.elions.model.Hadiah">
		select a.reg_spaj, a.mspo_policy_no policy_no, eka.utils.pemegang (a.reg_spaj) pemegang,
               to_char(b.mste_beg_date, 'dd/mm/yyyy') beg_date, to_char(b.mste_end_date, 'dd/mm/yyyy') end_date, 
              to_char(b.mste_tgl_aksep, 'dd/mm/yyyy') tgl_aksep, d.supplier_id, d.lbn_id,
               c.msap_address mh_alamat, d.mh_kodepos, d.mh_kota, c.no_hp mh_telepon,
               d.mh_no, d.mh_flag_kirim, d.lhc_id, d.lh_id, h.lhc_nama, i.LH_NAMA, i.LH_HARGA, d.mh_budget, d.mh_harga, d.mh_quantity,
               d.mh_rek_no, d.mh_rek_nama, d.lspd_id,
               d.mh_keterangan
          FROM eka.mst_policy a, eka.mst_insured b, eka.mst_address_billing c, eka.mst_hadiah d, 
                  eka.lst_hadiah_cat h, eka.lst_hadiah i
          WHERE     (a.reg_spaj = rpad(replace(#value# ,'.'),11,' ') OR a.mspo_policy_no = rpad(replace(#value# ,'.'),14,' '))
               AND a.reg_spaj = b.reg_spaj
               AND b.reg_spaj = c.reg_spaj
               AND c.reg_spaj = d.reg_spaj
               AND d.lhc_id = h.lhc_id
               AND d.lh_id = i.lh_id
               AND h.LHC_ID = i.LHC_ID
	</select>

	<select id="elions.bas.selectMstHadiah" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Hadiah">
		select 
		    a.reg_spaj, a.mh_no, a.lhc_id, a.lh_id, a.lspd_id, a.supplier_id, a.mh_flag_kirim, a.mh_budget, a.mh_harga, a.mh_alamat, nvl(a.mh_kota,' ')mh_kota, nvl(a.mh_kodepos,' ')mh_kodepos, a.mh_telepon,
		    a.mh_keterangan, a.mh_quantity, a.lbn_id, a.mh_rek_no, a.mh_rek_nama, a.mh_tgl_input, a.mh_tgl_aksep, a.mh_tgl_paid, a.mh_tgl_kirim_vendor, a.mh_tgl_terima_ajs, 
		    a.mh_tgl_kirim_ajs, a.mh_tgl_terima_nsbh, a.create_id, a.create_dt,
		    b.supplier_name, (d.lsbp_nama || ' ' || c.lbn_nama) bank_name, 
		    a.mh_tgl_kirim_uw, a.mh_tgl_order_purchasing, a.mh_tgl_barang_ready, a.mh_tgl_kirim_ga, a.mh_sn, a.mh_tgl_kirim_hadiah, 
		    a.mh_alamat_kirim, a.mh_kota_kirim, a.mh_kodepos_kirim
		from 
		    eka.mst_hadiah a, stok.master_supplier b, eka.lst_bank c, eka.lst_bank_pusat d
		where
		    a.reg_spaj = rpad(replace(#reg_spaj# ,'.'),11,' ') and a.mh_no = #mh_no#
		    and a.supplier_id = b.supplier_id (+)
		    and a.lbn_id = c.lbn_id (+)
		    and c.lsbp_id = d.lsbp_id (+)
	</select>
	
	<select id="elions.bas.selectMstHadiahRE" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Hadiah">
		select 
		    a.reg_spaj, a.mh_no, a.lhc_id, a.lh_id, a.lspd_id, a.supplier_id, a.mh_flag_kirim, a.mh_budget, a.mh_harga, a.mh_alamat, nvl(a.mh_kota,' ')mh_kota, nvl(a.mh_kodepos,' ')mh_kodepos, a.mh_telepon,
		    a.mh_keterangan, a.mh_quantity, a.lbn_id, a.mh_rek_no, a.mh_rek_nama, a.mh_tgl_input, a.mh_tgl_aksep, a.mh_tgl_paid, a.mh_tgl_kirim_vendor, a.mh_tgl_terima_ajs, 
		    a.mh_tgl_kirim_ajs, a.mh_tgl_terima_nsbh, a.create_id, a.create_dt,
		    b.supplier_name, (d.lsbp_nama || ' ' || c.lbn_nama) bank_name, 
		    a.mh_tgl_kirim_uw, a.mh_tgl_order_purchasing, a.mh_tgl_barang_ready, a.mh_tgl_kirim_ga, a.mh_sn, a.mh_tgl_kirim_hadiah, 
		    a.mh_alamat_kirim, a.mh_kota_kirim, a.mh_kodepos_kirim
		from 
		    eka.mst_hadiah a, stok.master_supplier b, eka.lst_bank c, eka.lst_bank_pusat d
		where
		    a.reg_spaj = rpad(replace(#reg_spaj# ,'.'),11,' ') and a.mh_no = #mh_no#
		    and a.supplier_id = b.supplier_id (+)
		    and a.lbn_id = c.lbn_id (+)
		    and c.lsbp_id = d.lsbp_id (+)
		    and a.lspd_id = 93
	</select>
	
	<select id="elions.bas.selectPositionHadiah" parameterClass="string" resultClass="int">
		select lspd_id from eka.mst_hadiah where reg_spaj = #value#
	</select>
	
	<select id="elions.bas.selectProsesHadiah" parameterClass="string" resultClass="com.ekalife.elions.model.Hadiah">
	    select
	      EKA.UTILS.PEMEGANG (p.REG_SPAJ) pemegang, P.MSPO_BEG_DATE beg_date, P.MSPO_END_DATE end_date, mi.mste_tgl_aksep tgl_aksep, LC.LHC_NAMA, l.lh_nama, H.MH_QUANTITY, H.MH_BUDGET, h.mh_harga, h.mh_flag_kirim
	    from
	      EKA.MST_POLICY p, EKA.MST_HADIAH h, EKA.LST_HADIAH l, eka.lst_hadiah_cat lc, EKA.MST_INSURED mi
	    where
	      P.REG_SPAJ = H.REG_SPAJ 
	        and h.lhc_id = lc.lhc_id
	        and h.lh_id = l.lh_id
	        and l.lhc_id = lc.lhc_id
	        and h.reg_spaj = mi.reg_spaj
	        and h.reg_Spaj = #reg_spaj#
    </select>
  
  	<select id="elions.bas.selectPosisiProsesHadiah" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Hadiah">
	    select
	      	a.reg_spaj, a.mspo_policy_no policy_no, b.mh_no
	    from
	      	EKA.MST_POLICY a, EKA.MST_HADIAH b, EKA.mst_insured c
	    where
	    	b.reg_spaj = c.reg_spaj
	    	and b.program_hadiah = #program_hadiah#
	    	<isEqual property="jenis" compareValue="1">
	    		AND a.reg_spaj = B.REG_SPAJ and b.lspd_id = #lspd_id#
	      		and b.create_dt between (to_date(#begdate#,'dd/mm/yyyy')) and (trunc(to_date(#enddate#,'dd/mm/yyyy')+1))
	    	</isEqual>
	    	<isEqual property="jenis" compareValue="2">
	    		and a.reg_spaj = B.REG_SPAJ and b.lspd_id = #lspd_id#
				and a.reg_spaj = c.reg_spaj
				and c.mste_tgl_aksep between (to_date(#begdate#,'dd/mm/yyyy')) and (trunc(to_date(#enddate#,'dd/mm/yyyy')+1))
	    	</isEqual>
	    	<isEqual property="jenis" compareValue="3">
	    		and a.reg_spaj = B.REG_SPAJ and b.lspd_id = #lspd_id#
				and c.mste_beg_date <![CDATA[>]]>= to_date(#begdate#,'dd/mm/yyyy')
				and c.mste_end_date <![CDATA[<]]>= to_date(#enddate#,'dd/mm/yyyy')
	    	</isEqual>	    	
    </select>
    
    <select id="elions.bas.selectInfoMstHadiah" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Hadiah">
    	select
    		EKA.UTILS.PEMEGANG (a.REG_SPAJ) pemegang, to_char(c.mste_beg_date,'dd/mm/yyyy') beg_date, to_char(c.mste_end_date,'dd/mm/yyyy') end_date,
    		to_char(c.mste_tgl_aksep,'dd/mm/yyyy') tgl_aksep, d.lhc_nama, b.lh_nama, A.MH_QUANTITY, a.mh_harga, a.lspd_id, a.mh_flag_kirim, a.mh_no,
    		a.supplier_id, a.lbn_id, a.mh_sn, a.mh_tgl_kirim_hadiah, to_char(a.mh_tgl_kirim_hadiah, 'dd/MM/yyyy hh24:mi') mh_tgl_kirim_hadiah_str, 
    		a.mh_alamat, nvl(a.mh_kota,' ')mh_kota, nvl(a.mh_kodepos, ' ')mh_kodepos,
    		a.mh_alamat_kirim, nvl(a.mh_kota_kirim,' ')mh_kota_kirim, nvl(a.mh_kodepos_kirim, ' ')mh_kodepos_kirim
    	from
    		eka.mst_hadiah a, eka.lst_hadiah b, eka.mst_insured c, eka.lst_hadiah_cat d
    	where
    		a.reg_spaj = c.reg_spaj and
		    a.lhc_id = d.lhc_id and
		    a.lh_id = b.lh_id and
		    d.lhc_id = b.lhc_id and
		    c.lssa_id = 5 and
		    a.reg_spaj = #reg_spaj#
    </select>
    
    <select id="elions.bas.viewDetailHadiah" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Hadiah">
		<isEqual property="program_hadiah" compareValue="0">
			SELECT 
				a.reg_spaj, eka.utils.pemegang (a.reg_spaj) pemegang, to_char(b.mste_beg_date, 'dd/mm/yyyy') beg_date, 
			    to_char(b.mste_end_date, 'dd/mm/yyyy') end_date, to_char(b.mste_tgl_aksep, 'dd/mm/yyyy') tgl_aksep,
			    d.LHC_NAMA, c.lh_nama, a.mh_quantity, a.mh_harga, a.MH_FLAG_KIRIM jenisK, a.MH_ALAMAT, a.MH_telepon,
			    E.SUPPLIER_NAME, concat(concat(g.lsbp_nama,' '),f.lbn_nama) bank_name, eka.utils.user_input (a.create_id) username,
			    a.mh_tgl_input, a.mh_tgl_aksep, 
			    a.mh_tgl_paid, a.mh_tgl_kirim_vendor, 
			    a.mh_tgl_terima_ajs, a.mh_tgl_kirim_ajs, 
			    a.mh_tgl_terima_nsbh, a.mh_sn, a.mh_tgl_kirim_hadiah
	         FROM 
	         	eka.mst_hadiah a, eka.mst_insured b, eka.lst_hadiah c, eka.lst_hadiah_cat d,STOK.MASTER_SUPPLIER e, eka.lst_bank f, eka.lst_bank_pusat g
	         WHERE
	         	a.reg_spaj=#reg_spaj# and
			    a.mh_no = #mh_no# and
			    A.REG_SPAJ = b.reg_spaj and
			    c.lhc_id = d.lhc_id and
			    a.lhc_id = d.lhc_id and
			    a.lh_id = c.lh_id and
			    A.SUPPLIER_ID = E.SUPPLIER_ID(+) and
			    A.LBN_ID = F.LBN_ID and
			    F.LSBP_ID = G.LSBP_ID and
			    a.program_hadiah = #program_hadiah#
		</isEqual>
		<isEqual property="program_hadiah" compareValue="1">
			SELECT   
			    a.reg_spaj,
			    eka.utils.pemegang (a.reg_spaj) pemegang,
			    TO_CHAR (b.mste_beg_date, 'dd/mm/yyyy') beg_date,
			    TO_CHAR (b.mste_end_date, 'dd/mm/yyyy') end_date,
			    TO_CHAR (b.mste_tgl_aksep, 'dd/mm/yyyy') tgl_aksep,
			    d.LHC_NAMA,
			    c.lh_nama,
			    a.mh_quantity,
			    a.mh_harga,
			    a.MH_ALAMAT,
			    nvl(a.mh_kota,' ')mh_kota,
			    nvl(a.mh_kodepos,' ')mh_kodepos,
			    a.MH_telepon,
			    eka.utils.user_input (a.create_id) username,
			    a.mh_tgl_input,
			    a.mh_tgl_aksep,
			    a.mh_tgl_paid,
			    a.mh_tgl_terima_nsbh,
			    a.mh_tgl_kirim_uw,
			    a.mh_tgl_order_purchasing,
			    a.mh_tgl_barang_ready,
			    a.mh_tgl_kirim_ga,
			    a.mh_sn,
			    a.mh_tgl_kirim_hadiah
			FROM   
			    eka.mst_hadiah a,
			    eka.mst_insured b,
			    eka.lst_hadiah c,
			    eka.lst_hadiah_cat d
			WHERE       
			    a.reg_spaj = #reg_spaj#
			    AND a.mh_no = #mh_no#
			    AND A.REG_SPAJ = b.reg_spaj
			    AND c.lhc_id = d.lhc_id
			    AND a.lhc_id = d.lhc_id
			    AND a.lh_id = c.lh_id
			    AND a.program_hadiah = #program_hadiah#
		</isEqual>
	</select>
	
	<!-- report claim -->
	<select id="elions.bas.selectreportDetailClaim" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<!-- perubahan pada umur, sex dan mspe_date_birth, table n -->
		select a.reg_spaj, a.mspo_policy_no, c.mcl_first tertanggung, (case when n.reg_spaj is null then EKA.UTILS.Pemegang(a.reg_spaj) else n.pemegang end) pemegang, eka.f_lsdbs(h.reg_spaj, h.lsbs_id, h.lsdbs_number) lsdbs_name, 
				<!-- (case when d.mscl_client_id = b.mste_insured then b.mste_age else a.mspo_age end) umur, -->  
				(case when n.tgl_lahir is null 
			          then (case when d.mscl_client_id = b.mste_insured then b.mste_age else a.mspo_age end)
			          else (trunc(months_between(b.mste_beg_date,n.tgl_lahir)/12) + (case when trunc(mod(months_between(b.mste_beg_date,n.tgl_lahir),12)) >= 6 then 1 else 0 end))
			          end)umur,
		        (case when n.sex is null
				      then (case when a.lstb_id = 2 then (case when c.mspe_sex = 0 then 'P' when c.mspe_sex = 1 then 'L' else '-' end) 
														      else (case when d.mscl_client_id = b.mste_insured 
														                 then (case when c.mspe_sex = 0 then 'P'                     
														                        when c.mspe_sex = 1 then 'L' else '-' end)  
														                 else (select (case when mspe_sex = 0 then 'P'                     
														                                    when mspe_sex = 1 then 'L' else '-' end) from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
				      else n.sex end)sex,
		        e.mdc_tgl_mati tgl_meninggal, 
		        <!-- (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) mspe_date_birth, -->
		        (case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)mspe_date_birth, 
		        d.mscl_tgl_claim tgl_claim,b.MSTE_BEG_DATE, g.mbc_tgl_bayar tgl_bayar, f.lst_lsd_id icd_code, f.lsd_desc icd_desc,
		        e.mdc_sebab sebab_kematian, h.mspr_tsi UP, a.mspo_ins_period masa_asuransi , h.lsbs_id, h.lsdbs_number, 
		        <!-- (select mspr_extra from eka.mst_product_insured where reg_spaj = a.reg_spaj and lsbs_id between 900 and 999) extra_premi, --> 
		        (case when n.extra_premi is null then o.mspr_rate else to_number(n.extra_premi) end) extra_premi,
		        a.mspo_age umur_pi,  
		        (case 
		            when b.mste_medical = 0 then 'NM'
		            when b.mste_medical = 1 then 'M'
		            else 'UNDIFINED'
		          end) MN, g.mbc_jlh_bayar, g.mbc_kurs_bayar,
		        trim(i.st_expl) status_claim,
		        (select mbc_jlh_bayar from eka.mst_bayar_claim where reg_spaj = d.reg_spaj and mste_insured_no = d.mste_insured_no and mscl_number = d.mscl_number and mbc_kurs_bayar = '01') byr_rupiah,
		        (select mbc_jlh_bayar from eka.mst_bayar_claim where reg_spaj = d.reg_spaj and mste_insured_no = d.mste_insured_no and mscl_number = d.mscl_number and mbc_kurs_bayar = '02') byr_dollar,
		        <!-- (trunc( months_between( d.mscl_tgl_claim, b.MSTE_BEG_DATE ) ))umur_polis, -->
		        ((trunc( months_between( e.mdc_tgl_mati, b.MSTE_BEG_DATE ) ))+(case when (trunc(e.mdc_tgl_mati-add_months(b.MSTE_BEG_DATE,trunc(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE),12)))))>0 then 1 else 0 end))umur_polis,
		        <!-- c.mkl_kerja, -->
		        (case when a.lca_id='09' and a.lwk_id='21' and a.lsrg_id='01'
		            then 'BANK SINARMAS '||upper((select distinct z.nama_cabang
		                from eka.mst_reff_bii y,
		                    eka.lst_cabang_bii z
		                where y.lcb_penutup = z.lcb_no and y.reg_spaj = a.reg_spaj))
		            else (case when a.lstb_id=2 then cabang_mri.MCL_FIRST||' '||cabang_mri.MCL_MIDDLE||' '||cabang_mri.MCL_LAST else cabang_ind.lsrg_nama end)
		            end)cabang,
		        <!-- m.non_med_bb berat_badan,
		        m.non_med_tb tinggi_badan -->
		        (case when (select s.lgj_note
						      from  eka.mst_policy o,
						      		eka.mst_insured p, eka.mst_client_new q,
						      		eka.mst_person r, eka.lst_grp_job s
						      where o.reg_spaj = p.reg_spaj
						      		and p.mste_insured = q.mcl_id
						      		and r.mcl_id = q.mcl_id
						      		and r.lgj_id = s.lgj_id
						      		and o.reg_spaj = a.reg_spaj) is null then c.mkl_kerja 
		      		  else (select s.lgj_note
						      from  eka.mst_policy o,
						      		eka.mst_insured p, eka.mst_client_new q,
						      		eka.mst_person r, eka.lst_grp_job s
						      where o.reg_spaj = p.reg_spaj
						      		and p.mste_insured = q.mcl_id
						      		and r.mcl_id = q.mcl_id
						      		and r.lgj_id = s.lgj_id
						      		and o.reg_spaj = a.reg_spaj) end)mkl_kerja,
                (case when a.lstb_id = 1 then m.non_med_tb
                      else (select msadm_tinggi from EKA.MST_ADD_DESC_MRI where reg_spaj = a.reg_spaj) end)tinggi_badan,
                (case when a.lstb_id = 1 then m.non_med_bb
                      else (select msadm_berat from EKA.MST_ADD_DESC_MRI where reg_spaj = a.reg_spaj) end)berat_badan
		from eka.mst_policy a, 
		    eka.mst_insured b, 
		    eka.mst_client_new c, 
		    eka.mst_claim d,
		    eka.mst_det_claim e, 
		    eka.lst_diagnosis f, 
		    eka.mst_bayar_claim g, 
		    eka.mst_product_insured h, 
		    eka.id_stat_acp i, 
		    eka.lst_det_bisnis j,
		    eka.mst_det_customer_group_mri k,
		    eka.lst_customer_group_mri l,
		    eka.mst_client cabang_mri,
		    (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
		        x.lca_id = y.lca_id
		        and x.lwk_id = y.lwk_id
		        and x.lsrg_id = y.lsrg_id)cabang_ind,
		    (select * from eka.mst_worksheet where insured_no=1) m,
            (select distinct
	                x.reg_spaj, y.msde_old2 pemegang,
	                (select msde_old5 from eka.mst_det_endors where lsje_id in (30,37) and msen_endors_no = x.msen_endors_no)extra_premi,
	                (select decode(msde_old1,'Wanita','P','Pria','L','') from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex,
	                (select decode(msde_old1,'Wanita',0,'Pria',1,2) from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex2,
	                (select to_date(msde_old2,'dd/MM/yyyy') from eka.mst_det_endors where lsje_id = 11 and msen_endors_no = x.msen_endors_no)tgl_lahir
	            from
	                eka.mst_endors x,
	                eka.mst_det_endors y
	            where
	                x.msen_endors_no = y.msen_endors_no
	                and y.lsje_id in (2,20)
	                and x.msen_alasan like '%KLAIM%')n,
	        (select * from eka.mst_product_insured where lsbs_id between 900 and 999) o
		where
			  <isEqual property="polis" compareValue="ALL">
			  	a.lstb_id in (1,2)
			  </isEqual> 
			  <isEqual property="polis" compareValue="INDIVIDU">
			  	a.lstb_id in (1)
			  </isEqual>
			  <isEqual property="polis" compareValue="MRI">
			  	a.lstb_id in (2)
			  </isEqual>
			  and a.reg_spaj = b.reg_spaj
			  and b.mste_insured = c.mcl_id
			  and b.reg_spaj = d.reg_spaj
			  and b.mste_insured_no = d.mste_insured_no
			  and d.reg_spaj = e.reg_spaj
			  and d.mste_insured_no = e.mste_insured_no
			  and d.mscl_number = e.mscl_number
			  and e.lsdp_id = f.lst_lsd_id
			  and d.reg_spaj = g.reg_spaj
			  and d.mste_insured_no = g.mste_insured_no
			  and d.mscl_number = g.mscl_number
			  and b.reg_spaj = h.reg_spaj
			  and b.mste_insured_no = h.mste_insured_no
			  and d.st_acp = i.st_acp
			  and h.lsbs_id = j.lsbs_id
			  and h.lsdbs_number = j.lsdbs_number
			  and a.mspo_customer = cabang_mri.mcl_id(+)
			  and a.reg_spaj = cabang_ind.reg_spaj(+)
			  and a.reg_spaj = m.reg_spaj(+)
			  and a.MSPO_CUSTOMER = k.MDC_MCL_ID(+)
			  and k.MDC_GROUP =  l.LCG_GROUP(+)
			  and a.reg_spaj = n.reg_spaj(+)
              and a.reg_spaj = o.reg_spaj (+)
			  and d.lstc_id = 1
			  and h.lsbs_id <![CDATA[<=]]>599
			  and h.lsbs_id <![CDATA[!=]]>400
			  <isNotEmpty property="grup_bank">
				<isNotEqual property="grup_bank" compareValue="ALL" prepend=" AND ">
					l.LCG_GROUP = #grup_bank#
				</isNotEqual>
			 </isNotEmpty>
			 <isNotEmpty property="nama_bank">
				<isNotEqual property="nama_bank" compareValue="ALL" prepend=" AND ">
					cabang_mri.MCL_ID = #nama_bank#
				</isNotEqual>
			 </isNotEmpty>    
			 <isNotEmpty property="jenis_periode">
			 	<isEqual property="jenis_periode" compareValue="1">
			 		and d.mscl_tgl_input between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="2">
			 		and trunc(e.mdc_tgl_mati) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="3">
			  		and trunc(g.mbc_tgl_bayar) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			  	</isEqual>
			 </isNotEmpty>
	</select>
	
	<select id="elions.bas.selectreportClaimBasedAgeDeath" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select f.lst_lsd_id,f.lsd_desc,
			<!-- sum(case when c.mspe_sex=1 and (trunc(months_between(e.mdc_tgl_mati,C.MSPE_DATE_BIRTH)/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,C.MSPE_DATE_BIRTH),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 2 and 5 then 1 else 0 end) usia_2_5_M, -->
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 0 and 1 then 1 else 0 end) usia_0_1_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 0 and 1 then 1 else 0 end) usia_0_1_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 2 and 5 then 1 else 0 end) usia_2_5_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 2 and 5 then 1 else 0 end) usia_2_5_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 6 and 10 then 1 else 0 end) usia_6_10_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 6 and 10 then 1 else 0 end) usia_6_10_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 11 and 15 then 1 else 0 end) usia_11_15_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 11 and 15 then 1 else 0 end) usia_11_15_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 16 and 20 then 1 else 0 end) usia_16_20_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 16 and 20 then 1 else 0 end) usia_16_20_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 21 and 25 then 1 else 0 end) usia_21_25_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 21 and 25 then 1 else 0 end) usia_21_25_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 26 and 30 then 1 else 0 end) usia_26_30_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 26 and 30 then 1 else 0 end) usia_26_30_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 31 and 35 then 1 else 0 end) usia_31_35_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 31 and 35 then 1 else 0 end) usia_31_35_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 36 and 40 then 1 else 0 end) usia_36_40_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 36 and 40 then 1 else 0 end) usia_36_40_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 41 and 45 then 1 else 0 end) usia_41_45_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 41 and 45 then 1 else 0 end) usia_41_45_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 46 and 50 then 1 else 0 end) usia_46_50_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 46 and 50 then 1 else 0 end) usia_46_50_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 51 and 55 then 1 else 0 end) usia_51_55_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 51 and 55 then 1 else 0 end) usia_51_55_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 56 and 60 then 1 else 0 end) usia_56_60_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 56 and 60 then 1 else 0 end) usia_56_60_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 61 and 65 then 1 else 0 end) usia_61_65_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 61 and 65 then 1 else 0 end) usia_61_65_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 66 and 70 then 1 else 0 end) usia_66_70_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 66 and 70 then 1 else 0 end) usia_66_70_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 71 and 75 then 1 else 0 end) usia_71_75_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 71 and 75 then 1 else 0 end) usia_71_75_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) <![CDATA[>]]>75 then 1 else 0 end) usia_75up_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 and (trunc(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end))/12)+(case when trunc(mod(months_between(e.mdc_tgl_mati,(case when n.tgl_lahir is null then (case when d.mscl_client_id = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else n.tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) <![CDATA[>]]>75 then 1 else 0 end) usia_75up_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=1 then 1 else 0 end) sum_M,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 then 1 else 0 end) sum_F,
		    sum(case when (case when n.sex2 is null 
								  then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
								  else n.sex2 end)=0 or c.mspe_sex=1 then 1 else 0 end) sum_all
		from eka.mst_policy a, eka.mst_insured b, eka.mst_client_new c, eka.mst_claim d,
		         eka.mst_det_claim e, eka.lst_diagnosis f,
		         eka.mst_bayar_claim g,
		         eka.mst_det_customer_group_mri k,
			     eka.lst_customer_group_mri l,
			     eka.mst_client cabang_mri,
			     (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
			        x.lca_id = y.lca_id
			        and x.lwk_id = y.lwk_id
			        and x.lsrg_id = y.lsrg_id)cabang_ind,
			        <!-- tambahan -->
			    (select * from eka.mst_worksheet where insured_no=1) m,
	            (select distinct
		                x.reg_spaj, y.msde_old2 pemegang,
		                (select msde_old5 from eka.mst_det_endors where lsje_id in (30,37) and msen_endors_no = x.msen_endors_no)extra_premi,
		                (select decode(msde_old1,'Wanita','P','Pria','L','') from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex,
		                (select decode(msde_old1,'Wanita',0,'Pria',1,2) from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex2,
		                (select to_date(msde_old2,'dd/MM/yyyy') from eka.mst_det_endors where lsje_id = 11 and msen_endors_no = x.msen_endors_no)tgl_lahir
		            from
		                eka.mst_endors x,
		                eka.mst_det_endors y
		            where
		                x.msen_endors_no = y.msen_endors_no
		                and y.lsje_id in (2,20)
		                and x.msen_alasan like '%KLAIM%')n
		where 
			  <isEqual property="polis" compareValue="ALL">
			  	a.lstb_id in (1,2)
			  </isEqual> 
			  <isEqual property="polis" compareValue="INDIVIDU">
			  	a.lstb_id in (1)
			  </isEqual>
			  <isEqual property="polis" compareValue="MRI">
			  	a.lstb_id in (2)
			  </isEqual>
	          and a.reg_spaj = b.reg_spaj
	          and b.mste_insured = c.mcl_id
	          and b.reg_spaj = d.reg_spaj
	          and b.mste_insured_no = d.mste_insured_no
	          and d.reg_spaj = e.reg_spaj
	          and d.mste_insured_no = e.mste_insured_no
	          and d.mscl_number = e.mscl_number
	          and e.lsdp_id = f.lst_lsd_id
	          and d.reg_spaj = g.reg_spaj
			  and d.mste_insured_no = g.mste_insured_no
			  and d.mscl_number = g.mscl_number
	          and a.mspo_customer = cabang_mri.mcl_id(+)
			  and a.reg_spaj = cabang_ind.reg_spaj(+)
			  <!-- and a.MSPO_CUSTOMER = k.MDC_MCL_ID(+)
			  and k.MDC_GROUP =  l.LCG_GROUP(+)
	          and d.lstc_id = 1 -->
	          and a.reg_spaj = m.reg_spaj(+)
			  and a.MSPO_CUSTOMER = k.MDC_MCL_ID(+)
			  and k.MDC_GROUP =  l.LCG_GROUP(+)
			  and a.reg_spaj = n.reg_spaj(+)
			  and d.lstc_id = 1
	          <isNotEmpty property="grup_bank">
				<isNotEqual property="grup_bank" compareValue="ALL" prepend=" AND ">
					l.LCG_GROUP = #grup_bank#
				</isNotEqual>
			  </isNotEmpty>
			  <isNotEmpty property="nama_bank">
				<isNotEqual property="nama_bank" compareValue="ALL" prepend=" AND ">
					cabang_mri.MCL_ID = #nama_bank#
				</isNotEqual>
			  </isNotEmpty>    
			  <isNotEmpty property="jenis_periode">
			  	<isEqual property="jenis_periode" compareValue="1">
			  		and d.mscl_tgl_input between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			  	</isEqual>
			  	<isEqual property="jenis_periode" compareValue="2">
			  		and trunc(e.mdc_tgl_mati) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			  	</isEqual>
			  	<isEqual property="jenis_periode" compareValue="3">
			  		and trunc(g.mbc_tgl_bayar) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			  	</isEqual>
			  </isNotEmpty>
	          group by f.lst_lsd_id,f.lsd_desc
	          order by f.lst_lsd_id asc
	</select>
	
	<select id="elions.bas.selectreportClaimBasedPolicyDuration" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select f.lst_lsd_id,f.lsd_desc, 
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) between -1 and 1 then 1 else 0 end) bln_1,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) = 2 then 1 else 0 end) bln_2,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) = 3 then 1 else 0 end) bln_3,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) = 4 then 1 else 0 end) bln_4,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) = 5 then 1 else 0 end) bln_5,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) = 6 then 1 else 0 end) bln_6,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) = 7 then 1 else 0 end) bln_7,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) = 8 then 1 else 0 end) bln_8,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) = 9 then 1 else 0 end) bln_9,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) = 10 then 1 else 0 end) bln_10,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) = 11 then 1 else 0 end) bln_11,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) = 12 then 1 else 0 end) year_1,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) between 13 and 24 then 1 else 0 end) year_2,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) between 25 and 36 then 1 else 0 end) year_3,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) between 37 and 48 then 1 else 0 end) year_4,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) between 49 and 60 then 1 else 0 end) year_5,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) between 61 and 120 then 1 else 0 end) year_6_10,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) <![CDATA[>]]>121 then 1 else 0 end) year_10up,
		    sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(e.mdc_tgl_mati,0)), LAST_DAY(ADD_MONTHS(B.MSTE_BEG_DATE,0)) ) ) <![CDATA[>=]]>-1 then 1 else 0 end) sum_all
		from eka.mst_policy a, eka.mst_insured b, eka.mst_client_new c, eka.mst_claim d,
		         eka.mst_det_claim e, eka.lst_diagnosis f,
		         eka.mst_bayar_claim g,
		         eka.mst_det_customer_group_mri k,
			     eka.lst_customer_group_mri l,
			     eka.mst_client cabang_mri,
			     (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
			        x.lca_id = y.lca_id
			        and x.lwk_id = y.lwk_id
			        and x.lsrg_id = y.lsrg_id)cabang_ind
		where 
			  <isEqual property="polis" compareValue="ALL">
			  	a.lstb_id in (1,2)
			  </isEqual> 
			  <isEqual property="polis" compareValue="INDIVIDU">
			  	a.lstb_id in (1)
			  </isEqual>
			  <isEqual property="polis" compareValue="MRI">
			  	a.lstb_id in (2)
			  </isEqual>
	          and a.reg_spaj = b.reg_spaj
	          and b.mste_insured = c.mcl_id
	          and b.reg_spaj = d.reg_spaj
	          and b.mste_insured_no = d.mste_insured_no
	          and d.reg_spaj = e.reg_spaj
	          and d.mste_insured_no = e.mste_insured_no
	          and d.mscl_number = e.mscl_number
	          and e.lsdp_id = f.lst_lsd_id
	          and d.reg_spaj = g.reg_spaj
			  and d.mste_insured_no = g.mste_insured_no
			  and d.mscl_number = g.mscl_number
	          and a.mspo_customer = cabang_mri.mcl_id(+)
			  and a.reg_spaj = cabang_ind.reg_spaj(+)
			  and a.MSPO_CUSTOMER = k.MDC_MCL_ID(+)
			  and k.MDC_GROUP =  l.LCG_GROUP(+)
	          and d.lstc_id = 1
	          <isNotEmpty property="grup_bank">
				<isNotEqual property="grup_bank" compareValue="ALL" prepend=" AND ">
					l.LCG_GROUP = #grup_bank#
				</isNotEqual>
			  </isNotEmpty>
			  <isNotEmpty property="nama_bank">
				<isNotEqual property="nama_bank" compareValue="ALL" prepend=" AND ">
					cabang_mri.MCL_ID = #nama_bank#
				</isNotEqual>
			  </isNotEmpty>
			  <isNotEmpty property="jenis_periode">
			  	<isEqual property="jenis_periode" compareValue="1">
			  		and d.mscl_tgl_input between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			  	</isEqual>
			  	<isEqual property="jenis_periode" compareValue="2">
			  		and trunc(e.mdc_tgl_mati) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			  	</isEqual>
			  	<isEqual property="jenis_periode" compareValue="3">
			  		and trunc(g.mbc_tgl_bayar) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			  	</isEqual>
			  </isNotEmpty>
	          group by f.lst_lsd_id,f.lsd_desc
	          order by f.lst_lsd_id asc
	</select>
	
	<select id="elions.bas.selectreportCODByBranch" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
			(case when a.lstb_id=2 then cabang_mri.MCL_FIRST||' '||cabang_mri.MCL_MIDDLE||' '||cabang_mri.MCL_LAST else (case when cabang_sinarmas.cabang is null then cabang_ind.lsrg_nama else cabang_sinarmas.cabang end) end)cabang,
		    <!-- sum(case when c.mspe_sex=0 or c.mspe_sex=1 then 1 else 0 end) total_case, -->
		    count(a.reg_spaj) total_case,
		    sum((select mbc_jlh_bayar from eka.mst_bayar_claim where reg_spaj = d.reg_spaj and mste_insured_no = d.mste_insured_no and mscl_number = d.mscl_number and mbc_kurs_bayar = '01')) byr_rupiah,
		    sum((select mbc_jlh_bayar from eka.mst_bayar_claim where reg_spaj = d.reg_spaj and mste_insured_no = d.mste_insured_no and mscl_number = d.mscl_number and mbc_kurs_bayar = '02')) byr_dollar,
		    rtrim (xmlagg (xmlelement (e,(case when i.st_acp = 15 then e.mdc_sebab || ',' else '' end) )).extract ('//text()'), ',')sebab,
		    sum(case when i.st_acp = 15 then 1 else 0 end) tolak
		from eka.mst_policy a, 
		    eka.mst_insured b, 
		    eka.mst_client_new c, 
		    eka.mst_claim d,
		    eka.mst_det_claim e, 
		    eka.lst_diagnosis f, 
		    eka.mst_bayar_claim g, 
		    eka.mst_product_insured h, 
		    eka.id_stat_acp i, 
		    eka.lst_det_bisnis j,
		    eka.mst_det_customer_group_mri k,
		    eka.lst_customer_group_mri l,
		    eka.mst_client cabang_mri,
		    (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
		        x.lca_id = y.lca_id
		        and x.lwk_id = y.lwk_id
		        and x.lsrg_id = y.lsrg_id)cabang_ind,
		    (select * from eka.mst_worksheet where insured_no=1) m,
		    (select distinct
		            a.reg_spaj, 'BANK SINARMAS'||' '||upper(c.nama_cabang) cabang
		        from 
		            eka.mst_policy a,
		            eka.mst_reff_bii b,
		            eka.lst_cabang_bii c
		        where
		            a.reg_spaj = b.reg_spaj
		            and b.lcb_no = c.lcb_no
		            and c.jenis = 2)cabang_sinarmas
		where
			  <isEqual property="polis" compareValue="ALL">
			  	a.lstb_id in (1,2)
			  </isEqual> 
			  <isEqual property="polis" compareValue="INDIVIDU">
			  	a.lstb_id in (1)
			  </isEqual>
			  <isEqual property="polis" compareValue="MRI">
			  	a.lstb_id in (2)
			  </isEqual>
			  and a.reg_spaj = b.reg_spaj
			  and b.mste_insured = c.mcl_id
			  and b.reg_spaj = d.reg_spaj
			  and b.mste_insured_no = d.mste_insured_no
			  and d.reg_spaj = e.reg_spaj
			  and d.mste_insured_no = e.mste_insured_no
			  and d.mscl_number = e.mscl_number
			  and e.lsdp_id = f.lst_lsd_id
			  and d.reg_spaj = g.reg_spaj
			  and d.mste_insured_no = g.mste_insured_no
			  and d.mscl_number = g.mscl_number
			  and b.reg_spaj = h.reg_spaj
			  and b.mste_insured_no = h.mste_insured_no
			  and d.st_acp = i.st_acp
			  and h.lsbs_id = j.lsbs_id
			  and h.lsdbs_number = j.lsdbs_number
			  and a.mspo_customer = cabang_mri.mcl_id(+)
			  and a.reg_spaj = cabang_ind.reg_spaj(+)
			  and a.reg_spaj = m.reg_spaj(+)
			  and a.MSPO_CUSTOMER = k.MDC_MCL_ID(+)
			  and k.MDC_GROUP =  l.LCG_GROUP(+)
			  and a.reg_spaj = cabang_sinarmas.reg_spaj(+)
			  and d.lstc_id = 1
			  and h.lsbs_id <![CDATA[<=]]>599
			  and h.lsbs_id <![CDATA[!=]]>400    
			  <isNotEmpty property="grup_bank">
				<isNotEqual property="grup_bank" compareValue="ALL" prepend=" AND ">
					l.LCG_GROUP = #grup_bank#
				</isNotEqual>
			  </isNotEmpty>
			  <isNotEmpty property="nama_bank">
				<isNotEqual property="nama_bank" compareValue="ALL" prepend=" AND ">
					cabang_mri.MCL_ID = #nama_bank#
				</isNotEqual>
			  </isNotEmpty>
	          <isNotEmpty property="jenis_periode">
			 	<isEqual property="jenis_periode" compareValue="1">
			 		and d.mscl_tgl_input between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="2">
			 		and trunc(e.mdc_tgl_mati) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="3">
			  		and trunc(g.mbc_tgl_bayar) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			  	</isEqual>
			 </isNotEmpty>
			  group by (case when a.lstb_id=2 then cabang_mri.MCL_FIRST||' '||cabang_mri.MCL_MIDDLE||' '||cabang_mri.MCL_LAST else (case when cabang_sinarmas.cabang is null then cabang_ind.lsrg_nama else cabang_sinarmas.cabang end) end)
	</select>
	
	<select id="elions.bas.selectreportClaimByCOD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
			f.lst_lsd_id,f.lsd_desc,
		    sum(case when (case when n.sex2 is null
							      then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
							      else n.sex2 end)=1 then 1 else 0 end) MALE,
		    sum(case when (case when n.sex2 is null
							      then (case when a.lstb_id = 2 then c.mspe_sex else (case when d.mscl_client_id = b.mste_insured then c.mspe_sex  
									         else (select mspe_sex from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) end)
							      else n.sex2 end)=0 then 1 else 0 end) FEMALE,
		    sum((select mbc_jlh_bayar from eka.mst_bayar_claim where reg_spaj = d.reg_spaj and mste_insured_no = d.mste_insured_no and mscl_number = d.mscl_number and mbc_kurs_bayar = '01')) byr_rupiah,
		    sum((select mbc_jlh_bayar from eka.mst_bayar_claim where reg_spaj = d.reg_spaj and mste_insured_no = d.mste_insured_no and mscl_number = d.mscl_number and mbc_kurs_bayar = '02')) byr_dollar
		from eka.mst_policy a, 
		    eka.mst_insured b, 
		    eka.mst_client_new c, 
		    eka.mst_claim d,
		    eka.mst_det_claim e, 
		    eka.lst_diagnosis f, 
		    eka.mst_bayar_claim g, 
		    eka.mst_product_insured h, 
		    eka.id_stat_acp i, 
		    eka.lst_det_bisnis j,
		    eka.mst_det_customer_group_mri k,
		    eka.lst_customer_group_mri l,
		    eka.mst_client cabang_mri,
		    (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
		        x.lca_id = y.lca_id
		        and x.lwk_id = y.lwk_id
		        and x.lsrg_id = y.lsrg_id)cabang_ind,
		    (select * from eka.mst_worksheet where insured_no=1) m,
		    (select distinct
		                x.reg_spaj, y.msde_old2 pemegang,
		                (select msde_old5 from eka.mst_det_endors where lsje_id in (30,37) and msen_endors_no = x.msen_endors_no)extra_premi,
		                (select decode(msde_old1,'Wanita','P','Pria','L','') from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex,
		                (select decode(msde_old1,'Wanita',0,'Pria',1,2) from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex2,
		                (select to_date(msde_old2,'dd/MM/yyyy') from eka.mst_det_endors where lsje_id = 11 and msen_endors_no = x.msen_endors_no)tgl_lahir
		            from
		                eka.mst_endors x,
		                eka.mst_det_endors y
		            where
		                x.msen_endors_no = y.msen_endors_no
		                and y.lsje_id in (2,20)
		                and x.msen_alasan like '%KLAIM%')n
		where
			  <isEqual property="polis" compareValue="ALL">
			  	a.lstb_id in (1,2)
			  </isEqual> 
			  <isEqual property="polis" compareValue="INDIVIDU">
			  	a.lstb_id in (1)
			  </isEqual>
			  <isEqual property="polis" compareValue="MRI">
			  	a.lstb_id in (2)
			  </isEqual>
			  and a.reg_spaj = b.reg_spaj
			  and b.mste_insured = c.mcl_id
			  and b.reg_spaj = d.reg_spaj
			  and b.mste_insured_no = d.mste_insured_no
			  and d.reg_spaj = e.reg_spaj
			  and d.mste_insured_no = e.mste_insured_no
			  and d.mscl_number = e.mscl_number
			  and e.lsdp_id = f.lst_lsd_id
			  and d.reg_spaj = g.reg_spaj
			  and d.mste_insured_no = g.mste_insured_no
			  and d.mscl_number = g.mscl_number
			  and b.reg_spaj = h.reg_spaj
			  and b.mste_insured_no = h.mste_insured_no
			  and d.st_acp = i.st_acp
			  and h.lsbs_id = j.lsbs_id
			  and h.lsdbs_number = j.lsdbs_number
			  and a.mspo_customer = cabang_mri.mcl_id(+)
			  and a.reg_spaj = cabang_ind.reg_spaj(+)
			  and a.reg_spaj = m.reg_spaj(+)
			  and a.MSPO_CUSTOMER = k.MDC_MCL_ID(+)
			  and k.MDC_GROUP =  l.LCG_GROUP(+)
			  and a.reg_spaj = n.reg_spaj(+)
			  and d.lstc_id = 1
			  and h.lsbs_id <![CDATA[<=]]>599
			  and h.lsbs_id <![CDATA[!=]]>400    
			  <isNotEmpty property="grup_bank">
				<isNotEqual property="grup_bank" compareValue="ALL" prepend=" AND ">
					l.LCG_GROUP = #grup_bank#
				</isNotEqual>
			  </isNotEmpty>
			  <isNotEmpty property="nama_bank">
				<isNotEqual property="nama_bank" compareValue="ALL" prepend=" AND ">
					cabang_mri.MCL_ID = #nama_bank#
				</isNotEqual>
			  </isNotEmpty>
	          <isNotEmpty property="jenis_periode">
			 	<isEqual property="jenis_periode" compareValue="1">
			 		and d.mscl_tgl_input between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="2">
			 		and trunc(e.mdc_tgl_mati) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="3">
			  		and trunc(g.mbc_tgl_bayar) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			  	</isEqual>
			 </isNotEmpty>
			  group by f.lst_lsd_id,f.lsd_desc
			  order by 1
	</select>
	
	<select id="elions.bas.selectreportClaimByCOD_TotalCase" parameterClass="java.util.HashMap" resultClass="int">
		select 
			<!-- sum(case when c.mspe_sex=1 or c.mspe_sex=0 then 1 else 0 end) TOTAL -->
			count(a.reg_spaj) TOTAL
		from eka.mst_policy a, 
		    eka.mst_insured b, 
		    eka.mst_client_new c, 
		    eka.mst_claim d,
		    eka.mst_det_claim e, 
		    eka.lst_diagnosis f, 
		    eka.mst_bayar_claim g, 
		    eka.mst_product_insured h, 
		    eka.id_stat_acp i, 
		    eka.lst_det_bisnis j,
		    eka.mst_det_customer_group_mri k,
		    eka.lst_customer_group_mri l,
		    eka.mst_client cabang_mri,
		    (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
		        x.lca_id = y.lca_id
		        and x.lwk_id = y.lwk_id
		        and x.lsrg_id = y.lsrg_id)cabang_ind,
		    (select * from eka.mst_worksheet where insured_no=1) m
		where
			  <isEqual property="polis" compareValue="ALL">
			  	a.lstb_id in (1,2)
			  </isEqual> 
			  <isEqual property="polis" compareValue="INDIVIDU">
			  	a.lstb_id in (1)
			  </isEqual>
			  <isEqual property="polis" compareValue="MRI">
			  	a.lstb_id in (2)
			  </isEqual>
			  and a.reg_spaj = b.reg_spaj
			  and b.mste_insured = c.mcl_id
			  and b.reg_spaj = d.reg_spaj
			  and b.mste_insured_no = d.mste_insured_no
			  and d.reg_spaj = e.reg_spaj
			  and d.mste_insured_no = e.mste_insured_no
			  and d.mscl_number = e.mscl_number
			  and e.lsdp_id = f.lst_lsd_id
			  and d.reg_spaj = g.reg_spaj
			  and d.mste_insured_no = g.mste_insured_no
			  and d.mscl_number = g.mscl_number
			  and b.reg_spaj = h.reg_spaj
			  and b.mste_insured_no = h.mste_insured_no
			  and d.st_acp = i.st_acp
			  and h.lsbs_id = j.lsbs_id
			  and h.lsdbs_number = j.lsdbs_number
			  and a.mspo_customer = cabang_mri.mcl_id(+)
			  and a.reg_spaj = cabang_ind.reg_spaj(+)
			  and a.reg_spaj = m.reg_spaj(+)
			  and a.MSPO_CUSTOMER = k.MDC_MCL_ID(+)
			  and k.MDC_GROUP =  l.LCG_GROUP(+)
			  and d.lstc_id = 1
			  and h.lsbs_id <![CDATA[<=]]>599
			  and h.lsbs_id <![CDATA[!=]]>400    
			  <isNotEmpty property="grup_bank">
				<isNotEqual property="grup_bank" compareValue="ALL" prepend=" AND ">
					l.LCG_GROUP = #grup_bank#
				</isNotEqual>
			  </isNotEmpty>
			  <isNotEmpty property="nama_bank">
				<isNotEqual property="nama_bank" compareValue="ALL" prepend=" AND ">
					cabang_mri.MCL_ID = #nama_bank#
				</isNotEqual>
			  </isNotEmpty>
	          <isNotEmpty property="jenis_periode">
			 	<isEqual property="jenis_periode" compareValue="1">
			 		and d.mscl_tgl_input between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="2">
			 		and trunc(e.mdc_tgl_mati) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="3">
			  		and trunc(g.mbc_tgl_bayar) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			  	</isEqual>
			 </isNotEmpty>
	</select>
	
	<select id="elions.bas.selectreportClaimByMedis" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
			(case 
		        when b.mste_medical = 0 then 'Non Medis'
		        when b.mste_medical = 1 then 'Medis'
		        else 'UNDIFINED'
		      end)Medical,
		    nvl((case 
		        when b.mste_medical = 0 then 0
		        when b.mste_medical = 1 then 1
		        else 2
		      end),0)Medical_nmbr,        
		    count(a.reg_spaj) total_polis,
		    '' total_polis2,
		    '' extra_premi2,
		    count((select mspr_extra from eka.mst_product_insured where reg_spaj = a.reg_spaj and lsbs_id between 900 and 999))extra_premi,
		    f.lst_lsd_id icd,
		    e.mdc_sebab sebab,  
		    sum((select mbc_jlh_bayar from eka.mst_bayar_claim where reg_spaj = d.reg_spaj and mste_insured_no = d.mste_insured_no and mscl_number = d.mscl_number and mbc_kurs_bayar = '01'))sum_rupiah,
		    sum((select mbc_jlh_bayar from eka.mst_bayar_claim where reg_spaj = d.reg_spaj and mste_insured_no = d.mste_insured_no and mscl_number = d.mscl_number and mbc_kurs_bayar = '02'))sum_dollar
		from eka.mst_policy a, 
		    eka.mst_insured b, 
		    eka.mst_client_new c, 
		    eka.mst_claim d,
		    eka.mst_det_claim e, 
		    eka.lst_diagnosis f, 
		    eka.mst_bayar_claim g, 
		    eka.mst_product_insured h, 
		    eka.id_stat_acp i, 
		    eka.lst_det_bisnis j,
		    eka.mst_det_customer_group_mri k,
		    eka.lst_customer_group_mri l,
		    eka.mst_client cabang_mri,
		    (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
		        x.lca_id = y.lca_id
		        and x.lwk_id = y.lwk_id
		        and x.lsrg_id = y.lsrg_id)cabang_ind,
		    (select * from eka.mst_worksheet where insured_no=1) m
		where
			  <isEqual property="polis" compareValue="ALL">
			  	a.lstb_id in (1,2)
			  </isEqual> 
			  <isEqual property="polis" compareValue="INDIVIDU">
			  	a.lstb_id in (1)
			  </isEqual>
			  <isEqual property="polis" compareValue="MRI">
			  	a.lstb_id in (2)
			  </isEqual>
			  and a.reg_spaj = b.reg_spaj
			  and b.mste_insured = c.mcl_id
			  and b.reg_spaj = d.reg_spaj
			  and b.mste_insured_no = d.mste_insured_no
			  and d.reg_spaj = e.reg_spaj
			  and d.mste_insured_no = e.mste_insured_no
			  and d.mscl_number = e.mscl_number
			  and e.lsdp_id = f.lst_lsd_id
			  and d.reg_spaj = g.reg_spaj
			  and d.mste_insured_no = g.mste_insured_no
			  and d.mscl_number = g.mscl_number
			  and b.reg_spaj = h.reg_spaj
			  and b.mste_insured_no = h.mste_insured_no
			  and d.st_acp = i.st_acp
			  and h.lsbs_id = j.lsbs_id
			  and h.lsdbs_number = j.lsdbs_number
			  and a.mspo_customer = cabang_mri.mcl_id(+)
			  and a.reg_spaj = cabang_ind.reg_spaj(+)
			  and a.reg_spaj = m.reg_spaj(+)
			  and a.MSPO_CUSTOMER = k.MDC_MCL_ID(+)
			  and k.MDC_GROUP =  l.LCG_GROUP(+)
			  and d.lstc_id = 1
			  and h.lsbs_id <![CDATA[<=]]>599
			  and h.lsbs_id <![CDATA[!=]]>400    
			  <isNotEmpty property="grup_bank">
				<isNotEqual property="grup_bank" compareValue="ALL" prepend=" AND ">
					l.LCG_GROUP = #grup_bank#
				</isNotEqual>
			  </isNotEmpty>
			  <isNotEmpty property="nama_bank">
				<isNotEqual property="nama_bank" compareValue="ALL" prepend=" AND ">
					cabang_mri.MCL_ID = #nama_bank#
				</isNotEqual>
			  </isNotEmpty>
	          <isNotEmpty property="jenis_periode">
			 	<isEqual property="jenis_periode" compareValue="1">
			 		and d.mscl_tgl_input between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="2">
			 		and trunc(e.mdc_tgl_mati) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="3">
			  		and trunc(g.mbc_tgl_bayar) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			  	</isEqual>
			 </isNotEmpty>
			  group by f.lst_lsd_id,e.mdc_sebab,
			      (case 
			        when b.mste_medical = 0 then 'Non Medis'
			        when b.mste_medical = 1 then 'Medis'
			        else 'UNDIFINED'
			      end),
			      (case 
			        when b.mste_medical = 0 then 0
			        when b.mste_medical = 1 then 1
			        else 2
			      end)
			      order by medical_nmbr asc
	</select>
	
	<select id="elions.bas.selectGetTotalClaimByMedis" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
			count(a.reg_spaj) total_polis,
    		count((select mspr_extra from eka.mst_product_insured where reg_spaj = a.reg_spaj and lsbs_id between 900 and 999))extra_premi
		from eka.mst_policy a, 
		    eka.mst_insured b, 
		    eka.mst_client_new c, 
		    eka.mst_claim d,
		    eka.mst_det_claim e, 
		    eka.lst_diagnosis f, 
		    eka.mst_bayar_claim g, 
		    eka.mst_product_insured h, 
		    eka.id_stat_acp i, 
		    eka.lst_det_bisnis j,
		    eka.mst_det_customer_group_mri k,
		    eka.lst_customer_group_mri l,
		    eka.mst_client cabang_mri,
		    (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
		        x.lca_id = y.lca_id
		        and x.lwk_id = y.lwk_id
		        and x.lsrg_id = y.lsrg_id)cabang_ind,
		    (select * from eka.mst_worksheet where insured_no=1) m
		where
			  <isEqual property="polis" compareValue="ALL">
			  	a.lstb_id in (1,2)
			  </isEqual> 
			  <isEqual property="polis" compareValue="INDIVIDU">
			  	a.lstb_id in (1)
			  </isEqual>
			  <isEqual property="polis" compareValue="MRI">
			  	a.lstb_id in (2)
			  </isEqual>
			  and b.mste_medical = #medis#
			  and a.reg_spaj = b.reg_spaj
			  and b.mste_insured = c.mcl_id
			  and b.reg_spaj = d.reg_spaj
			  and b.mste_insured_no = d.mste_insured_no
			  and d.reg_spaj = e.reg_spaj
			  and d.mste_insured_no = e.mste_insured_no
			  and d.mscl_number = e.mscl_number
			  and e.lsdp_id = f.lst_lsd_id
			  and d.reg_spaj = g.reg_spaj
			  and d.mste_insured_no = g.mste_insured_no
			  and d.mscl_number = g.mscl_number
			  and b.reg_spaj = h.reg_spaj
			  and b.mste_insured_no = h.mste_insured_no
			  and d.st_acp = i.st_acp
			  and h.lsbs_id = j.lsbs_id
			  and h.lsdbs_number = j.lsdbs_number
			  and a.mspo_customer = cabang_mri.mcl_id(+)
			  and a.reg_spaj = cabang_ind.reg_spaj(+)
			  and a.reg_spaj = m.reg_spaj(+)
			  and a.MSPO_CUSTOMER = k.MDC_MCL_ID(+)
			  and k.MDC_GROUP =  l.LCG_GROUP(+)
			  and d.lstc_id = 1
			  and h.lsbs_id <![CDATA[<=]]>599
			  and h.lsbs_id <![CDATA[!=]]>400    
			  <isNotEmpty property="grup_bank">
				<isNotEqual property="grup_bank" compareValue="ALL" prepend=" AND ">
					l.LCG_GROUP = #grup_bank#
				</isNotEqual>
			  </isNotEmpty>
			  <isNotEmpty property="nama_bank">
				<isNotEqual property="nama_bank" compareValue="ALL" prepend=" AND ">
					cabang_mri.MCL_ID = #nama_bank#
				</isNotEqual>
			  </isNotEmpty>
	          <isNotEmpty property="jenis_periode">
			 	<isEqual property="jenis_periode" compareValue="1">
			 		and d.mscl_tgl_input between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="2">
			 		and trunc(e.mdc_tgl_mati) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="3">
			  		and trunc(g.mbc_tgl_bayar) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			  	</isEqual>
			 </isNotEmpty>
	</select>
	
	<select id="elions.bas.selectreportClaimBasedEntryAge" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
			(case when b.mste_age <![CDATA[>=]]> 0 and b.mste_age <![CDATA[<=]]>5 then '0 - 5'
		          when b.mste_age <![CDATA[>]]> 5 and b.mste_age <![CDATA[<=]]>10 then '6 - 10'
		          when b.mste_age <![CDATA[>]]> 10 and b.mste_age <![CDATA[<=]]>15 then '11 - 15'
		          when b.mste_age <![CDATA[>]]> 15 and b.mste_age <![CDATA[<=]]>20 then '16 - 20'
		          when b.mste_age <![CDATA[>]]> 20 and b.mste_age <![CDATA[<=]]>25 then '21 - 25'
		          when b.mste_age <![CDATA[>]]> 25 and b.mste_age <![CDATA[<=]]>30 then '26 - 30'
		          when b.mste_age <![CDATA[>]]> 30 and b.mste_age <![CDATA[<=]]>35 then '31 - 35'
		          when b.mste_age <![CDATA[>]]> 35 and b.mste_age <![CDATA[<=]]>40 then '36 - 40'
		          when b.mste_age <![CDATA[>]]> 40 and b.mste_age <![CDATA[<=]]>45 then '41 - 45'
		          when b.mste_age <![CDATA[>]]> 45 and b.mste_age <![CDATA[<=]]>50 then '46 - 50'
		          when b.mste_age <![CDATA[>]]> 50 and b.mste_age <![CDATA[<=]]>55 then '51 - 55'
		          when b.mste_age <![CDATA[>]]> 55 and b.mste_age <![CDATA[<=]]>60 then '56 - 60'
		          else '61 >'
		    end)umur,
		    sum(case when ((trunc(months_between(e.mdc_tgl_mati,B.MSTE_BEG_DATE)))+(case when (trunc(e.mdc_tgl_mati-add_months(b.MSTE_BEG_DATE,trunc(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 0 and 6 then 1 else 0 end) usia_0_6,
		    sum(case when ((trunc(months_between(e.mdc_tgl_mati,B.MSTE_BEG_DATE)))+(case when (trunc(e.mdc_tgl_mati-add_months(b.MSTE_BEG_DATE,trunc(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 7 and 12 then 1 else 0 end) usia_7_12,
		    sum(case when ((trunc(months_between(e.mdc_tgl_mati,B.MSTE_BEG_DATE)))+(case when (trunc(e.mdc_tgl_mati-add_months(b.MSTE_BEG_DATE,trunc(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 13 and 24 then 1 else 0 end) usia_2_yr,
		    sum(case when ((trunc(months_between(e.mdc_tgl_mati,B.MSTE_BEG_DATE)))+(case when (trunc(e.mdc_tgl_mati-add_months(b.MSTE_BEG_DATE,trunc(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 25 and 36 then 1 else 0 end) usia_3_yr,
		    sum(case when ((trunc(months_between(e.mdc_tgl_mati,B.MSTE_BEG_DATE)))+(case when (trunc(e.mdc_tgl_mati-add_months(b.MSTE_BEG_DATE,trunc(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 37 and 48 then 1 else 0 end) usia_4_yr,
		    sum(case when ((trunc(months_between(e.mdc_tgl_mati,B.MSTE_BEG_DATE)))+(case when (trunc(e.mdc_tgl_mati-add_months(b.MSTE_BEG_DATE,trunc(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 49 and 60 then 1 else 0 end) usia_5_yr,
		    sum(case when ((trunc(months_between(e.mdc_tgl_mati,B.MSTE_BEG_DATE)))+(case when (trunc(e.mdc_tgl_mati-add_months(b.MSTE_BEG_DATE,trunc(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 61 and 72 then 1 else 0 end) usia_6_yr,
		    sum(case when ((trunc(months_between(e.mdc_tgl_mati,B.MSTE_BEG_DATE)))+(case when (trunc(e.mdc_tgl_mati-add_months(b.MSTE_BEG_DATE,trunc(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 73 and 84 then 1 else 0 end) usia_7_yr,
		    sum(case when ((trunc(months_between(e.mdc_tgl_mati,B.MSTE_BEG_DATE)))+(case when (trunc(e.mdc_tgl_mati-add_months(b.MSTE_BEG_DATE,trunc(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 85 and 96 then 1 else 0 end) usia_8_yr,
		    sum(case when ((trunc(months_between(e.mdc_tgl_mati,B.MSTE_BEG_DATE)))+(case when (trunc(e.mdc_tgl_mati-add_months(b.MSTE_BEG_DATE,trunc(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 97 and 108 then 1 else 0 end) usia_9_yr,
		    sum(case when ((trunc(months_between(e.mdc_tgl_mati,B.MSTE_BEG_DATE)))+(case when (trunc(e.mdc_tgl_mati-add_months(b.MSTE_BEG_DATE,trunc(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 109 and 120 then 1 else 0 end) usia_10_yr,
		    sum(case when ((trunc(months_between(e.mdc_tgl_mati,B.MSTE_BEG_DATE)))+(case when (trunc(e.mdc_tgl_mati-add_months(b.MSTE_BEG_DATE,trunc(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) <![CDATA[>]]>120 then 1 else 0 end) usia_10_yr_up,
		    sum(case when ((trunc(months_between(e.mdc_tgl_mati,B.MSTE_BEG_DATE)))+(case when (trunc(e.mdc_tgl_mati-add_months(b.MSTE_BEG_DATE,trunc(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(e.mdc_tgl_mati,b.MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) <![CDATA[>=]]>0 then 1 else 0 end) usia_all
		from eka.mst_policy a, 
		    eka.mst_insured b, 
		    eka.mst_client_new c, 
		    eka.mst_claim d,
		    eka.mst_det_claim e, 
		    eka.lst_diagnosis f, 
		    eka.mst_bayar_claim g, 
		    eka.mst_product_insured h, 
		    eka.id_stat_acp i, 
		    eka.lst_det_bisnis j,
		    eka.mst_det_customer_group_mri k,
		    eka.lst_customer_group_mri l,
		    eka.mst_client cabang_mri,
		    (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
		        x.lca_id = y.lca_id
		        and x.lwk_id = y.lwk_id
		        and x.lsrg_id = y.lsrg_id)cabang_ind,
		    (select * from eka.mst_worksheet where insured_no=1) m
		where
			  <isEqual property="polis" compareValue="ALL">
			  	a.lstb_id in (1,2)
			  </isEqual> 
			  <isEqual property="polis" compareValue="INDIVIDU">
			  	a.lstb_id in (1)
			  </isEqual>
			  <isEqual property="polis" compareValue="MRI">
			  	a.lstb_id in (2)
			  </isEqual>
			  and a.reg_spaj = b.reg_spaj
			  and b.mste_insured = c.mcl_id
			  and b.reg_spaj = d.reg_spaj
			  and b.mste_insured_no = d.mste_insured_no
			  and d.reg_spaj = e.reg_spaj
			  and d.mste_insured_no = e.mste_insured_no
			  and d.mscl_number = e.mscl_number
			  and e.lsdp_id = f.lst_lsd_id
			  and d.reg_spaj = g.reg_spaj
			  and d.mste_insured_no = g.mste_insured_no
			  and d.mscl_number = g.mscl_number
			  and b.reg_spaj = h.reg_spaj
			  and b.mste_insured_no = h.mste_insured_no
			  and d.st_acp = i.st_acp
			  and h.lsbs_id = j.lsbs_id
			  and h.lsdbs_number = j.lsdbs_number
			  and a.mspo_customer = cabang_mri.mcl_id(+)
			  and a.reg_spaj = cabang_ind.reg_spaj(+)
			  and a.reg_spaj = m.reg_spaj(+)
			  and a.MSPO_CUSTOMER = k.MDC_MCL_ID(+)
			  and k.MDC_GROUP =  l.LCG_GROUP(+)
			  and d.lstc_id = 1
			  and h.lsbs_id <![CDATA[<=]]>599
			  and h.lsbs_id <![CDATA[!=]]>400    
			  <isNotEmpty property="grup_bank">
				<isNotEqual property="grup_bank" compareValue="ALL" prepend=" AND ">
					l.LCG_GROUP = #grup_bank#
				</isNotEqual>
			  </isNotEmpty>
			  <isNotEmpty property="nama_bank">
				<isNotEqual property="nama_bank" compareValue="ALL" prepend=" AND ">
					cabang_mri.MCL_ID = #nama_bank#
				</isNotEqual>
			  </isNotEmpty>
	          <isNotEmpty property="jenis_periode">
			 	<isEqual property="jenis_periode" compareValue="1">
			 		and d.mscl_tgl_input between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="2">
			 		and trunc(e.mdc_tgl_mati) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="3">
			  		and trunc(g.mbc_tgl_bayar) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			  	</isEqual>
			 </isNotEmpty>
			  group  by 
	            (case when b.mste_age <![CDATA[>=]]> 0 and b.mste_age <![CDATA[<=]]>5 then '0 - 5'
	                  when b.mste_age <![CDATA[>]]> 5 and b.mste_age <![CDATA[<=]]>10 then '6 - 10'
	                  when b.mste_age <![CDATA[>]]> 10 and b.mste_age <![CDATA[<=]]>15 then '11 - 15'
	                  when b.mste_age <![CDATA[>]]> 15 and b.mste_age <![CDATA[<=]]>20 then '16 - 20'
	                  when b.mste_age <![CDATA[>]]> 20 and b.mste_age <![CDATA[<=]]>25 then '21 - 25'
	                  when b.mste_age <![CDATA[>]]> 25 and b.mste_age <![CDATA[<=]]>30 then '26 - 30'
	                  when b.mste_age <![CDATA[>]]> 30 and b.mste_age <![CDATA[<=]]>35 then '31 - 35'
	                  when b.mste_age <![CDATA[>]]> 35 and b.mste_age <![CDATA[<=]]>40 then '36 - 40'
	                  when b.mste_age <![CDATA[>]]> 40 and b.mste_age <![CDATA[<=]]>45 then '41 - 45'
	                  when b.mste_age <![CDATA[>]]> 45 and b.mste_age <![CDATA[<=]]>50 then '46 - 50'
	                  when b.mste_age <![CDATA[>]]> 50 and b.mste_age <![CDATA[<=]]>55 then '51 - 55'
	                  when b.mste_age <![CDATA[>]]> 55 and b.mste_age <![CDATA[<=]]>60 then '56 - 60'
	                  else '61 >'
	            end)
	            order by umur asc
	</select>
	
	<select id="elions.bas.selectTotalBayarKlaim" parameterClass="string" resultClass="double">
		select mbc_jlh_bayar 
		from eka.mst_bayar_claim 
		where reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.bas.selectMstClaim" parameterClass = "string" resultClass="java.util.HashMap">
		select *
		from eka.mst_claim a,
		     eka.mst_det_claim b,
		     eka.mst_bayar_claim c
		where a.reg_spaj = b.reg_spaj
		and a.reg_spaj = c.reg_spaj
		and a.mste_insured_no = b.mste_insured_no
		and a.mste_insured_no = c.mste_insured_no
		and a.mscl_number = b.mscl_number
		and a.mscl_number = c.mscl_number
		and a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.bas.selectreportExGratiaClaim" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
			to_char(d.mscl_tgl_claim,'yyyy')tgl_claim,
		    eka.utils.pemegang(a.reg_spaj)pemegang,
		    eka.utils.tertanggung(a.reg_spaj)tertanggung,
		    f.lst_lsd_id icd,
		    e.mdc_sebab sebab,
		    sum((select mbc_jlh_bayar from eka.mst_bayar_claim where reg_spaj = d.reg_spaj and mste_insured_no = d.mste_insured_no and mscl_number = d.mscl_number and mbc_kurs_bayar = '01'))sum_rupiah,
		    sum((select mbc_jlh_bayar from eka.mst_bayar_claim where reg_spaj = d.reg_spaj and mste_insured_no = d.mste_insured_no and mscl_number = d.mscl_number and mbc_kurs_bayar = '02'))sum_dollar, 
		    eka.f_lsdbs(a.reg_spaj, h.lsbs_id, h.lsdbs_number) lsdbs_name
		from eka.mst_policy a, 
		    eka.mst_insured b, 
		    eka.mst_client_new c, 
		    eka.mst_claim d,
		    eka.mst_det_claim e, 
		    eka.lst_diagnosis f, 
		    eka.mst_bayar_claim g, 
		    eka.mst_product_insured h, 
		    eka.id_stat_acp i, 
		    eka.lst_det_bisnis j,
		    eka.mst_det_customer_group_mri k,
		    eka.lst_customer_group_mri l,
		    eka.mst_client cabang_mri,
		    (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
		        x.lca_id = y.lca_id
		        and x.lwk_id = y.lwk_id
		        and x.lsrg_id = y.lsrg_id)cabang_ind,
		    eka.mst_worksheet m
		where
			  <isEqual property="polis" compareValue="ALL">
			  	a.lstb_id in (1,2)
			  </isEqual> 
			  <isEqual property="polis" compareValue="INDIVIDU">
			  	a.lstb_id in (1)
			  </isEqual>
			  <isEqual property="polis" compareValue="MRI">
			  	a.lstb_id in (2)
			  </isEqual>
			  and a.reg_spaj = b.reg_spaj
			  and b.mste_insured = c.mcl_id
			  and b.reg_spaj = d.reg_spaj
			  and b.mste_insured_no = d.mste_insured_no
			  and d.reg_spaj = e.reg_spaj
			  and d.mste_insured_no = e.mste_insured_no
			  and d.mscl_number = e.mscl_number
			  and e.lsdp_id = f.lst_lsd_id
			  and d.reg_spaj = g.reg_spaj
			  and d.mste_insured_no = g.mste_insured_no
			  and d.mscl_number = g.mscl_number
			  and b.reg_spaj = h.reg_spaj
			  and b.mste_insured_no = h.mste_insured_no
			  and d.st_acp = i.st_acp
			  and h.lsbs_id = j.lsbs_id
			  and h.lsdbs_number = j.lsdbs_number
			  and a.mspo_customer = cabang_mri.mcl_id(+)
			  and a.reg_spaj = cabang_ind.reg_spaj(+)
			  and a.reg_spaj = m.reg_spaj(+)
			  and a.MSPO_CUSTOMER = k.MDC_MCL_ID(+)
			  and k.MDC_GROUP =  l.LCG_GROUP(+)
			  and d.lstc_id = 1
			  and h.lsbs_id <![CDATA[<=]]>599
			  and h.lsbs_id <![CDATA[!=]]>400   
			  <isNotEmpty property="grup_bank">
				<isNotEqual property="grup_bank" compareValue="ALL" prepend=" AND ">
					l.LCG_GROUP = #grup_bank#
				</isNotEqual>
			  </isNotEmpty>
			  <isNotEmpty property="nama_bank">
				<isNotEqual property="nama_bank" compareValue="ALL" prepend=" AND ">
					cabang_mri.MCL_ID = #nama_bank#
				</isNotEqual>
			  </isNotEmpty>
      		  and i.st_acp = 5  
	          <isNotEmpty property="jenis_periode">
			 	<isEqual property="jenis_periode" compareValue="1">
			 		and d.mscl_tgl_input between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="2">
			 		and trunc(e.mdc_tgl_mati) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="3">
			  		and trunc(g.mbc_tgl_bayar) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			  	</isEqual>
			 </isNotEmpty>
			  group by to_char(d.mscl_tgl_claim,'yyyy'), eka.utils.pemegang(a.reg_spaj), eka.utils.tertanggung(a.reg_spaj),
		               f.lst_lsd_id, e.mdc_sebab, a.reg_spaj, h.lsbs_id, h.lsdbs_number
		      order by tgl_claim asc
	</select>
	
	<select id="elions.bas.selectreportClaimByProduct" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
			eka.f_lsdbs(h.reg_spaj, h.lsbs_id, h.lsdbs_number) lsdbs_name,
		    <!-- sum(case when c.mspe_sex=0 or c.mspe_sex=1 then 1 else 0 end) total_case, -->
		    count(a.reg_spaj) total_case,
		    sum((select mbc_jlh_bayar from eka.mst_bayar_claim where reg_spaj = d.reg_spaj and mste_insured_no = d.mste_insured_no and mscl_number = d.mscl_number and mbc_kurs_bayar = '01')) byr_rupiah,
		    sum((select mbc_jlh_bayar from eka.mst_bayar_claim where reg_spaj = d.reg_spaj and mste_insured_no = d.mste_insured_no and mscl_number = d.mscl_number and mbc_kurs_bayar = '02')) byr_dollar
		from eka.mst_policy a, 
		    eka.mst_insured b, 
		    eka.mst_client_new c, 
		    eka.mst_claim d,
		    eka.mst_det_claim e, 
		    eka.lst_diagnosis f, 
		    eka.mst_bayar_claim g, 
		    eka.mst_product_insured h, 
		    eka.id_stat_acp i, 
		    eka.lst_det_bisnis j,
		    eka.mst_det_customer_group_mri k,
		    eka.lst_customer_group_mri l,
		    eka.mst_client cabang_mri,
		    (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
		        x.lca_id = y.lca_id
		        and x.lwk_id = y.lwk_id
		        and x.lsrg_id = y.lsrg_id)cabang_ind,
		    (select * from eka.mst_worksheet where insured_no=1) m,
		    (select distinct
		            a.reg_spaj, 'BANK SINARMAS'||' '||upper(c.nama_cabang) cabang
		        from 
		            eka.mst_policy a,
		            eka.mst_reff_bii b,
		            eka.lst_cabang_bii c
		        where
		            a.reg_spaj = b.reg_spaj
		            and b.lcb_no = c.lcb_no
		            and c.jenis = 2)cabang_sinarmas
		where
			  <isEqual property="polis" compareValue="ALL">
			  	a.lstb_id in (1,2)
			  </isEqual> 
			  <isEqual property="polis" compareValue="INDIVIDU">
			  	a.lstb_id in (1)
			  </isEqual>
			  <isEqual property="polis" compareValue="MRI">
			  	a.lstb_id in (2)
			  </isEqual>
			  and a.reg_spaj = b.reg_spaj
			  and b.mste_insured = c.mcl_id
			  and b.reg_spaj = d.reg_spaj
			  and b.mste_insured_no = d.mste_insured_no
			  and d.reg_spaj = e.reg_spaj
			  and d.mste_insured_no = e.mste_insured_no
			  and d.mscl_number = e.mscl_number
			  and e.lsdp_id = f.lst_lsd_id
			  and d.reg_spaj = g.reg_spaj
			  and d.mste_insured_no = g.mste_insured_no
			  and d.mscl_number = g.mscl_number
			  and b.reg_spaj = h.reg_spaj
			  and b.mste_insured_no = h.mste_insured_no
			  and d.st_acp = i.st_acp
			  and h.lsbs_id = j.lsbs_id
			  and h.lsdbs_number = j.lsdbs_number
			  and a.mspo_customer = cabang_mri.mcl_id(+)
			  and a.reg_spaj = cabang_ind.reg_spaj(+)
			  and a.reg_spaj = m.reg_spaj(+)
			  and a.MSPO_CUSTOMER = k.MDC_MCL_ID(+)
			  and k.MDC_GROUP =  l.LCG_GROUP(+)
			  and a.reg_spaj = cabang_sinarmas.reg_spaj(+)
			  and d.lstc_id = 1
			  and h.lsbs_id <![CDATA[<=]]>599
			  and h.lsbs_id <![CDATA[!=]]>400    
			  <isNotEmpty property="grup_bank">
				<isNotEqual property="grup_bank" compareValue="ALL" prepend=" AND ">
					l.LCG_GROUP = #grup_bank#
				</isNotEqual>
			  </isNotEmpty>
			  <isNotEmpty property="nama_bank">
				<isNotEqual property="nama_bank" compareValue="ALL" prepend=" AND ">
					cabang_mri.MCL_ID = #nama_bank#
				</isNotEqual>
			  </isNotEmpty>
	          <isNotEmpty property="jenis_periode">
			 	<isEqual property="jenis_periode" compareValue="1">
			 		and d.mscl_tgl_input between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="2">
			 		and trunc(e.mdc_tgl_mati) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="3">
			  		and trunc(g.mbc_tgl_bayar) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			  	</isEqual>
			 </isNotEmpty>
		  	group by 
			  	eka.f_lsdbs(h.reg_spaj, h.lsbs_id, h.lsdbs_number)
      		order by 1
	</select>
	
	<select id="elions.bas.selectreportClaimBySA" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
			(case when h.mspr_tsi <![CDATA[<=]]> 10000000 then 1
		            when h.mspr_tsi <![CDATA[>]]> 10000000 and h.mspr_tsi <![CDATA[<]]> 26000000 then 2
		            when h.mspr_tsi <![CDATA[>=]]> 26000000 and h.mspr_tsi <![CDATA[<]]> 51000000 then 3
		            when h.mspr_tsi <![CDATA[>=]]> 51000000 and h.mspr_tsi <![CDATA[<]]> 101000000 then 4
		            when h.mspr_tsi <![CDATA[>=]]> 101000000 and h.mspr_tsi <![CDATA[<]]> 126000000 then 5
		            when h.mspr_tsi <![CDATA[>=]]> 126000000 and h.mspr_tsi <![CDATA[<]]> 151000000 then 6
		            when h.mspr_tsi <![CDATA[>=]]> 151000000 and h.mspr_tsi <![CDATA[<]]> 201000000 then 7
		            when h.mspr_tsi <![CDATA[>=]]> 201000000 and h.mspr_tsi <![CDATA[<]]> 251000000 then 8
		            when h.mspr_tsi <![CDATA[>=]]> 251000000 and h.mspr_tsi <![CDATA[<]]> 301000000 then 9
		            when h.mspr_tsi <![CDATA[>=]]> 301000000 and h.mspr_tsi <![CDATA[<]]> 351000000 then 10
		            when h.mspr_tsi <![CDATA[>=]]> 351000000 and h.mspr_tsi <![CDATA[<]]> 401000000 then 11
		            when h.mspr_tsi <![CDATA[>=]]> 401000000 and h.mspr_tsi <![CDATA[<]]> 451000000 then 12
		            when h.mspr_tsi <![CDATA[>=]]> 451000000 and h.mspr_tsi <![CDATA[<]]> 501000000 then 13
		            when h.mspr_tsi <![CDATA[>=]]> 501000000 and h.mspr_tsi <![CDATA[<]]> 601000000 then 14
		            when h.mspr_tsi <![CDATA[>=]]> 601000000 and h.mspr_tsi <![CDATA[<]]> 701000000 then 15
		            when h.mspr_tsi <![CDATA[>=]]> 701000000 and h.mspr_tsi <![CDATA[<]]> 801000000 then 16
		            when h.mspr_tsi <![CDATA[>=]]> 801000000 and h.mspr_tsi <![CDATA[<]]> 901000000 then 17
		            when h.mspr_tsi <![CDATA[>=]]> 901000000 and h.mspr_tsi <![CDATA[<]]> 1001000000 then 18
		            when h.mspr_tsi <![CDATA[>=]]> 1001000000 and h.mspr_tsi <![CDATA[<]]> 1251000000 then 19
		            when h.mspr_tsi <![CDATA[>=]]> 1251000000 and h.mspr_tsi <![CDATA[<]]> 1501000000 then 20
		            when h.mspr_tsi <![CDATA[>=]]> 1501000000 and h.mspr_tsi <![CDATA[<]]> 1751000000 then 21
		            when h.mspr_tsi <![CDATA[>=]]> 1751000000 and h.mspr_tsi <![CDATA[<]]> 2001000000 then 22
		            when h.mspr_tsi <![CDATA[>=]]> 2001000000 and h.mspr_tsi <![CDATA[<]]> 2501000000 then 23
		            when h.mspr_tsi <![CDATA[>=]]> 2501000000 and h.mspr_tsi <![CDATA[<]]> 3001000000 then 24
		            when h.mspr_tsi <![CDATA[>=]]> 3001000000 and h.mspr_tsi <![CDATA[<]]> 3501000000 then 25
		            when h.mspr_tsi <![CDATA[>=]]> 3501000000 and h.mspr_tsi <![CDATA[<]]> 4001000000 then 26
		            when h.mspr_tsi <![CDATA[>=]]> 4001000000 and h.mspr_tsi <![CDATA[<]]> 4501000000 then 27
		            when h.mspr_tsi <![CDATA[>=]]> 4501000000 and h.mspr_tsi <![CDATA[<]]> 5001000000 then 28
		            when h.mspr_tsi <![CDATA[>=]]> 5001000000 and h.mspr_tsi <![CDATA[<]]> 6001000000 then 29
		            when h.mspr_tsi <![CDATA[>=]]> 6001000000 and h.mspr_tsi <![CDATA[<]]> 7001000000 then 30
		            when h.mspr_tsi <![CDATA[>=]]> 7001000000 and h.mspr_tsi <![CDATA[<]]> 8001000000 then 31
		            when h.mspr_tsi <![CDATA[>=]]> 8001000000 and h.mspr_tsi <![CDATA[<]]> 9001000000 then 32
		            when h.mspr_tsi <![CDATA[>=]]> 9001000000 and h.mspr_tsi <![CDATA[<=]]> 10000000000 then 33
		          else 34 end)urut,
		    (case when h.mspr_tsi <![CDATA[<=]]> 10000000 then 'up to 10'
		            when h.mspr_tsi <![CDATA[>]]> 10000000 and h.mspr_tsi <![CDATA[<]]> 26000000 then '>10 - 25'
		            when h.mspr_tsi <![CDATA[>=]]> 26000000 and h.mspr_tsi <![CDATA[<]]> 51000000 then '>26 - 50'
		            when h.mspr_tsi <![CDATA[>=]]> 51000000 and h.mspr_tsi <![CDATA[<]]> 101000000 then '>51 - 100'
		            when h.mspr_tsi <![CDATA[>=]]> 101000000 and h.mspr_tsi <![CDATA[<]]> 126000000 then '>101 - 125'
		            when h.mspr_tsi <![CDATA[>=]]> 126000000 and h.mspr_tsi <![CDATA[<]]> 151000000 then '>126 - 150'
		            when h.mspr_tsi <![CDATA[>=]]> 151000000 and h.mspr_tsi <![CDATA[<]]> 201000000 then '>151 - 200'
		            when h.mspr_tsi <![CDATA[>=]]> 201000000 and h.mspr_tsi <![CDATA[<]]> 251000000 then '>201 - 250'
		            when h.mspr_tsi <![CDATA[>=]]> 251000000 and h.mspr_tsi <![CDATA[<]]> 301000000 then '>251 - 300'
		            when h.mspr_tsi <![CDATA[>=]]> 301000000 and h.mspr_tsi <![CDATA[<]]> 351000000 then '>301 - 350'
		            when h.mspr_tsi <![CDATA[>=]]> 351000000 and h.mspr_tsi <![CDATA[<]]> 401000000 then '>351 - 400'
		            when h.mspr_tsi <![CDATA[>=]]> 401000000 and h.mspr_tsi <![CDATA[<]]> 451000000 then '>401 - 450'
		            when h.mspr_tsi <![CDATA[>=]]> 451000000 and h.mspr_tsi <![CDATA[<]]> 501000000 then '>451 - 500'
		            when h.mspr_tsi <![CDATA[>=]]> 501000000 and h.mspr_tsi <![CDATA[<]]> 601000000 then '>501 - 600'
		            when h.mspr_tsi <![CDATA[>=]]> 601000000 and h.mspr_tsi <![CDATA[<]]> 701000000 then '>601 - 700'
		            when h.mspr_tsi <![CDATA[>=]]> 701000000 and h.mspr_tsi <![CDATA[<]]> 801000000 then '>701 - 800'
		            when h.mspr_tsi <![CDATA[>=]]> 801000000 and h.mspr_tsi <![CDATA[<]]> 901000000 then '>801 - 900'
		            when h.mspr_tsi <![CDATA[>=]]> 901000000 and h.mspr_tsi <![CDATA[<]]> 1001000000 then '>901 - 1.000'
		            when h.mspr_tsi <![CDATA[>=]]> 1001000000 and h.mspr_tsi <![CDATA[<]]> 1251000000 then '>1.001 - 1.250'
		            when h.mspr_tsi <![CDATA[>=]]> 1251000000 and h.mspr_tsi <![CDATA[<]]> 1501000000 then '>1.251 - 1.500'
		            when h.mspr_tsi <![CDATA[>=]]> 1501000000 and h.mspr_tsi <![CDATA[<]]> 1751000000 then '>1.501 - 1.750'
		            when h.mspr_tsi <![CDATA[>=]]> 1751000000 and h.mspr_tsi <![CDATA[<]]> 2001000000 then '>1.751 - 2.000'
		            when h.mspr_tsi <![CDATA[>=]]> 2001000000 and h.mspr_tsi <![CDATA[<]]> 2501000000 then '>2.001 - 2.500'
		            when h.mspr_tsi <![CDATA[>=]]> 2501000000 and h.mspr_tsi <![CDATA[<]]> 3001000000 then '>2.501 - 3.000'
		            when h.mspr_tsi <![CDATA[>=]]> 3001000000 and h.mspr_tsi <![CDATA[<]]> 3501000000 then '>3.001 - 3.500'
		            when h.mspr_tsi <![CDATA[>=]]> 3501000000 and h.mspr_tsi <![CDATA[<]]> 4001000000 then '>3.501 - 4.000'
		            when h.mspr_tsi <![CDATA[>=]]> 4001000000 and h.mspr_tsi <![CDATA[<]]> 4501000000 then '>4.001 - 4.500'
		            when h.mspr_tsi <![CDATA[>=]]> 4501000000 and h.mspr_tsi <![CDATA[<]]> 5001000000 then '>4.501 - 5.000'
		            when h.mspr_tsi <![CDATA[>=]]> 5001000000 and h.mspr_tsi <![CDATA[<]]> 6001000000 then '>5.001 - 6.000'
		            when h.mspr_tsi <![CDATA[>=]]> 6001000000 and h.mspr_tsi <![CDATA[<]]> 7001000000 then '>6.001 - 7.000'
		            when h.mspr_tsi <![CDATA[>=]]> 7001000000 and h.mspr_tsi <![CDATA[<]]> 8001000000 then '>7.001 - 8.000'
		            when h.mspr_tsi <![CDATA[>=]]> 8001000000 and h.mspr_tsi <![CDATA[<]]> 9001000000 then '>8.001 - 9.000'
		            when h.mspr_tsi <![CDATA[>=]]> 9001000000 and h.mspr_tsi <![CDATA[<=]]> 10000000000 then '>9.001 - 10.000'
		          else '>10.000' end)assured,
		    sum(case when b.mste_age <![CDATA[<=]]>1 then 1 else 0 end)yr0_1,
		    sum(case when b.mste_age <![CDATA[>=]]>2 and b.mste_age <![CDATA[<=]]>5 then 1 else 0 end)yr2_5,
		    sum(case when b.mste_age <![CDATA[>=]]>6 and b.mste_age <![CDATA[<=]]>10 then 1 else 0 end)yr6_10,
		    sum(case when b.mste_age <![CDATA[>=]]>11 and b.mste_age <![CDATA[<=]]>15 then 1 else 0 end)yr11_15,
		    sum(case when b.mste_age <![CDATA[>=]]>16 and b.mste_age <![CDATA[<=]]>20 then 1 else 0 end)yr16_20,
		    sum(case when b.mste_age <![CDATA[>=]]>21 and b.mste_age <![CDATA[<=]]>25 then 1 else 0 end)yr21_25,
		    sum(case when b.mste_age <![CDATA[>=]]>26 and b.mste_age <![CDATA[<=]]>30 then 1 else 0 end)yr26_30,
		    sum(case when b.mste_age <![CDATA[>=]]>31 and b.mste_age <![CDATA[<=]]>35 then 1 else 0 end)yr31_35,
		    sum(case when b.mste_age <![CDATA[>=]]>36 and b.mste_age <![CDATA[<=]]>40 then 1 else 0 end)yr36_40,
		    sum(case when b.mste_age <![CDATA[>=]]>41 and b.mste_age <![CDATA[<=]]>45 then 1 else 0 end)yr41_45,
		    sum(case when b.mste_age <![CDATA[>=]]>46 and b.mste_age <![CDATA[<=]]>50 then 1 else 0 end)yr46_50,
		    sum(case when b.mste_age <![CDATA[>=]]>51 and b.mste_age <![CDATA[<=]]>55 then 1 else 0 end)yr51_55,
		    sum(case when b.mste_age <![CDATA[>=]]>56 and b.mste_age <![CDATA[<=]]>60 then 1 else 0 end)yr56_60,
		    sum(case when b.mste_age <![CDATA[>=]]>61 and b.mste_age <![CDATA[<=]]>65 then 1 else 0 end)yr61_65,
		    sum(case when b.mste_age <![CDATA[>=]]>66 and b.mste_age <![CDATA[<=]]>70 then 1 else 0 end)yr66_70,
		    sum(case when b.mste_age <![CDATA[>=]]>71 then 1 else 0 end)yr71_up,
		    sum(case when b.mste_age <![CDATA[>=]]>0 then 1 else 0 end)yr_all
		from eka.mst_policy a, 
		    eka.mst_insured b, 
		    eka.mst_client_new c, 
		    eka.mst_claim d,
		    eka.mst_det_claim e, 
		    eka.lst_diagnosis f, 
		    eka.mst_bayar_claim g, 
		    eka.mst_product_insured h, 
		    eka.id_stat_acp i, 
		    eka.lst_det_bisnis j,
		    eka.mst_det_customer_group_mri k,
		    eka.lst_customer_group_mri l,
		    eka.mst_client cabang_mri,
		    (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
		        x.lca_id = y.lca_id
		        and x.lwk_id = y.lwk_id
		        and x.lsrg_id = y.lsrg_id)cabang_ind,
		    (select * from eka.mst_worksheet where insured_no=1) m
		where
			  <isEqual property="polis" compareValue="ALL">
			  	a.lstb_id in (1,2)
			  </isEqual> 
			  <isEqual property="polis" compareValue="INDIVIDU">
			  	a.lstb_id in (1)
			  </isEqual>
			  <isEqual property="polis" compareValue="MRI">
			  	a.lstb_id in (2)
			  </isEqual>
			  and a.reg_spaj = b.reg_spaj
			  and b.mste_insured = c.mcl_id
			  and b.reg_spaj = d.reg_spaj
			  and b.mste_insured_no = d.mste_insured_no
			  and d.reg_spaj = e.reg_spaj
			  and d.mste_insured_no = e.mste_insured_no
			  and d.mscl_number = e.mscl_number
			  and e.lsdp_id = f.lst_lsd_id
			  and d.reg_spaj = g.reg_spaj
			  and d.mste_insured_no = g.mste_insured_no
			  and d.mscl_number = g.mscl_number
			  and b.reg_spaj = h.reg_spaj
			  and b.mste_insured_no = h.mste_insured_no
			  and d.st_acp = i.st_acp
			  and h.lsbs_id = j.lsbs_id
			  and h.lsdbs_number = j.lsdbs_number
			  and a.mspo_customer = cabang_mri.mcl_id(+)
			  and a.reg_spaj = cabang_ind.reg_spaj(+)
			  and a.reg_spaj = m.reg_spaj(+)
			  and a.MSPO_CUSTOMER = k.MDC_MCL_ID(+)
			  and k.MDC_GROUP =  l.LCG_GROUP(+)
			  and d.lstc_id = 1
			  and h.lsbs_id <![CDATA[<=]]>599
			  and h.lsbs_id <![CDATA[!=]]>400    
			  <isNotEmpty property="grup_bank">
				<isNotEqual property="grup_bank" compareValue="ALL" prepend=" AND ">
					l.LCG_GROUP = #grup_bank#
				</isNotEqual>
			  </isNotEmpty>
			  <isNotEmpty property="nama_bank">
				<isNotEqual property="nama_bank" compareValue="ALL" prepend=" AND ">
					cabang_mri.MCL_ID = #nama_bank#
				</isNotEqual>
			  </isNotEmpty>
	          <isNotEmpty property="jenis_periode">
			 	<isEqual property="jenis_periode" compareValue="1">
			 		and d.mscl_tgl_input between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="2">
			 		and trunc(e.mdc_tgl_mati) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			 	<isEqual property="jenis_periode" compareValue="3">
			  		and trunc(g.mbc_tgl_bayar) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			  	</isEqual>
			 </isNotEmpty>
			  group  by 
	            (case when h.mspr_tsi <![CDATA[<=]]> 10000000 then 1
		            when h.mspr_tsi <![CDATA[>]]> 10000000 and h.mspr_tsi <![CDATA[<]]> 26000000 then 2
		            when h.mspr_tsi <![CDATA[>=]]> 26000000 and h.mspr_tsi <![CDATA[<]]> 51000000 then 3
		            when h.mspr_tsi <![CDATA[>=]]> 51000000 and h.mspr_tsi <![CDATA[<]]> 101000000 then 4
		            when h.mspr_tsi <![CDATA[>=]]> 101000000 and h.mspr_tsi <![CDATA[<]]> 126000000 then 5
		            when h.mspr_tsi <![CDATA[>=]]> 126000000 and h.mspr_tsi <![CDATA[<]]> 151000000 then 6
		            when h.mspr_tsi <![CDATA[>=]]> 151000000 and h.mspr_tsi <![CDATA[<]]> 201000000 then 7
		            when h.mspr_tsi <![CDATA[>=]]> 201000000 and h.mspr_tsi <![CDATA[<]]> 251000000 then 8
		            when h.mspr_tsi <![CDATA[>=]]> 251000000 and h.mspr_tsi <![CDATA[<]]> 301000000 then 9
		            when h.mspr_tsi <![CDATA[>=]]> 301000000 and h.mspr_tsi <![CDATA[<]]> 351000000 then 10
		            when h.mspr_tsi <![CDATA[>=]]> 351000000 and h.mspr_tsi <![CDATA[<]]> 401000000 then 11
		            when h.mspr_tsi <![CDATA[>=]]> 401000000 and h.mspr_tsi <![CDATA[<]]> 451000000 then 12
		            when h.mspr_tsi <![CDATA[>=]]> 451000000 and h.mspr_tsi <![CDATA[<]]> 501000000 then 13
		            when h.mspr_tsi <![CDATA[>=]]> 501000000 and h.mspr_tsi <![CDATA[<]]> 601000000 then 14
		            when h.mspr_tsi <![CDATA[>=]]> 601000000 and h.mspr_tsi <![CDATA[<]]> 701000000 then 15
		            when h.mspr_tsi <![CDATA[>=]]> 701000000 and h.mspr_tsi <![CDATA[<]]> 801000000 then 16
		            when h.mspr_tsi <![CDATA[>=]]> 801000000 and h.mspr_tsi <![CDATA[<]]> 901000000 then 17
		            when h.mspr_tsi <![CDATA[>=]]> 901000000 and h.mspr_tsi <![CDATA[<]]> 1001000000 then 18
		            when h.mspr_tsi <![CDATA[>=]]> 1001000000 and h.mspr_tsi <![CDATA[<]]> 1251000000 then 19
		            when h.mspr_tsi <![CDATA[>=]]> 1251000000 and h.mspr_tsi <![CDATA[<]]> 1501000000 then 20
		            when h.mspr_tsi <![CDATA[>=]]> 1501000000 and h.mspr_tsi <![CDATA[<]]> 1751000000 then 21
		            when h.mspr_tsi <![CDATA[>=]]> 1751000000 and h.mspr_tsi <![CDATA[<]]> 2001000000 then 22
		            when h.mspr_tsi <![CDATA[>=]]> 2001000000 and h.mspr_tsi <![CDATA[<]]> 2501000000 then 23
		            when h.mspr_tsi <![CDATA[>=]]> 2501000000 and h.mspr_tsi <![CDATA[<]]> 3001000000 then 24
		            when h.mspr_tsi <![CDATA[>=]]> 3001000000 and h.mspr_tsi <![CDATA[<]]> 3501000000 then 25
		            when h.mspr_tsi <![CDATA[>=]]> 3501000000 and h.mspr_tsi <![CDATA[<]]> 4001000000 then 26
		            when h.mspr_tsi <![CDATA[>=]]> 4001000000 and h.mspr_tsi <![CDATA[<]]> 4501000000 then 27
		            when h.mspr_tsi <![CDATA[>=]]> 4501000000 and h.mspr_tsi <![CDATA[<]]> 5001000000 then 28
		            when h.mspr_tsi <![CDATA[>=]]> 5001000000 and h.mspr_tsi <![CDATA[<]]> 6001000000 then 29
		            when h.mspr_tsi <![CDATA[>=]]> 6001000000 and h.mspr_tsi <![CDATA[<]]> 7001000000 then 30
		            when h.mspr_tsi <![CDATA[>=]]> 7001000000 and h.mspr_tsi <![CDATA[<]]> 8001000000 then 31
		            when h.mspr_tsi <![CDATA[>=]]> 8001000000 and h.mspr_tsi <![CDATA[<]]> 9001000000 then 32
		            when h.mspr_tsi <![CDATA[>=]]> 9001000000 and h.mspr_tsi <![CDATA[<=]]> 10000000000 then 33
		          else 34 end),
		    (case when h.mspr_tsi <![CDATA[<=]]> 10000000 then 'up to 10'
		            when h.mspr_tsi <![CDATA[>]]> 10000000 and h.mspr_tsi <![CDATA[<]]> 26000000 then '>10 - 25'
		            when h.mspr_tsi <![CDATA[>=]]> 26000000 and h.mspr_tsi <![CDATA[<]]> 51000000 then '>26 - 50'
		            when h.mspr_tsi <![CDATA[>=]]> 51000000 and h.mspr_tsi <![CDATA[<]]> 101000000 then '>51 - 100'
		            when h.mspr_tsi <![CDATA[>=]]> 101000000 and h.mspr_tsi <![CDATA[<]]> 126000000 then '>101 - 125'
		            when h.mspr_tsi <![CDATA[>=]]> 126000000 and h.mspr_tsi <![CDATA[<]]> 151000000 then '>126 - 150'
		            when h.mspr_tsi <![CDATA[>=]]> 151000000 and h.mspr_tsi <![CDATA[<]]> 201000000 then '>151 - 200'
		            when h.mspr_tsi <![CDATA[>=]]> 201000000 and h.mspr_tsi <![CDATA[<]]> 251000000 then '>201 - 250'
		            when h.mspr_tsi <![CDATA[>=]]> 251000000 and h.mspr_tsi <![CDATA[<]]> 301000000 then '>251 - 300'
		            when h.mspr_tsi <![CDATA[>=]]> 301000000 and h.mspr_tsi <![CDATA[<]]> 351000000 then '>301 - 350'
		            when h.mspr_tsi <![CDATA[>=]]> 351000000 and h.mspr_tsi <![CDATA[<]]> 401000000 then '>351 - 400'
		            when h.mspr_tsi <![CDATA[>=]]> 401000000 and h.mspr_tsi <![CDATA[<]]> 451000000 then '>401 - 450'
		            when h.mspr_tsi <![CDATA[>=]]> 451000000 and h.mspr_tsi <![CDATA[<]]> 501000000 then '>451 - 500'
		            when h.mspr_tsi <![CDATA[>=]]> 501000000 and h.mspr_tsi <![CDATA[<]]> 601000000 then '>501 - 600'
		            when h.mspr_tsi <![CDATA[>=]]> 601000000 and h.mspr_tsi <![CDATA[<]]> 701000000 then '>601 - 700'
		            when h.mspr_tsi <![CDATA[>=]]> 701000000 and h.mspr_tsi <![CDATA[<]]> 801000000 then '>701 - 800'
		            when h.mspr_tsi <![CDATA[>=]]> 801000000 and h.mspr_tsi <![CDATA[<]]> 901000000 then '>801 - 900'
		            when h.mspr_tsi <![CDATA[>=]]> 901000000 and h.mspr_tsi <![CDATA[<]]> 1001000000 then '>901 - 1.000'
		            when h.mspr_tsi <![CDATA[>=]]> 1001000000 and h.mspr_tsi <![CDATA[<]]> 1251000000 then '>1.001 - 1.250'
		            when h.mspr_tsi <![CDATA[>=]]> 1251000000 and h.mspr_tsi <![CDATA[<]]> 1501000000 then '>1.251 - 1.500'
		            when h.mspr_tsi <![CDATA[>=]]> 1501000000 and h.mspr_tsi <![CDATA[<]]> 1751000000 then '>1.501 - 1.750'
		            when h.mspr_tsi <![CDATA[>=]]> 1751000000 and h.mspr_tsi <![CDATA[<]]> 2001000000 then '>1.751 - 2.000'
		            when h.mspr_tsi <![CDATA[>=]]> 2001000000 and h.mspr_tsi <![CDATA[<]]> 2501000000 then '>2.001 - 2.500'
		            when h.mspr_tsi <![CDATA[>=]]> 2501000000 and h.mspr_tsi <![CDATA[<]]> 3001000000 then '>2.501 - 3.000'
		            when h.mspr_tsi <![CDATA[>=]]> 3001000000 and h.mspr_tsi <![CDATA[<]]> 3501000000 then '>3.001 - 3.500'
		            when h.mspr_tsi <![CDATA[>=]]> 3501000000 and h.mspr_tsi <![CDATA[<]]> 4001000000 then '>3.501 - 4.000'
		            when h.mspr_tsi <![CDATA[>=]]> 4001000000 and h.mspr_tsi <![CDATA[<]]> 4501000000 then '>4.001 - 4.500'
		            when h.mspr_tsi <![CDATA[>=]]> 4501000000 and h.mspr_tsi <![CDATA[<]]> 5001000000 then '>4.501 - 5.000'
		            when h.mspr_tsi <![CDATA[>=]]> 5001000000 and h.mspr_tsi <![CDATA[<]]> 6001000000 then '>5.001 - 6.000'
		            when h.mspr_tsi <![CDATA[>=]]> 6001000000 and h.mspr_tsi <![CDATA[<]]> 7001000000 then '>6.001 - 7.000'
		            when h.mspr_tsi <![CDATA[>=]]> 7001000000 and h.mspr_tsi <![CDATA[<]]> 8001000000 then '>7.001 - 8.000'
		            when h.mspr_tsi <![CDATA[>=]]> 8001000000 and h.mspr_tsi <![CDATA[<]]> 9001000000 then '>8.001 - 9.000'
		            when h.mspr_tsi <![CDATA[>=]]> 9001000000 and h.mspr_tsi <![CDATA[<=]]> 10000000000 then '>9.001 - 10.000'
		          else '>10.000' end)
			order by urut asc
	</select>
	
	<select id="elions.bas.selectreportClaimByPaid" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        select 
            (case when g.mbc_jlh_bayar <![CDATA[<=]]> 10000000 then 1
                    when g.mbc_jlh_bayar <![CDATA[>]]> 10000000 and g.mbc_jlh_bayar <![CDATA[<]]> 26000000 then 2
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 26000000 and g.mbc_jlh_bayar <![CDATA[<]]> 51000000 then 3
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 51000000 and g.mbc_jlh_bayar <![CDATA[<]]> 101000000 then 4
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 101000000 and g.mbc_jlh_bayar <![CDATA[<]]> 126000000 then 5
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 126000000 and g.mbc_jlh_bayar <![CDATA[<]]> 151000000 then 6
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 151000000 and g.mbc_jlh_bayar <![CDATA[<]]> 201000000 then 7
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 201000000 and g.mbc_jlh_bayar <![CDATA[<]]> 251000000 then 8
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 251000000 and g.mbc_jlh_bayar <![CDATA[<]]> 301000000 then 9
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 301000000 and g.mbc_jlh_bayar <![CDATA[<]]> 351000000 then 10
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 351000000 and g.mbc_jlh_bayar <![CDATA[<]]> 401000000 then 11
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 401000000 and g.mbc_jlh_bayar <![CDATA[<]]> 451000000 then 12
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 451000000 and g.mbc_jlh_bayar <![CDATA[<]]> 501000000 then 13
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 601000000 then 14
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 601000000 and g.mbc_jlh_bayar <![CDATA[<]]> 701000000 then 15
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 701000000 and g.mbc_jlh_bayar <![CDATA[<]]> 801000000 then 16
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 801000000 and g.mbc_jlh_bayar <![CDATA[<]]> 901000000 then 17
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 901000000 and g.mbc_jlh_bayar <![CDATA[<]]> 1001000000 then 18
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 1001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 1251000000 then 19
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 1251000000 and g.mbc_jlh_bayar <![CDATA[<]]> 1501000000 then 20
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 1501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 1751000000 then 21
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 1751000000 and g.mbc_jlh_bayar <![CDATA[<]]> 2001000000 then 22
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 2001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 2501000000 then 23
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 2501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 3001000000 then 24
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 3001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 3501000000 then 25
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 3501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 4001000000 then 26
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 4001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 4501000000 then 27
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 4501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 5001000000 then 28
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 5001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 6001000000 then 29
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 6001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 7001000000 then 30
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 7001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 8001000000 then 31
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 8001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 9001000000 then 32
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 9001000000 and g.mbc_jlh_bayar <![CDATA[<=]]> 10000000000 then 33
                  else 34 end)urut,
            (case when g.mbc_jlh_bayar <![CDATA[<=]]> 10000000 then 'up to 10'
                    when g.mbc_jlh_bayar <![CDATA[>]]> 10000000 and g.mbc_jlh_bayar <![CDATA[<]]> 26000000 then '>10 - 25'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 26000000 and g.mbc_jlh_bayar <![CDATA[<]]> 51000000 then '>26 - 50'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 51000000 and g.mbc_jlh_bayar <![CDATA[<]]> 101000000 then '>51 - 100'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 101000000 and g.mbc_jlh_bayar <![CDATA[<]]> 126000000 then '>101 - 125'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 126000000 and g.mbc_jlh_bayar <![CDATA[<]]> 151000000 then '>126 - 150'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 151000000 and g.mbc_jlh_bayar <![CDATA[<]]> 201000000 then '>151 - 200'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 201000000 and g.mbc_jlh_bayar <![CDATA[<]]> 251000000 then '>201 - 250'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 251000000 and g.mbc_jlh_bayar <![CDATA[<]]> 301000000 then '>251 - 300'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 301000000 and g.mbc_jlh_bayar <![CDATA[<]]> 351000000 then '>301 - 350'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 351000000 and g.mbc_jlh_bayar <![CDATA[<]]> 401000000 then '>351 - 400'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 401000000 and g.mbc_jlh_bayar <![CDATA[<]]> 451000000 then '>401 - 450'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 451000000 and g.mbc_jlh_bayar <![CDATA[<]]> 501000000 then '>451 - 500'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 601000000 then '>501 - 600'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 601000000 and g.mbc_jlh_bayar <![CDATA[<]]> 701000000 then '>601 - 700'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 701000000 and g.mbc_jlh_bayar <![CDATA[<]]> 801000000 then '>701 - 800'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 801000000 and g.mbc_jlh_bayar <![CDATA[<]]> 901000000 then '>801 - 900'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 901000000 and g.mbc_jlh_bayar <![CDATA[<]]> 1001000000 then '>901 - 1.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 1001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 1251000000 then '>1.001 - 1.250'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 1251000000 and g.mbc_jlh_bayar <![CDATA[<]]> 1501000000 then '>1.251 - 1.500'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 1501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 1751000000 then '>1.501 - 1.750'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 1751000000 and g.mbc_jlh_bayar <![CDATA[<]]> 2001000000 then '>1.751 - 2.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 2001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 2501000000 then '>2.001 - 2.500'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 2501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 3001000000 then '>2.501 - 3.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 3001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 3501000000 then '>3.001 - 3.500'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 3501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 4001000000 then '>3.501 - 4.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 4001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 4501000000 then '>4.001 - 4.500'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 4501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 5001000000 then '>4.501 - 5.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 5001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 6001000000 then '>5.001 - 6.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 6001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 7001000000 then '>6.001 - 7.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 7001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 8001000000 then '>7.001 - 8.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 8001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 9001000000 then '>8.001 - 9.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 9001000000 and g.mbc_jlh_bayar <![CDATA[<=]]> 10000000000 then '>9.001 - 10.000'
                  else '>10.000' end)assured,
            sum(case when b.mste_age <![CDATA[<=]]>1 then 1 else 0 end)yr0_1,
            sum(case when b.mste_age <![CDATA[>=]]>2 and b.mste_age <![CDATA[<=]]>5 then 1 else 0 end)yr2_5,
            sum(case when b.mste_age <![CDATA[>=]]>6 and b.mste_age <![CDATA[<=]]>10 then 1 else 0 end)yr6_10,
            sum(case when b.mste_age <![CDATA[>=]]>11 and b.mste_age <![CDATA[<=]]>15 then 1 else 0 end)yr11_15,
            sum(case when b.mste_age <![CDATA[>=]]>16 and b.mste_age <![CDATA[<=]]>20 then 1 else 0 end)yr16_20,
            sum(case when b.mste_age <![CDATA[>=]]>21 and b.mste_age <![CDATA[<=]]>25 then 1 else 0 end)yr21_25,
            sum(case when b.mste_age <![CDATA[>=]]>26 and b.mste_age <![CDATA[<=]]>30 then 1 else 0 end)yr26_30,
            sum(case when b.mste_age <![CDATA[>=]]>31 and b.mste_age <![CDATA[<=]]>35 then 1 else 0 end)yr31_35,
            sum(case when b.mste_age <![CDATA[>=]]>36 and b.mste_age <![CDATA[<=]]>40 then 1 else 0 end)yr36_40,
            sum(case when b.mste_age <![CDATA[>=]]>41 and b.mste_age <![CDATA[<=]]>45 then 1 else 0 end)yr41_45,
            sum(case when b.mste_age <![CDATA[>=]]>46 and b.mste_age <![CDATA[<=]]>50 then 1 else 0 end)yr46_50,
            sum(case when b.mste_age <![CDATA[>=]]>51 and b.mste_age <![CDATA[<=]]>55 then 1 else 0 end)yr51_55,
            sum(case when b.mste_age <![CDATA[>=]]>56 and b.mste_age <![CDATA[<=]]>60 then 1 else 0 end)yr56_60,
            sum(case when b.mste_age <![CDATA[>=]]>61 and b.mste_age <![CDATA[<=]]>65 then 1 else 0 end)yr61_65,
            sum(case when b.mste_age <![CDATA[>=]]>66 and b.mste_age <![CDATA[<=]]>70 then 1 else 0 end)yr66_70,
            sum(case when b.mste_age <![CDATA[>=]]>71 then 1 else 0 end)yr71_up,
            sum(case when b.mste_age <![CDATA[>=]]>0 then 1 else 0 end)yr_all
        from eka.mst_policy a, 
            eka.mst_insured b, 
            eka.mst_client_new c, 
            eka.mst_claim d,
            eka.mst_det_claim e, 
            eka.lst_diagnosis f, 
            eka.mst_bayar_claim g, 
            eka.mst_product_insured h, 
            eka.id_stat_acp i, 
            eka.lst_det_bisnis j,
            eka.mst_det_customer_group_mri k,
            eka.lst_customer_group_mri l,
            eka.mst_client cabang_mri,
            (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
                x.lca_id = y.lca_id
                and x.lwk_id = y.lwk_id
                and x.lsrg_id = y.lsrg_id)cabang_ind,
            (select * from eka.mst_worksheet where insured_no=1) m
        where
              <isEqual property="polis" compareValue="ALL">
                  a.lstb_id in (1,2)
              </isEqual> 
              <isEqual property="polis" compareValue="INDIVIDU">
                  a.lstb_id in (1)
              </isEqual>
              <isEqual property="polis" compareValue="MRI">
                  a.lstb_id in (2)
              </isEqual>
              and a.reg_spaj = b.reg_spaj
              and b.mste_insured = c.mcl_id
              and b.reg_spaj = d.reg_spaj
              and b.mste_insured_no = d.mste_insured_no
              and d.reg_spaj = e.reg_spaj
              and d.mste_insured_no = e.mste_insured_no
              and d.mscl_number = e.mscl_number
              and e.lsdp_id = f.lst_lsd_id
              and d.reg_spaj = g.reg_spaj
              and d.mste_insured_no = g.mste_insured_no
              and d.mscl_number = g.mscl_number
              and b.reg_spaj = h.reg_spaj
              and b.mste_insured_no = h.mste_insured_no
              and d.st_acp = i.st_acp
              and h.lsbs_id = j.lsbs_id
              and h.lsdbs_number = j.lsdbs_number
              and a.mspo_customer = cabang_mri.mcl_id(+)
              and a.reg_spaj = cabang_ind.reg_spaj(+)
              and a.reg_spaj = m.reg_spaj(+)
              and a.MSPO_CUSTOMER = k.MDC_MCL_ID(+)
              and k.MDC_GROUP =  l.LCG_GROUP(+)
              and d.lstc_id = 1
              and h.lsbs_id <![CDATA[<=]]>599
              and h.lsbs_id <![CDATA[!=]]>400    
              <isNotEmpty property="grup_bank">
                <isNotEqual property="grup_bank" compareValue="ALL" prepend=" AND ">
                    l.LCG_GROUP = #grup_bank#
                </isNotEqual>
              </isNotEmpty>
              <isNotEmpty property="nama_bank">
                <isNotEqual property="nama_bank" compareValue="ALL" prepend=" AND ">
                    cabang_mri.MCL_ID = #nama_bank#
                </isNotEqual>
              </isNotEmpty>
              <isNotEmpty property="jenis_periode">
                 <isEqual property="jenis_periode" compareValue="1">
                     and d.mscl_tgl_input between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
                 </isEqual>
                 <isEqual property="jenis_periode" compareValue="2">
                     and trunc(e.mdc_tgl_mati) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
                 </isEqual>
                 <isEqual property="jenis_periode" compareValue="3">
                      and trunc(g.mbc_tgl_bayar) between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
                  </isEqual>
             </isNotEmpty>
              group  by 
                (case when g.mbc_jlh_bayar <![CDATA[<=]]> 10000000 then 1
                    when g.mbc_jlh_bayar <![CDATA[>]]> 10000000 and g.mbc_jlh_bayar <![CDATA[<]]> 26000000 then 2
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 26000000 and g.mbc_jlh_bayar <![CDATA[<]]> 51000000 then 3
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 51000000 and g.mbc_jlh_bayar <![CDATA[<]]> 101000000 then 4
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 101000000 and g.mbc_jlh_bayar <![CDATA[<]]> 126000000 then 5
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 126000000 and g.mbc_jlh_bayar <![CDATA[<]]> 151000000 then 6
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 151000000 and g.mbc_jlh_bayar <![CDATA[<]]> 201000000 then 7
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 201000000 and g.mbc_jlh_bayar <![CDATA[<]]> 251000000 then 8
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 251000000 and g.mbc_jlh_bayar <![CDATA[<]]> 301000000 then 9
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 301000000 and g.mbc_jlh_bayar <![CDATA[<]]> 351000000 then 10
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 351000000 and g.mbc_jlh_bayar <![CDATA[<]]> 401000000 then 11
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 401000000 and g.mbc_jlh_bayar <![CDATA[<]]> 451000000 then 12
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 451000000 and g.mbc_jlh_bayar <![CDATA[<]]> 501000000 then 13
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 601000000 then 14
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 601000000 and g.mbc_jlh_bayar <![CDATA[<]]> 701000000 then 15
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 701000000 and g.mbc_jlh_bayar <![CDATA[<]]> 801000000 then 16
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 801000000 and g.mbc_jlh_bayar <![CDATA[<]]> 901000000 then 17
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 901000000 and g.mbc_jlh_bayar <![CDATA[<]]> 1001000000 then 18
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 1001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 1251000000 then 19
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 1251000000 and g.mbc_jlh_bayar <![CDATA[<]]> 1501000000 then 20
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 1501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 1751000000 then 21
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 1751000000 and g.mbc_jlh_bayar <![CDATA[<]]> 2001000000 then 22
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 2001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 2501000000 then 23
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 2501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 3001000000 then 24
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 3001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 3501000000 then 25
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 3501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 4001000000 then 26
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 4001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 4501000000 then 27
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 4501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 5001000000 then 28
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 5001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 6001000000 then 29
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 6001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 7001000000 then 30
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 7001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 8001000000 then 31
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 8001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 9001000000 then 32
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 9001000000 and g.mbc_jlh_bayar <![CDATA[<=]]> 10000000000 then 33
                  else 34 end),
            (case when g.mbc_jlh_bayar <![CDATA[<=]]> 10000000 then 'up to 10'
                    when g.mbc_jlh_bayar <![CDATA[>]]> 10000000 and g.mbc_jlh_bayar <![CDATA[<]]> 26000000 then '>10 - 25'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 26000000 and g.mbc_jlh_bayar <![CDATA[<]]> 51000000 then '>26 - 50'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 51000000 and g.mbc_jlh_bayar <![CDATA[<]]> 101000000 then '>51 - 100'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 101000000 and g.mbc_jlh_bayar <![CDATA[<]]> 126000000 then '>101 - 125'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 126000000 and g.mbc_jlh_bayar <![CDATA[<]]> 151000000 then '>126 - 150'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 151000000 and g.mbc_jlh_bayar <![CDATA[<]]> 201000000 then '>151 - 200'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 201000000 and g.mbc_jlh_bayar <![CDATA[<]]> 251000000 then '>201 - 250'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 251000000 and g.mbc_jlh_bayar <![CDATA[<]]> 301000000 then '>251 - 300'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 301000000 and g.mbc_jlh_bayar <![CDATA[<]]> 351000000 then '>301 - 350'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 351000000 and g.mbc_jlh_bayar <![CDATA[<]]> 401000000 then '>351 - 400'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 401000000 and g.mbc_jlh_bayar <![CDATA[<]]> 451000000 then '>401 - 450'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 451000000 and g.mbc_jlh_bayar <![CDATA[<]]> 501000000 then '>451 - 500'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 601000000 then '>501 - 600'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 601000000 and g.mbc_jlh_bayar <![CDATA[<]]> 701000000 then '>601 - 700'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 701000000 and g.mbc_jlh_bayar <![CDATA[<]]> 801000000 then '>701 - 800'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 801000000 and g.mbc_jlh_bayar <![CDATA[<]]> 901000000 then '>801 - 900'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 901000000 and g.mbc_jlh_bayar <![CDATA[<]]> 1001000000 then '>901 - 1.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 1001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 1251000000 then '>1.001 - 1.250'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 1251000000 and g.mbc_jlh_bayar <![CDATA[<]]> 1501000000 then '>1.251 - 1.500'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 1501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 1751000000 then '>1.501 - 1.750'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 1751000000 and g.mbc_jlh_bayar <![CDATA[<]]> 2001000000 then '>1.751 - 2.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 2001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 2501000000 then '>2.001 - 2.500'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 2501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 3001000000 then '>2.501 - 3.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 3001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 3501000000 then '>3.001 - 3.500'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 3501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 4001000000 then '>3.501 - 4.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 4001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 4501000000 then '>4.001 - 4.500'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 4501000000 and g.mbc_jlh_bayar <![CDATA[<]]> 5001000000 then '>4.501 - 5.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 5001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 6001000000 then '>5.001 - 6.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 6001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 7001000000 then '>6.001 - 7.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 7001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 8001000000 then '>7.001 - 8.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 8001000000 and g.mbc_jlh_bayar <![CDATA[<]]> 9001000000 then '>8.001 - 9.000'
                    when g.mbc_jlh_bayar <![CDATA[>=]]> 9001000000 and g.mbc_jlh_bayar <![CDATA[<=]]> 10000000000 then '>9.001 - 10.000'
                  else '>10.000' end)
            order by urut asc
    </select>

	<select id="elions.bas.selectPolicyRelationDMTM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select a.reg_spaj, eka.utils.pemegang(a.reg_spaj) pemegang, eka.utils.tertanggung(a.reg_spaj) tertanggung, a.lsre_id, MAX(b.no_urut) peserta,
		       a.mspo_age umur_pp, k.mste_age umur_tertanggung,c.umur umur_tt1, d.umur umur_tt2, e.umur umur_tt3, l.umur umur_tt4,m.umur umur_tt5,
		       i. mspe_sex jenkel_pp, j.mspe_sex jenkel_tertanggung,f.kelamin jenkel_tt1,g.kelamin jenkel_tt2,h.kelamin jenkel_tt3,n.kelamin jenkel_tt4,o.kelamin jenkel_tt4        
		    from eka.mst_policy a, eka.mst_peserta b,
		            (select p.reg_spaj,p.umur from eka.mst_peserta p where p.no_urut='1')c,
		            (select p.reg_spaj,p.umur from eka.mst_peserta p where p.no_urut='2')d,
		            (select p.reg_spaj,p.umur from eka.mst_peserta p where p.no_urut='3')e,
		            (select p.reg_spaj,p.umur from eka.mst_peserta p where p.no_urut='4')l,
		            (select p.reg_spaj,p.umur from eka.mst_peserta p where p.no_urut='5')m,
		            (select p.reg_spaj,p.kelamin from eka.mst_peserta p where p.no_urut='1')f,
		            (select p.reg_spaj,p.kelamin from eka.mst_peserta p where p.no_urut='2')g,
		            (select p.reg_spaj,p.kelamin from eka.mst_peserta p where p.no_urut='3')h,
		            (select p.reg_spaj,p.kelamin from eka.mst_peserta p where p.no_urut='4')n,
		            (select p.reg_spaj,p.kelamin from eka.mst_peserta p where p.no_urut='5')o,
		            (select p.reg_spaj,q.mspe_sex from eka.mst_policy p, eka.mst_client_new q where p.mspo_policy_holder = q.mcl_id)i,
		            (select p.reg_spaj,q.mspe_sex from eka.mst_policy p, eka.mst_client_new q, eka.mst_insured r where p.reg_spaj = r.reg_spaj and r.mste_insured = q.mcl_id)j,
		         eka.mst_insured k
		    where a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		          and a.reg_spaj = b.reg_spaj(+)
		          and a.reg_spaj = c.reg_spaj(+)
		          and a.reg_spaj = d.reg_spaj(+)
		          and a.reg_spaj = e.reg_spaj(+)
		          and a.reg_spaj = f.reg_spaj(+)
		          and a.reg_spaj = g.reg_spaj(+)
		          and a.reg_spaj = h.reg_spaj(+)
		          and a.reg_spaj = i.reg_spaj(+)
		          and a.reg_spaj = j.reg_spaj(+)
		          and a.reg_spaj = k.reg_spaj
		          and a.reg_spaj = l.reg_spaj(+)
		          and a.reg_spaj = m.reg_spaj(+)
		          and a.reg_spaj = n.reg_spaj(+)
		          and a.reg_spaj = o.reg_spaj(+)
		    group by a.reg_spaj,a.lsre_id,c.umur,d.umur,e.umur,l.umur,m.umur,f.kelamin,g.kelamin,h.kelamin,n.kelamin,o.kelamin,i.mspe_sex,j.mspe_sex,a.mspo_age,k.mste_age
    </select>
	
	<select id="elions.bas.selectCountJnFollowUp" parameterClass="java.util.HashMap" resultClass="int">
		select count(*)
		  from eka.mst_followup
		 where reg_spaj =rpad(replace(#spaj#,'.'),11,' ')
		   and lsfu_id=#lsfu_id#
	</select>
	
	<select id="elions.bas.selectAutoDebetFollowupBilling" parameterClass="string" resultClass="java.util.HashMap">
		SELECT   
		    row_number() OVER (ORDER BY ket2,ket1,EKA.MST_EKA_RECUR.TGL_TAGIHAN) no,
		    to_char(EKA.MST_EKA_RECUR.TGL_TAGIHAN,'dd/MM/yyyy')tgl_tagihan,
		    (case when to_char(EKA.MST_EKA_RECUR.TGL_TERIMA,'dd/MM/yyyy') is null then ' ' else to_char(EKA.MST_EKA_RECUR.TGL_TERIMA,'dd/MM/yyyy') end)tgl_terima,
		    EKA.MST_EKA_RECUR.NAMA_CUSTOMER,
		    decode(EKA.MST_EKA_RECUR.REC_TYPE,00,'CC','TABUNGAN')jenis,
		    eka.lst_bank_pusat.lsbp_nama,EKA.MST_EKA_RECUR.NO_REKENING,
		    EKA.MST_EKA_RECUR.KET2 tahun,EKA.MST_EKA_RECUR.KET1 ke,
		    (case when EKA.MST_EKA_RECUR.KET3 is null then ' ' else to_char(EKA.MST_EKA_RECUR.KET3) end)freq,
		    EKA.MST_EKA_RECUR.TOTAL_INVOICE,
		    (case 
		        when EKA.MST_EKA_RECUR.VAT <![CDATA[<=]]> 1 then
		            nvl(eka.lst_jn_hasil_recur.ljhr_keterangan, 'GAGAL')
		        else 'BERHASIL' end) ket,
		    (select count(*)from EKA.MST_EKA_RECUR 
		        where EKA.MST_EKA_RECUR.VAT in(2,3) 
		        and EKA.MST_EKA_RECUR.SUBS_NUMBER =rpad(replace(#value#,'.'),11,' '))nyoss,
		    (select count(*)from EKA.MST_EKA_RECUR 
		        where EKA.MST_EKA_RECUR.VAT in(null, 0,1) 
		        and EKA.MST_EKA_RECUR.SUBS_NUMBER =rpad(replace(#value#,'.'),11,' '))gal,
		    (select sum(TOTAL_INVOICE)from EKA.MST_EKA_RECUR 
		        where EKA.MST_EKA_RECUR.VAT in(2,3) 
		        and EKA.MST_EKA_RECUR.SUBS_NUMBER =rpad(replace(#value#,'.'),11,' '))tot_nyos,
		    (select sum(TOTAL_INVOICE)from EKA.MST_EKA_RECUR 
		        where EKA.MST_EKA_RECUR.VAT in(null,0,1) 
		            and EKA.MST_EKA_RECUR.SUBS_NUMBER =rpad(replace(#value#,'.'),11,' '))tot_gal
		FROM   
		    EKA.MST_EKA_RECUR,eka.lst_bank_pusat,
		    EKA.MST_POLICY,
		    EKA.MST_CLIENT,
		    EKA.LST_JN_HASIL_RECUR
		WHERE       
		    (EKA.MST_EKA_RECUR.LJHR_ID = EKA.LST_JN_HASIL_RECUR.LJHR_ID(+))
		    AND (EKA.MST_EKA_RECUR.SUBS_NUMBER = EKA.MST_POLICY.REG_SPAJ)
		    AND (EKA.MST_POLICY.MSPO_POLICY_HOLDER = EKA.MST_CLIENT.MCL_ID)
		    and (EKA.MST_EKA_RECUR.LBN_ID= eka.lst_bank_pusat.LSBP_ID(+))
		    AND ( (EKA.MST_EKA_RECUR.SUBS_NUMBER =rpad(replace(#value#,'.'),11,' ')))
		order by 
		    ket2,ket1,EKA.MST_EKA_RECUR.TGL_TAGIHAN asc
	</select>
	
	<select id="elions.bas.selectViewBillingFollowup" parameterClass="string" resultClass="java.util.HashMap">
		SELECT 
		    c.MSBI_TAHUN_KE,   
		    c.MSBI_PREMI_KE,       
		    to_char(c.MSBI_BEG_DATE,'dd/MM/yyyy')msbi_beg_date,   
		    to_char(c.MSBI_END_DATE,'dd/MM/yyyy')msbi_end_date,   
		    to_char(d.MSBI_DUE_DATE ,'dd/MM/yyyy')msbi_due_date,
		    (case when c.lku_id = '01' then 'Rp'
          		when c.lku_id = '02' then 'USD' else ' ' end)LKU_ID,     
		    (case when e.MSPRO_NILAI_KURS is null then ' ' else to_char(e.MSPRO_NILAI_KURS) end)MSPRO_NILAI_KURS,
		    c.PREMI_STD,   
		    c.PREMI_RIDER,   
		    c.PREMI_EXTRA,   
		    c.PREMI_HCR,   
		    c.DISCOUNT,   
		    d.MSBI_STAMP,   
		    (case when d.msbi_paid = 1 then 'Paid' else 'OutS' end)MSBI_PAID,  
		    (case when c.lku_id = '01' 
        		then c.premi_std + c.premi_rider + c.premi_extra + nvl(c.premi_hcr,0) + d.msbi_stamp - c.discount
       			else c.premi_std + c.premi_rider + c.premi_extra + d.msbi_stamp - c.discount end)TOTAL_TAGIH
		FROM 
		    EKA.MST_PAYMENT a,   
		    EKA.MST_TAG_PAYMENT b,   
		    EKA.V_BILLING c,   
		    EKA.MST_BILLING d,   
		    EKA.MST_PRODUCTION e  
		WHERE 
		    b.mspa_payment_id = a.mspa_payment_id(+)
		    and b.reg_spaj(+) = c.reg_spaj
		    and c.msbi_tahun_ke = b.msbi_tahun_ke(+)
		    and c.msbi_premi_ke = b.msbi_premi_ke(+)
		    and d.reg_spaj = e.reg_spaj(+)
		    and d.msbi_tahun_ke = e.msbi_tahun_ke(+)
		    and d.msbi_premi_ke = e.msbi_premi_ke(+)
		    and d.REG_SPAJ = c.REG_SPAJ
		    and d.MSBI_TAHUN_KE = c.MSBI_TAHUN_KE
		    and d.MSBI_PREMI_KE = c.MSBI_PREMI_KE
		    and c.REG_SPAJ = #value#
		order by d.msbi_tahun_ke, d.msbi_premi_ke
	</select>
	
	<select id="elions.bas.selectViewTahapanFollowup" parameterClass="string" resultClass="java.util.HashMap">
		SELECT 
		    a.MSTAH_TAHAPAN_KE ,
		    a.MSTAH_NO_TAHAPAN ,
		    NVL(to_char(a.MSTAH_BEG_ACTIVE,'dd/MM/yyyy'),' ')MSTAH_BEG_ACTIVE ,
		    NVL(a.MSTAH_JUMLAH, 0) MSTAH_JUMLAH,
		    NVL(to_char(a.MSTAH_JT_TEMPO,'dd/MM/yyyy'),' ')MSTAH_JT_TEMPO ,
		    NVL(to_char(a.MSTAH_TGL_KONFIRMASI,'dd/MM/yyyy'),' ')MSTAH_TGL_KONFIRMASI ,
		    a.MSTAH_PERSEN ,
		    CASE WHEN a.PCT_BONUS IS NULL THEN 0 ELSE a.PCT_BONUS END AS PCT_BONUS ,    
		    NVL((select LSJTA_TYPE from eka.lst_jn_tahapan where lsjta_id = b.lsjta_id),' ')LSJTA,
		    NVL(b.MSBAT_JUMLAH, 0)MSBAT_JUMLAH ,
		    NVL(to_char(a.MSTAH_TGL_PROSES,'dd/MM/yyyy'),' ')MSTAH_TGL_PROSES, 
		    NVL(to_char(a.MSTAH_TGL_PRINT,'dd/MM/yyyy'),' ')MSTAH_TGL_PRINT ,
		    NVL(to_char(a.MSTAH_TGL_TRANS,'dd/MM/yyyy'),' ')MSTAH_TGL_TRANS ,
		    NVL(to_char(a.MSTAH_TGL_BAYAR,'dd/MM/yyyy'),' ')MSTAH_TGL_BAYAR 
		FROM 
		    EKA.MST_TAHAPAN a ,
		    EKA.MST_BAYAR_TAHAPAN b
		WHERE 
		    a.REG_SPAJ = b.REG_SPAJ(+)
		    and a.MSTAH_TAHAPAN_KE = b.MSTAH_TAHAPAN_KE (+)
		    and a.LSPD_ID <![CDATA[<>]]> 15
		    and a.REG_SPAJ = #value#
		ORDER BY 
		    a.REG_SPAJ ASC,
		    a.MSTAH_TAHAPAN_KE ASC
	</select>
	
	<select id="elions.bas.selectViewSimpananFollowup" parameterClass="string" resultClass="java.util.HashMap">
		SELECT 
			a.REG_SPAJ,
            a.MSSIM_NUMBER,
            a.MSTAH_NO_TAHAPAN,
            NVL(to_char(a.MSSIM_TGL_INPUT,'dd/MM/yyyy'),' ')MSSIM_TGL_INPUT,
            NVL(to_char(a.MSSIM_BEG_DATE,'dd/MM/yyyy'),' ')MSSIM_BEG_DATE,
            NVL(a.MSSIM_NO_DEPOSITO,' ')MSSIM_NO_DEPOSITO,
            NVL(a.MSSIM_JUMLAH, 0)MSSIM_JUMLAH,
            NVL(to_char(a.MSSIM_PERSEN)||' %',' ')MSSIM_PERSEN,
            NVL(to_char(round(( a.MSSIM_JUMLAH *  a.MSSIM_PERSEN / 100),2)),' ')BUNGA,
            NVL(to_char(a.MSSIM_END_DATE,'dd/MM/yyyy'),' ')MSSIM_END_DATE,
            NVL(b.MBS_JUMLAH, 0)MBS_JUMLAH,
            NVL(a.MSSIM_NO_REG,' ')MSSIM_NO_REG,
            NVL(to_char(a.MSSIM_TGL_KLAIM,'dd/MM/yyyy'),' ')MSSIM_TGL_KLAIM,
            NVL(to_char(a.MSSIM_TGL_TRANS,'dd/MM/yyyy'),' ')MSSIM_TGL_TRANS,
            NVL((select lscsi_claim from eka.lst_claim_simpanan where lscsi_id = b.LSCSI_ID),' ')LSCSI_ID,
            a.LKU_ID,
            a.MSSIM_FLAG
        FROM 
            EKA.MST_SIMPANAN a,
            EKA.MST_BAYAR_SIMPANAN b
        WHERE 
            a.REG_SPAJ = b.REG_SPAJ(+)
            and a.MSSIM_NUMBER = b.MSSIM_NUMBER(+)
            and a.REG_SPAJ = #value#
        ORDER BY 
            a.REG_SPAJ ASC,
            a.MSSIM_NUMBER ASC
	</select>
	
	<select id="elions.bas.selectViewCallSummary" parameterClass="string" resultClass="java.util.HashMap">
		SELECT  
			row_number() OVER (ORDER BY a.FLAG_INOUT) no,
		    a.LUS_ID ,
		    (case when a.FLAG_INOUT = 'I' then 'Incoming Call'
		          when a.FLAG_INOUT = 'B' then 'Berkas'
		          when a.FLAG_INOUT = 'W' then 'WIC'
		          when a.FLAG_INOUT = 'S' then 'SMS' else 'Outgoing Call' end)FLAG_INOUT ,
		    to_char(a.MSCSF_BEG_TGL_DIAL,'dd/MM/yyyy')MSCSF_BEG_TGL_DIAL ,
		    to_char(a.MSCSF_END_TGL_DIAL,'dd/MM/yyyy')MSCSF_END_TGL_DIAL ,
		    NVL(to_char(a.MSCSF_TGL_BACK,'dd/MM/yyyy'),' ')MSCSF_TGL_BACK ,
		    a.MSCSF_KET,
		    b.MSPO_POLICY_NO ,
		    c.MCL_FIRST||' '||c.MCL_MIDDLE||' '||c.MCL_LAST as nm_pp,
		    (select lca_nama from eka.lst_cabang where lca_id = d.LCA_ID)LCA_ID ,
		    NVL(to_char(e.LSCSF_NAMA),' ') LSCSF_NAMA ,
		    a.LSCSF_JENIS  ,
		    NVL(to_char(a.MSCSF_OCR),' ') MSCSF_OCR , 
		    NVL(to_char(a.MSCSF_DIR),' ') MSCSF_DIR , 
		    d.LUS_LOGIN_NAME user_name
		FROM 
		    EKA.MST_CSF_DIAL a ,
		    EKA.MST_POLICY b ,
		    EKA.MST_CLIENT c ,
		    EKA.LST_USER d ,
		    EKA.LST_CSF_DIAL e     
		WHERE 
		    a.REG_SPAJ = b.REG_SPAJ 
		    and b.MSPO_POLICY_HOLDER = c.MCL_ID 
		    and d.LUS_ID = a.LUS_ID
		    and a.LSCSF_JENIS = e.LSCSF_JENIS(+)
		    and a.REG_SPAJ = #value#
		ORDER BY a.FLAG_INOUT,a.MSCSF_BEG_TGL_DIAL
	</select>
	
	<select id="elions.bas.selectFollowupPremiKeTopup" parameterClass="com.ekalife.elions.model.Followup" resultClass="int">
		select 
		    NVL(msbi_premi_ke,0)premi_ke 
		from
		    eka.mst_billing
		where 
		    reg_spaj = #reg_spaj#
		    and msbi_tahun_ke = #msbi_tahun_ke#
		    and msbi_premi_ke = #msbi_premi_ke#+1
		    and msbi_flag_topup = 2
	</select>
	
	<select id="elions.bas.selectLibur" parameterClass="string" resultClass="int">
		select count(lh_date) from eka.lst_libur where lh_date = to_date(#value#,'dd/MM/yyyy')
	</select>
	
	<select id="elions.bas.selectReportDataUpload" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct
		    to_char(a.mspo_input_date,'dd/mm/yyyy') tgl_input, 
		    (select max(to_char(tgl_input,'dd/mm/yyyy')) 
		    from eka.mst_scan 
		    where no_indek = a.reg_spaj) tgl_scan,
		    a.reg_spaj, 
		    c.lus_full_name user_input, 
		    d.lsrg_nama cabang, 
		    (select max(msps_date) 
		        from eka.mst_position_spaj 
		        where lspd_id = 27 
		        and msps_desc like '%BACK TRANSFER KE BAS%' 
		        and reg_spaj = a.reg_spaj)tgl_back_transfer_bas,
		    (case when 
		    (select z.msps_desc 
		        from eka.mst_position_spaj z 
		        where z.msps_date = (select max(x.msps_date) 
		                                from eka.mst_position_spaj x 
		                                where x.msps_desc like '%KE ADMIN%' and x.reg_spaj = a.reg_spaj)
		        and z.reg_spaj=a.reg_spaj) is not null then (select z.msps_desc 
		        from eka.mst_position_spaj z 
		        where z.msps_date = (select max(x.msps_date) 
		                                from eka.mst_position_spaj x 
		                                where x.msps_desc like '%KE ADMIN%' and x.reg_spaj = a.reg_spaj)
		        and z.reg_spaj=a.reg_spaj) else 
		        (select z.msps_desc 
		        from eka.mst_position_spaj z 
		        where z.msps_date = (select max(x.msps_date) 
		                                from eka.mst_position_spaj x 
		                                where X.LSPD_ID=1 and X.SUB_ID_BAS is not null AND X.LSSP_ID=10 and x.reg_spaj = a.reg_spaj)
		        and z.reg_spaj=a.reg_spaj)
		        end ) keterangan,  
		     (case when 
		     (select distinct lu.lus_full_name from eka.mst_position_spaj v, eka.lst_user lu
		        where v.msps_date = (select max(x.msps_date) from eka.mst_position_spaj x 
		                                where ( x.msps_desc like '%KE ADMIN%') and x.reg_spaj = v.reg_spaj)
		        and v.lus_id =lu.lus_id and v.reg_spaj=a.reg_spaj) is not null then
		            (select distinct lu.lus_full_name from eka.mst_position_spaj v, eka.lst_user lu
		                where v.msps_date = (select max(x.msps_date) from eka.mst_position_spaj x 
		                                where ( x.msps_desc like '%KE ADMIN%') and x.reg_spaj = v.reg_spaj)
		                and v.lus_id =lu.lus_id
		                and v.reg_spaj=a.reg_spaj) else 
		            (select distinct lu.lus_full_name from eka.mst_position_spaj v, eka.lst_user lu
		                where v.msps_date = (select max(x.msps_date) from eka.mst_position_spaj x 
		                                        where X.LSPD_ID=1 and X.SUB_ID_BAS is not null AND X.LSSP_ID=10 and x.reg_spaj = v.reg_spaj)
		                and v.lus_id =lu.lus_id and v.reg_spaj=a.reg_spaj) end)user_bta,
		        EKA.UTILS.PEMEGANG(a.reg_spaj)nama_pemegang,
		     (select distinct lu.lus_full_name 
		        from eka.mst_position_spaj v, eka.lst_user lu
		        where v.msps_date = (select min(x.msps_date) 
		                                from eka.mst_position_spaj x 
		                                where ( x.msps_desc like '%TRANSFER KE PROSES CHECKING%') 
		                                and x.reg_spaj = v.reg_spaj)
		        and v.lus_id =lu.lus_id
		        and v.reg_spaj=a.reg_spaj) user_transfer,
		                (select distinct lu.lus_full_name
        from eka.mst_position_spaj v, eka.lst_user lu
        where v.msps_date = (
          select min(x.msps_date)
          from eka.mst_position_spaj x
          where ( x.msps_desc like '%TRANSFER KE SPEEDY%')
          and x.reg_spaj = v.reg_spaj)
          and v.lus_id =lu.lus_id
          and v.reg_spaj=a.reg_spaj) user_transfer_speedy,  
		     to_char(r.tgl_input,'dd/mm/yyyy') tgl_bsb,
		     to_char(TH.TGL_TRANSFER_PROSES_CHECKING,'dd/mm/yyyy') tgl_transfer,
		     (case when (to_char(TH.TGL_BACK_TO_ADMIN,'dd/mm/yyyy')) is not null then
		         (to_char(TH.TGL_BACK_TO_ADMIN,'dd/mm/yyyy')) else 
		         (select to_char(z.msps_date,'dd/mm/yyyy') from eka.mst_position_spaj z 
		            where z.msps_date = (select max(x.msps_date) from eka.mst_position_spaj x 
		                                    where X.LSPD_ID=1 and X.SUB_ID_BAS is not null AND X.LSSP_ID=10 and x.reg_spaj = a.reg_spaj)
		            and z.reg_spaj=a.reg_spaj) end) tgl_bta,
		     (case when TH.TGL_BACK_TO_ADMIN is null 
		        then abs(round(TH.TGL_TRANSFER_PROSES_CHECKING-TH.TGL_INPUT_SPAJ_ADMIN)) 
		        else abs(round(TH.TGL_TRANSFER_PROSES_CHECKING-TH.TGL_BACK_TO_ADMIN)) end)lama_proses_pending,
         (select eka.utils.agen(msag_id) from eka.mst_agent_prod where reg_spaj = a.reg_spaj and lsle_id =4  ) nama_pemutup, 
         (select eka.utils.agen(msag_id) from eka.mst_agent_prod where reg_spaj = a.reg_spaj and lsle_id =3 ) nama_leader,
         '' nama_reff, '' cabang_reff, 
         (SELECT   z.msps_desc
           FROM   eka.mst_position_spaj z
          WHERE   z.msps_date =
                     (SELECT   MAX (x.msps_date)
                        FROM   eka.mst_position_spaj x
                       WHERE   x.msps_desc LIKE '%FR:%'
                       AND X.REG_SPAJ = Z.REG_SPAJ)
         AND z.reg_spaj = a.reg_spaj) ket_FURTHER,  
         (SELECT   EKA.UTILS.USER_INPUT(z.lus_id)
           FROM   eka.mst_position_spaj z
          WHERE   z.msps_date =
                     (SELECT   MAX (x.msps_date)
                        FROM   eka.mst_position_spaj x
                       WHERE   x.msps_desc LIKE '%FR:%'
                        and x.reg_Spaj = z.reg_spaj)
         AND z.reg_spaj = a.reg_spaj) user_FURTHER, a.mspo_no_blanko no_blanko
		from
		    eka.mst_policy a,
		    eka.mst_scan b,
		    eka.lst_user c,
		    eka.lst_region d,
		    eka.mst_product_insured f,
		    eka.mst_insured e,
		    eka.mst_trans_history th,
		    (select min (tgl_input)tgl_input,no_indek from eka.mst_scan where tipe_file='BSB' group by no_indek)r
		where
		    a.reg_spaj = b.no_indek(+)
   		    <isEqual property="jn_transfer" compareValue="0">
		    	and a.lspd_id in (1)
		    </isEqual>
		    <isEqual property="jn_transfer" compareValue="1">
		     	and e.lssa_id = 3
		    	and a.lspd_id in (1,2,27)
		    </isEqual>
		    and a.lus_id = c.lus_id
		    and a.lca_id = d.lca_id
		    and a.lwk_id = d.lwk_id
		    and a.lsrg_id = d.lsrg_id
		    and a.reg_spaj = f.reg_spaj
		    and f.lsbs_id <![CDATA[<]]> 300
		    and a.lca_id not in ('09')
		    and c.lde_id not in ('24')
		    and a.reg_spaj not in (SELECT distinct reg_spaj FROM EKA.MST_PENDING_MRI)
		    and not (f.lsbs_id = 163 and f.lsdbs_number in (6,7,8,9,10))
			        <isEqual property="jenis" compareValue="0">
			        	and a.mspo_input_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			        </isEqual>
			        <isEqual property="jenis" compareValue="1">
			        	and b.tgl_input between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			        </isEqual>
			        <isEqual property="jn_transfer" compareValue="0">
			        	and exists (select 1 from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like'BACK TRANSFER KE ADMIN:%')
			        	and not exists(select reg_spaj from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lspd_id = 27)
			        </isEqual>
			        <isEqual property="jn_transfer" compareValue="1">
			        	and exists(select reg_spaj from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lspd_id = 27)
			        </isEqual>
		    and a.reg_spaj = th.reg_spaj
		    and th.jenis = 23
		    and a.reg_Spaj=R.NO_INDEK(+)
		    and a.reg_spaj = e.reg_spaj
		UNION
		select distinct
		    to_char(a.mspo_input_date,'dd/mm/yyyy') tgl_input, 
		    (select max(to_char(tgl_input,'dd/mm/yyyy')) 
		        from eka.mst_scan 
		        where no_indek = a.reg_spaj) tgl_scan,
		    a.reg_spaj, 
		    c.lus_full_name user_input, 
		    d.lsrg_nama cabang, 
		    (select max(msps_date) 
		        from eka.mst_position_spaj 
		        where lspd_id = 27 
		        and msps_desc like '%BACK TRANSFER KE BAS%' 
		        and reg_spaj = a.reg_spaj)tgl_back_transfer_bas,
		(case when 
		    (select z.msps_desc 
		        from eka.mst_position_spaj z 
		        where z.msps_date = (select max(x.msps_date) 
		                                from eka.mst_position_spaj x 
		                                where x.msps_desc like '%KE ADMIN%' and x.reg_spaj = a.reg_spaj)
		        and z.reg_spaj=a.reg_spaj) is not null then (select z.msps_desc 
		        from eka.mst_position_spaj z 
		        where z.msps_date = (select max(x.msps_date) 
		                                from eka.mst_position_spaj x 
		                                where x.msps_desc like '%KE ADMIN%' and x.reg_spaj = a.reg_spaj)
		        and z.reg_spaj=a.reg_spaj) else 
		        (select z.msps_desc 
		        from eka.mst_position_spaj z 
		        where z.msps_date = (select max(x.msps_date) 
		                                from eka.mst_position_spaj x 
		                                where X.LSPD_ID=1 and X.SUB_ID_BAS is not null AND X.LSSP_ID=10 and x.reg_spaj = a.reg_spaj)
		        and z.reg_spaj=a.reg_spaj)
		        end ) keterangan,
		     (case when 
		     (select distinct lu.lus_full_name from eka.mst_position_spaj v, eka.lst_user lu
		        where v.msps_date = (select max(x.msps_date) from eka.mst_position_spaj x 
		                                where ( x.msps_desc like '%KE ADMIN%') and x.reg_spaj = v.reg_spaj)
		        and v.lus_id =lu.lus_id and v.reg_spaj=a.reg_spaj) is not null then
		            (select distinct lu.lus_full_name from eka.mst_position_spaj v, eka.lst_user lu
		                where v.msps_date = (select max(x.msps_date) from eka.mst_position_spaj x 
		                                where ( x.msps_desc like '%KE ADMIN%') and x.reg_spaj = v.reg_spaj)
		                and v.lus_id =lu.lus_id
		                and v.reg_spaj=a.reg_spaj) else 
		            (select distinct lu.lus_full_name from eka.mst_position_spaj v, eka.lst_user lu
		                where v.msps_date = (select max(x.msps_date) from eka.mst_position_spaj x 
		                                        where X.LSPD_ID=1 and X.SUB_ID_BAS is not null AND X.LSSP_ID=10 and x.reg_spaj = v.reg_spaj)
		                and v.lus_id =lu.lus_id and v.reg_spaj=a.reg_spaj) end)user_bta,                         
		    EKA.UTILS.PEMEGANG(a.reg_spaj)nama_pemegang,
		    (select distinct lu.lus_full_name 
		        from eka.mst_position_spaj v, eka.lst_user lu
		        where v.msps_date = (select min(x.msps_date) 
		                                from eka.mst_position_spaj x 
		                                where ( x.msps_desc like '%TRANSFER KE PROSES CHECKING%') 
		                                and x.reg_spaj = v.reg_spaj)
		                                and v.lus_id =lu.lus_id
		                                and v.reg_spaj=a.reg_spaj)user_transfer,
		                                        (select distinct lu.lus_full_name
        from eka.mst_position_spaj v, eka.lst_user lu
        where v.msps_date = (
          select min(x.msps_date)
          from eka.mst_position_spaj x
          where ( x.msps_desc like '%TRANSFER KE SPEEDY%')
          and x.reg_spaj = v.reg_spaj)
          and v.lus_id =lu.lus_id
          and v.reg_spaj=a.reg_spaj) user_transfer_speedy,  
		     to_char(r.tgl_input,'dd/mm/yyyy') tgl_bsb,
		         to_char(TH.TGL_TRANSFER_PROSES_CHECKING,'dd/mm/yyyy') tgl_transfer,
		     (case when (to_char(TH.TGL_BACK_TO_ADMIN,'dd/mm/yyyy')) is not null then
		         (to_char(TH.TGL_BACK_TO_ADMIN,'dd/mm/yyyy')) else 
		         (select to_char(z.msps_date,'dd/mm/yyyy') from eka.mst_position_spaj z 
		            where z.msps_date = (select max(x.msps_date) from eka.mst_position_spaj x 
		                                    where X.LSPD_ID=1 and X.SUB_ID_BAS is not null AND X.LSSP_ID=10 and x.reg_spaj = a.reg_spaj)
		            and z.reg_spaj=a.reg_spaj) end) tgl_bta,
		     (case when TH.TGL_BACK_TO_ADMIN is null 
		        then abs(round(TH.TGL_TRANSFER_PROSES_CHECKING-TH.TGL_INPUT_SPAJ_ADMIN)) 
		        else abs(round(TH.TGL_TRANSFER_PROSES_CHECKING-TH.TGL_BACK_TO_ADMIN)) end)lama_proses_pending,
         upper(g.nama_pemutup)nama_pemutup, 
         upper(g.nama_leader) nama_leader,
         upper(g.nama_reff) nama_reff,
         upper(g.cabang_reff) cabang_reff,
        (SELECT   z.msps_desc
           FROM   eka.mst_position_spaj z
          WHERE   z.msps_date =
                     (SELECT   MAX (x.msps_date)
                        FROM   eka.mst_position_spaj x
                       WHERE   x.msps_desc LIKE '%FR:%'
                       AND X.REG_SPAJ = Z.REG_SPAJ)
         AND z.reg_spaj = a.reg_spaj) ket_FURTHER,  
         (SELECT   EKA.UTILS.USER_INPUT(z.lus_id)
           FROM   eka.mst_position_spaj z
          WHERE   z.msps_date =
                     (SELECT   MAX (x.msps_date)
                        FROM   eka.mst_position_spaj x
                       WHERE   x.msps_desc LIKE '%FR:%'
                       and x.reg_Spaj = z.reg_spaj)
         AND z.reg_spaj = a.reg_spaj) user_FURTHER,a.mspo_no_blanko no_blanko
		from
		    eka.mst_policy a,
		    eka.mst_scan b,
		    eka.lst_user c,
		    eka.lst_region d,
		    eka.mst_insured e,
		    eka.mst_product_insured f,
		    eka.mst_trans_history th,
		    (select ax.reg_spaj, d.mcl_first nama_pemutup, f.mcl_first nama_leader, g.nama_reff, 
		    	eka.utils.cabang_bsm(g.lcb_no) cabang_reff
            from eka.mst_reff_bii ax, eka.lst_reff_bii b, eka.mst_agent c, eka.mst_client_new d,
                eka.mst_agent e, eka.mst_client_new f, eka.lst_reff_bii g
            where ax.lrb_id = b.lrb_id
                and b.agent_code = c.msag_id
                and b.flag_aktif = 1
                and c.mcl_id = d.mcl_id
                and c.mst_leader = e.msag_id (+)
                and ax.reff_id = g.lrb_id (+)
                and e.mcl_id = f.mcl_id (+)
         ) g ,
		    (select min (tgl_input)tgl_input,no_indek from eka.mst_scan where tipe_file='BSB' group by no_indek)r
		where
		    a.reg_spaj = b.no_indek(+)
   		    <isEqual property="jn_transfer" compareValue="0">
		    	and a.lspd_id in (1)
		    </isEqual>
		    <isEqual property="jn_transfer" compareValue="1">
		     	and e.lssa_id = 3
		    	and a.lspd_id in (1,2,27)
		    </isEqual>
		    and a.lus_id = c.lus_id
		    and a.lca_id = d.lca_id
		    and a.lwk_id = d.lwk_id
		    and a.lsrg_id = d.lsrg_id
		    and a.reg_spaj = e.reg_spaj
		    and e.reg_spaj = f.reg_spaj
		    and e.mste_insured_no = f.mste_insured_no
		    and e.mste_insured_no = 1
			and F.LSBS_ID <![CDATA[<]]> 300
      		and F.LSBS_ID not in (142,73,203,209)
		    and a.lca_id = '09'
		    and c.lde_id not in ('24')
		    		<isEqual property="jenis" compareValue="0">
			        	and a.mspo_input_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			        </isEqual>
			        <isEqual property="jenis" compareValue="1">
			        	and b.tgl_input between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			        </isEqual>  
			        <isEqual property="jn_transfer" compareValue="0">
			        	and not exists(select reg_spaj from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lspd_id = 27)
			        </isEqual>
			        <isEqual property="jn_transfer" compareValue="1">
			        	and exists(select reg_spaj from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lspd_id = 27)
			        </isEqual>
		    and a.reg_spaj not in (SELECT distinct reg_spaj FROM EKA.MST_PENDING_MRI)
		    and a.reg_spaj = th.reg_spaj
		    and th.jenis = 23
		    and a.reg_Spaj=R.NO_INDEK(+)
		    and a.reg_spaj = g.reg_Spaj
		order by 1
	</select>
	

	
	<select id="elions.bas.selectReportDataBackToBas" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	   select distinct
            a.mspo_input_date tgl_input, a.reg_spaj, 
            c.lus_full_name user_input, cc.lus_full_name user_transfer_speedy, d.lsrg_nama cabang,
            (select max(msps_date) from eka.mst_position_spaj where lspd_id = 27 and msps_desc like '%BACK TRANSFER KE BAS%' and reg_spaj = a.reg_spaj)tgl_back_transfer_bas,
            (select 
                  z.msps_desc from eka.mst_position_spaj z 
             where 
                  z.msps_date = (select max(x.msps_date) 
                                  from eka.mst_position_spaj x 
                                  where x.lspd_id = 27 and x.msps_desc like '%BACK TRANSFER KE BAS%' and x.reg_spaj = a.reg_spaj)
                  and z.reg_spaj=a.reg_spaj)keterangan,
                  eka.utils.agen(f.msag_id)nama_agen, f.msag_id kode_agen, back.lus_full_name user_back_to_bas
        from
            eka.mst_policy a,
            eka.lst_user c,
            eka.lst_region d,
            eka.mst_product_insured e,
            eka.mst_agent_prod f,
            eka.mst_trans_history z,
            (select distinct 
                  v.lus_id, v.reg_spaj from eka.mst_position_spaj v
             where 
                  v.msps_date = (select min(x.msps_date) 
                                  from eka.mst_position_spaj x 
                                  where ( x.msps_desc like '%TRANSFER KE SPEEDY%' or msps_desc like '%TRANSFER KE NON-SPEEDY%') and x.reg_spaj = v.reg_spaj))xz,
            eka.lst_user cc,
                         (select 
                  r.lus_id, r.reg_spaj from eka.mst_position_spaj r 
             where 
                  r.msps_date = (select max(t.msps_date) 
                                  from eka.mst_position_spaj t 
                                  where t.lspd_id = 27 and t.msps_desc like '%BACK TRANSFER KE BAS%' and t.reg_spaj = r.reg_spaj)
                  )xx,
            eka.lst_user back            
        where
            a.lus_id = c.lus_id
            and a.lca_id = d.lca_id
            and a.lwk_id = d.lwk_id
            and F.LSLE_ID=4
            and a.lstb_id =1
            and a.reg_spaj=z.reg_spaj
            and a.reg_spaj =xz.reg_spaj
            and xz.lus_id =cc.lus_id
            and xx.reg_spaj = a.reg_spaj
            and back.lus_id = xx.lus_id
            and z.jenis=23
            and f.reg_spaj =a.reg_spaj
            and a.lsrg_id = d.lsrg_id
            and a.reg_spaj = e.reg_spaj
            and a.lca_id not in ('09')
            and c.lde_id not in ('24')
            <isNotEqual property="lus_id" compareValue="ALL">
            and cc.lus_id =#lus_id#
            </isNotEqual>
            and (e.lsbs_id != 163 and e.lsdbs_number not in (6,7,8,9,10))
	        <isEqual property="jenis" compareValue="0">
	        	and a.mspo_input_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
	        </isEqual>
	        <isEqual property="jenis" compareValue="1">
                and z.tgl_back_to_bas between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
            </isEqual>
	        <isEqual property="jn_transfer" compareValue="0">
	        	and not exists(select reg_spaj from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lspd_id = 27)
	        </isEqual>
	        <isEqual property="jn_transfer" compareValue="1">
	        	and exists(select reg_spaj from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lspd_id = 27)
	        </isEqual>
        UNION
		 select distinct
            a.mspo_input_date tgl_input, a.reg_spaj, 
            c.lus_full_name user_input,cc.lus_full_name user_transfer_speedy ,  d.lsrg_nama cabang, 
            (select max(msps_date) from eka.mst_position_spaj where lspd_id = 27 and msps_desc like '%BACK TRANSFER KE BAS%' and reg_spaj = a.reg_spaj)tgl_back_transfer_bas,
            (select 
                  z.msps_desc from eka.mst_position_spaj z 
             where 
                  z.msps_date = (select max(x.msps_date) 
                                  from eka.mst_position_spaj x 
                                  where x.lspd_id = 27 and x.msps_desc like '%BACK TRANSFER KE BAS%' and x.reg_spaj = a.reg_spaj)
                  and z.reg_spaj=a.reg_spaj)keterangan,
             eka.utils.agen(h.msag_id)nama_agen, h.msag_id kode_agen, back.lus_full_name user_back_to_bas
        from
            eka.mst_policy a,
            eka.lst_user c,
            eka.lst_region d,
            eka.mst_insured e,
            eka.mst_product_insured f,
            eka.mst_agent_prod h,
            eka.mst_trans_history z,
            (select distinct 
                  v.lus_id, v.reg_spaj from eka.mst_position_spaj v
             where 
                  v.msps_date = (select min(x.msps_date) 
                                  from eka.mst_position_spaj x 
                                  where ( x.msps_desc like '%TRANSFER KE SPEEDY%' or msps_desc like '%TRANSFER KE NON-SPEEDY%') and x.reg_spaj = v.reg_spaj))xz,
            eka.lst_user cc,  (select 
                  r.lus_id, r.reg_spaj from eka.mst_position_spaj r 
             where 
                  r.msps_date = (select max(t.msps_date) 
                                  from eka.mst_position_spaj t 
                                  where t.lspd_id = 27 and t.msps_desc like '%BACK TRANSFER KE BAS%' and t.reg_spaj = r.reg_spaj)
                  )xx,
            eka.lst_user back            
        where
            a.reg_spaj = h.reg_spaj
            and a.lus_id = c.lus_id
            and a.lca_id = d.lca_id
            and a.lwk_id = d.lwk_id
            and a.lsrg_id = d.lsrg_id
            and h.LSLE_ID=4
            and a.lstb_id =1
            and a.reg_spaj=z.reg_spaj
            and a.reg_spaj =xz.reg_spaj
            and xz.lus_id =cc.lus_id
            and xx.reg_spaj = a.reg_spaj
            and back.lus_id = xx.lus_id            
            and z.jenis=23
            and a.reg_spaj = e.reg_spaj
            and e.reg_spaj = f.reg_spaj
            and e.mste_insured_no = f.mste_insured_no
            and e.mste_insured_no = 1
            and f.lsbs_id = 120
            and a.lca_id = '09'
            and c.lde_id not in ('24')
            <isNotEqual property="lus_id" compareValue="ALL">
            and cc.lus_id =#lus_id#
            </isNotEqual>
		    <isEqual property="jenis" compareValue="0">
	        	and a.mspo_input_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
	        </isEqual> 
	        <isEqual property="jenis" compareValue="1">
                and z.tgl_back_to_bas between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
            </isEqual>
	        <isEqual property="jn_transfer" compareValue="0">
	        	and not exists(select reg_spaj from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lspd_id = 27)
	        </isEqual>
	        <isEqual property="jn_transfer" compareValue="1">
	        	and exists(select reg_spaj from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lspd_id = 27)
	        </isEqual>
		order by user_transfer_speedy asc
	</select>
	
	<select id="elions.bas.selectReportDataPenerimaanBSPAJ" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	  select a.reg_spaj as spaj,f.mcl_first nama_pemegang,h.lsdbs_name nama_plan,a.mspo_policy_no as no_polis,C.LSSP_STATUS as status_polis, D.STATUS_ACCEPT,to_char(j.mspro_prod_date,'dd/MM/yyyy')tgl_produksi,
			 to_char(a.mspo_input_date ,'dd/MM/yyyy')tgl_input,
			 (select LSDBS_NAME from eka.lst_det_bisnis where lsbs_id||lsdbs_number=(select lsbs_id||lsdbs_number from eka.mst_product_insured where lsbs_id <![CDATA[<=]]> 300 and reg_spaj=(select reg_spaj from eka.mst_policy where reg_spaj=a.reg_Spaj))) as plan
      from
			eka.mst_policy a,
			eka.mst_insured b,
			eka.lst_policy_status c,
			EKA.LST_STATUS_ACCEPT d,
			eka.lst_cabang e,
			eka.mst_client_new f,
			eka.mst_product_insured g,
			eka.lst_det_bisnis h,
			eka.lst_jalur_dist i,
			eka.mst_production j
	where
			a.reg_Spaj=b.reg_Spaj and a.reg_Spaj=g.reg_Spaj
			and a.lca_id=e.lca_id and a.reg_Spaj=j.reg_spaj
			and a.mspo_policy_holder=f.mcl_id and E.JALURDIS=I.ID_DIST
			and upper(I.GRUP_REPORT) like '%'||upper(#kata#)||'%' and a.lssp_id=c.lssp_id
			and b.lssa_id=D.LSSA_ID and g.lsbs_id=h.lsbs_id
			and g.lsdbs_number=H.LSDBS_NUMBER 
			<isEqual property="jenis" compareValue="simpol">
					and ( g.lsbs_id=120 and g.lsdbs_number  in(22,23,24))
			        and g.lsdbs_number  in(22,23,24)
			</isEqual>
			<isEqual property="jenis" compareValue="bancass">
				and not( g.lsbs_id=120 and g.lsdbs_number  in(22,23,24))
			</isEqual>
			and A.LSTb_ID=1
			and J.MSPRO_PROD_KE=1
			and J.MSBI_PREMI_KE=1
			and J.MSBI_TAHUN_KE=1
			and g.lsbs_id  <![CDATA[<]]> 300
			and J.MSPRO_PROD_DATE between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
	</select>
	
	<select id="elions.bas.reportFollowupBillingPL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
		    all_fl.region, 
		    count(all_fl.reg_spaj)jml_polis, sum(all_fl.premi)jml_premi,
		    count(done_fl.reg_spaj)jml_polis_fol, sum(done_fl.premi)jml_premi_fol,
		    count(not_fl.reg_spaj)jml_polis_belum, sum(nvl(not_fl.premi,0))jml_premi_belum
		from
		    (select distinct  
		            lr.lsrg_id, lr.lsrg_nama region, mb.msbi_beg_date, mb.msbi_end_date, mb.msbi_due_date, mp.mspo_policy_no_format, mp.reg_spaj, mb.msbi_tahun_ke,
		            mb.msbi_premi_ke, 'JATUH TEMPO' ket, mb.msbi_flag_topup, mp.lca_id,
		            (select sum(msdb_premium) from eka.mst_det_billing where reg_spaj = mb.reg_spaj and msbi_tahun_ke = mb.msbi_tahun_ke and msbi_premi_ke = mb.msbi_premi_ke)premi
		        from               
		            eka.mst_billing mb, eka.mst_det_billing mdb, eka.mst_policy mp, eka.mst_billing_hcr mbh, eka.mst_insured mi,
		            eka.lst_region lr
		        where              
		            mb.reg_spaj = mbh.reg_spaj(+)
		            and mb.msbi_tahun_ke = mbh.msbih_tahun_ke(+)
		            and mb.msbi_premi_ke = mbh.msbih_premi_ke(+)
		            and mdb.reg_spaj = mb.reg_spaj
		            and mdb.msbi_tahun_ke = mb.msbi_tahun_ke
		            and mdb.msbi_premi_ke = mb.msbi_premi_ke
		            and mp.reg_spaj = mb.reg_spaj
		            and mp.reg_spaj = mi.reg_spaj
		            and mp.lscb_id not in (0, 6)
		            and mb.lspd_id in (11, 12)
        			and mp.lssp_id in (1, 14)
		            and mb.msbi_premi_ke > 1
		            and mb.lca_id = lr.lca_id
		            and mb.lwk_id = lr.lwk_id
		            and mb.lsrg_id = lr.lsrg_id
		            and mb.msbi_flag_topup is null
		            and mb.msbi_beg_date between to_date(#bdate#, 'dd/mm/yyyy') and to_date(#edate#, 'dd/mm/yyyy'))all_fl,
		    (select distinct  
		            lr.lsrg_id, lr.lsrg_nama region, mb.msbi_beg_date, mb.msbi_end_date, mb.msbi_due_date, mp.mspo_policy_no_format, mp.reg_spaj, mb.msbi_tahun_ke,
		            mb.msbi_premi_ke, 'JATUH TEMPO' ket, mb.msbi_flag_topup, mp.lca_id,
		            (select sum(msdb_premium) from eka.mst_det_billing where reg_spaj = mb.reg_spaj and msbi_tahun_ke = mb.msbi_tahun_ke and msbi_premi_ke = mb.msbi_premi_ke)premi
		        from               
		            eka.mst_billing mb, eka.mst_det_billing mdb, eka.mst_policy mp, eka.mst_billing_hcr mbh, eka.mst_insured mi,
		            eka.lst_region lr
		        where              
		            mb.reg_spaj = mbh.reg_spaj(+)
		            and mb.msbi_tahun_ke = mbh.msbih_tahun_ke(+)
		            and mb.msbi_premi_ke = mbh.msbih_premi_ke(+)
		            and mdb.reg_spaj = mb.reg_spaj
		            and mdb.msbi_tahun_ke = mb.msbi_tahun_ke
		            and mdb.msbi_premi_ke = mb.msbi_premi_ke
		            and mp.reg_spaj = mb.reg_spaj
		            and mp.reg_spaj = mi.reg_spaj
		            and mp.lscb_id not in (0, 6)
		            and mb.lspd_id in (11, 12)
        			and mp.lssp_id in (1, 14)
		            and mb.msbi_premi_ke > 1
		            and mb.lca_id = lr.lca_id
		            and mb.lwk_id = lr.lwk_id
		            and mb.lsrg_id = lr.lsrg_id
		            and mb.msbi_flag_topup is null
		            and mb.msbi_beg_date between to_date(#bdate#, 'dd/mm/yyyy') and to_date(#edate#, 'dd/mm/yyyy')
		            and exists (select *
		                        from eka.mst_followup msfu
		                        where lsfu_id <![CDATA[<>]]> 99
		                              and reg_spaj = mp.reg_spaj
		                              and msbi_tahun_ke = mb.msbi_tahun_ke
		                              and msbi_premi_ke = mb.msbi_premi_ke
		                              and msfu.msfu_urut = (select max(msfu_urut)
		                                                        from eka.mst_followup
		                                                        where lsfu_id <![CDATA[<>]]> 99
		                                                            and reg_spaj = msfu.reg_spaj
		                                                            and msbi_tahun_ke = msfu.msbi_tahun_ke
		                                                            and msbi_premi_ke = msfu.msbi_premi_ke)))done_fl,
		    (select distinct  
		            lr.lsrg_id, lr.lsrg_nama region, mb.msbi_beg_date, mb.msbi_end_date, mb.msbi_due_date, mp.mspo_policy_no_format, mp.reg_spaj, mb.msbi_tahun_ke,
		            mb.msbi_premi_ke, 'JATUH TEMPO' ket, mb.msbi_flag_topup, mp.lca_id,
		            (select sum(msdb_premium) from eka.mst_det_billing where reg_spaj = mb.reg_spaj and msbi_tahun_ke = mb.msbi_tahun_ke and msbi_premi_ke = mb.msbi_premi_ke)premi
		        from               
		            eka.mst_billing mb, eka.mst_det_billing mdb, eka.mst_policy mp, eka.mst_billing_hcr mbh, eka.mst_insured mi,
		            eka.lst_region lr
		        where              
		            mb.reg_spaj = mbh.reg_spaj(+)
		            and mb.msbi_tahun_ke = mbh.msbih_tahun_ke(+)
		            and mb.msbi_premi_ke = mbh.msbih_premi_ke(+)
		            and mdb.reg_spaj = mb.reg_spaj
		            and mdb.msbi_tahun_ke = mb.msbi_tahun_ke
		            and mdb.msbi_premi_ke = mb.msbi_premi_ke
		            and mp.reg_spaj = mb.reg_spaj
		            and mp.reg_spaj = mi.reg_spaj
		            and mp.lscb_id not in (0, 6)
		            and mb.lspd_id in (11, 12)
        			and mp.lssp_id in (1, 14)
		            and mb.msbi_premi_ke > 1
		            and mb.lca_id = lr.lca_id
		            and mb.lwk_id = lr.lwk_id
		            and mb.lsrg_id = lr.lsrg_id
		            and mb.msbi_beg_date between to_date(#bdate#, 'dd/mm/yyyy') and to_date(#edate#, 'dd/mm/yyyy')
		            and mb.msbi_flag_topup is null
		            and not exists (select *
		                        from eka.mst_followup msfu
		                        where lsfu_id <![CDATA[<>]]> 99
		                              and reg_spaj = mp.reg_spaj
		                              and msbi_tahun_ke = mb.msbi_tahun_ke
		                              and msbi_premi_ke = mb.msbi_premi_ke
		                              and msfu.msfu_urut = (select max(msfu_urut)
		                                                        from eka.mst_followup
		                                                        where lsfu_id <![CDATA[<>]]> 99
		                                                            and reg_spaj = msfu.reg_spaj
		                                                            and msbi_tahun_ke = msfu.msbi_tahun_ke
		                                                            and msbi_premi_ke = msfu.msbi_premi_ke)))not_fl
		where
		    all_fl.reg_spaj = done_fl.reg_spaj(+)
		    and all_fl.reg_spaj = not_fl.reg_spaj(+)
		    <isNotEqual property="lca" compareValue="ALL">
                and all_fl.lca_id = #lca#
            </isNotEqual>
            and all_fl.lca_id not in ('09','58','40')
		GROUP BY
		    all_fl.region
		ORDER BY
		    1
	</select>
	
	<select id="elions.bas.selectEmailLeader" parameterClass="string" resultClass="java.util.HashMap">
		select
		    a.lvl_1, b.lvl_2
		from
		    (select
		        a.reg_spaj, d.mspe_email lvl_1
		    from
		        eka.mst_policy a,
		        eka.mst_agent b,
		        eka.mst_agent_prod c,
		        eka.mst_client_new d
		    where
		        a.reg_spaj = c.reg_spaj
		        and c.msag_id = b.msag_id
		        and b.mcl_id = d.mcl_id
		        and c.lsle_id = 1
		        and a.reg_spaj = #value#)a,
		    (select
		        a.reg_spaj, d.mspe_email lvl_2
		    from
		        eka.mst_policy a,
		        eka.mst_agent b,
		        eka.mst_agent_prod c,
		        eka.mst_client_new d
		    where
		        a.reg_spaj = c.reg_spaj
		        and c.msag_id = b.msag_id
		        and b.mcl_id = d.mcl_id
		        and c.lsle_id = 2
		        and a.reg_spaj = #value#)b
		where
		    a.reg_spaj = b.reg_spaj
	</select>
	
	<select id="elions.bas.selectHadiahStableSave" parameterClass="string" resultClass="dropDown">
		<!-- select
		    a.lh_id as key, a.lh_nama as value
		from 
		    eka.lst_hadiah a
		where
		    a.lhc_id = 8 -->
		    
		    select * from(
			    select
			        b.lh_id as key, b.lh_nama as value, '0' as desca
			    from
			        eka.mst_hadiah a,
			        eka.lst_hadiah b
			    where
			        a.lhc_id = b.lhc_id
			        and a.lh_id = b.lh_id
			        and a.reg_spaj = #value#
			    union
			    select
			        a.lh_id key, a.lh_nama value, '1' as desca
			    from 
			        eka.lst_hadiah a
			    where
			        a.lhc_id = 8
			        and a.lh_id not in (select
                                b.lh_id
                            from
                                eka.mst_hadiah a,
                                eka.lst_hadiah b
                            where
                                a.lhc_id = b.lhc_id
                                and a.lh_id = b.lh_id
                                and a.reg_spaj = #value#)
			)
			order by 3,1 asc
	</select>
	
	<select id="elions.bas.selectUserBasSummaryInput" parameterClass="string" resultClass="dropDown">
		select a.lus_id key, upper(a.lus_full_name) value 
		from eka.lst_user a
		where a.lus_id $value$
		order by a.lus_full_name asc
	</select>
	
	<select id="elions.bas.selectUserBasSummaryInputNew" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<isEqual property="pusat" compareValue="0">
			SELECT LUS_ID, INITCAP(LUS_FULL_NAME) LUS_FULL_NAME FROM EKA.LST_USER WHERE LDE_ID = 19 AND LUS_ACTIVE=1 AND LUS_BAS=1
		</isEqual>
		<isEqual property="pusat" compareValue="1">
			SELECT LUS_ID, INITCAP(LUS_FULL_NAME) LUS_FULL_NAME FROM  EKA.LST_USER WHERE LDE_ID = 29 AND LUS_ACTIVE= 1
			UNION
			SELECT LUS_ID, INITCAP(LUS_FULL_NAME) LUS_FULL_NAME FROM EKA.LST_USER WHERE LDE_ID = 19 AND LUS_ACTIVE=1 AND LUS_BAS=1
		</isEqual>
        ORDER BY LUS_FULL_NAME ASC
	</select>
	
	<select id="elions.bas.selectCabangBSM" parameterClass="string" resultClass="dropDown">
		SELECT a.kanwill_id key, a.nama_cabang value
		FROM EKA.LST_KANWILL_BANK@eb a 
		WHERE a.LSBP_ID = 156 order by a.kanwill_id asc
	</select>
	
	<select id="elions.bas.selectListSpajPremiLanjutan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct (a.reg_spaj || '~' ||b.msbi_bill_no) kode, (a.mspo_policy_no_format ||' | ' || SUBSTR (a.reg_spaj, 1, 2) || '.' || SUBSTR (a.reg_spaj, 3, 4) || '.' || SUBSTR (a.reg_spaj, 7) ) as tampil
		from eka.mst_policy a,
		     eka.mst_billing b,
		     eka.lst_user_admin c,
		     eka.lst_region d
		where a.reg_spaj = b.reg_spaj
		and b.msbi_flag_kuitansi = 1
		and a.lspd_id  <![CDATA[<>]]> 95
		and a.lca_id = d.lca_id
		and a.lwk_id = d.lwk_id
		and a.lsrg_id = d.lsrg_id
		and d.lar_id = c.lar_id
		<isNotEqual property="lde_id" compareValue="01">
			and c.lus_id = #lus_id#
		</isNotEqual>
	</select>
	
	<select id="elions.bas.selectMstBillingFlagKuitansi" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Billing">
		select *
		from eka.mst_billing
		where reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		and trim(msbi_bill_no) = trim(#msbi_bill_no#)
	</select>
	
	<select id="elions.bas.selectJenisBrosur" resultClass="hashMap" cacheModel="elions.bas.cache">
		  SELECT lsjs_prefix, lsjs_desc
		    FROM eka.lst_jenis_spaj
		   WHERE jenis = 1
		ORDER BY lsjs_desc	
	</select>
	
	<!-- Saat ini di buka semua untuk semua cabang -->
	<select id="elions.bas.selectNewFormBrosur" parameterClass="formSpaj" resultClass="formSpaj">
		SELECT 
			#mss_jenis# mss_jenis, b.lca_id, b.lca_nama, lsjs_id, 0 msab_id, 0 msf_amount_req, lsjs_desc, 
		  	lsjs_prefix, 'REQUESTED' status_form, 0 posisi, 0 status_permintaan
		FROM 
			eka.lst_jenis_spaj a , eka.lst_cabang b 
		WHERE 
			a.aktif = 1
			and a.jenis = #jn_brosur#
			AND b.lca_id = #lca_id#
		UNION 
		SELECT 
			#mss_jenis# mss_jenis, b.lca_id, b.lca_nama, a.lsjs_id, 0 msab_id,
			0 msf_amount_req, lsjs_desc, lsjs_prefix, 'REQUESTED' status_form,
			0 posisi, 0 status_permintaan
		FROM 
			eka.lst_jenis_spaj a, 
			eka.lst_cabang b,
			eka.lst_adm_travel_ins c
		WHERE 
			aktif = 1 
			AND b.lca_id = #lca_id#
			AND a.lsjs_id = c.lsjs_id
			AND c.lus_id = #lus_id#		    
		ORDER BY lsjs_desc
	</select>
	
	<select id="elions.bas.selectFormBrosur" parameterClass="formSpaj" resultClass="formSpaj">
		SELECT   
			a.msf_id, a.mss_jenis, a.lca_id, a.lsjs_id, a.msab_id, a.lus_id,a.msf_amount,
			a.msf_amount_req, a.start_no_blanko, a.end_no_blanko,a.no_blanko_req,a.bmi_id,a.trav_ins_type,
			NVL (a.posisi, 0) posisi, b.lsjs_desc, b.lsjs_prefix, c.lca_nama,
			(CASE WHEN (posisi = 0 OR posisi = NULL) THEN 'REQUESTED' WHEN posisi = 1 THEN 'APPROVED'
			    WHEN posisi = 2 THEN 'CANCELLED' WHEN posisi = 3 THEN 'REJECTED'
			    WHEN posisi = 4 THEN 'SENT' WHEN posisi = 5 THEN 'RECEIVED'
			    WHEN posisi = 6 THEN 'ACKNOWLEDGED' ELSE 'ERROR'
			 END) status_form,
			a.status_permintaan,a.no_blanko_req,e.msag_id ,f.mcl_first nama_agen, a.bukti_pemb_pas as bukti_pembayaran, 
			a.busdev, b.jenis jn_brosur
		FROM eka.mst_form a,
		     eka.lst_jenis_spaj b,
		     eka.lst_cabang c,
		     eka.mst_agent_branch d,
		     eka.mst_agent e,
		     eka.mst_client_new f
		WHERE a.msf_id = #msf_id#
		  AND a.lsjs_id = b.lsjs_id
		  AND a.lca_id = c.lca_id
		  AND a.msab_id=d.msab_id
		  AND d.msag_id=e.msag_id
		  AND e.mcl_id=f.mcl_id
		  AND b.jenis = #jn_brosur#
		ORDER BY b.lsjs_desc
	</select>
	
	<select id="elions.bas.selectStokBrosur" parameterClass="spaj" resultClass="spaj">
		<!-- Stock Cabang-->
		SELECT 
			a.mss_jenis, a.lca_id, a.lsjs_id, a.msab_id, nvl(a.mss_amount,0) mss_amount,
			a.modify_lus_id, a.modify_dt, b.lsjs_desc, NVL (b.lsjs_prefix, '-') lsjs_prefix
    	FROM 
    		(SELECT *
            	FROM eka.mst_spaj
           		WHERE mss_jenis = #mss_jenis# AND msab_id = #msab_id# 
           			AND lca_id = #lca_id# 
           			AND lus_id=#lus_id#) a,
         	eka.lst_jenis_spaj b
   		WHERE 
   			b.lsjs_id not in(0,15) 
   			AND b.lsjs_id = a.lsjs_id(+)
   			and b.jenis = #jn_brosur#
   		UNION   
  		SELECT 
  			a.mss_jenis, a.lca_id, a.lsjs_id, a.msab_id,
         	NVL (a.mss_amount, 0) mss_amount, a.modify_lus_id, a.modify_dt,
         	b.lsjs_desc, NVL (b.lsjs_prefix, '-') lsjs_prefix
    	FROM 
    		(SELECT *
            	FROM eka.mst_spaj
          	 	WHERE mss_jenis = #mss_jenis# AND msab_id = #msab_id# AND lca_id = #lca_id# AND lus_id = #lus_id#) a,
   			eka.lst_jenis_spaj b,
		 	eka.lst_adm_travel_ins c
   		WHERE 
   			b.lsjs_id > 0 AND b.lsjs_id = a.lsjs_id(+)
     		AND b.lsjs_id = c.lsjs_id
	 		AND c.lus_id = #lus_id#
	 		AND b.jenis = #jn_brosur#    
		ORDER BY lsjs_prefix
	</select>	
	
	<select id="elions.bas.selectDaftarFormBrosur" parameterClass="formSpaj" resultClass="formSpaj">
		SELECT DISTINCT  b.lca_nama, a.msf_id,
				(case 
					when (a.posisi = 0 or a.posisi = null) then 'REQUESTED' 
					when a.posisi = 1 then 'APPROVED' when a.posisi = 2 then 'CANCELLED'
					when a.posisi = 3 then 'REJECTED' when a.posisi = 4 then 'SENT'
					when a.posisi = 5 then 'RECEIVED' when a.posisi = 6 then 'ACKNOWLEDGED'
				else 'ERROR' end) status_form, a.status_permintaan, to_date(c.msfh_dt,'dd/MM/yyyy')msfh_dt
		    FROM eka.mst_form a, eka.lst_cabang b, eka.mst_form_hist c
		    <isEqual property="mcl_first" compareValue="special">
		    ,(select distinct msf_id from eka.mst_form 
                   where lsjs_id in (16,17,18,19)
                     and msf_amount_req != '0') special_case	
		    </isEqual>
		   WHERE a.lca_id = b.lca_id 
		   		and a.mss_jenis = #mss_jenis# 
           		AND a.msab_id = #msab_id#
           		AND a.msf_id=c.msf_id
           		AND a.posisi=c.posisi
		   <isNotEmpty property="lus_id" prepend=" AND "> a.lus_id= #lus_id# </isNotEmpty>
		   <isNotEmpty property="lca_id" prepend=" AND "> a.lca_id = #lca_id# </isNotEmpty>
		   <isEqual property="mcl_first" compareValue="special">
		   		AND a.msf_id = special_case.msf_id
		   </isEqual>
		   <isEmpty property="pos"> 
			   <isNotEmpty property="posisi" prepend=" AND "> nvl(a.posisi,0) = #posisi# 
			   </isNotEmpty> 
		   </isEmpty> 
		   <isNotEmpty property="pos" prepend=" AND "> a.posisi in($pos$)</isNotEmpty> 
		GROUP BY b.lca_nama, a.msf_id, a.posisi, a.status_permintaan, c.msfh_dt
		ORDER BY b.lca_nama, msf_id
	</select>
	
	<select id="elions.bas.selectSearchFormBrosurExpress" resultClass="formSpaj" parameterClass="string">
		SELECT    
			d.msag_id,e.mcl_first,b.lca_nama,a.lca_id, a.msf_id,
			(CASE
			    WHEN (posisi = 0 OR posisi = NULL)
			       THEN 'REQUESTED'
			    WHEN posisi = 1
			       THEN 'APPROVED'
			    WHEN posisi = 2
			       THEN 'CANCELLED'
			    WHEN posisi = 3
			       THEN 'REJECTED'
			    WHEN posisi = 4
			       THEN 'SENT'
			    WHEN posisi = 5
			       THEN 'RECEIVED'
			    WHEN posisi = 6
			       THEN 'ACKNOWLEDGED'
			    ELSE 'ERROR' END) status_form,posisi, a.status_permintaan
		FROM 
			eka.mst_form a, eka.lst_cabang b, eka.mst_agent_branch c, 
			eka.mst_agent d, eka.mst_client_new e
		WHERE 
			a.lca_id = b.lca_id 
			AND a.msab_id=c.msab_id 
			AND c.msag_id=d.msag_id 
			AND d.mcl_id=e.mcl_id
		   	AND upper(a.msf_id) LIKE '%'||upper(#value#)||'%'
		   	AND a.mss_jenis = 2
		GROUP BY 
			d.msag_id,e.mcl_first,b.lca_nama, a.lca_id,a.msf_id, a.posisi, a.status_permintaan
		ORDER BY 
			b.lca_nama, msf_id
	</select>

	<select id="elions.bas.selectSearchFormBrosurDetail" resultClass="formSpaj" parameterClass="formSpaj">
		SELECT    
			d.msag_id,e.mcl_first,b.lca_nama, a.msf_id,
			(CASE
			    WHEN (posisi = 0 OR posisi = NULL)
			       THEN 'REQUESTED'
			    WHEN posisi = 1
			       THEN 'APPROVED'
			    WHEN posisi = 2
			       THEN 'CANCELLED'
			    WHEN posisi = 3
			       THEN 'REJECTED'
			    WHEN posisi = 4
			       THEN 'SENT'
			    WHEN posisi = 5
			       THEN 'RECEIVED'
			    WHEN posisi = 6
			       THEN 'ACKNOWLEDGED'
			    ELSE 'ERROR' END ) status_form,	a.status_permintaan
		FROM 
			eka.mst_form a, eka.lst_cabang b, eka.mst_agent_branch c, 
			eka.mst_agent d, eka.mst_client_new e
		WHERE 
			a.lca_id = b.lca_id 
			AND a.msab_id=c.msab_id 
			AND c.msag_id=d.msag_id 
			AND d.mcl_id=e.mcl_id
			AND a.lca_id=#lca_id# 
			AND a.mss_jenis = 2
		GROUP BY 
			d.msag_id,e.mcl_first,b.lca_nama, a.msf_id, a.posisi, a.status_permintaan
		ORDER BY 
			b.lca_nama, msf_id
	</select>
	
	<select id="elions.bas.selectHadiah" parameterClass="string" resultClass="com.ekalife.elions.model.Hadiah">
    	select 
		    a.*, b.lh_nama, b.lh_harga
		from 
		    eka.mst_hadiah a,
		    eka.lst_hadiah b 
		where 
		    a.reg_spaj = #value#
		    and a.lhc_id = b.lhc_id
		    and a.lh_id = b.lh_id
    </select>
    
    <select id="elions.bas.selectHadiahPS" parameterClass="double" resultClass="hashMap">
    	select
		    a.*
		from
		    eka.lst_hadiah a
		where
		    a.lhc_id = 8
		    <isNotNull>
		    	and a.lh_harga <![CDATA[<=]]> #value#
		    	and a.flag_active = 1
		    	and a.flag_standard <![CDATA[<>]]> 2
		    </isNotNull>
    </select>
    
    <select id="elions.bas.selectLh_id" parameterClass="double" resultClass="com.ekalife.elions.model.Hadiah">
    	select
		    tabel.lh_id, tabel.lh_harga
		from
		    (select
		        a.lh_id, a.lh_nama, a.lh_harga
		    from
		        eka.lst_hadiah a
		    where
		        a.lhc_id = 8
		        and a.lh_harga <![CDATA[<=]]> #value#
		        and a.flag_active = 1
		        and a.flag_standard = 1
		    order by 
		        a.lh_harga desc)tabel
		where 
		    rownum = 1
    </select>
    
    <select id="elions.bas.selectReportJTPowersave4thn" parameterClass="hashMap" resultClass="hashMap">
    	select distinct
		    e.lca_nama cabang, d.mspo_policy_no polis, eka.utils.pemegang(a.reg_spaj)pemegang, eka.utils.tertanggung(a.reg_spaj)tertanggung,
		    (case when c.lku_id = '02' then c.mspr_premium else 0 end)dollar, (case when c.lku_id = '01' then c.mspr_premium else 0 end)rupiah,
		    a.mpr_jangka_invest mgi, b.mste_beg_date, b.mste_end_date, to_char(b.mste_beg_date,'dd/MM/yyyy')s_beg_date, to_char(b.mste_end_date,'dd/MM/yyyy')s_end_date,
		    (case when mpr_jns_ro = 1 then 'Auto RO + interest'
		          when mpr_jns_ro = 2 then 'RO Prm deposit'
		          when mpr_jns_ro = 3 then 'Nilai tunai/auto-break' else 'Belum dipilih' end)jns_ro, b.mste_end_date jt_tempo
		from
		    eka.mst_powersave_ro a,
		    eka.mst_insured b,
		    eka.mst_product_insured c,
		    eka.mst_policy d,
		    eka.lst_cabang e,
		    eka.lst_kurs f
		where
		    a.reg_spaj = b.reg_spaj
		    and b.reg_spaj = c.reg_spaj
		    and c.reg_spaj = d.reg_spaj
		    and d.lca_id = e.lca_id
		    and c.lku_id = f.lku_id
		    and b.mste_insured_no = 1
		    and b.mste_end_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')
		order by 1
    </select>
    
    <select id="elions.bas.selectSearchSsp" resultClass="hashMap" parameterClass="hashMap">
        SELECT a.no_id, 
            a.kanwill_id, 
            a.full_name, 
            a.lku_id, 
            a.set_bulanan, 
            a.mcp_tgl_lahir, 
            b.nama_cabang, 
            a.no_rek, 
            a.no_sertifikat
        FROM eka.mst_cplan@eb a, 
            eka.lst_kanwill_bank@eb b 
        WHERE (a.lsbp_id = b.lsbp_id(+)) 
            and (a.kanwill_id = b.kanwill_id(+)) 
            and a.jenis_cp = 7 
            and a.lssp_id = 1
            <isNotEmpty prepend=" and " property="id"> a.no_id = #id# </isNotEmpty>
            <isNotEmpty prepend=" and " property="nama"> a.full_name like '%'||upper(#nama#)||'%' </isNotEmpty>
            <isNotEmpty prepend=" and " property="no_kanwill"> a.kanwill_id = #no_kanwill# </isNotEmpty>
            <isNotEmpty prepend=" and " property="no_rek"> a.no_rek = #no_rek# </isNotEmpty>
    </select>
    
    <select id="elions.bas.selectViewSsp" resultClass="hashMap" parameterClass="java.lang.String">
      SELECT a."NO_ID",   
         a."JENIS_CP",   
         a."NO_REK",   
         a."KANWILL_ID",   
         a."LSBP_ID",   
         b.NAMA_CABANG,
         a."FULL_NAME",   
         a."LKU_ID",   
         a."SET_BULANAN",   
         a."SET_CPLAN",   
         a."TOTAL_PREMI",   
         a."LUMP_SUM",   
         a."MCP_INSPER",   
         a."MCP_SEX",   
         a."MCP_UMUR",   
         a."MCP_TGL_LAHIR",   
         a."MCP_BEG_DATE",   
         a."MCP_END_DATE",   
         a."LSSP_ID",   
         (select lssp_status from eka.lst_policy_status@eb where lssp_id = a.lssp_id) status_polis,
         a."MCP_STS_AKSEP",   
         a."MCP_STANDARD",   
         a."MCP_MEDIS",   
         a."MCP_TGL_INPUT",   
         a."MCP_TGL_AKSEP",   
         a."MCP_NEXT_BILL",   
         a."MCP_KET_AKSEP",   
         a."LSPD_ID",   
         (select lspd_position from eka.lst_document_position@eb where lspd_id = a.lspd_id) posisi,
         a."MCP_FLAG_SIM",   
         a."MCP_FLAG_REAS",   
         a."LC_ID",   
         a."MCP_FLAG_BILL",   
         a."MCP_TGL_BATAL",   
         a."MCP_ALASAN",   
         a."TGL_DEATH",   
         a."BAYAR_CLAIM",   
         a."FLAG_BAYAR_THP",   
         a."MULAI_BAYAR",   
         a."TGL_NEXT_THP",   
         a."NO_TTERIMA"  
      FROM "EKA"."MST_CPLAN"@eb a, EKA.LST_KANWILL_BANK@eb b  
      WHERE (a.lsbp_id = b.lsbp_id(+)) AND
         (a.kanwill_id = b.kanwill_id(+)) AND
         a."JENIS_CP" = 7 AND  
         a."NO_ID" = #value#
    </select>
    
    <select id="elions.bas.selectViewSspBill" resultClass="hashMap" parameterClass="java.lang.String">
      SELECT "EKA"."MST_CPLAN_BILL"."NO_ID",   
         "EKA"."MST_CPLAN_BILL"."PAYMENT_KE",   
         "EKA"."MST_CPLAN_BILL"."MCB_TAHUN_KE",   
         "EKA"."MST_CPLAN_BILL"."JUMLAH_PREMI",   
         "EKA"."MST_CPLAN_BILL"."MCB_KOMISI_CENTURY",   
         "EKA"."MST_CPLAN_BILL"."MCB_HFEE",   
         "EKA"."MST_CPLAN_BILL"."LSPD_ID",   
         "EKA"."MST_CPLAN_BILL"."MCB_TGL_PROD",   
         "EKA"."MST_CPLAN_BILL"."MCB_TGL_PROSES",   
         "EKA"."MST_CPLAN_BILL"."NO_KWITANSI",   
         "EKA"."MST_CPLAN_BILL"."MCB_PROSES_REAS",   
         "EKA"."MST_CPLAN_BILL"."NO_BATCH"  
      FROM "EKA"."MST_CPLAN_BILL"@EB  
      WHERE ( EKA."MST_CPLAN_BILL"."NO_ID" = #value# ) AND  
         ( EKA."MST_CPLAN_BILL"."NO_BATCH" like '%SP')
    </select>
    <select id="elions.bas.selectViewBatalSsp" resultClass="hashMap" parameterClass="java.lang.String">
      SELECT "EKA"."MST_CPLAN"."NO_ID",   
         "EKA"."MST_CPLAN"."JENIS_CP",   
         "EKA"."MST_CPLAN"."NO_REK",   
         "EKA"."MST_CPLAN"."KANWILL_ID",   
         "EKA"."MST_CPLAN"."LSBP_ID",   
         "EKA"."MST_CPLAN"."FULL_NAME",   
         "EKA"."MST_CPLAN"."LKU_ID",   
         "EKA"."MST_CPLAN"."SET_BULANAN",   
         "EKA"."MST_CPLAN"."SET_CPLAN",   
         "EKA"."MST_CPLAN"."TOTAL_PREMI",   
         "EKA"."MST_CPLAN"."LUMP_SUM",   
         "EKA"."MST_CPLAN"."MCP_INSPER",   
         "EKA"."MST_CPLAN"."MCP_SEX",   
         "EKA"."MST_CPLAN"."MCP_UMUR",   
         "EKA"."MST_CPLAN"."MCP_TGL_LAHIR",   
         "EKA"."MST_CPLAN"."MCP_BEG_DATE",   
         "EKA"."MST_CPLAN"."MCP_END_DATE",   
         "EKA"."MST_CPLAN"."LSSP_ID",   
         "EKA"."MST_CPLAN"."MCP_STS_AKSEP",   
         "EKA"."MST_CPLAN"."MCP_TGL_INPUT",   
         "EKA"."MST_CPLAN"."MCP_TGL_AKSEP",   
         "EKA"."MST_CPLAN"."MCP_NEXT_BILL",   
         "EKA"."MST_CPLAN"."MCP_KET_AKSEP",   
         "EKA"."MST_CPLAN"."LSPD_ID",   
         "EKA"."MST_CPLAN"."MCP_FLAG_SIM",   
         "EKA"."MST_CPLAN"."MCP_FLAG_REAS",   
         "EKA"."MST_CPLAN"."LC_ID",   
         "EKA"."MST_CPLAN"."MCP_FLAG_BILL",   
         "EKA"."MST_CPLAN"."MCP_TGL_BATAL",   
         "EKA"."MST_CPLAN"."MCP_ALASAN",   
         "EKA"."MST_CPLAN"."ADDRESS1",   
         "EKA"."MST_CPLAN"."ADDRESS2",   
         "EKA"."MST_CPLAN"."ADDRESS3",   
         "EKA"."MST_CPLAN"."CITY",   
         "EKA"."MST_CPLAN"."POSTAL_CODE",   
         "EKA"."MST_CPLAN"."TELEPON",   
         "EKA"."MST_CPLAN"."WORK_PHONE",   
         "EKA"."MST_CPLAN"."MOBILE_NO",   
         "EKA"."MST_CPLAN"."EMAIL",   
         "EKA"."MST_CPLAN"."STATUS_PP",   
         "EKA"."MST_CPLAN"."TMP_LAHIR",   
         "EKA"."MST_CPLAN"."MCP_GELAR",   
         "EKA"."MST_CPLAN"."LSAG_ID",   
         "EKA"."MST_CPLAN"."LSED_ID",   
         "EKA"."MST_CPLAN"."LSIDE_ID",   
         "EKA"."MST_CPLAN"."NO_IDENTITAS",   
         "EKA"."MST_CPLAN"."KEWARGANEGARAAN"  
      FROM "EKA"."MST_CPLAN"@eb  
      WHERE ( EKA."MST_CPLAN"."NO_ID" = #value# ) AND  
         ( EKA."MST_CPLAN"."JENIS_CP" = 7 )
    </select>
    
    <select id="elions.bas.selectReport_Powersave" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct
		    c.msag_id, eka.utils.agen(c.msag_id) nama_agen, b.reg_spaj, b.mspo_policy_no no_polis, eka.utils.pemegang(b.reg_spaj)pemegang, eka.utils.tertanggung(b.reg_spaj)tertanggung,
		    (case when b.lku_id='02' then a.mpr_deposit else 0 end)premi_usd, (case when b.lku_id='01' then a.mpr_deposit else 0 end)premi_idn,
		    a.mpr_jangka_invest mgi, a.mpr_rate rate, to_char(a.mps_deposit_date,'dd Month yyyy')|| ' s/d ' ||to_char(a.mpr_mature_date,'dd Month yyyy') periode,
		    a.mpr_interest interest, decode(a.mpr_jns_ro, 1, 'RO All', 2, 'RO Premi', 3, 'Autobreak', '-') ro, a.mpr_mature_date jth_tempo
		from 
		    eka.mst_powersave_ro a, eka.mst_policy b, eka.mst_agent_prod c, eka.lst_region d, eka.lst_user_admin e
		where
		    a.mps_kode in (2,3,5)
		    and (a.mpr_mature_date between TO_DATE(#bdate#, 'dd/mm/yyyy') and TO_DATE(#edate#, 'dd/mm/yyyy'))
		    and a.reg_spaj = b.reg_spaj                      
		    and b.lspd_id <![CDATA[<>]]> 95
		    and b.lssp_id = 1
		    and b.reg_spaj = c.reg_spaj
		    and c.lsle_id = 4
		    and b.lca_id = d.lca_id
		    and b.lwk_id = d.lwk_id
		    and b.lsrg_id = d.lsrg_id
		    and d.lar_id = e.lar_id
		    <isNotEmpty property="msag_id">
		    	<isNotEqual property="msag_id" compareValue="none" prepend="AND">
		    		c.msag_id = #msag_id#
		    	</isNotEqual>
		    </isNotEmpty>
		    <isNotEmpty property="lca">
		        <isNotEqual property="lca" compareValue="ALL" prepend=" AND ">
		            b.lca_id = #lca#
		        </isNotEqual>
		    </isNotEmpty>                               
		    <isNotEmpty property="lwk">
		        <isNotEqual property="lwk" compareValue="ALL" prepend=" AND ">
		            b.lwk_id = #lwk#
		        </isNotEqual>
		    </isNotEmpty>                               
		    <isNotEmpty property="lsrg">
		        <isNotEqual property="lsrg" compareValue="ALL" prepend=" AND ">
		            b.lsrg_id = #lsrg#
		        </isNotEqual>
		    </isNotEmpty>    
		    and e.lus_id = #lus_id#
		order by 1, 2, 3, 4, 5    	
	</select>
	
	<select id="elions.bas.selectReport_Stablelink" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select * from(
		    select distinct
		        '1' kd, a.msl_no, a.msl_kode, c.msag_id, eka.utils.agen(c.msag_id) nama_agen, b.reg_spaj, b.mspo_policy_no no_polis, eka.utils.pemegang(b.reg_spaj)pemegang, eka.utils.tertanggung(b.reg_spaj)tertanggung,
		        a.msl_desc jenis_transaksi,(case when b.lku_id='02' then a.msl_premi else 0 end)premi_usd, (case when b.lku_id='01' then a.msl_premi else 0 end)premi_idr,
		        decode(a.flag_bulanan,0,'TIDAK',1,'YA','-') bulanan, a.msl_mgi mti, msl_rate rate, to_char(a.msl_bdate,'dd Month yyyy')|| ' s/d ' ||to_char(a.msl_edate,'dd Month yyyy') periode,
		        msl_bunga interest, a.msl_bp bonus_permomance, decode(a.msl_ro, 1, 'RO All', 2, 'RO Premi', 3, 'Autobreak', '-') ro, a.msl_edate jt_tempo, a.msl_bdate, 1 tu
		    from
		        eka.mst_slink a, eka.mst_policy b, eka.mst_agent_prod c, eka.lst_region d, eka.lst_user_admin e
		    where
		        a.reg_spaj = b.reg_spaj      
		        and a.msl_kode IN (1,2,3,5)                  
		        and b.lspd_id <![CDATA[<>]]> 95
		        and b.lssp_id = 1
		        and b.reg_spaj = c.reg_spaj
		        and c.lsle_id = 4
		        and b.lca_id = d.lca_id
		        and b.lwk_id = d.lwk_id
		        and b.lsrg_id = d.lsrg_id
		        and d.lar_id = e.lar_id
		        and upper(a.msl_desc) like upper('PREMI UTAMA%')
		        and (a.msl_edate between TO_DATE(#bdate#, 'dd/mm/yyyy') and TO_DATE(#edate#, 'dd/mm/yyyy'))
		        <isNotEmpty property="msag_id">
			    	<isNotEqual property="msag_id" compareValue="none" prepend="AND">
			    		c.msag_id = #msag_id#
			    	</isNotEqual>
			    </isNotEmpty>
		        <isNotEmpty property="lca">
			        <isNotEqual property="lca" compareValue="ALL" prepend=" AND ">
			            b.lca_id = #lca#
			        </isNotEqual>
			    </isNotEmpty>                               
			    <isNotEmpty property="lwk">
			        <isNotEqual property="lwk" compareValue="ALL" prepend=" AND ">
			            b.lwk_id = #lwk#
			        </isNotEqual>
			    </isNotEmpty>                               
			    <isNotEmpty property="lsrg">
			        <isNotEqual property="lsrg" compareValue="ALL" prepend=" AND ">
			            b.lsrg_id = #lsrg#
			        </isNotEqual>
			    </isNotEmpty>    
			    and e.lus_id = #lus_id#
		    UNION
		    select distinct
		        '2' kd, a.msl_no, a.msl_kode, c.msag_id, eka.utils.agen(c.msag_id) nama_agen, b.reg_spaj, b.mspo_policy_no no_polis, eka.utils.pemegang(b.reg_spaj)pemegang, eka.utils.tertanggung(b.reg_spaj)tertanggung,
		        a.msl_desc jenis_transaksi,(case when b.lku_id='02' then a.msl_premi else 0 end)premi_usd, (case when b.lku_id='01' then a.msl_premi else 0 end)premi_idr,
		        decode(a.flag_bulanan,0,'TIDAK',1,'YA','-') bulanan, a.msl_mgi mti, msl_rate rate, to_char(a.msl_bdate,'dd Month yyyy')|| ' s/d ' ||to_char(a.msl_edate,'dd Month yyyy') periode,
		        msl_bunga interest, a.msl_bp bonus_permomance, decode(a.msl_ro, 1, 'RO All', 2, 'RO Premi', 3, 'Autobreak', '-') ro, a.msl_edate jt_tempo, a.msl_bdate,
		        to_number(replace(upper(replace(upper(replace(a.msl_desc,'(Roll Over)','')),'PREMI TOP UP KE-','')),'PREMI KE-',''))tu
		    from
		        eka.mst_slink a, eka.mst_policy b, eka.mst_agent_prod c, eka.lst_region d, eka.lst_user_admin e
		    where
		        a.reg_spaj = b.reg_spaj      
		        and a.msl_kode IN (1,2,3,5)                  
		        and b.lspd_id <![CDATA[<>]]> 95
		        and b.lssp_id = 1
		        and b.reg_spaj = c.reg_spaj
		        and c.lsle_id = 4
		        and b.lca_id = d.lca_id
		        and b.lwk_id = d.lwk_id
		        and b.lsrg_id = d.lsrg_id
		        and d.lar_id = e.lar_id
		        and upper(a.msl_desc) not like upper('PREMI UTAMA%')
		        and (a.msl_edate between TO_DATE(#bdate#, 'dd/mm/yyyy') and TO_DATE(#edate#, 'dd/mm/yyyy'))
		        <isNotEmpty property="msag_id">
			    	<isNotEqual property="msag_id" compareValue="none" prepend="AND">
			    		c.msag_id = #msag_id#
			    	</isNotEqual>
			    </isNotEmpty>
		        <isNotEmpty property="lca">
			        <isNotEqual property="lca" compareValue="ALL" prepend=" AND ">
			            b.lca_id = #lca#
			        </isNotEqual>
			    </isNotEmpty>                               
			    <isNotEmpty property="lwk">
			        <isNotEqual property="lwk" compareValue="ALL" prepend=" AND ">
			            b.lwk_id = #lwk#
			        </isNotEqual>
			    </isNotEmpty>                               
			    <isNotEmpty property="lsrg">
			        <isNotEqual property="lsrg" compareValue="ALL" prepend=" AND ">
			            b.lsrg_id = #lsrg#
			        </isNotEqual>
			    </isNotEmpty>    
			    and e.lus_id = #lus_id#
		)order by reg_spaj, kd, tu asc    	
	</select>
	
	<select id="elions.bas.selectReport_Produksi_Mingguan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct
		    sum((case when d.lsbs_id in (116,118,140,141,153,159,160,191) and (a.lscb_id = 0 or (select distinct reg_spaj from eka.mst_ulink where lt_id = 2 and reg_spaj=a.reg_spaj)is not null) then 1 else 0 end))single_link,
		    sum((case when d.lsbs_id in (116,118,140,141,153,159,160,191) and (a.lscb_id <![CDATA[>]]> 0 and (select distinct reg_spaj from eka.mst_ulink where lt_id <![CDATA[<>]]>2 and reg_spaj=a.reg_spaj)is not null) then 1 else 0 end))reg_link,
		    sum((case when d.lsbs_id not in (116,118,140,141,153,159,160,191) and a.lscb_id = 0 then 1 else 0 end))single_trad,
		    sum((case when d.lsbs_id not in (116,118,140,141,153,159,160,191) and a.lscb_id > 0 then 1 else 0 end))reg_trad, 
		    sum((case when d.lsbs_id in (116,118,140,141,153,159,160,191) and (a.lscb_id = 0 or (select distinct reg_spaj from eka.mst_ulink where lt_id = 2 and reg_spaj=a.reg_spaj)is not null) then d.mspr_premium else 0 end))premi_single_link,
		    sum((case when d.lsbs_id in (116,118,140,141,153,159,160,191) and (a.lscb_id <![CDATA[>]]> 0 and (select distinct reg_spaj from eka.mst_ulink where lt_id = 5 and reg_spaj=a.reg_spaj)is not null) then d.mspr_premium else 0 end))premi_reg_link,
		    sum((case when d.lsbs_id not in (116,118,140,141,153,159,160,191) and a.lscb_id = 0 then d.mspr_premium else 0 end))premi_single_trad,
		    sum((case when d.lsbs_id not in (116,118,140,141,153,159,160,191) and a.lscb_id <![CDATA[>]]> 0 then d.mspr_premium else 0 end))premi_reg_trad, 
		    (SELECT 
		            x.msag_id
		        FROM 
		            eka.mst_agent x,
		            eka.mst_client_new y,
		            eka.lst_level_agent z 
		        WHERE 
		            x.msag_active = 1
		            and x.mcl_id = y.mcl_id
		            and x.lstb_id = z.lstb_id
		            and x.lsle_id = z.lsle_id
		            and x.lsle_id = 1
		            START WITH x.msag_id = e.msag_id
		            CONNECT BY x.msag_id = PRIOR x.mst_leader)leader_id,
		    (SELECT 
		        y.mcl_first
		    FROM 
		        eka.mst_agent x,
		        eka.mst_client_new y,
		        eka.lst_level_agent z 
		    WHERE 
		        x.msag_active = 1
		        and x.mcl_id = y.mcl_id
		        and x.lstb_id = z.lstb_id
		        and x.lsle_id = z.lsle_id
		        and x.lsle_id = 1
		        START WITH x.msag_id = e.msag_id
		        CONNECT BY x.msag_id = PRIOR x.mst_leader)leader_name,
		    (SELECT 
		        z.lsle_name
		    FROM 
		        eka.mst_agent x,
		        eka.mst_client_new y,
		        eka.lst_level_agent z 
		    WHERE 
		        x.msag_active = 1
		        and x.mcl_id = y.mcl_id
		        and x.lstb_id = z.lstb_id
		        and x.lsle_id = z.lsle_id
		        and x.lsle_id = 1
		        START WITH x.msag_id = e.msag_id
		        CONNECT BY x.msag_id = PRIOR x.mst_leader)leader_jbtn,
		    (select lsrg_nama from eka.lst_region where lca_id = f.lca_id and lwk_id = f.lwk_id and lsrg_id ='00')regional
		from
		    eka.mst_policy a,
		    eka.lst_user b,
		    eka.mst_insured c,
		    eka.mst_product_insured d,
		    eka.mst_agent_prod e,
		    eka.mst_agent f
		where
		    a.lus_id = b.lus_id
		    and a.reg_spaj = c.reg_spaj
		    and c.reg_spaj = d.reg_spaj
		    and c.mste_insured_no = d.mste_insured_no
		    and a.reg_spaj = e.reg_spaj
		    and e.msag_id = f.msag_id
		    and c.mste_insured_no = 1
		    and (e.lev_comm = 4 or e.lsle_id = 4)
		    and d.lsbs_id not in (86,94,123,124,142,143,144,158,164,174,175,176,184)
		    and d.lsbs_id <![CDATA[<]]> 300
		    and a.lspd_id <![CDATA[<>]]> 95
		    and a.lus_id = #lus_id#
		    and a.mspo_input_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
		group by e.msag_id, f.lca_id, f.lwk_id
	</select>
	
	<select id="elions.bas.selectreportSummaryInputTotal" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
		    "EKA"."LST_USER"."LUS_ID" ,
		    "EKA"."LST_USER"."LUS_LOGIN_NAME"  ,
		    "EKA"."LST_ADDR_REGION"."LAR_ADMIN",
		    "EKA"."MST_POLICY"."REG_SPAJ",
		  	a.MU_JLH_TU,
		    eka.f_lsdbs(eka.mst_policy.reg_spaj, eka.mst_product_insured.lsbs_id, eka.mst_product_insured.lsdbs_number) LSDBS_NAME,
		    "EKA"."MST_PRODUCT_INSURED"."MSPR_PREMIUM"
		FROM 
		    "EKA"."MST_POLICY",
		    "EKA"."MST_INSURED",   
		    "EKA"."MST_PRODUCT_INSURED",   
		    "EKA"."LST_REGION",   
		    "EKA"."MST_AGENT_PROD",   
		    "EKA"."LST_ADDR_REGION", 
		    "EKA"."MST_AGENT",   
		    "EKA"."LST_WAKIL",
		    "EKA"."LST_DET_BISNIS", 
		    "EKA"."MST_CLIENT_NEW" "MST_CLIENT_NEW_a",   
		    "EKA"."MST_CLIENT_NEW" "MST_CLIENT_NEW_b",   
		    "EKA"."MST_CLIENT_NEW" "MST_CLIENT_NEW_c",   
		    "EKA"."LST_USER" ,
		    "EKA"."MST_ADDRESS_BILLING"  ,
		    (SELECT 
		        "EKA"."MST_POLICY"."REG_SPAJ",   
		        "EKA"."MST_ULINK"."MU_JLH_PREMI",   
		        "EKA"."MST_DET_ULINK"."LJI_ID",   
		        "EKA"."MST_DET_ULINK"."MDU_PERSEN"  ,
		        "EKA"."MST_ULINK"."MU_JLH_TU" ,
		        "EKA"."LST_JENIS_INVEST"."LJI_INVEST",
		        count("EKA"."MST_DET_ULINK"."LJI_ID") jumlah_invest,
		        "EKA"."MST_ULINK"."MU_PERIODIC_TU"
		    FROM 
		        "EKA"."MST_POLICY",   
		        "EKA"."MST_ULINK",   
		        "EKA"."MST_DET_ULINK"  ,
		        "EKA"."LST_JENIS_INVEST"
		        WHERE 
		        ( "EKA"."MST_ULINK"."REG_SPAJ" = "EKA"."MST_POLICY"."REG_SPAJ" ) and  
		        ( "EKA"."MST_DET_ULINK"."REG_SPAJ" = "EKA"."MST_ULINK"."REG_SPAJ" ) and  
		        ( "EKA"."MST_DET_ULINK"."MU_KE" = "EKA"."MST_ULINK"."MU_KE" ) and  
		        ( "EKA"."MST_ULINK"."MU_KE"=1 ) AND
		        ("EKA"."LST_JENIS_INVEST"."LJI_ID" = "EKA"."MST_DET_ULINK"."LJI_ID")
		    group by "EKA"."MST_POLICY"."REG_SPAJ",   
		        "EKA"."MST_ULINK"."MU_JLH_PREMI",   
		        "EKA"."MST_DET_ULINK"."LJI_ID",   
		        "EKA"."MST_DET_ULINK"."MDU_PERSEN"  ,
		        "EKA"."MST_ULINK"."MU_JLH_TU" ,
		        "EKA"."LST_JENIS_INVEST"."LJI_INVEST",
		        "EKA"."MST_ULINK"."MU_PERIODIC_TU"
		    ORDER BY "EKA"."MST_DET_ULINK"."LJI_ID")  a
		WHERE 
		    ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_INSURED"."REG_SPAJ" ) and  
		    ( "EKA"."MST_INSURED"."REG_SPAJ" = "EKA"."MST_PRODUCT_INSURED"."REG_SPAJ" ) and  
		    ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_AGENT_PROD"."REG_SPAJ" ) and  
		    ( "EKA"."MST_PRODUCT_INSURED"."LSBS_ID" = "EKA"."LST_DET_BISNIS"."LSBS_ID" ) and  
		    ( "EKA"."MST_PRODUCT_INSURED"."LSDBS_NUMBER" = "EKA"."LST_DET_BISNIS"."LSDBS_NUMBER" ) and  
		    ( "EKA"."MST_AGENT_PROD"."MSAG_ID" = "EKA"."MST_AGENT"."MSAG_ID" ) and  
		    ( "EKA"."MST_AGENT"."MCL_ID" = "MST_CLIENT_NEW_a"."MCL_ID" ) and  
		    ( "EKA"."MST_INSURED"."MSTE_INSURED" = "MST_CLIENT_NEW_b"."MCL_ID" ) and  
		    ( "EKA"."MST_POLICY"."MSPO_POLICY_HOLDER" = "MST_CLIENT_NEW_c"."MCL_ID" ) and  
		    ( "EKA"."MST_POLICY"."LCA_ID" = "EKA"."LST_WAKIL"."LCA_ID" ) and  
		    ( "EKA"."MST_POLICY"."LWK_ID" = "EKA"."LST_WAKIL"."LWK_ID" ) and  
		    ( "EKA"."MST_AGENT_PROD"."LSLE_ID"=4) AND
		    ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_ADDRESS_BILLING"."REG_SPAJ" ) and  
		    ("EKA"."MST_POLICY"."LUS_ID" = "EKA"."LST_USER"."LUS_ID" ) and
		    ( "EKA"."MST_POLICY"."LSTB_ID" =1 )AND
		    ( "EKA"."MST_POLICY"."LCA_ID" = "LST_REGION"."LCA_ID" ) and
		    ( "EKA"."MST_POLICY"."LWK_ID" = "LST_REGION"."LWK_ID" ) and
		    ( "EKA"."MST_POLICY"."LSRG_ID" = "LST_REGION"."LSRG_ID" ) and
		    ( "EKA"."LST_ADDR_REGION"."LAR_ID" ="LST_REGION"."LAR_ID") and
		    ( "EKA"."LST_DET_BISNIS"."LSBS_ID" <![CDATA[<]]> 300 )
		    and "EKA"."MST_POLICY"."MSPO_INPUT_DATE" between to_date(#bdate#|| ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') and to_date(#edate# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)') 
		    and a.reg_spaj (+)=  "EKA"."MST_POLICY"."REG_SPAJ"  and
		    NVL("EKA"."MST_INSURED"."MSTE_FLAG_GUTHRIE",0) = 0
		ORDER BY   
		    1,2,3
	</select>
	
	<select id="elions.bas.selectDetailPowerSaveFU" parameterClass="string" resultClass="java.util.HashMap">
		SELECT  /*+ first_rows */ 
		    to_char(a.mps_deposit_date ,'dd/MM/yyyy') ||' s/d '|| to_char(a.mpr_mature_date,'dd/MM/yyyy')periode,
		    to_char(a.mpr_mature_date, 'dd/MM/yyyy') maturity_date,
		    (SELECT COUNT(*)
		            FROM EKA.MST_POWERSAVE_RO  
		        WHERE REG_SPAJ = a.reg_spaj
		                AND MPS_KODE IN (2,3) 
		                AND MPS_DEPOSIT_DATE <![CDATA[<=]]> a.mps_deposit_date )ro_ke,
		    a.mpr_jangka_invest mgi,
		    (case when a.mpr_nett_tax = 0 then 'Normal'
		          when a.mpr_nett_tax = 1 then 'Special Gross'
		          when a.mpr_nett_tax = 2 then 'Special Nett' else '' end) jenis_rate,
		    a.mpr_rate rate,
		    j.lku_symbol kurs,
		    a.mpr_deposit premi_deposit,
		    a.mpr_interest premi_interest,
		    (SELECT 
		            SUM(z.MRS_PREMI)
		        FROM EKA.MST_RIDER_SAVE z
		        WHERE z.REG_SPAJ = a.reg_spaj AND  
		              z.MPS_DEPOSIT_DATE = a.mps_deposit_date )  premi_rider,
		    (a.mpr_debet  +  (case when a.mpr_nett_tax = 4 then 0 else a.mpr_tax end)) premi_debit,
		    a.mpr_insurance premi_insurance,
		    a.mpr_tax tax,
		    a.mpr_debet premi_dibayar
		FROM 
		    EKA.MST_POWERSAVE_RO a,
		    EKA.MST_INSURED b,
		    EKA.MST_PRODUCT_INSURED c,
		    EKA.MST_POLICY d,
		    EKA.MST_CLIENT e,
		    EKA.MST_POWERSAVE_PROSES f,
		    EKA.MST_POWERSAVE_UBAH g,
		    EKA.MST_REK_CLIENT h,
		    EKA.LST_BANK_PUSAT i,
		    EKA.LST_KURS j,
		    EKA.MST_PROSAVE_BAYAR k,
		    EKA.MST_UPLOAD_FINANCE l  
		WHERE 
		    a.REG_SPAJ = f.REG_SPAJ (+) 
		    and a.MPS_KODE = f.MPS_KODE (+) 
		    and a.MPS_DEPOSIT_DATE = f.MPS_DEPOSIT_DATE (+) 
		    and a.REG_SPAJ = g.REG_SPAJ (+) 
		    and a.MPS_DEPOSIT_DATE = g.MPU_TGL_AWAL (+) 
		    and a.REG_SPAJ = b.REG_SPAJ 
		    and d.REG_SPAJ = b.REG_SPAJ 
		    and d.REG_SPAJ = c.REG_SPAJ 
		    and d.MSPO_POLICY_HOLDER = e.MCL_ID 
		    and d.REG_SPAJ = h.REG_SPAJ (+) 
		    and h.LSBP_ID = i.LSBP_ID (+) 
		    and d.LKU_ID = j.LKU_ID (+) 
		    and a.REG_SPAJ = k.REG_SPAJ (+) 
		    and a.MPS_DEPOSIT_DATE = k.MPB_BEG_PERIOD (+) 
		    and k.REG_SPAJ = l.REG_SPAJ (+) 
		    and k.MPB_BAYAR_ID = l.NO_REF (+) 
		    and c.LSBS_ID <![CDATA[<]]> 300 
		    and a.REG_SPAJ = #value#
		    and g.MPU_JENIS(+) = 3 
		order by ro_ke
	</select>
	
	<select id="elions.bas.selectDetailStableLinkFU" parameterClass="string" resultClass="java.util.HashMap">
		SELECT DISTINCT 
		    s.msl_bdate,to_char(s.msl_bdate , 'dd/MM/yyyy' ) ||' s/d '|| to_char(s.msl_edate, 'dd/MM/yyyy')periode,
		    s.msl_desc description,
		    (SELECT COUNT(*)
		        FROM EKA.MST_SLINK  
		        WHERE REG_SPAJ = s.reg_spaj
		                AND MSL_TU_KE = s.msl_tu_ke
		                AND MSL_KODE IN (2,3)
		                AND MSL_BDATE <![CDATA[<=]]> s.msl_bdate)ro_ke,
		    ku.lku_symbol kurs,
		    s.msl_premi premi,
		    s.msl_bunga interest,
		    (s.msl_premi+s.msl_bunga)  premi_bunga,
		    s.msl_mgi mti,
		    s.msl_ro roll_over,
		    sb.mslb_paid_date paid_date,
		    s.msl_nab nab
		FROM 
		    EKA.MST_SLINK s ,
		    EKA.MST_INSURED i ,
		    EKA.MST_PRODUCT_INSURED pi ,
		    EKA.MST_POLICY po ,
		    EKA.MST_CLIENT_NEW cn ,
		    EKA.MST_SLINK_UBAH su,
		    EKA.MST_REK_CLIENT rc,
		    EKA.LST_BANK_PUSAT bp,
		    EKA.LST_KURS ku,
		    EKA.MST_PINJAMAN pin,
		    EKA.MST_SLINK_BAYAR sb  
		WHERE 
		    s.REG_SPAJ = su.REG_SPAJ (+)
		    AND s.MSL_BDATE = su.MSLU_TGL_AWAL (+)
		    AND s.MSL_TU_KE = su.MSLU_TU_KE (+)
		    AND s.REG_SPAJ = i.REG_SPAJ
		    AND s.REG_SPAJ = pi.REG_SPAJ
		    AND po.REG_SPAJ = i.REG_SPAJ
		    AND po.MSPO_POLICY_HOLDER = cn.MCL_ID (+)
		    AND po.REG_SPAJ = rc.REG_SPAJ (+)
		    AND rc.LSBP_ID = bp.LSBP_ID (+)
		    AND rc.MRC_KURS = ku.LKU_ID (+)
		    AND sb.REG_SPAJ = pin.REG_SPAJ (+)
		    AND sb.MSLB_NO_REFF = pin.MSPIN_NO_PINJAMAN (+)
		    AND s.REG_SPAJ = sb.REG_SPAJ (+)
		    AND s.MSL_NO = sb.MSL_NO (+)
		    AND pi.LSBS_ID <![CDATA[<]]> 300
		    AND s.REG_SPAJ = #value#
		    AND su.MSLU_JENIS(+) = 3 
		    AND pin.FLAG_PS (+) = 2
		    AND sb.FLAG_BULANAN (+) <![CDATA[<>]]> 1
	    order by 1
	</select>
	
	<select id="elions.bas.selectTglFormHist" parameterClass="string" resultClass="java.util.HashMap">
		select distinct
		    (select to_char(max(msfh_dt),'dd/MM/yyyy') from eka.mst_form_hist where msf_id=a.msf_id and posisi=0)tgl_minta,
		    (select to_char(max(msfh_dt),'dd/MM/yyyy') from eka.mst_form_hist where msf_id=a.msf_id and posisi=1)tgl_approve,
		    (select to_char(max(msfh_dt),'dd/MM/yyyy') from eka.mst_form_hist where msf_id=a.msf_id and posisi=3)tgl_reject,
		    (select to_char(max(msfh_dt),'dd/MM/yyyy') from eka.mst_form_hist where msf_id=a.msf_id and posisi=4)tgl_kirim,
		    (select to_char(max(msfh_dt),'dd/MM/yyyy') from eka.mst_form_hist where msf_id=a.msf_id and posisi=5)tgl_terima
		from eka.mst_form_hist a
		where a.msf_id = #value#
	</select>
	
	<select id="elions.bas.selectStokBrosurBusDev" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
			stock_id, code_brosur, stock_name, stock, aktif
		from stok.stock_brosur 
		where
			aktif = 1
			<isNotNull property="busdev">
				and busdev = #busdev#
			</isNotNull> 
			<isNotNull property="jenis">
				and jenis = #jenis#
			</isNotNull> 
	</select>
	
	<select id="elions.bas.selectPrefixBrosur" parameterClass="string" resultClass="int">
		select count(*) from eka.lst_jenis_spaj where jenis = 1 and upper(lsjs_prefix) = upper(#value#)
	</select>
	
	<select id="elions.bas.selectStokIdBrosur" parameterClass="string" resultClass="int">
		select max(to_number(replace(stock_id,'BR','')))+1 from STOK.STOCK_BROSUR
	</select>
	
	<select id="elions.bas.selectJenisFormBrosur" parameterClass="string" resultClass="int">
		select distinct
		    b.jenis
		from
		    eka.mst_form a,
		    eka.lst_jenis_spaj b
		where
		    a.lsjs_id = b.lsjs_id
		    and a.msf_id = #value#
	</select>
	
	<select id="elions.bas.selectReport_LisensiAgent" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
		    e.lca_nama cabang, a.msag_id, c.mcl_first nama, a.msag_berlaku lisensi, a.msag_beg_date bdate, a.msag_end_date edate, 
		    to_char(a.msag_beg_date, 'dd/MM/yyyy') || ' s/d ' || to_char(a.msag_end_date, 'dd/MM/yyyy')kontrak,
		    (case when a.msag_sertifikat = 1 then 'Pemutihan'
		          when a.msag_sertifikat = 2 then 'Ujian'
		          when a.msag_sertifikat = 3 then 'Sementara'
		          when a.msag_sertifikat = 4 then 'Tidak Lulus'
		          when a.msag_sertifikat = 5 then 'Temporary'
		          when a.msag_sertifikat = 6 then 'CPD-1'
		          when a.msag_sertifikat = 7 then 'CPD-2'
		          when a.msag_sertifikat = 8 then 'CPD-3'
		          else '-' end)sertifikat, d.lsle_name,
    		a.msag_tabungan rek, g.lsbp_nama bank  
		from
		    eka.mst_agent a,
		    eka.lst_region b,
		    eka.mst_client_new c,
    		eka.lst_level_agent d,
    		eka.lst_cabang e,
		    eka.lst_bank f,
		    eka.lst_bank_pusat g
		where
		    a.lca_id = b.lca_id
		    and a.lwk_id = b.lwk_id
		    and a.lsrg_id = b.lsrg_id
		    and a.mcl_id = c.mcl_id
		    and a.lsle_id = d.lsle_id
		    and a.lstb_id = d.lstb_id
		    and a.lca_id = e.lca_id
		    and a.lbn_id = f.lbn_id
		    and f.lsbp_id = g.lsbp_id
		    and a.msag_active = 1
		    <isNotEmpty property="jenis">
		    	<isEqual property="jenis" compareValue="1">
		    		and a.msag_berlaku between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')
		    		<isEqual property="lca" compareValue="ALL">
		    			and b.lar_id in (select distinct
											    y.lar_id
											from
											    eka.lst_user x,
											    eka.lst_user_admin y
											where
											    x.lus_id = y.lus_id
											    and x.lus_id = #lus_id#)
		    			<!-- and a.lca_id in(SELECT DISTINCT  z.lca_id
											FROM   eka.lst_user x, eka.lst_user_admin y, eka.lst_region z
											WHERE  
											    x.lus_id = #lus_id#
											    AND x.lus_id = y.lus_id
											    AND y.lar_id = z.lar_id
											    AND z.lca_id NOT IN (09)) -->
		    		</isEqual>
		    		<isNotEqual property="lca" compareValue="ALL">
			    		<isNotEmpty property="lca">
							<isNotEqual property="lca" compareValue="ALL" prepend=" AND ">
								a.lca_id = #lca#
							</isNotEqual>
						</isNotEmpty>		           		    
						<isNotEmpty property="lwk">
							<isNotEqual property="lwk" compareValue="ALL" prepend=" AND ">
								a.lwk_id = #lwk#
							</isNotEqual>
						</isNotEmpty>		           		    
						<isNotEmpty property="lsrg">
							<isNotEqual property="lsrg" compareValue="ALL" prepend=" AND ">
								a.lsrg_id = #lsrg#
							</isNotEqual>
						</isNotEmpty>
	    			</isNotEqual>
		    	</isEqual>
		    	<isEqual property="jenis" compareValue="2">
		    		AND to_char(a.msag_berlaku,'MMyyyy') = to_char(sysdate,'MMyyyy')
    				and a.msag_berlaku is not null
    				and a.lca_id in (select distinct lar_lca_id
										from eka.lst_addr_region 
										where upper(lar_email) = upper(#email#))
    				<!-- and a.lca_id in (select distinct
										    z.lar_lca_id
										from
										    eka.lst_user x,
										    eka.lst_user_admin y,
										    eka.lst_addr_region z
										where
										    x.lus_id = y.lus_id
										    and y.lar_id = z.lar_id
										    and x.lus_id = '2475'
										    and upper(z.lar_nama) = upper('Yulin Krisnawati')) -->
		    	</isEqual>
		    </isNotEmpty>
		order by 1,3,4
	</select>
	
	<select id="elions.bas.selectDaftarKartuNama" parameterClass="kartuNama" resultClass="kartuNama">
		select 
			a.mkn_id, a.msag_id, a.mkn_create_date, a.mkn_lus_id, a.mkn_document, a.mkn_approve, a.mkn_position,
			(case when a.mkn_position = 1 then 'Approval Distribution Support'
			      when a.mkn_position = 2 then 'Approval Bisnis Development'
			      when a.mkn_position = 3 then 'Purchasing'
			      when a.mkn_position = 4 then 'GA'
			      when a.mkn_position = 5 then 'Kirim ke cabang' else 'Input' end)position,
			b.lus_full_name user_input,
			a.mkn_type,
			(case when a.mkn_approve = 1 then 'Approve'
			      when a.mkn_approve = 2 then 'Tolak' else 'Belum Approve' end)approve, d.mcl_first,
	      	(select count(msag_id)total from eka.mst_kartu_nama where msag_id = a.msag_id and mkn_approve = 1 and mkn_position = 5 and mkn_create_date between trunc(sysdate, 'YEAR') and sysdate)total_permintaan
		from
		    eka.mst_kartu_nama a,
		    eka.lst_user b,
		    eka.mst_agent c,
		    eka.mst_client_new d
		where
		    a.mkn_id = #mkn_id#
		    and a.mkn_lus_id = b.lus_id
		    and a.msag_id = c.msag_id
		    and c.mcl_id = d.mcl_id
	</select>
	
	<select id="elions.bas.selectDaftarNoKartuNama" parameterClass="kartuNama" resultClass="kartuNama">
		select distinct
		    a.mkn_id, nvl(a.mkn_position, 0)mkn_position
		from
		    eka.mst_kartu_nama a
		where
			<isEqual property="mkn_position" compareValue="0">
				a.mkn_lus_id = #mkn_lus_id#
			</isEqual>
			<isNotEqual property="mkn_position" compareValue="0">
				a.mkn_position = #mkn_position#
			</isNotEqual>
	</select>
	
	<select id="elions.bas.selectIDKartuNama" parameterClass="string" resultClass="java.util.HashMap">
		select max(to_number(replace(mkn_id, to_char(sysdate,'yyyyMM'),'')))id from eka.mst_kartu_nama where substr(mkn_id,0,6) = to_char(sysdate,'yyyyMM')
	</select>
	
	<select id="elions.bas.selectHistoryKartuNama" parameterClass="kartuNama" resultClass="kartuNama">
		select
		    a.msf_id mkn_id, 
		    (case when a.posisi = 1 then 'Approval Distribution Support'
		          when a.posisi = 2 then 'Approval Bisnis Development'
		          when a.posisi = 3 then 'Purchasing'
		          when a.posisi = 4 then 'GA'
		          when a.posisi = 5 then 'Kirim ke cabang' else 'Input' end)position,
		    b.lus_full_name user_input, a.msfh_dt mkn_create_date, a.msfh_desc keterangan
		from
		    eka.mst_form_hist a,
		    eka.lst_user b
		where
		    a.msfh_lus_id = b.lus_id
		    and a.msf_id = #mkn_id#
		order by a.posisi asc
	</select>
	
	<select id="elions.bas.selectDataKartuNama" parameterClass="string" resultClass="java.util.HashMap">
		select 
		    c.mcl_first nama, b.msag_id, d.lsle_name posisi, a.telp,
		    c.mspe_email email, 
		    (case when b.msag_sertifikat = 1 then 'Pemutihan'
		          when b.msag_sertifikat = 2 then 'Ujian'
		          when b.msag_sertifikat = 3 then 'Sementara'
		          when b.msag_sertifikat = 4 then 'Tidak Lulus'
		          when b.msag_sertifikat = 5 then 'Temporary'
		          when b.msag_sertifikat = 6 then 'CPD-1'
		          when b.msag_sertifikat = 7 then 'CPD-2'
		          when b.msag_sertifikat = 8 then 'CPD-3'
		          else '-' end)sertifikat, to_char(b.msag_berlaku,'dd/MM/yyyy') lisensi,
		    (case when a.mkn_type = 1 then 'Konvensional' when a.mkn_type = 2 then 'Syariah' else '-' end)keterangan,
		    (select count(msag_id)total from eka.mst_kartu_nama where msag_id = b.msag_id and mkn_approve = 1 and mkn_position = 5 and mkn_create_date between trunc(sysdate, 'YEAR') and sysdate)total_permintaan 
		from
		    eka.mst_kartu_nama a,
		    eka.mst_agent b,
		    eka.mst_client_new c,
		    eka.lst_level_agent d
		where
		    a.msag_id = b.msag_id
		    and b.mcl_id = c.mcl_id
		    and b.lstb_id = d.lstb_id
		    and b.lsle_id = d.lsle_id
		    and a.mkn_id = #value#
	</select>
	
	<select id="elions.bas.selectEmailCabangLisensiAgent" parameterClass="string" resultClass="java.util.HashMap">
		select
		    rownum no, lar_email
		from
		    (SELECT distinct upper(a.lar_email)lar_email
		            FROM eka.lst_addr_region a, eka.lst_cabang b, eka.lst_region c
		           WHERE a.lar_id = c.lar_id
		             AND a.lar_lca_id = c.lca_id
		             AND b.lca_id = c.lca_id
		             AND a.lar_email IS NOT NULL
		        ORDER BY lar_email)
	</select>
	
	<select id="elions.bas.selectAddressRegionLcaId" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select a.*, b.lca_nama 
		from eka.lst_addr_region a, eka.lst_cabang b 
		where 
			a.lar_lca_id = b.lca_id 
			<isNotEqual property="lca" compareValue="ALL">
				and a.lar_lca_id = #lca#
			</isNotEqual>
		order by b.lca_nama
	</select>
	
	<select id="elions.bas.selectReportInputHarian" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
		    a.mspo_input_date tgl_input, a.reg_spaj, a.mspo_policy_no polis,
		    eka.utils.pemegang(a.reg_spaj)pemegang, d.lsdbs_name produk,
		    c.mspr_tsi up, c.mspr_premium premi, e.tgl_input tgl_scan,
		    f.lspd_position posisi_dokumen, g.lssp_status status_aksep, 
		    h.lus_full_name user_input, i.lca_nama cabang, ao.mcl_first nama_ao
		from
		    eka.mst_policy a,
		    eka.mst_insured b,
		    eka.mst_product_insured c,
		    eka.lst_det_bisnis d,
		    eka.mst_scan e,
		    eka.lst_document_position f,
		    eka.lst_policy_status g,
		    eka.lst_user h,
		    eka.lst_cabang i,
		    (select
		        ma.msag_id, mcn.mcl_first
		    from
		        eka.mst_agent ma,
		        eka.mst_client_new mcn
		    where
		        ma.mcl_id = mcn.mcl_id)ao
		where
		    a.reg_spaj = b.reg_spaj
		    and b.reg_spaj = c.reg_spaj
		    and b.mste_insured_no = c.mste_insured_no
		    and c.lsbs_id = d.lsbs_id
		    and c.lsdbs_number = d.lsdbs_number
		    and a.reg_spaj = e.no_indek(+)
		    and a.lspd_id = f.lspd_id
		    and a.lssp_id = g.lssp_id
		    and a.lus_id = h.lus_id
		    and a.lca_id = i.lca_id
		    and a.mspo_ao = ao.msag_id(+)
		    and b.mste_insured_no = 1
		    and a.lspd_id = 1
		    and a.mspo_input_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
		    <isNotEqual property="lsbs_id" compareValue="ALL">
		    and d.lsbs_id = #lsbs_id#
		    and d.lsdbs_number in (select lsdbs_number from eka.lst_det_bisnis where lsbs_id = #lsbs_id# and lsdbs_aktif = 1)
			</isNotEqual>
		order by 1
	</select>
	
	<select id="elions.bas.selectReportInputHarianNew" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<isEqual property="lsbs_id" compareValue="simpol">
			select
			    a.mspo_input_date tgl_input, b.mste_tgl_terima_admin tgl_terima_admin, a.mspo_spaj_date tgl_spaj, a.reg_spaj,
			    a.mspo_no_blanko no_blanko, k.tgl_transfer_uw, eka.utils.pemegang(a.reg_spaj)pemegang,
			    h.lus_full_name user_input, penutup.nama_reff nama_agent, '' agency,
			    (select msps_desc from eka.mst_position_spaj
			     where lssa_id_bas = 15 and reg_spaj = a.reg_spaj
					 and msps_date = (select max(msps_date) from eka.mst_position_spaj
					 				  where reg_spaj = a.reg_spaj and lssa_id_bas = 15)
				) keterangan_further, g.status_accept,
                (select msps_desc from eka.mst_position_spaj
                 where reg_spaj = a.reg_spaj
                     and msps_date = (select max(msps_date) from eka.mst_position_spaj
                                      where reg_spaj = a.reg_spaj)
                ) keterangan_terakhir
			from 
			    eka.mst_policy a,
			    eka.mst_insured b,
			    eka.mst_product_insured c,
			    eka.lst_det_bisnis d,
			    eka.lst_document_position e,
			    eka.lst_policy_status f,
			    eka.lst_status_accept g,
			    eka.lst_user h,
			    eka.mst_reff_bii i,
			    eka.lst_reff_bii penutup,
			    eka.lst_reff_bii reff,
			    eka.lst_cabang_bii cabang,
			    eka.lst_pay_mode j,
			    eka.mst_trans_history k
			where
			    a.reg_spaj = b.reg_spaj
			    and b.reg_spaj = c.reg_Spaj
			    and b.mste_insured_no = c.mste_insured_no
			    and c.lsbs_id = d.lsbs_id
			    and c.lsdbs_number = d.lsdbs_number
			    and a.lspd_id = e.lspd_id
			    and a.lssp_id = f.lssp_id
			    and b.lssa_id = g.lssa_id
			    and a.lus_id = h.lus_id
			    and a.reg_spaj = i.reg_spaj
			    and i.lrb_id = PENUTUP.LRB_ID
			    and i.reff_id = reff.lrb_id
			    and i.lcb_penutup = cabang.lcb_no
			    and a.lscb_id = j.lscb_id
			    and a.reg_spaj = k.reg_spaj
			    and k.jenis = 23
			    and i.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = a.reg_spaj)
			    and c.lsbs_id <![CDATA[<]]> 300
			    and b.mste_insured_no = 1
			    and ((c.lsbs_id = 120 and c.lsdbs_number in (22,23,24)) or (c.lsbs_id = 202 and c.lsdbs_number in (4,5,6)))
			    and a.mspo_input_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			    and a.lspd_id <![CDATA[<>]]> 95
			order by 1
		</isEqual>
		<isEqual property="lsbs_id" compareValue="agency">
			select
			    a.mspo_input_date tgl_input, b.mste_tgl_terima_admin tgl_terima_admin, a.mspo_spaj_date tgl_spaj, a.reg_spaj,
			    a.mspo_no_blanko no_blanko, j.tgl_transfer_uw, eka.utils.pemegang(a.reg_spaj) pemegang,
			    h.lus_full_name user_input, n.mcl_first nama_agent, o.lsrg_nama agency,
			    (select msps_desc from eka.mst_position_spaj
			     where lssa_id_bas = 15 and reg_spaj = a.reg_spaj
					 and msps_date = (select max(msps_date) from eka.mst_position_spaj
					 				  where reg_spaj = a.reg_spaj and lssa_id_bas = 15)
				) keterangan_further, g.status_accept,
                (select msps_desc from eka.mst_position_spaj
                 where reg_spaj = a.reg_spaj
                     and msps_date = (select max(msps_date) from eka.mst_position_spaj
                                      where reg_spaj = a.reg_spaj)
                ) keterangan_terakhir
			from 
			    eka.mst_policy a,
			    eka.mst_insured b,
			    eka.mst_product_insured c,
			    eka.lst_det_bisnis d,
			    eka.lst_document_position e,
			    eka.lst_policy_status f,
			    eka.lst_status_accept g,
			    eka.lst_user h,
			    eka.lst_pay_mode i,
			    eka.mst_trans_history j,
			    eka.lst_cabang k,
			    eka.mst_agent_prod l,
			    eka.mst_agent m,
			    eka.mst_client_new n,
    			eka.lst_region o
			where
			    a.reg_spaj = b.reg_spaj
			    and b.reg_spaj = c.reg_Spaj
			    and b.mste_insured_no = c.mste_insured_no
			    and c.lsbs_id = d.lsbs_id
			    and c.lsdbs_number = d.lsdbs_number
			    and a.lspd_id = e.lspd_id
			    and a.lssp_id = f.lssp_id
			    and b.lssa_id = g.lssa_id
			    and a.lus_id = h.lus_id
			    and a.lscb_id = i.lscb_id
			    and a.reg_spaj = j.reg_spaj
			    and a.lca_id = k.lca_id
			    and a.reg_spaj = l.reg_spaj
			    and l.msag_id = m.msag_id
			    and m.mcl_id = n.mcl_id
			    and a.lca_id = o.lca_id
			    and a.lwk_id = o.lwk_id
			    and a.lsrg_id = o.lsrg_id
			    and l.lsle_id = 4
			    and j.jenis = 23
			    and c.lsbs_id <![CDATA[<]]> 300
			    and b.mste_insured_no = 1
			    and k.jalurdis in (1,2,3,4,5,11)
			    and a.mspo_input_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			    and a.lspd_id <![CDATA[<>]]> 95
			order by 1
		</isEqual>
	</select>
	
	<select id="elions.bas.selectCabangReturKpl" parameterClass="string" resultClass="java.util.HashMap">
		select distinct
		    b.lca_id
		from
		    eka.mst_surat_history a,
		    eka.mst_policy b
		where
		    a.reg_spaj = b.reg_spaj
		    and a.jenis = 2
		    and a.tgl_back is not null
		    and trunc(a.tgl_back) between trunc(sysdate-1) and trunc(sysdate-1)
	</select>
	
	<select id="elions.bas.selectReturKpl" parameterClass="string" resultClass="java.util.HashMap">
		select
		    c.lca_nama cabang, b.mspo_policy_no_format polis, eka.utils.pemegang(a.reg_spaj) pemegang, 
		    d.alamat_rumah alamat, d.area_code_rumah||' - '||d.telpon_rumah telp, a.alasan_back keterangan
		from
		    eka.mst_surat_history a,
		    eka.mst_policy b,
		    eka.lst_cabang c,
		    eka.mst_address_new d
		where
		    a.reg_spaj = b.reg_spaj
		    and b.lca_id = c.lca_id
		    and b.mspo_policy_holder = d.mcl_id
		    and a.jenis = 2
		    and a.tgl_back is not null
		    and trunc(a.tgl_back) between trunc(sysdate-1) and trunc(sysdate-1)
		    and b.lca_id = #lca_id#
	</select>
	
	<select id="elions.bas.selectReportGagalDebet" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct
		    a.reg_spaj, a.mspo_policy_no, a.mspo_policy_no_format, agent.mcl_first nama_agent,
		    (select cn.mcl_first from eka.mst_agent ag, eka.mst_client_new cn where ag.mcl_id = cn.mcl_id and ag.msag_id = d.mst_leader)nama_leader,
		    eka.utils.pemegang(a.reg_spaj)pemegang, g.lsdbs_name produk, e.mste_beg_date beg_date, e.mste_end_date end_date, h.lku_symbol kurs,
		    i.lscb_pay_mode cara_bayar,
		    m.lsbp_nama bank_premi, pot.total_pot pot_bulanan, trunc(to_date(gagal.tgl_terima,'dd/MM/yyyy') - to_date(gagal.tgl_tagihan,'dd/MM/yyyy'))|| ' hari' lama_hari, 
		    n.MSAP_AREA_CODE1 ||' - '|| n.MSAP_PHONE1 telp, j.lssp_status status_polis, gagal.tgl_terima, gagal.tgl_tagihan
		from
		    eka.mst_policy a,
		    eka.mst_billing b,
		    eka.mst_agent_prod c,
		    eka.mst_agent d,
		    eka.mst_insured e,
		    eka.mst_product_insured f,
		    eka.lst_det_bisnis g,
		    eka.lst_kurs h,
		    eka.lst_pay_mode i,
		    eka.lst_policy_status j,
		    EKA.MST_ACCOUNT_RECUR k,
		    EKA.LST_BANK l,
		    EKA.LST_BANK_PUSAT m, 
		    eka.mst_address_billing n,
		    eka.mst_client_new agent,
		    (SELECT 
		        EKA.MST_EKA_RECUR.SUBS_NUMBER SPAJ , 
		        EKA.MST_EKA_RECUR.KET3 GAGAL_KE , 
		        EKA.MST_EKA_RECUR.KET2 TH_KE , 
		        EKA.MST_EKA_RECUR.KET1 PREMI_KE , 
		        EKA.MST_EKA_RECUR.TGL_TAGIHAN ,
		        EKA.MST_EKA_RECUR.LJHR_ID ,
		        EKA.MST_EKA_RECUR.NO_REKENING ,
		        EKA.MST_EKA_RECUR.TOTAL_INVOICE,
		        EKA.MST_EKA_RECUR.KODE_PLAN, 
		        EKA.MST_EKA_RECUR.TGL_TERIMA 
		    FROM EKA.MST_EKA_RECUR
		    WHERE 
		        TGL_TERIMA = ( SELECT MAX(EKA.MST_EKA_RECUR.TGL_TERIMA) FROM EKA.MST_EKA_RECUR WHERE EKA.MST_EKA_RECUR.VAT = 0 ) 
		            AND EKA.MST_EKA_RECUR.VAT = 0) GAGAL,
		    (SELECT REG_SPAJ, TOTAL_PREMI TOTAL_POT
		    FROM EKA.MST_ULINK_BILL ub
		    WHERE 
		        ub.POT_KE = (SELECT MAX(POT_KE) FROM EKA.MST_ULINK_BILL WHERE REG_SPAJ = ub.REG_SPAJ AND TGL_POTONG IS NOT NULL AND FLAG_KURANG = 0)) POT
		where
		    a.reg_spaj = b.reg_spaj
		    and a.reg_spaj = c.reg_spaj
		    and c.msag_id = d.msag_id
		    and d.mcl_id = agent.mcl_id
		    and a.reg_spaj = e.reg_spaj
		    and e.reg_spaj = f.reg_spaj
		    and e.mste_insured_no = f.mste_insured_no
		    and f.lsbs_id = g.lsbs_id
		    and f.lsdbs_number = g.lsdbs_number
		    and a.lku_id = h.lku_id
		    and a.lscb_id = i.lscb_id
		    and a.lssp_id = j.lssp_id
		    and a.reg_spaj = k.reg_spaj
		    AND k.LBN_ID = l.LBN_ID  
		    AND l.LSBP_ID = m.LSBP_ID 
		    and a.reg_spaj = n.reg_spaj
		    and b.reg_spaj = gagal.spaj
		    and b.msbi_tahun_ke = gagal.th_ke
		    and b.msbi_premi_ke = gagal.premi_ke
		    and a.reg_spaj = pot.reg_spaj(+)
		    and b.msbi_premi_ke > 1
		    and c.lsle_id = 4
		    and e.mste_insured_no = 1
		    and f.lsbs_id <![CDATA[<]]> 300
		    <isNotEqual property="lca_id" compareValue="ALL">
		    	and a.lca_id = #lca_id#
		    </isNotEqual>
	</select>
	
	<select id="elions.bas.selectReportAging" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT  
		    a.MSBI_BEG_DATE, a.MSBI_END_DATE, a.MSBI_REMAIN, a.MSBI_PAID, b.MSDB_PREMIUM, b.MSDB_DISCOUNT,
		    c.MSPO_POLICY_NO, e.LSCB_PAY_MODE, b.REG_SPAJ, f.LKU_SYMBOL, b.MSBI_TAHUN_KE, b.MSBI_PREMI_KE,
		    a.MSBI_BILL_NO, a.MSBI_STAMP, a.MSBI_POLICY_COST, d.NAMA, a.LKU_ID, g.MSBIH_REMAIN, g.MSBIH_STAMP,
		    a.LCA_ID, a.LWK_ID, a.LSRG_ID, h.LCA_ID, h.LWK_ID, j.LAR_ADMIN, b.LSBS_ID, h.MSAP_ADDRESS,
		    h.MSAP_ZIP_CODE, h.MSAP_AREA_CODE1, h.MSAP_PHONE1, k.MSTE_BEG_DATE, j.LAR_ID, l.LCA_NAMA, m.LSGB_ID,
		    m.LSBS_NAME as plan_old, EKA.F_LSBS(c.REG_SPAJ, m.LSBS_ID) as LST_BISNIS_LSBS_NAME, 
		    DECODE(1, 1, l.LCA_NAMA, j.LAR_ADMIN) as REGION_CABANG, l.BRANCH_NO, c.LSSP_ID,
		    trunc(to_date(sysdate,'dd/MM/yyyy') - to_date(a.MSBI_BEG_DATE,'dd/MM/yyyy'))|| ' hari' lama_hari,
		    (select tgl_kirim from eka.mst_surat_history where periode = a.MSBI_BEG_DATE and reg_spaj = a.reg_spaj and rownum=1)tgl_kirim_surat,
		    (select
        		count(mp.reg_spaj)
    		from
        		eka.mst_policy mp,
        		eka.mst_billing mb
    		where
        		mp.reg_spaj = mb.reg_spaj
        		and mp.LSCB_ID <![CDATA[<>]]> 0 
        		and mb.LSPD_ID in (11,12,56,57)  
        		and mb.MSBI_PREMI_KE <![CDATA[>]]> 1 
        		and mp.reg_spaj = a.reg_spaj)total_outstanding
		FROM 
		    EKA.MST_BILLING a,
		    EKA.MST_DET_BILLING b,
		    EKA.MST_POLICY c,
		    EKA.V_CLIENT d,
		    EKA.LST_PAY_MODE e,
		    EKA.LST_KURS f,
		    EKA.MST_BILLING_HCR g,
		    EKA.MST_ADDRESS_BILLING h,
		    EKA.LST_REGION i,
		    EKA.LST_ADDR_REGION j,
		    EKA.MST_INSURED k,
		    EKA.LST_CABANG l,
		    EKA.LST_BISNIS m    
		WHERE 
		    a.REG_SPAJ = g.REG_SPAJ (+)
		    and  a.MSBI_TAHUN_KE = g.MSBIH_TAHUN_KE (+)
		    and  a.MSBI_PREMI_KE = g.MSBIH_PREMI_KE (+)
		    and  b.REG_SPAJ = a.REG_SPAJ  
		    and  b.MSBI_TAHUN_KE = a.MSBI_TAHUN_KE  
		    and  b.MSBI_PREMI_KE = a.MSBI_PREMI_KE  
		    and  c.REG_SPAJ = a.REG_SPAJ  
		    and  c.MSPO_POLICY_HOLDER = d.MCL_ID  
		    and  e.LSCB_ID = c.LSCB_ID  
		    and  c.LKU_ID = f.LKU_ID  
		    and  c.REG_SPAJ = h.REG_SPAJ  
		    and  h.LCA_ID = i.LCA_ID  
		    and  j.LAR_ID = i.LAR_ID  
		    and  h.LWK_ID = i.LWK_ID  
		    and  h.LSRG_ID = i.LSRG_ID  
		    and  c.REG_SPAJ = k.REG_SPAJ  
		    and  i.LCA_ID = l.LCA_ID  
		    and  m.LSBS_ID = b.LSBS_ID  
		    and  c.LSCB_ID <![CDATA[<>]]> 0 
		    and  m.LSBS_ID <![CDATA[<]]> 300  
		    and  a.MSBI_BEG_DATE between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy') 
		    and  a.LSPD_ID in (11,12,56,57)  
		    and  a.MSBI_PREMI_KE <![CDATA[>]]> 1 
		    <isNotEqual property="lca_id" compareValue="ALL"> 
		    and  a.LCA_ID = #lca_id#
		    </isNotEqual>
		    and a.lca_id not in ('09', '58', '65')
		    and m.lsbs_id not in ('203')
	</select>
	
	<select id="elions.bas.selectLstAddrRegion" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select * 
		from eka.lst_addr_region 
		where
			lar_id <![CDATA[>]]> 0 
			and flag_aktif = 1 
			<isNotEmpty property="nm_kota">
				and upper(lar_alamat) like upper('%' || #nm_kota# || '%')
			</isNotEmpty>
		order by lar_id asc
	</select>
	
	<select id="elions.bas.selectAutodebetSpeedy" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		    a.lar_id,
		    a.lar_nama,
		    a.lar_alamat,
		    a.lar_admin,
		    a.lar_telpon,
		    a.lar_no,
		    a.lar_speedy,
		    b.tgl_autodebet,
		    CASE
		        when b.status=1 then 'SUKSES'
		        when b.status=2 then 'TUNDA'
		        when b.status=3 then 'GAGAL'
		    END status
		FROM eka.lst_addr_region a, eka.lst_autodebet_speedy_hist b
		WHERE a.lar_id = b.lar_id
		and b.tgl_autodebet between to_date(#tglAwal#,'MM/dd/yyyy') and to_date(#tglAkhir#,'MM/dd/yyyy')
		<isEqual property="status" compareValue="0">
			and b.status<![CDATA[<>]]>#status#
		</isEqual>
		<isNotEqual property="status" compareValue="0">
			and b.status=#status#
		</isNotEqual>
		ORDER BY a.lar_id, b.tgl_autodebet asc
	</select>
	
	<select id="elions.bas.selectHistoryUpdateRegion" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
		    a.*, b.lus_full_name user_update
		from
		    eka.lst_addr_region_hist a,
		    eka.lst_user b
		where
		    a.lus_id = b.lus_id
		    and a.lar_id = #lar_id#
		<isNotEmpty property="order">
			order by create_date $order$
		</isNotEmpty>
	</select>
	
	<select id="elions.bas.selectDataListPendingBas" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
			to_char(A.MSPO_INPUT_DATE,'dd/MM/yyyy') tgl_input,a.reg_Spaj No_SPAJ,
			c.lca_nama nama_cabang,D.STATUS_ACCEPT status,E.SUB_DESC kategori,F.MSPS_DESC keterangan
		from
			eka.mst_policy a,
			eka.mst_insured b,
			eka.lst_cabang c,
			EKA.LST_STATUS_ACCEPT d,
			EKA.LST_STATUS_ACCEPT_SUB e,
			eka.mst_position_spaj f
		where
			a.reg_Spaj=b.reg_Spaj
			and a.reg_Spaj=f.reg_Spaj
			and b.lssa_id_bas=15
			and a.lca_id=c.lca_id
			and B.LSSA_ID_BAS=D.LSSA_ID
			and d.lssa_id=e.lssa_id
			and F.SUB_ID_BAS=E.SUB_ID
			<isNotEqual property="cabang" compareValue="ALL">
				and a.lca_id=#cabang#
			</isNotEqual>
			and F.MSPS_DATE=(select max(z.msps_date) from eka.mst_position_Spaj z where z.lssa_id_bas=b.lssa_id_bas and z.reg_Spaj=a.reg_Spaj)
			and a.mspo_input_date BETWEEN TO_DATE(#bdate# || '00:00:00', 'DD/MM/YYYY hh24:mi:ss') and TO_DATE(#edate# || '23:59:59', 'DD/MM/YYYY hh24:mi:ss')
		order by c.lca_nama	
	</select>
	
	<select id="elions.bas.selectDataPersentasePendingBas" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
      		 x.sub_id,x.sub_desc,nvl(b.jumlah_hh,0)jumlah_policy,round(nvl((b.jumlah_hh*100)/c.total,0),0)total
 		from 
	        eka.lst_status_accept_sub x,
	       (select count(z.reg_Spaj)total from eka.mst_insured z where z.lssa_id_bas=15)c,       
	       (select
	          	count(a.reg_Spaj)JUMLAH_hh,d.sub_desc,c.sub_id_bas
	         from
	            eka.mst_policy a,
	            eka.mst_insured b,
	            eka.mst_position_Spaj c,
	            eka.lst_status_accept_sub d
	  		 where
	            a.reg_Spaj=b.reg_Spaj
	            and a.reg_Spaj=c.reg_Spaj
	            and a.lspd_id=1
	            and b.lssa_id_bas=15
	            and c.MSPS_DATE=( select max(z.msps_date) from eka.mst_position_Spaj z where z.lssa_id_bas=b.lssa_id_bas and z.reg_Spaj=a.reg_Spaj)
	            and d.sub_id=c.sub_id_bas(+)
	            and c.lssa_id_bas=d.lssa_id
	            <isNotEqual property="cabang" compareValue="ALL">
						and a.lca_id=#cabang#
				</isNotEqual>           
	            and c.MSPS_DATE=(select max(z.msps_date) from eka.mst_position_Spaj z where z.lssa_id_bas=b.lssa_id_bas      and z.reg_Spaj=a.reg_Spaj)
	            and a.mspo_input_date BETWEEN TO_DATE(#bdate# || '00:00:00','DD/MM/YYYY hh24:mi:ss')and TO_DATE(#edate# || '23:59:59', 'DD/MM/YYYY hh24:mi:ss')
	         group by d.sub_desc,c.sub_id_bas
	         order by d.sub_desc)b
        where 
        	 x.sub_id=b.sub_id_bas(+)
        	 and x.lssa_id=15       
         	group by x.sub_id,x.sub_desc,b.jumlah_hh,c.total
         	order by x.sub_id		
	</select>
	
	
	<select id="elions.bas.selectStatusSpajBas" resultClass="int" parameterClass="string">	
		select
            a.lssa_id_bas
        from
           eka.mst_insured a
        where
           a.reg_spaj=rpad(replace(#spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.bas.selectBlankoMonitoringSpaj" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select * from eka.mst_spaj_ao a where trim(id_dok) = trim(#value#) and lstb_id = 1
		<isEqual property="type" compareValue="update_further">
			and flag_further is not null
		</isEqual>
		<isEqual property="type" compareValue="update_NF_to_further">
			and flag_further is null
		</isEqual>
	</select>
	
	<select id="elions.bas.selectMstSpajAoFurtherOrNonFurther" parameterClass="java.util.HashMap"  resultClass="java.util.HashMap">
		select id_dok, name_customer, msag_id, (case when tgl_kembali_ke_agen is not null then to_char(tgl_kembali_ke_agen,'DD/MM/YYYY') else  null end )tgl_kembali_ke_agen, 
			(case when tgl_terima_dari_agen is not null then to_char(tgl_terima_dari_agen,'DD/MM/YYYY') else  null end )tgl_terima_dari_agen, 
			jenis_further, keterangan_further, email_cc
		from eka.mst_spaj_ao
		where id_dok = #no_blanko#
		<isEqual property="status" compareValue="nf">
		and flag_further is  null
		</isEqual>
		<isEqual property="status" compareValue="f">
		and flag_further is not null
		</isEqual> 
	</select>
	
	<select id="elions.bas.selectReportMonitoringSPAJ" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select
            a.id_dok,to_char( a.create_date,'DD/MM/YYYY') tgl_input, informasi, (case when b.pemegang is not null then b.pemegang else name_customer end)name_customer, (case when b.kode_agen is null then a.msag_id else b.kode_agen end) msag_id, a.jenis_further, to_char(a.tgl_kembali_ke_agen,'DD/MM/YYYY') tgl_kembali_ke_agen, to_char(a.tgl_terima_dari_agen,'DD/MM/YYYY') tgl_terima_dari_agen, to_char(a.tgl_further,'DD/MM/YYYY') tgl_further, keterangan_further, (case when a.flag_further = 1 then 'FURTHER' else  'NON FURTHER' end ) flag_further, c.lus_full_name user_monitoring, b.*,
            (case when b.kode_agen is null then e.mcl_first else b.nm_agen end) nama_agen
        from
            eka.mst_spaj_ao a,
            (select
                a.reg_spaj, a.mspo_policy_no polis,  to_date(d.mste_tgl_terima_admin,'DD/MM/YYYY') mste_tgl_terima_admin,  to_char(d.mste_input_date ,'DD/MM/YYYY') mste_input_date, d.mste_beg_date, a.mspo_no_blanko no_blanko, b.msag_id kode_agen, (case when a.lca_id = '09' then agen2.mcl_first else agen.mcl_first end) nm_agen, c.mst_leader, (select mcl_first from eka.mst_agent x, eka.mst_client_new y where x.msag_id = c.mst_leader and y.mcl_id = x.mcl_id) fdm, eka.utils.pemegang(a.reg_spaj)pemegang, 
                eka.utils.tertanggung(a.reg_spaj)tertanggung, f.lsdbs_name plan, a.lca_id,
                (case when a.lku_id = '01' then e.mspr_tsi else  0 end )up_rupiah,
                (case when a.lku_id = '02' then e.mspr_tsi else  0 end)up_dollar,
                g.lscb_pay_mode cara_bayar, e.mspr_premium premi, 
                (select mu_jlh_premi from eka.mst_ulink where reg_spaj = a.reg_spaj and lt_id = 5 and rownum = 1) topup, 
                (select mu_jlh_premi from eka.mst_ulink where reg_spaj = a.reg_spaj and lt_id = 2 and rownum = 1) topup_single, 
                (select sum(ape_kontes) from eka.mst_production where reg_spaj= a.reg_spaj and mspro_jn_prod = 1) ape,
                (select sum(upp_eva) from eka.mst_production where reg_spaj= a.reg_spaj and mspro_jn_prod = 1) upp_eva,
                (select to_char(mspro_prod_date,'DD/MM/YYYY') mspro_prod_date from eka.mst_production where reg_spaj = a.reg_spaj and msbi_tahun_ke = 1 and msbi_premi_ke = 1 and mspro_prod_ke=1 and mspro_jn_prod = 1 )tgl_prod,
                (select 
                    to_char(max(mp.mspa_pay_date),'DD/MM/YYYY') mspa_pay_date
                from
                    eka.mst_tag_payment tp,
                    eka.mst_payment mp
                where
                    tp.mspa_payment_id = mp.mspa_payment_id
                    and tp.msbi_tahun_ke = 1
                    and tp.msbi_premi_ke = 1
                    and mp.reg_spaj = a.reg_spaj) tgl_bayar, a.reg_spaj no_registrasi, 
                    (select msps_desc from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = d.lssa_id 
                    and msps_date = (select max(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = d.lssa_id)) keterangan,
                    (select msps_date from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = d.lssa_id 
                    and msps_date = (select max(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = d.lssa_id)) tgl_keterangan,
                i.lus_full_name user_input, (case when a.lca_id = '09' then m.nama_cabang else j.lca_nama end)lca_nama, to_char(a.MSPO_INPUT_DATE,'mm/dd/yyyy')Tgl_Input
            from
                eka.mst_policy a,
                eka.mst_agent_prod b,
                eka.mst_agent c,
                eka.mst_client_new agen,
                eka.mst_insured d,
                eka.mst_product_insured e,
                eka.lst_det_bisnis f,
                eka.lst_pay_mode g,
                eka.lst_status_accept h,
                eka.lst_user i,
                eka.lst_cabang j,
                EKA.MST_REFF_BII k,
                eka.lst_cabang_bii l ,
                eka.lst_cabang_bii m ,
                eka.mst_agent c2,
                eka.mst_client_new agen2  
            where
                a.reg_spaj = b.reg_spaj
                and b.msag_id = c.msag_id
                and c.mcl_id = agen.mcl_id
                and a.reg_spaj = d.reg_spaj
                and d.reg_spaj = e.reg_spaj
                and d.mste_insured_no = e.mste_insured_no
                and e.lsbs_id = f.lsbs_id
                and e.lsdbs_number = f.lsdbs_number
                and a.lscb_id = g.lscb_id
                and d.lssa_id = h.lssa_id
                and a.lus_id = i.lus_id
                and d.mste_insured_no = 1
                and e.lsbs_id <![CDATA[<]]> 300
                and b.lsle_id = 4
                and c.lca_id = j.lca_id
                and a.reg_spaj = k.reg_spaj (+)
                and K.LCB_REFF = L.LCB_NO (+)
                and L.WIL_NO = M.LCB_NO (+)
                and a.MSPO_AO = C2.MSAG_ID(+)
                and C2.mcl_id = agen2.mcl_id(+)
                )b,
            eka.lst_user c, eka.mst_agent d, eka.mst_client_new e
        where
            a.id_dok = b.no_blanko(+)
            and a.lus_id = c.lus_id
            and a.flag_active = 1
            and a.lstb_id = 1
            and a.jenis = 1
            and a.msag_id = d.msag_id(+)
            and d.mcl_id = e.mcl_id(+)
            <isEqual property="jn_report" compareValue="0"> 
            	and a.flag_further is null
            	and a.create_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
           	</isEqual>
            <isEqual property="jn_report" compareValue="1">  
            	and (a.create_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
            	or b.mste_tgl_terima_admin between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1)          
            </isEqual>
            <isEqual property="jn_report" compareValue="2"> 
            and a.flag_further is null 
           	and b.reg_spaj is null          
            </isEqual>
            and id_dok not like '%XX%'
    		<isEqual property="admin" compareValue="0">
				<isNotNull property="lus_id">
			    	and a.lus_id = #lus_id#
			    </isNotNull>		    
		    </isEqual>
		    <isEqual property="admin" compareValue="2">
			    	and (d.lca_id = '09' or b.lca_id = '09' or c.lde_id = '29')  	    
		    </isEqual>	    
		    
		    <isEqual property="jn_report" compareValue="3"> 
            	and a.flag_further is null 
            <isEqual property="searchList" compareValue="noBlankoSL"> 
            	and a.id_dok like ('%' ||#searchText#|| '%') 
            </isEqual>
             <isEqual property="searchList" compareValue="pemegangPolSL"> 
            and name_customer like ('%' || upper(#searchText#) || '%')
             </isEqual>	
             
            </isEqual>
		    order by a.tgl_terima_dari_agen, b.mste_tgl_terima_admin
		    
	</select>
	
	<select id="elions.bas.selectReportMonitoringSPAJFurther" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
     	select distinct a.*,  mcl_first, lca_nama nama_cabang, to_char(f.mste_input_date, 'dd/mm/yyyy') input_date, 
		to_char(f.mste_tgl_terima_admin, 'dd/mm/yyyy') tgl_terima_admin, b.lca_id, g.lsrg_nama, h.lus_full_name user_input
		from        
		    (select id_dok, msag_id, name_customer, tgl_further,to_char(tgl_further, 'dd/mm/yyyy') tanggal_further, jenis_further, to_char(tgl_kembali_ke_agen, 'dd/mm/yyyy') tgl_kembali_ke_agen, 
		    to_char(tgl_terima_dari_agen, 'dd/mm/yyyy') tgl_terima_dari_agen, keterangan_further, lus_id
		    from eka.mst_spaj_ao a 
		    where 
		        id_dok not like '%XX%'
		        and flag_further = 1) a, eka.mst_agent b, 
		            eka.lst_cabang c, eka.mst_client_new d, 
		            (select mspo_no_blanko, mste_input_date,  mste_tgl_terima_admin from eka.mst_policy d, eka.mst_insured e
		              where d.reg_spaj = e.reg_spaj
		            ) f, eka.lst_region g, eka.lst_user h
		where 
		    a.msag_id = b.msag_id(+)
		    and b.lca_id = g.lca_id(+)
		    and b.lwk_id = g.lwk_id(+)
		    and b.lsrg_id = g.lsrg_id(+)
		    and a.id_dok = f.mspo_no_blanko(+)
		    and b.lca_id = c.lca_id(+)
		    and b.mcl_id = d.mcl_id(+)
		    and a.lus_id = h.lus_id
          	<isEqual property="admin" compareValue="0">
				<isNotNull property="lus_id">
			    	and a.lus_id = #lus_id#
			    </isNotNull>		    
		    </isEqual>
            <isEqual property="admin" compareValue="2">
					and (b.lca_id = '09' or h.lde_id = '29')		    
		    </isEqual>
		    <isEqual property="jn_report" compareValue="0">
		    	and a.tgl_further between to_date(#bdate#, 'dd/MM/yyyy') and to_date(#edate#, 'dd/MM/yyyy')+1
	     	</isEqual>
	     	order by a.tgl_further     
	</select>
	
	<select id="elions.bas.reportFollowupBillingPLKategori" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
		    lsfu_desc, count(reg_spaj)jml_polis, sum(premi)jml_premi
		from
		    (select distinct  
		        lr.lsrg_id, lr.lsrg_nama region, mb.msbi_beg_date, mb.msbi_end_date, mb.msbi_due_date, mp.mspo_policy_no_format, mp.reg_spaj, mb.msbi_tahun_ke,
		        mb.msbi_premi_ke, 'JATUH TEMPO' ket, mb.msbi_flag_topup, mp.lca_id, lf.lsfu_id, lf.lsfu_desc, mf.msfu_create_date,
		        (select sum(msdb_premium) from eka.mst_det_billing where reg_spaj = mb.reg_spaj and msbi_tahun_ke = mb.msbi_tahun_ke and msbi_premi_ke = mb.msbi_premi_ke)premi
		    from               
		        eka.mst_billing mb, eka.mst_det_billing mdb, eka.mst_policy mp, eka.mst_billing_hcr mbh, eka.mst_insured mi,
		        eka.lst_region lr, eka.mst_followup mf, eka.lst_followup lf
		    where              
		        mb.reg_spaj = mbh.reg_spaj(+)
		        and mb.msbi_tahun_ke = mbh.msbih_tahun_ke(+)
		        and mb.msbi_premi_ke = mbh.msbih_premi_ke(+)
		        and mdb.reg_spaj = mb.reg_spaj
		        and mdb.msbi_tahun_ke = mb.msbi_tahun_ke
		        and mdb.msbi_premi_ke = mb.msbi_premi_ke
		        and mp.reg_spaj = mb.reg_spaj
		        and mp.reg_spaj = mi.reg_spaj
		        and mb.reg_spaj = mf.reg_spaj
		        and mb.msbi_tahun_ke = mf.msbi_tahun_ke
		        and mb.msbi_premi_ke = mf.msbi_premi_ke
		        and mf.lsfu_id = lf.lsfu_id
		        and mp.lscb_id not in (0, 6)
		        and mb.lspd_id in (11, 12)
        		and mp.lssp_id in (1, 14)
		        and mb.msbi_premi_ke > 1
		        and mb.lca_id = lr.lca_id
		        and mb.lwk_id = lr.lwk_id
		        and mb.lsrg_id = lr.lsrg_id
		        and mb.msbi_flag_topup is null
		        and mb.lca_id not in ('09','58','40')
		        and mb.msbi_beg_date between to_date(#bdate#, 'dd/mm/yyyy') and to_date(#edate#, 'dd/mm/yyyy')
		        and mf.msfu_urut = (select max(msfu_urut) from eka.mst_followup where reg_spaj = mb.reg_spaj and msbi_tahun_ke = mb.msbi_tahun_ke and msbi_premi_ke = mb.msbi_premi_ke))
		<isNotEqual property="lca" compareValue="ALL">
	        where lca_id = #lca#
	    </isNotEqual>
		group by lsfu_desc
	</select>
	
	<select id="elions.bas.selectFollowupKategori" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
		    c.lsfu_desc kategori, 
		    count(a.reg_spaj)jml_polis,
		    sum(case when f.lku_id = '01' then e.mspr_premium else 0 end)premi_rp,
		    sum(case when f.lku_id = '02' then e.mspr_premium else 0 end)premi_us,
		    (case when c.lsfu_id = 17 or c.lsfu_id = 7 or c.lsfu_id = 26 or c.lsfu_id = 9 or c.lsfu_id = 10 
		                or c.lsfu_id = 6 or c.lsfu_id = 2 then 1 
		         when c.lsfu_id = 11 or c.lsfu_id = 28 or c.lsfu_id = 29 or c.lsfu_id = 1 or c.lsfu_id = 8 then 2
		         when c.lsfu_id = 19 or c.lsfu_id = 15 or c.lsfu_id = 21 or c.lsfu_id = 4 or c.lsfu_id = 16
		                or c.lsfu_id = 3 or c.lsfu_id = 30 or c.lsfu_id = 27 or c.lsfu_id = 25 then 3 else 4 end)index_jenis_kat,  
		    (case when c.lsfu_id = 17 or c.lsfu_id = 7 or c.lsfu_id = 26 or c.lsfu_id = 9 or c.lsfu_id = 10 
		                or c.lsfu_id = 6 or c.lsfu_id = 2 then 'Still Outstanding Premium of Aging' 
		         when c.lsfu_id = 11 or c.lsfu_id = 28 or c.lsfu_id = 29 or c.lsfu_id = 1 or c.lsfu_id = 8 then 'Billing Success'
		         when c.lsfu_id = 19 or c.lsfu_id = 15 or c.lsfu_id = 21 or c.lsfu_id = 4 or c.lsfu_id = 16
		                or c.lsfu_id = 3 or c.lsfu_id = 30 or c.lsfu_id = 27 or c.lsfu_id = 25 then 'Dont Pay the Premium' else 'Others' end)jenis_kat  
		from
			<isEqual property="jenis" compareValue="0">
			    (SELECT   
			        mb.msbi_beg_date, mb.msbi_end_date, mb.msbi_due_date, mp.mspo_policy_no_format, mp.reg_spaj,
			        mb.msbi_tahun_ke, mb.msbi_premi_ke, mb.msbi_flag_topup, mb.lca_id cabang
			    FROM   
			        eka.mst_billing mb,
			        eka.mst_det_billing mdb,
			        eka.mst_policy mp,
			        eka.mst_billing_hcr mbh,
			        eka.mst_insured mi,
			        eka.lst_region lr
			    WHERE       
			        mb.reg_spaj = mbh.reg_spaj(+)
			        AND mb.msbi_tahun_ke = mbh.msbih_tahun_ke(+)
			        AND mb.msbi_premi_ke = mbh.msbih_premi_ke(+)
			        AND mdb.reg_spaj = mb.reg_spaj
			        AND mdb.msbi_tahun_ke = mb.msbi_tahun_ke
			        AND mdb.msbi_premi_ke = mb.msbi_premi_ke
			        AND mp.reg_spaj = mb.reg_spaj
			        AND mp.reg_spaj = mi.reg_spaj
			        AND mp.lscb_id NOT IN (0, 6)
			        AND mb.lspd_id IN (11, 12, 56)
			        AND mp.lssp_id IN (1, 14)
			        AND mb.msbi_premi_ke > 1
			        AND mb.lca_id = lr.lca_id
			        AND mb.lwk_id = lr.lwk_id
			        AND mb.lsrg_id = lr.lsrg_id
			    UNION
			    SELECT   
			        mb.msbi_beg_date, mb.msbi_end_date, mb.msbi_due_date, mp.mspo_policy_no_format, mp.reg_spaj,
			        mb.msbi_tahun_ke, mb.msbi_premi_ke, mb.msbi_flag_topup, mb.lca_id cabang
			    FROM   
			        eka.mst_billing mb,
			        eka.mst_policy mp,
			        eka.mst_insured mi,
			        eka.mst_account_recur mar,
			        eka.lst_jn_hasil_recur ljhr,
			        (SELECT   
			            subs_number spaj, ket3 gagal_ke, ket2 th_ke, ket1 premi_ke,
			            tgl_tagihan, ljhr_id, no_rekening, total_invoice, kode_plan, tgl_terima
			        FROM   eka.mst_eka_recur
			        WHERE   tgl_terima = (SELECT   MAX (tgl_terima) FROM   eka.mst_eka_recur WHERE   vat = 0) AND vat = 0) gagal,
			        eka.lst_region lr
			    WHERE       
			        mp.reg_spaj = mb.reg_spaj
			        AND mp.reg_spaj = mi.reg_spaj
			        AND mp.reg_spaj = mar.reg_spaj
			        AND mb.msbi_premi_ke > 1
			        AND gagal.spaj = mb.reg_spaj
			        AND gagal.premi_ke = mb.msbi_premi_ke
			        AND gagal.th_ke = mb.msbi_tahun_ke
			        AND gagal.ljhr_id = ljhr.ljhr_id
			        AND mb.lca_id = lr.lca_id
			        AND mb.lwk_id = lr.lwk_id
			        AND mb.lsrg_id = lr.lsrg_id)a,
		    </isEqual>
			<isEqual property="jenis" compareValue="1">
			    (select        
			        mb.msbi_beg_date, mb.msbi_end_date, mb.msbi_due_date, mp.mspo_policy_no_format, mp.reg_spaj, mb.msbi_tahun_ke,
			        mb.msbi_premi_ke, msbi_flag_topup, mb.lca_id cabang
			    from                
			        eka.mst_billing mb, eka.mst_det_billing mdb, eka.
			        mst_policy mp, eka.mst_billing_hcr mbh, eka.mst_insured mi,
			        eka.lst_region lr
			    where               
			        mb.reg_spaj = mbh.reg_spaj(+)
			        and mb.msbi_tahun_ke = mbh.msbih_tahun_ke(+)
			        and mb.msbi_premi_ke = mbh.msbih_premi_ke(+)
			        and mdb.reg_spaj = mb.reg_spaj
			        and mdb.msbi_tahun_ke = mb.msbi_tahun_ke
			        and mdb.msbi_premi_ke = mb.msbi_premi_ke
			        and mp.reg_spaj = mb.reg_spaj
			        and mp.reg_spaj = mi.reg_spaj
			        and mp.lscb_id not in (0, 6)
			        and mb.lspd_id in (11, 12, 56)
			        and mp.lssp_id in (1, 14)
			        and mb.msbi_premi_ke > 1
			        and mb.lca_id = lr.lca_id
			        and mb.lwk_id = lr.lwk_id
			        and mb.lsrg_id = lr.lsrg_id)a,
		    </isEqual>
		    <isEqual property="jenis" compareValue="2">
			    (select                
			        mb.msbi_beg_date, mb.msbi_end_date, mb.msbi_due_date, mp.mspo_policy_no_format, mp.reg_spaj, 
			        mb.msbi_tahun_ke, mb.msbi_premi_ke, msbi_flag_topup, mb.lca_id cabang
			    from                
			        eka.mst_billing mb, eka.mst_policy mp, eka.mst_insured mi, 
			        eka.mst_account_recur mar, eka.lst_jn_hasil_recur ljhr,
			        (select 
			            subs_number spaj, ket3 gagal_ke, ket2 th_ke, ket1 premi_ke,
			            tgl_tagihan, ljhr_id, no_rekening, total_invoice, kode_plan, tgl_terima
			        from eka.mst_eka_recur
			        where tgl_terima = (select max (tgl_terima) from eka.mst_eka_recur where vat = 0) and vat = 0) gagal,                
			        eka.lst_region lr
			      where               
			        mp.reg_spaj = mb.reg_spaj
			        and mp.reg_spaj = mi.reg_spaj
			        and mp.reg_spaj = mar.reg_spaj
			        and mb.msbi_premi_ke > 1
			        and gagal.spaj = mb.reg_spaj
			        and gagal.premi_ke = mb.msbi_premi_ke
			        and gagal.th_ke = mb.msbi_tahun_ke
			        and gagal.ljhr_id = ljhr.ljhr_id
			        and mb.lca_id = lr.lca_id
			        and mb.lwk_id = lr.lwk_id
			        and mb.lsrg_id = lr.lsrg_id)a,
		    </isEqual>
		    eka.mst_followup b,
		    eka.lst_followup c,
		    eka.mst_insured d,
		    eka.mst_product_insured e,
		    eka.mst_policy f
		where                
		    a.reg_spaj = b.reg_spaj
		    and a.msbi_tahun_ke = b.msbi_tahun_ke
		    and a.msbi_premi_ke = b.msbi_premi_ke                
		    and b.lsfu_id = c.lsfu_id
		    and b.reg_spaj = d.reg_spaj
		    and d.reg_spaj = e.reg_spaj
		    and d.mste_insured_no = e.mste_insured_no
		    and b.reg_spaj = f.reg_spaj
		    and d.mste_insured_no = 1
		    and e.lsbs_id <![CDATA[<]]> 300
		    and a.msbi_flag_topup is null
		    and a.cabang not in ('09','58','40')
		    and b.msfu_urut = (select max(msfu_urut) from eka.mst_followup where reg_spaj = b.reg_spaj and msbi_tahun_ke = b.msbi_tahun_ke and msbi_premi_ke = b.msbi_premi_ke)
		    <isEqual property="jn_tgl" compareValue="1">
		    	and b.msfu_create_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
		    </isEqual>
		    <isEqual property="jn_tgl" compareValue="0">
		    	and a.msbi_beg_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')
			</isEqual>
		group by
		    c.lsfu_desc, c.lsfu_id
		order by 5, 1
	</select>
	
	<select id="elions.bas.selectreportFollowupTempo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT DISTINCT       
		    d.lca_nama cabang, e.lsrg_nama region, tabel.reg_spaj, tabel.mspo_policy_no_format polis, 
		    to_char (tabel.msbi_beg_date, 'dd/mm/yyyy') beg_date, to_char (tabel.msbi_end_date, 'dd/mm/yyyy') end_date, 
		    to_char (tabel.msbi_due_date, 'dd/mm/yyyy') due_date, eka.utils.pemegang (tabel.reg_spaj) pemegang,       
		    eka.utils.tertanggung (tabel.reg_spaj) tertanggung, f.lsdbs_name produk, 
		    tabel.msbi_tahun_ke tahun_ke, tabel.msbi_premi_ke premi_ke, tabel.ket,
		    (case when (select reg_spaj from eka.mst_followup 
		                    where reg_spaj = tabel.reg_spaj 
		                          and msbi_tahun_ke = tabel.msbi_tahun_ke
		                          and msbi_premi_ke = tabel.msbi_premi_ke and rownum = 1) is not null then 'Sudah' else 'Belum' end)follow_up
							FROM 
		    (select                
		        mb.msbi_beg_date, mb.msbi_end_date, mb.msbi_due_date, mp.mspo_policy_no_format, mp.reg_spaj, 
		        mb.msbi_tahun_ke, mb.msbi_premi_ke, 'JATUH TEMPO' ket,
		        mb.msbi_flag_topup, mb.lca_id, mb.lwk_id, mb.lsrg_id
		    from                
		        eka.mst_billing mb, eka.mst_det_billing mdb, eka.mst_policy mp, eka.mst_billing_hcr mbh, 
		        eka.mst_insured mi
		    where               
		        mb.reg_spaj = mbh.reg_spaj(+)
		        and mb.msbi_tahun_ke = mbh.msbih_tahun_ke(+)
		        and mb.msbi_premi_ke = mbh.msbih_premi_ke(+)
		        and mdb.reg_spaj = mb.reg_spaj
		        and mdb.msbi_tahun_ke = mb.msbi_tahun_ke
		        and mdb.msbi_premi_ke = mb.msbi_premi_ke
		        and mp.reg_spaj = mb.reg_spaj
		        and mp.reg_spaj = mi.reg_spaj
		        and mp.lscb_id not in (0, 6)
		        and mb.lspd_id in (11, 12, 56)
		        and mp.lssp_id in (1, 14)
		        and mb.msbi_premi_ke <![CDATA[>]]> 1) tabel,
		    eka.mst_insured b,
		    eka.mst_product_insured c,
		    eka.lst_cabang d,
		    eka.lst_region e,
		    eka.lst_det_bisnis f
		WHERE   
		    tabel.reg_spaj = b.reg_spaj
		    and b.reg_spaj = c.reg_spaj
		    and b.mste_insured_no = c.mste_insured_no
		    and tabel.lca_id = d.lca_id
		    and tabel.lca_id = e.lca_id
		    and tabel.lwk_id = e.lwk_id
		    and tabel.lsrg_id = e.lsrg_id
		    and c.lsbs_id = f.lsbs_id
		    and c.lsdbs_number = f.lsdbs_number
		    and b.mste_insured_no = 1                
		    and c.lsbs_id <![CDATA[<]]> 300    
		    and tabel.msbi_beg_date between to_date(#bdate#, 'dd/mm/yyyy') and to_date(#edate#, 'dd/mm/yyyy')
		    and tabel.msbi_flag_topup is null
		    and tabel.lca_id not in ('09', '58', '65')        
		GROUP BY 
		    d.lca_nama, e.lsrg_nama, tabel.msbi_beg_date, tabel.msbi_end_date, tabel.msbi_due_date, tabel.mspo_policy_no_format, tabel.reg_spaj,
		    f.lsdbs_name, tabel.msbi_tahun_ke, tabel.msbi_premi_ke, tabel.ket, tabel.msbi_flag_topup
		ORDER BY 
		    1,2,3,4		
	</select>
	
	<select id="elions.bas.selectreportSimasSpt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select a.reg_spaj, a.mspo_policy_no, e.mcl_first nama_pp, f.mcl_first nama_tt, g.lsdbs_name nama_produk,  
    	h.mrc_nama nama_rek, h.mrc_no_ac no_rek_pp, d.mspr_beg_date beg_date, 
    	c.mpr_jangka_invest mgi, 
    	c.mpr_deposit premi,
    	to_char(min(i.tgl_input),'MM/dd/yyyy hh:mm:ss') tgl_scan
	from eka.mst_policy a, 
    	eka.mst_insured b, 
	    eka.mst_powersave_ro c, 
	    eka.mst_product_insured d, 
	    eka.mst_client_new e, 
	    eka.mst_client_new f, 
	    eka.lst_det_bisnis g,
	    eka.mst_rek_client h,
	    eka.mst_scan i
	where a.reg_spaj = b.reg_spaj 
		and a.reg_spaj = c.reg_spaj 
		and a.reg_spaj = d.reg_spaj 
		and a.reg_spaj = h.reg_spaj
		and a.reg_spaj = i.no_indek
		and a.mspo_policy_holder = e.mcl_id 
		and b.mste_insured = f.mcl_id 
		and d.lsbs_id = g.lsbs_id 
		and d.lsdbs_number = g.lsdbs_number 
		and a.lspd_id <![CDATA[<>]]> 95 
		and (d.lsbs_id ||'~'||d.lsdbs_number) in ('142~2','142~9','175~2') 
		and c.mps_kode = 5 
		and c.mpr_mature_date between TO_DATE(#bdate#, 'dd/mm/yyyy') and TO_DATE(#edate#, 'dd/mm/yyyy') 
		and b.lssa_id = 10
		and (exists(
            select 1 
            from eka.mst_scan z where z.no_indek = a.reg_spaj 
	            and exists(select 1 from eka.mst_scan where no_indek = z.no_indek and upper(tipe_file) in ('SPAJ'))
	            and exists(select 1 from eka.mst_scan where no_indek = z.no_indek and upper(tipe_file) in ('BSB'))
	            and exists(select 1 from eka.mst_scan where no_indek = z.no_indek and upper(tipe_file) in ('KTP','AKTLHR','SIM','PASPOR'))
	            and exists(select 1 from eka.mst_scan where no_indek = z.no_indek and upper(tipe_file) in ('SPH'))
	            and exists(select 1 from eka.mst_scan where no_indek = z.no_indek and upper(tipe_file) in ('SPT'))
        )
    )
	group by a.reg_spaj, a.mspo_policy_no, e.mcl_first, f.mcl_first, g.lsdbs_name,  
    	h.mrc_nama, h.mrc_no_ac, d.mspr_beg_date, c.mpr_jangka_invest, c.mpr_deposit
	</select>
	
	<select id="elions.bas.selectreportSimasNonSpt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select a.reg_spaj, a.mspo_policy_no, e.mcl_first nama_pp, f.mcl_first nama_tt, g.lsdbs_name nama_produk,  
	    h.mrc_nama nama_rek, h.mrc_no_ac no_rek_pp, d.mspr_beg_date beg_date, 
	    c.mpr_jangka_invest mgi, 
	    c.mpr_deposit premi,
	   	to_char(min(i.tgl_input),'MM/dd/yyyy hh:mm:ss') tgl_scan
	from eka.mst_policy a, 
	    eka.mst_insured b, 
	    eka.mst_powersave_ro c, 
	    eka.mst_product_insured d, 
	    eka.mst_client_new e, 
	    eka.mst_client_new f, 
	    eka.lst_det_bisnis g,
	    eka.mst_rek_client h,
	    eka.mst_scan i
	where a.reg_spaj = b.reg_spaj 
	and a.reg_spaj = c.reg_spaj 
	and a.reg_spaj = d.reg_spaj 
	and a.reg_spaj = h.reg_spaj
	and a.reg_spaj = i.no_indek
	and a.mspo_policy_holder = e.mcl_id 
	and b.mste_insured = f.mcl_id 
	and d.lsbs_id = g.lsbs_id 
	and d.lsdbs_number = g.lsdbs_number 
	and a.lspd_id <![CDATA[<>]]> 95 
	and (d.lsbs_id ||'~'||d.lsdbs_number) in ('142~2','142~9','175~2') 
	and c.mps_kode = 5 
	and c.mpr_mature_date between '1 sep 2014' and '30 sep 2014' 
	and b.lssa_id = 10
	and (exists(
            select 1 
            from eka.mst_scan z where z.no_indek = a.reg_spaj 
	            and exists(select 1 from eka.mst_scan where no_indek = z.no_indek and upper(tipe_file) in ('SPAJ'))
	            and exists(select 1 from eka.mst_scan where no_indek = z.no_indek and upper(tipe_file) in ('BSB'))
	            and exists(select 1 from eka.mst_scan where no_indek = z.no_indek and upper(tipe_file) in ('KTP','AKTLHR','SIM','PASPOR'))
	            and exists(select 1 from eka.mst_scan where no_indek = z.no_indek and upper(tipe_file) in ('SPH'))
        )
    )
	group by a.reg_spaj, a.mspo_policy_no, e.mcl_first, f.mcl_first, g.lsdbs_name,  
    	h.mrc_nama, h.mrc_no_ac, d.mspr_beg_date, c.mpr_jangka_invest, c.mpr_deposit
	</select>
	
	
	<select id="elions.bas.selectKomisiPendingAgent" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
		    mspo_policy_no, eka.utils.pemegang(reg_spaj)pemegang, agent_penutup, nama_agent, 
		    lca_nama, lwk_nama, lsrg_nama, lar_email, jumlah_komisi, sts_aktif,
		    sts_sertifikasi, bank, stat_bill, msbi_tahun_ke, msbi_premi_ke,
		    (case when (select count(1 ) from eka.mst_position_spaj where eka.mst_position_spaj.lssa_id = 10 and  eka.mst_position_spaj.reg_spaj = reg_spaj) > 0 then  'Ada Akseptasi Khusus'   else '' end)akseptasi_khusus,
		    reg_spaj, doc,msco_date
		from
		    (select 
		        rownum, b.mspo_policy_no, a.msag_id agent_penutup, v_agent.mcl_first nama_agent, v_agent.lca_nama,v_agent.lwk_nama, 
		        v_agent.lsrg_nama, v_agent.lar_email, a.msco_comm jumlah_komisi,a.msbi_tahun_ke, a.msbi_premi_ke,
		        (case when v_agent.msag_active = 0 then 'Tidak Aktif' Else '-'  end)sts_aktif,  
		        (case when v_agent.msag_sertifikat not in (2,6,7,8)  then 'Non Lisensi' else (case when v_agent.msag_berlaku <![CDATA[<]]> trunc(sysdate) then 'Lisensi ( expired )' Else '-'  end) end)sts_sertifikasi,    
		        c.lspd_id,
		        case when  v_agent.lbn_id  =0 then 'Belum Memiliki Tabungan ' end || case when ( v_agent.lsbp_id <![CDATA[<>]]> '156' and v_agent.lsbp_id <![CDATA[<>]]> '0')  then 'Belum Memiliki Tabungan BSM' Else '-'  end bank,
		        case when c.lspd_id = '9' then 'Proses Checking TTP' when c.lspd_id = '7' then 'Input Tanda Terima' Else '-'  end stat_bill ,
		        a.reg_spaj, c.lspd_id doc, a.msco_date 
		    from 
		        eka.mst_commission a, 
		        eka.mst_policy b,
		        eka.mst_billing c,        
		        (select 
		            a.msag_id, a.lsle_id, c.lca_id, d.lwk_id, e.lsrg_id, c.lca_nama, d.lwk_nama, e.lsrg_nama, a.msag_sertifikat, 
		            a.msag_sertifikat_no, b.mcl_first, f.lar_email,a.msag_active, a.msag_berlaku, a.lbn_id, g.lsbp_id               
		         from
		            eka.mst_agent a, 
		            eka.mst_client b,
		            eka.lst_cabang c, 
		            eka.lst_wakil d,
		            eka.lst_region e,
		            eka.lst_addr_region f, 
		            eka.lst_bank g                
		        where 
		            a.mcl_id = b.mcl_id 
		            and a.lca_id = c.lca_id 
		            and a.lwk_id = d.lwk_id 
		            and a.lsrg_id = e.lsrg_id 
		            and c.lca_id = d.lca_id 
		            and c.lca_id = e.lca_id 
		            and f.lar_id (+) = e.lar_id 
		            and d.lwk_id = e.lwk_id 
		            and g.lbn_id = nvl(a.lbn_id,0)) v_agent
		    where 
		        a.msco_pay_date is null
		        and a.reg_spaj = b.reg_spaj
		        and a.msag_id = v_agent.msag_id
		        and a.msco_date <![CDATA[<]]> add_months(sysdate,-1)
		        and a.reg_spaj = c.reg_spaj
		        and a.msbi_premi_ke = c.msbi_premi_ke
		        and a.msbi_tahun_ke = c.msbi_tahun_ke
		        and c.lspd_id in (7,8,9)  
		        <isNotEmpty property="polis">
		        	and b.mspo_policy_no = #polis#
		        </isNotEmpty>	
		        <isNotEmpty property="msag_id">	        
		        	and a.msag_id  = #msag_id#
	        	</isNotEmpty> 
		        <!-- and a.lev_comm = 4 -->
		        )
	</select>
	<select id="elions.bas.selectReportError" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select to_char(b.tanggal,'DD-MM-YYYY') tgl_proses, a.reg_spaj, upper(b.jenis) sumber_kesalahan, upper(b.keterangan) kriteria_revisi,
         (select upper(d.lus_full_name)
          from eka.mst_position_spaj c, eka.lst_user d
          where c.lus_id = d.lus_id
              and c.lspd_id = 1
              and c.reg_spaj = a.reg_spaj
              and c.msps_date = (select min(msps_date) from eka.mst_position_spaj where lspd_id = 1 and reg_spaj = a.reg_spaj)) user_bas,
         (select upper(d.lus_full_name)
          from eka.mst_position_spaj c, eka.lst_user d
          where c.lus_id = d.lus_id
              and c.lspd_id = 2
              and c.reg_spaj = a.reg_spaj
              and c.msps_date = (select min(msps_date) from eka.mst_position_spaj where lspd_id = 2 and reg_spaj = a.reg_spaj
              and d.lus_id in (495, 3495, 2071, 4283, 1562, 2087, 693, 651) and msps_desc = 'EDIT SPAJ')
         ) user_speedy,
         (select upper(d.lus_full_name)
          from eka.mst_position_spaj c, eka.lst_user d
          where c.lus_id = d.lus_id
              and c.lspd_id = 2
              and c.reg_spaj = a.reg_spaj
              and c.msps_date = (select min(msps_date) from eka.mst_position_spaj where lspd_id = 2 and reg_spaj = a.reg_spaj
                                and lus_id not in (495, 3495, 2071, 4283, 1562, 2087, 693, 651) and msps_desc = 'EDIT SPAJ')
         ) user_uw
		from eka.mst_policy a, eka.lst_ulangan b
		where a.reg_spaj = b.reg_spaj
		    and b.tanggal between TO_DATE(#bdate#, 'dd/mm/yyyy') and TO_DATE(#edate#, 'dd/mm/yyyy')+1
		    and b.jenis in ('Kesalahan Input Bas', upper('Kesalahan Input Bas'), 'Kesalahan Speedy', upper('Kesalahan Speedy'), 'Kesalahan UW', upper('Kesalahan UW'))
		order by tgl_proses desc, a.reg_spaj, b.jenis, b.keterangan
	</select>
	
	<select id="elions.bas.selectDataSmilePrioritas" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<isEqual property="jn_report" compareValue="0">
			select 
				a.mspo_nasabah_dcif no_id, a.mspo_no_blanko no_blanko,
				 a.reg_spaj as spaj, a.mspo_policy_no_format no_polis,
				d.mcl_first nama_pemegang, e.lscb_pay_mode cara_bayar,
				to_char(g.mste_beg_date,'dd/MM/yyyy') begdate,
				to_char(b.mspro_prod_date,'dd/MM/yyyy') prod_date,
				to_char(f.msbi_beg_date,'dd/MM/yyyy') bill_date, 
				c.msdpr_premium premi      
			from 
				eka.mst_policy a, 
				eka.mst_production b, 
				eka.mst_det_production c, 
				eka.mst_client d, 
				eka.lst_pay_mode e, 
				eka.mst_billing f, 
				eka.mst_insured g
			where 
			    a.reg_spaj = b.reg_spaj
				and a.reg_spaj = g.reg_spaj
				and a.lscb_id  = e.lscb_id
				and b.lstb_id = c.lstb_id
				and b.reg_spaj = c.reg_spaj
				and b.mspro_prod_ke = c.mspro_prod_ke
				and b.mspro_prod_date = c.mspro_prod_date
				and a.mspo_policy_holder = d.mcl_id
				and b.reg_spaj = f.reg_spaj
				and b.msbi_tahun_ke = f.msbi_tahun_ke
				and b.msbi_premi_ke = f.msbi_premi_ke
				<isEqual property="flag" compareValue="1">  
					and b.mspro_prod_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')
				</isEqual>
				<isEqual property="flag" compareValue="2">
					and b.mspro_prod_date between sysdate-7 and sysdate
				</isEqual>	
				and a.lstb_Id = 1
				and c.lsbs_id = 153
				and b.lca_id = '37'
				and b.lwk_id = 'M1'
				and a.lspd_id <![CDATA[<>]]> 95
				and B.MSPRO_PROD_KE=1		
		</isEqual>
		<isEqual property="jn_report" compareValue="1">
			select
			    A.MSPO_NASABAH_DCIF as no_id,
			    a.mspo_no_blanko as no_blanko,
			    a.reg_spaj as spaj,
			    a.mspo_policy_no_format as no_polis,
			    f.mcl_first nama_pemegang,			   
			    J.LSCB_PAY_MODE as cara_bayar, 
			    G.MSPR_PREMIUM as premi, 
			    C.LSSP_STATUS as status_polis, 
			    D.STATUS_ACCEPT,I.LSPD_POSITION as position,
			    to_char(a.mspo_input_date ,'dd/MM/yyyy')tgl_input
			from
			    eka.mst_policy a,
			    eka.mst_insured b,
			    eka.lst_policy_status c,
			    EKA.LST_STATUS_ACCEPT d,
			    eka.lst_region e,
			    eka.mst_client_new f,
			    eka.mst_product_insured g,
			    eka.lst_det_bisnis h,
			    EKA.LST_DOCUMENT_POSITION i,
			    eka.lst_pay_mode j
			where
			    a.reg_Spaj=b.reg_Spaj
			    and a.reg_Spaj=g.reg_Spaj
			    and a.lca_id=e.lca_id 
			    and a.lwk_id=e.lwk_id
			    and a.lsrg_id=e.lsrg_id
			    and a.lscb_id=j.lscb_id 
			    and a.mspo_policy_holder=f.mcl_id   
			    and a.lssp_id=c.lssp_id
			    and a.lspd_id=I.LSPD_ID
			    and b.lssa_id=D.LSSA_ID
			    and g.lsbs_id=h.lsbs_id
			    and g.lsdbs_number=H.LSDBS_NUMBER
			    and A.LSTb_ID=1
			    and a.lca_id='37'
			    and A.LWK_ID='M1'
			    and g.lsbs_id=153
			    and a.lspd_id<![CDATA[<>]]> 95
			    <isEqual property="flag" compareValue="1">  
			    	and a.mspo_input_Date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')
			    </isEqual>
			     <isEqual property="flag" compareValue="2">  
			    	and a.mspo_input_Date between between sysdate-7 and sysdate
			    </isEqual>		
		</isEqual>
	</select>
	<select id="elions.bas.selectMstAgent" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select * from eka.mst_agent
		 <isEqual property="flag" compareValue="1">
		 	where msag_id = #msag_id#
		 	and msag_active = 1
		 </isEqual>
		 <isEqual property="flag" compareValue="2"> 
		 a, eka.mst_spaj_ao b 
		 	where a.msag_id = b.msag_id
		 	and msag_active = 1
		 	and id_dok = #no_blanko#
		 </isEqual>
	</select>
	
	<select id="elions.bas.selectLstDetBisnisPAS" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select lsbs_id, lsdbs_number, lsdbs_name from eka.lst_det_bisnis
		where lsbs_id = '73'
		and lsdbs_number in ('13','14')
		union
		select lsbs_id, lsdbs_number, lsdbs_name from eka.lst_det_bisnis
		where lsbs_id = '187'
		and lsdbs_number in ('1','2','3','4')
	</select>
	
	<select id="elions.bas.selectJalurDistByMsagId" parameterClass="string" resultClass="java.util.HashMap">
		select
		    c.grup_report, a.msag_id, d.mcl_first
		from
		    eka.mst_agent a,
		    eka.lst_cabang b,
		    eka.lst_jalur_dist c,
		    eka.mst_client_new d
		where
		    a.lca_id = b.lca_id
		    and b.jalurdis = c.id_dist
		    and a.mcl_id = d.mcl_id
		    and a.msag_id = #value#
	</select>
	
	<select id="elions.bas.selectAgingFollowup" parameterClass="java.util.HashMap" resultClass="int">
		select count(mspo_policy_no) 
		from eka.lst_aging_followup_temp 
		where 
			mspo_policy_no = #polis#
			and beg_date = to_date(#beg_date#,'dd/MM/yyyy')
			and end_date = to_date(#end_date#,'dd/MM/yyyy')
			and create_date is not null
	</select>
	
	<select id="elions.bas.selectReportAgingFollowupKategori" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select kategori, sum(jml) jml, sum(premi_rp_total) premi_rp_total, sum(premi_us_total) premi_us_total, sum(jml_paid) jml_paid, sum(premi_rp_paid) premi_rp_paid, sum(premi_us_paid) premi_us_paid, 
        sum(jml_non_paid) jml_non_paid,sum(premi_rp_non_paid) premi_rp_non_paid, sum(premi_us_non_paid) premi_us_non_paid
        from(
        select kategori,
        count(tabel.reg_spaj) jml,
        sum(case when tabel.lku_id = '01' then tabel.mspr_premium else 0 end)premi_rp_total,
        sum(case when tabel.lku_id = '02' then tabel.mspr_premium else 0 end)premi_us_total,
        sum(case when tabel.msbi_paid = 1 then 1 else 0 end)jml_paid,
        sum(case when tabel.lku_id = '01' and tabel.msbi_paid = 1 then tabel.mspr_premium else 0 end)premi_rp_paid,
        sum(case when tabel.lku_id = '02' and tabel.msbi_paid = 1 then tabel.mspr_premium else 0 end)premi_us_paid,
        sum(case when tabel.msbi_paid = 0 then 1 else 0 end)jml_non_paid,
        sum(case when tabel.lku_id = '01' and tabel.msbi_paid = 0 then tabel.mspr_premium else 0 end)premi_rp_non_paid,
        sum(case when tabel.lku_id = '02' and tabel.msbi_paid = 0 then tabel.mspr_premium else 0 end)premi_us_non_paid
        from(
        select distinct
           b.reg_spaj, b.lku_id, i.mspr_premium, C.MSBI_PAID,
           (case when (msbi_paid = 1 and mste_flag_cc = 1) then 'Paid (Autodebet)' 
                 when (msbi_paid = 1 and (mste_flag_cc != 1 or mste_flag_cc is null)) then 'Paid (Non Autodebet)' 
                 else'Followup to marketing' 
            end) kategori
        from
            eka.lst_aging_followup_temp a,
            eka.mst_policy b,
            eka.mst_billing c,
            eka.mst_insured d,
            eka.mst_product_insured i       
        where
            a.beg_date = to_date(#a_beg_date#,'dd/MM/yyyy') 
            and a.end_date = to_date(#a_end_date#,'dd/MM/yyyy')    
            and a.followup = 0
            and a.mspo_policy_no = b.mspo_policy_no
            and b.reg_spaj = c.reg_spaj
            and c.msbi_beg_date between to_date(#a_beg_date#,'dd/MM/yyyy') and to_date(#a_end_date#,'dd/MM/yyyy')
            and c.msbi_beg_date = (select max(msbi_beg_date) from eka.mst_billing where reg_spaj = b.reg_spaj and msbi_beg_date between to_date(#a_beg_date#,'dd/MM/yyyy') and to_date(#a_end_date#,'dd/MM/yyyy'))
            and b.reg_spaj = d.reg_spaj 
            and B.REG_SPAJ = I.REG_SPAJ
            and I.LSBS_ID <![CDATA[<]]> 300) tabel 
            group by kategori
            union
        select 'Followup to marketing' kategori, count( b.reg_spaj) jml, 
            sum(case when b.lku_id = '01' then mspr_premium else 0 end)premi_rp_total,
            sum(case when b.lku_id = '02' then mspr_premium else 0 end)premi_us_total,
            sum(case when msbi_paid = 1 then 1 else 0 end)jml_paid,
            sum(case when b.lku_id = '01' and msbi_paid = 1 then mspr_premium else 0 end)premi_rp_paid,
            sum(case when b.lku_id = '02' and msbi_paid = 1 then mspr_premium else 0 end)premi_us_paid,
            sum(case when msbi_paid = 0 then 1 else 0 end)jml_non_paid,
            sum(case when b.lku_id = '01' and msbi_paid = 0 then mspr_premium else 0 end)premi_rp_non_paid,
            sum(case when b.lku_id = '02' and msbi_paid = 0 then mspr_premium else 0 end)premi_us_non_paid
        from eka.lst_aging_followup_temp a, eka.mst_policy b, eka.mst_billing c,  eka.mst_product_insured d
        where beg_date = to_date(#a_beg_date#,'dd/MM/yyyy') and end_date = to_date(#a_end_date#,'dd/MM/yyyy') and followup =0
            and a.mspo_policy_no = b.mspo_policy_no
            and b.reg_spaj = c.reg_spaj
            and b.reg_spaj = d.reg_spaj
            and msbi_premi_ke = (select max(msbi_premi_ke) from eka.mst_billing where reg_spaj = b.reg_spaj)
            and msbi_tahun_ke = (select max(msbi_tahun_ke) from eka.mst_billing where reg_spaj = b.reg_spaj)
            and msbi_beg_date not between to_date(#a_beg_date#,'dd/MM/yyyy') and to_date(#a_end_date#,'dd/MM/yyyy')
            and lsbs_id <![CDATA[<]]> 300
            and a.mspo_policy_no not in(
            select distinct
               a.mspo_policy_no
            from
                eka.lst_aging_followup_temp a,
                eka.mst_policy b,
                eka.mst_billing c      
            where
                a.beg_date = to_date(#a_beg_date#,'dd/MM/yyyy') 
                and a.end_date = to_date(#a_end_date#,'dd/MM/yyyy')    
                and a.followup = 0
                and a.mspo_policy_no = b.mspo_policy_no
                and b.reg_spaj = c.reg_spaj
                and c.msbi_beg_date between to_date(#a_beg_date#,'dd/MM/yyyy') and to_date(#a_end_date#,'dd/MM/yyyy')
                and c.msbi_beg_date = (select max(msbi_beg_date) from eka.mst_billing where reg_spaj = b.reg_spaj and msbi_beg_date between to_date(#a_beg_date#,'dd/MM/yyyy') and to_date(#a_end_date#,'dd/MM/yyyy'))) 
            union   
                select
                kategori,
                count(tabel.reg_spaj)jml,
                sum(case when tabel.lku_id = '01' then tabel.mspr_premium else 0 end)premi_rp_total,
                sum(case when tabel.lku_id = '02' then tabel.mspr_premium else 0 end)premi_us_total,
                sum(case when mb.msbi_paid = 1 then 1 else 0 end)jml_paid,
                sum(case when tabel.lku_id = '01' and mb.msbi_paid = 1 then tabel.mspr_premium else 0 end)premi_rp_paid,
                sum(case when tabel.lku_id = '02' and mb.msbi_paid = 1 then tabel.mspr_premium else 0 end)premi_us_paid,
                sum(case when mb.msbi_paid = 0 then 1 else 0 end)jml_non_paid,
                sum(case when tabel.lku_id = '01' and mb.msbi_paid = 0 then tabel.mspr_premium else 0 end)premi_rp_non_paid,
                sum(case when tabel.lku_id = '02' and mb.msbi_paid = 0 then tabel.mspr_premium else 0 end)premi_us_non_paid
            from
                (select distinct
                    a.mspo_policy_no, b.reg_spaj, c.lsfu_id, d.lus_full_name user_input,
                    max(c.msbi_tahun_ke)msbi_tahun_ke, max(c.msbi_premi_ke)msbi_premi_ke, c.msfu_create_date,
                    e.mspr_premium, f.lsfu_desc kategori, b.lku_id
                from
                    eka.lst_aging_followup_temp a,
                    eka.mst_policy b,
                    eka.mst_followup c,
                    eka.lst_user d,
                    eka.mst_product_insured e,
                    eka.lst_followup f
                where
                    a.mspo_policy_no = b.mspo_policy_no
                    and b.reg_spaj = c.reg_spaj
                    and c.lus_id = d.lus_id
                    and b.reg_spaj = e.reg_spaj
                    and c.lsfu_id = f.lsfu_id
                    and e.mste_insured_no = 1
                    and e.lsbs_id <![CDATA[<]]> 300
                    and a.beg_date = to_date(#a_beg_date#,'dd/MM/yyyy') 
                    and a.end_date = to_date(#a_end_date#,'dd/MM/yyyy')
                    and create_date is not null
                    and followup = 1
                    and c.msfu_create_date between add_months(to_date(#a_beg_date#,'dd/MM/yyyy'),-5)  and to_date(sysdate,'dd/MM/yyyy')+1
                    and c.msfu_create_date = (select max(msfu_create_date) from eka.mst_followup where reg_spaj = c.reg_spaj and msfu_create_date between add_months(to_date(#a_beg_date#,'dd/MM/yyyy'),-5) and to_date(sysdate,'dd/MM/yyyy')+1)
                group by
                    a.mspo_policy_no, b.reg_spaj, c.lsfu_id, d.lus_full_name,c.msfu_create_date, e.mspr_premium, f.lsfu_desc, b.lku_id)tabel,
                eka.mst_billing mb
            where
                tabel.reg_spaj = mb.reg_spaj
                and tabel.msbi_tahun_ke = mb.msbi_tahun_ke
                and tabel.msbi_premi_ke = mb.msbi_premi_ke 
            group by
                kategori       
        )group by kategori
	</select>
	
	<select id="elions.bas.selectReportAgingFollowupUser" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
		    tabel.user_input,
		    count(tabel.reg_spaj)jml,
		    sum(case when tabel.lku_id = '01' then tabel.mspr_premium else 0 end)premi_rp,
		    sum(case when tabel.lku_id = '02' then tabel.mspr_premium else 0 end)premi_us
		from
		    (select distinct
		        a.mspo_policy_no, b.reg_spaj, c.lsfu_id, d.lus_full_name user_input,
		        max(c.msbi_tahun_ke)msbi_tahun_ke, max(c.msbi_premi_ke)msbi_premi_ke, c.msfu_create_date,
		        e.mspr_premium, f.lsfu_desc, b.lku_id
		    from
		        eka.lst_aging_followup_temp a,
		        eka.mst_policy b,
		        eka.mst_followup c,
		        eka.lst_user d,
		        eka.mst_product_insured e,
		        eka.lst_followup f
		    where
		        a.mspo_policy_no = b.mspo_policy_no
		        and b.reg_spaj = c.reg_spaj
		        and c.lus_id = d.lus_id
		        and b.reg_spaj = e.reg_spaj
		        and c.lsfu_id = f.lsfu_id
		        and e.mste_insured_no = 1
		        and e.lsbs_id <![CDATA[<]]> 300
		        and a.beg_date = to_date(#a_beg_date#,'dd/MM/yyyy') 
		        and a.end_date = to_date(#a_end_date#,'dd/MM/yyyy')
		        and c.msfu_create_date between to_date(#f_beg_date#,'dd/MM/yyyy') and to_date(#f_end_date#,'dd/MM/yyyy')+1
		        and c.msfu_create_date = (select max(msfu_create_date) from eka.mst_followup where reg_spaj = c.reg_spaj and msfu_create_date between to_date(#f_beg_date#,'dd/MM/yyyy') and to_date(#f_end_date#,'dd/MM/yyyy')+1)
		    group by
		        a.mspo_policy_no, b.reg_spaj, c.lsfu_id, d.lus_full_name,c.msfu_create_date, e.mspr_premium, f.lsfu_desc, b.lku_id)tabel,
		    eka.mst_billing mb
		where
		    tabel.reg_spaj = mb.reg_spaj
		    and tabel.msbi_tahun_ke = mb.msbi_tahun_ke
		    and tabel.msbi_premi_ke = mb.msbi_premi_ke 
		group by
		    tabel.user_input
	</select>
	
	<select id="elions.bas.selectStokSpaj2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT * FROM eka.lst_jenis_spaj where jenis = #jenis# and aktif = 1  
			<isEmpty property="lsjs_id">and lsjs_id !=0</isEmpty><isNotEmpty property="lsjs_id">and lsjs_id =#lsjs_id# </isNotEmpty> order by lsjs_id asc 
	</select>
	
	<select id="elions.bas.selectStokSPAJSummary" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	  <isEqual property="filter" compareValue="1">
			   SELECT lsjs_id,sum(spaj_out) spaj_out , Diskripsi, sum(decode(jenis, 1,spaj_out ,0)) spaj_out_manual,sum(decode(jenis, 0,spaj_out ,0)) spaj_out_auto,prefix,
	        stock_now , stock_cetak, '' NO_BLANKO ,'' no_pengiriman, '' keterangan
	    FROM (
	         SELECT a.lsjs_id,sum(a.mss_amount)spaj_out, a.lca_id,c.LUS_FULL_NAME , B.LSJS_DESC Diskripsi , b.lsjs_qty_form stock_cetak,B.lsjs_stock stock_now,
	                A.PRINT_DT tgl_proses,B.LSJS_PREFIX prefix, A.MSF_ID no_pengiriman , A.NO_BLANKO ,A.jenis
	         FROM EKA.LST_JENIS_SPAJ_HIST A , EKA.LST_JENIS_SPAJ B , EKA.LST_USER C
	         WHERE A.LSJS_ID = B.LSJS_ID
	              AND C.LUS_ID  = A.LUS_ID
	              AND A.PRINT_DT between to_date(#b_date#,'dd/MM/yyyy') and to_date(#e_date#,'dd/MM/yyyy')
	              and b.aktif=1
	        group by a.lsjs_id, a.lca_id,c.LUS_FULL_NAME,B.LSJS_DESC, b.lsjs_qty_form ,B.lsjs_stock ,A.PRINT_DT,B.LSJS_PREFIX ,A.MSF_ID,A.NO_BLANKO,A.jenis 
	        order by lsjs_id , print_dt asc)
	    GROUP BY lsjs_id,Diskripsi , stock_now, stock_cetak,prefix ORDER BY lsjs_id
	 </isEqual>	
	 <isEqual property="filter" compareValue="2">
			 SELECT lsjs_id,sum(spaj_out) spaj_out , Diskripsi, sum(decode(jenis, 1,spaj_out ,0)) spaj_out_manual,sum(decode(jenis, 0,spaj_out ,0)) spaj_out_auto,prefix,
            stock_now , stock_cetak, NO_BLANKO ,no_pengiriman ,tgl_proses, keterangan
        FROM (
             SELECT a.lsjs_id,sum(a.mss_amount)spaj_out, a.lca_id,c.LUS_FULL_NAME , B.LSJS_DESC Diskripsi , b.lsjs_qty_form stock_cetak,B.lsjs_stock stock_now,
                    A.PRINT_DT tgl_proses,B.LSJS_PREFIX prefix, A.MSF_ID no_pengiriman , A.NO_BLANKO ,A.jenis, A.keterangan
             FROM EKA.LST_JENIS_SPAJ_HIST A , EKA.LST_JENIS_SPAJ B , EKA.LST_USER C
             WHERE A.LSJS_ID = B.LSJS_ID
                  AND C.LUS_ID  = A.LUS_ID
                  AND A.PRINT_DT between to_date(#b_date#,'dd/MM/yyyy') and to_date(#e_date#,'dd/MM/yyyy')
                  and b.aktif=1
            group by a.lsjs_id, a.lca_id,c.LUS_FULL_NAME,B.LSJS_DESC, b.lsjs_qty_form ,B.lsjs_stock ,A.PRINT_DT,B.LSJS_PREFIX ,A.MSF_ID,A.NO_BLANKO,A.jenis ,A.keterangan
            order by lsjs_id , print_dt asc)
        GROUP BY lsjs_id,Diskripsi , stock_now, stock_cetak,prefix ,NO_BLANKO,tgl_proses,no_pengiriman, keterangan ORDER BY lsjs_id
	 </isEqual>
	</select>
	
	<select id="elions.bas.selectDataJatuhTempoVisa" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select    
		   visa.polis as no_polis,
		   visa.pemegang,   
		   visa.region as cabang,
		   visa.beg_date,
		   visa.end_date,   
		   (case when visa.lsbs_linkkon = 2 then (visa.top_up_berkala + visa.top_up_single + visa.premi_pokok) else visa.premi_pokok end)premi,
		   visa.premi_ke,
		   visa.carabayar,
		   '' as card_no,
		   visa.tgl_rk,
		   visa.tgl_input as tgl_input,
		   (case when visa.jumlah_smed > 0 then 'Y' else 'T'end)Smile_medical
		from(
				SELECT DISTINCT       
		    d.lca_nama cabang, e.lsrg_nama region, tabel.reg_spaj, tabel.mspo_policy_no_format polis, 
		    to_char (tabel.msbi_beg_date, 'dd/mm/yyyy') beg_date, to_char (tabel.msbi_end_date, 'dd/mm/yyyy') end_date, 
		    to_char (tabel.msbi_due_date, 'dd/mm/yyyy') due_date, eka.utils.pemegang (tabel.reg_spaj) pemegang,       
		    eka.utils.tertanggung (tabel.reg_spaj) tertanggung, f.lsdbs_name produk, 
		    tabel.msbi_tahun_ke tahun_ke, tabel.msbi_premi_ke premi_ke ,xxx.lsbs_linkkon,pay.lscb_pay_mode carabayar,
		    (select count(xx.lsbs_id) from eka.mst_product_insured xx where xx.lsbs_id in(183,189,823) and xx.reg_spaj=tabel.reg_Spaj )jumlah_smed,
		    to_char(zz.mspa_pay_date,'dd/MM/yyyy')tgl_rk,tabel.lscb_id,
		    nvl((select ul.mu_jlh_premi from eka.mst_ulink ul where ul.lt_id=5 and ul.mu_ke in(1,2,3) and ul.reg_spaj=tabel.reg_Spaj),0)top_up_berkala,  
		    nvl((select ula.mu_jlh_premi from eka.mst_ulink ula where ula.lt_id=2 and ula.mu_ke in(1,2,3) and ula.reg_spaj=tabel.reg_Spaj),0)top_up_single ,
		    (select sum(pr.mspr_premium) from eka.mst_product_insured pr where pr.reg_Spaj=tabel.reg_Spaj)premi_pokok,
		    to_char(g.tgl_input,'dd/MM/yyyy')tgl_input
		    from
		    (select                
		        mb.msbi_beg_date, mb.msbi_end_date, mb.msbi_due_date, mp.mspo_policy_no_format, mp.reg_spaj, 
		        mb.msbi_tahun_ke, mb.msbi_premi_ke,
		        mb.msbi_flag_topup, mb.lca_id, mb.lwk_id, mb.lsrg_id,mp.lscb_id
		    from                
		        eka.mst_billing mb, eka.mst_det_billing mdb, eka.mst_policy mp, eka.mst_billing_hcr mbh, 
		        eka.mst_insured mi
		    where               
		        mb.reg_spaj = mbh.reg_spaj(+)
		        and mb.msbi_tahun_ke = mbh.msbih_tahun_ke(+)
		        and mb.msbi_premi_ke = mbh.msbih_premi_ke(+)
		        and mdb.reg_spaj = mb.reg_spaj
		        and mdb.msbi_tahun_ke = mb.msbi_tahun_ke
		        and mdb.msbi_premi_ke = mb.msbi_premi_ke
		        and mp.reg_spaj = mb.reg_spaj
		        and mp.reg_spaj = mi.reg_spaj      
		        ) tabel,
			    eka.mst_insured b,
			    eka.mst_product_insured c,
			    eka.lst_cabang d,
			    eka.lst_region e,
			    eka.lst_det_bisnis f,
			    eka.lst_bisnis xxx,
			    EKA.MST_VISA_CAMP_DET g,
			    eka.mst_payment zz,
			    eka.mst_tag_payment yy,
			    eka.lst_pay_mode pay
			WHERE   
			    tabel.reg_spaj = b.reg_spaj
			    and b.reg_spaj = c.reg_spaj
			    and b.mste_insured_no = c.mste_insured_no
			    and tabel.lca_id = d.lca_id
			    and tabel.lca_id = e.lca_id
			    and tabel.lwk_id = e.lwk_id
			    and tabel.lsrg_id = e.lsrg_id
			    and c.lsbs_id = f.lsbs_id
			    and c.lsdbs_number = f.lsdbs_number
			    and b.mste_insured_no = 1                
			    and c.lsbs_id <![CDATA[<]]>300   
			    and tabel.reg_spaj=g.reg_spaj
			    and g. periode_bdate=tabel.msbi_beg_date
			    and g.jenis=1    
			    and tabel.msbi_flag_topup is null  
			    and g.tgl_kirim is null 
			    and tabel.reg_Spaj=zz.reg_Spaj
			    and zz.reg_Spaj=yy.reg_Spaj
			    and zz.mspa_payment_id=YY.MSPA_PAYMENT_ID
			    and tabel.msbi_premi_ke=yy.msbi_premi_ke
			    and tabel.msbi_tahun_ke=yy.msbi_tahun_ke
			    and c.lsbs_id=xxx.lsbs_id
			    and tabel.lscb_id=pay.lscb_id    
			    and zz.mspa_pay_date<![CDATA[<=]]>sysdate-21
			    and g.tgl_input <![CDATA[>=]]> to_date('01/08/2015','dd/MM/yyyy') 
			GROUP BY 
			    d.lca_nama, e.lsrg_nama, tabel.msbi_beg_date, tabel.msbi_end_date, tabel.msbi_due_date, tabel.mspo_policy_no_format, tabel.reg_spaj,g.tgl_input,
			    f.lsdbs_name, tabel.msbi_tahun_ke, tabel.msbi_premi_ke,  tabel.msbi_flag_topup,zz.mspa_pay_date,tabel.lscb_id,xxx.lsbs_linkkon,pay.lscb_pay_mode
			ORDER BY 
	    		1,2,3,4
	    )visa
	</select>
	
	<select id="elions.bas.selectReportCekNoHp" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
			    a.mcpn_hp,
			    a.mcpn_no_blanko,
			    a.mcpn_nama_pemegang,
			    to_char(a.mcpn_tgl_lahir_pp,'dd/MM/yyyy')tgl_lahir_pp,
			    to_char(a.mcpn_tgl_input,'dd/MM/yyyy' )tgl_input,
			    a.mcpn_nama_pemegang_lama,
			    to_char(a.mcpn_tgl_lahir_pp_lama,'dd/MM/yyyy' )tgl_lahir_pp_lama,
			    a.mcpn_flag_agen,
			    a.mcpn_no_polis_sebelumnya,			  
			    B.LUS_FULL_NAME user_input,
			    C.LCA_NAMA nama_cabang,
			   (case when a.mcpn_flag_agen=0 then 'NASABAH' else 'AGEN' end)JENIS
		from
				eka.mst_check_pn a,
				eka.lst_user b,
				EKA.LST_CABANG c
		where
				a.lus_id=b.lus_id
				and B.LCA_ID =c.lca_id
				<isEqual property="jenis" compareValue="1">
					and a.mcpn_flag_agen = 0
				</isEqual>
				<isEqual property="jenis" compareValue="2">
					and a.mcpn_flag_agen = 1
				</isEqual>
				and a.mcpn_tgl_input between #tanggalAwal# and #tanggalAkhir#+1
	</select>
	
	<select id="elions.bas.selectNoGadgetESPAJ" parameterClass="string" resultClass="java.util.HashMap">
		select A.NO_TEMP , A.REG_SPAJ
		from eka.mst_spaj_temp a 
		where a.reg_spaj = rpad(replace(#value# ,'.'),11,' ') 
	</select>
	
	<select id="elions.bas.selectReportFollowupBilling2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select distinct * from(
		select 
		    to_char(b.msbi_beg_date, 'dd/mm/yyyy') msbi_beg_date, 
		    to_char(b.msbi_end_date, 'dd/mm/yyyy') msbi_end_date,
		    to_char(b.msbi_due_date, 'dd/mm/yyyy') msbi_due_date,
		    c.mspo_policy_no_format, eka.utils.pemegang(a.reg_spaj) pemegang, a.msfu_urut, 
		    d.lsfu_desc, eka.utils.user_input(a.lus_id) user_name, a.msfu_ket, a.msfu_status, 
		    decode(a.msfu_status, 0, 'Follow Up', 1, 'Closed', '-') status,
		    to_char(a.msfu_create_date, 'dd/mm/yyyy') create_date,
		    a.reg_spaj, a.msbi_tahun_ke, a.msbi_premi_ke, a.msfu_attachment
		from 
		    eka.mst_followup a, eka.mst_billing b, eka.mst_policy c, eka.lst_followup d, eka.lst_region e, eka.lst_user_admin f, eka.lst_user g
		where 
		    a.reg_spaj = b.reg_spaj
		    and a.msbi_tahun_ke = b.msbi_tahun_ke
		    and a.msbi_premi_ke = b.msbi_premi_ke
		    and a.reg_spaj = c.reg_spaj
		    and a.lsfu_id = d.lsfu_id
		    and c.lca_id = e.lca_id
		    and c.lwk_id = e.lwk_id
		    and c.lsrg_id = e.lsrg_id
		    and e.lar_id = f.lar_id
		    and f.lus_id = g.lus_id
		    <isEqual property="jn_tgl" compareValue="0">
		    	and (b.MSBI_BEG_DATE BETWEEN TO_DATE(#begdate#, 'DD/MM/YYYY') and TO_DATE(#enddate#, 'DD/MM/YYYY'))
		    </isEqual>
		    <isEqual property="jn_tgl" compareValue="1">
		    	and (a.MSFU_CREATE_DATE BETWEEN TO_DATE(#begdate# || '00:00:00', 'DD/MM/YYYY hh24:mi:ss') and TO_DATE(#enddate# || '23:59:59', 'DD/MM/YYYY hh24:mi:ss'))
		    </isEqual>
		     <isEqual property="jn_tgl" compareValue="2">
		    	and (b.MSBI_END_DATE BETWEEN TO_DATE(#begdate#, 'DD/MM/YYYY') and TO_DATE(#enddate#, 'DD/MM/YYYY'))
		    </isEqual>
			<isNotEmpty property="cabang">
				<isNotEqual property="cabang" compareValue="ALL" prepend=" AND ">
					g.lca_id = #cabang#
				</isNotEqual>
			</isNotEmpty>		           
			<isNotEmpty property="admin">
				<isNotEqual property="admin" compareValue="ALL" prepend=" AND ">
					g.lus_id = #admin#
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="kat">
				<isNotEqual property="kat" compareValue="ALL" prepend=" AND ">
					a.lsfu_id = #kat#
				</isNotEqual>
			</isNotEmpty>		           
			<isNotEmpty property="stfu">
				<isNotEqual property="stfu" compareValue="2" prepend=" AND ">
					a.msfu_status = #stfu#
				</isNotEqual>
			</isNotEmpty>
		group by
		    b.msbi_beg_date, b.msbi_end_date, b.msbi_due_date, c.mspo_policy_no_format, a.reg_spaj, a.msfu_urut, 
		    d.lsfu_desc, a.lus_id, a.msfu_ket, a.msfu_status, a.msfu_create_date, 
		    a.reg_spaj, a.msbi_tahun_ke, a.msbi_premi_ke, a.msfu_attachment
		order by 
		    b.msbi_beg_date, a.reg_spaj, a.msfu_urut asc	 
	)report	
		order by 
		    report.msbi_beg_date, report.reg_spaj, report.msfu_urut asc	
	</select>
	
	<select id="elions.bas.selectReportFollowupBillingPerUser2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select distinct * from(
		select 
		    to_char(b.msbi_beg_date, 'dd/mm/yyyy') msbi_beg_date, 
		    to_char(b.msbi_end_date, 'dd/mm/yyyy') msbi_end_date,
		    to_char(b.msbi_due_date, 'dd/mm/yyyy') msbi_due_date,
		    c.mspo_policy_no_format, eka.utils.pemegang(a.reg_spaj) pemegang, a.msfu_urut, 
		    d.lsfu_desc, eka.utils.user_input(a.lus_id) user_name, a.msfu_ket, a.msfu_status, 
		    decode(a.msfu_status, 0, 'Follow Up', 1, 'Closed', '-') status,
		    to_char(a.msfu_create_date, 'dd/mm/yyyy') create_date,
		    a.reg_spaj, a.msbi_tahun_ke, a.msbi_premi_ke, a.msfu_attachment,
		    eka.utils.tertanggung (a.reg_spaj) tertanggung,
            eka.utils.cabang (c.lca_id) cabang,
            eka.utils.region (c.lca_id, c.lwk_id, c.lsrg_id) region,
            EKA.UTILS.KURS_SIMBOL (c.lku_id) kurs,
            mpi.mspr_premium,
            EKA.UTILS.PAY_MODE (c.LSCB_ID) carabayar,
            ldb.lsdbs_name,
            EKA.UTILS.pay_mode(C.LSCB_ID) cara_bayar,
	        EKA.UTILS.nama_Agen(h.MSAG_ID) agen,
	        EKA.UTILS.region(i.LCA_ID, i.LWK_ID, i.LSRG_ID) agency,
	        (select sum(msbi_remain) from eka.mst_billing where a.reg_Spaj = reg_Spaj and msbI_beg_date = b.msbi_beg_date)  jumlah_premi,
	        (select decode(mar_jenis,1,'CC',2,'Tabungan','') from eka.mst_account_recur where reg_spaj = a.reg_Spaj) jenis_tabungan
		from 
		    eka.mst_followup a, eka.mst_billing b, eka.mst_policy c, eka.lst_followup d, eka.lst_region e, eka.lst_user_admin f, eka.lst_user g,
		    eka.mst_product_insured mpi,  eka.lst_det_bisnis ldb, eka.mst_agent_prod h, eka.mst_agent i
		where 
		    a.reg_spaj = b.reg_spaj
		    and a.msbi_tahun_ke = b.msbi_tahun_ke
		    and a.msbi_premi_ke = b.msbi_premi_ke
		    and a.reg_spaj = c.reg_spaj
		    AND c.reg_spaj = mpi.reg_spaj
            AND mpi.lsbs_id = LDB.LSBS_ID
            AND MPI.LSDBS_NUMBER = ldb.LSDBS_NUMBER
            AND MPI.LSBS_ID <![CDATA[<=]]> 300
		    and a.lsfu_id = d.lsfu_id
		    and c.lca_id = e.lca_id
		    and c.lwk_id = e.lwk_id
		    and c.lsrg_id = e.lsrg_id
		    and e.lar_id = f.lar_id
		    and f.lus_id = g.lus_id
            and a.reg_Spaj = h.reg_spaj
	        and h.LSLE_ID = 4
	        and h.msag_id = i.msag_id
		    <isEqual property="jn_tgl" compareValue="0">
		    	and (b.MSBI_BEG_DATE BETWEEN TO_DATE(#begdate#, 'DD/MM/YYYY') and TO_DATE(#enddate#, 'DD/MM/YYYY'))
		    </isEqual>
		    <isEqual property="jn_tgl" compareValue="1">
		    	and (a.MSFU_CREATE_DATE BETWEEN TO_DATE(#begdate#|| ' 00:00:00', 'DD/MM/YYYY hh24:mi:ss') and TO_DATE(#enddate# || ' 23:59:59', 'DD/MM/YYYY hh24:mi:ss'))
		    </isEqual>
		    <isEqual property="jn_tgl" compareValue="2">
		    	and (b.MSBI_END_DATE BETWEEN TO_DATE(#begdate#, 'DD/MM/YYYY') and TO_DATE(#enddate#, 'DD/MM/YYYY'))
		    </isEqual>
			<isNotEmpty property="cabang">
				<isNotEqual property="cabang" compareValue="ALL" prepend=" AND ">
					g.lca_id = #cabang#
				</isNotEqual>
			</isNotEmpty>		           
			<isNotEmpty>
				<isEqual property="rep" compareValue="0">
					and a.lus_id = #lus_id#
				</isEqual>
				<isEqual property="rep" compareValue="1">
					<isNotEmpty property="admin">
						<isNotEqual property="admin" compareValue="ALL" prepend=" AND ">
							a.lus_id = #admin#
						</isNotEqual>
					</isNotEmpty>
				</isEqual>
				<isEqual property="rep" compareValue="2">
					<isNotEmpty property="admin">
						<isEqual property="admin" compareValue="ALL" prepend=" AND ">
							a.lus_id in (2475,4180,690,3041)
						</isEqual>
						<isNotEqual property="admin" compareValue="ALL" prepend=" AND ">
							a.lus_id = #admin#
						</isNotEqual>
					</isNotEmpty>
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="kat">
				<isNotEqual property="kat" compareValue="ALL" prepend=" AND ">
					a.lsfu_id = #kat#
				</isNotEqual>
			</isNotEmpty>		           
			<isNotEmpty property="stfu">
				<isNotEqual property="stfu" compareValue="2" prepend=" AND ">
					a.msfu_status = #stfu#
				</isNotEqual>
			</isNotEmpty>
		order by 
		    b.msbi_beg_date, a.reg_spaj, a.msfu_urut asc	 
	)report
		order by 
		    report.msbi_beg_date, report.reg_spaj, report.msfu_urut asc	
	</select>
	
	<select id="elions.bas.selectWelcomeCallSuccess" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select a.reg_spaj , A.LSPD_ID , b. flag_validasi ,b.create_date ,c.lca_nama , a.mspo_policy_no , d.mcl_first
		from eka.mst_policy a , eka.mst_inbox b , eka.lst_cabang c , eka.mst_client_new d
 		where  a.reg_spaj = b.reg_spaj 
        and b.ljj_id = 63 
        and a.lspd_id in (6,7) 
        and a.lca_id = c.lca_id 
        and a.mspo_policy_holder = d.mcl_id
        and b.batal = 0        
        <isEqual property="jn_cek" compareValue="1">
        and rownum = 1
        and a.reg_spaj=  rpad(replace(#reg_spaj# ,'.'),11,' ')  		
 		</isEqual>
 		 <isEqual property="jn_cek" compareValue="0">
        and b.flag_validasi = 2   		
 		</isEqual>
 		order by b.create_date desc
	</select>
	
	<!-- status : 0 = Outstanding (Sudah Followup), 1 = Closed, 2 = All, 3 = Belum Followup -->
	<!-- jenis  : gagaldebet, jatuhtempo, all -->
	<select id="elions.bas.selectFollowupBilling2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT DISTINCT
		    to_char (msbi_beg_date, 'dd/mm/yyyy') msbi_beg_date, 
		    to_char (msbi_end_date, 'dd/mm/yyyy') msbi_end_date, 
		    to_char (msbi_due_date, 'dd/mm/yyyy') msbi_due_date, 
		    eka.utils.pemegang (tabel.reg_spaj) pemegang,
		    mspo_policy_no_format, 
		    reg_spaj, 
		    msbi_tahun_ke, 
		    msbi_premi_ke,  
		    ket, 
		    (select count(*) from eka.mst_followup where lsfu_id = 99 and reg_spaj = tabel.reg_spaj and msbi_tahun_ke = tabel.msbi_tahun_ke and msbi_premi_ke = tabel.msbi_premi_ke) jml_fu,
		    (
				select lsfu_id from eka.mst_followup fol
				where reg_spaj = tabel.reg_spaj and msbi_tahun_ke = tabel.msbi_tahun_ke and msbi_premi_ke = tabel.msbi_premi_ke
				and msfu_urut = (select max(msfu_urut) from eka.mst_followup where reg_spaj = fol.reg_spaj and msbi_tahun_ke = fol.msbi_tahun_ke and msbi_premi_ke = fol.msbi_premi_ke)		    
		    ) lsfu_id, 
		    msbi_flag_topup,
		    EKA.UTILS.TERTANGGUNG (tabel.reg_spaj) tertanggung,		    
            EKA.UTILS.PAY_MODE(tabel.lscb_id) carabayar,            
            lsdbs_name,            
         	sum(mspr_premium) mspr_premium,
         	EKA.UTILS.status_polis(tabel.lssp_id) status_polis,         	
            eka.utils.cabang(cabang) cabang,
            eka.utils.region(cabang, lwk_id, lsrg_id) region,
           (case when tabel.MSBI_PAID = 0 then 'UNPAID' when tabel.MSBI_PAID = 1 then 'PAID' else '' end) status_bayar
		FROM (			
			<isEqual property="jenis" compareValue="list_aging">
				select 
			        mb.msbi_beg_date, mb.msbi_end_date, mb.msbi_due_date, mp.mspo_policy_no_format, mp.reg_spaj, mb.msbi_tahun_ke, mb.msbi_premi_ke, 'JATUH TEMPO' ket,
			        lu.lca_id, lu.lus_id, mb.msbi_flag_topup, mp.lca_id cabang,
			        MPI.LSDBS_NUMBER,mpi.mspr_premium,MPI.LSBS_ID,ldb.lsdbs_name,MB.LWK_ID, MB.LSRG_ID,
			        MP.LSCB_ID, mp.lssp_id, MB.MSBI_PAID
			    from 
			        eka.mst_billing mb, eka.mst_det_billing mdb, eka.mst_policy mp, eka.mst_billing_hcr mbh, eka.mst_insured mi,
			        eka.lst_region lr, eka.lst_user_admin lua, eka.lst_user lu,
			        eka.lst_det_bisnis ldb, eka.mst_product_insured mpi
			    where
			        mb.reg_spaj = mbh.reg_spaj(+)
			        and mb.msbi_tahun_ke = mbh.msbih_tahun_ke(+)
			        and mb.msbi_premi_ke = mbh.msbih_premi_ke(+)
			        and mdb.reg_spaj = mb.reg_spaj
			        and mdb.msbi_tahun_ke = mb.msbi_tahun_ke
			        and mdb.msbi_premi_ke = mb.msbi_premi_ke
			        and mp.reg_spaj = mb.reg_spaj
			        and mp.reg_spaj = mi.reg_spaj
			        and mi.reg_spaj = mpi.reg_spaj
                	and mpi.lsbs_id =LDB.LSBS_ID 
                 	and MPI.LSDBS_NUMBER = ldb.LSDBS_NUMBER 
                 	and MPI.LSBS_ID <![CDATA[<=]]> 300   
			        and mp.lscb_id not in (0)
			        and mb.lspd_id in (11,12,21,56,57,58)
			        and mb.msbi_premi_ke > 1
			        and mb.lca_id = lr.lca_id
			        and mb.lwk_id = lr.lwk_id
			        and mb.lsrg_id = lr.lsrg_id
			        and lr.lar_id = lua.lar_id
			        and lua.lus_id = lu.lus_id
			</isEqual>
			<isNotEqual property="jenis" compareValue="list_aging">
				<isNotEqual property="jenis" compareValue="powersave">
					<isNotEqual property="jenis" compareValue="stablelink">
						<isNotEqual property="jenis" compareValue="gagaldebet">
						    select 
						        mb.msbi_beg_date, mb.msbi_end_date, mb.msbi_due_date, mp.mspo_policy_no_format, mp.reg_spaj, mb.msbi_tahun_ke, mb.msbi_premi_ke, 'JATUH TEMPO' ket,
						        lu.lca_id, lu.lus_id, mb.msbi_flag_topup, mp.lca_id cabang,
			 					MPI.LSDBS_NUMBER,mpi.mspr_premium,MPI.LSBS_ID,ldb.lsdbs_name,MB.LWK_ID, MB.LSRG_ID,
			 					MP.LSCB_ID, mp.lssp_id, MB.MSBI_PAID
						    from 
						        eka.mst_billing mb, eka.mst_det_billing mdb, eka.mst_policy mp, eka.mst_billing_hcr mbh, eka.mst_insured mi,
						        eka.lst_region lr, eka.lst_user_admin lua, eka.lst_user lu,
						        eka.lst_det_bisnis ldb, eka.mst_product_insured mpi
						    where
						        mb.reg_spaj = mbh.reg_spaj(+)
						        and mb.msbi_tahun_ke = mbh.msbih_tahun_ke(+)
						        and mb.msbi_premi_ke = mbh.msbih_premi_ke(+)
						        and mdb.reg_spaj = mb.reg_spaj
						        and mdb.msbi_tahun_ke = mb.msbi_tahun_ke
						        and mdb.msbi_premi_ke = mb.msbi_premi_ke
						        and mp.reg_spaj = mb.reg_spaj
						        and mp.reg_spaj = mi.reg_spaj
						        and mi.reg_spaj = mpi.reg_spaj
                				and mpi.lsbs_id =LDB.LSBS_ID 
                 				and MPI.LSDBS_NUMBER = ldb.LSDBS_NUMBER 
                 				and MPI.LSBS_ID <![CDATA[<=]]> 300 
						        and mp.lscb_id not in (0)
						        and mb.lspd_id in (11,12,58)<!-- 56 untuk yg recuring setara 12 --> 
						        <isNotEqual property="jenis" compareValue="jatuhtempo">
						        and mp.lssp_id in (1, 14)<!-- permintaan ZEKE -->
						        </isNotEqual>
						        <isEqual property="jenis" compareValue="jatuhtempo">
						        and mp.lssp_id in (1)<!-- update ibu June 2/13/2017 -->
						        </isEqual>
						        and mb.msbi_premi_ke > 1
						        and mb.lca_id = lr.lca_id
						        and mb.lwk_id = lr.lwk_id
						        and mb.lsrg_id = lr.lsrg_id
						        and lr.lar_id = lua.lar_id
						        and lua.lus_id = lu.lus_id
							</isNotEqual>
							<isEqual property="jenis" compareValue="all"> UNION </isEqual>
						    <isNotEqual property="jenis" compareValue="jatuhtempo">
						    select 
						        mb.msbi_beg_date, mb.msbi_end_date, mb.msbi_due_date, mp.mspo_policy_no_format, mp.reg_spaj, mb.msbi_tahun_ke, mb.msbi_premi_ke, ljhr.ljhr_keterangan ket,
						        lu.lca_id, lu.lus_id, mb.msbi_flag_topup, mp.lca_id cabang,
						        MPI.LSDBS_NUMBER,mpi.mspr_premium,MPI.LSBS_ID,ldb.lsdbs_name,MB.LWK_ID, MB.LSRG_ID,
			 					MP.LSCB_ID, mp.lssp_id, MB.MSBI_PAID
						    from 
						        eka.mst_billing mb, eka.mst_policy mp, eka.mst_insured mi, eka.mst_account_recur mar, eka.lst_jn_hasil_recur ljhr,
						        (select subs_number spaj, ket3 gagal_ke, ket2 th_ke, ket1 premi_ke, tgl_tagihan, ljhr_id, no_rekening, total_invoice, kode_plan, tgl_terima 
						         from eka.mst_eka_recur 
						         where tgl_terima = (select max (tgl_terima) from eka.mst_eka_recur where vat = 0) and vat = 0) gagal,
						         eka.lst_region lr, eka.lst_user_admin lua, eka.lst_user lu,
						         eka.lst_det_bisnis ldb, eka.mst_product_insured mpi
						    where
						        mp.reg_spaj = mb.reg_spaj
						        and mp.reg_spaj = mi.reg_spaj
						        and mp.reg_spaj = mar.reg_spaj
						        and mi.reg_spaj = mpi.reg_spaj
                				and mpi.lsbs_id =LDB.LSBS_ID 
                 				and MPI.LSDBS_NUMBER = ldb.LSDBS_NUMBER 
                 				and MPI.LSBS_ID <![CDATA[<=]]>300   
						        and mb.msbi_premi_ke > 1
						        and gagal.spaj = mb.reg_spaj
						        and gagal.premi_ke = mb.msbi_premi_ke
						        and gagal.th_ke = mb.msbi_tahun_ke
						        and gagal.ljhr_id = ljhr.ljhr_id
						        and mb.lca_id = lr.lca_id
						        and mb.lwk_id = lr.lwk_id
						        and mb.lsrg_id = lr.lsrg_id
						        and lr.lar_id = lua.lar_id
						        and lua.lus_id = lu.lus_id
						        <isNotEmpty property="lca_id">
						        	and mp.lca_id = #lca_id#
						        </isNotEmpty>
						</isNotEqual>
					</isNotEqual>
				</isNotEqual>
			</isNotEqual>
		) tabel
		<dynamic prepend=" WHERE ">
			<isNotEmpty property="aging" prepend=" and ">
			    (msbi_beg_date between trunc(sysdate-#aging#) and trunc(sysdate))
			</isNotEmpty>
			<isEmpty property="aging" prepend=" and ">
				<isEqual property="jn" compareValue="0">
					(msbi_beg_date between to_date(#begdate#, 'dd/mm/yyyy') and to_date(#enddate#, 'dd/mm/yyyy'))
				</isEqual>
				<isEqual property="jn" compareValue="1">
					(msbi_end_date between to_date(#begdate#, 'dd/mm/yyyy') and to_date(#enddate#, 'dd/mm/yyyy'))
				</isEqual>
			</isEmpty>
			<isNotEmpty property="cabang">
			    <isNotEqual property="cabang" compareValue="ALL" prepend=" and ">
			        lca_id = #cabang#
			    </isNotEqual>
			</isNotEmpty>                   
			<isNotEmpty property="admin">
			    <isNotEqual property="admin" compareValue="ALL" prepend=" and ">
			        lus_id = #admin#
			    </isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="lus_id" prepend=" and ">
			   lus_id = #lus_id#
			</isNotEmpty>                   
			<isEqual property="stfu" compareValue="0" prepend=" and ">
			    exists 
			        (select * from eka.mst_followup msfu where lsfu_id <![CDATA[<>]]> 99
			            and reg_spaj = tabel.reg_spaj and msbi_tahun_ke = tabel.msbi_tahun_ke and msbi_premi_ke = tabel.msbi_premi_ke
			            and msfu_status = 0
			            and msfu.msfu_urut = 
			            (select max(msfu_urut) from eka.mst_followup 
			             where lsfu_id <![CDATA[<>]]> 99 and reg_spaj = msfu.reg_spaj and msbi_tahun_ke = msfu.msbi_tahun_ke and msbi_premi_ke = msfu.msbi_premi_ke))                            
			</isEqual>
			<isEqual property="stfu" compareValue="1" prepend=" and ">
			    exists 
			        (select * from eka.mst_followup msfu where lsfu_id <![CDATA[<>]]> 99
			            and reg_spaj = tabel.reg_spaj and msbi_tahun_ke = tabel.msbi_tahun_ke and msbi_premi_ke = tabel.msbi_premi_ke
			            and msfu_status = 1
			            and msfu.msfu_urut = 
			            (select max(msfu_urut) from eka.mst_followup 
			             where lsfu_id <![CDATA[<>]]> 99 and reg_spaj = msfu.reg_spaj and msbi_tahun_ke = msfu.msbi_tahun_ke and msbi_premi_ke = msfu.msbi_premi_ke))                            
			</isEqual>
			<isEqual property="stfu" compareValue="3" prepend=" and ">
			    not exists 
			        (select * from eka.mst_followup msfu where lsfu_id <![CDATA[<>]]> 99
			            and reg_spaj = tabel.reg_spaj and msbi_tahun_ke = tabel.msbi_tahun_ke and msbi_premi_ke = tabel.msbi_premi_ke
			            and msfu.msfu_urut = 
			            (select max(msfu_urut) from eka.mst_followup 
			             where lsfu_id <![CDATA[<>]]> 99 and reg_spaj = msfu.reg_spaj and msbi_tahun_ke = msfu.msbi_tahun_ke and msbi_premi_ke = msfu.msbi_premi_ke))                            
			</isEqual>
			<isNotEqual property="jenis" compareValue="powersave">
				<isNotEqual property="jenis" compareValue="stablelink">
					and msbi_flag_topup is null
				</isNotEqual>
			</isNotEqual>
			<isNotNull property="spaj">
				and reg_spaj = #spaj#
			</isNotNull>
			and cabang not in ('09', '58','42','67', '40','66') <!-- EFC dibuka lagi , khusus produk agency -->		
		</dynamic>
		GROUP BY msbi_beg_date, msbi_end_date, msbi_due_date, mspo_policy_no_format, reg_spaj, msbi_tahun_ke, msbi_premi_ke, ket, msbi_flag_topup,
				lsdbs_name, lscb_id, lssp_id, cabang, LWK_ID, LSRG_ID, MSBI_PAID
		ORDER BY msbi_beg_date, mspo_policy_no_format
	</select>
	
	<select id="elions.bas.selectReportFollowupBillingPerUserCount" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct user_name, count (report.reg_spaj) total_spaj from(
			select
			    to_char(b.msbi_beg_date, 'dd/mm/yyyy') msbi_beg_date, 
			    to_char(b.msbi_end_date, 'dd/mm/yyyy') msbi_end_date,
			    to_char(b.msbi_due_date, 'dd/mm/yyyy') msbi_due_date,
			    c.mspo_policy_no_format, eka.utils.pemegang(a.reg_spaj) pemegang, a.msfu_urut, 
			    d.lsfu_desc, eka.utils.user_input(a.lus_id) user_name, a.msfu_ket, a.msfu_status, 
			    decode(a.msfu_status, 0, 'Follow Up', 1, 'Closed', '-') status,
			    to_char(a.msfu_create_date, 'dd/mm/yyyy') create_date,
			    a.reg_spaj, a.msbi_tahun_ke, a.msbi_premi_ke, a.msfu_attachment
			from
			    eka.mst_followup a, eka.mst_billing b, eka.mst_policy c, eka.lst_followup d, eka.lst_region e, eka.lst_user_admin f, eka.lst_user g
			where
			    a.reg_spaj = b.reg_spaj
			    and a.msbi_tahun_ke = b.msbi_tahun_ke
			    and a.msbi_premi_ke = b.msbi_premi_ke
			    and a.reg_spaj = c.reg_spaj
			    and a.lsfu_id = d.lsfu_id
			    and c.lca_id = e.lca_id
			    and c.lwk_id = e.lwk_id
			    and c.lsrg_id = e.lsrg_id
			    and e.lar_id = f.lar_id
			    and f.lus_id = g.lus_id
			    <isEqual property="jn_tgl" compareValue="0">
			    	and (b.MSBI_BEG_DATE BETWEEN TO_DATE(#begdate#, 'DD/MM/YYYY') and TO_DATE(#enddate#, 'DD/MM/YYYY'))
			    </isEqual>
			    <isEqual property="jn_tgl" compareValue="1">
			    	and (a.MSFU_CREATE_DATE BETWEEN TO_DATE(#begdate#|| ' 00:00:00', 'DD/MM/YYYY hh24:mi:ss') and TO_DATE(#enddate# || ' 23:59:59', 'DD/MM/YYYY hh24:mi:ss'))
			    </isEqual>
			    <isEqual property="jn_tgl" compareValue="2">
			    	and (b.MSBI_END_DATE BETWEEN TO_DATE(#begdate#, 'DD/MM/YYYY') and TO_DATE(#enddate#, 'DD/MM/YYYY'))
			    </isEqual>
				<isNotEmpty property="cabang">
					<isNotEqual property="cabang" compareValue="ALL" prepend=" AND ">
						g.lca_id = #cabang#
					</isNotEqual>
				</isNotEmpty>
				<isNotEmpty>
					<isEqual property="rep" compareValue="0">
						and a.lus_id = #lus_id#
					</isEqual>
					<isEqual property="rep" compareValue="1">
						<isNotEmpty property="admin">
							<isNotEqual property="admin" compareValue="ALL" prepend=" AND ">
								a.lus_id = #admin#
							</isNotEqual>
						</isNotEmpty>
					</isEqual>
					<isEqual property="rep" compareValue="2">
						<isNotEmpty property="admin">
							<isEqual property="admin" compareValue="ALL" prepend=" AND ">
								a.lus_id in (2475,4180,690,3041)
							</isEqual>
							<isNotEqual property="admin" compareValue="ALL" prepend=" AND ">
								a.lus_id = #admin#
							</isNotEqual>
						</isNotEmpty>
					</isEqual>
				</isNotEmpty>
				<isNotEmpty property="kat">
					<isNotEqual property="kat" compareValue="ALL" prepend=" AND ">
						a.lsfu_id = #kat#
					</isNotEqual>
				</isNotEmpty>
				<isNotEmpty property="stfu">
					<isNotEqual property="stfu" compareValue="2" prepend=" AND ">
						a.msfu_status = #stfu#
					</isNotEqual>
				</isNotEmpty>
			group by
			    b.msbi_beg_date, b.msbi_end_date, b.msbi_due_date, c.mspo_policy_no_format, a.reg_spaj, a.msfu_urut, 
			    d.lsfu_desc, a.lus_id, a.msfu_ket, a.msfu_status, a.msfu_create_date, 
			    a.reg_spaj, a.msbi_tahun_ke, a.msbi_premi_ke, a.msfu_attachment
			order by 
			    b.msbi_beg_date, a.reg_spaj, a.msfu_urut asc
		)report
		group by report.user_name
		order by report.user_name
	</select>
	
	<select id="elions.bas.selectDataEspajBas" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		
		select * from (
			select distinct b.sertifikat no_sertifikat,
			    b.pp_name pemegang_polis,
			    b.no_temp no_espaj,
			    nvl(b.reg_spaj, '-') no_spaj,
			    nvl(c.mspo_policy_no, '-') no_polis,
			    d.lspd_position posisi_dokumen,
			    a.certificate_date tgl_cetak_sertifikat,
			    b.created_date tgl_input_espaj,
			    c.mspo_input_date tgl_input_spaj,
			    nvl((select upper(y.lus_login_name)
			        from eka.mst_position_spaj x, eka.lst_user y
			        where x.lus_id = y.lus_id
			            and x.lspd_id = 218
			            and x.msps_desc like 'TRANSFER KE %'
			            and x.msps_date = (select max(msps_date) from eka.mst_position_spaj where reg_spaj = c.reg_spaj
			                                                and lspd_id = 218 and x.msps_desc like 'TRANSFER KE %')
			            and x.reg_spaj = c.reg_spaj
			    ), '-') user_qa
			from eka.mst_spaj_crt a, eka.mst_spaj_temp b,
			    eka.mst_policy c, eka.lst_document_position d,
			    eka.mst_product_temp g, eka.lst_det_bisnis e,                        
                eka.lst_jn_bank f  
			where a.no_temp = b.no_temp
			    and a.no_policy = b.sertifikat
			    and b.reg_spaj = c.reg_spaj (+)
			    and b.pp_name not like 'TEST%'
			    and c.lspd_id = d.lspd_id (+)
			    and g.lsbs_id = e.lsbs_id
			    and g.lsdbs_number = e.lsdbs_number
			    and e.jn_bank = f.jn_bank
			    and B.FLAG_AKTIF <![CDATA[<>]]> 0
			    <isEqual property="bank" compareValue="43">
					and f.jn_bank = 43
				</isEqual>
				<isEqual property="bank" compareValue="44">
					and f.jn_bank = 44
				</isEqual>
				<isEqual property="bank" compareValue="51">
					and f.jn_bank = 51
				</isEqual>
				and b.created_date between #tanggalAwal# and #tanggalAkhir#+1
			order by b.created_date, a.certificate_date
		)
		where 1 = 1
			<isEqual property="jenis" compareValue="1">
				and user_qa like '-'
			</isEqual>
			<isEqual property="jenis" compareValue="2">
				and user_qa not like '-'
			</isEqual>
	</select>
</sqlMap>