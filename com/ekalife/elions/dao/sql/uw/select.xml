<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap>

<!--
	<cacheModel id="elions.uw.cache.mst_policy" type="LRU" readOnly="true"
		serialize="false">
		<flushInterval hours="8" />
		<property name="cache-size" value="100" />
		<flushOnExecute statement="elions.uw.update.mst_policy"/>
		<flushOnExecute statement="elions.uw.update.mst_policy.posisi"/>
		<flushOnExecute statement="elions.uw.update.mst_policy3"/>
		<flushOnExecute statement="elions.uw.update.backtoBac.mst_policy"/>
		<flushOnExecute statement="elions.uw.update.transUw.mst_policy_position"/>
		<flushOnExecute statement="elions.uw.update.transuw.eka.mst_policy.lssp_id"/>
		<flushOnExecute statement="elions.uw_reinstate.update.mst_policy.lspd_id"/>
		<flushOnExecute statement="elions.bac.insert.mst_policy"/>
	</cacheModel>
-->
	
	<select id="elions.uw.selectRekeningAjs" resultClass="id.co.sinarmaslife.std.model.vo.DropDown" parameterClass="java.util.HashMap">
			select 
	            a.lsrek_id "key", 
	            ('[' || a.lre_acc_no || '] ' || trim(a.lsrek_symbol) || '-' || c.lsbp_nama || ' ' || b.lbn_nama || ' (' || eka.utils.kurs_simbol(a.lku_id) || ')') "value", 
	            c.lsbp_nama "desc"
	        from 
	            eka.lst_rek_ekalife a, eka.lst_bank b, eka.lst_bank_pusat c
	        where 
	            a.lsrek_aktif = 1 and a.lbn_id = b.lbn_id 
	            <isNotNull property="lsbp_id">
	                and b.lsbp_id = #lsbp_id#
	            </isNotNull>
	            <isNull property="lsbp_id">
	                and b.lsbp_id in (8,28,45,61,132,150,151,156,220,224)
	            </isNull>
	            <isNotNull property="rek">
					<!-- and (trim(a.lre_acc_no) like '%'||#rek#
							or rpad(replace(trim(a.lre_acc_no),'.'),13,' ') like '%'||#rek#
							or rpad(replace(trim(a.lre_acc_no),'-'),13,' ') like '%'||#rek#) -->
					and replace(replace(replace(a.lre_acc_no,'-',''),'.',''),' ','') like '%'||#rek#
				</isNotNull>
	            and b.lsbp_id = c.lsbp_id 
	        order by c.lsbp_nama,eka.utils.kurs_simbol(a.lku_id),3,2
	</select>
	
	<select id="elions.uw.selectValidasiProduksiDouble" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(*) FROM EKA.MST_PRODUCTION WHERE REG_SPAJ = rpad(replace(#reg_spaj#,'.'),11,' ') AND MSPRO_PROD_KE = #prod_ke#
	</select>
	
	<select id="elions.uw.selectAdaRider" resultClass="int" parameterClass="string">
		select count(*) from eka.mst_product_insured where lsbs_id <![CDATA[>]]> 300 and reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') and lsbs_id !=822
	</select>

	<select id="elions.uw.selectLstPengecualian" resultClass="java.util.HashMap"
	parameterClass="java.lang.String">
		select lspc_no, lspc_desc from eka.lst_pengecualian@eb
	</select>

	<select id="elions.uw.selectMscoCommLastAgent" parameterClass="java.util.HashMap" resultClass="double">
<!--	select msco_comm from eka.mst_commission where reg_spaj = #reg_spaj# and msbi_tahun_ke = #msbi_tahun_ke# and msbi_premi_ke = #msbi_premi_ke# and msag_id= #msag_id#-->
	 	select msco_comm from eka.mst_commission where reg_spaj = #reg_spaj# and msbi_tahun_ke = #msbi_tahun_ke# and msag_id= #msag_id# and rownum=1
	</select>
	

	<select id="elions.uw.selectcountProdLastAgent" parameterClass="java.util.HashMap" resultClass="int">
		select count(*)
		from eka.mst_commission where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') and msbi_tahun_ke = #tahun_ke# and msbi_premi_ke = #premi_ke# and msag_id= #msag_id#
	</select>

	<select id="elions.uw.selectLastMscoPaid" parameterClass="java.util.HashMap" resultClass="int">
		select max(msco_paid)
		from eka.mst_commission where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') and msbi_tahun_ke = #tahun_ke# and msbi_premi_ke = #premi_ke#
	</select>

	<select id="elions.uw.selectKemarin" resultClass="java.util.Date">
		SELECT eka.ADD_WORKDAYS (SYSDATE, -1) FROM DUAL
	</select>
    
	<select id="elions.uw.selectSumProd" parameterClass="java.util.HashMap" resultClass="int">
		SELECT SUM (DECODE (mspro_jn_prod, 3, -1, 1))
		  FROM eka.mst_production
		 WHERE reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') AND mspro_prod_ke <![CDATA[<=]]> #prod_ke#
	</select>
	
	<select id="elions.uw.selectTglInbox" resultClass="int" parameterClass="string">
		select count(mi_id) from eka.mst_inbox_hist where  to_char(create_date,'dd/MM/yyyy hh24:mi:ss') =  #value#
	</select>

	<select id="elions.uw.selectCekDoubleSPH" parameterClass="string" resultClass="int">
		SELECT COUNT(MSPS_DESC)
		FROM EKA.MST_POSITION_SPAJ
		WHERE REG_SPAJ = rpad(replace(#reg_spaj#,'.'),11,' ')
		  AND MSPS_DESC LIKE '%SPH%'
	</select>

	<select id="elions.uw.selectInfoPosisiTerakhir" parameterClass="string" resultClass="java.util.HashMap">
		SELECT c.lspd_position, d.lssp_status, e.status_accept
		  FROM eka.mst_policy a,
		       eka.mst_insured b,
		       eka.lst_document_position c,
		       eka.lst_policy_status d,
		       eka.lst_status_accept e
		 WHERE a.reg_spaj = RPAD (#value#, 11, ' ')
		   AND a.reg_spaj = b.reg_spaj
		   AND a.lspd_id = c.lspd_id
		   AND a.lssp_id = d.lssp_id
		   AND b.lssa_id = e.lssa_id
	</select>
	
	<select id="elions.uw.selectInfoPosisiPasTerakhir" parameterClass="string" resultClass="java.util.HashMap">
		SELECT c.lspd_position, e.status_accept
		  FROM eka.mst_pas_sms a,
		       eka.lst_document_position c,
		       eka.lst_status_accept e
		 WHERE a.msp_id = #value#
		   AND a.lspd_id = c.lspd_id
		   AND a.lssp_id = e.lssa_id
	</select>
	
	<select id="elions.uw.selectDataPeserta" parameterClass="string" resultClass="java.util.HashMap">
		select c.nama, c.tgl_lahir, b.msap_Address, d.lsdbs_name_sub, c.umur, c.no_reg
			from eka.mst_policy a,
				 eka.mst_address_billing b,
				 eka.mst_peserta c,
				 eka.lst_det_bisnis d
			where a.reg_spaj = b.reg_spaj
			and a.reg_spaj = c.reg_spaj
			and c.lsbs_id = d.lsbs_id
			and c.lsdbs_number = d.lsdbs_number
			and a.reg_spaj = RPAD (#value#, 11, ' ')
	</select>

	<select id="elions.uw.selectDaftarRiderEndors" parameterClass="string" resultClass="java.util.HashMap">
		SELECT reg_spaj, lsbs_id bisnis, lsdbs_number DETBISNIS FROM eka.mst_product_ins_end WHERE reg_spaj = (SELECT reg_spaj FROM eka.mst_endors WHERE msen_endors_no = #value#)
		MINUS
		SELECT reg_spaj, lsbs_id bisnis, lsdbs_number DETBISNIS FROM eka.mst_product_insured WHERE reg_spaj = (SELECT reg_spaj FROM eka.mst_endors WHERE msen_endors_no = #value#)
	</select>
	
	<select id="elions.uw.selectAutoRider" parameterClass="string" resultClass="java.util.HashMap">
		select msen_endors_no, reg_spaj, msen_auto_rider AUTORID from eka.mst_endors where msen_endors_no = #value#
	</select>

	<select id="elions.uw.selectRateYangDiberikan" parameterClass="string" resultClass="java.util.HashMap">
		select a.*, b.lku_id, c.mste_beg_date, d.lsbs_id, d.lsdbs_number from (
			select 0 flag_bulanan, reg_spaj, mpr_jangka_invest mgi, mpr_rate rate, mpr_deposit premi from eka.mst_powersave_ro where reg_spaj = rpad(replace(#value#,'.'),11,' ') and mps_kode = 5
			union
			select flag_bulanan, reg_spaj, msl_mgi mgi, msl_rate rate, sum(msl_premi) premi from eka.mst_slink where reg_spaj = rpad(replace(#value#,'.'),11,' ') and msl_new = 1 group by flag_bulanan, msl_rate, msl_mgi, reg_spaj
			union
			select flag_bulanan, reg_spaj, mss_mgi mgi, mss_rate rate, mss_premi premi from eka.mst_ssave where reg_spaj = rpad(replace(#value#,'.'),11,' ') and mss_kode = 5
		) a, eka.mst_policy b, eka.mst_insured c, eka.mst_product_insured d
		where a.reg_spaj = b.reg_spaj
		and b.reg_spaj = c.reg_spaj
		and c.mste_insured_no = d.mste_insured_no
		and c.reg_spaj = d.reg_spaj
		and d.lsbs_id <![CDATA[<]]> 300
	</select>

	<select id="elions.uw.selectBusinessName" resultClass="string" parameterClass="string">
		select eka.f_lsdbs(a.reg_spaj, a.lsbs_id, a.lsdbs_number) lsdbs_name
		from   eka.mst_product_insured a,
			   eka.lst_det_bisnis b
		where a.lsbs_id = b.lsbs_id
		  and a.lsdbs_number = b.lsdbs_number
		  and a.lsbs_id <![CDATA[<]]> 300
		  and a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>

	<select id="elions.uw.selectJenisReferral" parameterClass="string" resultClass="string">
		select jn_nasabah.nm_jenis
			from eka.mst_nasabah nasabah,
				 eka.lst_jn_nasabah jn_nasabah
			where nasabah.jn_nasabah = jn_nasabah.jn_nasabah
			  and nasabah.mns_kd_nasabah = #mns_kd_nasabah#
	</select>

	<select id="elions.uw.selectEmailCabangBankSinarmas" parameterClass="string" resultClass="string">
		SELECT c.email_cab
		  FROM eka.mst_policy a, eka.mst_reff_bii b, eka.lst_cabang_bii c
		 WHERE a.reg_spaj = RPAD (#value#, 11, ' ') 
		   AND a.reg_spaj = b.reg_spaj AND b.lcb_no = c.lcb_no
		   and b.level_id = 4 and b.no_urut = (select max(no_urut) from eka.mst_reff_bii where level_id = 4 and reg_spaj = b.reg_spaj)
	</select>

	<select id="elions.uw.selectEmailAoBankSinarmas" parameterClass="string" resultClass="string">
		SELECT c.mspe_email
		FROM eka.mst_policy a,
			 eka.mst_agent b,
			 eka.mst_client_new c
		WHERE a.mspo_ao = b.msag_id
		and b.mcl_id = c.mcl_id
		and a.reg_spaj = RPAD (#value#, 11, ' ')
	</select>

	<select id="elions.uw.selectSudahProsesNab" parameterClass="string" resultClass="date">
		SELECT mtu_tgl_nab
		  FROM eka.mst_trans_ulink
		 WHERE reg_spaj = RPAD (#value#, 11, ' ')
		 and mu_ke = 1
		UNION
		SELECT msl_tgl_nab
		  FROM eka.mst_slink
		 WHERE reg_spaj = RPAD (#value#, 11, ' ')
		   AND msl_kode = 5
		   AND msl_no = 1
	</select>

	<select id="elions.uw.selectNpwpAgen" parameterClass="string" resultClass="string">
		SELECT msag_npwp
  		FROM eka.mst_agent
 		WHERE msag_id = #value#
 		AND msag_npwp not in ('000000000000000')
 	</select>

	 <select id="elions.uw.selectNoPB" parameterClass="string" resultClass="string">
	 	select replace(substr(msps_desc,7,10),'')from eka.mst_position_spaj
	 	where reg_spaj=#spaj# and msps_desc like 'NO PB%'
	 </select>
	 
	 <select id="elions.uw.selectMspsDescBasedSpaj" parameterClass="string" resultClass="string">
	  select msps_desc from eka.mst_position_spaj where reg_spaj = #spaj#
	  </select>
	  
	  	 <select id="elions.uw.selectMspsDescBasedSpajAndOtorisasi" parameterClass="string" resultClass="string">
	  SELECT msps_desc FROM eka.mst_position_spaj WHERE reg_spaj = #spaj#
  AND UPPER(msps_desc) = 'OTORISASI INPUT SPAJ' AND rownum = 1
	  </select>
	  
	  <select id="elions.uw.selectTanggalCetakSertifikatAwal" parameterClass="java.util.HashMap" resultClass="date">
	  select msps_date from eka.mst_position_spaj where reg_spaj = #spaj# and UPPER(msps_desc) like ('%'||#msps_desc#||'%')
	  </select>
	  
	<select id="elions.uw.selectStatusAksep" parameterClass="string" resultClass="int">
		select lssa_id from eka.mst_insured where reg_spaj = RPAD (#value#, 11, ' ')
	</select>
	
	<select id="elions.uw.selectMstProSave" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.ProSaveBayar">
		SELECT a.reg_spaj, b.mspo_policy_no, b.mspo_policy_no_format, a.mpb_bayar_id, a.mpb_jenis, a.mpb_flag_bs, a.mpb_rekening, d.nama_cabang, eka.f_lsdbs(a.reg_spaj, f.lsbs_id, f.lsdbs_number) lsdbs_name, h.mcl_first as pemegang, i.mcl_first as tertanggung, 
			   a.mpb_up, a.mpb_prm_deposit, a.mpb_bunga, ((case when a.mpb_tambah is null then 0 else a.mpb_tambah end) + a.mpb_jum_bayar) mpb_jum_bayar, 
			   a.mpb_beg_period, a.mpb_end_period, a.mpb_rate, a.mpb_paid_date,
			   DECODE (a.mpb_flag_bs,1,'BELUM BAYAR',2,'SUDAH BAYAR') as status,
			   j.lus_login_name, k.lsbp_nama, l.lku_symbol, (case when a.mpb_tambah is null then 0 else a.mpb_tambah end) mpb_tambah
		  FROM eka.mst_prosave_bayar a,
		       eka.mst_policy b,
			   eka.mst_reff_bii c,
		       eka.lst_cabang_bii d,
			   eka.mst_insured e,
			   eka.mst_product_insured f,
			   eka.lst_det_bisnis g,
			   eka.mst_client_new h,
			   eka.mst_client_new i,
			   eka.lst_user j,
			   eka.lst_bank_pusat k,
			   eka.lst_kurs l
		 WHERE a.reg_spaj = b.reg_spaj
		   AND b.reg_spaj = c.reg_spaj
		   and c.level_id = 4 and c.no_urut = (select max(no_urut) from eka.mst_reff_bii where level_id = 4 and reg_spaj = c.reg_spaj)
		   AND b.reg_spaj = e.reg_spaj
		   AND e.reg_spaj = f.reg_spaj
		   AND b.mspo_policy_holder = h.mcl_id
		   AND e.mste_insured = i.mcl_id
		   AND f.lsbs_id = g.lsbs_id
		   AND f.lsdbs_number = g.lsdbs_number
		   AND c.lcb_no = d.lcb_no
		   AND a.lus_id = j.lus_id
		   AND a.lsbp_id = k.lsbp_id
		   AND a.lku_id = l.lku_id
		   AND d.jenis = 3
		   <isNotEqual property="mpb_flag_bs" compareValue="-1">
		   AND a.mpb_flag_bs = #mpb_flag_bs#
		   </isNotEqual>
		   <isEqual property="mpb_flag_bs" compareValue="-1">
		   AND a.mpb_flag_bs in (1,2)
		   </isEqual>
		   <isNotEmpty property="lcb_no">
		   AND d.lcb_no = RPAD (REPLACE (#lcb_no#, '.'), 5, ' ')
		   </isNotEmpty>
		   AND a.mpb_paid_date between #startDate# AND #endDate#
		 ORDER BY k.lsbp_nama
	</select>
	
	<select id="elions.uw.selectCheckTotalUsedMstDrek" parameterClass="java.util.HashMap" resultClass="double">
		select drek.nilai_trx - nvl((select sum(drdet.jumlah) from eka.mst_drek_det drdet where drdet.no_trx = drek.no_trx
				and replace(replace(replace(trim(drek.norek_ajs),'.',''),'-',''),' ','') = replace(replace(replace(trim(drdet.norek_ajs),'.',''),'-',''),' ','')
		    	and (drdet.flag_active is null or drdet.flag_active=1)
		    	and drdet.jenis = drek.jenis
		    	<isNotEmpty property="payment_id">
					and drdet.payment_id != #payment_id#
				</isNotEmpty>
				<isNotEmpty property="no_spaj">
					and drdet.no_spaj = #no_spaj#
				</isNotEmpty>
				<isNotEmpty property="no_ke">
					and drdet.no_ke != #no_ke#
				</isNotEmpty>
			),0) 
		from eka.mst_drek drek        
		where no_trx = #noTrx#
		    and jenis = 'K'
	</select>
	
	<select id="elions.uw.selectMstDrek" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Drek">
		SELECT  distinct drek.norek_ajs, rbp.lsbp_nama bank_pusat_ajs, rb.lbn_nama bank_ajs, drek.tgl_trx, cab.nama_cab, drek.no_trx, drek.lsbp_id, drek.jenis,
                 drek.lku_id, drek.nilai_trx, drek.no_spaj,
                 drek.tgl_input, drek.flag_proses, drek.flag_update, drek.tgl_proses,
                 drek.user_input, drek.user_proses, drek.ket, drek.kode_cab,
                 bank.lsbp_nama, kurs.lku_symbol, user_input.lus_full_name nama_input,
                 user_proses.lus_full_name nama_proses, flag_recheck, ket_update, pol.mspo_no_blanko, drek.flag_tunggal_gabungan,
                 NVL (drek.nilai_trx - drt.total,drek.nilai_trx) jumlah
		    FROM eka.mst_drek drek,
		         eka.lst_bank_pusat bank,
		         eka.lst_kurs kurs,
		         eka.lst_user user_input,
		         eka.lst_user user_proses,
		         eka.cab_bsm cab,
				 eka.lst_rek_ekalife r,
				 eka.lst_bank rb,
				 eka.lst_bank_pusat rbp,
				 eka.mst_policy pol,
		         (SELECT SUM (drdet.jumlah) as total , jenis , norek_ajs, no_trx
		                 FROM eka.mst_drek_det drdet
		                WHERE    (drdet.flag_active IS NULL OR drdet.flag_active = 1)
		                group by norek_ajs, no_trx, jenis) drt
  		   WHERE drek.tgl_trx between #startDate# AND #endDate#
  		   	 AND drek.nilai_trx between #startNominal# AND #endNominal#
		     AND drek.lsbp_id = bank.lsbp_id(+)
	         AND drek.lku_id = kurs.lku_id(+)
	         AND drek.jenis = drt.jenis (+) 
	         AND replace(replace(replace(trim(drek.norek_ajs),'.',''),'-',''),' ','') 
	                = replace(replace(replace(trim(drt.norek_ajs(+)),'.',''),'-',''),' ','')
	         AND  drek.no_trx= drt.no_trx (+) 
	         AND drek.user_input = user_input.lus_id(+)
	         AND drek.user_proses = user_proses.lus_id(+)
	         AND drek.kode_cab = cab.kode(+)
	         AND drek.norek_ajs =
	                REPLACE (
	                   REPLACE (REPLACE (REPLACE (r.lre_acc_no, '.'), '-'), 'SL'),
	                   ' ')
	         AND r.lbn_id = rb.lbn_id
	         AND rb.lsbp_id = rbp.lsbp_id
	         AND drek.no_spaj = pol.reg_spaj(+)
     		<isNotEmpty property="kodok">
				AND cab.kode = RPAD (#kodok#, 3, ' ')
			</isNotEmpty>
			<isNotEqual property="lsrek_id" compareValue="-1">
				AND r.lsrek_id in (#lsrek_id#, 241)
			</isNotEqual>
			 AND drek.jenis = 'K'
		ORDER BY drek.norek_ajs, rbp.lsbp_nama, rb.lbn_nama, drek.tgl_trx, cab.nama_cab
	</select>
	
	
	<select id="elions.uw.selectMstSummaryWsDet" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Company_ws">
	select b.mcl_first nama_perusahaan,a.mcl_id, trunc(a.tgl_invoice) tgl_invoice,a.jumlah_invoice, c.telp_kantor, d.lus_admin_ws, c.nama_lengkap,
    e.lus_full_name nama_admin, c.email
        from eka.mst_company_ws a,
        eka.mst_client b,
        eka.mst_company_contact c,
        eka.mst_company d,
        eka.lst_user e
        where 
        a.mcl_id = b.mcl_id and
        a.mcl_id = c.mcl_id and
        d.mcl_id = c.mcl_id and
        d.lus_admin_ws = e.lus_id
        <isNotNull property="mcl_id"> 
        and a.mcl_id = #mcl_id#
        </isNotNull>
       <isEqual property="jenis" compareValue="1">
         and tgl_invoice+15 <![CDATA[<=]]> sysdate
		 and tgl_bayar is null
       </isEqual>
         <isEqual property="jenis" compareValue="2">
         and tgl_bayar is null
       </isEqual>
         <isEqual property="jenis" compareValue="3">
         and tgl_bayar is not null
       </isEqual>
	</select>

	<select id="elions.uw.selectLstKurs" resultClass="id.co.sinarmaslife.std.model.vo.DropDown">
	select lku_id key, lku_symbol value from eka.lst_kurs
	</select>
	
	<select id="elions.uw.selectMstPayment" resultClass="com.ekalife.elions.model.Payment" parameterClass="string">
		select a.*, b.lku_symbol ,d.lbn_nama
		from eka.mst_payment a, eka.lst_kurs b, eka.lst_rek_ekalife c, eka.lst_bank d 
		where mspa_payment_id = #mspa_payment_id# 
		and a.lku_id = b.lku_id
		and a.lsrek_id = c.lsrek_id
		and c.lbn_id = d.lbn_id
	</select>
	
	<select id="elions.uw.selectMstDepositPremium" resultClass="com.ekalife.elions.model.Payment" parameterClass="string">
		select d.mspa_payment_id mspa_payment_id,a.reg_spaj, a.msdp_number, a.msdp_pay_date mspa_pay_date, a.msdp_payment mspa_payment, a.msdp_no_pre mspa_no_pre, a.msdp_no_voucher mspa_voucher,a.msdp_input_date mspa_input_date, a.msdp_no_rek mspa_no_rek, a.lsjb_id, a.client_bank, a.lku_id, a.lus_id, a.lsrek_id, b.lku_symbol, c.lre_acc_no, e.lbn_nama
		from eka.mst_deposit_premium a, eka.lst_kurs b, eka.lst_rek_ekalife c, eka.mst_payment d, eka.lst_bank e
		where a.lku_id = b.lku_id
		AND a.lsrek_id = c.lsrek_id
		AND a.msdp_number = d.msdp_number(+)
		AND a.reg_spaj = d.reg_spaj(+)
		AND c.lbn_id = e.lbn_id
		AND a.REG_SPAJ = #reg_spaj#
	</select>

	<select id="elions.uw.selectListPayment" resultClass="com.ekalife.elions.model.Payment" parameterClass="string">
		select tab.* 
		from (
			  (select a.mspa_payment_id mspa_payment_id, a.reg_spaj, a.msdp_number, a.mspa_pay_date mspa_pay_date, a.mspa_payment mspa_payment, a.mspa_no_pre mspa_no_pre, a.mspa_no_voucher mspa_voucher, a.mspa_input_date mspa_input_date, a.mspa_no_rek mspa_no_rek, a.lsjb_id, a.client_bank, a.lku_id, a.lus_id, a.lsrek_id, b.lku_symbol, c.lre_acc_no, d.lbn_nama
			  from eka.mst_payment a, eka.lst_kurs b, eka.lst_rek_ekalife c, eka.lst_bank d, eka.mst_tbank e
			  where a.lku_id = b.lku_id
			  AND a.REG_SPAJ = #reg_spaj#
			  AND a.lsrek_id = c.lsrek_id
			  AND a.msdp_number is null
			  AND c.lbn_id = d.lbn_id
			  AND a.mspa_no_pre = e.no_pre
			  AND e.position != 4
			  AND (nvl(a.mspa_payment_id,' ') not in (select mvp_payment_id from eka.mst_void_payment where flag !=1) )
			  )
			  UNION
			  (select d.mspa_payment_id mspa_payment_id,a.reg_spaj, a.msdp_number, a.msdp_pay_date mspa_pay_date, a.msdp_payment mspa_payment, a.msdp_no_pre mspa_no_pre, a.msdp_no_voucher mspa_voucher,a.msdp_input_date mspa_input_date, a.msdp_no_rek mspa_no_rek, a.lsjb_id, a.client_bank, a.lku_id, a.lus_id, a.lsrek_id, b.lku_symbol, c.lre_acc_no, e.lbn_nama
			  from eka.mst_deposit_premium a, eka.lst_kurs b, eka.lst_rek_ekalife c, eka.mst_payment d, eka.lst_bank e, eka.mst_tbank f
			  where a.lku_id = b.lku_id
			  AND a.lsrek_id = c.lsrek_id
			  AND a.msdp_number = d.msdp_number(+)
			  AND a.reg_spaj = d.reg_spaj(+)
			  AND c.lbn_id = e.lbn_id
			  AND a.REG_SPAJ = #reg_spaj#
			  AND a.msdp_no_pre = f.no_pre
			  AND f.position != 4
			  AND (nvl(d.mspa_payment_id,' ') not in (select mvp_payment_id from eka.mst_void_payment where flag !=1) ) 
			  )
			 )tab
		order by mspa_pay_date
	</select> 

	<select id="elions.uw.selectMstPolicyByCode" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT a.*, SUBSTR (a.reg_spaj, 1, 2)
		       || '.'
		       || SUBSTR (a.reg_spaj, 3, 4)
		       || '.'
		       || SUBSTR (a.reg_spaj, 7) SPAJ_FORMATTED,
		       a.mspo_policy_no_format POLICY_FORMATTED
			FROM eka.mst_policy a
		<isEqual property="tipe" compareValue="1">	
			WHERE  a.REG_SPAJ =#nomor#
		</isEqual>
		<isEqual property="tipe" compareValue="2">	
			WHERE  a.MSPO_POLICY_NO = #nomor#
		</isEqual>
	</select>

	<select id="elions.uw.selectPrintCabangAtauPusat" parameterClass="string" resultClass="int">
		SELECT b.flag_print_cabang
		  FROM eka.mst_policy a, eka.lst_wakil b
		 WHERE a.reg_spaj = RPAD (#value#, 11, ' ')
		   AND a.lca_id = b.lca_id
		   AND a.lwk_id = b.lwk_id
	</select>

	<select id="elions.uw.selectJumlahTransferPbp" parameterClass="string" resultClass="int">
		SELECT COUNT (*)
		  FROM eka.mst_pbp
		 WHERE spaj_bayar = RPAD (#value#, 11, ' ') AND flag_transfer = 1	
	</select>

	<select id="elions.uw.selectValidasiTransferPbp" parameterClass="string" resultClass="int">
		select mste_flag_cc from eka.mst_insured where reg_spaj = RPAD (#value#, 11, ' ')	
	</select>

	<select id="elions.uw.selectValidasiPbp" parameterClass="string" resultClass="int">
		SELECT flag_transfer
		  FROM eka.mst_pbp
		 WHERE spaj_bayar = RPAD (#value#, 11, ' ') AND ROWNUM = 1	
	</select>

	<select id="elions.uw.selectPbp" parameterClass="string" resultClass="com.ekalife.elions.model.Pbp">
		SELECT   RPAD (#value#, 11, ' ') spaj_bayar, o.NO premi_ke, a.reg_spaj,
		         a.tgl_jttempo, a.flag_cair
		    FROM (SELECT ROWNUM + 1 NO
		            FROM eka.mst_policy
		           WHERE ROWNUM <![CDATA[<]]> 5) o,
		         (SELECT *
		            FROM eka.mst_pbp
		           WHERE spaj_bayar = RPAD (#value#, 11, ' ')) a
		   WHERE o.NO = a.premi_ke(+)
		ORDER BY 2
	</select>

	<select id="elions.uw.selectInformasiPbp" parameterClass="string" resultClass="com.ekalife.elions.model.Powersave">
		SELECT pol.reg_spaj, pol.mspo_policy_no_format, client.mcl_first, eka.f_lsdbs(prod.reg_spaj, prod.lsbs_id, prod.lsdbs_number) lsdbs_name,
		       p.mps_deposit_date, p.mps_roll_over, p.mps_jangka_inv, p.mps_rate,
		       p.mps_prm_deposit, p.mps_prm_interest, p.mps_input_date, p.lus_id,
		       u.lus_login_name, p.mps_batas_date, prod.lsbs_id, prod.lsdbs_number, ins.mste_beg_date
		  FROM eka.mst_policy pol,
		       eka.mst_insured ins,
		       eka.mst_product_insured prod,
		       eka.mst_client_new client,
		       eka.lst_det_bisnis detbis,
		       eka.mst_powersave_proses p,
		       eka.lst_user u
		 WHERE pol.reg_spaj = RPAD (replace(#value#,'.',''), 11, ' ')
		   AND pol.reg_spaj = ins.reg_spaj
		   AND ins.mste_insured_no = prod.mste_insured_no
		   AND ins.reg_spaj = prod.reg_spaj
		   AND prod.lsbs_id = detbis.lsbs_id
		   AND prod.lsdbs_number = detbis.lsdbs_number
		   AND pol.mspo_policy_holder = client.mcl_id
		   AND pol.lus_id = u.lus_id
		   AND pol.reg_spaj = p.reg_spaj(+)
		   AND p.mps_kode(+) = 5
		   AND prod.lsbs_id <![CDATA[<]]> 300	
	</select>

	<select id="elions.uw.selectUsiaTertanggung" parameterClass="string" resultClass="int">
		select mste_age from eka.mst_insured where reg_spaj= RPAD (#value#, 11, ' ') 
	</select>
	
	<select id="elions.uw.selectJumlahHariMGI" parameterClass="java.util.HashMap" resultClass="int">
		select ( to_date(#end_date#,'dd/mm/yyyy') - to_date(#beg_date#,'dd/mm/yyyy') )+1 from dual
	</select>
	
	<select id="elions.uw.selectTotalBunga" parameterClass="java.util.HashMap" resultClass="double">
		select (#rate#/100) * #premi# * ((to_date(#end_date#,'dd/mm/yyyy') - to_date(#beg_date#,'dd/mm/yyyy')+1)/365) from dual	
	</select>

	<select id="elions.uw.selectTotalPremiStableLink" parameterClass="string" resultClass="double">
		SELECT SUM (msl_premi)
		  FROM eka.mst_slink
		 WHERE reg_spaj = RPAD (#value#, 11, ' ') AND msl_new = 1	
	</select>

	<select id="elions.uw.selectKomisiPenutup" parameterClass="java.util.HashMap" resultClass="double">
		SELECT msco_comm
		  FROM eka.mst_commission
		 WHERE reg_spaj = RPAD (#reg_spaj#, 11, ' ')
		   AND lev_comm = 4
		   AND msbi_tahun_ke = #tahun_ke#
		   AND msbi_premi_ke = #premi_ke#
	</select>

	<select id="elions.uw.selectKomisiPenutupRider" parameterClass="java.util.HashMap" resultClass="double">
		SELECT SUM (komisi)
		  FROM eka.mst_comm_rider
		 WHERE reg_spaj = RPAD (#reg_spaj#, 11, ' ')
		   AND level_id = 4
		   AND msbi_tahun_ke = #tahun_ke#
		   AND msbi_premi_ke = #premi_ke#
	</select>

	<select id="elions.uw.selectSimultanStableLink" parameterClass="string" resultClass="string">
		SELECT   p.mspo_policy_no
		    FROM (SELECT *
		            FROM eka.mst_simultaneous
		           WHERE reg_spaj <![CDATA[<>]]> RPAD (#value#, 11, ' ') 
				     AND id_simultan =
		                       (SELECT distinct id_simultan
		                          FROM eka.mst_simultaneous
		                         WHERE reg_spaj = RPAD (#value#, 11, ' ') AND mssm_pemegang = 1)
		             AND mssm_pemegang = 1) simultan_pp,
		         (SELECT *
		            FROM eka.mst_simultaneous
		           WHERE reg_spaj <![CDATA[<>]]> RPAD (#value#, 11, ' ') 
				     AND id_simultan =
		                       (SELECT distinct id_simultan
		                          FROM eka.mst_simultaneous
		                         WHERE reg_spaj = RPAD (#value#, 11, ' ') AND mssm_pemegang = 0)
		             AND mssm_pemegang = 0) simultan_tt,
		         eka.mst_policy p,
		         eka.mst_insured b,
		         eka.mst_product_insured c
		   WHERE simultan_pp.reg_spaj = simultan_tt.reg_spaj
		     AND simultan_pp.reg_spaj = p.reg_spaj
		     AND p.reg_spaj = b.reg_spaj
		     AND b.mste_insured_no = c.mste_insured_no
		     AND b.reg_spaj = c.reg_spaj
		     AND c.lsbs_id in (164,174)
		     AND rownum = 1
		ORDER BY b.mste_beg_date
	</select>

	<select id="elions.uw.selectPolisPowersaveDMTM" parameterClass="string" resultClass="java.util.HashMap">
		SELECT pol.mspo_policy_no_format, kurs.lku_symbol, prod.mspr_tsi,
			   pp.mcl_first || decode(pp.mcl_gelar,null,'',', '||pp.mcl_gelar) pp_nama, pol.mspo_age pp_umur, 
			   tt.mcl_first || decode(tt.mcl_gelar,null,'',', '||tt.mcl_gelar) tt_nama, ins.mste_age tt_umur,
			   pp_almt.alamat_rumah, trim(nvl(pp_almt.kota_rumah,'')||' '||nvl(pp_almt.kd_pos_rumah,'')) kota_rumah,
			   (to_char(ins.mste_beg_date, 'dd/mm/yyyy') || ' s/d ' || to_char(ins.mste_end_date, 'dd/mm/yyyy')) masa_asuransi,
		       prod.mspr_premium, psave.mps_jangka_inv, psave.mps_rate,
		       psave.mps_prm_interest,
		       (psave.mps_prm_deposit + psave.mps_prm_interest) nilai_tunai
		  FROM eka.mst_policy pol,
		       eka.mst_insured ins,
		       eka.mst_product_insured prod,
		       eka.mst_client_new pp,
		       eka.mst_client_new tt,
		       eka.mst_address_new pp_almt,
		       eka.lst_kurs kurs,
		       eka.mst_powersave_proses psave
		 WHERE pol.reg_spaj = ins.reg_spaj
		   AND ins.mste_insured_no = prod.mste_insured_no
		   AND ins.reg_spaj = prod.reg_spaj
		   AND pol.mspo_policy_holder = pp.mcl_id
		   AND ins.mste_insured = tt.mcl_id
		   AND pp.mcl_id = pp_almt.mcl_id
		   AND pol.lku_id = kurs.lku_id
		   AND pol.reg_spaj = psave.reg_spaj
		   AND psave.mps_kode = 5   
		   AND pol.reg_spaj = RPAD (#value#, 11, ' ')
	</select>
	
	<select id="elions.uw.selectPolisPas" parameterClass="string" resultClass="java.util.HashMap">
		select d.no_kartu, a.reg_spaj, a.mspo_policy_no, a.mspo_policy_no_format, h.lscb_pay_mode, 
               e.mcl_first nama_pp, a.mspo_age usia_pp, e.mspe_date_birth tgl_lahir_pp,
               f.mcl_first nama_tt, b.mste_age usia_tt, f.mspe_date_birth tgl_lahir_tt,
               c.mspr_beg_date, d.msp_address_1 alamat, c.mspr_tsi, c.mspr_premium, g.lku_symbol,
               (case when c.lsbs_id = 187 then decode(c.lsdbs_number,1,'PERDANA',2,'SINGLE',
			      3,'CERIA',4,'IDEAL',5,'BUSINESS PARTNER',11,'PERDANA',12,'SINGLE',13,'CERIA',14,'IDEAL')
			      when c.lsbs_id = 205 then decode(c.lsdbs_number,1,'PERDANA',2,'SINGLE',
                  3,'CERIA',4,'IDEAL',5,'PERDANA',6,'SINGLE',7,'CERIA',8,'IDEAL') 
                  else ''
                  end) paket,
			   h.lscb_print, jenis_pas,msag_id
        from eka.mst_policy a,
             eka.mst_insured b,
             eka.mst_product_insured c,
             eka.mst_pas_sms d,
             eka.mst_client_new e,
             eka.mst_client_new f,
             eka.lst_kurs g,
             eka.lst_pay_mode h
        where a.reg_spaj = b.reg_spaj
        and a.reg_spaj = c.reg_Spaj
        and a.reg_spaj = d.reg_spaj
        and a.mspo_policy_holder = e.mcl_id
        and b.mste_insured = f.mcl_id
        and a.lku_id = g.lku_id
        and a.lscb_id = h.lscb_id
		and c.lsbs_id <![CDATA[<]]>300
		and a.reg_spaj = RPAD (#value#, 11, ' ')
		and (d.MSP_FIRE_JENIS is null or d.MSP_FIRE_JENIS=0)
	</select>
	
	<select id="elions.uw.selectPolisBiasa" parameterClass="string" resultClass="java.util.HashMap">
		select a.reg_spaj, a.mspo_policy_no, a.mspo_policy_no_format, h.lscb_pay_mode, 
               e.mcl_first nama_pp, a.mspo_age usia_pp, e.mspe_date_birth tgl_lahir_pp,
               f.mcl_first nama_tt, b.mste_age usia_tt, f.mspe_date_birth tgl_lahir_tt,
               c.mspr_beg_date, d.alamat_rumah alamat, c.mspr_tsi, c.mspr_premium, g.lku_symbol, h.lscb_print,
               D.KOTA_RUMAH ||', '||d.KD_POS_RUMAH kode_pos
        from eka.mst_policy a,
             eka.mst_insured b,
             eka.mst_product_insured c,
             eka.mst_address_new d,
             eka.mst_client_new e,
             eka.mst_client_new f,
             eka.lst_kurs g,
             eka.lst_pay_mode h
        where a.reg_spaj = b.reg_spaj
        and a.reg_spaj = c.reg_Spaj
        and a.mspo_policy_holder = e.mcl_id
        and e.mcl_id = d.mcl_id
        and b.mste_insured = f.mcl_id
        and a.lku_id = g.lku_id
        and a.lscb_id = h.lscb_id
		and c.lsbs_id <![CDATA[<]]>300
		and a.reg_spaj = RPAD (#value#, 11, ' ')
	</select>
	
	<select id="elions.uw.selectRiderPolisPas" parameterClass="string" resultClass="java.util.HashMap">
		select decode(a.lsbs_id, 824, 'ASURANSI DEMAM BERDARAH',b.lsdbs_name) lsdbs_name,
			   decode(a.lsbs_id, 824, 'GRATIS',a.mspr_premium) premi
		from eka.mst_product_insured a,
			 eka.lst_det_bisnis b
		where a.lsbs_id = b.lsbs_id
		and a.lsdbs_number = b.lsdbs_number 
		and a.lsbs_id between 800 and 899
		and a.reg_spaj = RPAD (#value#, 11, ' ')
	</select>

	<select id="elions.uw.selectCekAgenExpired" parameterClass="java.util.HashMap" resultClass="int">
		select (case when msag_berlaku <![CDATA[<]]> #tanggal# then 0 else 1 end) berlaku 
		from eka.mst_agent where msag_id = #msag_id# and msag_active = 1
	</select>

	<select id="elions.uw.selectTotalReas" parameterClass="string" resultClass="double">
		SELECT distinct (  NVL (reas_life, 0)
		        + NVL (reas_ssp, 0)
		        + NVL (reas_pa_in, 0)
		        + NVL (reas_pa_rd, 0)
		        + NVL (reas_pk_in, 0)
		        + NVL (reas_pk_rd, 0)
		        + NVL (reas_ssh, 0)
		        + NVL (reas_cash, 0)
		        + NVL (reas_tpd, 0)
		        + NVL (reas_wpd, 0)
		        + NVL ((SELECT SUM (reas)
		                  FROM eka.m_reas_temp_new
		                 WHERE reg_spaj = #value#), 0)
		       ) total_reas
		  FROM eka.m_reas_temp
		 WHERE reg_spaj = #value#	
	</select>

	<select id="elions.uw.selectTotalPremiNewBusiness" parameterClass="string" resultClass="double">
		SELECT SUM (msdb_premium)
		  FROM eka.mst_billing a, eka.mst_det_billing b
		 WHERE a.reg_spaj = RPAD (#value#, 11, ' ')
		   AND a.reg_spaj = b.reg_spaj
		   AND a.msbi_tahun_ke = b.msbi_tahun_ke
		   AND a.msbi_premi_ke = b.msbi_premi_ke
		   AND a.msbi_beg_date =
		          (SELECT msbi_beg_date
		             FROM eka.mst_billing
		            WHERE reg_spaj = a.reg_spaj
		              AND msbi_tahun_ke = 1
		              AND msbi_premi_ke = 1)	
	</select>

	<select id="elions.uw.selectDaftarKomisi" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT   DECODE (a.lsco_jenis,1, 'Regional', 2, 'Bancassurance', 3, 'Agency', 4, 'Hybrid', '') distribusi,
		         a.lsbs_id, a.lsdbs_number, c.lsbs_name, d.lsdbs_name,
		         DECODE (a.lsco_year, 0, 'Komisi Top-Up', 'Komisi Pokok Tahun ' || a.lsco_year) premi,
		         b.lku_symbol, a.lsco_date, e.lscb_pay_mode, a.lsco_comm,
		         a.lsco_bonus, c.lsgb_id, a.lscb_id, a.lsco_year, c.lsbs_jenis
		    FROM eka.lst_comm_new a,
		         eka.lst_kurs b,
		         eka.lst_bisnis c,
		         eka.lst_det_bisnis d,
		         eka.lst_pay_mode e
		   WHERE a.lsco_date =
		            (SELECT MAX (lsco_date)
		               FROM eka.lst_comm_new
		              WHERE lsco_jenis = a.lsco_jenis
		                AND lsbs_id = a.lsbs_id
		                AND lsdbs_number = a.lsdbs_number
		                AND lscb_id = a.lscb_id
		                AND lsco_insper = a.lsco_insper
		                AND lku_id = a.lku_id
		                AND lev_comm = a.lev_comm
		                AND lsco_year = a.lsco_year)
		     AND a.lku_id = b.lku_id
		     AND a.lsbs_id = c.lsbs_id
		     AND a.lsbs_id = d.lsbs_id
		     AND a.lsdbs_number = d.lsdbs_number
		     AND a.lsco_jenis = #dist#
		     AND a.lsbs_id = #lsbs#
		     AND a.lsdbs_number = #lsdbs#
		     AND a.lev_comm = 4
		     AND a.lscb_id = e.lscb_id
		ORDER BY a.lsco_jenis,
		         a.lsbs_id,
		         a.lsdbs_number,
		         a.lscb_id,
		         a.lku_id,
		         a.lsco_year	
	</select>

	<select id="elions.uw.selectDaftarProdukKomisi" resultClass="id.co.sinarmaslife.std.model.vo.DropDown" parameterClass="string">
		SELECT   (a.lsbs_id||'~'||a.lsdbs_number) key, c.lsdbs_name value
		    FROM eka.lst_comm_new a, eka.lst_bisnis b, eka.lst_det_bisnis c
		   WHERE a.lsbs_id = b.lsbs_id
		     AND a.lsbs_id = c.lsbs_id
		     AND a.lsdbs_number = c.lsdbs_number
		     AND b.lsbs_active = 1
		     AND c.lsdbs_aktif = 1
			 AND b.lsbs_id <![CDATA[<]]> 300
			 <isNotEmpty>
			 	 AND a.lsco_jenis = #value# 
			 </isNotEmpty>
		GROUP BY a.lsbs_id, a.lsdbs_number, b.lsbs_name, c.lsdbs_name
		ORDER BY a.lsbs_id, a.lsdbs_number	
	</select>

	<select id="elions.uw.selectDaftarEmailCabang" resultClass="java.util.HashMap">
		SELECT   b.lca_nama, a.lar_email
		    FROM eka.lst_addr_region a, eka.lst_cabang b, eka.lst_region c
		   WHERE a.lar_id = c.lar_id
		     AND a.lar_lca_id = c.lca_id
		     AND b.lca_id = c.lca_id
		     AND a.lar_email IS NOT NULL
		GROUP BY b.lca_nama, a.lar_email
		ORDER BY b.lca_nama   	
	</select>
	
	<select id="elions.uw.selectListPengirimanPolis" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.ListPengirimanPolis">
	SELECT   /*+ first_rows */ a.reg_spaj, a.lca_id, c.lsbs_id, c.lsdbs_number, eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) lsdbs_name, a.mspo_policy_no, a.mspo_policy_no_format,
		         e.mcl_first, b.mste_beg_date, b.mste_tgl_kirim_polis,i.msps_date,b.mste_tgl_aksep,
		         a.mspo_date_ttp, b.mste_tgl_komisi,
		         DECODE (a.mspo_jenis_terbit, 1, 'S', 'H') softcopy,
		         to_char(b.mste_tgl_kirim_lb, 'hh24') kirim_hh, to_char(b.mste_tgl_kirim_lb, 'mi') kirim_mm,
		         to_char(b.mste_tgl_terima_lb, 'hh24') terima_hh, to_char(b.mste_tgl_terima_lb, 'mi') terima_mm,
		         b.mste_tgl_kirim_lb, b.mste_tgl_terima_lb, j.lsgb_id, j.lsbs_jenis, k.status_accept, k.lssa_id
		    FROM eka.mst_policy a,
		         eka.mst_insured b,
		         eka.mst_product_insured c,
		         eka.lst_cabang d,
		         eka.mst_client_new e,
		         eka.lst_user f,
		         eka.lst_det_bisnis g,
		         eka.lst_policy_status h,
		         eka.mst_position_spaj i,
		         eka.lst_bisnis j,
		         eka.lst_status_accept k
		   WHERE a.reg_spaj = b.reg_spaj
		     AND b.reg_spaj = c.reg_spaj
		     AND a.reg_spaj = i.reg_spaj(+)
		     AND b.mste_insured_no = c.mste_insured_no
		     AND a.lca_id = d.lca_id
		     AND a.mspo_policy_holder = e.mcl_id
		     AND a.lus_id = f.lus_id
		     AND c.lsbs_id = g.lsbs_id
		     AND c.lsdbs_number = g.lsdbs_number
		     AND c.lsbs_id <![CDATA[<]]> 300
		     AND a.lssp_id = h.lssp_id
		     AND g.lsbs_id = j.lsbs_id
		     AND b.lssa_id = k.lssa_id
		     AND (i.msps_desc = 'TRANSFER KE TANDA TERIMA' or i.msps_desc = 'TRANSFER LANGSUNG KE KOMISI (FINANCE)' or i.msps_desc = 'TRANSFER LANGSUNG KE KOMISI (FINANCE). (Update Tgl Komisi)')
		     AND i.msps_date = (SELECT MAX (msps_date) FROM eka.mst_position_spaj WHERE reg_spaj = i.reg_spaj AND msps_desc = i.msps_desc)
		     AND b.mste_tgl_aksep between to_date(#startDate#,'dd/mm/yyyy') and to_date(#endDate#,'dd/mm/yyyy')+1
			<dynamic prepend=" AND ">
				<isEqual property="kondisi" compareValue="0">
					b.mste_tgl_kirim_lb is null AND b.mste_tgl_terima_lb is null
					AND (CASE
		             WHEN (   (c.lsbs_id = 142 AND c.lsdbs_number = 2)
		             	   OR (c.lsbs_id = 175 AND c.lsdbs_number = 2)
		                   OR (c.lsbs_id = 158 AND c.lsdbs_number = 6)
		                  )
		                THEN i.msps_date
		             WHEN a.lca_id = '09'
		                THEN b.mste_tgl_kirim_polis
		             ELSE b.mste_tgl_komisi
		          END
		         ) IS NULL 
				</isEqual>
				<isEqual property="kondisi" compareValue="1">
					b.mste_tgl_kirim_lb is null AND b.mste_tgl_terima_lb is null
					AND (CASE
		             WHEN (   (c.lsbs_id = 142 AND c.lsdbs_number = 2)
		                   OR (c.lsbs_id = 158 AND c.lsdbs_number = 6)
		                   OR (c.lsbs_id = 175 AND c.lsdbs_number = 2)
		                  )
		                THEN i.msps_date
		             WHEN a.lca_id = '09'
		                THEN b.mste_tgl_kirim_polis
		             ELSE b.mste_tgl_komisi
		          END
		         ) IS NOT NULL					
				</isEqual>
				<isEqual property="kondisi" compareValue="2">
					b.mste_tgl_kirim_lb is not null AND b.mste_tgl_terima_lb is null 
					AND (CASE
		             WHEN (   (c.lsbs_id = 142 AND c.lsdbs_number = 2)
		                   OR (c.lsbs_id = 158 AND c.lsdbs_number = 6)
		                   OR (c.lsbs_id = 175 AND c.lsdbs_number = 6)
		                  )
		                THEN i.msps_date
		             WHEN a.lca_id = '09'
		                THEN b.mste_tgl_kirim_polis
		             ELSE b.mste_tgl_komisi
		          END
		         ) IS NOT NULL
				</isEqual>
				<isEqual property="kondisi" compareValue="3">
					b.mste_tgl_kirim_lb is not null AND b.mste_tgl_terima_lb is not null
					AND (CASE
		             WHEN (   (c.lsbs_id = 142 AND c.lsdbs_number = 2)
		                   OR (c.lsbs_id = 158 AND c.lsdbs_number = 6)
		                   OR (c.lsbs_id = 175 AND c.lsdbs_number = 6)
		                  )
		                THEN i.msps_date
		             WHEN a.lca_id = '09'
		                THEN b.mste_tgl_kirim_polis
		             ELSE b.mste_tgl_komisi
		          END
		         ) IS NOT NULL
				</isEqual>
				<isEqual property="kondisi" compareValue="4">
				</isEqual>
			</dynamic>
		ORDER BY c.lsbs_id, c.lsdbs_number, a.mspo_policy_no
	</select>
	
	<select id="elions.uw.selectListPengirimanPolisLB" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.ListPengirimanPolis">
	SELECT /*+ first_rows */ a.mspo_policy_no_format,a.reg_spaj,eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) lsdbs_name,b.mste_tgl_aksep
		    FROM eka.mst_policy a,
		         (select * from eka.mst_insured where mste_tgl_kirim_lb is not null and mste_tgl_terima_lb is null) b,
		         eka.mst_product_insured c,
		         eka.lst_det_bisnis g,
		         eka.lst_policy_status h
		   WHERE a.reg_spaj = b.reg_spaj
		     AND b.reg_spaj = c.reg_spaj
		     AND b.mste_insured_no = c.mste_insured_no
		     AND c.lsbs_id <![CDATA[<]]> 300
		     AND c.lsbs_id = g.lsbs_id
		     AND c.lsdbs_number = g.lsdbs_number
		     AND a.lssp_id = h.lssp_id
	</select>
	
	 <select id="elions.uw.selectTtpTransferAgency" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.ListSpajTtp">
			select distinct eka.workdays(b.msps_date, trunc(sysdate)) selisih,a.reg_spaj,b.msps_desc ket_ttp,c.msag_id,e.mcl_first,
	   			b.lus_id userttp,sysdate,b.msps_date tgl_ttp
			from eka.mst_policy a , eka.mst_position_spaj b, 
				 eka.mst_agent_prod c,eka.mst_agent d,eka.mst_client_new e
			where a.reg_spaj=b.reg_spaj
				  and a.reg_spaj=c.reg_spaj
				  and c.msag_id=d.msag_id
				  and d.mcl_id = e.mcl_id 
				  and c.lsle_id=4
	  			  and a.LSPD_ID=9 
	              and upper(b.MSPS_DESC) like 'TRANSFER KE PROSES CHECKING TT%'
	              and (eka.workdays(b.msps_date, trunc(sysdate)))<![CDATA[>]]>2 
 	 </select>
	
	<select id="elions.uw.selectListPengirimanPolisUW" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.ListPengirimanPolis">
	SELECT  /*+ first_rows */ a.reg_spaj
		    FROM eka.mst_policy a,
		         (select * from eka.mst_insured where mste_tgl_kirim_lb is not null and mste_tgl_terima_lb is not null) b,
		         eka.mst_product_insured c,
		         eka.lst_policy_status h
		   WHERE a.reg_spaj = b.reg_spaj
		     AND b.reg_spaj = c.reg_spaj
		     AND b.mste_insured_no = c.mste_insured_no
		     AND c.lsbs_id <![CDATA[<]]> 300
		     AND a.lssp_id = h.lssp_id
	</select>
	
	<select id="elions.uw.selectListPengirimanPolisTotal" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.ListPengirimanPolis">
	SELECT  /*+ first_rows */ a.reg_spaj
		    FROM eka.mst_policy a,
		         (select * from eka.mst_insured where mste_tgl_kirim_lb is not null) b,
		         eka.mst_product_insured c,
		         eka.lst_policy_status h
		   WHERE a.reg_spaj = b.reg_spaj
		     AND b.reg_spaj = c.reg_spaj
		     AND b.mste_insured_no = c.mste_insured_no
		     AND c.lsbs_id <![CDATA[<]]> 300
		     AND a.lssp_id = h.lssp_id
	</select>
	
	<select id="elions.uw.selectListPengirimanPolisBalik" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.ListPengirimanPolis">
	SELECT   a.mspo_policy_no_format,a.reg_spaj,eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) lsdbs_name,b.mste_tgl_aksep,i.msps_date
		    FROM eka.mst_policy a,
				(select * from eka.mst_insured where mste_tgl_kirim_lb is not null
				minus			 
				select * from eka.mst_insured where mste_tgl_kirim_lb is not null and mste_tgl_terima_lb is not null) b,
		         eka.mst_product_insured c,
		         eka.lst_det_bisnis g,
		         eka.lst_policy_status h,
				 eka.mst_position_spaj i
		   WHERE a.reg_spaj = b.reg_spaj
		     AND a.reg_spaj = c.reg_spaj
			 AND a.reg_spaj = i.reg_spaj
		     AND b.mste_insured_no = c.mste_insured_no
			 AND b.lssa_id = i.lssa_id
			 AND c.lsbs_id <![CDATA[<]]> 300
		     AND c.lsbs_id = g.lsbs_id
		     AND c.lsdbs_number = g.lsdbs_number
		     AND a.lssp_id = h.lssp_id
			 AND a.lssp_id = i.lssp_id
			 AND i.lspd_id in ('7','8','99')
	ORDER BY a.mspo_policy_no_format,i.msps_date
	</select>
	
	<select id="elions.uw.selectListPengirimanPolisTambahan" parameterClass="list" resultClass="com.ekalife.elions.model.ListPengirimanPolis">
	SELECT   /*+ first_rows */ a.reg_spaj, b.lssa_id, c.lsbs_id, c.lsdbs_number, eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) lsdbs_name, a.mspo_policy_no, a.mspo_policy_no_format,
		         e.mcl_first, b.mste_beg_date, b.mste_tgl_kirim_polis,i.msps_date,b.mste_tgl_aksep,a.lca_id,i.msps_desc,
		         a.mspo_date_ttp, b.mste_tgl_komisi,
		         DECODE (a.mspo_jenis_terbit, 1, 'S', 'H') softcopy,
		         to_char(b.mste_tgl_kirim_lb, 'hh24') kirim_hh, to_char(b.mste_tgl_kirim_lb, 'mi') kirim_mm,
		         to_char(b.mste_tgl_terima_lb, 'hh24') terima_hh, to_char(b.mste_tgl_terima_lb, 'mi') terima_mm,
		         b.mste_tgl_kirim_lb, b.mste_tgl_terima_lb, j.lsgb_id, j.lsbs_jenis, k.keterangan
		    FROM eka.mst_policy a,
		         eka.mst_insured b,
		         eka.mst_product_insured c,
		         eka.lst_cabang d,
		         eka.mst_client_new e,
		         eka.lst_user f,
		         eka.lst_det_bisnis g,
		         eka.lst_policy_status h,
		         eka.mst_position_spaj i,
		         eka.lst_bisnis j,
		         (select a.reg_spaj, (case when a.msps_desc = 'SPH KIRIM KE LIFE BENEFIT' then 'SPH' 
				when a.msps_desc = 'SPT KIRIM KE LIFE BENEFIT' then 'SPT' 
				when a.msps_desc = 'SPH DAN SPT KIRIM KE LIFE BENEFIT' then 'SPH DAN SPT' else '' end) keterangan
				from eka.mst_position_spaj a where a.msps_desc = 'SPH DAN SPT KIRIM KE LIFE BENEFIT' or a.msps_desc = 'SPT KIRIM KE LIFE BENEFIT' or a.msps_desc = 'SPH KIRIM KE LIFE BENEFIT') k
		   WHERE a.reg_spaj = b.reg_spaj
		     AND b.reg_spaj = c.reg_spaj
		     AND a.reg_spaj = i.reg_spaj(+)
		     AND a.reg_spaj = k.reg_spaj(+)
		     AND b.mste_insured_no = c.mste_insured_no
		     AND a.lca_id = d.lca_id
		     AND a.mspo_policy_holder = e.mcl_id
		     AND a.lus_id = f.lus_id
		     AND c.lsbs_id = g.lsbs_id
		     AND c.lsdbs_number = g.lsdbs_number
		     AND c.lsbs_id <![CDATA[<]]> 300
		     AND a.lssp_id = h.lssp_id
		     AND g.lsbs_id = j.lsbs_id
		     AND (i.msps_desc = 'TRANSFER KE TANDA TERIMA' or i.msps_desc = 'TRANSFER LANGSUNG KE KOMISI (FINANCE)' or i.msps_desc = 'TRANSFER LANGSUNG KE KOMISI (FINANCE). (Update Tgl Komisi)')
		     AND i.msps_date = (SELECT MAX (msps_date) FROM eka.mst_position_spaj WHERE reg_spaj = i.reg_spaj AND msps_desc = i.msps_desc)
			 AND (
				<iterate prepend=" a.reg_spaj in " open="(" close=")" conjunction=",">#value[]#</iterate>
				<iterate prepend=" OR a.mspo_policy_no in " open="(" close=")" conjunction=",">#value[]#</iterate>
			)
	ORDER BY c.lsbs_id, c.lsdbs_number, a.mspo_policy_no
	</select>
	
	<select id="elions.uw.selectListStatusMuamalat" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		SELECT DECODE (LSSA_ID,'5', 'AKSEP', '2', 'TOLAK') AS STATUS FROM EKA.LST_STATUS_ACCEPT WHERE LSSA_ID IN ('2', '5')
	</select>
	
	<select id="elions.uw.selectTanggalBayar" parameterClass="string" resultClass="date">
		SELECT max(mspa_date_book) FROM EKA.MST_payment where reg_spaj = RPAD (#value#, 11, ' ')	
	</select>

	<select id="elions.uw.selectFeeBasedPowersave" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT flag_premi, premi, persen_rate, persen_fee, persen_default
		  FROM eka.lst_persen_ps
		 WHERE lsbs_id = #lsbs_id#
		   AND lsdbs_number = #lsdbs_number#
		   AND lku_id = #lku_id#
		   AND mgi = #mgi#
		   AND tanggal =
		          (SELECT MAX (tanggal)
		             FROM eka.lst_persen_ps
					 WHERE lsbs_id = #lsbs_id#
					   AND lsdbs_number = #lsdbs_number#
					   AND lku_id = #lku_id#
					   AND mgi = #mgi#)	
	</select>

	<select id="elions.uw.selectInfoAgenRider" parameterClass="string" resultClass="java.util.HashMap">
		SELECT nama, lbn_id, trim(replace(replace(no_tab,'.'),'-')) no_tab
		  FROM eka.v_agent
		 WHERE agent_id = #value# 	
	</select>

	<select id="elions.uw.selectCekDegradasiAgen" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT (*)
		  FROM eka.mst_agent_hist a
		 WHERE a.msag_id = #msag_id#
		   AND a.lsas_id = 1
		   AND a.magh_process_date >= #beg_date#		
	</select>

	<select id="elions.uw.selectDetBillingRider" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.reg_spaj, a.msdb_det_ke, a.lsbs_id, a.lsdbs_number, (a.msdb_premium - nvl(a.msdb_discount,0)) premi
		  FROM eka.mst_det_billing a
		 WHERE a.reg_spaj = #spaj#
		   AND a.msbi_tahun_ke = #premi_ke#
		   AND a.msbi_premi_ke = #tahun_ke#
		   AND a.lsbs_id between 800 and 899
	</select>

	<select id="elions.uw.selectCerdasSalesOrOperation" parameterClass="string" resultClass="int">
		SELECT eka.lst_jab_ref_bii.divisi
		  FROM eka.lst_referrer_bii,
		       eka.mst_nasabah,
		       eka.mst_policy,
		       eka.lst_jab_ref_bii
		 WHERE eka.lst_referrer_bii.referrer_id = eka.mst_nasabah.referrer_id
		   AND eka.mst_nasabah.mns_kd_nasabah = eka.mst_policy.mspo_plan_provider
		   AND eka.lst_jab_ref_bii.level_id = eka.lst_referrer_bii.level_id
		   AND eka.mst_policy.reg_spaj = RPAD (#value#, 11, ' ')
	</select>

	<select id="elions.uw.selectInformasiCabangFromSpaj" parameterClass="string" resultClass="java.util.HashMap">
	 select	upper (nvl(b.nama_cabang, nvl(c.nama_cabang, d.lca_nama))) nama_cabang, b.kci, C.nama_reff nama_ao
		from eka.mst_policy a,
		(
		 select a.mns_kd_nasabah, b.nama_cabang, c.nama_cabang kci from eka.mst_nasabah a, eka.lst_cab_bii b, eka.lst_cab_bii c
			where a.kd_region = b.kd_region
			and a.kd_koord = b.kd_koord
			and a.kd_area = b.kd_area
			and a.kd_cabang = b.kd_cabang
			and a.kd_region = c.kd_region
			and a.kd_koord = c.kd_koord
			and a.kd_area = c.kd_area
			and c.kd_cabang = '000'
		) b,
		(  select a.reg_spaj, B.NAMA_REFF, B.JENIS, C.NAMA_CABANG 
            from eka.mst_refF_bii A, EKA.LST_REFF_BII B, EKA.LST_CABANG_BII C, EKA.LST_REFF_BII D
            WHERE A.LRB_ID = B.LRB_ID
            AND  A.REFF_ID =D.LRB_ID
            AND D.LCB_NO = C.LCB_NO
            and a.level_id = 4 and a.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = a.reg_spaj)
		) c, eka.lst_cabang d,
		eka.mst_agent e,
		eka.mst_client_new f
		where a.reg_spaj = RPAD (#value#, 11, ' ')
		and a.mspo_plan_provider = b.mns_kd_nasabah (+)
		and a.reg_spaj = c.reg_spaj(+)
		and a.lca_id = d.lca_id
		and a.mspo_ao = e.msag_id(+)
		and e.mcl_id = f.mcl_id(+)
	</select>

	<select id="elions.uw.selectMemorialUnitLink" parameterClass="string" resultClass="java.util.HashMap">
		SELECT   a.reg_spaj, d.flag_jenis, SUM (c.mbu_jumlah) mbu_jumlah, case when c.ljb_id in (1,2,3,4) then c.ljb_id else 0 end as ljb_id,b.lt_id
		    FROM eka.mst_billing a,
		         eka.mst_ulink b,
		         eka.mst_biaya_ulink c,
		         eka.lst_jenis_biaya d
		   WHERE a.reg_spaj = b.reg_spaj
		     AND a.msbi_beg_date =
		            (SELECT msbi_beg_date
		               FROM eka.mst_billing
		              WHERE reg_spaj = a.reg_spaj
		                AND msbi_tahun_ke = 1
		                AND msbi_premi_ke = 1)
		     AND a.msbi_tahun_ke = b.mu_tahun_ke
		     AND a.msbi_premi_ke = b.mu_premi_ke
		     AND b.reg_spaj = c.reg_spaj
		     AND b.mu_ke = c.mu_ke
		     AND c.ljb_id = d.ljb_id
		     and c.ljb_id <![CDATA[<>]]>99
		     AND a.reg_spaj = RPAD (#value#, 11, ' ')
		GROUP BY a.reg_spaj, d.flag_jenis, c.ljb_id,b.lt_id
 		  HAVING SUM (c.mbu_jumlah) > 0 
	</select>

	<select id="elions.uw.selectBulanProduksi" parameterClass="string" resultClass="string">
		SELECT TO_CHAR (mspro_prod_date, 'yyyymm') prod
		  FROM eka.mst_production
		 WHERE msbi_tahun_ke = 1 AND msbi_premi_ke = 1 AND reg_spaj = RPAD (#value#, 11, ' ')
	</select>

	<select id="elions.uw.selectHistoryAgen" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			DECODE(a.LSLE_ID, 
				4, a.K_LEVEL03, 
				3, a.K_LEVEL02, 
				2, a.K_LEVEL01,'') msag_id, a.lsas_id
		  FROM eka.mst_agent_hist a, eka.mst_agent_prod b
		 WHERE a.msag_id = b.msag_id
		   AND a.magh_process_date =
		                (SELECT MAX (magh_process_date)
		                   FROM eka.mst_agent_hist
		                  WHERE a.lsas_id IN (1, 2, 3, 4, 7) AND a.msag_id = b.msag_id)
		   AND MONTHS_BETWEEN (SYSDATE, a.magh_beg_date) <![CDATA[>]]> 0
		   AND MONTHS_BETWEEN (SYSDATE, a.magh_beg_date) <![CDATA[<]]> 12
		   AND b.reg_spaj = RPAD (#spaj#, 11, ' ')
		   AND b.lsle_id = #lsle_id#
	</select>

	<select id="elions.uw.selectRekruterAgenSys" parameterClass="string" resultClass="string">
		SELECT nvl(a.mia_recruiter,'') mia_recruiter
		  FROM eka.mst_input_agensys a, eka.mst_agent b
		 WHERE a.mia_recruiter = b.msag_id
		   AND a.msag_id = #value#
		   AND a.mia_level_recruit = 1
		   AND b.msag_active = 1
		   AND b.lsle_id = 1
	</select>

	<select id="elions.uw.selectInfoAgenAAKM" parameterClass="string" resultClass="java.util.HashMap">
		SELECT b.mcl_first, a.lbn_id, a.msag_tabungan
		  FROM eka.mst_agent a, eka.mst_client_new b
		 WHERE a.mcl_id = b.mcl_id AND a.msag_id = #value#
	</select>

	<select id="elions.uw.selectLeadAAKM" parameterClass="string" resultClass="string">
		SELECT nvl(eka.mst_agent.msag_aakm_lead,'') msag_aakm_lead
		  FROM eka.mst_agent, eka.mst_agent mst_lead
		 WHERE eka.mst_agent.msag_aakm_lead = mst_lead.msag_id
		   AND eka.mst_agent.msag_id = #value#
	</select>

	<select id="elions.uw.selectFlagAAKMdanBPJ" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.lsbs_id, a.lsdbs_number, nvl(b.lsbs_jenis, 0) lsbs_jenis, c.msco_comm
		  FROM eka.mst_product_insured a, eka.lst_bisnis b, eka.mst_commission c
		 WHERE a.lsbs_id = b.lsbs_id
		   AND a.reg_spaj = c.reg_spaj
		   AND a.reg_spaj = RPAD (#spaj#, 11, ' ')
		   AND a.lsbs_id <![CDATA[<]]> 300
		   AND c.msbi_tahun_ke = #tahun#
		   AND c.msbi_premi_ke = #premi#
		   AND c.lev_comm = 4
	</select>

	<select id="elions.uw.selectAAKM" parameterClass="string" resultClass="java.util.HashMap">
		SELECT a.msag_id, nvl(b.msag_aakm, 0) msag_aakm
		  FROM eka.mst_agent_prod a, eka.mst_agent b
		 WHERE a.msag_id = b.msag_id AND a.reg_spaj = RPAD (#value#, 11, ' ') AND a.lsle_id = 1
	</select>

	<select id="elions.uw.selectLaporanSebelumJamDua" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.reg_spaj<!--, a.mu_ke-->
		  FROM eka.mst_trans_ulink a, eka.mst_ulink b
		 WHERE b.mu_lspd_id=42 and b.mu_aktif=1
		and a.reg_spaj = b.reg_spaj
		and a.mu_ke = b.mu_ke
		and (case 
		when a.mtu_tgl_trans = trunc(sysdate) and a.mtu_tgl_input <![CDATA[<=]]> to_date ((to_char(sysdate,'dd/mm/yyyy')||' ' || #cutoff#),'dd/mm/yyyy hh24:mi')
		then 1
		when trunc(a.mtu_tgl_trans) <![CDATA[<]]> trunc(sysdate)
		then 1
		when a.mtu_tgl_trans = trunc(sysdate) and a.mtu_tgl_input>to_date ((to_char(sysdate,'dd/mm/yyyy')||' '||#cutoff#),'dd/mm/yyyy hh24:mi')
		then 2
		end
		) = 1
		<iterate prepend="AND a.reg_spaj in " property="spaj" open="(" close=")" conjunction=",">
				RPAD (#spaj[]#, 11, ' ')
			</iterate>
	</select>

	<select id="elions.uw.selectLaporanSesudahJamDua" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.reg_spaj
		  FROM eka.mst_trans_ulink a, eka.mst_ulink b
		 WHERE b.mu_lspd_id=42 and b.mu_aktif=1
		and a.reg_spaj = b.reg_spaj
		and a.mu_ke = b.mu_ke
		and (case 
		when a.mtu_tgl_trans = trunc(sysdate) and a.mtu_tgl_input <![CDATA[<=]]> to_date ((to_char(sysdate,'dd/mm/yyyy')||' '||#cutoff#),'dd/mm/yyyy hh24:mi')
		then 1
		when trunc(a.mtu_tgl_trans) <![CDATA[<]]> trunc(sysdate)
		then 1
		when a.mtu_tgl_trans = trunc(sysdate) and a.mtu_tgl_input>to_date ((to_char(sysdate,'dd/mm/yyyy')||' '||#cutoff#),'dd/mm/yyyy hh24:mi')
		then 2
		end
		) = 2
		<iterate prepend="AND a.reg_spaj in " property="spaj" open="(" close=")" conjunction=",">
				RPAD (#spaj[]#, 11, ' ')
			</iterate>
	</select>

	<select id="elions.uw.selectLaporanKustodianDebet" parameterClass="list" resultClass="java.util.HashMap">
		SELECT a.mspo_policy_no, c.mu_ke, c.reg_spaj, b.mtu_tgl_trans, b.lt_id,
		       b.lji_id, b.mtu_jumlah, b.mtu_desc, b.reg_spaj, b.mtu_ke, b.lspd_id,
		       b.mtu_unit, c.mu_lspd_id, c.mu_flag_print, a.lku_id, d.lji_invest, e.lku_symbol
		  FROM eka.mst_policy a, eka.mst_trans_ulink b, eka.mst_ulink c, eka.lst_jenis_invest d, eka.lst_kurs e
		 WHERE c.reg_spaj = b.reg_spaj
		   AND c.mu_ke = b.mu_ke
		   AND a.reg_spaj = c.reg_spaj
		   AND b.lji_id = d.lji_id
		   AND a.lku_id = e.lku_id
		   AND c.mu_aktif = 1
		   AND c.mu_lspd_id = 42
		   AND b.mtu_dk = 'D'
			<iterate prepend="AND a.reg_spaj in " open="(" close=")" conjunction=",">
				RPAD (#value[]#, 11, ' ')
			</iterate>
			ORDER BY d.lji_invest, c.reg_spaj, c.mu_ke
	</select>

	<select id="elions.uw.selectLaporanKustodianKredit" parameterClass="list" resultClass="java.util.HashMap">
		SELECT  a.mspo_policy_no, c.mu_ke, c.reg_spaj, b.mtu_tgl_trans, b.lt_id,
		       b.lji_id, b.mtu_jumlah, b.mtu_desc, b.reg_spaj, b.mtu_ke, b.lspd_id,
		       b.mtu_unit, c.mu_lspd_id, c.mu_flag_print, a.lku_id, d.lji_invest, e.lku_symbol
		  FROM eka.mst_policy a, eka.mst_trans_ulink b, eka.mst_ulink c, eka.lst_jenis_invest d, eka.lst_kurs e
		 WHERE c.reg_spaj = b.reg_spaj
		   AND c.mu_ke = b.mu_ke
		   AND a.reg_spaj = c.reg_spaj
		   AND b.lji_id = d.lji_id
		   AND a.lku_id = e.lku_id
		   AND c.mu_aktif = 1
		   AND c.mu_lspd_id = 42
		   AND b.mtu_dk = 'K'
			<iterate prepend="AND a.reg_spaj in " open="(" close=")" conjunction=",">
				RPAD (#value[]#, 11, ' ')
			</iterate>
			ORDER BY d.lji_invest, c.reg_spaj, c.mu_ke
	</select>

	<select id="elions.uw.selectLaporanKustodianDebetFinance" parameterClass="list" resultClass="java.util.HashMap">
		SELECT  a.mspo_policy_no, c.mu_ke, c.reg_spaj, b.mtu_tgl_trans, b.lt_id,
		       b.lji_id, b.mtu_jumlah, b.mtu_desc, b.reg_spaj, b.mtu_ke, b.lspd_id,
		       b.mtu_unit, c.mu_lspd_id, c.mu_flag_print, a.lku_id, d.lji_invest, e.lku_symbol,
		       sum(f.mbu_jumlah) mbu_jumlah
		  FROM eka.mst_policy a, eka.mst_trans_ulink b, eka.mst_ulink c, eka.lst_jenis_invest d, eka.lst_kurs e, eka.mst_biaya_ulink f
		 WHERE c.reg_spaj = b.reg_spaj
		   AND c.mu_ke = b.mu_ke
		   AND a.reg_spaj = c.reg_spaj
		   AND b.lji_id = d.lji_id
		   AND a.lku_id = e.lku_id
		   AND c.mu_aktif = 1
		   AND c.mu_lspd_id = 42
		   AND b.mtu_dk = 'D'
		   AND c.reg_spaj = f.reg_spaj
		   AND c.mu_ke = f.mu_ke
			<iterate prepend="AND a.reg_spaj in " open="(" close=")" conjunction=",">
				RPAD (#value[]#, 11, ' ')
			</iterate>
		GROUP BY a.mspo_policy_no, c.mu_ke, c.reg_spaj, b.mtu_tgl_trans, b.lt_id,
		       b.lji_id, b.mtu_jumlah, b.mtu_desc, b.reg_spaj, b.mtu_ke, b.lspd_id,
		       b.mtu_unit, c.mu_lspd_id, c.mu_flag_print, a.lku_id, d.lji_invest, e.lku_symbol
			ORDER BY d.lji_invest, c.reg_spaj, c.mu_ke
	</select>

	<select id="elions.uw.selectLaporanKustodianKreditFinance" parameterClass="list" resultClass="java.util.HashMap">
		SELECT  a.mspo_policy_no, c.mu_ke, c.reg_spaj, b.mtu_tgl_trans, b.lt_id,
		       b.lji_id, b.mtu_jumlah, b.mtu_desc, b.reg_spaj, b.mtu_ke, b.lspd_id,
		       b.mtu_unit, c.mu_lspd_id, c.mu_flag_print, a.lku_id, d.lji_invest, e.lku_symbol,
		       sum(f.mbu_jumlah) mbu_jumlah
		  FROM eka.mst_policy a, eka.mst_trans_ulink b, eka.mst_ulink c, eka.lst_jenis_invest d, eka.lst_kurs e, eka.mst_biaya_ulink f
		 WHERE c.reg_spaj = b.reg_spaj
		   AND c.mu_ke = b.mu_ke
		   AND a.reg_spaj = c.reg_spaj
		   AND b.lji_id = d.lji_id
		   AND a.lku_id = e.lku_id
		   AND c.mu_aktif = 1
		   AND c.mu_lspd_id = 42
		   AND b.mtu_dk = 'K'
		   AND c.reg_spaj = f.reg_spaj
		   AND c.mu_ke = f.mu_ke
			<iterate prepend="AND a.reg_spaj in " open="(" close=")" conjunction=",">
				RPAD (#value[]#, 11, ' ')
			</iterate>
		GROUP BY a.mspo_policy_no, c.mu_ke, c.reg_spaj, b.mtu_tgl_trans, b.lt_id,
		       b.lji_id, b.mtu_jumlah, b.mtu_desc, b.reg_spaj, b.mtu_ke, b.lspd_id,
		       b.mtu_unit, c.mu_lspd_id, c.mu_flag_print, a.lku_id, d.lji_invest, e.lku_symbol
			ORDER BY d.lji_invest, c.reg_spaj, c.mu_ke
	</select>

	<select id="elions.uw.selectKycNewBusiness" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
			a.reg_spaj, a.mspo_policy_no_format, d.mcl_first pemegang, e.mcl_first tertanggung,
			b.mste_beg_date, eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) lsdbs_name, g.lku_symbol, (c.mspr_premium - nvl(c.mspr_discount,0)) premi_pokok, '' topup,
			decode(a.lscb_id,6,'M',1,'Q',2,'SA',3,'A', 'W') frek, e.mpn_job_desc, e.mkl_kerja, e.mkl_industri, e.mkl_penghasilan, e.mkl_pendanaan,
			,e.mkl_tujuan
		from
			eka.mst_policy a, eka.mst_insured b, eka.mst_product_insured c, 
			eka.mst_client_new d, eka.mst_client_new e, eka.lst_det_bisnis f,
			eka.lst_kurs g
		where a.lstb_id = 1 and b.mste_tgl_terima_spaj between #tgl_awal# and #tgl_akhir#
			and a.reg_spaj = b.reg_spaj and a.reg_spaj = c.reg_spaj
			and a.mspo_policy_holder = d.mcl_id and b.mste_insured = e.mcl_id
			and c.lsbs_id = f.lsbs_id and c.lsdbs_number = f.lsdbs_number
			and a.lku_id = g.lku_id
	</select>
	
	<select id="elions.uw.selectJenisPrintPolisUlang" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT b.reg_spaj, a.mspo_policy_no no_polis, b.tanggal,
		       eka.f_lsdbs(a.reg_spaj, d.lsbs_id, d.lsdbs_number) lsdbs_name nama_produk, c.mste_beg_date beg_date,
		       c.mste_end_date end_date, f.mcl_first nama_pemegang,
		       g.mcl_first nama_tertanggung, b.jenis, b.keterangan
		  FROM eka.mst_policy a,
		       eka.mst_insured c,
		       eka.mst_product_insured d,
		       (SELECT * FROM eka.lst_ulangan
		           WHERE tanggal between #tanggalAwal# and #tanggalAkhir#
		             <isEqual property="jenis" compareValue="All">	
					 and jenis in ('PRINT ULANG POLIS' , 'PRINT DUPLIKAT POLIS' , 'ENDORS NON MATERIAL')
					</isEqual>
					<isNotEqual property="jenis" compareValue="All">	
					and jenis = #jenis#
					</isNotEqual>
		        ORDER BY jenis, tanggal) b,
		       eka.lst_det_bisnis e,
		       eka.mst_client_new f,
		       eka.mst_client_new g
		 WHERE a.reg_spaj = c.reg_spaj
		   AND c.reg_spaj = d.reg_spaj
		   AND c.mste_insured_no = d.mste_insured_no
		   AND a.reg_spaj = b.reg_spaj
		   AND d.lsbs_id = e.lsbs_id
		   AND d.lsdbs_number = e.lsdbs_number
		   AND a.mspo_policy_holder = f.mcl_id
		   AND c.mste_insured = g.mcl_id
	</select>
	
	<select id="elions.uw.selectProductionBSIMInBranch" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select kode_agent,
			referrer,
	        kode_cabang,
	        cabang,
	        wilayah,
	        id_wilayah,
	        gm,
	        spaj_no, 
	        policy_no,
	        mata_uang, 
	        top_up,
	        tahun_ke,
	        flag,
	        product_name,
	        nama_nasabah,
			nama_tt,
	        premi_pokok,
	        kurs,
	        premi_pokok_ccy,
	        premi_top_up,
	        premi_top_up_ccy,
	        total_premi,
	        total_premi_ccy,
	        pay_mode,
	        transaction_date,
	        feebase,
	        fee_topup,
	        fee_rider,
	        cabang_referrer,
	        penutup,
	        premi_rider,
	        premi_rider_ccy,
	        mspro_beg_date,
	        mspro_prod_date,
			to_char(mspro_prod_date,'mm') month_prod,
	        upp_pokok_rider,
	        upp_topup,
	        jabatan,
	        tier,
	        tgl_bayar_nb,
	        jab_penutup,
	        penutup_aktif,
	        ape_prod_pokok,
	        ape_prod_pokok_ccy,
	        ape_prod_topup,
	        ape_prod_topup_ccy,
	        wil_ajs,
	        leader,
	        type_premi,
	        rtrim (xmlagg (xmlelement (e, trim(eka.f_lsdbs(z.spaj_no, y.lsbs_id, y.lsdbs_number)) || ', ')).extract ('//text()'), chr(10)) as nama_rider,
			(case when flag = 1 then
	            (case when pay_mode = 'SEKALIGUS' then premi_pokok * 0.03
	            	else
	                (case when to_char(mspro_prod_date, 'mm') = '04' then premi_pokok * 1.2
					 	when rider_jml.jml <![CDATA[>]]> 1 then premi_pokok * 1.1
	                 	else premi_pokok
					end)
	            end)
	        	else 0
	        end) premi_kontes,
	        mste_tgl_aksep,
            nvl((select mpr_jangka_invest from eka.mst_powersave_ro
                where reg_spaj = z.spaj_no
                    and msbi_tahun_ke = z.tahun_ke
                    and msbi_premi_ke = z.flag), 0) mgi,
            nvl((select mpr_hari from eka.mst_powersave_ro
                where reg_spaj = z.spaj_no
                    and msbi_tahun_ke = z.tahun_ke
                    and msbi_premi_ke = z.flag), 0) mpr_hari
		from (
			select kode_agent,
	            referrer,
	            kode as kode_cabang,
	            cabang,
	            wilayah,
				id_wilayah,
				gm,
	            reg_spaj as spaj_no, 
	            no_polis as policy_no,
				kurs as mata_uang,
				(case when (sum(premi) <![CDATA[<=]]> 0 and sum(premi_topup) <![CDATA[>]]> 0) then 
		                (select min(msbi_flag_topup) from eka.mst_billing where reg_spaj=x.reg_spaj and msbi_beg_date=x.mspro_beg_date)  
					else 0
				end) top_up,
	            (select min(msbi_tahun_ke) from eka.mst_production where reg_spaj=x.reg_spaj and mspro_beg_date=x.mspro_beg_date) as tahun_ke,
	            (select min(msbi_premi_ke) from eka.mst_production where reg_spaj=x.reg_spaj and mspro_beg_date=x.mspro_beg_date) as flag,
	            lsdbs_name as product_name,
	            nm_pp as nama_nasabah,
				nm_tt as nama_tt,
	            sum(premi) as premi_pokok,
	            mspro_nilai_kurs as kurs,
	            sum(premi) * mspro_nilai_kurs as premi_pokok_ccy,
	            sum(premi_topup) as premi_top_up,
	            sum(premi_topup) * mspro_nilai_kurs as premi_top_up_ccy,
	            sum(premi) + sum(premi_topup) as total_premi,
	            (sum(premi) + sum(premi_topup) +
	            	nvl((select sum(msdpr_premium) 
	                	from eka.mst_det_production 
	                	where reg_spaj = x.reg_spaj 
	                	and msbi_premi_ke = (select min(msbi_premi_ke) 
											from eka.mst_production 
	                                    	where reg_spaj=x.reg_spaj 
	                                    	and mspro_beg_date=x.mspro_beg_date)
	                	and lsbs_id between 800 and 899),0)
	            ) * mspro_nilai_kurs as total_premi_ccy,
		        (case when (sum(premi) <![CDATA[<=]]> 0 and sum(premi_topup) <![CDATA[>]]> 0) then 
		                'SEKALIGUS' 
					else lscb_pay_mode 
				end) pay_mode,
	            tgl_bayar as transaction_date,
	            sum(fee_pokok) as feebase,
	            sum(fee_topup) as fee_topup,
	            sum(fee_rider) as fee_rider,
	            cabang_referrer,
	            penutup,
	            nvl((select sum(msdpr_premium) 
	                from eka.mst_det_production 
	                where reg_spaj=x.reg_spaj 
	                and msbi_premi_ke=(select min(msbi_premi_ke) 
	                                    from eka.mst_production 
	                                    where reg_spaj=x.reg_spaj 
	                                    and mspro_beg_date=x.mspro_beg_date)
	                and lsbs_id between 800 and 899),0) * (case when mspro_jn_prod = 3 then -1 else 1 end) as premi_rider,
	            (nvl((select sum(msdpr_premium) 
	                from eka.mst_det_production 
	                where reg_spaj=x.reg_spaj 
	                and msbi_premi_ke=(select min(msbi_premi_ke) 
	                                    from eka.mst_production 
	                                    where reg_spaj=x.reg_spaj 
	                                    and mspro_beg_date=x.mspro_beg_date)
	                and lsbs_id between 800 and 899),0) * mspro_nilai_kurs) * (case when mspro_jn_prod = 3 then -1 else 1 end) as premi_rider_ccy,
	            mspro_beg_date,
	            mspro_prod_date,
	            sum(upp_pokok_rider) as upp_pokok_rider,
	            sum(upp_topup) as upp_topup,
	            lrbj_ket as jabatan,
	            tier,
	            (select mspa_pay_date from eka.mst_payment where mspa_payment_id = 
	            	(select mspa_payment_id from eka.mst_tag_payment where reg_spaj=x.reg_spaj and msbi_premi_ke=1 and rownum=1) ) as tgl_bayar_nb,
	            jab_penutup,
	            penutup_aktif,
	            sum(nvl(ape_prod_pokok,0)) as ape_prod_pokok,
	            sum(nvl(ape_prod_pokok,0)) * mspro_nilai_kurs as ape_prod_pokok_ccy,
	            sum(nvl(ape_prod_topup,0)) as ape_prod_topup,
	            sum(nvl(ape_prod_topup,0)) * mspro_nilai_kurs as ape_prod_topup_ccy,
				wil_ajs,
				leader,
				type_premi,
				mste_tgl_aksep,
				jenis_product,
				lsbs_id,
				lsdbs_number
		    from (
		    	select a.reg_spaj,
		            a.mspo_policy_no as no_polis,
		            e. kd_cab_bank as kode,
		            e.nama_cabang as cabang_referrer,
					e.team_name as gm,
		            trim(d.agent_code) as kode_agent,
		            d.nama_reff as referrer,
		            j.lscb_pay_mode,
		            (select (select mcl_first from eka.mst_client_new where mcl_id=eka.mst_agent.mcl_id) from eka.mst_agent where msag_id=a.mspo_ao) as ao,
		            (select mcl_first from eka.mst_client_new where mcl_id=a.mspo_policy_holder) as nm_pp,
					(select mcl_first from eka.mst_client_new where mcl_id=b.mste_insured) as nm_tt,
					a.mspo_spaj_date as tgl_input_spaj,
					to_date(b.mste_tgl_aksep) as tgl_aksep,
					(case when nvl(k.msbi_flag_topup,0) = 2 then
		                (select max(mspa_pay_date) from eka.mst_payment
		                where mspa_payment_id in (select mspa_payment_id from eka.mst_tag_payment 
													where reg_spaj=k.reg_spaj and msbi_premi_ke=k.msbi_premi_ke - 1) )
						else
						(select max(mspa_pay_date) from eka.mst_payment 
		                where mspa_payment_id in (select mspa_payment_id from eka.mst_tag_payment 
													where reg_spaj=k.reg_spaj and msbi_premi_ke=k.msbi_premi_ke) ) 
					end) tgl_bayar,
					g.mspro_beg_date,
					g.mspro_prod_date,
					eka.f_lsdbs(a.reg_spaj, l.lsbs_id, l.lsdbs_number) as lsdbs_name,
					g.mspro_nilai_kurs,
					decode(f.lku_id,'01','Rp','USD') as kurs,
					decode(nvl(k.msbi_flag_topup,0),0,(select sum(msdb_premium) from eka.mst_det_billing
		                                                                    where reg_spaj=g.reg_spaj
		                                                                    and msbi_tahun_ke=g.msbi_tahun_ke
		                                                                    and msbi_premi_ke=g.msbi_premi_ke
		                                                                    and lsbs_id <![CDATA[<]]> 300),0) * case  when g.mspro_jn_prod=3 then -1 else 1 end as premi,
					decode(nvl(k.msbi_flag_topup,0),0,0,(select sum(msdb_premium) from eka.mst_det_billing
															where reg_spaj=g.reg_spaj and msbi_tahun_ke=g.msbi_tahun_ke
		                                                    and msbi_premi_ke=g.msbi_premi_ke)) * case  when g.mspro_jn_prod=3 then -1 else 1 end as premi_topup,
					decode(nvl(k.msbi_flag_topup,0),0,(case when p.lsbs_jenis = 1 then
																(select komisi_harian from eka.mst_comm_reff_bii
			                                                    where reg_spaj=g.reg_spaj and tahun_ke=g.msbi_tahun_ke
			                                                    and premi_ke=g.msbi_premi_ke and mcr_flag=1)
															else
																(select jlh_komisi from eka.mst_comm_reff_bii
			                                                    where reg_spaj=g.reg_spaj and tahun_ke=g.msbi_tahun_ke
			                                                    and premi_ke=g.msbi_premi_ke and mcr_flag=1)
															end),0) * case  when g.mspro_jn_prod=3 then -1 else 1 end as fee_pokok,
					decode(nvl(k.msbi_flag_topup,0),0,0,(select jlh_komisi from eka.mst_comm_reff_bii
		                                                    where reg_spaj=g.reg_spaj and tahun_ke=g.msbi_tahun_ke
		                                                    and premi_ke=g.msbi_premi_ke and mcr_flag=1)) * case  when g.mspro_jn_prod=3 then -1 else 1 end as fee_topup,
					(select fee_rider from eka.mst_comm_reff_bii where reg_spaj=g.reg_spaj and tahun_ke=g.msbi_tahun_ke
		            	and premi_ke=g.msbi_premi_ke and mcr_flag=1) * case  when g.mspro_jn_prod=3 then -1 else 1 end as fee_rider,
					(select nama_cabang from eka.lst_cabang_bii where lcb_no=c.lcb_freeze) as cabang,
					penutup.nama_reff as penutup,
		            (select nama_cabang from eka.lst_cabang_bii where lcb_no = (select wil_no from eka.lst_cabang_bii where lcb_no=e.lcb_no)) as wilayah,
					(select kode from eka.lst_cabang_bii where lcb_no = (select wil_no from eka.lst_cabang_bii where lcb_no=e.lcb_no)) as id_wilayah,
		            decode(nvl(k.msbi_flag_topup,0),0,g.upp_eva,0) * case  when g.mspro_jn_prod=3 then -1 else 1 end as upp_pokok_rider,
					decode(nvl(k.msbi_flag_topup,0),0,0,g.upp_eva) * case  when g.mspro_jn_prod=3 then -1 else 1 end as upp_topup,
					n.lrbj_ket,
					n.n_id_tier_group as tier,
					o.nama_level as jab_penutup,
					decode(penutup.flag_aktif,1,'Aktif','Non Aktif') as penutup_aktif,
					decode(nvl(k.msbi_flag_topup,0),0,g.ape_prod,0) as ape_prod_pokok,
					decode(nvl(k.msbi_flag_topup,0),0,0,g.ape_prod) as ape_prod_topup,
					e.wil_ajs,
					(select nama_reff from eka.lst_reff_bii where lrb_id=penutup.leader_id) as leader,
					(case when 'New Business' = #jenis# then 1
						when nvl(k.msbi_flag_topup,0) in (0,2) and g.mspro_jn_prod in (1,2) then  1 
						when g.mspro_jn_prod=3 and nvl(k.msbi_flag_topup,0) in (1) then 4
						when g.mspro_jn_prod=3 and nvl(k.msbi_flag_topup,0) in (0,2) then 3
						else 2
					end) as type_premi,
					b.mste_tgl_aksep , l.lsbs_id, l.lsdbs_number,
					(case when p.lsbs_linebus = 1 then 'KONVENSIONAL'
		                when p.lsbs_linebus = 3 then 'SYARIAH'
		                else ''
		            end) jenis_product,
                    g.mspro_jn_prod
		    	from eka.mst_policy a,
			        eka.mst_insured b,
			        eka.mst_reff_bii c,
			        eka.lst_reff_bii d,
			        eka.lst_cabang_bii e,
			        eka.mst_product_insured f,
			        eka.mst_production g,
			        eka.lst_pay_mode j,
			        eka.mst_billing k,
			        eka.lst_det_bisnis l,
					eka.lst_reff_bii penutup,
					eka.lst_reff_bii_jab n,
					eka.lst_jab_ref_bii o,
					eka.lst_bisnis p
		    	where a.reg_spaj = b.reg_spaj
				    and a.reg_spaj = c.reg_spaj
				    and b.reg_spaj = f.reg_spaj
				    and b.reg_spaj = g.reg_spaj
				    and a.reg_spaj = k.reg_spaj
				    and b.mste_insured_no = f.mste_insured_no
				    and c.reff_id = d.lrb_id
				    and c.lrb_id = penutup.lrb_id
				    and c.lcb_reff = e.lcb_no
				    and a.lscb_id = j.lscb_id
				    and g.msbi_tahun_ke = k.msbi_tahun_ke
				    and g.msbi_premi_ke = k.msbi_premi_ke
				    and f.lsbs_id = l.lsbs_id
				    and f.lsdbs_number = l.lsdbs_number
				    and a.lca_id = '09'
				    and g.mspro_prod_date between to_date(#tanggalAwal#,'dd/mm/yyyy') and to_date(#tanggalAkhir#,'dd/mm/yyyy')
				    <isEqual property="type" compareValue="All">	
				    	and e.jenis in (2,16)
				    </isEqual>
				    <isNotEqual property="type" compareValue="All">	
						and e.jenis = #type#
					</isNotEqual>
					<isEqual property="product" compareValue="All">	
				    	and f.lsbs_id in (120, 202, 213, 216, 134, 215, 208, 219, 73, 183, 189, 142, 158, 175, 226)
				    </isEqual>
				    <isNotEqual property="product" compareValue="All">	
				    	and f.lsbs_id = #product#
				    </isNotEqual>
					<isEqual property="jenis" compareValue="New Business">
						and k.msbi_nb = 1
					</isEqual>
		    		and c.level_id = 4
					and c.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = a.reg_spaj)
				    and n.lrbj_id(+) = d.lrbj_id
				    and o.level_id(+) = penutup.lrbj_id1
					and p.lsbs_id = l.lsbs_id
				) x
			    group by kode_agent, referrer, penutup, kode, gm, cabang, wilayah, id_wilayah, reg_spaj, no_polis, lsdbs_name, nm_pp, nm_tt,
			            lscb_pay_mode, ao, tgl_input_spaj, tgl_aksep, tgl_bayar, mspro_beg_date, kurs, mspro_nilai_kurs, cabang_referrer,
			            mspro_beg_date, mspro_prod_date, lrbj_ket, tier, jab_penutup, penutup_aktif, wil_ajs, leader, type_premi, mste_tgl_aksep,
			            jenis_product, lsbs_id, lsdbs_number, mspro_jn_prod
			    order by lsbs_id, lsdbs_number, jenis_product, reg_spaj, no_polis, tgl_bayar
			) z,
			(select * from eka.mst_product_insured where lsbs_id <![CDATA[>]]> 400 and mspr_active = 1) y, 
			(select reg_spaj, count(*) as jml 
				from eka.mst_product_insured a
				where lsbs_id <![CDATA[>]]> 400
					and exists ( select 1 from eka.mst_product_insured where reg_spaj = a.reg_spaj and lsbs_id in ( 811, 819, 823, 825, 826, 831, 832, 833))
				group by reg_spaj
			) rider_jml
		where z.spaj_no = y.reg_spaj (+)
			and z.spaj_no = rider_jml.reg_spaj (+)
			<isEqual property="jenis" compareValue="New Business">
				and flag = 1
			</isEqual>
			<isEqual property="jenis" compareValue="Renewal">
			  	and (flag <![CDATA[>]]> 1 and top_up != 1)
			</isEqual>
			<isEqual property="jenis" compareValue="Top-Up">
			  	and (flag <![CDATA[>]]> 1 and top_up = 1)
			</isEqual>
		group by kode_agent, referrer, kode_cabang, cabang, wilayah, id_wilayah, gm, spaj_no, policy_no, mata_uang, top_up, tahun_ke, flag, product_name,
		        nama_nasabah, nama_tt, premi_pokok, kurs, premi_pokok_ccy, premi_top_up, premi_top_up_ccy,total_premi, total_premi_ccy, pay_mode, transaction_date,
		        feebase, fee_topup, fee_rider, cabang_referrer, penutup, premi_rider, premi_rider_ccy, mspro_beg_date, mspro_prod_date, upp_pokok_rider, upp_topup,
		        jabatan, tier, tgl_bayar_nb, jab_penutup, penutup_aktif, ape_prod_pokok, ape_prod_pokok_ccy, ape_prod_topup, ape_prod_topup_ccy, wil_ajs, leader, type_premi, rider_jml.jml,mste_tgl_aksep, z.lsbs_id, z.lsdbs_number
		order by z.lsbs_id, z.lsdbs_number
	</select>
	
	<select id="elions.uw.selectReportPrintPolis" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT
		         b.lca_nama, d.mcl_first, eka.f_lsdbs(a.reg_spaj, e.lsbs_id, e.lsdbs_number) lsdbs_name, a.mspo_policy_no_format,
		         i.mcl_first agen
		    FROM 
				 (
				 select * from eka.mst_policy where lstb_id = 1 and mspo_date_print between #tanggalAwal# and #tanggalAkhir#
				<isNotEqual property="cabang" compareValue="All">
					 AND lca_id = #cabang#
				</isNotEqual>
				 ) a,
		         eka.lst_cabang b,
		         eka.mst_client_new d,
		         (
				 select * from eka.mst_product_insured where lsbs_id <![CDATA[<]]> 300
				 <isNotEqual property="produk" compareValue="All">
					 AND lsbs_id = to_number(substr(#produk#,1,3))
				 	 AND lsdbs_number = to_number(substr(#produk#,4))
				 </isNotEqual>
				 ) e,
		         eka.lst_det_bisnis f,
		         (select * from eka.mst_agent_prod where lsle_id = 4) g,
		         eka.mst_agent h,
		         eka.mst_client_new i
		   WHERE a.lca_id = b.lca_id
		     AND a.mspo_policy_holder = d.mcl_id
		     AND a.reg_spaj = e.reg_spaj
		     AND e.lsbs_id = f.lsbs_id
		     AND e.lsdbs_number = f.lsdbs_number
		     AND a.reg_spaj = g.reg_spaj
		     AND g.msag_id = h.msag_id
		     AND h.mcl_id = i.mcl_id
		ORDER BY d.mcl_first	
	</select>

	<select id="elions.uw.validasiSpajAsli" parameterClass="string" resultClass="int">
		select 
		(case when (b.lsbs_id=155 and b.lsdbs_number=2) or (b.lsbs_id=158 and b.lsdbs_number=8) then 1 
		else a.mste_spaj_asli end) hasil 
		from eka.mst_insured a, eka.mst_product_insured b 
		where a.reg_spaj = rpad(replace(#value#,'.'),11,' ') 
		and a.reg_spaj = b.reg_spaj
		and b.lsbs_id<![CDATA[<]]>300
	</select>

	<select id="elions.uw.selectAgenBuatHitungUppEvaluasi" resultClass="com.ekalife.elions.model.Upp" parameterClass="java.util.HashMap">
		SELECT a.mspro_prod_date, a.mspro_nilai_kurs, lsgb_id, d.lsbs_jenis, b.lsbs_id, lsdbs_number,
		       lscb_id, mspro_jn_prod, h.lca_id, a.mspro_prod_ke, a.msbi_tahun_ke,
		       a.reg_spaj, a.msbi_premi_ke, premi_pokok,
		       NVL (premi_rider, 0) premi_rider
		  FROM eka.mst_production a,
		       eka.mst_det_production b,
		       eka.mst_policy c,
		       eka.lst_bisnis d,
		       (SELECT   a.reg_spaj, a.mspro_prod_ke,
		                 SUM (msdpr_premium - nvl(msdpr_discount,0)) premi_pokok
		            FROM eka.mst_production a, eka.mst_det_production b
		           WHERE a.reg_spaj = b.reg_spaj
		             AND a.mspro_prod_ke = b.mspro_prod_ke
		             AND (b.lsbs_id <![CDATA[<]]> 300 or b.lsbs_id between 900 and 999)
		             AND a.reg_spaj = RPAD (REPLACE (#spaj#, '.'), 11, ' ')
		        GROUP BY a.reg_spaj, a.mspro_prod_ke) e,
		       (SELECT   a.reg_spaj, a.mspro_prod_ke,
		                 SUM (msdpr_premium - nvl(msdpr_discount,0)) premi_rider
		            FROM eka.mst_production a, eka.mst_det_production b
		           WHERE a.reg_spaj = b.reg_spaj
		             AND a.mspro_prod_ke = b.mspro_prod_ke
		             AND b.lsbs_id between 800 and 899
		             AND a.reg_spaj = RPAD (REPLACE (#spaj#, '.'), 11, ' ')
		        GROUP BY a.reg_spaj, a.mspro_prod_ke) f,
		       eka.mst_agent_prod g,
		       eka.mst_agent h
		 WHERE a.reg_spaj = c.reg_spaj
		   AND a.lstb_id = b.lstb_id
		   AND a.reg_spaj = b.reg_spaj
		   AND a.mspro_prod_ke = b.mspro_prod_ke
		   AND a.msbi_tahun_ke = b.msbi_tahun_ke
		   AND b.lsbs_id = d.lsbs_id
		   AND a.reg_spaj = e.reg_spaj
		   AND a.mspro_prod_ke = e.mspro_prod_ke
		   AND a.reg_spaj = f.reg_spaj(+)
		   AND a.mspro_prod_ke = f.mspro_prod_ke(+)
		   AND a.reg_spaj = RPAD (REPLACE (#spaj#, '.'), 11, ' ')
		   AND a.mspro_prod_ke = #prod_ke#
		   AND b.lsbs_id <![CDATA[<]]> 300
		   AND c.reg_spaj = g.reg_spaj
		   AND g.lsle_id = 4
		   AND g.msag_id = h.msag_id
		   AND rownum = 1
	</select>

	<select id="elions.uw.selectIzinMeteraiTerakhir" resultClass="string">
		select mstm_kode_dirjen from eka.mst_stamp where mstm_create_dt = (select max(mstm_create_dt) from eka.mst_stamp where mstm_kode_dirjen is not null)
	</select>

	<select id="elions.uw.selectAlasanPendingPrintPolis" parameterClass="string" resultClass="com.ekalife.elions.model.Position">
		SELECT a.reg_spaj, a.msps_date, a.lus_id, a.msps_desc, b.lus_login_name FROM eka.mst_position_spaj a, eka.lst_user b
		 WHERE a.reg_spaj = rpad(replace(#value#,'.'),11,' ') AND a.lspd_id = 6 AND a.lus_id = b.lus_id	
		 ORDER BY a.msps_date
	</select>

	<!-- Cek apakah ada saldo meterai bulan ini, atau bulan lalu -->
	<select id="elions.uw.selectMeterai" resultClass="com.ekalife.elions.model.Meterai">
        SELECT * FROM eka.mst_stamp 
        WHERE mstm_bulan = (SELECT MAX(mstm_bulan) FROM eka.mst_stamp)
	</select>

	<select id="elions.uw.selectEmailCabangTtp" resultClass="string" parameterClass="string">
		select d.mspe_email
		from eka.mst_policy a,
		eka.mst_agent_prod b,
		eka.mst_agent c,
		eka.mst_client_new d,
		eka.lst_region e,
		eka.lst_wakil f,
		eka.lst_cabang g,
		eka.mst_agent h,
		eka.mst_client_new i
		where 
		a.reg_spaj = rpad(replace(#value# ,'.'),11,' ') 
		and a.reg_spaj = b.reg_spaj
		and b.lsle_id = 4
		and b.msag_id = c.msag_id
		and c.mcl_id = d.mcl_id
		and c.lca_id = e.lca_id
		and c.lwk_id = e.lwk_id
		and c.lsrg_id = e.lsrg_id
		and e.lca_id = f.lca_id
		and e.lwk_id = f.lwk_id
		and e.lca_id = g.lca_id
		and a.mspo_ao = h.msag_id(+)
		and h.mcl_id = i.mcl_id(+)
	</select>

	<select id="elions.uw.selectEmailCabangFromSpaj" resultClass="string" parameterClass="string">
		select c.lar_email from eka.mst_policy a, eka.lst_region b, eka.lst_addr_region c where reg_spaj= rpad(replace(#value#,'.'),11,' ')
		and a.lca_id = b.lca_id and a.lwk_id = b.lwk_id and a.lsrg_id = b.lsrg_id and b.lar_id = c.lar_id
	</select>
	
	<select id="elions.uw.selectSpajRecur" resultClass="string" parameterClass="string">
		select distinct A.SUBS_NUMBER from EKA.MST_EKA_RECUR A, EKA.MST_POSITION_SPAJ B 
		where A.SUBS_NUMBER = B.REG_SPAJ and b.reg_spaj = #value#
	</select>

	<select id="elions.uw.selectIsBreakable" parameterClass="string" resultClass="int">
		SELECT count(*)
		  FROM eka.mst_powersave_ro
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ') AND mps_kode = 5 AND mpr_breakable = 1
	</select>
	
	<select id="elions.uw.selectPunyaEndors" parameterClass="string" resultClass="int">
		SELECT count(*)
		  FROM eka.mst_endors
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
		   AND msen_auto_rider = 0
	</select>

	<select id="elions.uw.selectJenisPenutupBII" resultClass="int" parameterClass="string">
		SELECT max(eka.lst_cabang_bii.jenis)
		  FROM eka.lst_cabang_bii, eka.mst_reff_bii
		 WHERE eka.mst_reff_bii.lcb_no = eka.lst_cabang_bii.lcb_no
		   AND eka.mst_reff_bii.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		   AND eka.mst_reff_bii.level_id = 4
	</select>

	<select id="elions.uw.selectInformasiEmailSoftcopy" parameterClass="string" resultClass="java.util.HashMap">
		SELECT e.mcl_first, DECODE (e.mspe_sex, 1, 'Bpk. ', 'Ibu ') gelar, nvl(e.mspe_email, a.e_mail) mspe_email, b.mspo_policy_no_format, c.lca_nama,
		b.mspo_policy_no, b.lspd_id, c.lca_id
		  FROM eka.mst_policy b, eka.mst_client_new e, eka.mst_address_billing a, eka.lst_cabang c
		 WHERE b.reg_spaj = rpad(replace(#value#,'.'),11,' ') AND b.mspo_policy_holder = e.mcl_id AND b.reg_spaj = a.reg_spaj	
		 AND b.lca_id = c.lca_id	
	</select>
	
	<select id="elions.uw.selectInformasiEmailSoftcopyPAS" parameterClass="string" resultClass="java.util.HashMap">
		SELECT e.mcl_first, DECODE (d.msp_sex_pp, 1, 'Bpk. ', 'Ibu ') gelar, nvl(e.mspe_email, a.e_mail) mspe_email, b.mspo_policy_no_format, c.lca_nama,
        b.mspo_policy_no, d.no_kartu, e.mspr_premium, g.lku_id, g.lku_symbol, f.mste_flag_cc, b.lscb_id, h.lscb_pay_mode
          FROM eka.mst_policy b, eka.mst_client_new e, eka.mst_address_billing a, eka.lst_cabang c, eka.mst_pas_sms d, eka.mst_product_insured e, eka.mst_insured f, eka.lst_kurs g, eka.lst_pay_mode h
         WHERE b.reg_spaj = rpad(replace(#value#,'.'),11,' ') 
         AND b.mspo_policy_holder = e.mcl_id 
         AND b.reg_spaj = a.reg_spaj
         AND b.reg_spaj = d.reg_spaj
         AND b.reg_spaj = e.reg_spaj
         AND b.reg_spaj = f.reg_spaj
         AND b.lscb_id = h.lscb_id
         AND e.lsbs_id <![CDATA[<]]> 300
         AND e.lku_id = g.lku_id
         AND b.lca_id = c.lca_id
         and (d.MSP_FIRE_JENIS is null or d.MSP_FIRE_JENIS=0)	
	</select>
	
	<select id="elions.uw.selectJenisTerbitPolis" parameterClass="string" resultClass="java.util.HashMap">
		select nvl(mspo_jenis_terbit, 0) as MSPO_JENIS_TERBIT from eka.mst_policy where reg_spaj = rpad(replace(#value#,'.'),11,' ')	
	</select>
	
	<select id="elions.uw.selectCaraBayarFromSpaj" parameterClass="string" resultClass="int">
		select lscb_id from eka.mst_policy where reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectMstPolicyMspoNoKerjasama" parameterClass="string" resultClass="string">
		select trim(mspo_no_kerjasama) from eka.mst_policy where reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.uw.selectLeadNasabahFromSpaj" parameterClass="string" resultMap="elions.uw.selectLeadNasabahFromSpaj.result">
			SELECT a.jn_nasabah,RPAD (REPLACE (#value#, '.'), 11, ' ') spaj, 
	   			   a.mns_no_ref LEAD,
	               a.mns_kd_nasabah kode, 
	               a.mns_nama nama, 
	               a.mns_nama_lead nm_lead,
	               b.ljl_ket jab_lead, 
	               f.nama_ref, 
	               d.nama_cabang cabang,
	               e.nama_level jab_ref, g.leader_2
             FROM eka.mst_nasabah a,
			       eka.lst_jn_lead b,
			       eka.lst_referrer_bii c,
			       eka.lst_cab_bii d,
			       eka.lst_jab_ref_bii e,
				   eka.lst_referrer_bii f, 
				   (select x.referrer_id as referrer_id_1, 
	 		 	   		   x.nama_ref as leader_1,
			 			   y.referrer_id as referrer_id_2, 
	 		 			   y.nama_ref as leader_2 
	  			    from eka.lst_referrer_bii x,
	  	   				 eka.lst_referrer_bii y
	  				where x.leader_id = y.referrer_id(+)) g
              WHERE a.mns_kd_nasabah = (SELECT mspo_plan_provider
			                            FROM eka.mst_policy
			                            WHERE reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' '))
	                AND a.ljl_jenis = b.ljl_jenis
	                AND a.referrer_id = c.referrer_id(+)
	                AND c.leader_id=f.referrer_id(+)
	                AND c.kode = d.kode(+)
	                AND c.level_id = e.level_id(+)
	                AND f.leader_id = g.referrer_id_1(+)

	</select>
	<!-- 	                AND d.flag_aktif = 1
	 -->
	<select id="elions.uw.selectTelemarketerFromSpaj" parameterClass="string" resultClass="java.util.HashMap">
		SELECT 	 a.tm_id, a.tm_code, a.spv_code, nvl(b.spv_name, a.spv_name) spv_name
			FROM (SELECT   nvl(p.mspo_no_kerjasama, a.tm_id) tm_id, a.tm_code, nvl(p.mspo_spv_dmtm,b.spv_code) spv_code, 
					 b.spv_name spv_name
					    FROM eka.mst_policy p, eka.lst_sales_tm@eb a, eka.lst_spv_tm@eb b
					   WHERE p.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
					     AND trim(p.mspo_no_kerjasama) = trim(a.tm_id)
					     AND a.spv_code = b.spv_code
					     AND a.flag_aktif = 1) a,
				  eka.lst_spv_tm@eb b
			WHERE a.spv_code = b.spv_code	
			ORDER BY a.tm_code
	</select>

	<select id="elions.uw.selectLeadNasabah" parameterClass="string" resultClass="java.util.HashMap">
		select mns_no_ref result0, mns_kd_nasabah result1, mns_nama result2 from eka.mst_nasabah where mns_no_ref=#value#
	</select>

	<select id="elions.uw.selectCariNasabah" parameterClass="string" resultClass="java.util.HashMap">
			SELECT   a.mns_no_ref result0, a.mns_kd_nasabah result1, a.mns_nama result2,
		         a.mns_nama_lead result3, c.ljl_ket result4, f.nama_ref result5,
		         d.nama_cabang result6, e.nama_level result7
		    FROM (SELECT *
		            FROM eka.mst_nasabah
		         WHERE UPPER (mns_no_ref) LIKE upper('%'||#value#||'%')
		            OR UPPER (mns_nama) LIKE upper('%'||#value#||'%')) a,
		         eka.lst_referrer_bii b,
		         eka.lst_jn_lead c,
		         eka.lst_cab_bii d,
		         eka.lst_jab_ref_bii e,
				 eka.lst_referrer_bii f
		   WHERE a.referrer_id = b.referrer_id(+)
		     AND a.ljl_jenis = c.ljl_jenis
		     AND b.kode = d.kode(+)
		     AND b.level_id = e.level_id(+)
			 AND b.leader_id=f.referrer_id(+)
		ORDER BY a.mns_nama
	</select>

	<select id="elions.uw.selectCariTelemarketer" parameterClass="string" resultClass="java.util.HashMap">
		SELECT   a.tm_id, a.tm_code, b.spv_code, b.spv_name
		    FROM eka.lst_sales_tm@eb a, eka.lst_spv_tm@eb b
		   WHERE (UPPER (a.tm_id) LIKE '%'||#value#||'%' or UPPER (a.tm_code) LIKE '%'||#value#||'%')
		     AND a.spv_code = b.spv_code
		     AND a.flag_aktif = 1
		ORDER BY a.tm_code	
	</select>
	
	<select id="elions.uw.selectCariSPVTelemarketer" parameterClass="string" resultClass="java.util.HashMap">
		SELECT   a.spv_code, a.spv_name
		    FROM eka.lst_spv_tm@eb a
		   WHERE (UPPER (a.spv_code) LIKE '%'||#value#||'%' or UPPER (a.spv_name) LIKE '%'||#value#||'%')
		     AND a.flag_aktif = 1
		ORDER BY a.spv_code	
	</select>

	<select id="elions.uw.selectPersentaseDplk" parameterClass="string" resultMap="elions.uw.selectPersentaseDplk.result">
		select nvl(a.mste_pct_dplk,0) mste_pct_dplk, b.mspr_premium, (a.mste_pct_dplk/100*b.mspr_premium) biaya_dplk, ((100-a.mste_pct_dplk)/100*b.mspr_premium) premi 
		from eka.mst_insured a, eka.mst_product_insured b where a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		and a.reg_spaj = b.reg_spaj and b.lsbs_id<![CDATA[<]]>300
	</select>

	<select id="elions.uw.selectBonusAgen" parameterClass="string" resultClass="java.util.HashMap">
		select b.mcl_first, a.msag_tabungan, a.lbn_id from eka.mst_agent a, eka.mst_client_new b where a.mcl_id = b.mcl_id and a.msag_id = #value#
	</select>

	<select id="elions.uw.selectStatusPolisFromSpaj" parameterClass="string" resultClass="int">
		select lssp_id from eka.mst_policy where reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.uw.selectNextBill" parameterClass="java.util.Date" resultClass="java.util.Date">
		 select
		 case when to_char(#value#,'dd') <![CDATA[<]]> to_char(add_months(#value#,1),'dd')
		 then to_date(to_char(#value#,'dd') || '/' || to_char(add_months(#value#,1),'mm/yyyy'),'dd/mm/yyyy')
		 else add_months(#value#,1) end
		 from dual
	</select>

	<select id="elions.uw.selectTotalPremi" parameterClass="string" resultClass="double">
      select decode(sum(premi_billing),0,sum(premi_utama),sum(premi_billing)) premi
		from (SELECT nvl(SUM (b.msdb_premium - b.msdb_discount ),0) premi_billing, 0 premi_utama
		          FROM eka.mst_billing a, eka.mst_det_billing b
		         WHERE b.reg_spaj = a.reg_spaj
		           AND b.msbi_tahun_ke = a.msbi_tahun_ke
		           AND b.msbi_premi_ke = a.msbi_premi_ke
		           AND a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		           AND a.msbi_paid = 1
		           AND a.msbi_nb = 1
		      UNION ALL
		      SELECT 0 premi_billing, SUM(mspr_premium) premi_utama
		          FROM eka.mst_product_insured a
		         WHERE a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		         ) d	
	</select>

	<select id="elions.uw.selectIsAgentCertified" parameterClass="string" resultClass="int">
		SELECT (CASE
		           WHEN msag_sertifikat = 0 THEN 0
		           WHEN msag_sertifikat = 2 THEN 1
		           ELSE (CASE
		                    WHEN msag_berlaku >= SYSDATE THEN 1
		                    ELSE 0
		                 END)
		        END
		       ) is_certified
		  FROM eka.mst_agent
		 WHERE msag_id = #value#
	</select>

	<select id="elions.uw.selectIsSimasCardClientAnAgent" parameterClass="string" resultClass="java.util.HashMap">
		select * from eka.mst_client_new a, eka.mst_agent b where (trim(a.mcl_first), a.mspe_date_birth) = ( 
		select decode(instr(mcl_first,'QQ'),0,mcl_first,TRIM(SUBSTR(mcl_first, 0, INSTR(mcl_first,'QQ')-1))), b.mspe_date_birth
		from eka.mst_policy a, eka.mst_client_new b
		where a.mspo_policy_holder = b.mcl_id
		and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		)
		and a.mcl_id = b.mcl_id
		and b.lstb_id = 1
		and b.msag_active=1	
		and b.lca_id <![CDATA[<>]]> '09'
	</select>

	<select id="elions.uw.selectSimasCard" parameterClass="string" resultClass="java.util.HashMap">
		select * from eka.mst_simcard a, eka.mst_client_new b where a.mcl_id = b.mcl_id and replace(nama,'.','') like ( 
        	select '%' ||replace(decode(instr(mcl_first,'QQ'),0,mcl_first,TRIM(SUBSTR(mcl_first, 0, INSTR(mcl_first,'QQ')-1))) ,'.','')|| '%'
        	from eka.mst_policy a, eka.mst_client_new b
        	where a.mspo_policy_holder = b.mcl_id
        	and a.reg_spaj = rpad(replace(#value#,'.'),11,' '))
        	and (a.tgl_lahir) = (
                    select b.mspe_date_birth
            	from eka.mst_policy a, eka.mst_client_new b
            	where a.mspo_policy_holder = b.mcl_id
            	and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
        	)
        and flag_aktif=1 and msc_jenis != 9
	</select>
	
	<select id="elions.uw.selectJumlahPolis" parameterClass="string" resultClass="java.util.HashMap">
		SELECT a.reg_spaj, a.mspo_policy_holder, b.mste_beg_date, b.mste_end_date,
		       a.lku_id, a.mspo_ins_period, d.lsbs_id, d.lsdbs_number, d.mspr_tsi,
		       d.mspr_premium, 0 AS total_premi, a.mspo_policy_no
		  FROM eka.mst_policy a,
		       eka.mst_insured b,
		       eka.mst_client_new c,
		       eka.mst_product_insured d
		 WHERE b.reg_spaj = a.reg_spaj
		   AND c.mcl_id = c.mcl_id
		   AND a.mspo_policy_holder = c.mcl_id
		   AND b.reg_spaj = d.reg_spaj
		   AND a.lstb_id = 1
		        AND a.lssp_id = 1
		        AND d.lsbs_id <![CDATA[<]]> 400
		        AND (c.mcl_first, c.mspe_date_birth) = 
			        (
						select b.mcl_first, b.mspe_date_birth
						from eka.mst_policy a, eka.mst_client_new b
						where a.mspo_policy_holder = b.mcl_id
						and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')		        
			        )
	</select>

	<select id="elions.uw.selectNilai" parameterClass="string" resultClass="com.ekalife.elions.model.Nilai">
		SELECT   reg_spaj, tahun,MAX (DECODE (jenis, 2, nilai, 0)) nilai_tunai,
		         MAX (DECODE (jenis, 3, nilai, 0)) tahapan,
		         MAX (DECODE (jenis, 4, nilai, 0)) bonus,
		         MAX (DECODE (jenis, 5, nilai, 0)) saving,
		         MAX (DECODE (jenis, 6, nilai, 0)) deviden,
		         MAX (DECODE (jenis, 7, nilai, 0)) maturity, 
		         NVL(persen, 0) persen
		    FROM eka.mst_nilai
		   WHERE reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		GROUP BY reg_spaj, tahun, persen
		ORDER BY reg_spaj, tahun, nilai_tunai desc, tahapan desc, bonus desc, saving desc, deviden desc, maturity desc, persen desc
	</select>
	
	<select id="elions.uw.selectNTMI" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select (nilai*100)  persen
			from eka.lst_ntmi 
			where lsbs_id = #lsbs_id# 
			and lsdbs_number = #lsdbs_number#
			and lscb_id= #lscb_id#
			and bayar_penuh = #bayar_penuh#
			and nt_ke = #nt_ke#
	</select>

	<select id="elions.uw.selectNilaiMultiInvest" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Nilai">
		SELECT c.reg_spaj, a.nt_ke tahun, b.mspr_tsi tsi, b.mspr_premium, 
				( a.nilai)nilai,
		        round ((CASE
		             WHEN c.lscb_id = 1
		                THEN b.mspr_premium / 0.27
		             WHEN c.lscb_id = 2
		                THEN b.mspr_premium / 0.525
		             WHEN c.lscb_id = 3
		                THEN b.mspr_premium
		             ELSE 0
		          END
		         )
		       * (a.nilai)) nilai_tunai,
		       0 tahapan, 0 bonus, 0 saving, 0 deviden, 0 maturity, 
			   (a.nilai) persen
		  FROM eka.lst_ntmi a, eka.mst_product_insured b, eka.mst_policy c
		 WHERE a.lsbs_id = b.lsbs_id
		   AND a.lsdbs_number = b.lsdbs_number
		   AND a.lscb_id = 3
		   AND a.bayar_penuh = 5
		   AND b.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
		   AND b.reg_spaj = c.reg_spaj
	</select>
	
	<select id="elions.uw.selectNilaiMultiInvest2" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Nilai">
		SELECT c.reg_spaj, a.nt_ke tahun, b.mspr_tsi tsi, b.mspr_premium, 
				(case when b.mspr_beg_date <![CDATA[<]]> '1 may 2010' then a.nilai
					  when b.mspr_beg_date <![CDATA[>=]]> '1 may 2010' and a.nt_ke=5 then 5.8
					  when b.mspr_beg_date <![CDATA[>=]]> '1 may 2010' and a.nt_ke=6 then 6.3
					  when b.mspr_beg_date <![CDATA[>=]]> '1 may 2010' and a.nt_ke=7 then (case when b.lsbs_id='182' and b. lsdbs_number in('13','14','15') then 6.6 else 7 end)
					  when b.mspr_beg_date <![CDATA[>=]]> '1 may 2010' and a.nt_ke=8 then (case when b.lsbs_id='182' and b. lsdbs_number in('13','14','15') then 7 else 7.5 end)
					  else a.nilai
					  end)nilai,
		         ((CASE
		             WHEN c.lscb_id = 1
		                THEN b.mspr_premium / 0.27
		             WHEN c.lscb_id = 2
		                THEN b.mspr_premium / 0.525
		             WHEN c.lscb_id = 3
		                THEN b.mspr_premium
		             ELSE 0
		          END
		         )
		       * (case when b.mspr_beg_date <![CDATA[<]]> '1 may 2010' then a.nilai
					  when b.mspr_beg_date <![CDATA[>=]]> '1 may 2010' and a.nt_ke=5 then 5.8
					  when b.mspr_beg_date <![CDATA[>=]]> '1 may 2010' and a.nt_ke=6 then 6.3
					   when b.mspr_beg_date <![CDATA[>=]]> '1 may 2010' and a.nt_ke=7 then (case when b.lsbs_id='182' and b. lsdbs_number in('13','14','15') then 6.6 else 7 end)
					  when b.mspr_beg_date <![CDATA[>=]]> '1 may 2010' and a.nt_ke=8 then (case when b.lsbs_id='182' and b. lsdbs_number in('13','14','15') then 7 else 7.5 end)
					  else a.nilai
					  end)) nilai_tunai,
		       0 tahapan, 0 bonus, 0 saving, 0 deviden, 0 maturity, 
			   (case when b.mspr_beg_date <![CDATA[<]]> '1 may 2010' then a.nilai
				  when b.mspr_beg_date <![CDATA[>=]]> '1 may 2010' and a.nt_ke=5 then 5.8
				  when b.mspr_beg_date <![CDATA[>=]]> '1 may 2010' and a.nt_ke=6 then 6.3
				    when b.mspr_beg_date <![CDATA[>=]]> '1 may 2010' and a.nt_ke=7 then (case when b.lsbs_id='182' and b. lsdbs_number in('13','14','15') then 6.6 else 7 end)
					  when b.mspr_beg_date <![CDATA[>=]]> '1 may 2010' and a.nt_ke=8 then (case when b.lsbs_id='182' and b. lsdbs_number in('13','14','15') then 7 else 7.5 end)
					  else a.nilai
				  end) persen
		  FROM eka.lst_ntmi a, eka.mst_product_insured b, eka.mst_policy c
		 WHERE a.lsbs_id = b.lsbs_id
		   AND a.lsdbs_number = b.lsdbs_number
		   AND a.lscb_id = 3
		   AND a.bayar_penuh = 5
		   AND b.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
		   AND b.reg_spaj = c.reg_spaj
	</select>

	<select id="elions.uw.selectNilaiFromLstNilai" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Nilai">
		select a.*, (nilai_tunai/mspr_premium)*100 persen from (
			select #reg_spaj# reg_spaj, tahun, b.mspr_tsi tsi, b.mspr_premium, 
			round((case when b.lsbs_id in (69, 82) then ((decode(jenis,0+2,nilai,0) * b.mspr_tsi) / 1000) / 3 else (decode(jenis,0+2,nilai,0) * b.mspr_tsi) / (case when (b.lsbs_id = 178 or b.lsbs_id = 208) then 10 else 1000 end) end),2) nilai_tunai, 
			round((case when b.lsbs_id in (69, 82) then ((decode(jenis,1+2,nilai,0) * b.mspr_tsi) / 1000) / 3 else (decode(jenis,1+2,nilai,0) * b.mspr_tsi) / (case when (b.lsbs_id = 178 or b.lsbs_id = 208) then 10 else 1000 end) end),2) tahapan,
			round(((decode(jenis,2+2,nilai,0) * b.mspr_tsi) / (case when (b.lsbs_id = 178 or b.lsbs_id = 208) then 10 else 1000 end) ),2) bonus, 
			round(((decode(jenis,3+2,nilai,0) * b.mspr_tsi) / (case when (b.lsbs_id = 178 or b.lsbs_id = 208) then 10 else 1000 end) ),2) saving, 
			round(((decode(jenis,4+2,nilai,0) * b.mspr_tsi) / (case when (b.lsbs_id = 178 or b.lsbs_id = 208) then 10 else 1000 end) ),2) deviden, 
			round(((decode(jenis,5+2,nilai,0) * b.mspr_tsi) / (case when (b.lsbs_id = 178 or b.lsbs_id = 208) then 10 else 1000 end) ),2) maturity 
			from				
			(select * from eka.lst_nilai 
				where lsbs_id = #lsbs_id# and lsdbs_number = #lsdbs_number# and lku_id=#lku_id# and usia=#umur#) a,
			(select * from eka.mst_product_insured 
				where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') and lsbs_id=#lsbs_id# and lsdbs_number = #lsdbs_number#) b 
		) a
	</select>
	
	<select id="elions.uw.selectNilaiFromLstNilai208" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Nilai">
		 select a.*, (nilai_tunai/mspr_premium)*100 persen from (
            select #reg_spaj# reg_spaj, rownum tahun, b.mspr_tsi tsi, b.mspr_premium, usia, rownum jenis, b.lsbs_id,
			(case when usia = 6 then b.mspr_tsi*0                   
				when usia = 12 then b.mspr_tsi/10                   
				when usia = 15 then b.mspr_tsi/5                   
				when usia = 18 then b.mspr_tsi/2                   
				when usia = 22 then b.mspr_tsi/5             
			end) nilai_tunai,
			round((case when b.lsbs_id in (69, 82) then ((decode(jenis,1,nilai,0) * b.mspr_tsi) / 1000) / 3 else (decode(jenis,1,nilai,0) * b.mspr_tsi) / (case when (b.lsbs_id = 178 or b.lsbs_id = 208) then 10 else 1000 end) end),2) tahapan,
			round(((decode(jenis,2,nilai,0) * b.mspr_tsi) / (case when (b.lsbs_id = 178 or b.lsbs_id = 208) then 10 else 1000 end) ),2) bonus, 
			round(((decode(jenis,3,nilai,0) * b.mspr_tsi) / (case when (b.lsbs_id = 178 or b.lsbs_id = 208) then 10 else 1000 end) ),2) saving, 
			round(((decode(jenis,4,nilai,0) * b.mspr_tsi) / (case when (b.lsbs_id = 178 or b.lsbs_id = 208) then 10 else 1000 end) ),2) deviden, 
			round(((decode(jenis,5,nilai,0) * b.mspr_tsi) / (case when (b.lsbs_id = 178 or b.lsbs_id = 208) then 10 else 1000 end) ),2) maturity 
			from				
			(select * from eka.lst_nilai 
				where lsbs_id = #lsbs_id# and lsdbs_number = #lsdbs_number# and lku_id=#lku_id# and tahun=#umur#) a,
			(select * from eka.mst_product_insured 
				where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') and lsbs_id=#lsbs_id# and lsdbs_number = #lsdbs_number#) b 
		) a
	</select>
	
	<select id="elions.uw.select208New" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Nilai">
		select #reg_spaj# reg_spaj, lsbs_id, 0 persen,
        lstab_tahun_ke tahun, a.tsi, a.mspr_premium, 
        round((case when lsbs_id in (69, 82) then ((nilai_tunai * tsi) / 1000) / 3 else (nilai_tunai * tsi) / 1000 end),2) nilai_tunai, 
        (case when lstab_tahun_ke = (a.masa-16) then a.tsi * (select lstab_value from eka.lst_table_new where lstab_age=6 and lsbs_id = #lsbs_id# and lsdbs_number = #lsdbs_number# and lstab_jenis=3)               
                when lstab_tahun_ke = (a.masa-10) then a.tsi * (select lstab_value from eka.lst_table_new where lstab_age=12 and lsbs_id = #lsbs_id# and lsdbs_number = #lsdbs_number# and lstab_jenis=3)                    
                when lstab_tahun_ke = (a.masa-7) then a.tsi * (select lstab_value from eka.lst_table_new where lstab_age=15 and lsbs_id = #lsbs_id# and lsdbs_number = #lsdbs_number# and lstab_jenis=3)                   
                when lstab_tahun_ke = (a.masa-4) then a.tsi * (select lstab_value from eka.lst_table_new where lstab_age=18 and lsbs_id = #lsbs_id# and lsdbs_number = #lsdbs_number# and lstab_jenis=3)                    
                when lstab_tahun_ke = (a.masa-0)   then a.tsi * (select lstab_value from eka.lst_table_new where lstab_age=22 and lsbs_id = #lsbs_id# and lsdbs_number = #lsdbs_number# and lstab_jenis=3)              
            end) tahapan,
        round(((bonus * tsi) / 1000 ),2) bonus, 
        round(((saving * tsi) / 1000 ),2) saving, 
        round(((deviden * tsi) / 1000 ),2) deviden, 
        round(((maturity * tsi) / 1000 ),2) maturity 
        from  
        (
        select lsbs_id, a.mspr_premium, decode(lsbs_id,42,MSINV_INVESTASI,mspr_tsi) tsi, A.MSPR_INS_PERIOD masa from eka.mst_product_insured a, eka.mst_investasi_plan_42 b 
        where a.lsbs_id <![CDATA[<]]> 300 and a.reg_spaj = b.reg_spaj(+) and a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
        ) a,
        (select lstab_tahun_ke, sum(nilai_tunai) nilai_tunai, sum(tahapan) tahapan, sum(bonus) bonus, sum(saving) saving, sum(deviden) deviden, sum(maturity) maturity from
        (SELECT DISTINCT lstab_tahun_ke,
                        DECODE (lstab_jenis, 2, SUM (lstab_value), 0) AS nilai_tunai,
                        DECODE (lstab_jenis, 3, SUM (lstab_value), 0) AS tahapan,
                        DECODE (lstab_jenis, 4, SUM (lstab_value), 0) AS bonus,
                        DECODE (lstab_jenis, 5, SUM (lstab_value), 0) AS saving,
                        DECODE (lstab_jenis, 6, SUM (lstab_value), 0) AS deviden,
                        DECODE (lstab_jenis, 7, SUM (lstab_value), 0) AS maturity
                   FROM eka.lst_table_new
                  WHERE lsbs_id = #lsbs_id#
                    AND lsdbs_number = #lsdbs_number#
                    AND lku_id = #lku_id#
		            AND lscb_id = #lscb_id#
		            AND lstab_lama_bayar = #mspo_pay_period#
		            AND lstab_lama_tanggung = #mspo_ins_period#
		            AND lstab_age = #umur# 
                    AND lstab_tahun_ke <![CDATA[<=]]> (select (to_char(mste_end_date+1,'yy') - to_char(mste_beg_date,'yy')) from eka.mst_insured where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') )
                    AND lstab_jenis NOT IN (1, 8)
               GROUP BY lstab_jenis,
                        lstab_tahun_ke,
                        lsbs_id,
                        lku_id,
                        lscb_id,
                        lstab_lama_bayar,
                        lstab_lama_tanggung,
                        lstab_age) group by lstab_tahun_ke) b	
	</select>
	
	<select id="elions.uw.selectTahapan208" parameterClass="string" resultClass="java.util.HashMap">
		select (b.usia || ' Tahun') usia, (b.nilai*100 ||'%') persen,(a.tsi * b.nilai) tahapan from 
		(select mspr_tsi tsi, lsbs_id, lsdbs_number, reg_spaj from eka.mst_product_insured where reg_spaj = rpad(#value#,11,' ') and lsbs_id<![CDATA[<]]>300 ) a,
		(select lstab_age usia, lstab_value nilai, lsbs_id, lsdbs_number from eka.lst_table_new where lstab_jenis = 3) b,
		eka.mst_product_insured c
		where a.lsbs_id = c.lsbs_id
		and a.lsdbs_number = c.lsdbs_number
		and b.lsbs_id = c.lsbs_id
		and b.lsdbs_number = c.lsdbs_number
		and c.reg_spaj = a.reg_spaj
	</select>
	
	<select id="elions.uw.selectNilaiTunai208" parameterClass="string" resultClass="java.util.HashMap">
		select usia, tahun, nilai , (case when usia in (6,12,15,22) then ' *)' else '   ' end) bintang from (
		select ((rownum)+c.mste_age) usia, a.tahun, a.nilai
		from eka.mst_nilai a, eka.mst_insured b, (select mste_age, reg_spaj from eka.mst_insured) c
		where a.reg_Spaj =  rpad(#value#,11,' ')
		and a.reg_spaj = c.reg_spaj
		and a.reg_spaj = b.reg_spaj
		and a.jenis = 2 
		order by a.tahun
		)
	</select>
	
	<select id="elions.uw.selectNilaiTunaiTermRop" parameterClass="string" resultClass="java.util.HashMap">
		select a.tahun, c.lscb_id, b.mspr_premium, 
		(case when a.tahun = (select max(tahun) from eka.mst_nilai where reg_spaj = a.reg_spaj) then null else a.nilai end) nilai, 
		(select nilai from eka.mst_nilai where jenis = 7 and reg_Spaj = b.reg_spaj and tahun=a.tahun) maturity
		from eka.mst_nilai a, eka.mst_product_insured b, eka.mst_policy c
		where a.reg_Spaj = rpad(#value#,11,' ') 
		and a.jenis in (2,7)
		and a.reg_spaj = b.reg_spaj
		and a.reg_spaj = c.reg_spaj
		order by tahun
    </select>
	
	<select id="elions.uw.selectNilaiFromLstPremiSS" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Nilai">
		select #reg_spaj# reg_spaj, tahun, b.mspr_tsi tsi, b.mspr_premium, 
		round(lsprss_value,2) nilai_tunai, 
		round(0,2) tahapan,
		round(0,2) bonus, 
		round(0,2) saving, 
		round(0,2) deviden, 
		round(0,2) maturity,
		0 persen
		from				
		(select * from eka.lst_premi_ss 
			where lsbs_id = #lsbs_id# and lsprss_plan = #lsdbs_number# and lku_id=#lku_id# and lsprss_age=#umur#) a,
		(select * from eka.mst_product_insured 
			where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') and lsbs_id=#lsbs_id# and lsdbs_number = #lsdbs_number#) b 
	</select>
	
	<select id="elions.uw.selectNilaiFromLstTable" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Nilai">
		select #reg_spaj# reg_spaj, 0 persen,
		lstab_tahun_ke tahun, a.tsi, a.mspr_premium, 
		round((case when lsbs_id in (69, 82) then ((nilai_tunai * tsi) / 1000) / 3 else (nilai_tunai * tsi) / 1000 end),2) nilai_tunai, 
		round((case when lsbs_id in (69, 82) then ((tahapan * tsi) / 1000) / 3 else (tahapan * tsi) / 1000 end),2) tahapan,
		round(((bonus * tsi) / 1000 ),2) bonus, 
		round(((saving * tsi) / 1000 ),2) saving, 
		round(((deviden * tsi) / 1000 ),2) deviden, 
		round(((maturity * tsi) / 1000 ),2) maturity 
		from  
		(
		select lsbs_id, a.mspr_premium, decode(lsbs_id,42,MSINV_INVESTASI,mspr_tsi) tsi from eka.mst_product_insured a, eka.mst_investasi_plan_42 b 
		where a.lsbs_id <![CDATA[<]]> 300 and a.reg_spaj = b.reg_spaj(+) and a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
		) a,
		(select lstab_tahun_ke, sum(nilai_tunai) nilai_tunai, sum(tahapan) tahapan, sum(bonus) bonus, sum(saving) saving, sum(deviden) deviden, sum(maturity) maturity from
		(SELECT DISTINCT lstab_tahun_ke,
		                DECODE (lstab_jenis, 2, SUM (lstab_value), 0) AS nilai_tunai,
		                DECODE (lstab_jenis, 3, SUM (lstab_value), 0) AS tahapan,
		                DECODE (lstab_jenis, 4, SUM (lstab_value), 0) AS bonus,
		                DECODE (lstab_jenis, 5, SUM (lstab_value), 0) AS saving,
		                DECODE (lstab_jenis, 6, SUM (lstab_value), 0) AS deviden,
		                DECODE (lstab_jenis, 7, SUM (lstab_value), 0) AS maturity
		              FROM eka.lst_table
		          WHERE lsbs_id = #lsbs_id#
		            AND lku_id = #lku_id#
		            AND lscb_id = #lscb_id#
		            AND lstab_lama_bayar = #mspo_pay_period#
		            AND lstab_lama_tanggung = #mspo_ins_period#
		            AND lstab_age = #umur# 
		            AND lstab_tahun_ke <![CDATA[<=]]> (select (to_char(mste_end_date,'yyyy') - to_char(mste_beg_date,'yyyy')) from eka.mst_insured where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') )
		            AND lstab_jenis NOT IN (1, 8)
		       GROUP BY lstab_jenis,
		                lstab_tahun_ke,
		                lsbs_id,
		                lku_id,
		                lscb_id,
		                lstab_lama_bayar,
		                lstab_lama_tanggung,
		                lstab_age) group by lstab_tahun_ke) b	
	</select>
	
	<select id="elions.uw.selectNilaiFromLstTableNew" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Nilai">
		select #reg_spaj# reg_spaj, 0 persen,
		lstab_tahun_ke tahun, a.tsi, a.mspr_premium, 
		round((case when lsbs_id in (69, 82) then ((nilai_tunai * tsi) / 1000) / 3 else (nilai_tunai * tsi) / 1000 end),2) nilai_tunai, 
		round((case when lsbs_id in (69, 82) then ((tahapan * tsi) / 1000) / 3 else (tahapan * tsi) / 1000 end),2) tahapan,
		round(((bonus * tsi) / 1000 ),2) bonus, 
		round(((saving * tsi) / 1000 ),2) saving, 
		round(((deviden * tsi) / 1000 ),2) deviden, 
		round(((maturity * tsi) / 1000 ),2) maturity 
		from  
		(
		select lsbs_id, a.mspr_premium, decode(lsbs_id,42,MSINV_INVESTASI,mspr_tsi) tsi from eka.mst_product_insured a, eka.mst_investasi_plan_42 b 
		where a.lsbs_id <![CDATA[<]]> 300 and a.reg_spaj = b.reg_spaj(+) and a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
		) a,
		(select lstab_tahun_ke, sum(nilai_tunai) nilai_tunai, sum(tahapan) tahapan, sum(bonus) bonus, sum(saving) saving, sum(deviden) deviden, sum(maturity) maturity from
		(SELECT DISTINCT lstab_tahun_ke,
		                DECODE (lstab_jenis, 2, SUM (lstab_value), 0) AS nilai_tunai,
		                DECODE (lstab_jenis, 3, SUM (lstab_value), 0) AS tahapan,
		                DECODE (lstab_jenis, 4, SUM (lstab_value), 0) AS bonus,
		                DECODE (lstab_jenis, 5, SUM (lstab_value), 0) AS saving,
		                DECODE (lstab_jenis, 6, SUM (lstab_value), 0) AS deviden,
		                DECODE (lstab_jenis, 7, SUM (lstab_value), 0) AS maturity
		           FROM eka.lst_table_new
		          WHERE lsbs_id = #lsbs_id#
		          	AND lsdbs_number = #lsdbs_number#
		            AND lku_id = #lku_id#
		            AND lscb_id = #lscb_id#
		            AND lstab_lama_bayar = #mspo_pay_period#
		            AND lstab_lama_tanggung = #mspo_ins_period#
		            AND lstab_age = #umur# 
		            AND lstab_tahun_ke <![CDATA[<=]]> (select (to_char(mste_end_date,'yy') - to_char(mste_beg_date,'yy')) from eka.mst_insured where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') )
		            AND lstab_jenis NOT IN (1, 8)
		       GROUP BY lstab_jenis,
		                lstab_tahun_ke,
		                lsbs_id,
		                lku_id,
		                lscb_id,
		                lstab_lama_bayar,
		                lstab_lama_tanggung,
		                lstab_age) group by lstab_tahun_ke) b	
	</select>	
	
	<select id="elions.uw.selectDaftarPremiPertama" parameterClass="string" resultClass="java.util.HashMap">
		select 
			   a.lt_id, a.mu_tgl_trans, a.mu_jlh_premi, a.mu_tgl_surat, a.mu_bulan_surat, 
			   decode(b.lt_id,1,'Premi Pokok', b.lt_transksi) lt_transksi,
			   a.mu_ke, a.mu_tgl_nab, a.mu_periodic_tu, c.lspd_position
		from eka.mst_ulink a, eka.lst_transaksi b, eka.lst_document_position c
		where a.lt_id = b.lt_id and a.mu_lspd_id = c.lspd_id
		and a.mu_tgl_trans = (select mu_tgl_trans from eka.mst_ulink where mu_ke=1 and reg_spaj = a.reg_spaj)
		and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		order by a.mu_ke
	</select>
	
	<select id="elions.uw.selectUnitLink" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Ulink">
		SELECT mu_jlh_premi, mu_ke, mu_tgl_nab, mu_periodic_tu, mu_tgl_surat,
		       mu_jlh_tu, mu_bulan_surat, (mu_jlh_premi + mu_jlh_tu) total,
		       lspd_position
		  FROM eka.mst_ulink a, eka.lst_document_position b
		 WHERE a.mu_lspd_id = b.lspd_id AND reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND mu_ke = #ke#
	</select>
	
	<select id="elions.uw.selectInfoStableSave" parameterClass="string" resultClass="java.util.HashMap">
		SELECT   a.reg_spaj, a.mss_no,
		         DECODE (a.mss_ro,
		                 1, 'Nilai Tunai (ALL)',
		                 2, 'Premi',
		                 3, 'Autobreak',
		                 'ERROR'
		                ) rollover,
		         a.mss_bdate, a.mss_edate, a.mss_premi, a.mss_rate, a.mss_mgi,
		         a.mss_bunga, a.mss_input_date, d.lus_login_name, a.mss_note,
		         a.flag_bulanan, a.mss_hari, decode(a.flag_bulanan,0,'NON MANFAAT BULANAN','MANFAAT BULANAN') info_flag_bulanan
		    FROM eka.mst_ssave a, eka.lst_user d
		   WHERE a.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		     AND a.lus_id = d.lus_id
		     AND a.mss_aktif = 1
		ORDER BY a.mss_no	
	</select>
	
	<select id="elions.uw.selectInfoStableLink" parameterClass="string" resultClass="java.util.HashMap">
		SELECT a.reg_spaj, a.msl_no, b.lji_invest,
		       DECODE (a.msl_ro,
		               1, 'Nilai Tunai (ALL)',
		               2, 'Premi',
		               3, 'Autobreak',
		               'ERROR'
		              ) rollover,
		       c.lspd_position, a.msl_bdate, a.msl_edate, a.msl_premi, a.msl_rate,
		       a.msl_mgi, a.msl_bunga, a.msl_tgl_nab, a.msl_nab, a.msl_unit,
		       a.msl_saldo_unit, a.msl_input_date, d.lus_login_name, 
			   (case when e.lsbs_id =186 and e.lsdbs_number = 3 then 'Premi Ke - ' || a.msl_no else a.msl_desc end)msl_desc, msl_next_date, a.flag_bulanan,
		       a.msl_aktif, e.lku_id, f.lku_symbol
		  FROM eka.mst_slink a,
		       eka.lst_jenis_invest b,
		       eka.lst_document_position c,
		       eka.lst_user d,
		       eka.mst_product_insured e,
		       eka.lst_kurs f
		 WHERE a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		   AND a.reg_spaj = e.reg_spaj
		   AND e.lsbs_id <![CDATA[<]]> 300
		   AND a.lji_id = b.lji_id
		   AND a.msl_posisi = c.lspd_id
		   AND a.lus_id = d.lus_id	
		   AND a.msl_new = 1
		   AND e.lku_id = f.lku_id
		   ORDER BY a.msl_no
	</select>

	<select id="elions.uw.selectInfoStableLinkAll" parameterClass="string" resultClass="java.util.HashMap">
		SELECT a.reg_spaj, a.msl_no, b.lji_invest,
		       DECODE (a.msl_ro,
		               1, 'Nilai Tunai (ALL)',
		               2, 'Premi',
		               3, 'Autobreak',
		               'ERROR'
		              ) rollover,
		       c.lspd_position, a.msl_bdate, a.msl_edate, a.msl_premi, a.msl_rate,
		       a.msl_mgi, a.msl_bunga, a.msl_tgl_nab, a.msl_nab, a.msl_unit,
		       a.msl_saldo_unit, a.msl_input_date, d.lus_login_name, a.msl_desc, msl_next_date, a.flag_bulanan,
		       a.msl_aktif
		  FROM eka.mst_slink a,
		       eka.lst_jenis_invest b,
		       eka.lst_document_position c,
		       eka.lst_user d
		 WHERE a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		   AND a.lji_id = b.lji_id
		   AND a.msl_posisi = c.lspd_id
		   AND a.lus_id = d.lus_id	
		   AND a.msl_kode = 5	
		   ORDER BY a.msl_no
	</select>
	
	<select id="elions.uw.selectInfoSlinkBayar" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT   c.REG_SPAJ, c.MSPO_POLICY_NO, eka.utils.pemegang (c.reg_spaj) pemegang,
		         a.MSL_NO, a.MSL_KODE, a.MSL_MGI, a.MSL_BDATE, a.MSL_EDATE, a.MSL_TU_KE,
		         b.MSLB_BEG_PERIOD, b.MSLB_END_PERIOD, (b.MSLB_END_PERIOD + 1) AS ROLL_OVER,
		         b.MSLB_RATE, b.MSLB_PREMI, b.MSLB_BUNGA, b.MSLB_JML_HARI, b.MSLB_PAID_DATE,
		         b.FLAG_PROSES, b.MSLB_BAYAR_ID, b.MSLB_PRINT_DATE, b.MSLB_HARI,
		         b.MSLB_TAMBAH, b.MSLB_JUM_BAYAR, b.MSLB_REKENING
		  FROM   EKA.MST_SLINK a,
		         EKA.MST_SLINK_BAYAR b,
		         EKA.MST_POLICY c,
		         EKA.MST_PRODUCT_INSURED d
		 WHERE       a.REG_SPAJ = b.REG_SPAJ
		         AND a.MSL_NO = b.MSL_NO
		         AND a.REG_SPAJ = c.REG_SPAJ
		         AND c.REG_SPAJ = d.REG_SPAJ
		         AND d.LSBS_ID <![CDATA[<]]> 300
		         AND a.REG_SPAJ = rpad(replace(#reg_spaj#,'.'),11,' ')
		         AND a.MSL_NO = #msl_no#
		         AND a.FLAG_BULANAN <![CDATA[>]]> 0
	</select>
	
	<select id="elions.uw.selectInfoStableLinkAllNew" parameterClass="string" resultClass="java.util.HashMap">
		  SELECT   DISTINCT
		  		   sl.reg_spaj,
		  		   sl.msl_no,
		           sl.msl_tu_ke,
		           SL.MSL_DESC,
		           SL.MSL_BDATE,
		           SL.MSL_EDATE,
		           DECODE (SL.msl_posisi, 73, 'Input Transaksi', 45, 'Belum Transfer', 'Filing' || ' ' || DECODE (sl.msl_proses_bsm, 1, '(BSM)', 2, '(SMS)', '(AJS)')) POSISI,
		           SL.MSL_MGI,
		           SL.MSL_RATE,
		           DECODE (SL.MSL_RO, 1, 'All', 2, 'Premi', 'Autobreak') ro,
		           sl.msl_hari,
		           EKA.UTILS.KURS_SIMBOL (mp.lku_id) kurs,
		           sl.msl_premi,
		           sl.msl_bunga,
		           sl.msl_bp,
		           (CASE
		               WHEN (SL.MSL_BAYAR_BUNGA = 1 OR SL.FLAG_BULANAN <![CDATA[>]]> 0)
		               THEN
		                  (SELECT      'Hari Lebih : ' || MSLB_HARI || ', Manfaat : ' || MSLB_TAMBAH || ', Total :' || (MSLB_BUNGA + MSLB_BP + +MSLB_TAMBAH)
		                     FROM   EKA.MST_SLINK_BAYAR
		                    WHERE       REG_SPAJ = SL.REG_SPAJ
		                            AND MSL_NO = SL.MSL_NO
		                            AND MSLB_BEG_PERIOD = SL.MSL_BDATE
		                            AND FLAG_PROSES = 1)
		               ELSE
		                  ''
		            END)
		              TAMBAHAN,
		           (NVL (bp.lsbp_nama, '-') || ', Cab ' || NVL (rc.mrc_cabang, '-') || ', ' || NVL (rc.MRC_KOTA, '-') || ', AC ' || NVL (rc.MRC_NO_AC, '-') || ' A/N '
		            || NVL (rc.MRC_NAMA, '-') || ' (' || EKA.UTILS.KURS_SIMBOL (rc.MRC_KURS) || ')') REK,
		           DECODE (sl.flag_bulanan, 1, 'Ya', 'Tidak') manf_bul,
		           sl.flag_special,sl.msl_note
		    FROM   EKA.MST_SLINK sl,
		           EKA.MST_INSURED mi,
		           EKA.MST_PRODUCT_INSURED mpi,
		           EKA.MST_POLICY mp,
		           EKA.MST_SLINK_UBAH su,
		           EKA.MST_REK_CLIENT rc,
		           EKA.LST_BANK_PUSAT bp,
		           EKA.MST_PINJAMAN pin,
		           EKA.MST_SLINK_BAYAR sb
		   WHERE       sl.REG_SPAJ = su.REG_SPAJ(+)
		           AND sl.MSL_BDATE = su.MSLU_TGL_AWAL(+)
		           AND sl.MSL_TU_KE = su.MSLU_TU_KE(+)
		           AND sl.REG_SPAJ = mi.REG_SPAJ
		           AND sl.REG_SPAJ = mpi.REG_SPAJ
		           AND mp.REG_SPAJ = mi.REG_SPAJ
		           AND mp.REG_SPAJ = rc.REG_SPAJ(+)
		           AND rc.LSBP_ID = bp.LSBP_ID(+)
		           AND sl.REG_SPAJ = pin.REG_SPAJ(+)
		           AND sl.MSL_EDATE = pin.MSPIN_BEG_DATE(+)
		           AND sl.REG_SPAJ = sb.REG_SPAJ(+)
		           AND sl.MSL_NO = sb.MSL_NO(+)
		           AND mpi.LSBS_ID <![CDATA[<]]> 300
		           AND sl.REG_SPAJ = rpad(replace(#value#,'.'),11,' ')
		           AND su.MSLU_JENIS(+) = 3
		           AND sb.MSLB_DESC(+) = 'Penarikan'
		           AND pin.FLAG_PS(+) = 2
		           AND sl.msl_kode <![CDATA[<>]]> 9
		ORDER BY   sl.msl_tu_ke, sl.msl_bdate		 
	</select>
	
	<select id="elions.uw.selectInfoStableLinkTopUp" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT EKA.MST_SLINK.MSL_NAB,   
		         EKA.MST_SLINK.MSL_UNIT,   
		         EKA.MST_SLINK.MSL_PROSES_DATE,   
		         0 as saldo_awal,   
		         EKA.MST_SLINK.LJI_ID,   
		         EKA.MST_SLINK.MSL_TGL_NAB,   
		         EKA.MST_SLINK.MSL_PREMI,   
		         EKA.MST_SLINK.REG_SPAJ,   
		         EKA.MST_SLINK.MSL_NO,   
					EKA.MST_SLINK.MSL_DESC,
					EKA.MST_SLINK.NO_REG,
					EKA.MST_SLINK.MSL_KODE,
					EKA.MST_SLINK.MSL_TU_KE,
					EKA.MST_SLINK.MSL_NILAI_POLIS,
		         EKA.LST_JENIS_INVEST.LJI_INVEST, 
		         EKA.MST_SLINK.MSL_BDATE,   
		         EKA.MST_SLINK.MSL_EDATE,   
		         EKA.MST_SLINK.MSL_BUNGA,   
		         EKA.MST_SLINK.MSL_PRINT_DATE,   
		         'STABLE LINK' AS JUDUL,   
		         EKA.MST_SLINK.MSL_RATE,
					EKA.MST_SLINK.MSL_MGI,
					EKA.MST_SLINK.MSL_BP_PT,
					EKA.MST_SLINK.MSL_BP,
					EKA.MST_POLICY.LKU_ID,
					EKA.MST_POLICY.MSPO_POLICY_NO,
					EKA.LST_KURS.LKU_SYMBOL,
					0 as checkbox,
					3 as judul_id,
					EKA.MST_PRODUCT_INSURED.LSBS_ID,
					EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER,
		         MST_CLIENT_a.MCL_FIRST as nm_tt,   
		         MST_CLIENT_b.MCL_FIRST as nm_pp,
		         EKA.MST_ADDRESS_BILLING.MSAP_ADDRESS,   
		         EKA.MST_ADDRESS_BILLING.MSAP_ZIP_CODE,   
		         EKA.LST_KABUPATEN.LSKA_NOTE,
					EKA.MST_INSURED.MSTE_AGE,
					EKA.MST_SLINK.FLAG_BULANAN,
					CASE WHEN EKA.MST_SLINK.FLAG_BULANAN <![CDATA[>]]> 0 THEN EKA.MST_SLINK_BAYAR.MSLB_BUNGA ELSE 0 END AS TARGET_AWAL,
					(decode(EKA.MST_POLICY.LKU_ID,'01',20000,'02',2) * EKA.MST_SLINK.MSL_MGI) komisi_bank
		    FROM EKA.MST_SLINK,
					EKA.MST_POLICY,   
		         EKA.LST_JENIS_INVEST,   
		         EKA.LST_KURS,
					EKA.MST_PRODUCT_INSURED,
					EKA.MST_CLIENT MST_CLIENT_a,
					EKA.MST_CLIENT MST_CLIENT_b,
		         EKA.LST_KABUPATEN,  
		         EKA.MST_ADDRESS_BILLING,
				 EKA.MST_INSURED,
				EKA.MST_SLINK_BAYAR
		   WHERE ( EKA.MST_SLINK.REG_SPAJ = EKA.MST_POLICY.REG_SPAJ ) and  
				( EKA.MST_SLINK.LJI_ID = EKA.LST_JENIS_INVEST.LJI_ID ) and  
				( EKA.MST_POLICY.LKU_ID = EKA.LST_KURS.LKU_ID ) and  
				( EKA.MST_POLICY.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ ) and  
				( EKA.MST_POLICY.REG_SPAJ = EKA.MST_PRODUCT_INSURED.REG_SPAJ ) and  
				( EKA.MST_INSURED.MSTE_INSURED = MST_CLIENT_a.MCL_ID ) and  
				( EKA.MST_POLICY.MSPO_POLICY_HOLDER = MST_CLIENT_b.MCL_ID ) and  
				( EKA.MST_POLICY.REG_SPAJ = EKA.MST_ADDRESS_BILLING.REG_SPAJ ) and
				( EKA.MST_ADDRESS_BILLING.LSKA_ID = EKA.LST_KABUPATEN.LSKA_ID (+) ) and
				( EKA.MST_SLINK.REG_SPAJ = EKA.MST_SLINK_BAYAR.REG_SPAJ (+) ) and
				( EKA.MST_SLINK.MSL_NO = EKA.MST_SLINK_BAYAR.MSL_NO (+) ) and
				( EKA.MST_SLINK.MSL_BDATE = EKA.MST_SLINK_BAYAR.MSLB_BEG_PERIOD (+) ) and
				( ( EKA.MST_SLINK.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') ) and  
         		( EKA.MST_SLINK.MSL_TU_KE = #tu_ke# ) and  
				( EKA.MST_SLINK.MSL_KODE = 5 ) and  				
         		( EKA.MST_PRODUCT_INSURED.LSBS_ID <![CDATA[<]]> 300 ) )
		
	</select>
	
	<select id="elions.uw.selectInfoPSaveTopUp" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT EKA.MST_PSAVE.MPS_INPUT_DATE MSL_PROSES_DATE,   
		         0 as saldo_awal,   
		         EKA.MST_PSAVE.MPS_PREMI,   
		         EKA.MST_PSAVE.REG_SPAJ,   
		         EKA.MST_PSAVE.MPS_NO,   
					EKA.MST_PSAVE.MPS_DESC,
					EKA.MST_PSAVE.MPS_NO_REG,
					EKA.MST_PSAVE.MPS_KODE,
					EKA.MST_PSAVE.MPS_TU_KE,
					EKA.MST_PSAVE.MPS_BDATE,   
		         EKA.MST_PSAVE.MPS_EDATE,   
		         EKA.MST_PSAVE.MPS_BUNGA,   
		         EKA.MST_PSAVE.MPS_PRINT_DATE,   
		         'POWER SAVE' AS JUDUL,   
		         EKA.MST_PSAVE.MPS_RATE,
					EKA.MST_PSAVE.MPS_MGI,
					EKA.MST_POLICY.LKU_ID,
					EKA.MST_POLICY.MSPO_POLICY_NO,
					EKA.LST_KURS.LKU_SYMBOL,
					0 as checkbox,
					3 as judul_id,
					EKA.MST_PRODUCT_INSURED.LSBS_ID,
					EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER,
		         MST_CLIENT_a.MCL_FIRST as nm_tt,   
		         MST_CLIENT_b.MCL_FIRST as nm_pp,
		         EKA.MST_ADDRESS_BILLING.MSAP_ADDRESS,   
		         EKA.MST_ADDRESS_BILLING.MSAP_ZIP_CODE,   
		         EKA.LST_KABUPATEN.LSKA_NOTE,
					EKA.MST_INSURED.MSTE_AGE,
					EKA.MST_PSAVE.FLAG_BULANAN,
					CASE WHEN EKA.MST_PSAVE.FLAG_BULANAN <![CDATA[>]]> 0 THEN EKA.MST_PSAVE_BAYAR.MPSB_BUNGA ELSE 0 END AS TARGET_AWAL,
					(decode(EKA.MST_POLICY.LKU_ID,'01',20000,'02',2) * EKA.MST_PSAVE.MPS_MGI) komisi_bank
		    FROM EKA.MST_PSAVE,
				 EKA.MST_POLICY,   
		         EKA.LST_KURS,
				 EKA.MST_PRODUCT_INSURED,
				 EKA.MST_CLIENT MST_CLIENT_a,
				 EKA.MST_CLIENT MST_CLIENT_b,
		         EKA.LST_KABUPATEN,  
		         EKA.MST_ADDRESS_BILLING,
				 EKA.MST_INSURED,
				EKA.MST_PSAVE_BAYAR
		   WHERE ( EKA.MST_PSAVE.REG_SPAJ = EKA.MST_POLICY.REG_SPAJ ) and  
				( EKA.MST_POLICY.LKU_ID = EKA.LST_KURS.LKU_ID ) and  
				( EKA.MST_POLICY.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ ) and  
				( EKA.MST_POLICY.REG_SPAJ = EKA.MST_PRODUCT_INSURED.REG_SPAJ ) and  
				( EKA.MST_INSURED.MSTE_INSURED = MST_CLIENT_a.MCL_ID ) and  
				( EKA.MST_POLICY.MSPO_POLICY_HOLDER = MST_CLIENT_b.MCL_ID ) and  
				( EKA.MST_POLICY.REG_SPAJ = EKA.MST_ADDRESS_BILLING.REG_SPAJ ) and
				( EKA.MST_ADDRESS_BILLING.LSKA_ID = EKA.LST_KABUPATEN.LSKA_ID (+) ) and
				( EKA.MST_PSAVE.REG_SPAJ = EKA.MST_PSAVE_BAYAR.REG_SPAJ (+) ) and
				( EKA.MST_PSAVE.MPS_NO = EKA.MST_PSAVE_BAYAR.MPS_NO (+) ) and
				( EKA.MST_PSAVE.MPS_BDATE = EKA.MST_PSAVE_BAYAR.MPS_BDATE (+) ) and
				( ( EKA.MST_PSAVE.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') ) and  
         		( EKA.MST_PSAVE.MPS_TU_KE = #tu_ke# ) and  
				( EKA.MST_PSAVE.MPS_KODE = 5 ) and  				
         		( EKA.MST_PRODUCT_INSURED.LSBS_ID <![CDATA[<]]> 300 ) )
	</select>
	 
	<select id="elions.uw.selectDetailUnitLink" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.DetUlink">
		SELECT   mu_ke, a.lji_id, lji_invest, mdu_persen, mdu_jumlah, mdu_saldo_unit, mdu_last_trans   
		    FROM eka.mst_det_ulink a, eka.lst_jenis_invest b
		   WHERE a.lji_id = b.lji_id and reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND mdu_aktif = 1
		 AND mu_ke in 
		 	 (select mu_ke from eka.mst_ulink where reg_spaj = rpad(replace(#spaj#,'.'),11,' ') 
		 	  and mu_tgl_trans = (select mu_tgl_trans from eka.mst_ulink where reg_spaj = rpad(replace(#spaj#,'.'),11,' ') and mu_ke=1)) 
		ORDER BY lji_id ASC
	</select>
	
	<select id="elions.uw.selectBiayaUnitLink" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.BiayaUlink">
		SELECT   a.ljb_id,
          (case when b.ljb_id = 638 then 'Critical Illness'
                  else b.ljb_biaya
            end) ljb_biaya, mbu_jumlah, mbu_persen
		    FROM eka.mst_biaya_ulink a, eka.lst_jenis_biaya b
		   WHERE a.ljb_id = b.ljb_id and reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND mu_ke = #ke#
		ORDER BY ljb_id ASC 
	</select>
	
	<select id="elions.uw.selectMasaGaransiInvestasi" parameterClass="string" resultClass="int">
		SELECT EKA.MST_POWERSAVE_RO.MPR_JANGKA_INVEST  
		FROM EKA.MST_POWERSAVE_RO  
		WHERE EKA.MST_POWERSAVE_RO.REG_SPAJ = rpad(replace(#value#,'.'),11,' ')
		AND EKA.MST_POWERSAVE_RO.MPS_KODE = 5
	</select>
	
	<select id="elions.uw.selectMGIStableSave" parameterClass="java.util.HashMap" resultClass="int">
		select mss_mgi from eka.mst_ssave where mss_kode = 5 and reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
		and mss_tahun_ke = #tahun_ke# and mss_premi_ke = #premi_ke#
	</select>
	
	<select id="elions.uw.selectMGIStableLink" parameterClass="java.util.HashMap" resultClass="int">
		select msl_mgi from eka.mst_slink where msl_kode = 5 
		and msl_tahun_ke = #tahun_ke# and msl_premi_ke = #premi_ke# and reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectInfoAgen2" parameterClass="string" resultClass="java.util.HashMap">
		select 
		c.msag_id, d.mcl_first,d.mspe_email,
		decode(a.mspo_follow_up,0,'',1, 'Kantor Pusat',2, 'TM Ekalife',3, 'CS BII',4, 'BII',5, 'B. Mega','') follow_up,
		a.mspo_no_blanko, a.mspo_pribadi, a.mspo_spaj_date,
		(e.lca_id || e.lwk_id ||'.'||e.lsrg_id) region_id, 
		(e.lsrg_nama || ' / ' || f.lwk_nama || ' / ' || g.lca_nama) region_name,
		a.mspo_ref_bii, a.mspo_ao, i.mcl_first mcl_first_ao,
		a.mspo_pribadi, a.mspo_jenis_terbit, f.lwk_nama team, j.lar_email 
		from 
		eka.mst_policy a,
		eka.mst_agent_prod b,
		eka.mst_agent c,
		eka.mst_client_new d,
		eka.lst_region e,
		eka.lst_wakil f,
		eka.lst_cabang g,
		eka.mst_agent h,
		eka.mst_client_new i,
		eka.lst_addr_region j
		where 
		a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		and a.reg_spaj = b.reg_spaj
		and b.lsle_id = 4
		and b.msag_id = c.msag_id
		and c.mcl_id = d.mcl_id
		and c.lca_id = e.lca_id
		and c.lwk_id = e.lwk_id
		and c.lsrg_id = e.lsrg_id
		and e.lca_id = f.lca_id
		and e.lwk_id = f.lwk_id
		and e.lca_id = g.lca_id
		and a.mspo_ao = h.msag_id(+)
		and h.mcl_id = i.mcl_id(+)
		and e.lar_id = j.lar_id(+)
	</select>
	
	<select id="elions.uw.selectReferalInput" parameterClass="string" resultClass="java.util.HashMap">
		SELECT  distinct NVL (c.lus_full_name, c.lus_login_name) input_nama,
         	   	eka.utils.cabang_bsm (c.cab_bank) input_cab,
         	   	d.nama_reff penutup_nama,
         		eka.utils.cabang_bsm (d.lcb_no) penutup_cab,
         		e.nama_reff reff_nama,
         		eka.utils.cabang_bsm (e.lcb_no) reff_cab
  		FROM   eka.mst_policy a,
         	   eka.mst_reff_bii b,
               eka.lst_user c,
               eka.lst_reff_bii d,
               eka.lst_reff_bii e
 		WHERE  a.reg_spaj = #reg_spaj#
         	   AND a.reg_spaj = b.reg_spaj
               AND b.no_urut = (SELECT   MAX (no_urut)
                            FROM   eka.mst_reff_bii
                           WHERE   level_id = 4 AND reg_spaj = b.reg_spaj)
               AND a.lus_id = c.lus_id
               AND b.lrb_id = d.lrb_id
               AND b.reff_id = e.lrb_id
	</select>
	
	<select id="elions.uw.selectValidBank" parameterClass="string" resultClass="java.util.HashMap">
      select b.valid_bank_1, b.valid_bank_2
        from eka.mst_policy a,
        eka.lst_user b
        where a.lus_id = b.lus_id
        and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
    </select>
	
	<select id="elions.uw.report.selectSuratUnitLink.AlokasiInvestasi" parameterClass="string" resultClass="java.util.HashMap">
		SELECT b.lji_invest, a.mdu_persen
		  FROM eka.mst_det_ulink a, eka.lst_jenis_invest b
		 WHERE b.lji_id = a.lji_id AND a.reg_spaj = rpad(replace(#value#,'.'),11,' ') AND a.mu_ke = 1
	</select>
	
	<select id="elions.uw.report.selectSuratStableLink.AlokasiBiaya" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT c.msl_premi mu_jlh_premi,  
		       d.reg_spaj, d.lku_id, e.lscb_pay_mode, c.msl_no lt_id, d.lscb_id,
		       (case when c.msl_no=1 then 'Premi Sekaligus' else 'Premi Top Up' end) lt_transksi, g.lku_symbol, h.lsbs_id, c.msl_no mu_ke
		  FROM eka.mst_slink c,
		       eka.mst_policy d,
		       eka.lst_pay_mode e,
		       eka.lst_kurs g,
			   (select * from eka.mst_product_insured where lsbs_id<![CDATA[<]]>300) h
		 WHERE d.reg_spaj = c.reg_spaj
		   AND d.lscb_id = e.lscb_id
		   AND d.lku_id = g.lku_id
		   AND c.reg_spaj = h.reg_spaj
		   AND c.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND c.msl_new = 1
	</select>
	
	<select id="elions.uw.report.selectSuratInvestimax.AlokasiBiaya" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT c.mu_jlh_premi, decode(a.ljb_id,4,'Biaya Akuisisi', a.ljb_biaya) ljb_biaya, nvl(a.flag_rider,0) flag_rider, b.mbu_jumlah, b.mbu_persen,
		       d.reg_spaj, d.lku_id, e.lscb_pay_mode, c.mu_jlh_tu, c.lt_id, d.lscb_id,
		       f.lt_transksi, g.lku_symbol, b.ljb_id, c.mu_ke, h.lsbs_id, c.mu_ke
		  FROM eka.lst_jenis_biaya a,
		       eka.mst_biaya_ulink b,
		       eka.mst_ulink c,
		       eka.mst_policy d,
		       eka.lst_pay_mode e,
		       eka.lst_transaksi f,
		       eka.lst_kurs g,
			   (select * from eka.mst_product_insured where lsbs_id<![CDATA[<]]>300) h
		 WHERE b.ljb_id = a.ljb_id AND b.mbu_jumlah >= 0
		   AND c.reg_spaj = b.reg_spaj
		   AND c.mu_ke = b.mu_ke
		   AND d.reg_spaj = c.reg_spaj
		   AND d.lscb_id = e.lscb_id
		   AND c.lt_id = f.lt_id
		   AND d.lku_id = g.lku_id
		   AND c.reg_spaj = h.reg_spaj
		   AND b.ljb_id <![CDATA[<>]]> 99
		   AND c.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND c.mu_ke IN (SELECT mu_ke
		                     FROM eka.mst_ulink
		                    WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND mu_tgl_trans = #tanggal#)
        ORDER BY c.mu_ke, nvl(a.lsbs_id, 0), a.ljb_id		                    
	</select>

	<select id="elions.uw.report.selectSuratUnitLink.AlokasiBiaya" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT c.mu_jlh_premi, 
	   		   decode(a.ljb_biaya,'PA Resiko A', 'PA Risiko A', 'Payor 5 TPD-DEATH', 'Payor 5 Death/TPD',
               (case 
                     when a.ljb_biaya like '%TPD (Cerdas Incl.)%' then 'TPD'
                     when a.ljb_id = 2 then (case when (h.lsbs_id in (134,191)) then a.ljb_biaya else a.ljb_biaya || ' *)' end)
                     when a.ljb_id = 4 and h.lsbs_id = 121 then 'Biaya Akuisisi'
                     when a.ljb_id = 638 then 'Critical Illness'
                     when a.ljb_id = 639 then 'TPD'
                     when a.ljb_id = 884 then 'Waiver 5 CI'
                     when a.ljb_id = 887 then 'Waiver 10 TPD'
                     when a.ljb_id = 886 then 'Waiver 5 TPD'
                     when a.ljb_id = 885 then 'Waiver 5 CI'
                     when a.ljb_id = 880 then 'Payor 5 CI'
                     when a.ljb_id = 881 then 'Payor 10 CI'
                     when a.ljb_id = 882 then 'Payor 5 TPD-DEATH'
                     when a.ljb_id = 883 then 'Payor 10 TPD-DEATH'
                     else 
                        (case when (a.lsbs_id <![CDATA[<]]> 900 and d.mspo_flag_new != 1) then
                            a.ljb_biaya0
                        else
                            a.ljb_biaya
                     end)
               end)) ljb_biaya,
	   		   nvl(a.flag_rider,0) flag_rider, b.mbu_jumlah, b.mbu_persen,
		       d.reg_spaj, d.lku_id, e.lscb_pay_mode, c.mu_jlh_tu, c.lt_id, d.lscb_id,
		       f.lt_transksi, g.lku_symbol, b.ljb_id, c.mu_ke, h.lsbs_id, c.mu_ke
		       , h.lsdbs_number <!-- helpdesk [142003] produk baru Smart Platinum Link RPUL BEL (134-13) -->
		  FROM eka.lst_jenis_biaya a,
		       eka.mst_biaya_ulink b,
		       eka.mst_ulink c,
		       eka.mst_policy d,
		       eka.lst_pay_mode e,
		       eka.lst_transaksi f,
		       eka.lst_kurs g,
			   (select * from eka.mst_product_insured where lsbs_id<![CDATA[<]]>300) h
		 WHERE b.ljb_id = a.ljb_id AND b.mbu_jumlah >= 0
		   AND c.reg_spaj = b.reg_spaj
		   AND c.mu_ke = b.mu_ke
		   AND d.reg_spaj = c.reg_spaj
		   AND d.lscb_id = e.lscb_id
		   AND c.lt_id = f.lt_id
		   AND d.lku_id = g.lku_id
		   AND c.reg_spaj = h.reg_spaj
		   AND b.ljb_id <![CDATA[<>]]> 99
		   AND c.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND c.mu_ke IN (SELECT mu_ke
		                     FROM eka.mst_ulink
		                    WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND mu_tgl_trans = #tanggal#)
		ORDER BY c.mu_ke, nvl(a.lsbs_id, 0), a.ljb_id
	</select>

	<select id="elions.uw.report.selectSuratUnitLink.AlokasiBiaya.Ekalink" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			(case when a.ljb_id=2 then 'Biaya Asuransi' when a.ljb_id >= 20 and a.ljb_id <![CDATA[<>]]> 99 then 'Asuransi Tambahan (Rider)' else '' end) tabaru,
			c.mu_jlh_premi, a.ljb_id, decode(a.ljb_id,2,'Asuransi Dasar',
			(case 
				  when a.ljb_id = 638 then 'Critical Illness'
				  when a.ljb_id = 639 then 'TPD' 
				  when a.lsbs_id = 837 then (select x.lsdbs_group_name from eka.lst_det_bisnis x where x.lsbs_id=a.lsbs_id and x.lsdbs_number=a.lsdbs_number)
				  else 
					(case when x.mspo_flag_new != 1 then
                    a.ljb_biaya0
                  else
                    a.ljb_biaya
                  end)  
			end)) ljb_biaya, NVL (a.flag_rider, 0) flag_rider, 
			b.mbu_jumlah, b.mbu_persen, d.reg_spaj, d.lku_id, initcap(e.lscb_pay_mode) lscb_pay_mode,
			c.mu_jlh_tu, c.lt_id, d.lscb_id, f.lt_transksi, g.lku_symbol, b.ljb_id, c.mu_ke, h.lsbs_id, c.mu_ke
		FROM 
			 eka.lst_jenis_biaya a,eka.mst_biaya_ulink b,eka.mst_ulink c,eka.mst_policy d,
			 eka.lst_pay_mode e,eka.lst_transaksi f,eka.lst_kurs g,
			 (SELECT * FROM eka.mst_product_insured WHERE lsbs_id <![CDATA[<]]> 300) h, eka.mst_policy x
		WHERE 
			  b.ljb_id = a.ljb_id AND b.mbu_jumlah >= 0 AND b.ljb_id <![CDATA[<>]]> 99 AND c.reg_spaj = b.reg_spaj AND c.mu_ke = b.mu_ke AND d.reg_spaj = c.reg_spaj 
			  AND d.lscb_id = e.lscb_id AND c.lt_id = f.lt_id AND d.lku_id = g.lku_id AND c.reg_spaj = h.reg_spaj AND h.reg_spaj = x.reg_spaj
			  AND c.reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND c.mu_ke IN 
				(SELECT mu_ke FROM eka.mst_ulink WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND mu_tgl_trans = #tanggal#)
		ORDER BY 
				(case
			when a.ljb_id=2 then 2
			when a.ljb_id >= 20 and a.ljb_id <![CDATA[<>]]> 99 then 3
			when c.lt_id in (2,5,6) then 4
			else 1 end),3
	</select>

	<select id="elions.uw.report.selectSuratUnitLink.AlokasiBiaya.Syariah" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT distinct
			(case when a.ljb_id=2 then 'Biaya Asuransi Syariah ' when a.ljb_id >= 20 and a.ljb_id <![CDATA[<>]]> 99 then 'Asuransi Tambahan Syariah' else '' end) tabaru,
			 <!-- (case when a.ljb_id=2 then 'Cost Takaful' when a.ljb_id >= 20 and a.ljb_id <![CDATA[<>]]> 99 then 'Additional Insurance Sharia' else '' end) tabaru_eng,-->
			c.mu_jlh_premi, a.ljb_id,
			(case when a.lsbs_id in (810,820, 823, 811, 820, 825, 826,827, 830, 832, 833, 837) then 
                (case when x.mspo_flag_new != 1 then
                    (select lsdbs_name_syariah0 from eka.lst_det_bisnis where lsbs_id = a.lsbs_id and lsdbs_number = a.lsdbs_number)
                else
                    (select lsdbs_name_syariah from eka.lst_det_bisnis where lsbs_id = a.lsbs_id and lsdbs_number = a.lsdbs_number)
                end) 
                  when a.ljb_biaya like '%TPD (Cerdas Incl.)%' then 'SMiLe TPD Syariah'  
                  when a.ljb_id=2 then 'Asuransi Dasar Syariah'
                  when a.ljb_id=41 then 'SMiLe TPD SYariah'  
                  when a.ljb_id = 638 then 'SMiLe Critical Illness Syariah'
                  when a.ljb_id = 369 then 'SMiLe TPD Syariah'  
                  when a.ljb_id = 1020 then 'SMiLe Medical+ Syariah' 
                else 
                	a.ljb_biaya
               end) ljb_biaya,
              <!--  (case 
                  when a.ljb_id=2 then 'Insurance Basics of Sharia'
                  when a.ljb_id=41 then 'Total Permanent Disability'
                  when a.lsbs_id in (820,823) then concat(concat(substr(a.ljb_biaya,0, 9),' SHARIA'), substr(a.ljb_biaya,10,30))
                  when a.lsbs_id = 832 then concat(concat(substr(a.ljb_biaya,0, 31),'PARTICIPANTS'), substr(a.ljb_biaya,43,4))
                  when a.ljb_id = 638 then 'Critical Illness'            
                 else a.ljb_biaya_eng
            end)ljb_biaya_ing,-->
			(case when a.lsbs_id in (820, 823, 811, 820, 825, 826, 830, 832, 833) then 
                (case when x.mspo_flag_new != 1 then
                    (select lsdbs_name_syariah0 from eka.lst_det_bisnis where lsbs_id = a.lsbs_id and lsdbs_number = a.lsdbs_number)
                else
                    (select lsdbs_name_syariah from eka.lst_det_bisnis where lsbs_id = a.lsbs_id and lsdbs_number = a.lsdbs_number)
                end) 
                  when a.ljb_biaya like '%TPD (Cerdas Incl.)%' then 'SMiLe TPD Syariah'
                  when a.ljb_id=2 then 'Asuransi Dasar Syariah'
                  when a.ljb_id=41 then 'SMiLe TPD Syariah'
                  when a.ljb_id = 638 then 'SMiLe CI Syariah'                  
                  when a.ljb_id = 369 then 'SMiLe TPD Syariah'
                  when a.ljb_id in(20,62,63) then 'SMiLe PA Syariah'  
                  when a.ljb_id in(1018,1019) then 'SMiLe ESCI 99'
                  when a.ljb_id = 1020 then 'SMiLe Medical+ Syariah'         
                else 
                    a.ljb_biaya
               end) ljb_biaya_short, NVL (a.flag_rider, 0) flag_rider, 
			b.mbu_jumlah, b.mbu_persen, d.reg_spaj, d.lku_id, initcap(e.lscb_pay_mode) lscb_pay_mode,
			c.mu_jlh_tu, c.lt_id, d.lscb_id, g.lku_symbol, b.ljb_id, c.mu_ke, h.lsbs_id, c.mu_ke,
			initcap(case when b.ljb_id>=20 and b.ljb_id <![CDATA[<>]]> 99 and i.topup is not null then i.topup else f.lt_transksi end) lt_transksi
		FROM 
			 eka.lst_jenis_biaya a,eka.mst_biaya_ulink b,eka.mst_ulink c,eka.mst_policy d,
			 eka.lst_pay_mode e,eka.lst_transaksi f,eka.lst_kurs g,
			 (SELECT * FROM eka.mst_product_insured WHERE lsbs_id <![CDATA[<]]> 300) h,
			 (select reg_spaj, a.lt_id, f.lt_transksi topup from eka.mst_ulink a, eka.lst_transaksi f where a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ') and a.lt_id in (2,5) and a.lt_id = f.lt_id) i,
			 eka.mst_policy x
		WHERE 
			  b.ljb_id = a.ljb_id AND b.mbu_jumlah >= 0 AND c.reg_spaj = b.reg_spaj AND c.mu_ke = b.mu_ke AND d.reg_spaj = c.reg_spaj 
			  AND d.lscb_id = e.lscb_id AND c.lt_id = f.lt_id AND d.lku_id = g.lku_id AND c.reg_spaj = h.reg_spaj 
			  AND c.reg_spaj = i.reg_spaj(+)
			  AND c.reg_spaj = x.reg_spaj(+)
			  AND c.lt_id = i.lt_id(+)
			  AND c.reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND c.mu_ke IN 
				(SELECT mu_ke FROM eka.mst_ulink WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND mu_tgl_trans = #tanggal#)
		      AND c.mu_ke <![CDATA[<]]> 4 AND a.ljb_id <![CDATA[<>]]> 99
		ORDER BY (case when a.ljb_id=99 then 5 when a.ljb_id=4 then 3 when (a.ljb_id = 2 or a.ljb_id >= 20) and a.ljb_id <![CDATA[<>]]> 99 then 2 else 1 end), A.LJB_ID
	</select>
	
	<select id="elions.uw.report.selectSuratExcelLink.AlokasiBiaya.Syariah" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT distinct
			(case when  a.ljb_id=3 then 'Biaya Administrasi' when a.ljb_id >= 20 and a.ljb_id <![CDATA[<>]]> 99 then 'Asuransi Tambahan Syariah' else '' end) tabaru,
			c.mu_jlh_premi, a.ljb_id,
			(case when a.lsbs_id = 820 or a.lsbs_id = 823 then concat(concat(concat(substr(a.ljb_biaya,0, 9),' SYARIAH'), substr(a.ljb_biaya,10,7) || ' (PESERTA '),substr(a.ljb_biaya,30,10) || '')
                  when a.lsbs_id = 811 then concat(concat(substr(a.ljb_biaya,0, 4),'SYARIAH '), substr(a.ljb_biaya,5,9) || '')
                  when a.lsbs_id = 825 then concat(concat(concat(concat(substr(a.ljb_biaya,0, 12),' SYARIAH'), substr(a.ljb_biaya,13,8) || ' (PESERTA '),substr(a.ljb_biaya,35,8) || ''),(case when d.mspo_provider = 2 then '-PROV' else '' end))
                  when a.lsbs_id = 832 then concat(concat(substr(a.ljb_biaya,0, 31),'PESERTA ')  , substr(a.ljb_biaya,43,5) || '')   
                         when a.ljb_biaya like '%TPD (Cerdas Incl.)%' then 'SMiLe TPD Syariah'
                         when a.ljb_id=2 then 'Asuransi Dasar Syariah'
                         when a.ljb_id=41 then 'SMiLe TPD Syariah'
                         when a.ljb_id = 638 then 'SMiLe CI Syariah'
                         when a.ljb_id = 369 then 'SMiLe TPD Syariah'
                         when a.ljb_id = 1020 then 'SMiLe Medical+ Syariah'           
                else a.ljb_biaya
               end) ljb_biaya,
			(case when a.lsbs_id in (810,820, 823, 811,819, 820, 825, 826, 830, 832, 833) then 
                (case when d.mspo_flag_new != 1 then
                    (select lsdbs_name_syariah0 from eka.lst_det_bisnis where lsbs_id = a.lsbs_id and lsdbs_number = a.lsdbs_number)
                else
                    (select lsdbs_name_syariah from eka.lst_det_bisnis where lsbs_id = a.lsbs_id and lsdbs_number = a.lsdbs_number)
                end) 
                  when a.ljb_biaya like '%TPD (Cerdas Incl.)%' then 'SMiLe TPD Syariah'
                  when a.ljb_id=2 then 'Asuransi Dasar Syariah'
                  when a.ljb_id=41 then 'SMiLe TPD Syariah'
                  when a.ljb_id = 638 then 'SMiLe CI Syariah'
                   when a.ljb_id = 369 then 'SMiLe TPD Syariah' 
                   when a.ljb_id = 1020 then 'SMiLe Medical+ Syariah'  
                else 
                    a.ljb_biaya
           end) ljb_biaya_short,
                NVL (a.flag_rider, 0) flag_rider, 
			b.mbu_jumlah, b.mbu_persen, d.reg_spaj, d.lku_id, initcap(e.lscb_pay_mode) lscb_pay_mode,
			c.mu_jlh_tu, c.lt_id, d.lscb_id, g.lku_symbol, b.ljb_id, c.mu_ke, h.lsbs_id, c.mu_ke,
			initcap(case when b.ljb_id>=20 and b.ljb_id <![CDATA[<>]]> 99 and i.topup is not null then i.topup else f.lt_transksi end) lt_transksi,
            (case
                    when a.ljb_id = '1' then '1'
                    when a.ljb_id = '4' then '2'
                    when a.ljb_id = '2' then '3'
                    else ''
             end          
            ) urutan,
            (mu_jlh_premi + mu_jlh_tu) mu_jlh_tot,
            (100*mu_jlh_premi/(mu_jlh_premi + mu_jlh_tu)) prm_persen,
            (100*mu_jlh_tu/(mu_jlh_premi + mu_jlh_tu)) tu_persen
		FROM 
			 eka.lst_jenis_biaya a,eka.mst_biaya_ulink b,eka.mst_ulink c,eka.mst_policy d,
			 eka.lst_pay_mode e,eka.lst_transaksi f,eka.lst_kurs g,
			 (SELECT * FROM eka.mst_product_insured WHERE lsbs_id <![CDATA[<]]> 300) h,
			 (select reg_spaj, a.lt_id, f.lt_transksi topup from eka.mst_ulink a, eka.lst_transaksi f where a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ') and a.lt_id in (2,5) and a.lt_id = f.lt_id) i
		WHERE 
			  b.ljb_id = a.ljb_id AND b.mbu_jumlah >= 0 AND c.reg_spaj = b.reg_spaj AND c.mu_ke = b.mu_ke AND d.reg_spaj = c.reg_spaj 
			  AND d.lscb_id = e.lscb_id AND c.lt_id = f.lt_id AND d.lku_id = g.lku_id AND c.reg_spaj = h.reg_spaj 
			  AND c.reg_spaj = i.reg_spaj(+)
			  AND c.lt_id = i.lt_id(+)
			  AND c.reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND c.mu_ke IN 
				(SELECT mu_ke FROM eka.mst_ulink WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND mu_tgl_trans = #tanggal#)
		      AND c.mu_ke <![CDATA[<]]> 4 AND a.ljb_id <![CDATA[<>]]> 99
		ORDER BY urutan, tabaru, (case when a.ljb_id=99 then 5 when a.ljb_id=4 then 3 when (a.ljb_id = 2 or a.ljb_id >= 20) and a.ljb_id <![CDATA[<>]]> 99 then 2 else 1 end), A.LJB_ID
	</select>
	
	<select id="elions.uw.report.selectSuratStableLink.RincianRider" parameterClass="string" resultClass="java.util.HashMap">
		select null mtu_nab, null mtu_unit, 
		       null mtu_tgl_proses, null lji_invest, 2 lt_id,
		       null mtu_tgl_trans, 0 saldo_awal,
		       (case when b.lsbs_id=  813 then 'Critical Illness'
		             when b.lsbs_id = 818 then 'Term'
		             when b.lsbs_id = 819 then 'HCP Family'
		       else 
                    (case when x.mspr_beg_date <![CDATA[<]]> to_date('01/12/2012','dd/MM/yyyy') then
                        b.lsdbs_name0 
                    else
                        b.lsdbs_name
                    end)
               end)mtu_desc,
		       '22' lji_id,  null mtu_tgl_nab, c.mrs_premi mtu_jumlah,
		       a.reg_spaj, 0 mu_ke, null msl_bdate,
		       0 msl_bunga, 
		       d.lku_symbol, c.lsbs_id, c.lsdbs_number,
		       (select count(lsbs_id) from eka.mst_product_insured where lsbs_id >=800 and reg_spaj=RPAD (REPLACE (#spaj#, '.'), 11, ' ')) total_rider,
				nvl((select sum(mrs_premi) from eka.mst_rider_save where reg_spaj=RPAD (REPLACE (#spaj#, '.'), 11, ' ')),0 ) premi_rider
		from eka.mst_policy a,
		     eka.lst_det_bisnis b,
		     eka.mst_rider_save c,
		     eka.lst_kurs d,
		     eka.mst_product_insured x
		where a.reg_spaj = c.reg_spaj
		and a.reg_spaj = x.reg_spaj
		and a.reg_spaj = RPAD (REPLACE (#spaj#, '.'), 11, ' ')
		and b.lsbs_id = C.lsbs_id
		and b.lsdbs_number = c.lsdbs_number
		and a.lku_id = d.lku_id
	</select>
	
	<select id="elions.uw.report.selectSuratStableLink.RincianTransRider" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.msl_nab mtu_nab, a.msl_unit mtu_unit,
		       a.msl_proses_date mtu_tgl_proses, b.lji_invest, a.msl_no lt_id,
		       msl_tgl_nab mtu_tgl_trans, 0 saldo_awal,
		       (CASE
		           WHEN a.msl_no = 1
		              THEN 'Premi Sekaligus'
		           ELSE 'Premi Top-Up'
		        END
		       ) mtu_desc,
		       a.lji_id, a.msl_tgl_nab mtu_tgl_nab, a.msl_premi mtu_jumlah,
		       a.reg_spaj, a.msl_no mu_ke, a.msl_bdate, 
		        (case when a.flag_bulanan = 1 
		                        then (select (mslb_premi * (mslb_rate/100) * (mslb_jml_hari/365)) as mslb_bunga from eka.mst_slink_bayar where reg_spaj = a.reg_spaj and msl_no = a.msl_no and lji_id = a.lji_id and mslb_beg_period = a.msl_bdate) 
		                     else a.msl_bunga
		        end)msl_bunga, 
		        d.lku_symbol, e.lsbs_id, e.lsdbs_number,
		        (select count(lsbs_id) from eka.mst_product_insured where lsbs_id >=800 and reg_spaj=RPAD (REPLACE (#spaj#, '.'), 11, ' ')) total_rider, 
		  		nvl((select sum(mrs_premi) from eka.mst_rider_save where reg_spaj=RPAD (REPLACE (#spaj#, '.'), 11, ' ')),0 ) premi_rider,a.flag_bulanan
		  FROM eka.mst_slink a, eka.lst_jenis_invest b, eka.mst_policy c, eka.lst_kurs d, eka.mst_product_insured e
		 WHERE a.lji_id = b.lji_id
		   AND a.reg_spaj = RPAD (REPLACE (#spaj#, '.'), 11, ' ') 
		   AND a.reg_spaj = c.reg_spaj
		   AND c.reg_spaj = e.reg_spaj
		   AND e.lsbs_id <![CDATA[<]]>300
		   AND c.lku_id = d.lku_id
		union
		select null mtu_nab, null mtu_unit, 
		       null mtu_tgl_proses, null lji_invest, 2 lt_id,
		       null mtu_tgl_trans, 0 saldo_awal,
		       b.lsdbs_name mtu_desc,
		       '22' lji_id,  null mtu_tgl_nab, c.mrs_premi mtu_jumlah,
		       a.reg_spaj, 0 mu_ke, null msl_bdate,
		       0 msl_bunga, 
		       d.lku_symbol, c.lsbs_id, c.lsdbs_number,
		       (select count(lsbs_id) from eka.mst_product_insured where lsbs_id >=800 and reg_spaj=RPAD (REPLACE (#spaj#, '.'), 11, ' ')) total_rider,
				(select sum(mrs_premi) from eka.mst_rider_save where reg_spaj=RPAD (REPLACE (#spaj#, '.'), 11, ' ')) premi_rider
		from eka.mst_policy a,
		     eka.lst_det_bisnis b,
		     eka.mst_rider_save c,
		     eka.lst_kurs d
		where a.reg_spaj = c.reg_spaj
		and a.reg_spaj = RPAD (REPLACE (#spaj#, '.'), 11, ' ')
		and b.lsbs_id = C.lsbs_id
		and b.lsdbs_number = c.lsdbs_number
		and a.lku_id = d.lku_id
	</select>
	
	<select id="elions.uw.report.selectSuratStableLink.RincianTrans" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.flag_bulanan, a.msl_nab mtu_nab, a.msl_unit mtu_unit,
		       a.msl_proses_date mtu_tgl_proses, b.lji_invest, a.msl_no lt_id,
		       msl_tgl_nab mtu_tgl_trans, 0 saldo_awal,
		       (CASE
		       		WHEN e.lsbs_id = 186 and e.lsdbs_number = 3
		       			THEN (CASE
						           WHEN a.msl_no = 1
						              THEN 'Premi ke-1'
						           ELSE 'Premi Top-Up ke-1'
						      END
						     )
				    WHEN e.lsbs_id = 186 and e.lsdbs_number != 3
		       			THEN (CASE
						           WHEN a.msl_no = 1
						              THEN 'Premi ke-1'
						           ELSE 'Premi Top-Up ke-1'
						      END
						     )
		       		ELSE (CASE
					           WHEN a.msl_no = 1
					              THEN 'Premi Sekaligus'
					           ELSE 'Premi Top-Up'
					      END
					      )
		       	END
		       )mtu_desc,
		       a.lji_id, a.msl_tgl_nab mtu_tgl_nab, a.msl_premi mtu_jumlah,
		       a.reg_spaj, a.msl_no mu_ke, a.msl_bdate, a.msl_edate, d.lku_symbol, e.lsbs_id, e.lsdbs_number,
		       (case when a.flag_bulanan <![CDATA[>]]> 0 
			   		 then (select (mslb_premi * (mslb_rate/100) * (mslb_jml_hari/365)) as mslb_bunga from eka.mst_slink_bayar where reg_spaj = a.reg_spaj and msl_no = a.msl_no and lji_id = a.lji_id and mslb_beg_period = a.msl_bdate) 
					 else a.msl_bunga
				end) msl_bunga,
				decode(a.msl_mgi,1,'BULANAN',3,'TRIWULANAN',6,'SEMESTERAN',12,'TAHUNAN')lscb_rider,
        		decode((select distinct mrs_rider_cb from eka.mst_rider_save where reg_spaj=a.reg_spaj),0,'BAYAR LANGSUNG',1,'POTONG BUNGA')jenis_lscb_rider,
				(select count(lsbs_id) from eka.mst_product_insured where lsbs_id <![CDATA[>=]]>800 and reg_spaj=RPAD (REPLACE (#spaj#, '.'), 11, ' ')) total_rider,
				nvl((select sum(mrs_premi) from eka.mst_rider_save where reg_spaj=RPAD (REPLACE (#spaj#, '.'), 11, ' ')),0 ) premi_rider,a.flag_bulanan
		  FROM eka.mst_slink a, eka.lst_jenis_invest b, eka.mst_policy c, eka.lst_kurs d, eka.mst_product_insured e
		 WHERE a.lji_id = b.lji_id
		   AND a.reg_spaj = RPAD (REPLACE (#spaj#, '.'), 11, ' ')
		   AND a.reg_spaj = c.reg_spaj
		   AND c.reg_spaj = e.reg_spaj
		   AND e.lsbs_id <![CDATA[<]]> 300
		   AND c.lku_id = d.lku_id
		   AND a.msl_new = 1
	</select>

	<select id="elions.uw.report.selectSuratUnitLink.RincianTrans" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT  a.mtu_nab, a.mtu_unit, a.mtu_tgl_proses, c.lji_invest, a.mtu_dk,
		        b.lt_id, a.mtu_tgl_trans, 0 saldo_awal, a.mtu_desc, a.lji_id,
		        a.mtu_tgl_nab, a.mtu_jumlah, a.reg_spaj, a.mu_ke, a.mtu_flag_biaya,
		         (select 
                (case when (b.lsbs_id = 120 and b.lsdbs_number in (7,8,9)) then 'EXCELLENT LINK'
                	  when(b.lsbs_id = 120 and b.lsdbs_number in (19,20,21)) then 'SMiLe LINK SATU' 
                	  when(b.lsbs_id = 190 and b.lsdbs_number in (7)) then 'SMiLe OPTIMA LINK SEKALIGUS'
                	  when(b.lsbs_id = 190 and b.lsdbs_number in (8)) then 'SMiLe OPTIMA LINK REGULER'	 
                      when(b.lsbs_id = 127 and b.lsdbs_number in (7,8,9,10)) then 'EXCELLENT LINK(For Your Education)' 
                      when(b.lsbs_id = 134 and b.lsdbs_number in (6)) then 'SMiLe Link ProAsset' 
                      when(b.lsbs_id = 213 and b.lsdbs_number in (2)) then 'SIMAS MAGNA LINK' 
                      when(b.lsbs_id = 217 and b.lsdbs_number in (2)) then 'SMiLe LINK PRO 100' 
                      when(b.lsbs_id = 134 and b.lsdbs_number in (10)) then 'SIMAS PRIME LINK' 
                      WHEN(b.lsbs_id = 120 AND b.lsdbs_number IN (22, 23, 24)) THEN 'SIMAS POWER LINK' <!-- SIMPOL -->
                      when(b.lsbs_id = 129 and b.lsdbs_number in(10,11)) then
                      	(case when e.flag_packet=15 then 'CERDAS (SMiLe Pension Paket A)'
                              when e.flag_packet=16 then 'CERDAS (SMiLe Pension Paket B)'
                              when e.flag_packet =17 then 'CERDAS(SMiLe Pension Paket C)'                            
                              else eka.f_lsdbs(a.reg_spaj,c.lsbs_id,d.lsdbs_number)end)
                           when(b.lsbs_id = 129 and b.lsdbs_number in(5,6)) then
                            (case when e.flag_packet=12 then 'EXCELLENT LINK (For Your Pension Paket 1)'
                                  when e.flag_packet=13 then 'EXCELLENT LINK (For Your Pension Paket 2)'
                                  when e.flag_packet =14 then 'EXCELLENT LINK (For Your Pension Paket 3)'                            
                                  else eka.f_lsdbs(a.reg_spaj,c.lsbs_id,d.lsdbs_number)end)
                           when(b.lsbs_id = 120 and b.lsdbs_number in(16,17,18)) then
                            (case when e.flag_packet=1 then 'CERDAS (SMiLe Ladies Diamond)'
                                  when e.flag_packet=2 then 'CERDAS (SMiLe Ladies Ruby)'
                                  when e.flag_packet=3 then 'CERDAS (SMiLe Ladies Pearl)'
                                  when e.flag_packet=4 then 'CERDAS (SMiLe Ladies Fantastic)' 
                                  when e.flag_packet=5 then 'CERDAS (SMiLe Ladies Excellent)'                             
                                  else eka.f_lsdbs(a.reg_spaj,c.lsbs_id,d.lsdbs_number)end)
                        else eka.f_lsdbs(a.reg_spaj,c.lsbs_id,d.lsdbs_number)
                end)lsbs_name
		        from eka.mst_policy a,eka.mst_insured e,eka.lst_packet f,
		                (select reg_spaj, lsbs_id, lsdbs_number, mspr_beg_date from eka.mst_product_insured where mspr_active = 1 and lsbs_id <![CDATA[<]]> 800) b,
		                eka.lst_bisnis c, eka.lst_det_bisnis d
		        where a.reg_spaj = b.reg_spaj
		                and b.lsbs_id = c.lsbs_id
		                and b.lsbs_id = d.lsbs_id
		                and a.reg_spaj=e.reg_spaj
		                and e.flag_packet=f.flag_packet(+)
		                and b.lsdbs_number = d.lsdbs_number
		                and a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')) nama_plan
		FROM eka.mst_trans_ulink a, eka.mst_ulink b, eka.lst_jenis_invest c
		WHERE a.lji_id = c.lji_id
		        AND b.reg_spaj = a.reg_spaj
		        AND b.mu_ke = a.mu_ke		        
		        AND b.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		        AND b.mu_ke IN (
		                SELECT mu_ke
		                FROM eka.mst_ulink
		                WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		                        AND mu_tgl_trans = #tanggal#)
		ORDER BY a.lji_id, a.mtu_tgl_proses ASC
	</select>

	<select id="elions.uw.report.selectSuratExcelLink.RincianTrans" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT	a.mtu_nab, a.mtu_unit, a.mtu_tgl_proses, c.lji_invest, a.mtu_dk,
				b.lt_id, a.mtu_tgl_trans, 0 saldo_awal, a.mtu_desc, a.lji_id,
				a.mtu_tgl_nab, a.mtu_jumlah, a.reg_spaj, a.mu_ke, a.mtu_flag_biaya,
				(select eka.f_lsdbs(a.reg_spaj, b.lsbs_id, b.lsdbs_number)  lsbs_name
                from eka.mst_policy a,
                	(select reg_spaj, lsbs_id, lsdbs_number  from eka.mst_product_insured where mspr_active = 1 and lsbs_id <![CDATA[<]]> 800) b,
                	eka.lst_bisnis c
                where a.reg_spaj = b.reg_spaj
                	and b.lsbs_id = c.lsbs_id
                	and a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')) nama_plan,
                (select sum(x.mtu_jumlah) 
                from 
                    eka.mst_trans_ulink x
                where x.reg_spaj = a.reg_spaj
                    and x.lji_id = a.lji_id
                    and x.mu_ke in (
                        SELECT mu_ke
                        FROM eka.mst_ulink y
                        WHERE y.reg_spaj = a.reg_spaj
                        AND y.mu_tgl_trans = #tanggal#)) jml_alokasi
		FROM eka.mst_trans_ulink a, eka.mst_ulink b, eka.lst_jenis_invest c
		WHERE a.lji_id = c.lji_id
		AND b.reg_spaj = a.reg_spaj
		AND b.mu_ke = a.mu_ke
		AND b.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		AND b.mu_ke IN (
			SELECT mu_ke
			FROM eka.mst_ulink
			WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
			AND mu_tgl_trans = #tanggal#)
		ORDER BY a.lji_id, a.mtu_desc, a.mtu_tgl_proses ASC
	</select>

	<select id="elions.uw.report.selectSuratInvestimax.RincianTrans" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT   a.mtu_nab, a.mtu_unit, a.mtu_tgl_proses, c.lji_invest, a.mtu_dk,
		         b.lt_id, a.mtu_tgl_trans, 0 saldo_awal, decode(b.lt_id, 1, 'Premi Pokok', 2, 'Premi Top-Up', '') mtu_desc, a.lji_id,
		         a.mtu_tgl_nab, a.mtu_jumlah, a.reg_spaj, a.mu_ke, a.mtu_flag_biaya,d.mdu_persen
		    FROM eka.mst_trans_ulink a, eka.mst_ulink b, eka.lst_jenis_invest c,eka.mst_det_ulink d
		   WHERE a.lji_id = c.lji_id
		     AND b.reg_spaj = a.reg_spaj
		     AND d.reg_spaj =b.reg_spaj
     		 AND d.mu_ke = b.mu_ke
		     AND b.mu_ke = a.mu_ke
		     AND b.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		     AND b.mu_ke IN (
		            SELECT mu_ke
		              FROM eka.mst_ulink
		             WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		               AND mu_tgl_trans = #tanggal#)
		ORDER BY a.lji_id, a.mtu_tgl_proses ASC
	</select>

	<select id="elions.uw.selectJumlahPolisAgen" resultClass="int" parameterClass="java.util.HashMap">
	  SELECT COUNT(*)
		   FROM eka.mst_client_new a,
		   eka.mst_insured b
	   WHERE 
	   		 b.mste_insured  =a.mcl_id AND
			 SUBSTR(a.MCL_ID,1,2)  <![CDATA[<>]]>  'XX'  AND
			 SUBSTR(a.MCL_ID,1,2)  <![CDATA[<>]]> 'WW'  AND
			 a.mcl_first LIKE '%'||#nama#||'%'
			 AND a.mspe_date_birth= TO_DATE(#lahir#,'dd/mm/yyyy')
	</select>
	
	<select id="elions.uw.selectDetailBisnis" resultClass="java.util.HashMap" parameterClass="string">
		select 
            a.reg_spaj, lpad(a.lsbs_id,3,0) bisnis, lpad(a.lsdbs_number,3,0) detbisnis , a.lku_id,
            eka.f_lsbs(a.reg_spaj, a.lsbs_id) lsbs_name,
            (case when c.lsbs_id = 164 and c.lsdbs_number in (1,12) then 'STABLE LINK'
                  when c.lsbs_id = 164 and c.lsdbs_number in (2,11) then 'SIMAS STABIL LINK'
                  when c.lsbs_id = 164 and c.lsdbs_number = 8 then 'STABLE LINK'
                  when c.lsbs_id=  186 and c.lsdbs_number = 3 then 'SIMAS PROGRESSIVE LINK'
                  when c.lsbs_id=  186 and c.lsdbs_number != 3 then 'PROGRESSIVE LINK'
                  when c.lsbs_id=  188 and c.lsdbs_number = 2 then 'SIMAS PRIMA'
                  when c.lsbs_id=  190 and c.lsdbs_number = 7 then 'SMiLe OPTIMA LINK SEKALIGUS'
                   when c.lsbs_id=  190 and c.lsdbs_number = 8 then 'SMiLe OPTIMA REGULER'
                  when c.lsbs_id=  188 and c.lsdbs_number = 8 then 'DANAMAS PRIMA'
                  when c.lsbs_id=  188 and c.lsdbs_number not in(2,8) then 'POWERSAVE'
                  when (c.lsbs_id = 120 and c.lsdbs_number in (22,23,24)) then 'SIMAS POWER LINK' <!-- simpol -->
                  else upper(eka.f_lsdbs(a.reg_spaj, a.lsbs_id, a.lsdbs_number)) end)lsdbs_name, a.mspr_ins_period ins_period,
                  lpad(nvl(d.flag_packet,0),2,0) flagpacket
        from eka.mst_product_insured a,
        	 eka.lst_bisnis b, eka.lst_det_bisnis c,
        	 (select a.reg_spaj, a.flag_packet from eka.mst_insured a, eka.lst_packet b
       		  where reg_spaj = rpad(replace(#value#,'.'),11,' ')
        	  and a.flag_packet = b.flag_packet) d
        where a.lsbs_id = c.lsbs_id
        and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
        and a.reg_spaj = d.reg_spaj(+)
        and a.lsdbs_number = c.lsdbs_number 
        and c.lsbs_id = b.lsbs_id
        and a.mspr_active = 1
        order by a.lsbs_id
	</select>
	
	<select id="elions.uw.selectswineflu" resultClass="java.util.HashMap" parameterClass="string">
		select reg_spaj, lsbs_id, lsdbs_number
		from eka.mst_product_insured
		where reg_spaj = rpad(replace(#value#,'.'),11,' ')
		and lsbs_id = 822
	</select>

	<select id="elions.uw.selectAgenFromSpaj" resultClass="string" parameterClass="string">
		select msag_id from eka.mst_agent_prod where reg_spaj = rpad(replace(#value#,'.'),11,' ') and lsle_id=4
	</select>
	
	<select id="elions.uw.selectpremiKe" resultClass="int" parameterClass="string">
		SELECT count(*)
           FROM eka.mst_policy a,
                eka.mst_insured b,
                eka.mst_product_insured c,
                eka.mst_client_new d,
                eka.lst_det_bisnis e,
                eka.mst_agent_prod f,
                eka.mst_agent g,
                eka.mst_client_new c1,eka.lst_cabang cab,
                eka.mst_commission kom
          WHERE a.reg_spaj = b.reg_spaj
            AND a.reg_spaj = c.reg_spaj
            AND a.reg_spaj = f.reg_spaj
            AND f.reg_spaj = kom.reg_spaj
            AND c.lsbs_id = e.lsbs_id
			and a.lca_id=cab.lca_id
            AND c.lsdbs_number = e.lsdbs_number
            AND a.reg_spaj = f.reg_spaj
            AND b.mste_tgl_kirim_polis IS NOT NULL
            AND a.mspo_policy_holder = d.mcl_id
            AND a.mspo_date_ttp IS NULL
            AND f.msag_id = g.msag_id
            AND f.msag_id = kom.msag_id
            AND f.lev_comm = kom.lev_comm
            AND g.mcl_id = c1.mcl_id
            AND kom.msbi_tahun_ke = 1
            AND kom.msbi_premi_ke = 1
            AND a.lssp_id = 1
            AND (    a.lca_id <![CDATA[<>]]> '09'
                 AND e.lsbs_id NOT IN
                        ('164',
                         '142',
                         '143',
                         '144',
                         '155',
                         '158',
                         '174',
                         '175',
                         '176',
                         '177',
                         '171'
                        )
                )
            AND (e.lsbs_id NOT IN ('153') AND e.lsdbs_number NOT IN ('5'))
            AND (e.lsbs_id NOT IN ('170') AND e.lsdbs_number NOT IN ('1'))
            AND f.lsle_id = 4
            AND c.lsbs_id <![CDATA[<]]> 300
            AND NVL (TRUNC (SYSDATE) - TRUNC (b.mste_tgl_kirim_polis), 0)<![CDATA[>]]> 40
			and a.reg_spaj=rpad(replace(#value#,'.'),11,' ')
       ORDER BY d.mcl_first ASC
	</select>
	
	<select id="elions.uw.selectLsbsId" resultClass="string" parameterClass="string">
		select lsbs_id from eka.mst_product_insured where reg_spaj = rpad(replace(#value#,'.'),11,' ') and mste_insured_no =1 and rownum = 1 order by lsbs_id, lsdbs_number
	</select>
	
	<select id="elions.uw.selectLsdbsNumber" resultClass="string" parameterClass="string">
		select lsdbs_number from eka.mst_product_insured where reg_spaj = rpad(replace(#value#,'.'),11,' ') and mste_insured_no =1 and rownum = 1 order by lsbs_id, lsdbs_number
	</select>

	<select id="elions.uw.selectCountEkaSehatAndHCP" resultClass="int" parameterClass="string">
		select count(lsbs_id) from eka.mst_product_insured where reg_spaj = rpad(replace(#value#,'.'),11,' ') and ((LSBS_ID =819 AND LSDBS_NUMBER IN(SELECT LSDBS_NUMBER FROM EKA.LST_DET_BISNIS WHERE LSBS_ID = 819 and UPPER(LSDBS_NAME) LIKE '%BASIC%')) OR ((LSBS_ID in (820,823,825)) AND LSDBS_NUMBER <![CDATA[<=]]>15) OR (LSBS_ID=826 AND LSDBS_NUMBER<![CDATA[<=]]>10) )
	</select>
	
	<select id="elions.uw.selectCountMstTempDMTM" resultClass="int" parameterClass="string">
		select count(*)
		from eka.mst_temp_dmtm
		where (mspo_policy_no = #value# or reg_spaj = rpad(replace(#value#,'.'),11,' ') or no_virtual_account = #value# or reg_spaj_manual = rpad(replace(#value#,'.'),11,' ') )
	</select>
	
	<select id="elions.uw.selectRegSpajMstTempDMTM" resultClass="java.util.HashMap" parameterClass="string">
		select reg_spaj_manual,reg_spaj
		from eka.mst_temp_dmtm
		where (mspo_policy_no = #value# or reg_spaj = rpad(replace(#value#,'.'),11,' ') or no_virtual_account = #value# or reg_spaj_manual = rpad(replace(#value#,'.'),11,' '))
	</select>
	
	<select id="elions.uw.selectPolicyNoFromSpajManualMstTempDMTM" resultClass="string" parameterClass="string">
		select mspo_policy_no
		from eka.mst_temp_dmtm
		where reg_spaj_manual = rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.uw.selectCountSwineFlu" resultClass="int" parameterClass="string">
		select count(lsbs_id) 
		from eka.mst_product_insured 
		where reg_spaj = rpad(replace(#value#,'.'),11,' ') 
		and lsbs_id = 822
	</select>
	
	<select id="elions.uw.selectCountKirimLB" resultClass="int" parameterClass="java.util.HashMap">
		select count(reg_spaj) 
		from eka.mst_position_spaj 
		where reg_spaj = #spaj#
		and msps_desc like '%' || #msps_desc# || '%'
	</select>

	<select id="elions.uw.selectLsbsIdRiderHCPOrEkaSehat" resultClass="java.util.HashMap" parameterClass="string">
		select lsbs_id 
		from eka.mst_product_insured 
		where reg_spaj = rpad(replace(#value#,'.'),11,' ') 
		and ((LSBS_ID =819 AND LSDBS_NUMBER IN(SELECT LSDBS_NUMBER FROM EKA.LST_DET_BISNIS WHERE LSBS_ID = 819 and UPPER(LSDBS_NAME) LIKE '%BASIC%')) OR ((LSBS_ID IN (820, 823, 825)) AND LSDBS_NUMBER <![CDATA[<=]]>15) OR (LSBS_ID =826 and lsdbs_number <![CDATA[<=]]>10)) order by lsbs_id, lsdbs_number
	</select>

	<select id="elions.uw.selectAgenCekKomisi" resultMap="elions.uw.selectAgenCekKomisi.result" parameterClass="string">
		SELECT   a.msag_id, a.msag_active_date, d.mspe_date_birth, c.mcl_first,
		         0 AS co_polis, sum(b.msco_comm - b.msco_tax) AS komisi
		    FROM eka.mst_agent a,
		         eka.mst_commission b,
		         eka.mst_client_new c,
		         eka.mst_person d
		   WHERE a.msag_id = b.msag_id
		     AND c.mcl_id = a.mcl_id
		     AND c.mcl_id = d.mcl_id
		     AND a.msag_active = 1
		     AND b.msco_paid = 1
		     AND a.msag_id = #value#
		GROUP BY a.msag_id, a.msag_active_date, d.mspe_date_birth, c.mcl_first
	</select>

	<select id="elions.uw.selectInfoAgen" resultClass="java.util.HashMap" parameterClass="string">
		SELECT d.msco_id, a.reg_spaj, nvl(c.mcl_first,'') mcl_first, d.lev_comm
		  FROM (select * from eka.mst_agent_prod where lsle_id=4) a,
		       eka.mst_agent b,
		       eka.mst_client_new c,
		       (select * from eka.mst_commission where lev_comm=4) d
		 WHERE a.msag_id = b.msag_id
		   AND b.mcl_id = c.mcl_id(+)
		   AND a.reg_spaj = d.reg_spaj
   		   AND a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		   AND rownum = 1
	</select>

	<select id="elions.uw.selectCekKomisi" resultClass="int" parameterClass="string">
		select count(*) from eka.mst_commission where reg_spaj = rpad(replace(#spaj#,'.'),11,' ') and msbi_tahun_ke = 1 and msbi_premi_ke = 1
	</select>

	<select id="elions.uw.selectCsfCallSummary" resultClass="java.util.HashMap" parameterClass="string">
		SELECT   d.lus_login_name username, decode(a.flag_inout,'I','Incoming Call','O','Outgoing Call','-') inout, 
				 to_char(a.mscsf_beg_tgl_dial,'dd/mm/yy hh24:mi') awal, 
				 to_char(a.mscsf_end_tgl_dial,'hh24:mi') akhir,
				 to_char(a.mscsf_tgl_back,'dd/mm/yyyy') callback, 
				 a.mscsf_ket keterangan, b.mspo_policy_no polis, c.mcl_first pp
		    FROM eka.mst_csf_dial a, eka.mst_policy b, eka.mst_client_new c, eka.lst_user d
		   WHERE (a.reg_spaj = b.reg_spaj)
		     AND (b.mspo_policy_holder = c.mcl_id)
		     AND ((a.reg_spaj = rpad(replace(#value#,'.'),11,' ')))
			 AND a.lus_id = d.lus_id
		ORDER BY a.flag_inout ASC, a.mscsf_beg_tgl_dial ASC
	</select>

	<select id="elions.uw.selectCekCsfCallSameDay" parameterClass="java.util.HashMap" resultClass="int">
		SELECT (CASE WHEN to_char(mscsf_beg_tgl_dial,'yyyymmdd') = to_char(sysdate,'yyyymmdd') THEN 1 ELSE 0 END) hasil FROM eka.mst_csf_dial
		WHERE REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ')
		AND MSCSF_DIAL_KE = #s_dial#
	</select>

	<select id="elions.uw.selectCsfCallReminderList" resultClass="java.util.HashMap">
		SELECT d.lus_login_name, c.nama, b.no_polis
		  FROM eka.mst_csf_dial a, eka.v_polis b, eka.v_client_new c, eka.lst_user d
		 WHERE a.reg_spaj = b.reg_spaj
		   AND b.pp_id = c.mcl_id
		   AND a.mscsf_tgl_back = TRUNC (SYSDATE)
		   AND a.lus_id = d.lus_id
	</select>

	<select id="elions.uw.selectCsfCallReminder" resultClass="int">
		SELECT COUNT (*)
		  FROM eka.mst_csf_dial
		 WHERE mscsf_tgl_back = TRUNC (SYSDATE)
	</select>

	<select id="elions.uw.selectTotalCsfCall" resultClass="int" parameterClass="java.util.HashMap">
		select count(*) from eka.mst_csf_dial where reg_spaj = rpad(replace(#value#,'.'),11,' ')
		and lus_id = #lus_id#
	</select>

	<select id="elions.uw.selectCsfCall" resultClass="com.ekalife.elions.model.CSCall" parameterClass="java.util.HashMap">
		SELECT mscsf_ket, mscsf_tgl_back, reg_spaj, mscsf_dial_ke, flag_inout,
		       mscsf_beg_tgl_dial, mscsf_end_tgl_dial, lus_id
		  FROM eka.mst_csf_dial
		 WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND TRUNC (mscsf_beg_tgl_dial) = TRUNC (SYSDATE)
		   AND flag_inout = #inout#
		   AND lus_id = #lus_id#
		ORDER BY mscsf_dial_ke
	</select>

	<select id="elions.uw.uwinfo.selectHistoryBilling" resultClass="java.util.HashMap" parameterClass="string">
		SELECT reg_spaj, tahun_ke, premi_ke, tanggal, keterangan, lus_login_name
		  FROM eka.mst_hist_bill a, eka.lst_user b
		 WHERE a.oleh_user = b.lus_id AND reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.uw.uwinfo.selectHistorySalah" resultClass="java.util.HashMap" parameterClass="string">
		SELECT reg_spaj, msl_tgl, b.lus_login_name lus_salah, lsl_ket,
		       c.lus_login_name lus_user, msl_tahun_ke, msl_premi_ke, msl_no_pre,
		       msl_ket
		  FROM eka.mst_salah a, eka.lst_user b, eka.lst_user c, eka.lst_salah d
		 WHERE a.msl_user_salah = b.lus_id(+)
		   AND a.lus_id = c.lus_id(+)
		   AND a.lsl_id = d.lsl_id(+)
		   AND reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
   
	<select id="elions.uw.uwinfo.selectBillingChange" resultClass="java.util.HashMap" parameterClass="string">
		SELECT reg_spaj, tahun_ke, premi_ke, tgl_update, beg_aktif, end_aktif,
		       new_th_ke, new_prm_ke, new_baktif, new_eaktif, b.lus_login_name, next_bill,
		       new_next_bill
		  FROM eka.lst_hist_bill a, eka.lst_user b
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ') and a.user_id = b.lus_id(+)
	</select>

	<select id="elions.uw.uwinfo.selectDetailBatal" resultClass="java.util.HashMap" parameterClass="string">
		SELECT a.msb_no_batal, a.msb_tgl_batal, a.msb_alasan, a.lus_id,
		       b.lus_login_name
		  FROM eka.mst_batal a, eka.lst_user b
		 WHERE a.lus_id = b.lus_id AND a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.uwinfo.selectTanggal" resultClass="java.util.HashMap" parameterClass="string">
		select a.reg_spaj,
	   			a.mste_beg_date, 
	  			a.mste_end_date ,
	   			a.mste_kyc_date kyc,
	   			a.mste_tgl_kirim_polis krm_polis,
	   			a.mste_tgl_terima_lb tgl_terima_LB,
	   			a.mste_tgl_komisi  tgl_komisi,
	   			a.mste_tgl_kirim_lb tgl_krm_LB,
	   			a.mste_tgl_valid_print tgl_valid_print,
	   			a.mste_tgl_aksep tgl_akep,
	   			a.mste_tgl_spaj_doc tgl_dok_lengkap_uw,
	   			b.mspo_date_print tgl_print,
	   			b.mspo_spaj_date tgl_spaj,
	   			b.mspo_input_date tgl_input_spaj,
	   			b.mspo_next_bill tgl_tagihan_berikutnya,
	   			a.mste_tgl_terima_spaj tgl_terima_spaj,
	   			c.mspr_end_pay tg_akhr_byr
		from eka.mst_insured a, eka.mst_policy b, eka.mst_product_insured c
		where a.reg_spaj=b.reg_spaj
	  		and a.reg_spaj=c.reg_spaj
	  		and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
	  		and c.lsbs_id<![CDATA[ <  ]]>300 
		order by  a.reg_spaj desc 
	</select>
	
	<select id="elions.uw.selectGetMspoProvider" resultClass="java.lang.Integer" parameterClass="string">
		select nvl(mspo_provider,0) mspo_provider
			from eka.mst_policy
			where reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.cekAgen" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT   a.msag_id kode_agen,
         		b.mcl_first nama_agen,
         		b.mspe_email email_agen,
         		(a.lca_id || a.lwk_id || a.lsrg_id) region,
         		a.msag_beg_date beg_date_kontrak,
         		a.msag_end_date end_date_kontrak,
         		a.msag_active_date tgl_aktif,
         		d.lsbp_nama bank,
        		c.lbn_nama bank_cabang,
         		a.msag_tabungan bank_rekening,
         		DECODE(a.msag_sertifikat, 0, 'NO', 1, 'PEMULIHAN', 2, 'UJIAN', 3, 'SEMENTARA', '-') sertifikat,
         		a.msag_berlaku sertifikat_aktif,
         		a.msag_sertifikat_no sertifikat_no,
         		a.msag_npwp npwp_agen
  		FROM   eka.mst_agent a,
         		eka.mst_client_new b,
         		eka.lst_bank c,
         		eka.lst_bank_pusat d
 		WHERE       a.msag_id =trim(#msag_id#)
         		AND a.mcl_id = b.mcl_id
         		AND a.lbn_id = c.lbn_id(+)
         		AND c.lsbp_id = d.lsbp_id
				AND a.msag_active = 1
	</select>

	<select id="elions.uw.selectSpajMallBelumTrans" parameterClass="string" resultClass="java.util.HashMap" >
		select rownum no, a.reg_spaj, a.mspo_policy_no_format, eka.f_lsdbs(a.reg_spaj, b.lsbs_id, b.lsdbs_number) lsdbs_name , d.lscb_pay_mode, b.mspr_premium, to_char(a.mspo_date_print,'dd/mm/yyyy') tgl_print
		from eka.mst_policy a, eka.mst_product_insured b, eka.lst_det_bisnis c, eka.lst_pay_mode d
		where a.lca_id = '58'
		and a.lspd_id = '6'
		and a.mspo_date_print <![CDATA[<]]> sysdate
		and b.lsdbs_number = c.lsdbs_number
		and b.reg_spaj = a.reg_spaj
		and c.lsbs_id = b.lsbs_id
		and d.lscb_id = a.lscb_id
	</select>

	<select id="elions.uw.uwinfo.selectStatusPolis" resultClass="java.util.HashMap" parameterClass="string">
		SELECT reg_spaj, tgl_update, osuser, machine, program, new_status,
		b.lssp_status status1, c.lssp_status status2
		  FROM eka.mst_history_sts_polis a,
		eka.lst_policy_status b,
		eka.lst_policy_status c
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
		AND a.lssp_id = b.lssp_id(+)
		AND a.new_status = c.lssp_id(+)
	</select>
	
	<select id="elions.uw.selectMclIDPemegangPolis" resultClass="string" parameterClass="string">
		SELECT mspo_policy_holder
		from eka.mst_policy
		WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.uw.uwinfo.selectBeginDate" resultClass="java.util.HashMap" parameterClass="string">
		SELECT reg_spaj, tgl_update, beg_date, osuser, machine, program
		  FROM eka.mst_history_beg_date
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
 	</select>

	<select id="elions.uw.uwinfo.selectListUlangan" resultClass="java.util.HashMap" parameterClass="string">
		SELECT reg_spaj, tanggal, jenis, status_polis, b.lus_login_name, keterangan, lssp_status
		  FROM eka.lst_ulangan a, eka.lst_user b, eka.lst_policy_status c
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ') and a.lus_id = b.lus_id and a.status_polis = c.lssp_id(+)
	</select>

	<select id="elions.uw.uwinfo.selectPositionSpaj" resultClass="com.ekalife.elions.model.Position" parameterClass="string">
		select a.reg_spaj, a.mspo_policy_no, b.msps_date, b.lspd_id, b.lssp_id,
               b.lssa_id, b.lus_id, b.msps_desc, e.status_accept,
               a.mspo_provider, c.lspd_position, d.lssp_status, 
           	   f.lus_login_name
		from eka.mst_policy a,
		     eka.mst_position_spaj_pas b,
		     eka.lst_document_position c,
		     eka.lst_policy_status d,
		     eka.lst_status_accept e, 
		     eka.lst_user f,
		     eka.mst_pas_sms g
		where a.reg_spaj = g.reg_spaj
		and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		and g.msp_fire_id = b.reg_id
		AND b.lspd_id = c.lspd_id (+)
		AND b.lssp_id = d.lssp_id (+)
		AND b.lssa_id = e.lssa_id (+)
		AND b.lus_id = f.lus_id(+)
		union
		SELECT b.reg_spaj, a.mspo_policy_no, b.msps_date, b.lspd_id, b.lssp_id,
		       b.lssa_id, b.lus_id, 
		       msps_desc, 
				(case when (b.lspd_id=7 or b.lspd_id=8 or b.lspd_id=99) and f.lde_id=11 and b.lssp_id =1 and b.lssa_id =5 and b.msps_desc like '%KIRIM KE LIFE BENEFIT%' then 'SENT OK' else 
		       		(case when (b.lspd_id=7 or b.lspd_id=8 or b.lspd_id=99) and f.lde_id=27 and b.lssp_id =1 and b.lssa_id =5 and b.msps_desc like '%DITERIMA LIFE BENEFIT%' then 'RECEIVED OK' else 
		       			(case when (b.lspd_id=7 or b.lspd_id=8 or b.lspd_id=99) and f.lde_id=27 and b.lssp_id =1 and b.lssa_id =5 then 'RECEIVED FAILED' else e.status_accept 
						  end)
		       		end)
		       	end)status_accept,
			a.mspo_provider, c.lspd_position, d.lssp_status, 
			f.lus_login_name
		  FROM eka.mst_policy a, eka.mst_position_spaj b, eka.lst_document_position c, eka.lst_policy_status d,
		eka.lst_status_accept e, eka.lst_user f, 
		(select b.reg_spaj, b.mu_lspd_id from eka.mst_ulink b where b.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		 and b.mu_ke = (select max(mu_ke) from eka.mst_ulink where reg_spaj = b.reg_spaj)) g
		 WHERE b.reg_spaj = a.reg_spaj 
		AND b.lspd_id = c.lspd_id (+)
		AND b.lssp_id = d.lssp_id (+)
		AND b.lssa_id = e.lssa_id (+)
		AND b.reg_spaj = g.reg_spaj(+)
		AND b.lus_id = f.lus_id(+)
		AND b.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		order by msps_date
	</select>
	
	<!-- <select id="elions.uw.uwinfo.selectPositionPas" resultClass="com.ekalife.elions.model.PositionPas" parameterClass="string">
		select x.msp_fire_id, x.msp_pas_create_date msp_date, 
			'INPUT DETAIL' position, 
			(select a.lus_login_name from eka.lst_user a where a.lus_id = x.lus_id) lus_login_name
			, '' msp_ket_batal 
			from eka.mst_pas_sms x where x.msp_id = #value#
			union
			select x.msp_fire_id, x.msp_pas_accept_date msp_date, 
			'TRANSFER KE UW' position, 
			(select a.lus_login_name from eka.lst_user a where a.lus_id = x.lus_id) lus_login_name
			, '' msp_ket_batal 
			from eka.mst_pas_sms x where x.msp_id = #value#
			and x.msp_tgl_transfer is not null
			union
			select x.msp_fire_id, x.msp_pas_accept_date msp_date, 
			'AKSEP UW' position, 
			(select a.lus_login_name from eka.lst_user a where a.lus_id = x.lus_id_uw_pas) lus_login_name
			, '' msp_ket_batal 
			from eka.mst_pas_sms x where x.msp_id = #value#
			and x.msp_pas_accept_date is not null
			union
			select x.msp_fire_id, x.msp_tgl_batal msp_date, 
			'BATAL' position,
			(select a.lus_login_name from eka.lst_user a where a.lus_id = x.lus_id_uw_batal) lus_login_name
			, x.msp_ket_batal 
			from eka.mst_pas_sms x where x.msp_id = #value#
			and x.msp_ket_batal is not null
	</select> -->
	
	<select id="elions.uw.uwinfo.selectPositionPas" resultClass="com.ekalife.elions.model.PositionPas" parameterClass="string">
		select x.reg_id, x.msps_date, 
			x.msps_desc,
			(select a.lus_login_name from eka.lst_user a where a.lus_id = x.lus_id) lus_login_name
			from eka.mst_position_spaj_pas x where x.reg_id = ( select b.msp_fire_id from eka.mst_pas_sms b where b.msp_id = #value# and b.msp_pas_create_date is not null )
			order by x.msps_date asc
	</select>
	
	<!-- <select id="elions.uw.uwinfo.selectPositionFire" resultClass="com.ekalife.elions.model.PositionPas" parameterClass="string">
			select x.msp_fire_id, x.msp_fire_fail_date msp_date, 
			(
			case when msp_fire_name is null then 'tidak ada pengajuan'
             when msp_fire_export_flag is null then 'belum diaksep uw'
             when msp_fire_export_flag = 0 then 'belum dikirim'
             when msp_fire_export_flag = 1 then 'sudah dikirim'
             when msp_fire_export_flag = 2 then 'resend'
             when msp_fire_export_flag = 3 then 'resent dikirim'
             when msp_fire_export_flag = 4 then 'cek resend'
             when msp_fire_export_flag = 5 then 'diterima'
             when msp_fire_export_flag = 6 then 'ditolak'
            else '-'
			end) position, 
			(select a.lus_login_name from eka.lst_user a where a.lus_id = x.lus_id_uw_fire) lus_login_name
			, x.msp_fire_fail_desc msp_ket_batal 
			from eka.mst_pas_sms x where x.msp_id = #value#
	</select> -->
	
	<select id="elions.uw.uwinfo.selectPositionFire" resultClass="com.ekalife.elions.model.PositionPas" parameterClass="string">
			select x.reg_id, x.msps_date, 
			x.msps_desc,
			(select a.lus_login_name from eka.lst_user a where a.lus_id = x.lus_id) lus_login_name
			from eka.mst_position_spaj_pas x where x.reg_id = ( select b.msp_fire_id from eka.mst_pas_sms b where b.msp_id = #value# and b.msp_fire_name is not null )
			order by x.msps_date asc
	</select>
	
	<select id="elions.uw.selectSaldoUlink" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT mdu_saldo_unit, mdu_saldo_unit_pp, mdu_saldo_unit_tu
		  FROM eka.mst_det_ulink
		 WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND mu_ke = 1
		   AND lji_id = #jenis_invest#
	</select>

	<select id="elions.uw.selectNabUlink" resultMap="elions.uw.selectNabUlink.result" parameterClass="java.util.HashMap">
		SELECT b.lji_id, b.lji_invest, a.lnu_nilai
		  FROM (SELECT lji_id, lnu_nilai
		          FROM eka.lst_nab_ulink a
		         WHERE lnu_type = #type_nab# AND TO_CHAR (lnu_tgl, 'yyyymmdd') = #tgl_nab#) a,
		       eka.lst_jenis_invest b
		 WHERE b.lji_id = a.lji_id(+) AND b.lji_id = #jenis_invest#
	</select>

	<select id="elions.uw.selectTransUlink" resultMap="elions.uw.selectTransUlink.result" parameterClass="java.util.HashMap">
		SELECT reg_spaj, mu_ke, mtu_ke, mtu_tgl_trans, lt_id, lji_id, mtu_desc,
		       mtu_jumlah, mtu_tgl_nab, mtu_nab, mtu_unit, mtu_dk, mtu_saldo_unit,
		       mtu_tgl_input, lus_id, mtu_flag_print, mtu_tahun_ke, mtu_premi_ke,
		       lspd_id, mtu_tgl_proses, mtu_flag_lock
		  FROM eka.mst_trans_ulink
		 WHERE lspd_id = #pos#
		   AND TRUNC (mtu_tgl_trans) BETWEEN #startDate# AND #endDate# 
		   <isNotEmpty property="filter" prepend=" AND "><![CDATA[$filter$]]></isNotEmpty>
	</select>
	
	<select id="elions.uw.selectCountTransUlink" resultClass="int" parameterClass="java.util.HashMap">
		SELECT COUNT(*)
         FROM "EKA"."MST_TRANS_ULINK"  
         WHERE ( EKA."MST_TRANS_ULINK"."REG_SPAJ" = rpad(replace(#spaj#,'.'),11,' ') ) AND
               ( EKA."MST_TRANS_ULINK"."MU_KE" <![CDATA[<]]> #mu_ke# ) AND					
      	      ( EKA."MST_TRANS_ULINK"."MTU_TGL_NAB" IS NULL ) 
	</select>

	<select id="elions.uw.selectJumlahNAB" resultClass="int" parameterClass="java.util.HashMap">
		SELECT count(*)
		  FROM eka.mst_trans_ulink
		 WHERE lspd_id = #pos#
		   AND TRUNC (mtu_tgl_trans) BETWEEN #startDate# AND #endDate#
	</select>

	<select id="elions.uw.select_cektglkirimpolis" resultClass="java.util.HashMap" parameterClass="string">
		SELECT mspo_date_print, NVL(mspo_provider,0) prov, mste_tgl_terima_admedika
		  FROM eka.mst_policy a, eka.mst_insured b
		 WHERE a.reg_spaj = rpad(replace(#value#,'.'),11,' ') and a.reg_spaj = b.reg_spaj
	</select>

	<select id="elions.uw.selectHistoryRekeningNasabah" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select a.tgl, a.notes, b.lus_login_name, a.mrc_no_ac, a.mrc_no_ac_lama from eka.mst_rek_hist a, eka.lst_user b
		where a.lus_id = b.lus_id 
		  and a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		  and jenis in (0,8)
		order by tgl
	</select>

	<select id="elions.uw.selectRekeningNasabah" resultClass="com.ekalife.elions.model.Rekening_client" parameterClass="string">
		SELECT reg_spaj, lsbp_id, mrc_cabang, mrc_nama, mrc_no_ac, mrc_jenis,
		       mrc_jn_nasabah, mrc_kurs, mrc_kota, lus_id, tgl_change, replace(mrc_no_ac, '.') no_account,
		       replace(mrc_no_ac, '.') mrc_no_ac_lama, mrc_pp
		  FROM eka.mst_rek_client
  		 WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectRekeningAutoDebet" resultClass="com.ekalife.elions.model.Rekening_auto_debet" parameterClass="string">
		SELECT a.reg_spaj, b.lbn_id, d.mspo_nasabah_acc,c.lsbp_nama,
       			d.lku_id, d.mspo_nasabah_acc, DECODE(a.mar_jenis, 1, eka.f_masking(a.mar_acc_no,1), a.mar_acc_no) mar_acc_no, a.mar_holder,
       			to_char(a.mar_expired,'dd/mm/yyyy') mar_expired, a.mar_active, to_char(e.mste_tgl_recur,'dd/mm/yyyy') mste_tgl_recur, a.mar_jenis, a.flag_jn_tabungan, a.flag_autodebet_nb
  		FROM eka.mst_account_recur a,
       		 eka.lst_bank b,
             eka.lst_bank_pusat c,
             eka.mst_policy d,
             eka.mst_insured e
 		WHERE a.lbn_id = b.lbn_id
   				AND b.lsbp_id = c.lsbp_id
   				AND a.reg_spaj = d.reg_spaj
   				AND a.reg_spaj = e.reg_spaj
  		 		and a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
	</select>

	<select id="elions.uw.selectChartNav" resultMap="elions.uw.selectChartNav.result" parameterClass="string">
		SELECT   b.lji_invest, a.lnu_type, to_char(a.lnu_tgl,'dd') lnu_tgl, a.lnu_nilai, to_char(a.lnu_tgl,'dd/mm/yyyy') tgl
		    FROM eka.lst_nab_ulink a, eka.lst_jenis_invest b
		   WHERE lnu_tgl > (sysdate-20)
			<isEqual compareValue="rupiah" prepend="AND">
				a.lji_id in ('01','02','03')
			</isEqual>
			<isEqual compareValue="dollar" prepend="AND">
				a.lji_id in ('04','05')
			</isEqual>
		   AND a.lji_id = b.lji_id(+)
		ORDER BY a.lji_id, a.lnu_tgl
	</select>

	<select id="elions.uw.selectRincianInvestasiRegister" resultClass="java.util.HashMap" parameterClass="string">
		SELECT a.no_register, b.lt_transksi, a.mu_tgl_trans, a.mu_jlh_premi,
		       a.mu_jlh_unit, a.mu_tgl_input, a.mu_tahun_ke, a.mu_lspd_id
		  FROM eka.mst_ulink a, eka.lst_transaksi b
		 WHERE a.reg_spaj = rpad(replace(#value#,'.'),11,' ') AND a.mu_aktif = 1 AND a.lt_id = b.lt_id(+)
	</select>

	<select id="elions.uw.selectRincianInvestasiNilaiPolis" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT lji_id, jenis, saldo, harga, (saldo * harga) nilai_polis, invest
		  FROM (SELECT   a.lji_id, b.lji_invest jenis, a.mdu_saldo_unit saldo,
		                 NVL ((SELECT p.lnu_nilai
		                         FROM eka.lst_nab_ulink p
		                        WHERE p.lji_id = a.lji_id
		                          AND p.lnu_type = #lnu#
		                          AND p.lnu_tgl = (SELECT MAX (lnu_tgl)
		                                             FROM eka.lst_nab_ulink
		                                            WHERE lnu_type = #lnu#)),
		                      DECODE (a.lji_id, '02', 1000, '03', 1000, 0)
		                     ) harga,
		                 0 nilai_polis, a.mdu_persen_tu invest
		            FROM eka.mst_det_ulink a, eka.lst_jenis_invest b
		           WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		             AND a.mu_ke = #ke#
		             AND a.mdu_aktif = 1
		             AND a.lji_id = b.lji_id(+)
		        ORDER BY a.lji_id ASC)
	</select>

	<select id="elions.uw.selectRincianInvestasi" resultClass="java.util.HashMap" parameterClass="string">
		SELECT   a.mu_ke, c.lji_invest inves, a.mtu_tgl_nab tanggal,
		         a.mtu_desc transaksi, a.mtu_jumlah jumlah,
		         DECODE (a.mtu_flag_biaya, 1, '*', '') flag_biaya,
		         a.mtu_nab harga_unit, a.mtu_unit jumlah_unit
		    FROM eka.mst_trans_ulink a, eka.mst_ulink b, eka.lst_jenis_invest c
		   WHERE a.lji_id = c.lji_id
		     AND b.reg_spaj = a.reg_spaj
		     AND b.mu_ke = a.mu_ke
		     AND b.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		     AND b.mu_aktif = 1
		ORDER BY c.lji_invest, b.mu_ke
	</select>
	
	<select id="elions.uw.selectCekSpajBayar" parameterClass="string" resultClass="int">
		select count(*) from eka.mst_bayar_tahapan where reg_spaj_bayar = rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.uw.selectJumlahBayarTahapanUsingOldPolicy" resultClass="double" parameterClass="list">
		SELECT sum(msbat_jumlah)
		  FROM eka.mst_policy a, eka.mst_bayar_tahapan b
		 WHERE a.reg_spaj = b.reg_spaj
			<iterate prepend=" and " open="(" close=")" conjunction=" or ">
				a.mspo_policy_no = #value[]#
			</iterate>
		   AND b.lsjta_id = 4
		   AND b.mstah_tahapan_ke = (SELECT MAX (mstah_tahapan_ke)
		                               FROM eka.mst_bayar_tahapan
		                              WHERE reg_spaj = b.reg_spaj AND lsjta_id = 4)
	</select>
	
	<select id="elions.uw.selectJumlahBayarTahapan" resultClass="double" parameterClass="java.util.HashMap">
		SELECT SUM (msbat_jumlah)
		  FROM eka.mst_bayar_tahapan
		 WHERE (reg_spaj_bayar = rpad(replace(#spaj#,'.'),11,' '))
		   AND (mstah_tahapan_ke IN 
		           (SELECT mstah_tahapan_ke
		              FROM eka.mst_bayar_tahapan
		             WHERE (reg_spaj_bayar = rpad(replace(#spaj#,'.'),11,' '))
		       ))
	</select>

<!--					<isEmpty property="begdate">-->
<!--						AND (beg_date_bill is null)-->
<!--					</isEmpty>-->
<!--					<isNotEmpty property="begdate">-->
<!--		               AND (beg_date_bill = #begdate#)-->
<!--					</isNotEmpty>-->
	
	<!-- Cari Nospaj mst policy doang-->
	<select id="elions.uw.mst_policy_reg_spaj" resultClass="java.util.HashMap"
		parameterClass="java.lang.String">
		select * from eka.mst_policy where reg_spaj=#txtnospaj#
	</select>

	<!-- Cari SPAJ -->
	<select id="elions.uw.selectSPAJ" resultClass="java.util.HashMap"
		parameterClass="java.util.HashMap">
		SELECT a.reg_spaj, a.mspo_policy_no, b.mcl_first AS pp, c.mcl_first AS tt
		,		
			(select eka.mst_agent.lca_id||eka.mst_agent.lwk_id 
	    from
	         eka.mst_agent,   
	         eka.mst_agent_prod,   
	         eka.mst_policy  
	   where ( eka.mst_agent.msag_id = eka.mst_agent_prod.msag_id ) and  
	         ( eka.mst_policy.reg_spaj = eka.mst_agent_prod.reg_spaj ) and  
	         ( (eka.mst_policy.reg_spaj = a.reg_spaj ) and  
	         eka.mst_agent_prod.lsle_id = 4 ) ) as lsrg_nama
		  FROM eka.mst_policy a,
		       eka.mst_client_new b,
		       eka.mst_client_new c,
		       eka.mst_insured d
		 WHERE 
		 	<isNotEqual property="posisi" compareValue="-1">
		 	a.lspd_id = #posisi# AND 
		 	</isNotEqual>
		 	a.lstb_id = #tipe#
		   AND a.reg_spaj = d.reg_spaj
		   AND a.mspo_policy_holder = b.mcl_id(+)
		   AND d.mste_insured = c.mcl_id(+)
		<dynamic prepend="AND" open="(" close=")">
			<isEqual property="kategori" compareValue="1" prepend="OR" removeFirstPrepend="true">
				upper(trim(a.reg_spaj)) like '%' || upper(trim(replace(#kata#,'.'))) || '%'
			</isEqual>
			<isEqual property="kategori" compareValue="2" prepend="OR" removeFirstPrepend="true">
				upper(trim(a.mspo_policy_no)) like '%' || upper(trim(replace(#kata#,'.'))) || '%'
			</isEqual>
			<isEqual property="kategori" compareValue="3" prepend="OR" removeFirstPrepend="true">
				upper(trim(b.mcl_first)) like '%' || upper(trim(replace(#kata#,'.'))) || '%'
			</isEqual>
			<isEqual property="kategori" compareValue="4" prepend="OR" removeFirstPrepend="true">
				upper(trim(c.mcl_first)) like '%' || upper(trim(replace(#kata#,'.'))) || '%'
			</isEqual>
		</dynamic>
	</select>

	<!-- Pemegang -->
	<select id="elions.uw.selectPemegang" resultMap="elions.uw.selectPemegang.result" parameterClass="java.util.HashMap">
		SELECT eka.mst_client_new.lti_id,eka.mst_client_new.mcl_first, eka.mst_client_new.mcl_id,eka.mst_client_new.mkl_kerja,
			   eka.mst_client_new.mkl_tujuan, eka.mst_client_new.mkl_penghasilan , eka.mst_client_new.mkl_pendanaan ,eka.mst_client_new.mkl_industri ,
		       eka.mst_client_new.mspe_no_identity, eka.mst_client_new.mspe_no_identity_expired, eka.mst_client_new.lside_id,
		       eka.mst_client_new.mspe_place_birth,
		       eka.mst_client_new.mspe_date_birth, decode(eka.mst_client_new.mspe_sex,1,'PRIA','WANITA') mspe_sex,
		       eka.mst_client_new.mspe_sts_mrt,
		       eka.lst_grp_job.lgj_note, eka.mst_client_new.mspe_lama_kerja,
		       eka.lst_identity.lside_name, eka.lst_negara.lsne_note,
		       eka.mst_client_new.mcl_gelar, eka.mst_client_new.mpn_job_desc,
		       eka.mst_client_new.mspe_mother, eka.mst_address_new.alamat_rumah,
		       eka.mst_address_new.kd_pos_rumah, eka.mst_address_new.kota_rumah,
		       eka.mst_address_new.area_code_rumah, eka.mst_address_new.telpon_rumah,
		       eka.mst_address_new.alamat_kantor, eka.mst_address_new.kd_pos_kantor,
		       eka.mst_address_new.kota_kantor, eka.mst_address_new.no_hp2,
		       eka.mst_address_new.no_hp, eka.mst_address_new.email,
		       eka.mst_address_new.area_code_kantor,
		       eka.mst_address_new.telpon_kantor, eka.mst_policy.reg_spaj,
		       eka.mst_policy.mspo_umur_beasiswa, eka.mst_policy.mspo_plan_provider,eka.mst_insured.mste_insured_no,
		       eka.mst_insured.mste_standard, eka.mst_insured.mste_age,
		       eka.lst_agama.lsag_name, eka.lst_education.lsed_name,
		       eka.lst_jabatan.ljb_note, eka.lst_relation.lsre_id,eka.lst_relation.lsre_relation,
		       eka.mst_agent.msag_id, eka.mst_agent.lca_id, eka.mst_agent.lwk_id,eka.mst_agent.lsrg_id,
		       eka.mst_agent.lsrg_id,eka.mst_policy.lscb_id,eka.mst_policy.mspo_policy_no,
		       eka.mst_policy.mspo_policy_holder,eka.mst_policy.mspo_age,eka.mst_policy.lssp_id,
		       eka.lst_jalur_dist.id_dist, upper(eka.lst_jalur_dist.nama_dist) nama_dist,eka.mst_policy.mspo_no_pengiriman
		  FROM eka.mst_address_new,
		       eka.mst_client_new,
		       eka.mst_insured,
		       eka.mst_policy,
		       eka.lst_negara,
		       eka.lst_grp_job,
		       eka.lst_identity,
		       eka.lst_jabatan,
		       eka.lst_agama,
		       eka.lst_education,
		       eka.lst_relation,
		       eka.mst_agent,
		       eka.mst_agent_prod,
		       eka.lst_cabang,
		       eka.lst_jalur_dist
		 WHERE (eka.mst_client_new.mcl_id = eka.mst_address_new.mcl_id(+))
		   AND (eka.mst_policy.reg_spaj = eka.mst_insured.reg_spaj)
		   AND (eka.lst_negara.lsne_id(+) = eka.mst_client_new.lsne_id)
		   AND (eka.lst_grp_job.lgj_id(+) = eka.mst_client_new.lgj_id)
		   AND (eka.lst_identity.lside_id(+) = eka.mst_client_new.lside_id)
		   AND (eka.mst_policy.mspo_policy_holder = eka.mst_client_new.mcl_id(+))
		   AND (eka.mst_client_new.lsag_id = eka.lst_agama.lsag_id(+))
		   AND (eka.mst_client_new.lsed_id = eka.lst_education.lsed_id(+))
		   AND (eka.mst_policy.lsre_id = eka.lst_relation.lsre_id(+))
		   AND (eka.mst_client_new.ljb_id = eka.lst_jabatan.ljb_id(+))
		   AND eka.mst_agent.msag_id = eka.mst_agent_prod.msag_id
		   AND eka.mst_policy.reg_spaj = eka.mst_agent_prod.reg_spaj
		   AND eka.mst_policy.lca_id = eka.lst_cabang.lca_id
		   AND eka.lst_cabang.jalurdis = eka.lst_jalur_dist.id_dist
		   AND eka.mst_agent_prod.lsle_id = 4
		   AND ((eka.mst_policy.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')))
	</select>
	
	<select id="elions.uw.selectPemegangSimpleBac" resultClass="java.util.HashMap"
		parameterClass="java.util.HashMap">
		SELECT eka.mst_client_new.lti_id,eka.mst_client_new.mcl_first, eka.mst_client_new.mcl_id,eka.mst_client_new.mkl_kerja,
               eka.mst_client_new.mkl_tujuan, eka.mst_client_new.mkl_penghasilan , eka.mst_client_new.mkl_pendanaan ,eka.mst_client_new.mkl_industri ,
               eka.mst_client_new.mspe_no_identity, eka.mst_client_new.mspe_no_identity_expired, eka.mst_client_new.lside_id,
               eka.mst_client_new.mspe_place_birth,
               eka.mst_client_new.mspe_date_birth, decode(eka.mst_client_new.mspe_sex,1,'PRIA','WANITA') mspe_sex,
               eka.mst_client_new.mspe_sts_mrt, 
               eka.lst_grp_job.lgj_note, eka.mst_client_new.mspe_lama_kerja,
               eka.lst_identity.lside_name, eka.lst_negara.lsne_note,
               eka.mst_client_new.mcl_gelar, eka.mst_client_new.mpn_job_desc,
               eka.mst_client_new.mspe_mother, eka.mst_address_new.alamat_rumah,
               eka.mst_address_new.kd_pos_rumah, eka.mst_address_new.kota_rumah,
               eka.mst_address_new.area_code_rumah, eka.mst_address_new.telpon_rumah,
               eka.mst_address_new.alamat_kantor, eka.mst_address_new.kd_pos_kantor,
               eka.mst_address_new.kota_kantor, eka.mst_address_new.no_hp2,
               eka.mst_address_new.no_hp, eka.mst_address_new.email,
               eka.mst_address_new.area_code_kantor,
               eka.mst_address_new.telpon_kantor, eka.mst_pas_sms.reg_spaj,
               eka.mst_pas_sms.mspo_plan_provider,eka.mst_pas_sms.mcl_id_tt,
               eka.lst_agama.lsag_name, eka.lst_education.lsed_name,
               eka.lst_jabatan.ljb_note, eka.lst_relation.lsre_id,eka.lst_relation.lsre_relation,
               eka.mst_agent.msag_id, eka.mst_agent.lca_id, eka.mst_agent.lwk_id,
               eka.mst_agent.lsrg_id,eka.mst_pas_sms.lscb_id,eka.mst_pas_sms.mspo_policy_no,
               eka.mst_pas_sms.mcl_id_pp,eka.mst_pas_sms.msp_age,eka.mst_pas_sms.lssp_id
          FROM eka.mst_address_new,
               eka.mst_client_new,
               eka.mst_pas_sms,
               eka.lst_negara,
               eka.lst_grp_job,
               eka.lst_identity,
               eka.lst_jabatan,
               eka.lst_agama,
               eka.lst_education,
               eka.lst_relation,
               eka.mst_agent
         WHERE (eka.mst_client_new.mcl_id = eka.mst_address_new.mcl_id(+))
           AND (eka.lst_negara.lsne_id(+) = eka.mst_client_new.lsne_id)
           AND (eka.lst_grp_job.lgj_id(+) = eka.mst_client_new.lgj_id)
           AND (eka.lst_identity.lside_id(+) = eka.mst_client_new.lside_id)
           AND (eka.mst_pas_sms.mcl_id_pp = eka.mst_client_new.mcl_id(+))
           AND (eka.mst_client_new.lsag_id = eka.lst_agama.lsag_id(+))
           AND (eka.mst_client_new.lsed_id = eka.lst_education.lsed_id(+))
           AND (eka.mst_pas_sms.lsre_id = eka.lst_relation.lsre_id(+))
           AND (eka.mst_client_new.ljb_id = eka.lst_jabatan.ljb_id(+))
           AND eka.mst_agent.msag_id = eka.mst_pas_sms.msag_id
           AND ((eka.mst_pas_sms.msp_fire_id = #reg_id#))
	</select>
	
	<!-- Tertanggung (ferry)  -->
<select id="elions.uw.select.tt" resultMap="elions.uw.select.tt.result"
		parameterClass="java.util.HashMap">
			SELECT EKA.MST_POLICY.MSPO_INPUT_DATE, EKA.MST_CLIENT_NEW.MCL_FIRST,EKA.MST_CLIENT_NEW.MKL_KERJA,
				EKA.MST_POLICY.MSPO_DATE_PRINT,EKA.MST_POLICY.MSPO_TERIMA_TTP,
			    EKA.MST_CLIENT_NEW.MCL_ID,   
			    EKA.MST_CLIENT_NEW.MSPE_NO_IDENTITY,
			    EKA.MST_CLIENT_NEW.MSPE_NO_IDENTITY_EXPIRED,     
			    EKA.MST_CLIENT_NEW.LSIDE_ID,      
			    EKA.MST_CLIENT_NEW.MSPE_PLACE_BIRTH,     
			    EKA.MST_CLIENT_NEW.MSPE_DATE_BIRTH,      
			    EKA.MST_CLIENT_NEW.MSPE_SEX, 
			    decode(eka.mst_client_new.mspe_sex,1,'PRIA','WANITA') mspe_sex2,
			    EKA.MST_CLIENT_NEW.MSPE_STS_MRT,     
			    EKA.LST_GRP_JOB.LGJ_NOTE,     
			    EKA.MST_CLIENT_NEW.MSPE_LAMA_KERJA,     
			    EKA.LST_IDENTITY.LSIDE_NAME,     
			    EKA.LST_NEGARA.LSNE_NOTE,     
			    EKA.MST_CLIENT_NEW.MCL_GELAR,     
			    EKA.MST_CLIENT_NEW.MPN_JOB_DESC,     
			    EKA.MST_CLIENT_NEW.MSPE_MOTHER,     
			    EKA.MST_ADDRESS_NEW.ALAMAT_RUMAH,     
			    EKA.MST_ADDRESS_NEW.KD_POS_RUMAH,     
			    EKA.MST_ADDRESS_NEW.KOTA_RUMAH,     
			    EKA.MST_ADDRESS_NEW.AREA_CODE_RUMAH,     
			    EKA.MST_ADDRESS_NEW.TELPON_RUMAH,     
			    EKA.MST_ADDRESS_NEW.ALAMAT_KANTOR,     
			    EKA.MST_ADDRESS_NEW.KD_POS_KANTOR,     
			    EKA.MST_ADDRESS_NEW.KOTA_KANTOR,     
			    EKA.MST_ADDRESS_NEW.NO_HP2,      
			    EKA.MST_ADDRESS_NEW.NO_HP,     
			    EKA.MST_ADDRESS_NEW.EMAIL,     
			    EKA.MST_ADDRESS_NEW.AREA_CODE_KANTOR,     
			    EKA.MST_ADDRESS_NEW.TELPON_KANTOR,     
			    EKA.MST_POLICY.REG_SPAJ,     
			    EKA.MST_POLICY.MSPO_UMUR_BEASISWA,     
			    EKA.MST_POLICY.LSSP_ID,
			    EKA.MST_INSURED.MSTE_INSURED_NO,
			    EKA.MST_INSURED.MSTE_STANDARD,
			    EKA.MST_INSURED.LSPD_ID,
			    EKA.MST_INSURED.MSTE_AGE,
			    EKA.MST_INSURED.LSSA_ID,
			    EKA.MST_INSURED.MSTE_TGL_TERIMA_SPAJ,
			    EKA.MST_INSURED.MSTE_TGL_TERIMA_ADMIN,
			    EKA.MST_INSURED.MSTE_TGL_KIRIM_POLIS,
			    EKA.MST_INSURED.MSTE_TGL_ADMIN,
			    EKA.MST_INSURED.MSTE_TGL_SPAJ_DOC,
			    EKA.MST_INSURED.MSTE_FLAG_GUTHRIE,
   			    EKA.MST_INSURED.MSTE_FLAG_KOMISI,
   			    EKA.MST_INSURED.MSTE_FLAG_INVESTASI ,
			    EKA.LST_AGAMA.LSAG_NAME,     
			    EKA.LST_EDUCATION.LSED_NAME,   
				EKA.LST_JABATAN.LJB_NOTE,    
			    EKA.LST_RELATION.LSRE_RELATION,
			    EKA.MST_AGENT.MSAG_ID,   
				EKA.MST_AGENT.LCA_ID,   
				EKA.MST_AGENT.LWK_ID,   
				EKA.MST_AGENT.LSRG_ID,
				EKA.MST_INSURED.MSTE_TGL_TERIMA_ADMEDIKA
		   FROM EKA.MST_ADDRESS_NEW,     
			    EKA.MST_CLIENT_NEW,     
			    EKA.MST_INSURED,     
			    EKA.MST_POLICY,     
			    EKA.LST_NEGARA,     
			    EKA.LST_GRP_JOB,      
			    EKA.LST_IDENTITY,   
				 EKA.LST_JABATAN,  
			    EKA.LST_AGAMA,     
			    EKA.LST_EDUCATION,     
			    EKA.LST_RELATION,
				 EKA.MST_AGENT,
				 EKA.MST_AGENT_PROD    
			    WHERE ( EKA.MST_CLIENT_NEW.MCL_ID = EKA.MST_ADDRESS_NEW.MCL_ID(+) ) and    
			    ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ ) and    
			    ( EKA.LST_NEGARA.LSNE_ID(+) = EKA.MST_CLIENT_NEW.LSNE_ID ) and    
			    ( EKA.LST_GRP_JOB.LGJ_ID(+) = EKA.MST_CLIENT_NEW.LGJ_ID ) and    
			    ( EKA.LST_IDENTITY.LSIDE_ID(+) = EKA.MST_CLIENT_NEW.LSIDE_ID ) and    
			    ( EKA.MST_INSURED.MSTE_INSURED = EKA.MST_CLIENT_NEW.MCL_ID(+) ) and    
			    ( EKA.MST_CLIENT_NEW.LSAG_ID = EKA.LST_AGAMA.LSAG_ID (+)) and    
			    ( EKA.MST_CLIENT_NEW.LSED_ID = EKA.LST_EDUCATION.LSED_ID (+)) and    
			    ( EKA.MST_POLICY.LSRE_ID = EKA.LST_RELATION.LSRE_ID (+)) and    
				 ( EKA.MST_CLIENT_NEW.LJB_ID = EKA.LST_JABATAN.LJB_ID (+)) and  
				 EKA.MST_AGENT.MSAG_ID= EKA.MST_AGENT_PROD.MSAG_ID AND
				 EKA.MST_POLICY.REG_SPAJ = EKA.MST_AGENT_PROD.REG_SPAJ AND
				 EKA.MST_AGENT_PROD.LSLE_ID = 4 AND
			    ( ( EKA.MST_POLICY.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ')) ) 
	</select>
	
	<select id="elions.uw.select.tt.simplebac" resultClass="java.util.HashMap"
		parameterClass="java.util.HashMap">
			SELECT EKA.MST_PAS_SMS.MSP_PAS_CREATE_DATE MSPO_INPUT_DATE, EKA.MST_CLIENT_NEW.MCL_FIRST,EKA.MST_CLIENT_NEW.MKL_KERJA,
                EKA.MST_CLIENT_NEW.MCL_ID,   
                EKA.MST_CLIENT_NEW.MSPE_NO_IDENTITY,
                EKA.MST_CLIENT_NEW.MSPE_NO_IDENTITY_EXPIRED,     
                EKA.MST_CLIENT_NEW.LSIDE_ID,      
                EKA.MST_CLIENT_NEW.MSPE_PLACE_BIRTH,     
                EKA.MST_CLIENT_NEW.MSPE_DATE_BIRTH,      
                EKA.MST_CLIENT_NEW.MSPE_SEX, 
                decode(eka.mst_client_new.mspe_sex,1,'PRIA','WANITA') mspe_sex2,
                EKA.MST_CLIENT_NEW.MSPE_STS_MRT,     
                EKA.LST_GRP_JOB.LGJ_NOTE,     
                EKA.MST_CLIENT_NEW.MSPE_LAMA_KERJA,     
                EKA.LST_IDENTITY.LSIDE_NAME,     
                EKA.LST_NEGARA.LSNE_NOTE,     
                EKA.MST_CLIENT_NEW.MCL_GELAR,     
                EKA.MST_CLIENT_NEW.MPN_JOB_DESC,     
                EKA.MST_CLIENT_NEW.MSPE_MOTHER,     
                EKA.MST_ADDRESS_NEW.ALAMAT_RUMAH,     
                EKA.MST_ADDRESS_NEW.KD_POS_RUMAH,     
                EKA.MST_ADDRESS_NEW.KOTA_RUMAH,     
                EKA.MST_ADDRESS_NEW.AREA_CODE_RUMAH,     
                EKA.MST_ADDRESS_NEW.TELPON_RUMAH,     
                EKA.MST_ADDRESS_NEW.ALAMAT_KANTOR,     
                EKA.MST_ADDRESS_NEW.KD_POS_KANTOR,     
                EKA.MST_ADDRESS_NEW.KOTA_KANTOR,     
                EKA.MST_ADDRESS_NEW.NO_HP2,      
                EKA.MST_ADDRESS_NEW.NO_HP,     
                EKA.MST_ADDRESS_NEW.EMAIL,     
                EKA.MST_ADDRESS_NEW.AREA_CODE_KANTOR,     
                EKA.MST_ADDRESS_NEW.TELPON_KANTOR,     
                EKA.MST_PAS_SMS.REG_SPAJ,    
                EKA.MST_PAS_SMS.LSSP_ID,
                EKA.LST_AGAMA.LSAG_NAME,     
                EKA.LST_EDUCATION.LSED_NAME,   
                EKA.LST_JABATAN.LJB_NOTE,    
                EKA.LST_RELATION.LSRE_RELATION,
                EKA.MST_AGENT.MSAG_ID,   
                EKA.MST_AGENT.LCA_ID,   
                EKA.MST_AGENT.LWK_ID,   
                EKA.MST_AGENT.LSRG_ID
           FROM EKA.MST_ADDRESS_NEW,     
                EKA.MST_CLIENT_NEW,         
                EKA.MST_PAS_SMS,     
                EKA.LST_NEGARA,     
                EKA.LST_GRP_JOB,      
                EKA.LST_IDENTITY,   
                 EKA.LST_JABATAN,  
                EKA.LST_AGAMA,     
                EKA.LST_EDUCATION,     
                EKA.LST_RELATION,
                 EKA.MST_AGENT  
                WHERE ( EKA.MST_CLIENT_NEW.MCL_ID = EKA.MST_ADDRESS_NEW.MCL_ID(+) ) and    
                ( EKA.LST_NEGARA.LSNE_ID(+) = EKA.MST_CLIENT_NEW.LSNE_ID ) and    
                ( EKA.LST_GRP_JOB.LGJ_ID(+) = EKA.MST_CLIENT_NEW.LGJ_ID ) and    
                ( EKA.LST_IDENTITY.LSIDE_ID(+) = EKA.MST_CLIENT_NEW.LSIDE_ID ) and    
                ( EKA.MST_PAS_SMS.MCL_ID_TT = EKA.MST_CLIENT_NEW.MCL_ID(+) ) and    
                ( EKA.MST_CLIENT_NEW.LSAG_ID = EKA.LST_AGAMA.LSAG_ID (+)) and    
                ( EKA.MST_CLIENT_NEW.LSED_ID = EKA.LST_EDUCATION.LSED_ID (+)) and    
                ( EKA.MST_PAS_SMS.LSRE_ID = EKA.LST_RELATION.LSRE_ID (+)) and    
                 ( EKA.MST_CLIENT_NEW.LJB_ID = EKA.LST_JABATAN.LJB_ID (+)) and  
                 EKA.MST_AGENT.MSAG_ID= EKA.MST_PAS_SMS.MSAG_ID AND
                ( ( EKA.MST_PAS_SMS.MSP_FIRE_ID = #reg_id#))
	</select>
	
	<!-- Data Usulan Asuransi -->
		<select id="elions.uw.selectDataUsulan" resultMap="elions.uw.selectDataUsulan.result"
			parameterClass="java.util.HashMap">
			SELECT /*+ FIRST_ROWS */ a.mste_insured_no, a.mspr_unit, a.mspr_class, a.mspr_tsi,a.lsdbs_number,c.mspo_age,d.mste_age,
			       a.mspr_premium, a.mspr_ins_period, a.mspr_end_pay, a.mspr_tt,
			       a.lsbs_id, eka.f_lsdbs(a.reg_spaj, a.lsbs_id, a.lsdbs_number) lsdbs_name, c.mspo_ins_period,c.mspo_pay_period, d.mste_medical, decode(d.mste_medical,0,'Tidak','Ya') medis, 
			       d.mste_end_date, d.mste_beg_date, d.mste_flag_cc,e.lscb_id, e.lscb_pay_mode,c.lku_id, f.lku_symbol, c.mspo_flag_new,c.mspo_policy_no_format mspo_policy_no_format
			  FROM eka.mst_product_insured a,
			       eka.lst_det_bisnis b,
			       eka.mst_policy c,
			       eka.mst_insured d,
			       eka.lst_pay_mode e,
			       eka.lst_kurs f
			 WHERE (b.lsbs_id = a.lsbs_id)
			   AND (b.lsdbs_number = a.lsdbs_number)
			   AND (a.reg_spaj = c.reg_spaj)
			   AND (d.reg_spaj = c.reg_spaj)
			   AND (c.lscb_id = e.lscb_id)
			   AND ((a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')) 
			   AND c.lku_id = f.lku_id 
			   AND (a.lsbs_id <![CDATA[ < ]]> 300))	
	</select>

	<select id="elions.uw.selectFlagSpecial" resultClass="int" parameterClass="string">
		SELECT FLAG_SPECIAL
		  FROM EKA.MST_SLINK
		  WHERE REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ')
		    AND MSL_NO = 1
	</select>

	<!-- Data Usulan Asuransi  -->
	<select id="elions.uw.select.Data_Usulan" resultMap="elions.uw.select.Data_Usulan.result"
		parameterClass="java.util.HashMap">
				SELECT   eka.f_lsdbs(EKA.MST_PRODUCT_INSURED.reg_spaj, EKA.MST_PRODUCT_INSURED.lsbs_id, EKA.MST_PRODUCT_INSURED.lsdbs_number) LSDBS_NAME,   
						 EKA.LST_STATUS_ACCEPT.STATUS_ACCEPT,
						 EKA.LST_DOCUMENT_POSITION.LSPD_POSITION,
						 EKA.LST_DET_BISNIS.LSDBS_NUMBER,   
					     EKA.LST_DET_BISNIS.LSBS_ID,   
					     EKA.LST_DET_BISNIS.LSDBS_LAMA_BAYAR,   
					     EKA.MST_ADDRESS_BILLING.MSAP_ADDRESS,   
					     EKA.MST_ADDRESS_BILLING.MSAP_ZIP_CODE,   
					     EKA.MST_ADDRESS_BILLING.MSAP_AREA_CODE1,   
					     EKA.MST_ADDRESS_BILLING.MSAP_PHONE1,   
					     EKA.MST_ADDRESS_BILLING.MSAP_AREA_CODE2,   
					     EKA.MST_ADDRESS_BILLING.MSAP_PHONE2,   
					     EKA.MST_ADDRESS_BILLING.MSAP_AREA_CODE3,   
					     EKA.MST_ADDRESS_BILLING.MSAP_PHONE3,   
					     EKA.MST_ADDRESS_BILLING.MSAP_AREA_CODE_FAX1,   
					     EKA.MST_ADDRESS_BILLING.MSAP_FAX1,   
					     EKA.MST_ADDRESS_BILLING.MSAP_AREA_CODE_FAX2,   
					     EKA.MST_ADDRESS_BILLING.MSAP_FAX2,   
					     EKA.MST_ADDRESS_BILLING.NO_HP,   
					     EKA.MST_ADDRESS_BILLING.KOTA,   
					     EKA.MST_ADDRESS_BILLING.LSNE_ID,  
					     EKA.MST_ADDRESS_BILLING.NO_HP2,   
					     EKA.MST_INSURED.MSTE_FLAG_CC,   
					     EKA.MST_INSURED.MSTE_TGL_RECUR,   
					     EKA.MST_PRODUCT_INSURED.MSPR_TSI,   
					     EKA.MST_PRODUCT_INSURED.MSPR_PREMIUM,  
						 EKA.MST_PRODUCT_INSURED.MSPR_CLASS,   
 					     EKA.MST_INSURED.MSTE_MEDICAL,   
					     EKA.MST_PRODUCT_INSURED.MSPR_BEG_DATE,   
					     EKA.MST_PRODUCT_INSURED.MSPR_END_DATE,  
					     EKA.MST_POLICY.LKU_ID,  
					     EKA.MST_POLICY.LSCB_ID,  
					     EKA.MST_POLICY.MSPO_PAY_PERIOD,
					     EKA.MST_POLICY.MSPO_INS_PERIOD,
					     EKA.LST_PAY_MODE.LSCB_PAY_MODE
					 FROM EKA.LST_BISNIS,   
					     EKA.MST_PRODUCT_INSURED,   
					     EKA.LST_DET_BISNIS,   
					     EKA.MST_ADDRESS_BILLING,   
					     EKA.MST_INSURED,   
					     EKA.MST_POLICY ,
					     EKA.LST_DOCUMENT_POSITION,
					     EKA.LST_STATUS_ACCEPT,
					     EKA.LST_PAY_MODE
			     WHERE ( EKA.LST_BISNIS.LSBS_ID = EKA.MST_PRODUCT_INSURED.LSBS_ID ) and  
					     ( EKA.LST_DOCUMENT_POSITION .LSPD_ID = EKA.MST_INSURED.LSPD_ID) AND
					  	 (EKA.LST_STATUS_ACCEPT.LSSA_ID= nvl(EKA.MST_INSURED.LSSA_ID,1)) AND
					  	 ( EKA.LST_DET_BISNIS.LSBS_ID = EKA.MST_PRODUCT_INSURED.LSBS_ID ) and  
					     ( EKA.LST_DET_BISNIS.LSDBS_NUMBER = EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER ) and 
					     ( EKA.LST_DET_BISNIS.LSBS_ID = EKA.LST_BISNIS.LSBS_ID ) and 
					     ( EKA.MST_PRODUCT_INSURED.REG_SPAJ = EKA.MST_ADDRESS_BILLING.REG_SPAJ ) and 
					     ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_PRODUCT_INSURED.REG_SPAJ ) and  
					     ( EKA.MST_INSURED.MSTE_INSURED_NO = EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO ) and 
					     ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ ) and 
					     ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_ADDRESS_BILLING.REG_SPAJ ) and 
					     ( EKA.MST_POLICY.LSCB_ID = EKA.LST_PAY_MODE.LSCB_ID)and
					     ( EKA.MST_PRODUCT_INSURED.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ')) and
					     ( EKA.LST_BISNIS.LSBS_ID  <![CDATA[ <  ]]> 300 AND EKA.LST_BISNIS.LSTB_ID=1)
	</select>
	<select id="elions.uw.select.Data_Usulan3" resultMap="elions.uw.select.Data_Usulan.result"
		parameterClass="java.util.HashMap">
				SELECT   eka.f_lsdbs(EKA.MST_PRODUCT_INSURED.reg_spaj, EKA.MST_PRODUCT_INSURED.lsbs_id, EKA.MST_PRODUCT_INSURED.lsdbs_number) LSDBS_NAME,   
						 EKA.LST_STATUS_ACCEPT.STATUS_ACCEPT,
						 EKA.LST_DOCUMENT_POSITION.LSPD_POSITION,
						 EKA.LST_DET_BISNIS.LSDBS_NUMBER,   
					     EKA.LST_DET_BISNIS.LSBS_ID,   
					     EKA.LST_DET_BISNIS.LSDBS_LAMA_BAYAR,   
					     EKA.MST_ADDRESS_BILLING.MSAP_ADDRESS,   
					     EKA.MST_ADDRESS_BILLING.MSAP_ZIP_CODE,   
					     EKA.MST_ADDRESS_BILLING.MSAP_AREA_CODE1,   
					     EKA.MST_ADDRESS_BILLING.MSAP_PHONE1,   
					     EKA.MST_ADDRESS_BILLING.MSAP_AREA_CODE2,   
					     EKA.MST_ADDRESS_BILLING.MSAP_PHONE2,   
					     EKA.MST_ADDRESS_BILLING.MSAP_AREA_CODE3,   
					     EKA.MST_ADDRESS_BILLING.MSAP_PHONE3,   
					     EKA.MST_ADDRESS_BILLING.MSAP_AREA_CODE_FAX1,   
					     EKA.MST_ADDRESS_BILLING.MSAP_FAX1,   
					     EKA.MST_ADDRESS_BILLING.MSAP_AREA_CODE_FAX2,   
					     EKA.MST_ADDRESS_BILLING.MSAP_FAX2,   
					     EKA.MST_ADDRESS_BILLING.NO_HP,   
					     EKA.MST_ADDRESS_BILLING.KOTA,   
					     EKA.MST_ADDRESS_BILLING.LSNE_ID, 
					     EKA.MST_ADDRESS_BILLING.NO_HP2,   
					     EKA.MST_INSURED.MSTE_FLAG_CC,   
					     EKA.MST_INSURED.MSTE_TGL_RECUR,   
					     EKA.MST_PRODUCT_INSURED.MSPR_TSI,   
					     EKA.MST_PRODUCT_INSURED.MSPR_PREMIUM,  
						 EKA.MST_PRODUCT_INSURED.MSPR_CLASS,   
 					     EKA.MST_INSURED.MSTE_MEDICAL,   
					     EKA.MST_PRODUCT_INSURED.MSPR_BEG_DATE,   
					     EKA.MST_PRODUCT_INSURED.MSPR_END_DATE,  
					     EKA.MST_POLICY.LKU_ID,  
					     EKA.MST_POLICY.LSCB_ID,  
					     EKA.MST_POLICY.MSPO_PAY_PERIOD,
					     EKA.MST_POLICY.MSPO_INS_PERIOD,
					     EKA.LST_PAY_MODE.LSCB_PAY_MODE
					 FROM EKA.LST_BISNIS,   
					     EKA.MST_PRODUCT_INSURED,   
					     EKA.LST_DET_BISNIS,   
					     EKA.MST_ADDRESS_BILLING,   
					     EKA.MST_INSURED,   
					     EKA.MST_POLICY ,
					     EKA.LST_DOCUMENT_POSITION,
					     EKA.LST_STATUS_ACCEPT,
					     EKA.LST_PAY_MODE
			     WHERE ( EKA.LST_BISNIS.LSBS_ID = EKA.MST_PRODUCT_INSURED.LSBS_ID ) and  
					     ( EKA.LST_DOCUMENT_POSITION .LSPD_ID = EKA.MST_INSURED.LSPD_ID) AND
					  	 (EKA.LST_STATUS_ACCEPT.LSSA_ID= nvl(EKA.MST_INSURED.LSSA_ID,1)) AND
					  	 ( EKA.LST_DET_BISNIS.LSBS_ID = EKA.MST_PRODUCT_INSURED.LSBS_ID ) and  
					     ( EKA.LST_DET_BISNIS.LSDBS_NUMBER = EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER ) and 
					     ( EKA.LST_DET_BISNIS.LSBS_ID = EKA.LST_BISNIS.LSBS_ID ) and 
					     ( EKA.MST_PRODUCT_INSURED.REG_SPAJ = EKA.MST_ADDRESS_BILLING.REG_SPAJ ) and 
					     ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_PRODUCT_INSURED.REG_SPAJ ) and  
					     ( EKA.MST_INSURED.MSTE_INSURED_NO = EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO ) and 
					     ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ ) and 
					     ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_ADDRESS_BILLING.REG_SPAJ ) and 
					     ( EKA.MST_POLICY.LSCB_ID = EKA.LST_PAY_MODE.LSCB_ID)and
					     ( EKA.LST_DET_BISNIS.LSBS_ID <![CDATA[ < ]]> 300) and
					     ( EKA.MST_PRODUCT_INSURED.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' '))  
	</select>
	<resultMap id="elions.uw.selectDataUsulanRider.result" class="java.util.HashMap">
		<result property="MSPR_TSI" column="MSPR_TSI" javaType="double" jdbcType="NUMBER" />                                                                                                                                                            
		<result property="MSPR_PREMIUM" column="MSPR_PREMIUM" javaType="double" jdbcType="NUMBER" />                                                                                                                                                    
		<result property="MSPR_INS_PERIOD" column="MSPR_INS_PERIOD" javaType="int" jdbcType="NUMBER" />                                                                                                                                                 
		<result property="MSPR_BEG_DATE" column="MSPR_BEG_DATE" javaType="date" jdbcType="DATE" />                                                                                                                                                      
		<result property="MSPR_END_DATE" column="MSPR_END_DATE" javaType="date" jdbcType="DATE" />                                                                                                                                                      
		<result property="MSPR_END_PAY" column="MSPR_END_PAY" javaType="date" jdbcType="DATE" />                                                                                                                                                        
		<result property="MSPR_CLASS" column="MSPR_CLASS" javaType="int" jdbcType="NUMBER" />                                                                                                                                                           
		<result property="MSPR_UNIT" column="MSPR_UNIT" javaType="int" jdbcType="NUMBER" />                                                                                                                                                             
		<result property="LSDBS_NAME" column="LSDBS_NAME" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                          
		<result property="LSBS_ID" column="LSBS_ID" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
		<result property="LSDBS_NUMBER" column="LSDBS_NUMBER" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
		<result property="MSPR_TT" column="MSPR_TT" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
	</resultMap>	
	<!-- Data Usulan Asuransi rider -->
	<select id="elions.uw.selectDataUsulanRider" resultMap="elions.uw.selectDataUsulanRider.result"
		parameterClass="string">
		SELECT   EKA.MST_PRODUCT_INSURED.MSPR_TSI,   
		 		 EKA.MST_PRODUCT_INSURED.MSPR_PREMIUM,
			     EKA.MST_PRODUCT_INSURED.MSPR_INS_PERIOD,   
			     EKA.MST_PRODUCT_INSURED.MSPR_BEG_DATE,   
			     EKA.MST_PRODUCT_INSURED.MSPR_END_DATE,   
			     EKA.MST_PRODUCT_INSURED.MSPR_END_PAY,   
			     EKA.MST_PRODUCT_INSURED.MSPR_CLASS,   
			     EKA.MST_PRODUCT_INSURED.MSPR_UNIT,   
			     eka.f_lsdbs(EKA.MST_PRODUCT_INSURED.reg_spaj, EKA.MST_PRODUCT_INSURED.lsbs_id, EKA.MST_PRODUCT_INSURED.lsdbs_number) LSDBS_NAME,   
			     EKA.MST_PRODUCT_INSURED.LSBS_ID,   
			     EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER,   
				 EKA.MST_PRODUCT_INSURED.MSPR_TT 
	    FROM EKA.MST_PRODUCT_INSURED,   
			     EKA.LST_DET_BISNIS   
	    WHERE ( EKA.LST_DET_BISNIS.LSBS_ID = EKA.MST_PRODUCT_INSURED.LSBS_ID ) and    
			     ( EKA.LST_DET_BISNIS.LSDBS_NUMBER = EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER ) and    
			     ( ( EKA.MST_PRODUCT_INSURED.LSBS_ID <![CDATA[ >=  ]]> 800 )AND
				 (EKA.MST_PRODUCT_INSURED.REG_SPAJ =rpad(replace(#spaj#,'.'),11,' ')))  
	</select>
	
	<!-- Premium (Viewer) -->
	<select id="elions.uw.select.viewerInsured" resultMap="elions.uw.select.viewerInsured.result" parameterClass="java.util.HashMap">
		SELECT   
		eka.f_lsdbs(a.reg_spaj, a.lsbs_id, a.lsdbs_number)  lsdbs_name, a.mspr_tsi, a.mspr_extra, a.mspr_rate, 
		a.mspr_premium total5,  
		999.99 AS disc, nvl(a.mspr_discount,0) mspr_discount, 
		(nvl(a.mspr_premium,0) - nvl(a.mspr_discount,0)) total7, 
		a.mspr_persen, a.mspr_ins_period, 
		a.mspr_beg_date,
		add_months( a.mspr_beg_date , 12 * a.mspr_ins_period ) enddate ,
		a.mspr_end_date
		    FROM eka.mst_product_insured a, eka.lst_det_bisnis b, eka.lst_kurs c
		   WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		     AND a.mste_insured_no = #ins#
		     AND a.mspr_active = 1
			 AND a.lsbs_id = b.lsbs_id(+)
			 AND a.lsdbs_number = b.lsdbs_number(+)			 
			 AND a.lku_id = c.lku_id(+)
		ORDER BY a.lsbs_id ASC
	</select>
	
	<!-- Ryan -->
	<select id="elions.uw.select.viewerEndorse" resultClass="java.util.HashMap" parameterClass="string">
	SELECT  a.msen_endors_no endorsNo, A.REG_SPAJ SPAJ,a.msen_alasan alasan ,A.MSEN_INPUT_DATE input,A.MSEN_ACTIVE_DATE active,D.LSPD_POSITION posisi, b.LSJE_JENIS perubahan,
	        E.LUS_FULL_NAME User_proses
          FROM eka.mst_endors a,
               eka.lst_jn_endors b,
               eka.mst_det_endors c,
               eka.LST_DOCUMENT_POSITION d,
               eka.lst_user e
        WHERE A.MSEN_ENDORS_NO =C.MSEN_ENDORS_NO
           AND b.LSJE_ID = c.LSJE_ID
           AND A.LUS_ID = E.LUS_ID
           AND a.lspd_id = d.lspd_id
           AND a.msen_endors_no = RPAD (replace(#value#,'.'), 12, ' ')
	</select>
	
	<select id="elions.uw.select.history_pengajuan" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
    SELECT a.reg_spaj, a.mspo_policy_holder,a.mspo_policy_no,b.mste_insured,c.mcl_first pemegang, d.mcl_first tertanggung,e.lsbs_id,
    e.lsdbs_number,eka.f_lsdbs(e.reg_spaj, e.lsbs_id, e.lsdbs_number) lsdbs_name,E.MSPR_TSI,E.MSPR_PREMIUM,E.MSPR_BEG_DATE,E.MSPR_END_DATE
    FROM
        eka.mst_policy a, 
        eka.mst_insured b,
        eka.mst_client_new c,
        eka.mst_client_new d,
        eka.mst_product_insured e,
        eka.lst_det_bisnis g
    WHERE a.reg_spaj = b.reg_spaj
        AND   a.reg_spaj = e.reg_spaj 
        AND   a.mspo_policy_holder = c.mcl_id
        AND   b.mste_insured = d.mcl_id
        AND   E.LSDBS_NUMBER = G.LSDBS_NUMBER
        AND   E.LSBS_ID = G.LSBS_ID
        AND   C.MCL_FIRST =#mcl_first#
        AND   C.MSPE_DATE_BIRTH =#birth#
        AND   e.lsbs_id <![CDATA[ < ]]> 300  
    </select>
	
	<select id="elions.uw.select.blacklist" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select b.lbl_id, b.lbl_nama, b.lbl_tgl_lahir, b.lbl_sumber_informasi, b.lbl_asuransi,
			b.lbl_alamat, b.lbl_alasan, c.lus_full_name
        from eka.lst_black_list b, eka.lst_user c
        where b.lus_id = c.lus_id
        	and rownum = 1
	        <isEqual property="type" compareValue="mcl_first">
	        	and (upper(trim(b.lbl_nama)) = upper(trim(#mcl#)))
	        	and b.lbl_tgl_lahir = #tgl_lahir#
	        </isEqual>  
	        <isEqual property="type" compareValue="mcl_id">
	        	and ((trim(b.mcl_id)) = (trim(#mcl#)))
	        </isEqual>
	</select>
	
	<select id="elions.uw.select.viewerBilling" resultClass="java.util.HashMap" parameterClass="string">
        SELECT (CASE
                   WHEN (msbi_flag_topup >= 1)
                      THEN 'Premi Top-up'
                   WHEN (msbi_gross = 1)
                      THEN 'Premi Minimum'
                   ELSE 'Premi'
                END
               ) tipe,
               a.msbi_tahun_ke tahunke, a.msbi_premi_ke premike,
               a.msbi_beg_date begdate, a.msbi_end_date enddate,
               a.msbi_due_date duedate, b.lku_symbol kurs,
               DECODE (msbi_paid, 1, msbi_remain, (msbi_remain + msbi_stamp)) TOTAL8,
               a.msbi_paid paid, DECODE (msbi_paid, 0, 'Y', 'N') materai,
               a.msbi_print PRINT, a.msbi_bill_no kpl, a.lspd_id,
               a.msbi_persen_paid persen,
               d.mspa_input_date, d.mspa_date_book,d.mspa_payment
          FROM eka.mst_billing a, eka.lst_kurs b, eka.mst_tag_payment c, eka.mst_payment d
         WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND a.msbi_active = 1 AND a.lku_id = b.lku_id
         AND a.reg_spaj = c.reg_spaj(+) AND a.msbi_tahun_ke = c.msbi_tahun_ke(+) AND a.msbi_premi_ke = c.msbi_premi_ke(+)
         AND c.mspa_payment_id = d.mspa_payment_id(+)
	</select>
	
	<select id="elions.uw.select.viewerDocPosition" resultClass="java.util.HashMap" parameterClass="string">
		select distinct p.lspd_id, s.lspd_position, t.lssp_status, p.mspo_next_bill, p.mspo_proses_bill   
		from eka.mst_policy p, 
		(  SELECT a.reg_spaj, a.LSPD_ID
		    FROM EKA.MST_BILLING a
		   WHERE a.REG_SPAJ = rpad(replace(#value#,'.'),11,' ') AND  
		         a.MSBI_BEG_DATE = (  SELECT MAX( MSBI_BEG_DATE )  
		                                                    FROM EKA.MST_BILLING  
		                                                   WHERE REG_SPAJ = a.reg_spaj AND  
		                                                         a.MSBI_ACTIVE = 1 )) q,
		(select * from eka.mst_product_insured where lsbs_id <![CDATA[<]]> 300) r,
		eka.lst_document_position s,
		eka.lst_policy_status t														 
		where p.reg_spaj = rpad(replace(#value#,'.'),11,' ') and  
		p.reg_spaj = q.reg_spaj(+)
		and p.reg_spaj = r.reg_spaj(+)
		and (case when (r.lsbs_id in (77,84,100) and p.lssp_id = 14) then 57 else nvl(q.lspd_id,p.lspd_id) end) = s.lspd_id
		and p.lssp_id = t.lssp_id
		and rownum=1
	</select>
	
	<!-- Cek nama kurs berdasarkan lku id -->
	<select id="elions.uw.select.nama_kurs" resultClass="java.lang.String"
		parameterClass="java.lang.String">
		  SELECT EKA.LST_KURS.LKU_SYMBOL   
		    FROM EKA.LST_KURS   
		  where lku_id=#lku_id#
	</select>
	
	<select id="elions.uw.selectMstBillingKUD" resultClass="java.util.HashMap" parameterClass="string">
		select a.reg_spaj, a.msbi_tahun_ke, a.msbi_premi_ke, b.msdb_premium
			from eka.mst_billing a,
				 eka.mst_det_billing b
			where a.reg_spaj = b.reg_spaj
			and a.msbi_paid = 1
			and a.msbi_flag_topup is null
			and a.msbi_tahun_ke = b.msbi_tahun_ke
			and a.msbi_premi_ke = b.msbi_premi_ke
			and a.msbi_tahun_ke = 1
			and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
			order by a.msbi_tahun_ke, a.msbi_premi_ke
	</select>
	
	<!-- Billing Information untuk payment successive -->
	<select id="elions.uw.selectBillingInformationSucc" resultClass="com.ekalife.elions.model.Billing" parameterClass="java.util.HashMap">
		select 0 pilih,
			   billing.msbi_bill_no, billing.lca_id, billing.reg_spaj, billing.msbi_beg_date, billing.mspo_policy_no, billing.msbi_stamp, billing.lku_symbol, 
			   round(billing.biaya,2) biaya,
			   billing.lku_id, 
			   nvl(round(decode(billing.lku_id,'01',bayar_rupiah,'02',bayar_dollar),2),0) bayar, 
			   (round(billing.biaya,2) - nvl(round(decode(billing.lku_id,'01',bayar_rupiah,'02',bayar_dollar),2),0)) sisa, billing.msbi_paid, billing.msbi_tahun_ke, billing.msbi_premi_ke
		from 
		(
			select a.lspd_id, a.msbi_bill_no, a.msbi_stamp, d.mspo_policy_no, a.msbi_beg_date, a.lca_id, a.reg_spaj, a.lku_id, c.lku_symbol, 
			SUM(b.msdb_premium - nvl(b.msdb_discount,0) + (CASE WHEN b.lsbs_id <![CDATA[<]]> 800 THEN a.msbi_policy_cost + a.msbi_stamp ELSE 0 END)) biaya,
			a.msbi_tahun_ke, a.msbi_premi_ke, a.msbi_paid
			from eka.mst_billing a, eka.mst_det_billing b, eka.lst_kurs c, eka.mst_policy d
			where a.reg_spaj = b.reg_spaj
			and a.lku_id = c.lku_id
			and a.reg_spaj = d.reg_spaj
			and a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
			AND a.msbi_tahun_ke = b.msbi_tahun_ke
			AND a.msbi_premi_ke = b.msbi_premi_ke
			group by a.lspd_id, a.reg_spaj, a.msbi_bill_no, c.lku_symbol, a.lku_id, a.lca_id, a.msbi_beg_date, d.mspo_policy_no, a.msbi_stamp, a.msbi_tahun_ke, a.msbi_premi_ke, a.msbi_paid
		) billing, 
		(
			SELECT a.reg_spaj, 
			sum(decode(a.lku_id,'01',mspa_payment,'02',mspa_payment*lkh_kurs_jual)) bayar_rupiah,
			sum(decode(a.lku_id,'01',mspa_payment/lkh_kurs_jual,'02',mspa_payment)) bayar_dollar,
			b.msbi_tahun_ke, b.msbi_premi_ke
			FROM eka.mst_payment a, eka.mst_tag_payment b, 
			(select * from eka.lst_daily_currency where lku_id='02') c
			WHERE b.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
			AND b.mspa_payment_id = a.mspa_payment_id
			AND to_char(a.mspa_date_book,'yyyymmdd') = to_char(c.lkh_date(+),'yyyymmdd')
			GROUP BY a.reg_spaj, b.msbi_tahun_ke, b.msbi_premi_ke
		) payment
		where billing.reg_spaj = payment.reg_spaj(+)
		and billing.msbi_tahun_ke = payment.msbi_tahun_ke(+)
		and billing.msbi_premi_ke = payment.msbi_premi_ke(+)
		and billing.lspd_id = #lspd_id#
	</select>
		
	<!-- Billing Information (layar top-up) -->
	<select id="elions.uw.selectBillingInformation" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		 select b.msbi_bill_no, a.lca_id, a.reg_spaj, a.mspo_policy_no, b.msbi_beg_date, b.msbi_end_date, a.lku_id, d.lku_symbol, decode(b.jp,1,'P.TOPUP TUNGGAL',2,'P.TOPUP BERKALA','P.POKOK') jp, 
		       b.msbi_stamp, round(b.tagih,2) biaya, round(nvl(c.bayar,0),2) bayar, b.msbi_paid,b.msbi_premi_ke,b.msbi_tahun_ke,
		       (round(b.tagih,2) - round(nvl(c.bayar,0),2)) sisa,
		       (case when(round(b.tagih,2) - round(nvl(c.bayar,0),2)) <![CDATA[<=]]> 0 then 'LUNAS' else 'BELUM LUNAS' end ) keterangan
		from eka.mst_policy a, 
		    (select a.reg_spaj, a.msbi_beg_date, a.msbi_end_date, a.msbi_tahun_ke, a.msbi_premi_ke, a.msbi_bill_no, a.msbi_paid, a.lca_id, nvl(a.msbi_stamp,0) msbi_stamp, nvl(a.msbi_flag_topup, 0) jp,sum(b.msdb_premium) tagih
		        from eka.mst_billing a,
		             eka.mst_det_billing b
		        where a.reg_spaj = b.reg_spaj
		        and a.msbi_tahun_ke = b.msbi_tahun_ke
		        and a.msbi_premi_ke = b.msbi_premi_ke
		        and a.reg_spaj =rpad(replace(#spaj#,'.'),11,' ')
		        and a.msbi_nb = 1
		        group by a.reg_spaj, a.msbi_beg_date, a.msbi_end_date, a.msbi_tahun_ke, a.msbi_premi_ke, nvl(a.msbi_flag_topup, 0), nvl(a.msbi_stamp,0), a.msbi_bill_no, a.lca_Id, a.msbi_paid
		        order by msbi_tahun_ke, msbi_premi_ke) b,
		     (select a.reg_spaj, a.msbi_tahun_ke, a.msbi_premi_ke, sum(a.mstp_value) bayar
		        from eka.mst_tag_payment a, eka.mst_payment b
		        where a.reg_spaj =rpad(replace(#spaj#,'.'),11,' ')
		        and a.mspa_payment_id = b.mspa_payment_id
		        group by a.reg_spaj, a.msbi_tahun_ke, a.msbi_premi_ke
		        order by a.reg_spaj, a.msbi_tahun_ke, a.msbi_premi_ke) c,
		     eka.lst_kurs d
		where a.reg_spaj = b.reg_spaj
		and b.reg_spaj = c.reg_spaj(+)
		and b.msbi_tahun_ke = c.msbi_tahun_ke(+)
		and b.msbi_premi_ke = c.msbi_premi_ke(+)
		AND b.msbi_tahun_ke = #tahun#
		<isEqual property="premi" compareValue="1">
			AND b.msbi_premi_ke = #premi#
		</isEqual>
		<isNotEqual property="premi" compareValue="1">
			AND b.msbi_premi_ke <![CDATA[>=]]> #premi#
		</isNotEqual>
		and a.lku_id = d.lku_id
 	</select>
 	
 	<select id="elions.uw.selectBillingInformation2" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select
			   billing.msbi_bill_no, billing.lca_id, billing.reg_spaj, billing.msbi_beg_date, billing.msbi_end_date, billing.mspo_policy_no, billing.msbi_stamp, billing.lku_symbol, 
			   round(billing.biaya,2) biaya,
			   billing.lku_id, 
			   nvl(round(decode(billing.lku_id,'01',bayar_rupiah,'02',bayar_dollar),2),0) bayar, 
			   (round(billing.biaya,2) - nvl(round(decode(billing.lku_id,'01',bayar_rupiah,'02',bayar_dollar),2),0)) sisa, billing.msbi_paid, billing.msbi_tahun_ke, billing.msbi_premi_ke
		from 
		(
			 select a.msbi_bill_no, a.msbi_stamp, d.mspo_policy_no, a.msbi_beg_date, a.msbi_end_date, a.lca_id, a.reg_spaj, a.lku_id,(detbill-detbill2+(  a.msbi_policy_cost + a.msbi_stamp))biaya, c.lku_symbol,           
            a.msbi_tahun_ke, a.msbi_premi_ke, a.msbi_paid
            from eka.mst_billing a,             
            eka.lst_kurs c,
            eka.mst_policy d,
            (select sum(x.msdb_premium)detbill from eka.mst_det_billing x where x.reg_spaj=rpad(replace(#spaj#,'.'),11,' '))biaya1,
            (select sum(nvl(z.msdb_discount,0))detbill2 from eka.mst_det_billing z where z.reg_spaj=rpad(replace(#spaj#,'.'),11,' '))biaya2
            where a.reg_spaj = d.reg_spaj
            and a.lku_id = c.lku_id           
            and a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
            AND a.msbi_tahun_ke = 1           
            AND a.msbi_premi_ke = 1       
            group by a.reg_spaj, a.msbi_bill_no, c.lku_symbol, a.lku_id, a.lca_id, a.msbi_beg_date, d.mspo_policy_no, a.msbi_stamp, a.msbi_tahun_ke, a.msbi_premi_ke, a.msbi_paid,
            a.msbi_policy_cost,a.msbi_end_date,detbill,detbill2 
		) billing, 
		(
			SELECT a.reg_spaj, 
			sum(decode(a.lku_id,'01',mspa_payment,'02',mspa_payment*lkh_kurs_jual)) bayar_rupiah,
			sum(decode(a.lku_id,'01',mspa_payment/lkh_kurs_jual,'02',mspa_payment)) bayar_dollar,
			b.msbi_tahun_ke, b.msbi_premi_ke
			FROM eka.mst_payment a, eka.mst_tag_payment b, 
			(select * from eka.lst_daily_currency where lku_id='02') c
			WHERE b.reg_spaj =rpad(replace(#spaj#,'.'),11,' ')
			AND b.mspa_payment_id = a.mspa_payment_id
			AND b.msbi_tahun_ke = #tahun#
			<isEqual property="premi" compareValue="1">
				AND msbi_premi_ke = #premi#
			</isEqual>
			<isNotEqual property="premi" compareValue="1">
				AND msbi_premi_ke >= #premi#
			</isNotEqual>
			AND to_char(a.mspa_date_book,'yyyymmdd') = to_char(c.lkh_date(+),'yyyymmdd')
			GROUP BY a.reg_spaj, b.msbi_tahun_ke, b.msbi_premi_ke
		) payment
		where billing.reg_spaj = payment.reg_spaj(+)
		and billing.msbi_tahun_ke = payment.msbi_tahun_ke(+)
		and billing.msbi_premi_ke = payment.msbi_premi_ke(+)
 	</select>

	<!-- Jumlah Payment (layar top-up) -->
	<select id="elions.uw.selectPaymentCount" resultClass="com.ekalife.elions.model.Payment" parameterClass="java.util.HashMap">
		SELECT ROWNUM ke, 0 pilih, b.mspa_payment_id, a.lku_id, mstp_value,
		    DECODE (a.msdp_number, null, 'Payment', 'Titipan Premi') tipe, b.reg_spaj, c.lku_symbol, d.lsjb_type, 
		    a.mspa_pay_date, a.mspa_date_book, a.mspa_nilai_kurs, e.lre_acc_no, f.lsbp_nama, g.lbn_nama, h.lku_symbol lku_rek,
		    a.lsrek_id, a.mspa_no_pre, a.mspa_no_voucher, a.lsjb_id, a.mspa_old_policy, a.mspa_payment, a.mspa_nilai_kurs,
		    a.mspa_desc, a.client_bank, a.mspa_no_rek, a.mspa_due_date, a.mspa_flag_merchant
		FROM eka.mst_payment a, eka.mst_tag_payment b, eka.lst_kurs c, eka.lst_payment_type d, eka.lst_rek_ekalife e,
		    eka.lst_bank_pusat f, eka.lst_bank g, eka.lst_kurs h
		WHERE b.reg_spaj = RPAD (REPLACE (#spaj#, '.'), 11, ' ')
		    AND b.mspa_payment_id = a.mspa_payment_id
		    AND b.msbi_tahun_ke = #tahun#
		    <isEqual property="premi" compareValue="1">
				AND b.msbi_premi_ke = 1
			</isEqual>
			<isNotEqual property="premi" compareValue="1">
				AND b.msbi_premi_ke > 1
			</isNotEqual>
		    AND a.lku_id = c.lku_id
		    AND a.lsjb_id = d.lsjb_id
		    AND a.lsrek_id = e.lsrek_id
		    AND e.lbn_id = g.lbn_id
		    AND g.lsbp_id = f.lsbp_id
		    AND e.lku_id = h.lku_id
		ORDER BY a.mspa_pay_date, a.mspa_input_date
	</select>
	
	<select id="elions.uw.selectMuKe" resultClass="int">
		select mu_ke from eka.mst_ulink u where reg_spaj = rpad(replace(#value#,'.'),11,' ') and mu_ke > 1 and lt_id <![CDATA[<>]]> 10 and u.mu_tgl_trans = (select mu_tgl_trans from eka.mst_ulink where reg_spaj = u.reg_spaj and mu_ke = 1)
		union
		select msl_no mu_ke from eka.mst_slink where reg_spaj = rpad(replace(#value#,'.'),11,' ') and msl_new = 1 and msl_no = 2
	</select>
	
	<!-- Layar Topup - kalo kurs = lkuid gak usah dikali kurs lagi -->
	<select id="elions.uw.selectTopUp" resultClass="com.ekalife.elions.model.TopUp" parameterClass="java.util.HashMap">
		SELECT a.reg_spaj, a.mspa_payment_id, nvl(a.lsrek_id,0) lsrek_id, a.mspa_date_book,
		       a.mspa_no_pre, a.mspa_no_voucher, a.mspa_pay_date pay_date, b.no_kttp,
		       a.lus_id, c.lus_login_name, a.lsjb_id, a.mspa_old_policy, a.lku_id,
		       a.mspa_nilai_kurs, a.mspa_payment, a.mspa_desc, a.client_bank,
		       e.lku_id bill_lku_id, b.msbi_tahun_ke tahun_ke, b.msbi_premi_ke premi_ke,
		       a.mspa_no_rek, a.mspa_due_date, a.mspa_flag_merchant, 
		       nvl(substr(replace(replace(replace(d.lre_acc_no,'.',''),'-',''),' ',''),
		       		length(replace(replace(replace(d.lre_acc_no,'.',''),'-',''),' ',''))-4),'0000') kode
		FROM eka.mst_payment a, eka.mst_tag_payment b, eka.lst_user c, eka.lst_rek_ekalife d, eka.mst_billing e
		WHERE a.mspa_payment_id = b.mspa_payment_id
			<isNotEmpty property="payment">AND a.mspa_payment_id = #payment#</isNotEmpty>
			AND a.lus_id = c.lus_id
			AND b.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
			AND b.msbi_tahun_ke = #tahun#
		    <isEqual property="premi" compareValue="1">
				AND b.msbi_premi_ke = 1
			</isEqual>
			<isNotEqual property="premi" compareValue="1">
				AND b.msbi_premi_ke > 1
			</isNotEqual>
			AND a.lsrek_id = d.lsrek_id(+)
			AND b.reg_spaj = e.reg_spaj
			AND b.msbi_tahun_ke = e.msbi_tahun_ke
			AND b.msbi_premi_ke = e.msbi_premi_ke
		ORDER BY a.mspa_date_book 
		<isNotEmpty property="urutan">
			<isEqual property="urutan" compareValue="asc">asc</isEqual>
			<isEqual property="urutan" compareValue="desc">desc</isEqual>
		</isNotEmpty>
	</select>

	<!-- select info billing untuk proses transfer -->
	<select id="elions.uw.selectBillingInfoForTransfer" resultMap="elions.uw.selectBillingInfoForTransfer.result" parameterClass="java.util.HashMap">
		SELECT distinct a.lku_id, a.lstb_id, a.lscb_id, a.mspo_policy_no,
		       a.mspo_pay_period, a.mspo_ins_period, b.mste_beg_date, b.mste_flag_cc, 
		       d.mcl_first, e.*, c.mspr_tsi, 
		       f.lku_symbol
		  FROM eka.mst_policy a,
		       eka.mst_insured b,
		       eka.mst_product_insured c,
		       eka.mst_client_new d,
		       (SELECT a.reg_spaj, a.msbi_tahun_ke, a.msbi_premi_ke, msbi_bill_no,
		               msbi_beg_date, add_months(msbi_beg_date,1) next_date, msbi_end_date, msbi_due_date, msbi_aktif_date,
		               msbi_policy_cost, msbi_hcr_policy_cost,
		               msbi_ttl_card_cost, msbi_stamp, msbi_input_date, msbi_remain,
		               msbi_paid, msbi_active, msbi_print, msbi_add_bill,
		               msbi_flag_sisa, lus_id, lspd_id, msbi_paid_date,
		               msbi_tgl_batal, msbi_hcr_no, lca_id, lwk_id, lsrg_id,
		               msbi_print_date, msbi_gross, msbi_flag_recur, msbi_sms,
		               msbi_flag_topup, msbi_persen_paid, msdb_det_ke, lsbs_id,
		               lsdbs_number, msdb_premium, nvl(msdb_discount,0) msdb_discount
		          FROM eka.mst_billing a, eka.mst_det_billing b
		         WHERE a.msbi_tahun_ke = #tahun#
		           AND a.msbi_premi_ke = #premi#
		           AND a.reg_spaj = b.reg_spaj
		           AND a.msbi_tahun_ke = b.msbi_tahun_ke
		           AND a.msbi_premi_ke = b.msbi_premi_ke) e,
		       eka.lst_kurs f
		 WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND a.reg_spaj = b.reg_spaj
		   AND b.reg_spaj = c.reg_spaj
		   AND b.mste_insured_no = c.mste_insured_no
		   AND c.lsbs_id = e.lsbs_id
		   AND c.lsdbs_number = e.lsdbs_number
		   AND a.mspo_policy_holder = d.mcl_id(+)
		   AND a.reg_spaj = e.reg_spaj
		   AND a.lku_id = f.lku_id
		   order by e.lsbs_id
	</select>
	
	<select id="elions.uw.selectBiayaUlink" resultClass="double" parameterClass="java.util.HashMap">
		SELECT mbu_jumlah
		  FROM eka.mst_biaya_ulink
		 WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND mu_ke = #muke# AND ljb_id = #ljb#	
	</select>

	<select id="elions.uw.selectLjbIdFromBiayaUlink" resultClass="int" parameterClass="java.util.HashMap">
		SELECT a.ljb_id
		  FROM eka.lst_jenis_biaya a
		 WHERE a.lsbs_id = #lsbs_id#
		   AND a.lsdbs_number = #lsdbs_number#
	</select>
	
	<select id="elions.uw.selectBasicName" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT a.lsdbs_name
		  FROM eka.lst_det_bisnis a
		 WHERE a.lsbs_id = #lsbs_id#
		   AND a.lsdbs_number = #lsdbs_number#
		   AND a.lsdbs_name LIKE '%TERTANGGUNG I)%'
	</select>
	
	<select id="elions.uw.selectJenisRider" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT a.lsdbs_name
		  FROM eka.lst_det_bisnis a
		 WHERE a.lsbs_id = #lsbs_id#
		   AND a.lsdbs_number = #lsdbs_number#
		   AND a.lsdbs_name LIKE '%'|| upper(#riderName#) ||'%'
	</select>

	<select id="elions.uw.selectBiayaUlinkRider" resultClass="double" parameterClass="java.util.HashMap">
		SELECT a.mbu_jumlah
		  FROM eka.mst_biaya_ulink a, eka.lst_jenis_biaya b
		 WHERE b.ljb_id = a.ljb_id
		   AND a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND a.mu_ke = 1
		   AND b.lsbs_id = #lsbs_id#
		   AND b.lsdbs_number = #lsdbs_number#
	</select>

	<select id="elions.uw.selectProduksiPertamaAgent" resultClass="int" parameterClass="string">
		SELECT COUNT (*)
		  FROM eka.mst_agent a, eka.mst_agent_prod b
		 WHERE b.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		   AND b.lsle_id = '4'
		   AND b.msag_id = a.msag_id
		   AND a.msag_prod_1 IS NULL	
	</select>
	
	<select id="elions.uw.selectInfoPribadi" resultMap="elions.uw.selectInfoPribadi.result" parameterClass="string">
		SELECT (a.LCA_ID||a.LWK_ID||a.LSRG_ID) daerah , a.mspo_pribadi, a.mspo_follow_up, a.mspo_komisi_bii, 
		to_char(b.mspro_prod_date,'yyyy') prod_date, b.mspro_prod_date
		  FROM eka.mst_policy a, (select * from eka.mst_production where lstb_id=1 and mspro_prod_ke=1) b
		 WHERE a.reg_spaj = rpad(replace(#value#,'.'),11,' ') and a.reg_spaj = b.reg_spaj(+)
		 and rownum=1
	</select>
	
	<select id="elions.uw.selectLastCurrency" resultClass="double" parameterClass="java.util.HashMap">
		SELECT lkh_currency
		  FROM eka.lst_daily_currency
		 WHERE lku_id = '02'
		   AND eka.lst_daily_currency.lkh_date =
		          (SELECT MAX (a.mspa_date_book)
		             FROM eka.mst_payment a, eka.mst_tag_payment b
		            WHERE b.mspa_payment_id = a.mspa_payment_id
		              AND b.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		              AND b.msbi_tahun_ke = #tahun#
		              AND b.msbi_premi_ke = #premi#)	
	</select>

	<select id="elions.uw.selectViewKomisiAsli" resultClass="com.ekalife.elions.model.Commission" parameterClass="string">
 		SELECT a.reg_spaj, lsbs_number bisnis_no, lsbs_id bisnis_id, ins_period, lev_comm lev_kom, tax, flag_sbm, 1 th_kom, 0 komisi, 0 bonus, 
			lscb_id cb_id, lscb_id cb_asli, nvl(b.mspro_prod_date,beg_date) tgl_kom, agent_id, region, substr(region,1,4) bancass, nvl(reff_bii,0) reff_bii, sts_aktif, 
			a.lku_id kurs_id, 1 flag_mess, premi, flag_komisi, lsle_id
		    FROM eka.v_get_kom a, (select * from eka.mst_production where lstb_id=1 and mspro_prod_ke=1) b
		   WHERE a.reg_spaj = rpad(replace(#value#,'.'),11,' ') and a.reg_spaj = b.reg_spaj(+) 
		ORDER BY lev_comm DESC
	</select>
	
	<select id="elions.uw.selectViewKomisiHybrid2009" resultClass="com.ekalife.elions.model.Commission" parameterClass="string">
		SELECT   a.reg_spaj, e.lsdbs_number bisnis_no, lsbs_id bisnis_id,
		         c.mspo_ins_period ins_period, lev_comm lev_kom, f.msag_tax tax,
		         f.msag_sbm flag_sbm, 1 th_kom, 0 komisi, 0 bonus, lscb_id cb_id,
		         lscb_id cb_asli, NVL (b.mspro_prod_date, d.mste_beg_date) tgl_kom,
		         f.msag_id agent_id, (f.lca_id || f.lwk_id || f.lsrg_id) region,
		         (f.lca_id || f.lwk_id) bancass, NVL (c.mspo_ref_bii, 0) reff_bii,
		         f.msag_active sts_aktif, c.lku_id kurs_id, 1 flag_mess,
		         e.mspr_premium premi, f.msag_komisi flag_komisi, lsla_id lsle_id
		    FROM eka.mst_agent_artha a,
		         (SELECT *
		            FROM eka.mst_production
		           WHERE lstb_id = 1 AND mspro_prod_ke = 1) b,
		         eka.mst_policy c,
		         eka.mst_insured d,
		         eka.mst_product_insured e,
		         eka.mst_agent f
		   WHERE a.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		     AND a.reg_spaj = b.reg_spaj(+)
		     AND a.reg_spaj = c.reg_spaj
		     AND c.reg_spaj = d.reg_spaj
		     AND d.reg_spaj = e.reg_spaj
		     AND d.mste_insured_no = e.mste_insured_no
		     AND e.lsbs_id <![CDATA[<]]> 300
		     AND a.msag_id = f.msag_id
			 AND a.lev_comm is not null
		ORDER BY lev_comm DESC	
	</select>
	
	<select id="elions.uw.selectInsuredInfo" parameterClass="string" resultClass="java.util.HashMap">
		SELECT lsbs_id, lsdbs_number, mspr_premium
		  FROM eka.mst_product_insured
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ') AND <![CDATA[lsbs_id < 300]]>
	</select>
	
	<select id="elions.uw.selectPremiTahunan" parameterClass="java.util.HashMap" resultClass="double">
		SELECT lsprss_value
		  FROM eka.lst_premi_ss
		 WHERE lsbs_id = #bisnis#
		   AND lsprss_plan = #nomor#
		   AND lsprss_age = #umur#
		   AND lku_id = '01'	
	</select>
	
	<select id="elions.uw.selectPremiSuperSehat" resultClass="double" parameterClass="java.util.HashMap">
		SELECT eka.lst_premi_ss.lsprss_value
		  FROM eka.lst_premi_ss
		 WHERE (eka.lst_premi_ss.lsbs_id = #lsbs#)
		   AND (eka.lst_premi_ss.lsprss_plan = #lsdbs#)
		   AND (eka.lst_premi_ss.lsprss_age = #umur#)
		   AND (eka.lst_premi_ss.lku_id = #lku#)
	</select>
	
	<select id="elions.uw.selectLastComissionDate" parameterClass="com.ekalife.elions.model.Commission" resultClass="date">
		SELECT MAX (lsco_date)
		  FROM eka.lst_comm_new
		 WHERE <![CDATA[lsco_date <= ]]> #tgl_kom#
		   AND lsbs_id = #bisnis_id#
		   AND lsdbs_number = #bisnis_no#
		   AND lscb_id = #cb_id#
		   AND lku_id = #kurs_id#
		   AND lev_comm = #lev_kom#
		   AND lsco_jenis = #lsco_jenis#
		   AND lsco_year = #lsco_year#
	</select>

	<select id="elions.uw.selectKomisiPowersave" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT *
		  FROM eka.lst_comm_powersave a
		 WHERE a.lscp_jenis = #lscp_jenis#
		   AND a.lsbs_id = #lsbs_id#
		   AND a.lsdbs_number = #lsdbs_number#
		   AND a.lscp_mgi = #lscp_mgi#
		   AND a.lku_id = #lku_id#
		   AND a.lev_comm = #lev_comm#
		   AND a.lscp_year = #lscp_year#
		   AND #premi# BETWEEN a.lscp_dari AND a.lscp_akhir
		   AND a.lscp_rollover = #lscp_rollover#
		   AND lscp_date =
		          (SELECT MAX (lscp_date)
		             FROM eka.lst_comm_powersave
		            WHERE lscp_date <![CDATA[<=]]> #tgl_kom#
		              AND lscp_jenis = a.lscp_jenis
		              AND lsbs_id = a.lsbs_id
		              AND lsdbs_number = a.lsdbs_number
		              AND lscp_mgi = a.lscp_mgi
		              AND lku_id = a.lku_id
		              AND lev_comm = a.lev_comm
		              AND lscp_year = a.lscp_year
					  AND lscp_rollover = a.lscp_rollover)	
	</select>

	<!-- Fungsi ini belum narik berdasarkan LSCB_ID, INS PERIOD, LKU, HATI2!!! -->
	<select id="elions.uw.selectBonus" parameterClass="java.util.HashMap" resultClass="double">
		SELECT lsco_bonus
		  FROM eka.lst_comm_new k
		 WHERE lsco_jenis = #lsco_jenis#
		   AND lev_comm = #lev_comm#
		   AND lsco_year = #lsco_year#
		   AND lsbs_id = #lsbs_id#
		   AND lsdbs_number = #lsdbs_number#
		   AND lsco_date =
		          (SELECT MAX (lsco_date)
		             FROM eka.lst_comm_new
		            WHERE lsco_jenis = k.lsco_jenis
		              AND lsbs_id = k.lsbs_id
		              AND lsdbs_number = k.lsdbs_number
		              AND lscb_id = k.lscb_id
		              AND lsco_insper = k.lsco_insper
		              AND lku_id = k.lku_id
		              AND lev_comm = k.lev_comm
		              AND lsco_year = k.lsco_year)	
	</select>

	<select id="elions.uw.selectCommisionAndBonus" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT lsco_comm, lsco_bonus
		  FROM eka.lst_comm_new
		 WHERE lsco_date = #ldt_temp#
		   AND lsbs_id = #astr_kom.bisnis_id#
		   AND lsdbs_number = #astr_kom.bisnis_no#
		   AND lscb_id = #astr_kom.cb_id#
		   AND lsco_insper = #astr_kom.ins_period#
		   AND lku_id = #astr_kom.kurs_id#
		   AND lev_comm = #astr_kom.lev_kom#
		   AND lsco_year = #astr_kom.th_kom#
		   AND lsco_jenis = #astr_kom.lsco_jenis#
	</select>

	<select id="elions.uw.selectLastBancassCommisionDate" parameterClass="com.ekalife.elions.model.Commission" resultClass="date">
		SELECT MAX (lsco_date)
		  FROM eka.lst_com_banc
		 WHERE <![CDATA[lsco_date <= ]]> #tgl_kom#
		   AND lsbs_id = #bisnis_id#
		   AND lsdbs_number = #bisnis_no#
		   AND lscb_id = #cb_id#
		   AND lku_id = #kurs_id#
		   AND lev_comm = #lev_kom#
		   AND lsco_jenis = #lsco_jenis#
	</select>
   
   <select id="elions.uw.selectBancassCommisionAndBonus" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT lsco_comm, lsco_bonus
		  FROM eka.lst_com_banc
		 WHERE lsco_date = #ldt_temp#
		   AND lsbs_id = #astr_kom.bisnis_id#
		   AND lsdbs_number = #astr_kom.bisnis_no#
		   AND lscb_id = #astr_kom.cb_id#
		   AND lsco_insper = #astr_kom.ins_period#
		   AND lku_id = #astr_kom.kurs_id#
		   AND lev_comm = #astr_kom.lev_kom#
		   AND lsco_year = #astr_kom.th_kom#
		   AND lsco_jenis = #astr_kom.lsco_jenis#

	</select>			
			
	<select id="elions.uw.selectBillingRemain" parameterClass="string" resultMap="elions.uw.selectBillingRemain.result">
		SELECT msbi_remain, nvl(msbi_flag_sisa,0) msbi_flag_sisa
		  FROM eka.mst_billing
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
		   AND msbi_tahun_ke = 1
		   AND msbi_premi_ke = 1
		   AND msbi_active = 1
	</select>
		
	<select id="elions.uw.selectReferrerBII" parameterClass="string" resultMap="elions.uw.selectReferrerBII.result">
		SELECT a.lku_id, a.lscb_id, a.mspo_ins_period, b.lsbs_id, b.lsdbs_number,
		       b.mspr_premium, b.mspr_beg_date, d.flag_aktif, c.lcb_no, null referrer_id, nvl(c.lrb_id, -1) lrb_id
		  FROM eka.mst_policy a,
		       eka.mst_product_insured b,
		       eka.mst_reff_bii c,
		       eka.lst_reff_bii d
		 WHERE a.reg_spaj = b.reg_spaj
		   AND a.reg_spaj = c.reg_spaj
		   AND c.lrb_id = d.lrb_id(+)
		   AND a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		   <![CDATA[ AND b.lsbs_id < 300 ]]>
		   AND c.level_id = 4
		   AND c.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = a.reg_spaj)
	</select>	
			
	<select id="elions.uw.selectReferrerBII.new" parameterClass="string" resultMap="elions.uw.selectReferrerBII.result">
		SELECT a.lku_id, a.lscb_id, a.mspo_ins_period, b.lsbs_id, b.lsdbs_number,
		       b.mspr_premium, b.mspr_beg_date, d.flag_aktif, null lcb_no, c.referrer_id, 1 lrb_id
		  FROM eka.mst_policy a,
		       eka.mst_product_insured b,
		       eka.mst_nasabah c,
		       eka.lst_referrer_bii d
		 WHERE a.reg_spaj = b.reg_spaj
		   AND a.mspo_plan_provider = c.mns_kd_nasabah
		   AND c.referrer_id = d.referrer_id(+)
		   AND a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		   <![CDATA[ AND b.lsbs_id < 300 ]]>
	</select>
			
	<select id="elions.uw.selectPremiTopUpUnitLink" parameterClass="java.util.HashMap" resultClass="double">
		  SELECT MSDB_PREMIUM - nvl(MSDB_DISCOUNT,0)  
		    FROM EKA.MST_DET_BILLING
		   WHERE  REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') AND  
		          MSBI_TAHUN_KE = 1  AND  
		          MSBI_PREMI_KE = #premi_ke#
	</select>

	<select id="elions.uw.selectPrintDate" parameterClass="string" resultClass="date">
		select mspo_date_print from eka.mst_policy where reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
	</select>
			
	<select id="elions.uw.selectProductionDate" parameterClass="java.util.HashMap" resultClass="date">
		SELECT eka.mst_production.mspro_prod_date
		  FROM eka.mst_production
		 WHERE eka.mst_production.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		<isNotEmpty property="tahun">
		   AND eka.mst_production.msbi_tahun_ke = #tahun#
		</isNotEmpty>
		<isNotEmpty property="premi">
		   AND eka.mst_production.msbi_premi_ke = #premi#
		</isNotEmpty>
		AND rownum=1
	</select>	
	
	<select id="elions.uw.selectProductionDateAndKurs" parameterClass="java.util.HashMap" resultMap="elions.uw.selectProductionDateAndKurs.result">
		SELECT mspro_prod_date, mspro_nilai_kurs
		  FROM eka.mst_production
		 WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND msbi_tahun_ke = #tahun#
		   AND msbi_premi_ke = #premi#
		   AND rownum=1
	</select>	
	
	<select id="elions.uw.selectPrestigeClub" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.msac_aktif, a.msac_dplk, b.lpc_club, b.lpc_dplk_k
		  FROM eka.mst_agent_club a, eka.lst_pclub b
		 WHERE b.lpc_id = a.lpc_id AND a.msag_id = RPAD (#msag_id#, 6, ' ')
		 AND #tanggal# between msac_beg_date and msac_end_date
	</select>
	
	<select id="elions.uw.selectRekruterFromAgenSys" parameterClass="string" resultClass="com.ekalife.elions.model.Rekruter">
		SELECT  c.msag_id agent_id, d.mcl_first nama, c.msag_active sts_aktif, c.lsle_id level_id, c.lbn_id, c.msag_tabungan no_tab, 4 jenis_rekrut, b.msag_komisi,
                b.msag_active, c.msag_bay, (b.lca_id||b.lwk_id) lcalwk
          FROM eka.mst_input_agensys, eka.mst_agent b, eka.mst_agent c, eka.mst_client_new d
         WHERE eka.mst_input_agensys.msag_id = b.msag_id
         AND   eka.mst_input_agensys.mia_recruiter = c.msag_id
         AND   c.mcl_id = d.mcl_id
		 AND   b.msag_id = RPAD (#value#, 6, ' ')
	</select>
	<!--AND mia_aktif=1	-->
	
	<select id="elions.uw.selectRekruterFromAgen" parameterClass="string" resultClass="com.ekalife.elions.model.Rekruter">
		SELECT agent_id, nama, sts_aktif, level_id, lbn_id, no_tab, 3 jenis_rekrut, msag_komisi, sts_aktif msag_active, msag_bay, (lca_id||lwk_id) lcalwk
		  FROM eka.v_agent
		 WHERE agent_id = RPAD (#value#, 6, ' ')
	</select>
	<!--	AND sts_aktif=1-->
	
	<select id="elions.uw.selectRekruterAgencySystem" parameterClass="string" resultClass="string">
		SELECT mia_recruiter
		  FROM eka.mst_input_agensys
		 WHERE msag_id = RPAD (#value#, 6, ' ')
	</select>	
	
	<select id="elions.uw.selectMclIdfromAgent" parameterClass="string" resultClass="string">
		SELECT mcl_id
		  FROM eka.mst_agent
		 WHERE msag_id = RPAD (#value#, 6, ' ')
	</select>
	
	<select id="elions.uw.selectRekruter" parameterClass="string" resultClass="java.util.HashMap">
		SELECT a.msag_id, c.msag_active msrk_aktif, b.msrk_id, b.msrk_name,
		       b.msrk_jenis_rekrut, b.msrk_level, c.lbn_id,
		       RTRIM (REPLACE (c.msag_tabungan, '.')) no_account, nvl(c.msag_active,0) msag_active, c.msag_komisi,c.msag_bay
		  FROM (SELECT   mdrk_rekruter_aktif, msrk_id, msag_id
		            FROM eka.mst_det_rekruter
		        GROUP BY mdrk_rekruter_aktif, msrk_id, msag_id) a, eka.mst_rekruter b, eka.mst_agent c
		 WHERE b.msrk_id = a.msrk_id AND a.msag_id = RPAD (#value#, 6, ' ') AND a.msrk_id = c.msag_id(+)
	</select>
	
	<select id="elions.uw.selectRekruterDenganKomisi" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.msag_id, b.msrk_aktif, b.msrk_id, b.msrk_name,
		       b.msrk_jenis_rekrut, b.msrk_level, b.lbn_id,c.msag_bay,
		       RTRIM (REPLACE (b.msrk_no_account, '.')) no_account, nvl(c.msag_active,0) msag_active, d.msco_comm, d.msco_nilai_kurs
		  FROM (SELECT   mdrk_rekruter_aktif, msrk_id, msag_id
		            FROM eka.mst_det_rekruter
		        GROUP BY mdrk_rekruter_aktif, msrk_id, msag_id) a, eka.mst_rekruter b, eka.mst_agent c, eka.mst_commission d
		 WHERE b.msrk_id = a.msrk_id AND a.msag_id = RPAD (#msag_id#, 6, ' ') AND a.msrk_id = c.msag_id(+)
		 and d.msbi_tahun_ke = 1 and d.msbi_premi_ke = 1
		 and d.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') and d.msag_id = RPAD (#msag_id#, 6, ' ')
		 and d.lev_comm = 4
	</select>
	
	<select id="elions.uw.selectAgentActiveDate" parameterClass="string" resultClass="date">
		SELECT msag_active_date
		  FROM eka.mst_agent
		 WHERE msag_id = rpad(#value#, 6, ' ')
	</select>
	
	<select id="elions.uw.selectProSave" parameterClass="string" resultClass="int">
		SELECT mps_jangka_inv 
		  FROM eka.mst_powersave_proses
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ') AND mps_kode = 5	
	</select>
	
	<select id="elions.uw.selectProSaveBaru" parameterClass="string" resultClass="int">
		SELECT mps_mgi 
		  FROM eka.mst_psave
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ') AND mps_kode = 5 AND mps_new = 1	
	</select>
	
	<select id="elions.uw.selectPremiTertanggung" parameterClass="string" resultClass="com.ekalife.elions.model.Premi">
		SELECT a.lku_id, a.lscb_id, a.mspo_policy_no no_polis, a.mspo_pay_period, a.lspd_id,
		       b.mste_beg_date, b.mste_flag_cc, c.lsbs_id bisnis_id, d.mcl_first nama_pemegang, c.lsdbs_number
		  FROM eka.mst_policy a,
		       eka.mst_insured b,
		       eka.mst_product_insured c,
		       eka.mst_client_new d
		 WHERE b.reg_spaj = a.reg_spaj
		   AND c.reg_spaj = b.reg_spaj
		   AND c.mste_insured_no = b.mste_insured_no
		   AND a.mspo_policy_holder = d.mcl_id(+)
		   AND a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		   AND <![CDATA[ c.lsbs_id < 300 ]]>
	</select>
	
	<select id="elions.uw.selectPremiAndRider" parameterClass="java.util.HashMap" resultClass="double">
		SELECT SUM (mspr_premium - nvl(mspr_discount,0))
		  FROM eka.mst_product_insured
		 WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND mste_insured_no = 1 AND 
		 <isEqual property="flag" compareValue="premi">
			 <![CDATA[ lsbs_id < 300 ]]>
		 </isEqual>
		 <isEqual property="flag" compareValue="rider">
			 <![CDATA[ lsbs_id > 300 ]]>
		 </isEqual>		 
	</select>
	
	<select id="elions.uw.selectPrivasiKe" parameterClass="string" resultClass="int">
		SELECT MAX (mp_ke)
		  FROM eka.mst_privasi
		 WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
	</select>

	<select id="elions.uw.selectSaldoDeposit" parameterClass="string" resultClass="double">
		SELECT nvl(mdep_saldo,0)
		  FROM eka.mst_det_deposito
		 WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND mp_ke = (SELECT MAX (mp_ke)
		                                          FROM eka.mst_det_deposito
		                                         WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' '))
	</select>
	
	<select id="elions.uw.selectDaftarSpajInputanBank" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT    SUBSTR (a.reg_spaj, 1, 2)
		       || '.'
		       || SUBSTR (a.reg_spaj, 3, 4)
		       || '.'
		       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
		       a.reg_spaj,
		       a.mspo_policy_no_format policy_formatted,
		       a.mspo_policy_no, a.lspd_id, a.lstb_id,
		       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg
		  FROM eka.mst_policy a
		WHERE a.lspd_id = #lspd_id# AND a.lstb_id = #lstb_id#
		AND a.lus_id in (select lus_id from eka.lst_user where cab_bank = (select cab_bank from eka.lst_user where lus_id = #lus_id#)) 
	</select>
	
	<select id="elions.uw.selectDaftarSpajInputanASM" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT    SUBSTR (a.reg_spaj, 1, 2)
		       || '.'
		       || SUBSTR (a.reg_spaj, 3, 4)
		       || '.'
		       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
		       a.reg_spaj,
		       a.mspo_policy_no_format policy_formatted,
		       a.mspo_policy_no, a.lspd_id, a.lstb_id,
		       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg
		  FROM eka.mst_policy a,
		       eka.lst_region b,
		       eka.lst_user_admin c
		WHERE a.lspd_id = #lspd_id# AND a.lstb_id = #lstb_id#
		AND a.lca_id= b.lca_id
         AND a.lwk_id = b.lwk_id
         AND a.lsrg_id = b.lsrg_id
         AND b.lar_id = c.lar_id
         AND c.lus_id = #lus_id# 
	</select>
	
	<select id="elions.uw.selectDaftarSPAJgutri"
		resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
		select  distinct  tab.*
		from 
		((
		SELECT    SUBSTR (a.reg_spaj, 1, 2)
		       || '.'
		       || SUBSTR (a.reg_spaj, 3, 4)
		       || '.'
		       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
		       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
		       a.mspo_policy_no, a.lspd_id, a.lstb_id,
		       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg
		  FROM eka.mst_policy a
		 WHERE 
		 (a.lspd_id = #posisi#) and
		   (a.lstb_id = #tipe#)
		   <isGreaterEqual prepend=" AND " property="posisi" compareValue="3">
		   		a.mspo_policy_no is not null
		   </isGreaterEqual>
		   )
		   union
(		SELECT   SUBSTR (a.reg_spaj, 1, 2)
         || '.'
         || SUBSTR (a.reg_spaj, 3, 4)
         || '.'
         || SUBSTR (a.reg_spaj, 7) spaj_formatted,
         a.reg_spaj, a.mspo_policy_no_format policy_formatted,
         a.mspo_policy_no, b.lspd_id, a.lstb_id,
         DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg
    FROM eka.mst_policy a , eka.mst_billing b
   WHERE a.reg_spaj = b.reg_spaj and
   (b.lspd_id in (59,60) and  (a.lstb_id = #tipe#)))
    )tab
ORDER BY SUBSTR (tab.reg_spaj, 1, 2),
         SUBSTR (tab.reg_spaj, 3, 4),
         SUBSTR (tab.reg_spaj, 7)
	</select>	
	
	<select id="elions.uw.selectDaftarSPAJ2" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		<isNull property="lssaId" >
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,msps_desc,
                   (CASE
                        WHEN msps_desc like '%(REK BKN BSM/REK KOSONG)' 
                            THEN 'afeeee'
                       WHEN  msps_desc like '%(DEDUCT).'
                            THEN 'CC99FF'
                       WHEN  msps_desc like '%(SERTIFIKAT TDK BERLISENSI)'
                            THEN 'ffb6c1'
                   END)warna 
			FROM eka.mst_policy a, eka.mst_position_spaj b
			 WHERE (a.lspd_id = #posisi#)
			   AND (a.lstb_id = #tipe#)
			   AND a.reg_spaj= b.reg_spaj
			   AND b.lus_id=15
			   AND upper(b.msps_desc) not like upper('FILING DOC NB KE BOX%')
			   AND upper(b.msps_desc) not like upper('Filing READY FOR DELIVERY%')
			   <isNotNull property="jenisTerbit" >
				   AND a.mspo_jenis_terbit=#jenisTerbit#
			   </isNotNull>
			   <isGreaterEqual prepend=" AND " property="posisi" compareValue="3">
			   		a.mspo_policy_no is not null
			   </isGreaterEqual>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
		</isNull>
		<isNotNull property="lssaId" >
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,msps_desc,
                   (CASE
                        WHEN msps_desc like '%(REK BKN BSM/REK KOSONG)' 
                            THEN 'afeeee'
                       WHEN  msps_desc like '%(DEDUCT).'
                            THEN 'CC99FF'
                       WHEN  msps_desc like '%(SERTIFIKAT TDK BERLISENSI)'
                            THEN 'ffb6c1'
                   END)warna 
             FROM eka.mst_policy a,
			  	   eka.mst_insured b,  eka.mst_position_spaj c
			 WHERE a.reg_spaj=b.reg_spaj
			   AND a.lspd_id $posisi$ 
			   AND a.lstb_id = #tipe#
			   AND b.lssa_id=#lssaId#
			   AND c.lus_id=15
			   AND upper(b.msps_desc) not like upper('FILING DOC NB KE BOX%')
			   AND upper(b.msps_desc) not like upper('Filing READY FOR DELIVERY%')
			   <isNotNull property="jenisTerbit" >
				   AND a.mspo_jenis_terbit=#jenisTerbit#
			   </isNotNull>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
		</isNotNull>
	</select>	
	
	
	<select id="elions.uw.selectDaftarSPAJ1"
		resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		<isNull property="lssaId" >
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc like '%(REK BKN BSM/REK KOSONG)' and rownum = 1) , null, 'rgb(153,255,255)','rgb(153,255,204)') rek_bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc like '%(CHECKING TTP (AGENCY))' and rownum = 1) , null, 'rgb(204,102,255)','rgb(204,102,204)') cek_bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc like '%(SERTIFIKAT TDK BERLISENSI)' and rownum = 1) , null, 'rgb(255,102,255)','rgb(255,102,204)') ser_bg
			  FROM eka.mst_policy a
			 WHERE (a.lspd_id = #posisi#)
			   AND (a.lstb_id = #tipe#)
			   <isNotNull property="jenisTerbit" >
				   AND a.mspo_jenis_terbit=#jenisTerbit#
			   </isNotNull>
			   <isGreaterEqual prepend=" AND " property="posisi" compareValue="3">
			   		a.mspo_policy_no is not null
			   </isGreaterEqual>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
		</isNull>
		<isNotNull property="lssaId" >
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc like '%(REK BKN BSM/REK KOSONG)' and rownum = 1) , null, 'rgb(153,255,255)','rgb(153,255,204)') rek_bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc like '%(CHECKING TTP (AGENCY))' and rownum = 1) , null, 'rgb(204,102,255)','rgb(204,102,204)') cek_bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc like '%(SERTIFIKAT TDK BERLISENSI)' and rownum = 1) , null, 'rgb(255,102,255)','rgb(255,102,204)') ser_bg
			  FROM eka.mst_policy a,
			  	   eka.mst_insured b
			 WHERE a.reg_spaj=b.reg_spaj
			   AND a.lspd_id $posisi$ 
			   AND a.lstb_id = #tipe#
			   AND b.lssa_id=#lssaId#
			   <isNotNull property="jenisTerbit" >
				   AND a.mspo_jenis_terbit=#jenisTerbit#
			   </isNotNull>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
		
		</isNotNull>		
	</select>	
	
	<select id="elions.uw.selectDaftarSpajInputanMall"
		resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
			 FROM eka.mst_policy a, eka.mst_insured b
			 WHERE (a.lspd_id = #lspd_id#)
			   <isEqual property="lstb_id" compareValue="3">
				   AND (a.lstb_id in(1,2)) 
			   </isEqual>
			   <isNotEqual property="lstb_id" compareValue="3">
			   	   AND (a.lstb_id = #lstb_id#)
			   </isNotEqual>
			   <isGreaterEqual prepend=" AND " property="lspd_id" compareValue="3">
			   		a.reg_spaj = b.reg_spaj
			   </isGreaterEqual>
			   AND b.lssa_Id =1
			   AND a.lca_id = '58'
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
	</select>
	
	
	<select id="elions.uw.selectDaftarSPAJ"
		resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		<isNull property="lssaId" >
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
			 FROM eka.mst_policy a
			 WHERE (a.lspd_id = #posisi#)
			   <isEqual property="tipe" compareValue="3">
				   <!-- AND (a.lstb_id in(1,2))  -->
				   AND (a.lstb_id in(1))
			   </isEqual>
			   <isNotEqual property="tipe" compareValue="3">
			   	   AND (a.lstb_id = #tipe#)
			   </isNotEqual>
			   <isNotNull property="jenisTerbit" >
				   AND a.mspo_jenis_terbit=#jenisTerbit#
			   </isNotNull>
			   <isGreaterEqual prepend=" AND " property="posisi" compareValue="3">
			   		a.mspo_policy_no is not null
			   </isGreaterEqual>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
		</isNull>
		<isNotNull property="lssaId" >
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
			  FROM eka.mst_policy a,
			  	   eka.mst_insured b
			 WHERE a.reg_spaj=b.reg_spaj
			   AND a.lspd_id $posisi$ 
			   AND a.lstb_id = #tipe#
			   AND b.lssa_id=#lssaId#
			   <isNotNull property="jenisTerbit" >
				   AND a.mspo_jenis_terbit=#jenisTerbit#
			   </isNotNull>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
		
		</isNotNull>		
	</select>
	
	<select id="elions.uw.selectDaftarSPAJPayment"
		resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		<isNull property="lssaId" >
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
			 FROM eka.mst_policy a
			 WHERE (a.lspd_id = #posisi#)
			   <isEqual property="tipe" compareValue="3">
				   <!-- AND (a.lstb_id in(1,2))  -->
				   AND (a.lstb_id in(1))
			   </isEqual>
			   <isNotEqual property="tipe" compareValue="3">
			   	   AND (a.lstb_id = #tipe#)
			   </isNotEqual>
			   <isNotNull property="jenisTerbit" >
				   AND a.mspo_jenis_terbit=#jenisTerbit#
			   </isNotNull>
			   <isGreaterEqual prepend=" AND " property="posisi" compareValue="3">
			   		a.mspo_policy_no is not null
			   </isGreaterEqual>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
		</isNull>
		<isNotNull property="lssaId" >
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
			  FROM eka.mst_policy a,
			  	   eka.mst_insured b
			 WHERE a.reg_spaj=b.reg_spaj
			   AND a.lspd_id $posisi$ 
			   AND a.lstb_id = #tipe#
			   AND b.lssa_id=#lssaId#
			    AND b.mste_flag_cc <![CDATA[<>]]> 8
			   <isNotNull property="jenisTerbit" >
				   AND a.mspo_jenis_terbit=#jenisTerbit#
			   </isNotNull>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
		
		</isNotNull>		
	</select>
	
	<select id="elions.uw.selectDaftarSPAJMall"
		resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		<isNull property="lssaId" >
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
			 FROM eka.mst_policy a
			 WHERE (a.lspd_id = #posisi#)
			   <isEqual property="tipe" compareValue="3">
				   <!-- AND (a.lstb_id in(1,2))  -->
				   AND (a.lstb_id in(1)) 
			   </isEqual>
			   <isNotEqual property="tipe" compareValue="3">
			   	   AND (a.lstb_id = #tipe#)
			   </isNotEqual>
			   <isNotNull property="jenisTerbit" >
				   AND a.mspo_jenis_terbit=#jenisTerbit#
			   </isNotNull>
			   <isGreaterEqual prepend=" AND " property="posisi" compareValue="3">
			   		a.mspo_policy_no is not null
			   </isGreaterEqual>
			   AND a.lca_id = '58'
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
		</isNull>
		<isNotNull property="lssaId" >
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
			  FROM eka.mst_policy a,
			  	   eka.mst_insured b
			 WHERE a.reg_spaj=b.reg_spaj
			   AND a.lspd_id $posisi$ 
			   AND a.lstb_id = #tipe#
			   AND b.lssa_id=#lssaId#
			   AND a.lca_id = '58'
			   <isNotNull property="jenisTerbit" >
				   AND a.mspo_jenis_terbit=#jenisTerbit#
			   </isNotNull>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
		
		</isNotNull>		
	</select>
	
	<select id="elions.uw.selectDaftarSPAJCrossSelling"
		resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
			 FROM eka.mst_policy a
			 WHERE (a.lspd_id = #posisi#)
			   <isEqual property="tipe" compareValue="3">
				   <!-- AND (a.lstb_id in(1,2))  -->
				   AND (a.lstb_id in(1))
			   </isEqual>
			   <isNotEqual property="tipe" compareValue="3">
			   	   AND (a.lstb_id = #tipe#)
			   </isNotEqual>
			   <isNotNull property="jenisTerbit" >
				   AND a.mspo_jenis_terbit=#jenisTerbit#
			   </isNotNull>
			   		AND a.lca_id = #lca_id#
			   <isGreaterEqual prepend=" AND " property="posisi" compareValue="3">
			   		a.mspo_policy_no is not null
			   </isGreaterEqual>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
	</select>	
	
	<select id="elions.uw.selectDaftarSPAJOnline"
		resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
			 FROM eka.mst_policy a
			 WHERE (a.lspd_id = #posisi#)
			   <isEqual property="tipe" compareValue="3">
				   <!-- AND (a.lstb_id in(1,2))  -->
				   AND (a.lstb_id in(1)) 
			   </isEqual>
			   <isNotEqual property="tipe" compareValue="3">
			   	   AND (a.lstb_id = #tipe#)
			   </isNotEqual>
			   AND a.lus_id = #lusId#
			   <isGreaterEqual prepend=" AND " property="posisi" compareValue="3">
			   		a.mspo_policy_no is not null
			   </isGreaterEqual>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
	</select>		
	
	<select id="elions.uw.selectDaftarSPAJSimple"
		resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
			 FROM eka.mst_policy a, eka.mst_product_insured b
			 WHERE (a.lspd_id = #posisi#)
			 and a.reg_spaj=b.reg_spaj
			   <isEqual property="tipe" compareValue="3">
				   <!-- AND (a.lstb_id in(1,2))  -->
				   AND (a.lstb_id in(1)) 
			   </isEqual>
			   <isNotEqual property="tipe" compareValue="3">
			   	   AND (a.lstb_id = #tipe#)
			   </isNotEqual>
			   <isEqual property="jenis" compareValue="simple">
				   AND (b.lsbs_id = 196 and b.lsdbs_number = 2)
			   </isEqual>
			   <isNotNull property="lusId" >
			   	   AND a.lus_id = #lusId#
			   </isNotNull>
			   <isGreaterEqual prepend=" AND " property="posisi" compareValue="3">
			   		a.mspo_policy_no is not null
			   </isGreaterEqual>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
	</select>		
	
	<select id="elions.uw.selectDaftarSpajUwSimasPrima" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT   a.lca_id, SUBSTR (a.reg_spaj, 1, 2) || '.' || SUBSTR (a.reg_spaj, 3, 4) || '.' || SUBSTR (a.reg_spaj, 7) spaj_formatted,
		         a.reg_spaj, a.mspo_policy_no_format policy_formatted,
		         a.mspo_policy_no, a.lspd_id, a.lstb_id,
		         DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
		         DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
		    FROM eka.mst_policy a
		    <isEqual property="jn_bank" compareValue="3">
		    ,eka.lst_user b
		    </isEqual>
		   WHERE a.lspd_id = #lspd_id# AND a.lstb_id = 1
		   AND a.lus_id in (SELECT lus_id FROM eka.lst_user WHERE lus_active = 1 AND jn_bank = TRIM(#jn_bank#))
		   <isEqual property="jn_bank" compareValue="3">
			   AND a.lus_id = b.lus_id
			   <isEqual property="flag_approve" compareValue="0">
			   		<isNotEqual property="cab_bank" compareValue="M35">
			   		   AND trim(b.cab_bank) = TRIM(#cab_bank#)
			   		</isNotEqual>
					<isNotEqual property="lspd_id" compareValue="6">
					   AND 0 = (select count(*) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ')
			   		</isNotEqual>
			   </isEqual>
			   <isEqual property="flag_approve" compareValue="1">
			   		AND 1 = (select count(*) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ')
			   </isEqual>
		   </isEqual>
		ORDER BY a.reg_spaj	
	</select>

<select id="elions.uw.selectAgentUploadNewBusinessList" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">	
 	<isEqual property="jenis" compareValue="1">
		select mku_no_reg as kode_agent , mku_no_reg || '-' || mku_first as nama_agent from eka.mst_kuesioner
		where lus_id = #lus_id# 
		order by mku_no_reg
	</isEqual>
	<isEqual property="jenis" compareValue="2">
		select mia_agensys_id as kode_agent, mia_agensys_id || '-' || mia_nama as nama_agent from eka.mst_input_agensys 
		where mia_aktif = 1
		and 
		lus_id = #lus_id#
		order by mia_agensys_id
	</isEqual>
</select>
	
		<select id="elions.uw.selectDaftarSPAJ_valid"
		resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
		<isNull property="lssaId" >
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
			  FROM eka.mst_policy a
			 WHERE (a.lspd_id = #posisi#)
			   AND (a.lstb_id = #tipe#)
			   and a.lus_id in (SELECT lus_id FROM eka.lst_user WHERE lus_active = 1 AND trim(cab_bank) = TRIM(#cab_bank#))
			   <isGreaterEqual prepend=" AND " property="posisi" compareValue="3">
			   		a.mspo_policy_no is not null
			   </isGreaterEqual>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
		</isNull>
		<isNotNull property="lssaId">
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
			  FROM eka.mst_policy a,
			  	   eka.mst_insured b
			 WHERE a.reg_spaj=b.reg_spaj
			   AND a.lspd_id $posisi$ 
			   AND a.lstb_id = #tipe#
			   AND b.lssa_id=#lssaId#
			   and a.lus_id = #lus_id#
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
		</isNotNull>		
	</select>
				
	
	
	<select id="elions.uw.selectDaftarSPAJ.UnitLink"	resultClass="java.util.HashMap" parameterClass="int">
		SELECT    SUBSTR (b.reg_spaj, 1, 2)
		       || '.'
		       || SUBSTR (b.reg_spaj, 3, 4)
		       || '.'
		       || SUBSTR (b.reg_spaj, 7) || 
		          decode(a.mspo_policy_no,null,'', ' - ' || SUBSTR (a.mspo_policy_no, 1, 2)
		       || '.'
		       || SUBSTR (a.mspo_policy_no, 3, 3)
		       || '.'
		       || SUBSTR (a.mspo_policy_no, 6, 4)
		       || '.'
		       || SUBSTR (a.mspo_policy_no, 10, 5)) spajpolis,
		b.reg_spaj, a.mspo_policy_no, b.mu_lspd_id, b.mu_flag_print, b.mu_ke,
		       b.mu_tgl_trans, b.lt_id
		  FROM eka.mst_policy a, eka.mst_ulink b
		 WHERE b.reg_spaj = a.reg_spaj AND b.mu_lspd_id = #value# AND b.mu_aktif = 1
		 ORDER BY b.reg_spaj	
	</select>

	<select id="elions.uw.selectDaftarSPAJ.UnitLink2" resultMap="elions.uw.selectDaftarSPAJ.UnitLink.result" parameterClass="com.ekalife.elions.model.ParameterClass">
		SELECT b.reg_spaj, a.mspo_policy_no, b.mu_lspd_id, b.mu_flag_print, b.mu_ke,
		       b.mu_tgl_trans, b.lt_id
		  FROM eka.mst_policy a, eka.mst_ulink b
		 WHERE b.reg_spaj = a.reg_spaj 
		 AND b.mu_lspd_id = #lspd_id# 
		 and b.reg_spaj in ($reg_spaj$)
		 AND b.mu_aktif = 1		
	</select>
	
	<select id="elions.uw.selectMstReffBiiBySpaj" resultClass="java.util.HashMap" parameterClass="string">
	     select * from eka.mst_reff_bii where reg_spaj = #spaj#
	</select>
	
	<!-- Tanggal Print Polis -->
	<select id="elions.uw.selectPolicyPrintDate" resultClass="date" parameterClass="string">
		SELECT mspo_date_print
		  FROM eka.mst_policy a
		 WHERE a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
 	</select>
	
	<!-- Bisnis ID (kode produk) -->
	<select id="elions.uw.selectBusinessId" resultClass="string" parameterClass="string">
		select lsbs_id from eka.mst_product_insured where reg_spaj=rpad(replace(#value#,'.'),11,' ') and 
		<![CDATA[
		lsbs_id<300
		]]>
	</select>
	
	<select id="elions.uw.selectBegDateProductInsured" parameterClass="string" resultClass="java.util.Date">
		SELECT mspr_beg_date
		  FROM eka.mst_product_insured
		  where reg_spaj=rpad(replace(#value#,'.'),11,' ')
		  and <![CDATA[lsbs_id<300]]>
	</select>
	
	<select id="elions.uw.selectBegDateInsured" parameterClass="string" resultClass="java.util.Date">
		SELECT mste_beg_date
		  FROM eka.mst_insured
		  where reg_spaj=rpad(replace(#value#,'.'),11,' ')
		  and mste_insured_no = 1
	</select>
	
	<select id="elions.uw.selectBDateSLink" parameterClass="string" resultClass="java.util.Date">
		SELECT msl_bdate
		  FROM eka.mst_slink
		  where reg_spaj=rpad(replace(#value#,'.'),11,' ')
		  and msl_no = 1
	</select>

	<!-- Select agents from spaj -->
	<select id="elions.uw.selectAgentsFromSpaj" parameterClass="string" resultClass="java.util.HashMap">
		SELECT   a.msag_id, a.lsle_id, a.lev_comm
		    FROM eka.mst_agent_prod a
		   WHERE a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		ORDER BY a.lsle_id DESC
	</select>

	<select id="elions.uw.selectAgentsFromSpajHybrid2009" parameterClass="string" resultClass="java.util.HashMap">
		SELECT   a.msag_id, a.lsla_id lsle_id, a.lev_comm
		    FROM eka.mst_agent_artha a
		   WHERE a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		ORDER BY a.lsla_id DESC
	</select>

	<!-- Select cb from spaj -->
	<select id="elions.uw.selectCbFromSpaj" parameterClass="string" resultClass="int">
		SELECT lscb_id
		  FROM eka.mst_policy
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<!-- Select cabang from spaj -->
	<select id="elions.uw.selectCabangFromSpaj" resultClass="java.util.HashMap" parameterClass="string">
		select lca_id, lku_id, lwk_id from eka.mst_policy where reg_spaj=rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectrekNasabahBancass1" resultClass="java.util.HashMap" parameterClass="string">
		select b.jn_lead, a.reg_spaj, a.mspo_policy_no
		from eka.mst_policy a,
    		eka.mst_nasabah b
		where a.mspo_plan_provider = b.mns_kd_nasabah
		and a.lca_id='09'
		and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectCountMstReffBii" resultClass="int" parameterClass="string">
		select count(*) from eka.mst_reff_bii where reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectGetNoEndors" resultClass="string" parameterClass="string">
		select distinct msen_endors_no from eka.mst_endors where reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<!-- Seelct nama cabang -->
	<select id="elions.uw.selectNmCabangFromSpaj" resultClass="java.util.HashMap" parameterClass="string">
		select b.lca_nama 
		from eka.mst_policy a ,eka.lst_cabang b 
		where reg_spaj=rpad(replace(#value#,'.'),11,' ') 
      		  and a.lca_id = b.lca_id
	</select>
	
	<!--
	<select id="elions.uw.selectEmaiCabang" resultClass="java.util.HashMap" parameterClass="string">
		select lb_email from eka.lst_branch where lb_id = #value#
	</select>
	-->

	<select id="elions.uw.selectEmailCabang" resultClass="string" parameterClass="string">
		select lar_email from eka.lst_addr_region where lar_lca_id = #value#
	</select>
	
	<select id="elions.uw.selectEmailCabangFromKodeAgen" resultClass="string" parameterClass="string">
		select c.lar_email from eka.mst_agent a, eka.lst_region b, eka.lst_addr_region c where a.msag_id = #value# and a.msag_active = 1
			and a.lca_id=b.lca_id and a.lwk_id=b.lwk_id and a.lsrg_id=b.lsrg_id and b.lar_id=c.lar_id
	</select>
	
	<select id="elions.uw.selectCabangFromSpaj_lar" resultClass="java.util.HashMap" parameterClass="string">
		select lca_id||lwk_id||lsrg_id "region", lku_id from eka.mst_policy 
		where reg_spaj=rpad(replace(#value#,'.'),11,' ')
		or mspo_policy_no=rpad(replace(#value#,'.'),14,' ')
	</select>	

	<!-- Select kurs hari ini from spaj -->
	<select id="elions.uw.selectTodayKurs" resultMap="elions.uw.selectTodayKurs.result" parameterClass="java.util.HashMap">
		select * from eka.lst_daily_currency where lku_id=#lku_id# and to_char(lkh_date,'yyyymmdd') = to_char(#tanggal#,'yyyymmdd')
	</select>

	<!-- Select kurs bulan ini from spaj -->
	<select id="elions.uw.selectMonthlyKurs" resultClass="double" parameterClass="java.util.HashMap">
		SELECT lmk_nilai
		  FROM eka.lst_monthly_kurs
		 WHERE lmk_year = #tahun# AND lmk_month = #bulan# AND lku_id = #lku#
 	</select>

	<!-- Select age from spaj -->
	<select id="elions.uw.selectAgeFromSPAJ" parameterClass="string" resultClass="int">
		SELECT mste_age
		  FROM eka.mst_insured
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectgetFlagTelemarketing" parameterClass="string" resultClass="int">
		SELECT nvl(mste_flag_ref_telemarket, 0)
		  FROM eka.mst_insured
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<!-- Select Nomor Polis from View Polis -->
	<select id="elions.uw.selectNoPolisFromSpaj" parameterClass="string" resultClass="string">
		SELECT no_polis
		  FROM eka.v_polis
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.uw.selectProductInsured" parameterClass="java.util.HashMap" resultMap="elions.uw.selectProductInsured.result">
		SELECT   reg_spaj, mste_insured_no, lsbs_id, lsdbs_number, lku_id, mspr_tsi,
		         mspr_tsi_pa_a, mspr_tsi_pa_b, mspr_tsi_pa_c, mspr_tsi_pa_d,
		         mspr_tsi_pa_m, mspr_class, mspr_unit, mspr_persen, mspr_premium,
		         nvl(mspr_discount,0) mspr_discount, mspr_ref_no, mspr_active,
		         TO_CHAR (lsbs_id) || '~X' || TO_CHAR (lsdbs_number) AS prod_id,
		         mspr_rate, 999.99 AS disc, mspr_extra, mspr_ins_period,
		         mspr_beg_date, mspr_end_date, mspr_end_pay, mspr_tt,mspr_bunga_kpr
		    FROM eka.mst_product_insured
		   WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND mste_insured_no = #ins_no#
		         AND mspr_active = 1
		ORDER BY lsbs_id ASC
	</select>
	
	<select id="elions.uw.selectBiayaPolis" parameterClass="java.util.HashMap" resultClass="double">
		SELECT msbi_policy_cost
		  FROM eka.mst_billing
		 WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ') 
		 AND msbi_premi_ke = #premi# AND msbi_tahun_ke = #tahun#
	</select>
	
	<select id="elions.uw.selectMaxRkDateFromTitipanPremi" parameterClass="string" resultClass="date">
		select max(msdp_date_book) from eka.mst_deposit_premium where reg_spaj=rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectTagPaymentCountStableLink" parameterClass="string" resultClass="int">
		SELECT count(*)
		  FROM eka.mst_tag_payment a, eka.mst_billing b, eka.mst_slink s
		 WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND a.reg_spaj = b.reg_spaj
		   AND a.msbi_tahun_ke = b.msbi_tahun_ke
		   AND a.msbi_premi_ke = b.msbi_premi_ke
		   AND b.reg_spaj = s.reg_spaj
		   AND b.msbi_tahun_ke = s.msl_tahun_ke
		   AND b.msbi_premi_ke = s.msl_premi_ke
		   AND s.msl_new = 1
	</select>
	
	<select id="elions.uw.selectTagPaymentCount" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT (a.mspa_payment_id)
		FROM eka.mst_tag_payment a, eka.mst_billing b
		WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ') 
			AND a.reg_spaj = b.reg_spaj
			AND a.msbi_tahun_ke = b.msbi_tahun_ke
			AND a.msbi_premi_ke = b.msbi_premi_ke
	 	<isEqual property="jenis" compareValue="ulink">
			AND b.msbi_beg_date = (select msbi_beg_date from eka.mst_billing where reg_spaj = rpad(replace(#spaj#,'.'),11,' ') and msbi_tahun_ke=1 and msbi_premi_ke=1)
		</isEqual>
	 	<isEqual property="jenis" compareValue="individu">
			AND a.msbi_premi_ke = #premi# AND a.msbi_tahun_ke = #tahun#
	 	</isEqual>		 	
	</select>
		
	<select id="elions.uw.selectMaxRkDate" parameterClass="java.util.HashMap" resultClass="date">
		SELECT MAX (a.mspa_date_book)
		  FROM eka.mst_payment a, eka.mst_tag_payment b, eka.mst_billing c
		 WHERE b.mspa_payment_id = a.mspa_payment_id
		 AND b.reg_spaj = rpad(replace(#spaj#,'.'),11,' ') 
		   AND b.reg_spaj = c.reg_spaj
		   AND b.msbi_tahun_ke = c.msbi_tahun_ke
		   AND b.msbi_premi_ke = c.msbi_premi_ke
		 	<isEqual property="jenis" compareValue="ulink">
				AND c.msbi_beg_date = (select msbi_beg_date from eka.mst_billing where reg_spaj = rpad(replace(#spaj#,'.'),11,' ') and msbi_tahun_ke=1 and msbi_premi_ke=1)
			</isEqual>
		 	<isEqual property="jenis" compareValue="individu">
				 AND b.msbi_premi_ke = #premi# AND b.msbi_tahun_ke = #tahun#
			 </isEqual>		 	
	</select>

	<select id="elions.uw.selectDetailPayment" parameterClass="java.util.HashMap" resultMap="elions.uw.selectDetailPayment.result">	
		SELECT a.mspa_no_voucher, a.mspa_jurnal, b.mstp_value, a.mspa_date_book,
		       a.lku_id, a.lsjb_id, nvl(a.lsrek_id,0) lsrek_id, a.mspa_no_pre, a.mspa_payment_id,
		       a.mspa_old_policy , b.msbi_premi_ke, nvl(c.msbi_flag_topup, 0) msbi_flag_topup, a.mspa_no_jm, a.mspa_no_jm_sa
		  FROM eka.mst_payment a, eka.mst_tag_payment b, eka.mst_billing c
		 WHERE b.mspa_payment_id = a.mspa_payment_id
		   AND b.reg_spaj = c.reg_spaj
		   AND b.msbi_tahun_ke = c.msbi_tahun_ke
		   AND b.msbi_premi_ke = c.msbi_premi_ke
		   AND b.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND b.msbi_tahun_ke = #tahun#
		 	<isEqual property="jenis" compareValue="ulink">
				AND c.msbi_beg_date = (select msbi_beg_date from eka.mst_billing where reg_spaj = rpad(replace(#spaj#,'.'),11,' ') and msbi_tahun_ke=1 and msbi_premi_ke=1)
		 	</isEqual>
		 	<isEqual property="jenis" compareValue="individu">
		   AND b.msbi_premi_ke = #premi#
		 	</isEqual>		 	
	</select>
	
	<select id="elions.uw.selectTanggalJurnal" parameterClass="java.util.HashMap" resultClass="date">
		SELECT tgl_jurnal
		  FROM eka.mst_tbank
		 WHERE no_voucher = rpad(#voucher#,9,' ')
		   AND TO_CHAR (tgl_jurnal, 'YYYY') = #ls_tahun#
	</select>
	
	<select id="elions.uw.selectBusinessGroup" parameterClass="long" resultClass="string">
		SELECT EKA.LST_GROUP_BISNIS.LSGB_GROUP_ACC  
		  FROM EKA.LST_BISNIS,   
				 EKA.LST_GROUP_BISNIS  
		 WHERE EKA.LST_BISNIS.LSGB_ID = EKA.LST_GROUP_BISNIS.LSGB_ID and  
				EKA.LST_BISNIS.LSBS_ID = #value#
	</select>

	<select id="elions.uw.selectBiayaMaterai" parameterClass="java.util.HashMap" resultClass="double">
		SELECT msbi_stamp
		  FROM eka.mst_billing
		 WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ') 
		   AND msbi_tahun_ke = #tahun#
		   AND msbi_premi_ke = #premi#
	</select>

	<select id="elions.uw.selectBiayaMaterai2" parameterClass="java.util.HashMap" resultMap="elions.uw.selectBiayaMaterai2.result">
		SELECT msbi_stamp, msbi_beg_date
		  FROM eka.mst_billing
		 WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ') 
		   AND msbi_tahun_ke = #tahun#
		   AND msbi_premi_ke = #premi#
	</select>

	<select id="elions.uw.selectInfoManfaat" parameterClass="string" resultMap="elions.uw.result.selectInfoManfaat">
		SELECT a.reg_spaj, a.mspo_policy_no, a.mspo_spaj_date, a.mspo_ins_period, a.lwk_id,
		       c.mspr_tsi, c.mspr_premium, a.lscb_id, c.lku_id, c.lsbs_id,
		       c.lsdbs_number, b.mste_age, a.mspo_age, a.mspo_pay_period,
		       a.mspo_umur_beasiswa, b.mste_insured, a.mspo_policy_holder,
		       b.mste_medical, a.mspo_installment, a.lsre_id, 
		        (case when (a.mspo_flag_new != 1 ) or (d.lsbs_id = 189 and d.lsdbs_number between 33 and 62 ) then
                    d.lsdbs_name0
                  else
                    (case when d.lsbs_id = 183 and d.lsdbs_number between 46 and 60 then 
                        substr(lsdbs_name,1,least(23,length(lsdbs_name))) 
                     else
                        d.lsdbs_name end)
               end)lsdbs_name
		  FROM eka.mst_policy a, eka.mst_insured b, eka.mst_product_insured c, eka.lst_det_bisnis d
		 WHERE b.reg_spaj = a.reg_spaj
		   AND c.reg_spaj = b.reg_spaj
		   AND c.mste_insured_no = b.mste_insured_no
		   AND a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		   AND b.mste_insured_no = 1
		   AND c.lsbs_id <![CDATA[ < ]]> 800
		   AND c.mspr_active = 1
		   AND d.lsbs_id = c.lsbs_id
           AND d.lsdbs_number = c.lsdbs_number
	</select>
	
	<select id="elions.uw.selectDetailManfaat" parameterClass="java.util.HashMap" resultMap="elions.uw.result.selectDetailManfaat">
		  SELECT a.lsbs_id, a.lsdbs_number, a.lsman_line,d.flag_packet,
            (case when a.lsbs_id = 184 and a.lsdbs_number =5 and a.lsman_line = 1 then 'MANFAAT ASURANSI ' || '"' ||'SUCCESSFUL FAMILY SAVE' || '"'
                when a.lsbs_id = 96 and a.lsdbs_number =7 and a.lsman_line = 1 then 'MANFAAT ASURANSI ' || '"' ||'HOLYLAND INVEST SILVER'|| '"'
                when a.lsbs_id = 96 and a.lsdbs_number =8 and a.lsman_line = 1 then 'MANFAAT ASURANSI ' || '"' ||'HOLYLAND INVEST GOLD' || '"'
                when a.lsbs_id = 96 and a.lsdbs_number =9 and a.lsman_line = 1 then 'MANFAAT ASURANSI ' || '"' ||'HOLYLAND INVEST PLATINUM' || '"'
                when (b.lsbs_id = 120 AND b.lsdbs_number in (1,2,16,17,18)) then 
                    (case  when d. flag_packet=1 then   'MANFAAT ASURANSI ' || '"' || 'CERDAS (SMiLe Ladies Diamond)'|| '"'
                       	   when d. flag_packet=2 then 'MANFAAT ASURANSI ' || '"' || 'CERDAS (SMiLe Ladies Ruby)'|| '"'
                           when d. flag_packet=3 then 'MANFAAT ASURANSI ' || '"' || 'CERDAS (SMiLe Ladies Pearl)'|| '"'
                           when d. flag_packet=4 then 'MANFAAT ASURANSI ' || '"' || 'CERDAS (SMiLe Ladies Fantastic)'|| '"'
                           when d. flag_packet=5 then 'MANFAAT ASURANSI ' || '"' || 'CERDAS (SMiLe Ladies Excellent)'|| '"'
                     else a.lsman_header end)
                when (b.lsbs_id = 120 AND b.lsdbs_number in (7,8)) then 
                    (case when d. flag_packet=1 then  'MANFAAT ASURANSI ' || '"' || 'EXCELLENT LINK (SMiLe Ladies Diamond)'|| '"'
                      	  when d. flag_packet=2 then  'MANFAAT ASURANSI ' || '"' || 'EXCELLENT LINK  (SMiLe Ladies Ruby)'|| '"'
                          when d. flag_packet=3 then  'MANFAAT ASURANSI ' || '"' || 'EXCELLENT LINK  (SMiLe Ladies Pearl)'|| '"'
                          when d. flag_packet=4 then  'MANFAAT ASURANSI ' || '"' || 'EXCELLENT LINK  (SMiLe Ladies Fantastic)'|| '"' 
                          when d. flag_packet=5 then  'MANFAAT ASURANSI ' || '"' || 'EXCELLENT LINK  (SMiLe Ladies Excellent)'|| '"'
                     else a.lsman_header
                     end)
                when (b.lsbs_id = 129 AND b.lsdbs_number in (11,12)) then
                    (case when d. flag_packet=15 then 'MANFAAT ASURANSI ' || '"' ||'CERDAS (SMiLe Pension Paket A)'|| '"'
                        when d. flag_packet=16 then 'MANFAAT ASURANSI ' || '"' ||'CERDAS (SMiLe Pension Paket B)'|| '"'
                        when d. flag_packet=17 then 'MANFAAT ASURANSI ' || '"' ||'CERDAS (SMiLe Pension Paket C)'|| '"' else a.lsman_header
                     end)               
                when (b.lsbs_id = 129 AND b.lsdbs_number in (5,6)) then
                    (case when d. flag_packet=12 then 'MANFAAT ASURANSI ' || '"' ||'EXCELLENT LINK (For Your Pension Paket 1)'|| '"'
                        when d. flag_packet=13 then 'MANFAAT ASURANSI ' || '"' ||'EXCELLENT LINK  (For Your Pension Paket 2)'|| '"'
                        when d. flag_packet=14 then 'MANFAAT ASURANSI ' || '"' ||'EXCELLENT LINK  (For Your Pension Paket 3)'|| '"' else a.lsman_header
                     end)   
                else 
                    (case when c.mspo_flag_new != 0 then
                            a.lsman_header
                        else
                            a.lsman_header0
                     end)
               end)lsman_header,
               b.mspr_tsi, b.lku_id, ' ' AS judul, ' ' AS manfaat,
               a.lsman_nourut, a.lsman_manfaat
        FROM eka.lst_manfaat a, eka.mst_product_insured b, eka.mst_policy c, eka.mst_insured d, eka.lst_packet e
        WHERE a.lsbs_id = b.lsbs_id
            AND a.lsdbs_number = b.lsdbs_number
            AND b.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
            AND b.reg_spaj = c.reg_spaj
            AND b.reg_spaj = d.reg_spaj
            AND d.flag_packet=e.flag_packet(+)
            AND a.lsbs_id <![CDATA[<]]> 800
            AND a.lsman_nourut = #urut#
        ORDER by a.lsman_line asc
	</select>
	
	<select id="elions.uw.selectDetailManfaatTambahan" parameterClass="string" resultMap="elions.uw.result.selectDetailManfaatTambahan">
		SELECT DISTINCT a.lsbs_id, a.lsdbs_number, a.lsman_line, a.lsman_header,
		                b.lku_id, b.mspr_tsi, ' ' AS tamb_manfaat, a.lsman_nourut
		           FROM eka.lst_manfaat a, eka.mst_product_insured b
		          WHERE a.lsbs_id = b.lsbs_id
		            AND a.lsdbs_number = b.lsdbs_number
		            AND b.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		            AND a.lsbs_id <![CDATA[>=]]> 800	
		ORDER BY a.lsbs_id, a.lsdbs_number, a.lsman_line 
	</select>	
	
	<select id="elions.uw.selectInfoProductInsured" parameterClass="java.util.HashMap" resultMap="elions.uw.result.selectInfoProductInsured">
		SELECT nvl(a.mspr_tsi,0) mspr_tsi, a.mspr_class, decode(a.mspr_unit,null,1,0,1,mspr_unit) mspr_unit
		  FROM eka.mst_product_insured a
		 WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND a.lsbs_id = #lsbs#
	</select>
	
	<select id="elions.uw.selectManfaatPerLine" parameterClass="java.util.HashMap" resultClass="string">
		SELECT eka.tovarchar2 (ROWID, 'eka', 'lst_manfaat', 'lsman_manfaat') lsman_manfaat
		  FROM eka.lst_manfaat a
		 WHERE a.lsbs_id = #lsbs#
		   AND a.lsdbs_number = #lsdbs#
		   AND a.lsman_nourut = #urut#
		   AND a.lsman_line = #line#
	</select>
	
	<select id="elions.uw.selectManfaatRider" parameterClass="java.util.HashMap" resultClass="string">
		SELECT eka.tovarchar2 (ROWID, 'eka', 'lst_manfaat', 'lsman_manfaat') lsman_manfaat
		  FROM eka.lst_manfaat a
		 WHERE a.lsbs_id = #lsbs#
		   AND a.lsdbs_number = #lsdbs#
	</select>
	
	<select id="elions.uw.selectPeriodManfaat" parameterClass="java.util.HashMap" resultMap="elions.uw.result.selectPeriodManfaat">
		SELECT a.mspr_beg_date, a.mspr_ins_period, a.mspr_unit
		  FROM eka.mst_product_insured a
		 WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND a.mste_insured_no = 1
		   AND a.lsbs_id = #lsbs#
		   AND a.lsdbs_number = #lsdbs#
	</select>
	
	<select id="elions.uw.selectInfoBonusProduk" parameterClass="int" resultClass="java.util.HashMap">
		SELECT a.lsbs_ordinary, a.lsbs_tunai, a.lsbs_tahapan, a.lsbs_bonus,
		       a.lsbs_deviden, a.lsbs_saving, a.lsbs_active
		  FROM eka.lst_bisnis a
		 WHERE a.lsbs_id = #value#
	</select>

	<select id="elions.uw.selectNilaiTahapan" parameterClass="java.util.HashMap" resultMap="elions.uw.result.nilai">
		SELECT lstab_tahun_ke tahun_ke, eka.lst_table.lstab_value nilai
		  FROM eka.lst_table
		 WHERE eka.lst_table.lstab_jenis = 3
		   AND eka.lst_table.lsbs_id = #lsbs#
		   AND eka.lst_table.lku_id = #kurs#
		   AND eka.lst_table.lscb_id = #cbid#
		   AND eka.lst_table.lstab_lama_bayar = #lamabayar#
		   AND eka.lst_table.lstab_lama_tanggung = #lamatanggung#
		   AND eka.lst_table.lstab_age = #umur#
		   ORDER BY lstab_tahun_ke
	</select>

	<select id="elions.uw.selectNilaiBonus" parameterClass="java.util.HashMap" resultMap="elions.uw.result.nilai">
		SELECT lstab_tahun_ke tahun_ke, eka.lst_table.lstab_value nilai
		  FROM eka.lst_table
		 WHERE eka.lst_table.lstab_jenis = 4
		   AND eka.lst_table.lsbs_id = #lsbs#
		   AND eka.lst_table.lku_id = #kurs#
		   AND eka.lst_table.lscb_id = #cbid#
		   AND eka.lst_table.lstab_lama_bayar = #lamabayar#
		   AND eka.lst_table.lstab_lama_tanggung = #lamatanggung#
		   AND eka.lst_table.lstab_age = #umur#
		   ORDER BY lstab_tahun_ke
	</select>
	
	<select id="elions.uw.selectNilaiMaturity" parameterClass="java.util.HashMap" resultClass="double">
		SELECT eka.lst_table.lstab_value nilai
		  FROM eka.lst_table
		 WHERE eka.lst_table.lstab_jenis = #jenis#
		   AND eka.lst_table.lsbs_id = #lsbs#
		   AND eka.lst_table.lku_id = #kurs#
		   AND eka.lst_table.lscb_id = #cbid#
		   AND eka.lst_table.lstab_lama_bayar = #lamabayar#
		   AND eka.lst_table.lstab_lama_tanggung = #lamatanggung#
		   AND eka.lst_table.lstab_age = #umur#
		   AND eka.lst_table.LSTAB_TAHUN_KE = #tahun#
		   ORDER BY lstab_tahun_ke
	</select>
	
	<select id="elions.uw.selectNilaiUnderTable" parameterClass="string" resultClass="double">
		SELECT mspo_under_table
		  FROM eka.mst_policy
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	<select id="elions.uw.selectPolicyRelation" parameterClass="string" resultClass="int">
		SELECT lsre_id
		  FROM eka.mst_policy
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
	 </select>

	<select id="elions.uw.selectNamaBusiness" parameterClass="java.util.HashMap" resultClass="string">
		SELECT 
                (case 
                when (a.lsbs_id in (115,117,152) and lsdbs_number = 2)
                        or (a.lsbs_id in (116,118,138,153) and lsdbs_number in (3,4))
                        or (a.lsbs_id in (119,122,139,154) and lsdbs_number in (4,5,6))
                then
                    a.lsbs_judul2
                when (a.lsbs_id in (115,117,152) and lsdbs_number = 1)
                        or (a.lsbs_id in (116,118,138,153) and lsdbs_number in (1,2))
                        or (a.lsbs_id in (119,122,139,154) and lsdbs_number in (1,2,3))
                then a.lsbs_judul1
                when (a.lsbs_id = 162 and lsdbs_number > 6) then 'EKALINK 88 PLUS'
                when (a.lsbs_id = 162 and lsdbs_number > 4) then 'EKALINK 88'
                when (a.lsbs_id in (153) and lsdbs_number = 5)
                        or (a.lsbs_id in (170,171))
                then b.lsdbs_name
                when (a.lsbs_id = 120 and lsdbs_number in (7,8,9)) then 'EXCELLENT LINK'
                when (a.lsbs_id = 202) then 'EXCELLENT LINK SYARIAH'
                when (a.lsbs_id = 120 and lsdbs_number in (10,11,12,22,23,24)) then 'SIMAS POWER LINK'                
                else (a.lsbs_judul1 || ' ' || a.lsbs_judul2) end)
          FROM eka.lst_bisnis a, eka.lst_det_bisnis b
         WHERE a.lsbs_id = #lsbs_id# and a.lsbs_id = b.lsbs_id
         and b.lsdbs_number = #lsdbs_number#
	</select>
	
		<select id="elions.uw.selectNamaBusinessSmile" parameterClass="java.util.HashMap" resultClass="string">
		SELECT 
                (case 
                when (a.lsbs_id in (115,117,152) and lsdbs_number = 2)
                        or (a.lsbs_id in (116,118,138,153) and lsdbs_number in (3,4))
                        or (a.lsbs_id in (119,122,139,154) and lsdbs_number in (4,5,6))
                then
                    a.group_name
                when (a.lsbs_id in (115,117,152) and lsdbs_number = 1)
                        or (a.lsbs_id in (116,118,138,153) and lsdbs_number in (1,2))
                        or (a.lsbs_id in (119,122,139,154) and lsdbs_number in (1,2,3))
                then a.group_name
                when (a.lsbs_id = 162 and lsdbs_number > 6) then 'EKALINK 88 PLUS'
                when (a.lsbs_id = 162 and lsdbs_number > 4) then 'EKALINK 88'
                when (a.lsbs_id in (153) and lsdbs_number = 5)
                        or (a.lsbs_id in (170,171,200))
                then b.lsdbs_name
                when (a.lsbs_id = 120 and lsdbs_number in (7,8,9)) then 'EXCELLENT LINK'
                when (a.lsbs_id = 202 and lsdbs_number not in (4,5,6)) then 'EXCELLENT LINK SYARIAH'
                when (a.lsbs_id = 215 and lsdbs_number in (4)) then 'B SMiLe Insurance Syariah'
                when (a.lsbs_id = 120 and lsdbs_number in (10,11,12,22,23,24)) then 'SIMAS POWER LINK'
                when (a.lsbs_id = 202 and lsdbs_number in (4,5,6)) then 'SIMAS POWER LINK SYARIAH'
                when (a.lsbs_id = 190 and lsdbs_number in (3,4)) then 'SMiLe LINK 99'
                when (a.lsbs_id = 190 AND lsdbs_number in (5)) then 'VIP Family Plan SINGLE'
                when (a.lsbs_id = 190 AND lsdbs_number in (6)) then 'VIP Family Plan REGULER'
                else (a.group_name) end)
          FROM eka.lst_bisnis a, eka.lst_det_bisnis b
         WHERE a.lsbs_id = #lsbs_id# and a.lsbs_id = b.lsbs_id
         and b.lsdbs_number = #lsdbs_number#
	</select>

	 <select id="elions.uw.selectPayMode" parameterClass="string" resultClass="int">
		select lscb_id from eka.mst_policy where reg_spaj = rpad(replace(#value#,'.'),11,' ')
	 </select>
	 
	 <select id="elions.uw.selectPayPeriod" parameterClass="string" resultClass="int">
		select mspo_pay_period from eka.mst_policy where reg_spaj = rpad(replace(#value#,'.'),11,' ')
	 </select>
	 
	 <select id="elions.uw.selectBiayaTU" parameterClass="string" resultClass="int">
		select distinct mbu_persen from eka.mst_biaya_ulink where reg_spaj = rpad(replace(#value#,'.'),11,' ') and ljb_id = 4
	 </select>
	 
	 <select id="elions.uw.selectBusinessNumber" parameterClass="string" resultClass="int">
		 select lsdbs_number from eka.mst_product_insured where lsbs_id <![CDATA[<]]> 300 and reg_spaj = rpad(replace(#value#,'.'),11,' ')
	 </select>
	 
	 <select id="elions.uw.selectBegDate" parameterClass="string" resultClass="java.util.Date">
		 select mspr_beg_date from eka.mst_product_insured where lsbs_id <![CDATA[<]]> 300 and reg_spaj = rpad(replace(#value#,'.'),11,' ')
	 </select>

	<select id="elions.uw.report.selectViewStableLink" parameterClass="string" resultClass="java.util.HashMap">
		SELECT n.flag_bulanan, a.reg_spaj, a.mspo_policy_no, lpad(c.lsbs_id,3,0) lsbs_id, c.lsdbs_number, d.mcl_jenis,
				decode(d.mcl_jenis, 1, eka.pemegang(d.mcl_id, TRIM (d.mcl_first), a.mspo_age, d.mcl_jenis, 1), 'Bpk/Ibu  ' || nvl(p.lti_note,'') || ' ' || TRIM(d.mcl_first)) AS nama_pp, 
				f.msap_address address1, (TRIM (nvl(g.lska_note,f.kota)) || ' ' || f.msap_zip_code) address2, 
				c.mspr_tsi, N.msl_mgi,n.msl_premi,
				(case when c.mspr_beg_date <![CDATA[<]]> to_date('01/12/2012','dd/MM/yyyy') then
			        (case 
			            when (c.lsbs_id = 152 and i.lsdbs_number = 2) then 'EKALINK 80 SYARIAH'
			            when (c.lsbs_id = 153 and i.lsdbs_number in (3,4)) then 'EKALINK 80 PLUS SYARIAH'
			            when (c.lsbs_id = 154 and i.lsdbs_number in (5,6)) then 'EKALINK 18 SYARIAH'
			            when (c.lsbs_id = 162 and i.lsdbs_number in (5,6)) then 'EKALINK 88'
			            when (c.lsbs_id = 162 and i.lsdbs_number in (7,8)) then 'EKALINK 88 PLUS'
			            when (c.lsbs_id=  186 and i.lsdbs_number = 3) then 'SIMAS PROGRESSIVE LINK'
			            when (c.lsbs_id=  186 and i.lsdbs_number != 3) then 'PROGRESSIVE LINK'
			            when (c.lsbs_id in (164, 174)) then 
			            (case when c.lsbs_id = 164 and c.lsdbs_number in (1,12) then 'STABLE LINK'
			                when c.lsbs_id = 164 and c.lsdbs_number in (2,11) then 'SIMAS STABIL LINK'
			                when c.lsbs_id = 164 and (c.lsdbs_number <![CDATA[>]]> 2 and c.lsdbs_number <![CDATA[<]]> 9) then 'STABLE LINK'
			            else i.lsdbs_name || nvl((select decode(flag_bulanan, 0, '', 1,' MANFAAT BULANAN', 3,' MANFAAT TRIWULANAN', 6,' MANFAAT SEMESTERAN', 12,' MANFAAT TAHUNAN') from eka.mst_slink where msl_no = 1 and reg_spaj = a.reg_spaj), '')end)
			            when c.lsbs_id in (115,116,117,118,119,122,138,139,152,153,154,164) then i.lsdbs_name0 else h.lsbs_name0 end)
			    else
			        (case 
			            when (c.lsbs_id = 152 and i.lsdbs_number = 2) then 'EKALINK 80 SYARIAH'
			            when (c.lsbs_id = 153 and i.lsdbs_number in (3,4)) then 'SMiLe LINK 88 PLUS SYARIAH'
			            when (c.lsbs_id = 154 and i.lsdbs_number in (5,6)) then 'EKALINK 18 SYARIAH'
			            when (c.lsbs_id = 162 and i.lsdbs_number in (5,6)) then 'EKALINK 88'
			            when (c.lsbs_id = 162 and i.lsdbs_number in (7,8)) then 'EKALINK 88 PLUS'
			            when (c.lsbs_id=  186 and i.lsdbs_number = 3) then 'SIMAS PROGRESSIVE LINK'
			            when (c.lsbs_id=  186 and i.lsdbs_number != 3) then 'PROGRESSIVE LINK'
			            when (c.lsbs_id in (164, 174)) then 
			            (case when c.lsbs_id = 164 and c.lsdbs_number in (1,12) then 'STABLE LINK'
			                when c.lsbs_id = 164 and c.lsdbs_number in (2,11) then 'SIMAS STABIL LINK'
			                when c.lsbs_id = 164 and (c.lsdbs_number <![CDATA[>]]> 2 and c.lsdbs_number <![CDATA[<]]> 9) then 'STABLE LINK'
			            else i.lsdbs_name || nvl((select decode(flag_bulanan, 0, '', 1,' MANFAAT BULANAN', 3,' MANFAAT TRIWULANAN', 6,' MANFAAT SEMESTERAN', 12,' MANFAAT TAHUNAN') from eka.mst_slink where msl_no = 1 and reg_spaj = a.reg_spaj), '')end)
			            when c.lsbs_id in (115,116,117,118,119,122,138,139,152,153,154,164) then eka.f_lsdbs(c.reg_spaj, c.lsbs_id, c.lsdbs_number) else eka.f_lsbs(c.reg_spaj, c.lsbs_id) end)
			    end) nama_plan,
				A.MSPO_AGE, B.MSTE_AGE, m.lku_id, m.lku_symbol, l.lscb_print, l.lscb_pay_mode, 
				decode(a.mspo_pay_period,1,'SEKALIGUS',decode(a.mspo_installment, null, a.mspo_pay_period, a.mspo_installment)||' TAHUN') pay_period, 
				b.mste_beg_date, n.msl_rate,
				n.msl_tgl_nab, 
				(nvl(q.lti_note,'') || ' ' || TRIM(e.mcl_first)) AS nama_tt, 
				a.mspo_pay_period,
				a.lssp_id, n.msl_bdate, n.msl_edate, a.mspo_ins_period,
				n.msl_nab, n.msl_bunga,
				decode(n.msl_mgi,1,'BULANAN',3,'TRIWULANAN',6,'SEMESTERAN',12,'TAHUNAN')lscb_rider,
        		decode((select distinct mrs_rider_cb from eka.mst_rider_save where reg_spaj=a.reg_spaj),0,'BAYAR LANGSUNG',1,'POTONG BUNGA')jenis_lscb_rider,
				(select count(lsbs_id) from eka.mst_product_insured where lsbs_id <![CDATA[>=]]>800 and reg_spaj=a.reg_spaj) total_rider,
				(select sum(mrs_premi) from eka.mst_rider_save where reg_spaj=a.reg_spaj) premi_rider,
				r.lsbp_id, r.mrc_cabang cabang_bank, r.mrc_nama nama_rek, r.mrc_no_ac no_rek, r.mrc_kota kota_bank, s.lsbp_nama nama_bank
				  FROM eka.mst_policy a,
				       eka.mst_insured b,
				       (SELECT *
				          FROM eka.mst_product_insured
				         WHERE mspr_active = 1 AND lsbs_id <![CDATA[<]]> 800) c,
				       eka.mst_client_new d,
				       eka.mst_client_new e,
				       eka.mst_address_billing f,
				       eka.lst_kabupaten g,
				       eka.lst_bisnis h,
				       eka.lst_det_bisnis i,
				       eka.lst_pay_mode l,
					   eka.lst_kurs m,
					   (SELECT  flag_bulanan, reg_spaj, msl_mgi, msl_rate, msl_nab, msl_tgl_nab, msl_edate, msl_bdate, SUM (msl_bunga) msl_bunga, msl_premi
						    FROM eka.mst_slink
						   WHERE reg_spaj = #value#
							 AND msl_new = 1
						     AND msl_bdate = (SELECT msl_bdate
						                        FROM eka.mst_slink
						                       WHERE msl_no = 1 AND reg_spaj = #value#)
						GROUP BY flag_bulanan, reg_spaj, msl_mgi, msl_rate, msl_nab, msl_tgl_nab, msl_edate, msl_bdate,msl_premi) N,
						eka.lst_title p,
						eka.lst_title q,
						eka.mst_rek_client r,
						eka.lst_bank_pusat s
				 WHERE g.lska_id(+) = f.lska_id
				   AND a.mspo_policy_holder = d.mcl_id
				   AND a.reg_spaj = b.reg_spaj
				   AND b.reg_spaj = c.reg_spaj
				   AND b.reg_spaj = n.reg_spaj
				   AND b.mste_insured_no = c.mste_insured_no
				   AND b.mste_insured = e.mcl_id
				   AND f.reg_spaj = a.reg_spaj
				   AND c.lsbs_id = h.lsbs_id
				   AND c.lsbs_id = i.lsbs_id(+)
				   AND c.lsdbs_number = i.lsdbs_number(+)
				   AND a.reg_spaj = #value#
				   AND a.lscb_id = l.lscb_id
				   AND a.lku_id = m.lku_id
				   AND d.lti_id = p.lti_id(+)
				   AND e.lti_id = q.lti_id(+)
				   AND a.reg_spaj = r.reg_spaj
				   AND r.lsbp_id = s.lsbp_id
	</select>
	
	<select id="elions.uw.report.selectViewStableLinkTopUp" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT EKA.MST_POLICY.MSPO_POLICY_NO, 
					EKA.MST_POLICY.MSPO_PAY_PERIOD,  
					EKA.MST_POLICY.LSSP_ID,  
		         EKA.MST_POLICY.LSCB_ID,
		         EKA.LST_PAY_MODE.LSCB_PAY_MODE,   
		         MST_CLIENT_a.MCL_FIRST as nm_tt,   
		         MST_CLIENT_b.MCL_FIRST as nm_pp,   
		         EKA.MST_PRODUCT_INSURED.MSPR_TSI, EKA.LST_KURS.LKU_SYMBOL ,
					EKA.MST_PRODUCT_INSURED.LSBS_ID,   
					EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER,   
		         EKA.MST_INSURED.MSTE_AGE,   
		         EKA.MST_POLICY.LKU_ID,   EKA.MST_PERSON.MSPE_SEX  , 
		         EKA.MST_ADDRESS_BILLING.MSAP_ADDRESS,   
		         EKA.MST_ADDRESS_BILLING.MSAP_ZIP_CODE,   
		         EKA.LST_KABUPATEN.LSKA_NOTE,  
					EKA.MST_SLINK.MSL_POSISI,
					EKA.MST_SLINK.REG_SPAJ, 
					EKA.MST_SLINK.MSL_NO, 
					EKA.MST_SLINK.FLAG_BULANAN,  
		         EKA.MST_SLINK.MSL_PREMI , 
					EKA.MST_SLINK.MSL_PROSES_DATE,
		         EKA.MST_INSURED.MSTE_BEG_DATE, SYSDATE as tgl_nab, 3 as judul_id, 1 as fisibel,  
					EKA.MST_SLINK.MSL_BDATE,
					EKA.MST_SLINK.MSL_EDATE,
					EKA.MST_SLINK.MSL_TU_KE,
					EKA.MST_SLINK.MSL_MGI,
					EKA.MST_SLINK.MSL_RATE,
					EKA.MST_SLINK.MSL_BUNGA,
					EKA.MST_SLINK.MSL_TGL_NAB,
					(case 
						when (EKA.MST_PRODUCT_INSURED.lsbs_id = 152 and eka.lst_det_bisnis.lsdbs_number = 2) then 'EKALINK 80 SYARIAH'
						when (EKA.MST_PRODUCT_INSURED.lsbs_id = 153 and eka.lst_det_bisnis.lsdbs_number in (3,4)) then 'EKALINK 80 PLUS SYARIAH'
						when (EKA.MST_PRODUCT_INSURED.lsbs_id = 154 and eka.lst_det_bisnis.lsdbs_number in (5,6)) then 'EKALINK 18 SYARIAH'
						when (EKA.MST_PRODUCT_INSURED.lsbs_id = 162 and eka.lst_det_bisnis.lsdbs_number in (5,6)) then 'EKALINK 88'
						when EKA.MST_PRODUCT_INSURED.lsbs_id in (115,116,117,118,119,122,138,139,164) then eka.f_lsdbs(EKA.MST_PRODUCT_INSURED.reg_spaj, EKA.MST_PRODUCT_INSURED.lsbs_id, EKA.MST_PRODUCT_INSURED.lsdbs_number) else eka.f_lsbs(EKA.MST_PRODUCT_INSURED.reg_spaj, EKA.MST_PRODUCT_INSURED.lsbs_id) end) nama_plan,
				eka.mst_rek_client.lsbp_id, eka.mst_rek_client.mrc_cabang cabang_bank, eka.mst_rek_client.mrc_nama nama_rek, eka.mst_rek_client.mrc_no_ac no_rek, eka.mst_rek_client.mrc_kota kota_bank, eka.lst_bank_pusat.lsbp_nama nama_bank
		    FROM EKA.MST_CLIENT MST_CLIENT_a,   
		         EKA.MST_INSURED,   
		         EKA.MST_POLICY,  
					EKA.LST_KURS, 
		         EKA.MST_PRODUCT_INSURED,   
		         EKA.MST_PERSON, 
		         EKA.MST_CLIENT MST_CLIENT_b,   
		         EKA.LST_PAY_MODE, 
		         EKA.LST_KABUPATEN,  
					EKA.MST_SLINK,
		         EKA.MST_ADDRESS_BILLING,
				 eka.lst_bisnis,
		         eka.lst_det_bisnis,
		         eka.mst_rek_client,
		         eka.lst_bank_pusat		   
		   WHERE ( EKA.MST_ADDRESS_BILLING.LSKA_ID = EKA.LST_KABUPATEN.LSKA_ID (+)) and  
		         ( EKA.MST_INSURED.MSTE_INSURED = MST_CLIENT_a.MCL_ID ) and  
		         ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ ) and  
		      	( EKA.MST_POLICY.REG_SPAJ = EKA.MST_SLINK.REG_SPAJ ) and  
		         ( EKA.MST_PRODUCT_INSURED.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ ) and  
		         ( EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO = EKA.MST_INSURED.MSTE_INSURED_NO ) and  
		         ( EKA.MST_POLICY.MSPO_POLICY_HOLDER = MST_CLIENT_b.MCL_ID ) and  
		         ( EKA.MST_POLICY.LSCB_ID = EKA.LST_PAY_MODE.LSCB_ID ) and  
					( MST_CLIENT_a.MCL_ID = EKA.MST_PERSON.MCL_ID ) and 
		 			( EKA.MST_POLICY.LKU_ID = EKA.LST_KURS.LKU_ID ) and 
				   ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_ADDRESS_BILLING.REG_SPAJ ) and 
					(  EKA.MST_SLINK.MSL_KODE = 5    ) AND
					( EKA.MST_PRODUCT_INSURED.LSBS_ID <![CDATA[<]]> 300) and
				  (EKA.MST_PRODUCT_INSURED.lsbs_id = eka.lst_bisnis.lsbs_id)  AND 
				  (EKA.MST_PRODUCT_INSURED.lsbs_id = eka.lst_det_bisnis.lsbs_id(+)) AND 
				  (EKA.MST_PRODUCT_INSURED.lsdbs_number = eka.lst_det_bisnis.lsdbs_number(+)) AND
		         ( ( EKA.MST_SLINK.REG_SPAJ = #spaj# ) AND        
					( EKA.MST_SLINK.MSL_TU_KE = #tu_ke# ) ) AND
				  (EKA.MST_POLICY.REG_SPAJ = eka.mst_rek_client.REG_SPAJ) AND
				  (eka.mst_rek_client.lsbp_id = eka.lst_bank_pusat.lsbp_id)
	</select>
	
	<select id="elions.uw.report.selectViewPSaveTopUp" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT EKA.MST_POLICY.MSPO_POLICY_NO, 
					EKA.MST_POLICY.MSPO_PAY_PERIOD,  
					EKA.MST_POLICY.LSSP_ID,  
		         EKA.MST_POLICY.LSCB_ID,
		         EKA.LST_PAY_MODE.LSCB_PAY_MODE,   
		         MST_CLIENT_a.MCL_FIRST as nm_tt,   
		         MST_CLIENT_b.MCL_FIRST as nm_pp,   
		         EKA.MST_PRODUCT_INSURED.MSPR_TSI, EKA.LST_KURS.LKU_SYMBOL ,
					EKA.MST_PRODUCT_INSURED.LSBS_ID,   
					EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER,   
		         EKA.MST_INSURED.MSTE_AGE,   
		         EKA.MST_POLICY.LKU_ID,   EKA.MST_PERSON.MSPE_SEX  , 
		         EKA.MST_ADDRESS_BILLING.MSAP_ADDRESS,   
		         EKA.MST_ADDRESS_BILLING.MSAP_ZIP_CODE,   
		         EKA.LST_KABUPATEN.LSKA_NOTE,  
					EKA.MST_PSAVE.MPS_POSISI,
					EKA.MST_PSAVE.REG_SPAJ, 
					EKA.MST_PSAVE.MPS_NO, 
					EKA.MST_PSAVE.FLAG_BULANAN,  
		         EKA.MST_PSAVE.MPS_PREMI , 
					EKA.MST_PSAVE.MPS_INPUT_DATE MSL_PROSES_DATE,
		         EKA.MST_INSURED.MSTE_BEG_DATE, SYSDATE as tgl_nab, 3 as judul_id, 1 as fisibel,  
					EKA.MST_PSAVE.MPS_BDATE,
					EKA.MST_PSAVE.MPS_EDATE,
					EKA.MST_PSAVE.MPS_TU_KE,
					EKA.MST_PSAVE.MPS_MGI,
					EKA.MST_PSAVE.MPS_RATE,
					EKA.MST_PSAVE.MPS_BUNGA,
				(case 
						when (EKA.MST_PRODUCT_INSURED.lsbs_id = 152 and eka.lst_det_bisnis.lsdbs_number = 2) then 'EKALINK 80 SYARIAH'
						when (EKA.MST_PRODUCT_INSURED.lsbs_id = 153 and eka.lst_det_bisnis.lsdbs_number in (3,4)) then 'EKALINK 80 PLUS SYARIAH'
						when (EKA.MST_PRODUCT_INSURED.lsbs_id = 154 and eka.lst_det_bisnis.lsdbs_number in (5,6)) then 'EKALINK 18 SYARIAH'
						when (EKA.MST_PRODUCT_INSURED.lsbs_id = 162 and eka.lst_det_bisnis.lsdbs_number in (5,6)) then 'EKALINK 88'
						when (EKA.MST_PRODUCT_INSURED.lsbs_id = 188 and eka.lst_det_bisnis.lsdbs_number in (2)) then 'SIMAS PRIMA'
						when (EKA.MST_PRODUCT_INSURED.lsbs_id = 188 and eka.lst_det_bisnis.lsdbs_number in (8)) then 'DANAMAS PRIMA'
						when (EKA.MST_PRODUCT_INSURED.lsbs_id = 188 and eka.lst_det_bisnis.lsdbs_number not in (2,8)) then 'POWERSAVE'
						when EKA.MST_PRODUCT_INSURED.lsbs_id in (115,116,117,118,119,122,138,139,164) then eka.f_lsdbs(EKA.MST_PRODUCT_INSURED.reg_spaj, EKA.MST_PRODUCT_INSURED.lsbs_id, EKA.MST_PRODUCT_INSURED.lsdbs_number) else eka.f_lsbs(EKA.MST_PRODUCT_INSURED.reg_spaj, EKA.MST_PRODUCT_INSURED.lsbs_id) end) nama_plan,
				eka.mst_rek_client.lsbp_id, eka.mst_rek_client.mrc_cabang cabang_bank, eka.mst_rek_client.mrc_nama nama_rek, eka.mst_rek_client.mrc_no_ac no_rek, eka.mst_rek_client.mrc_kota kota_bank, eka.lst_bank_pusat.lsbp_nama nama_bank
		    FROM EKA.MST_CLIENT MST_CLIENT_a,   
		         EKA.MST_INSURED,   
		         EKA.MST_POLICY,  
					EKA.LST_KURS, 
		         EKA.MST_PRODUCT_INSURED,   
		         EKA.MST_PERSON, 
		         EKA.MST_CLIENT MST_CLIENT_b,   
		         EKA.LST_PAY_MODE, 
		         EKA.LST_KABUPATEN,  
					EKA.MST_PSAVE,
		         EKA.MST_ADDRESS_BILLING,
				 eka.lst_bisnis,
		         eka.lst_det_bisnis,
		         eka.mst_rek_client,
		         eka.lst_bank_pusat		   
		   WHERE ( EKA.MST_ADDRESS_BILLING.LSKA_ID = EKA.LST_KABUPATEN.LSKA_ID (+)) and  
		         ( EKA.MST_INSURED.MSTE_INSURED = MST_CLIENT_a.MCL_ID ) and  
		         ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ ) and  
		      	( EKA.MST_POLICY.REG_SPAJ = EKA.MST_PSAVE.REG_SPAJ ) and  
		         ( EKA.MST_PRODUCT_INSURED.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ ) and  
		         ( EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO = EKA.MST_INSURED.MSTE_INSURED_NO ) and  
		         ( EKA.MST_POLICY.MSPO_POLICY_HOLDER = MST_CLIENT_b.MCL_ID ) and  
		         ( EKA.MST_POLICY.LSCB_ID = EKA.LST_PAY_MODE.LSCB_ID ) and  
					( MST_CLIENT_a.MCL_ID = EKA.MST_PERSON.MCL_ID ) and 
		 			( EKA.MST_POLICY.LKU_ID = EKA.LST_KURS.LKU_ID ) and 
				   ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_ADDRESS_BILLING.REG_SPAJ ) and 
					(  EKA.MST_PSAVE.MPS_KODE = 5    ) AND
					( EKA.MST_PRODUCT_INSURED.LSBS_ID <![CDATA[<]]> 300) and
				  (EKA.MST_PRODUCT_INSURED.lsbs_id = eka.lst_bisnis.lsbs_id)  AND 
				  (EKA.MST_PRODUCT_INSURED.lsbs_id = eka.lst_det_bisnis.lsbs_id(+)) AND 
				  (EKA.MST_PRODUCT_INSURED.lsdbs_number = eka.lst_det_bisnis.lsdbs_number(+)) AND
		         ( ( EKA.MST_PSAVE.REG_SPAJ = #spaj# ) AND        
					( EKA.MST_PSAVE.MPS_TU_KE = #tu_ke# ) ) AND
				  (EKA.MST_POLICY.REG_SPAJ = eka.mst_rek_client.REG_SPAJ) AND
				  (eka.mst_rek_client.lsbp_id = eka.lst_bank_pusat.lsbp_id)
	</select>

	<select id="elions.uw.report.selectViewUlink" parameterClass="string" resultClass="java.util.HashMap">
		SELECT a.reg_spaj, a.mspo_policy_no, lpad(c.lsbs_id,3,0) lsbs_id, d.mcl_jenis,
        (case 
            when (select pic_jenis from eka.mst_company_contact where mcl_id = d.mcl_id) = 2
            then 
                (case when (select nvl(lti_id,0) from eka.mst_client_new where mcl_id = d.mcl_id) = 0
                      then
                        (select mcl_first from eka.mst_client_new where mcl_id = d.mcl_id)
                    else
                        (select lti_note ||' '|| d.mcl_first
                            from eka.lst_title 
 							where lti_jn_title in (0,1)
                            and lti_id = (select lti_id from eka.mst_client_new where mcl_jenis in (0,1) and mcl_id = d.mcl_id))
                 end)
            else
                (case when (select nvl(lti_id,0) from eka.mst_client_new where mcl_id = d.mcl_id) = 0
                      then
                        (select mcl_first from eka.mst_client_new where mcl_id = d.mcl_id)
                    else
                        eka.pemegang(d.mcl_id, TRIM (d.mcl_first), a.mspo_age, d.mcl_jenis, 1)                            
                   end)
        end) nama_pp,
		f.msap_address address1, (nvl(TRIM (g.lska_note), f.kota) || ' ' || f.msap_zip_code) address2, 
		c.mspr_tsi,r.nama_packet_print nama_packet,b.flag_packet,
		(case when c.mspr_beg_date <![CDATA[<]]> to_date('01/12/2012','dd/MM/yyyy') then
            (case 
                when (c.lsbs_id = 152 and i.lsdbs_number = 2) then 'EKALINK 80 SYARIAH'
                 when (c.lsbs_id = 120 AND i.lsdbs_number in (22,23,24)) then 'SIMAS POWER LINK'
                when (c.lsbs_id = 153 and i.lsdbs_number in (3,4)) then 'EKALINK 80 PLUS SYARIAH'
                when (c.lsbs_id = 154 and i.lsdbs_number in (5,6)) then 'EKALINK 18 SYARIAH'
                when (c.lsbs_id = 162 and i.lsdbs_number in (5,6)) then 'EKALINK 88'
                when (c.lsbs_id = 162 and i.lsdbs_number in (7,8)) then 'EKALINK 88 PLUS'
                when (c.lsbs_id = 166 and i.lsdbs_number = 2) then 'BERKAH LINK'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (1)) then 'SMiLe LINK BRIDGE SINGLE'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (2)) then 'SMiLe LINK BRIDGE REGULER'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (3)) then 'SMiLe LINK 99 SINGLE'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (4)) then 'SMiLe LINK 99 REGULER'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (5)) then 'VIP Family Plan SINGLE'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (6)) then 'VIP Family Plan REGULER'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (8)) then 'SMiLe OPTIMA LINK REGULER'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (7)) then 'SMiLe OPTIMA LINK SEKALIGUS'
                when (c.lsbs_id = 121) then 'CERDAS'
                when (c.lsbs_id = 134 and i.lsdbs_number = 3) then 'PRIORITY LINK'
                when (c.lsbs_id = 120 AND i.lsdbs_number = 9 ) then 'EXCELLENT LINK'
                when (c.lsbs_id = 120 AND i.lsdbs_number in (1,2,16,17,18)) then 
                 		(case 	when b. flag_packet=1 then 'CERDAS (SMiLe Ladies Diamond)'
                            	when b. flag_packet=2 then 'CERDAS (SMiLe Ladies Ruby)' 
                            	when b. flag_packet=3 then 'CERDAS (SMiLe Ladies Pearl)'
                            	when b. flag_packet=4 then 'CERDAS (SMiLe Ladies Fantastic)' 
                            	when b. flag_packet=5 then 'CERDAS (SMiLe Ladies Excellent)' else 'CERDAS'
                             	end)
                when (c.lsbs_id = 120 AND i.lsdbs_number in (7,8)) then 
                 		(case 	when b. flag_packet=1 then 'EXCELLENT LINK(SMiLe Ladies Diamond)'
                            	when b. flag_packet=2 then 'EXCELLENT LINK(SMiLe Ladies Ruby)' 
                            	when b. flag_packet=3 then 'EXCELLENT LINK(SMiLe Ladies Pearl)'
                            	when b. flag_packet=4 then 'EXCELLENT LINK(SMiLe Ladies Fantastic)' 
                            	when b. flag_packet=5 then 'EXCELLENT LINK(SMiLe Ladies Excellent)' else 'EXCELLENT LINK'
                             	end)
                when (c.lsbs_id = 127 AND i.lsdbs_number in (7,8,9,10)) then 'EXCELLENT LINK (For Your Education)'
                when (c.lsbs_id = 129 AND i.lsdbs_number in (7,8)) then 'EXCELLENT LINK (For Your Pension)'
                when (c.lsbs_id = 129 AND i.lsdbs_number in (9,10)) then 'EXCELLENT LINK (For Your Pension Plus)'
                when (c.lsbs_id = 129 AND i.lsdbs_number in (11,12)) then
                 	    (case   when b. flag_packet=15 then 'CERDAS (SMiLe Pension Paket A)'
                            	when b. flag_packet=16 then 'CERDAS (SMiLe Pension Paket B)' 
                            	when b. flag_packet=17 then 'CERDAS (SMiLe Pension Paket C)' else 'CERDAS'
                             	end)
                when (c.lsbs_id = 129 AND i.lsdbs_number in (5,6)) then
                 	    (case   when b. flag_packet=12 then 'EXCELLENT LINK (For Your Pension Paket 1)'
                            	when b. flag_packet=13 then 'EXCELLENT LINK (For Your Pension Paket 2)' 
                            	when b. flag_packet=14 then 'EXCELLENT LINK (For Your Pension Paket 3)' else 'EXCELLENT LINK FOR YOUR PENSION'
                             	end)
                when (c.lsbs_id = 120 AND i.lsdbs_number in (10,11,12)) then 'SIMAS POWER LINK'
                when c.lsbs_id in (115,116,117,118,119,122,138,139,152,153,154,159,160,164,174) then i.lsdbs_name0 else h.lsbs_name0 end)
            else
               (case 
                when (c.lsbs_id = 152 and i.lsdbs_number = 2) then 'EKALINK 80 SYARIAH'
                when (c.lsbs_id = 153 and i.lsdbs_number in (3,4)) then 'SMiLe LINK 88 SYARIAH'
                when (c.lsbs_id = 154 and i.lsdbs_number in (5,6)) then 'EKALINK 18 SYARIAH'
                when (c.lsbs_id = 162 and i.lsdbs_number in (5,6)) then 'EKALINK 88'
                when (c.lsbs_id = 162 and i.lsdbs_number in (7,8)) then 'EKALINK 88 PLUS'
                when (c.lsbs_id = 166 and i.lsdbs_number = 2) then 'BERKAH LINK'
                when (c.lsbs_id = 121) then 'CERDAS'
                when  (c.lsbs_id = 120 and i.lsdbs_number in (10,11,12)) then 'SIMAS POWER LINK'
                when (c.lsbs_id = 134 and i.lsdbs_number = 3) then 'PRIORITY LINK'
                when (c.lsbs_id = 120 AND i.lsdbs_number = 9) then 'EXCELLENT LINK'
                when (c.lsbs_id = 120 AND i.lsdbs_number in (1,2,16,17,18)) then 
                 		(case 	when b. flag_packet=1 then 'CERDAS (SMiLe Ladies Diamond)'
                            	when b. flag_packet=2 then 'CERDAS (SMiLe Ladies Ruby)' 
                            	when b. flag_packet=3 then 'CERDAS (SMiLe Ladies Pearl)'
                            	when b. flag_packet=4 then 'CERDAS (SMiLe Ladies Fantastic)' 
                            	when b. flag_packet=5 then 'CERDAS (SMiLe Ladies Excellent)' else 'CERDAS'
                             	end)
                when (c.lsbs_id = 120 AND i.lsdbs_number in (7,8)) then 
                 		(case 	when b. flag_packet=1 then 'EXCELLENT LINK(SMiLe Ladies Diamond)'
                            	when b. flag_packet=2 then 'EXCELLENT LINK(SMiLe Ladies Ruby)' 
                            	when b. flag_packet=3 then 'EXCELLENT LINK(SMiLe Ladies Pearl)'
                            	when b. flag_packet=4 then 'EXCELLENT LINK(SMiLe Ladies Fantastic)' 
                            	when b. flag_packet=5 then 'EXCELLENT LINK(SMiLe Ladies Excellent)' else 'EXCELLENT LINK'
                             	end)                
                when (c.lsbs_id = 127 AND i.lsdbs_number in (7,8,9,10)) then 'EXCELLENT LINK (For Your Education)'
                when (c.lsbs_id = 129 AND i.lsdbs_number in (7,8)) then 'EXCELLENT LINK (For Your Pension)'
                when (c.lsbs_id = 129 AND i.lsdbs_number in (9,10)) then 'EXCELLENT LINK (For Your Pension Plus)'
                when (c.lsbs_id = 129 AND i.lsdbs_number in (11,12)) then
                		(case when b. flag_packet=15 then 'CERDAS (SMiLe Pension Paket A)'
                              when b. flag_packet=16 then 'CERDAS (SMiLe Pension Paket B)' 
                              when b. flag_packet=17 then 'CERDAS (SMiLe Pension Paket C)' else 'CERDAS'
                             end)
                 when (c.lsbs_id = 129 AND i.lsdbs_number in (5,6)) then
                 	    (case   when b. flag_packet=12 then 'EXCELLENT LINK (For Your Pension Paket 1)'
                            	when b. flag_packet=13 then 'EXCELLENT LINK (For Your Pension Paket 2)' 
                            	when b. flag_packet=14 then 'EXCELLENT LINK (For Your Pension Paket 3)' else 'EXCELLENT LINK FOR YOUR PENSION'
                             	end)             
                when (c.lsbs_id = 120 AND i.lsdbs_number in (10,11,12)) then 'SIMAS POWER LINK'
                 when (c.lsbs_id = 120 AND i.lsdbs_number in (22,23,24)) then 'SIMAS POWER LINK'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (1)) then 'SMiLe LINK BRIDGE SINGLE'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (2)) then 'SMiLe LINK BRIDGE REGULER'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (3)) then 'SMiLe LINK 99 SINGLE'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (4)) then 'SMiLe LINK 99 REGULER'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (5)) then 'VIP Family Plan SINGLE'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (7)) then 'SMiLe OPTIMA LINK SEKALIGUS'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (8)) then 'SMiLe OPTIMA LINK REGULER'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (6)) then 'VIP Family Plan REGULER'
                when (c.lsbs_id = 200 AND i.lsdbs_number in (1)) then 'SMiLe LINK BRIDGE SYARIAH SINGLE'
                when (c.lsbs_id = 200 AND i.lsdbs_number in (2)) then 'SMiLe LINK BRIDGE SYARIAHR REGULER'
                when (c.lsbs_id = 200 AND i.lsdbs_number in (3)) then 'SMiLe LINK 99 SYARIAH SINGLE'
                when (c.lsbs_id = 200 AND i.lsdbs_number in (4)) then 'SMiLe LINK 99 SYARIAH REGULER'
                when (c.lsbs_id = 200 AND i.lsdbs_number in (7)) then 'SMiLe LINK ULTIMATE SYARIAH'
                when (c.lsbs_id = 120 AND i.lsdbs_number in (19,20,21)) then 'SMiLe LINK SATU'
                when (c.lsbs_id = 134 AND i.lsdbs_number in (5)) then 'SIMAS PRIME LINK'
                when (c.lsbs_id = 134 AND i.lsdbs_number in (6)) then 'SMiLe Link ProAsset'
               when (c.lsbs_id = 134 AND i.lsdbs_number in (10)) then 'SIMAS PRIME LINK'
                when c.lsbs_id in (115,116,117,118,119,122,138,139,152,153,154,159,160,164,174,199,200) then eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) else i.lsdbs_group_name end)
        end) nama_plan, 
		A.MSPO_AGE, B.MSTE_AGE, m.lku_id, m.lku_symbol, n.mu_jlh_premi, l.lscb_print, l.lscb_pay_mode, 
		decode(a.mspo_pay_period,1,'SEKALIGUS',decode(a.mspo_installment, null, a.mspo_pay_period, a.mspo_installment)||' TAHUN') pay_period, 
		b.mste_beg_date, 
		o.tgl_nab, 
		(nvl(q.lti_note,'') || ' ' || TRIM(e.mcl_first)) AS nama_tt, 
		a.mspo_pay_period,
		a.lssp_id, n.mu_tgl_trans,
		(select sum (mu_jlh_premi) from eka.mst_ulink where reg_spaj = a.reg_spaj and lt_id in (2,5) and mu_tgl_trans = n.mu_tgl_trans) premi_top_up
		  FROM eka.mst_policy a,
		       eka.mst_insured b,
		       (SELECT *
		          FROM eka.mst_product_insured
		         WHERE mspr_active = 1 AND lsbs_id <![CDATA[<]]> 800) c,
		       eka.mst_client_new d,
		       eka.mst_client_new e,
		       eka.mst_address_billing f,
		       eka.lst_kabupaten g,
		       eka.lst_bisnis h,
		       eka.lst_det_bisnis i,
		       eka.lst_pay_mode l,
			   eka.lst_kurs m,
			   (select * from EKA.MST_ULINK where mu_aktif=1 and mu_ke=1) N,
				(SELECT reg_spaj, MAX (mtu_tgl_proses) tgl_nab
				  FROM eka.mst_trans_ulink
				 WHERE mst_trans_ulink.mu_ke = 1 group by reg_spaj) o,
				 eka.lst_title p,
				 eka.lst_title q,
				 eka.lst_packet r
		 WHERE g.lska_id(+) = f.lska_id
		   AND a.mspo_policy_holder = d.mcl_id
		   AND a.reg_spaj = b.reg_spaj
		   AND b.reg_spaj = c.reg_spaj
		   AND b.reg_spaj = n.reg_spaj
		   AND b.mste_insured_no = c.mste_insured_no
		   AND b.mste_insured = e.mcl_id
		   AND f.reg_spaj = a.reg_spaj
		   AND c.lsbs_id = h.lsbs_id
		   AND c.lsbs_id = i.lsbs_id(+)
		   AND c.lsdbs_number = i.lsdbs_number(+)
		   AND a.reg_spaj = #value#
		   AND a.lscb_id = l.lscb_id
		   AND a.lku_id = m.lku_id
		   AND b.reg_spaj = o.reg_spaj(+)
		   AND d.lti_id = p.lti_id(+)
		   AND e.lti_id = q.lti_id(+)
		   AND b.flag_packet=r.flag_packet(+)
	</select>
	 
	<select id="elions.uw.report.selectViewExcelink" parameterClass="string" resultClass="java.util.HashMap">
		SELECT a.reg_spaj, a.mspo_policy_no, lpad(c.lsbs_id,3,0) lsbs_id, 
		(case 
            when (select pic_jenis from eka.mst_company_contact where mcl_id = d.mcl_id) = 2
            then 
                (case when (select nvl(lti_id,0) from eka.mst_client_new where mcl_id = d.mcl_id) = 0
                      then
                        (select mcl_first from eka.mst_client_new where mcl_id = d.mcl_id)
                    else
                        (select lti_note ||' '||(select mcl_first from eka.mst_client_new where mcl_jenis in (0,1) and mcl_id = d.mcl_id)
                            from eka.lst_title 
                            where lti_jn_title in (0,1)
                            and lti_id = (select lti_id from eka.mst_client_new where mcl_jenis in (0,1) and mcl_id = d.mcl_id))
                 end)
            else
                 eka.pemegang(d.mcl_id, TRIM (d.mcl_first), a.mspo_age, d.mcl_jenis, 1)
        end) nama_pp, 
		f.msap_address address1, (nvl(TRIM (g.lska_note), f.kota) || ' ' || f.msap_zip_code) address2, 
		c.mspr_tsi,r.nama_packet_print nama_packet,b.flag_packet,
		(case when c.mspr_beg_date <![CDATA[<]]> to_date('01/12/2012','dd/MM/yyyy') then
            (case 
                when (c.lsbs_id = 152 and i.lsdbs_number = 2) then 'EKALINK 80 SYARIAH'
                when (c.lsbs_id = 159 ) then 'SMiLe LINK'
                when (c.lsbs_id = 153 and i.lsdbs_number in (3,4)) then 'EKALINK 80 PLUS SYARIAH'
                when (c.lsbs_id = 154 and i.lsdbs_number in (5,6)) then 'EKALINK 18 SYARIAH'
                when (c.lsbs_id = 162 and i.lsdbs_number in (5,6)) then 'EKALINK 88'
                when (c.lsbs_id = 162 and i.lsdbs_number in (7,8)) then 'EKALINK 88 PLUS'
                when (c.lsbs_id = 166 and i.lsdbs_number = 2) then 'BERKAH LINK'
                when (c.lsbs_id = 121) then 'CERDAS'
                 when (c.lsbs_id = 120 AND i.lsdbs_number in (22,23,24)) then 'SIMAS POWER LINK'
                when (c.lsbs_id = 134 and i.lsdbs_number = 3) then 'PRIORITY LINK'
                when (c.lsbs_id = 120 AND i.lsdbs_number in (7,8)) then 'EXCELLENT LINK'
                when (c.lsbs_id = 127 AND i.lsdbs_number in (7,8,9,10)) then 'EXCELLENT LINK (For Your Education)'
                when (c.lsbs_id = 127 AND i.lsdbs_number in (7,8,9,10)) then 'EXCELLENT LINK (For Your Pension)'
                when (c.lsbs_id = 120 AND i.lsdbs_number in (10,11,12,19,20,21)) then 'SIMAS POWER LINK'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (3)) then 'SMiLe LINK 99 SINGLE'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (4)) then 'SMiLe LINK 99 REGULER'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (5)) then 'VIP Family Plan SINGLE'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (6)) then 'VIP Family Plan REGULER'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (7)) then 'SMiLe OPTIMA LINK SEKALIGUS'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (8)) then 'SMiLe OPTIMA LINK REGULER'
                when (c.lsbs_id = 129 AND i.lsdbs_number in (11,12)) then
                		(case when b. flag_packet=15 then 'CERDAS (SMiLe Pension Paket A)'
                              when b. flag_packet=16 then 'CERDAS (SMiLe Pension Paket B)' 
                              when b. flag_packet=17 then 'CERDAS (SMiLe Pension Paket C)' else 'CERDAS'
                             end)
                 when (c.lsbs_id = 129 AND i.lsdbs_number in (5,6)) then
                 	    (case   when b. flag_packet=12 then 'EXCELLENT LINK (For Your Pension Paket 1)'
                            	when b. flag_packet=13 then 'EXCELLENT LINK (For Your Pension Paket 2)' 
                            	when b. flag_packet=14 then 'EXCELLENT LINK (For Your Pension Paket 3)' else 'EXCELLENT LINK FOR YOUR PENSION'
                             	end)
                when c.lsbs_id in (115,116,117,118,119,122,138,139,152,153,154,159,160,164,174) then i.lsdbs_name0 else h.lsbs_name0 end)
            else
               (case 
                when (c.lsbs_id = 152 and i.lsdbs_number = 2) then 'EKALINK 80 SYARIAH'
                when (c.lsbs_id = 159 ) then 'SMiLe LINK'
                when (c.lsbs_id = 153 and i.lsdbs_number in (3,4)) then 'SMiLe LINK 88 SYARIAH'
                when (c.lsbs_id = 154 and i.lsdbs_number in (5,6)) then 'EKALINK 18 SYARIAH'
                when (c.lsbs_id = 162 and i.lsdbs_number in (5,6)) then 'EKALINK 88'
                when (c.lsbs_id = 162 and i.lsdbs_number in (7,8)) then 'EKALINK 88 PLUS'
                when (c.lsbs_id = 166 and i.lsdbs_number = 2) then 'BERKAH LINK'
                when (c.lsbs_id = 121) then 'CERDAS'
                when (c.lsbs_id = 134 and i.lsdbs_number = 3) then 'PRIORITY LINK'
                when (c.lsbs_id = 120 AND i.lsdbs_number in (7,8)) then 'EXCELLENT LINK'
                when (c.lsbs_id = 127 AND i.lsdbs_number in (7,8,9,10)) then 'EXCELLENT LINK (For Your Education)'
                when (c.lsbs_id = 120 AND i.lsdbs_number in (10,11,12)) then 'SIMAS POWER LINK'
                when (c.lsbs_id = 120 AND i.lsdbs_number in (22,23,24)) then 'SIMAS POWER LINK'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (3)) then 'SMiLe LINK 99 SINGLE'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (4)) then 'SMiLe LINK 99 REGULER'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (5)) then 'VIP Family Plan SINGLE'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (6)) then 'VIP Family Plan REGULER'
                when (c.lsbs_id = 190 AND i.lsdbs_number in (7,8)) then 'SMiLe OPTIMA'
                when (c.lsbs_id = 129 AND i.lsdbs_number in (11,12)) then
                		(case when b. flag_packet=15 then 'CERDAS (SMiLe Pension Paket A)'
                              when b. flag_packet=16 then 'CERDAS (SMiLe Pension Paket B)' 
                              when b. flag_packet=17 then 'CERDAS (SMiLe Pension Paket C)' else 'CERDAS'
                             end)
                 when (c.lsbs_id = 129 AND i.lsdbs_number in (5,6)) then
                 	    (case   when b. flag_packet=12 then 'EXCELLENT LINK (For Your Pension Paket 1)'
                            	when b. flag_packet=13 then 'EXCELLENT LINK (For Your Pension Paket 2)' 
                            	when b. flag_packet=14 then 'EXCELLENT LINK (For Your Pension Paket 3)' else 'EXCELLENT LINK FOR YOUR PENSION'
                             	end)
                   when (c.lsbs_id = 200 AND i.lsdbs_number in (3)) then 'SMiLe LINK 99 SYARIAH SINGLE'
                   when (c.lsbs_id = 200 AND i.lsdbs_number in (4)) then 'SMiLe LINK 99 SYARIAH REGULER'
                   when (c.lsbs_id = 200 AND i.lsdbs_number in (7)) then 'SMiLe LINK ULTIMATE SYARIAH'
                when c.lsbs_id in (115,116,117,118,119,122,138,139,152,153,154,159,160,164,174,199,202) then eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) else i.lsdbs_group_name end)
        end) nama_plan, 
		A.MSPO_AGE, B.MSTE_AGE, m.lku_id, m.lku_symbol, (n.mu_jlh_premi + n.mu_jlh_tu) as total_premi, ((n.mu_jlh_premi / (n.mu_jlh_premi + n.mu_jlh_tu))*100) as prsen_premi, ((n.mu_jlh_tu / (n.mu_jlh_premi + n.mu_jlh_tu))*100) as prsen_tu,
		l.lscb_print, l.lscb_pay_mode, 
		decode(a.mspo_pay_period,1,'SEKALIGUS',decode(a.mspo_installment, null, a.mspo_pay_period, a.mspo_installment)||' TAHUN') pay_period, 
		b.mste_beg_date, 
		o.tgl_nab, 
		(nvl(q.lti_note,'') || ' ' || TRIM(e.mcl_first)) AS nama_tt, 
		a.mspo_pay_period,
		a.lssp_id, n.mu_tgl_trans, a.mspo_ins_period,
		(select sum (mu_jlh_premi) from eka.mst_ulink where reg_spaj = a.reg_spaj and lt_id in (2,5) and mu_tgl_trans = n.mu_tgl_trans) premi_top_up,
		(select b.lt_transksi from eka.mst_ulink a, eka.lst_transaksi b where a.lt_id =  b.lt_id and a.mu_aktif=1 and a.mu_ke=2 and a.reg_spaj = #value#) jenis_transaksi
		  FROM eka.mst_policy a,
		       eka.mst_insured b,
		       (SELECT *
		          FROM eka.mst_product_insured
		         WHERE mspr_active = 1 AND lsbs_id <![CDATA[<]]> 800) c,
		       eka.mst_client_new d,
		       eka.mst_client_new e,
		       eka.mst_address_billing f,
		       eka.lst_kabupaten g,
		       eka.lst_bisnis h,
		       eka.lst_det_bisnis i,
		       eka.lst_pay_mode l,
			   eka.lst_kurs m,
			   (select * from EKA.MST_ULINK where mu_aktif=1 and mu_ke=1) N,
				(SELECT reg_spaj, MAX (mtu_tgl_proses) tgl_nab
				  FROM eka.mst_trans_ulink
				 WHERE mst_trans_ulink.mu_ke = 1 group by reg_spaj) o,
				 eka.lst_title p,
				 eka.lst_title q,
				 eka.lst_packet r
		 WHERE g.lska_id(+) = f.lska_id
		   AND a.mspo_policy_holder = d.mcl_id
		   AND a.reg_spaj = b.reg_spaj
		   AND b.reg_spaj = c.reg_spaj
		   AND b.reg_spaj = n.reg_spaj
		   AND b.mste_insured_no = c.mste_insured_no
		   AND b.mste_insured = e.mcl_id
		   AND f.reg_spaj = a.reg_spaj
		   AND c.lsbs_id = h.lsbs_id
		   AND c.lsbs_id = i.lsbs_id(+)
		   AND c.lsdbs_number = i.lsdbs_number(+)
		   AND a.reg_spaj = #value#
		   AND a.lscb_id = l.lscb_id
		   AND a.lku_id = m.lku_id
		   AND b.reg_spaj = o.reg_spaj(+)
		   AND d.lti_id = p.lti_id(+)
		   AND e.lti_id = q.lti_id(+)
		   AND b.flag_packet=r.flag_packet(+)
	</select>
	 
	 <select id="elions.uw.selectMtuSaldoUnitLink" parameterClass="java.util.HashMap" resultClass="double">
		SELECT a.mtu_saldo_unit
		  FROM eka.mst_trans_ulink a
		 WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND a.mu_ke =
		          (SELECT MAX (mu_ke)
		             FROM eka.mst_trans_ulink a
		            WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND a.mu_ke <![CDATA[<]]> #ke#
		                  AND a.lji_id = #jn#)
		   AND a.mtu_ke =
		          (SELECT MAX (mtu_ke)
		             FROM eka.mst_trans_ulink a
		            WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		              AND a.mu_ke =
		                     (SELECT MAX (mu_ke)
		                        FROM eka.mst_trans_ulink a
		                       WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		                         AND a.mu_ke <![CDATA[<]]> #ke#
		                         AND a.lji_id = #jn#)
		              AND a.lji_id = #jn#)
		   AND a.lji_id = #jn#
	 </select>

	 <select id="elions.uw.selectMuTglTrans" parameterClass="string" resultClass="java.util.Date">
		SELECT mu_tgl_trans
		  FROM eka.mst_ulink
		 WHERE mu_aktif = 1 AND mu_ke = 1 AND reg_spaj = rpad(replace(#value#,'.'),11,' ')
	 </select>	 
	 
	 <select id="elions.uw.selectPremiProdukUtama" parameterClass="string" resultClass="java.util.HashMap">
		SELECT a.lku_id, b.mspr_premium
		  FROM eka.mst_policy a, eka.mst_product_insured b
		 WHERE a.reg_spaj = b.reg_spaj AND a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		       AND b.lsbs_id <![CDATA[<]]> 800
	 </select>
	 
	 <select id="elions.uw.selectSpajCancel" parameterClass="string" resultClass="int">
		SELECT COUNT (*)
		  FROM eka.mst_cancel
		 WHERE mscan_spaj_baru = rpad(replace(#value#,'.'),11,' ')
	 </select>
	 
	 <select id="elions.uw.selectFilterSpaj" parameterClass="java.util.HashMap" resultClass="string">
		<isEqual property="tipe" compareValue="0">
			select reg_spaj from eka.mst_policy where reg_spaj $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="1">
			select reg_spaj from eka.mst_policy where mspo_policy_no $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="2">
			select reg_spaj from eka.mst_policy a, eka.mst_client_new b where a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$
			<isNotEmpty property="tglLahir">and mspe_date_birth = to_date(#tglLahir#,'yyyymmdd')</isNotEmpty>
			order by b.mcl_first
		</isEqual>
		<isEqual property="tipe" compareValue="3">
			select reg_spaj from eka.mst_insured a, eka.mst_client_new b where a.mste_insured = b.mcl_id and b.mcl_first $kata$
			<isNotEmpty property="tglLahir">and mspe_date_birth = to_date(#tglLahir#,'yyyymmdd')</isNotEmpty>
			order by b.mcl_first
		</isEqual>
		<isEqual property="tipe" compareValue="4">
			select reg_spaj from eka.mst_policy where mspo_no_blanko $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="5">
			select reg_spaj from eka.mst_product_insured where lsbs_id $kata$
		</isEqual>
	 </select>
	 
	 <select id="elions.uw.selectFilterSpajNew" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<isEqual property="tipe" compareValue="0">
			select reg_spaj from eka.mst_policy where reg_spaj $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="1">
			select reg_spaj from eka.mst_policy where mspo_policy_no $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="2">
			select a.reg_spaj, a.lstb_id, c.mste_beg_date 
			  from eka.mst_policy a, 
			       eka.mst_client_new b, 
			       eka.mst_insured c
			 where a.mspo_policy_holder = b.mcl_id 
			   and a.reg_spaj = c.reg_spaj 
			   and b.mcl_first $kata$
			   and a.lstb_id in (1,2)
			<isNotEmpty property="tglLahir">and mspe_date_birth = to_date(#tglLahir#,'yyyymmdd')</isNotEmpty>
			<isEqual property="flagLifeOnly" compareValue="true">
				and months_between (trunc(sysdate),c.mste_beg_date) <![CDATA[<]]> 24
			</isEqual>
			order by c.mste_beg_date, a.reg_spaj
		</isEqual>
		<isEqual property="tipe" compareValue="3">
			select distinct(a.reg_spaj), d.lstb_id, c.mste_beg_date 
			  from eka.mst_insured a, 
			       eka.mst_client_new b, 
			       eka.mst_insured c, 
			       eka.mst_policy d  
			 where a.mste_insured = b.mcl_id 
			   and a.reg_spaj = c.reg_spaj
			   and a.reg_spaj = d.reg_spaj 
			   and b.mcl_first $kata$
			   and d.lstb_id in (1,2)
			<isNotEmpty property="tglLahir">and mspe_date_birth = to_date(#tglLahir#,'yyyymmdd')</isNotEmpty>
			<isEqual property="flagLifeOnly" compareValue="true">
				and months_between (trunc(sysdate),c.mste_beg_date) <![CDATA[<]]> 24
			</isEqual>
			order by c.mste_beg_date, a.reg_spaj
		</isEqual>
		<isEqual property="tipe" compareValue="4">
			select reg_spaj from eka.mst_policy where mspo_no_blanko $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="5">
			select reg_spaj from eka.mst_product_insured where lsbs_id $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="6">
			select * from (
				select a.reg_spaj, a.lstb_id, c.mste_beg_date 
				  from eka.mst_policy a, 
				       eka.mst_client_new b, 
				       eka.mst_insured c
				 where a.mspo_policy_holder = b.mcl_id 
				   and a.reg_spaj = c.reg_spaj 
				   and b.mcl_first $kata$
				   and a.lstb_id in (1,2)
				<isNotEmpty property="tglLahir">and mspe_date_birth = to_date(#tglLahir#,'yyyymmdd')</isNotEmpty>
				<isEqual property="flagLifeOnly" compareValue="true">
					and months_between (trunc(sysdate),c.mste_beg_date) <![CDATA[<]]> 24
					and a.lspd_id  <![CDATA[<>]]> 95
					and a.lssp_id = 1
				</isEqual>
				union
				select ID as reg_spaj, 11 AS lstb_id, TGL_AWAL as mste_beg_date
				from eka.mst_tmms@eb
				where holder_name $kata$
				<isNotEmpty property="tglLahir">and bod_holder = to_date(#tglLahir#,'yyyymmdd')</isNotEmpty>
				<isEqual property="flagLifeOnly" compareValue="true">
					and months_between (trunc(sysdate),TGL_AWAL) <![CDATA[<]]> 24
					and status_polis = 1
				</isEqual>
			) 
			order by mste_beg_date, reg_spaj 
		</isEqual>
		<isEqual property="tipe" compareValue="7">
			select * from (
				select distinct(a.reg_spaj), d.lstb_id, a.mste_beg_date 
				  from eka.mst_insured a, 
				       eka.mst_client_new b, 
				       eka.mst_policy d  
				 where a.mste_insured = b.mcl_id 
				   and a.reg_spaj = d.reg_spaj 
				   and b.mcl_first $kata$
				   and d.lstb_id in (1,2)
				<isNotEmpty property="tglLahir">and mspe_date_birth = to_date(#tglLahir#,'yyyymmdd')</isNotEmpty>
				 <isEqual property="flagLifeOnly" compareValue="true">
					and months_between (trunc(sysdate),a.mste_beg_date) <![CDATA[<]]> 24
					and d.lspd_id  <![CDATA[<>]]> 95
					and d.lssp_id = 1
				</isEqual>
				union
				select distinct(id) as reg_spaj, 11 as lstb_id, beg_date as mste_beg_date
				from eka.mst_tmms_det@eb
				where nama_peserta $kata$
				<isNotEmpty property="tglLahir">and bod_peserta = to_date(#tglLahir#,'yyyymmdd')</isNotEmpty>
				 <isEqual property="flagLifeOnly" compareValue="true">
						and months_between (trunc(sysdate),BEG_DATE) <![CDATA[<]]> 24
						and flag_aktif = 1
				</isEqual>
			)order by mste_beg_date, reg_spaj 
		</isEqual>
	 </select>	 

	<select id="elions.uw.selectCariSpaj" parameterClass="string" resultClass="com.ekalife.elions.model.CariSpaj">
		SELECT a.reg_spaj, a.mspo_policy_no, d.mcl_first pp, e.mcl_first tt,
		       (g.lca_id || g.lwk_id) AS lsrg_nama, h.lspd_position, eka.f_lsdbs(c.reg_spaj, c.lsbs_id, c.lsdbs_number) lsdbs_name,
		       (CASE
		           WHEN g.lca_id = '09' THEN 'Bancassurance'
		           WHEN g.lca_id IN ('08', '42') THEN 'Worksite' 
				   WHEN g.lca_id in ('37','52') THEN 'Agency' 
				   WHEN g.lca_id = '46' THEN 'Hybrid'
				   ELSE 'Regional'
		        END
		       ) distribusi,
		       j.lssp_status
		  FROM eka.mst_policy a,
		       eka.mst_insured b,
		       eka.mst_product_insured c,
		       eka.mst_client d,
		       eka.mst_client e,
		       eka.mst_agent_prod f,
		       eka.mst_agent g,
		       eka.lst_document_position h,
		       eka.lst_det_bisnis i,
		       eka.lst_policy_status j
		 WHERE a.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
		   AND a.reg_spaj = b.reg_spaj
		   AND b.reg_spaj = c.reg_spaj
		   AND c.lsbs_id <![CDATA[<]]> 300
		   AND b.mste_insured_no = c.mste_insured_no
		   AND a.mspo_policy_holder = d.mcl_id
		   AND b.mste_insured = e.mcl_id
		   AND a.reg_spaj = f.reg_spaj
		   AND f.lsle_id = 4
		   AND f.msag_id = g.msag_id
		   AND a.lspd_id = h.lspd_id
		   AND c.lsbs_id = i.lsbs_id
		   AND c.lsdbs_number = i.lsdbs_number
		   AND a.lssp_id = j.lssp_id
	</select>

	<!--	
		SELECT /*+ first_rows */ a.reg_spaj, a.mspo_policy_no, b.mcl_first pp, c.mcl_first tt, (f.lca_id||f.lwk_id) as lsrg_nama, g.lspd_position
		  FROM eka.mst_policy a, eka.mst_client_new b, eka.mst_client_new c, eka.mst_insured d, eka.mst_agent_prod e, eka.mst_agent f, eka.lst_document_position g
		 WHERE 
		 	a.lstb_id = 1 AND a.lspd_id = g.lspd_id 
		   AND a.reg_spaj = d.reg_spaj
		   AND a.mspo_policy_holder = b.mcl_id
		   AND d.mste_insured = c.mcl_id
		   AND e.lsle_id=4
		   AND a.reg_spaj = e.reg_spaj
		   AND e.msag_id = f.msag_id
		   AND a.reg_spaj =rpad(replace(#value#,'.'),11,' ')
	-->
	
	<select id="elions.uw.selectCariSpaj_valid" parameterClass="string" resultClass="com.ekalife.elions.model.CariSpaj">
		SELECT /*+ first_rows */ a.reg_spaj, a.mspo_policy_no, b.mcl_first pp, c.mcl_first tt, (f.lca_id||f.lwk_id) as lsrg_nama, g.lspd_position
		  FROM eka.mst_policy a, eka.mst_client_new b, eka.mst_client_new c, eka.mst_insured d, eka.mst_agent_prod e, eka.mst_agent f, eka.lst_document_position g
		 WHERE 
		 	a.lstb_id = 1 AND a.lspd_id = g.lspd_id 
		   AND a.reg_spaj = d.reg_spaj
		   AND a.mspo_policy_holder = b.mcl_id
		   AND d.mste_insured = c.mcl_id
		   AND e.lsle_id=4
		   AND a.reg_spaj = e.reg_spaj
		   AND e.msag_id = f.msag_id
		   AND a.reg_spaj =rpad(replace(#spaj#,'.'),11,' ')
		    AND a.lus_id = #lus_id#
	</select>

	 <!-- <select id="elions.uw.selectFilterSpaj2" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterSpaj2">
	 	<isNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
				select reg_spaj from eka.mst_policy where lstb_id in(1,2) and 
				<isNotEqual property="posisi" compareValue="-1">
					<isEqual property="posisi" compareValue="2,27,251,209">
						lspd_id in ($posisi$) and 
					</isEqual>
					<isNotEqual property="posisi" compareValue="2,27,251,209">
						lspd_id = #posisi# and 
					</isNotEqual>
				</isNotEqual>	
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				reg_spaj $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="1">
				select reg_spaj from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					<isEqual property="posisi" compareValue="30,99">
						lspd_id in ($posisi$) and 
					</isEqual>
					<isNotEqual property="posisi" compareValue="30,99">
						lspd_id = #posisi# and 
					</isNotEqual>
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_policy_no $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				select a.reg_spaj from eka.mst_policy a, eka.mst_client_new b where a.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				select p.reg_spaj from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b where p.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				select reg_spaj from eka.mst_policy a 
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ )
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
			</isEqual>
			<isEqual property="tipe" compareValue="5">
				select reg_spaj from eka.mst_policy a 
				where a.mspo_nasabah_acc $kata$ 
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
			</isEqual>
			<isEqual property="tipe" compareValue="6">
				select reg_spaj from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_no_blanko $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="7">
				select a.reg_spaj from eka.mst_policy a, eka.mst_insured b where a.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					a.lssp_id=#lssp_id# and
				</isNotNull>
				b.mste_no_vacc $kata$
				and a.reg_spaj = b.reg_spaj
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="8">
				SELECT a.reg_spaj
				  FROM eka.mst_policy a,
				       eka.mst_agent_comm b,
				       eka.lst_user c
				 WHERE a.reg_spaj = b.reg_spaj
				   AND a.lus_id = c.lus_id
				<isNotEqual property="posisi" compareValue="-1" prepend=" AND ">
					a.lspd_id = #posisi# 
				</isNotEqual>
				AND b.msag_id $kata$
				AND b.lev_comm = 4
				GROUP BY a.reg_spaj
				ORDER BY a.reg_spaj
			</isEqual>			
			<isEqual property="tipe" compareValue="9">
				select a.reg_spaj from eka.mst_simcard a
				where
				replace(upper(trim(a.no_kartu)),'.') $kata$					
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="10">
				select a.reg_spaj
				from eka.mst_worksite_flag a
				where nik $kata$				
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="11">
				select a.reg_spaj from eka.mst_policy a, eka.mst_insured b where a.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					a.lssp_id=#lssp_id# and
				</isNotNull>
				trim(b.mste_no_vacc) $kata$
				and a.reg_spaj = b.reg_spaj
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="12">				
				select A.REG_SPAJ  from eka.mst_spaj_temp a , eka.mst_policy b
				where a.reg_spaj =b.reg_spaj
				      and b.lstb_id = 1
				      <isEqual property="posisi" compareValue="30,99">
						and b.lspd_id in ($posisi$)  
						</isEqual>
						<isNotEqual property="posisi" compareValue="30,99">
							<isNotEqual property="posisi" compareValue="-1">
								<isEqual property="posisi" compareValue="2,27,251,209">
									and b.lspd_id in ($posisi$)  
								</isEqual>
								<isNotEqual property="posisi" compareValue="2,27,251,209">
									and b.lspd_id = #posisi#  
								</isNotEqual>
							</isNotEqual>	
						</isNotEqual>
						<isNotNull property="lssp_id" >
							and b.lssp_id=#lssp_id# 
						</isNotNull>
				      and replace(upper(trim(a.NO_TEMP)),'.') $kata$                    
                order by a.reg_spaj
			</isEqual>
		</isNull>
		<isNotNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
				select a.reg_spaj 
					from eka.mst_policy a,
						 eka.mst_insured b
					where a.reg_spaj =b.reg_spaj and
						a.lstb_id = 1 and 
					a.lspd_id $posisi$ and 
				a.reg_spaj $kata$ and
				b.lssa_id=#lssaId#
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="1">
				select a.reg_spaj 
				from eka.mst_policy a,
					 eka.mst_insured b
					where a.reg_spaj=b.reg_spaj and
						a.lstb_id = 1 and 
					a.lspd_id $posisi$ and 
				a.mspo_policy_no $kata$ and
				b.lssa_id=#lssaId#
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				select a.reg_spaj from eka.mst_policy a, eka.mst_client_new b,eka.mst_insured c
					 where a.reg_spaj=c.reg_spaj and
					 a.lstb_id = 1 and 
					a.lspd_id $posisi$ and 
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$ and
				c.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				select p.reg_spaj from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b where p.lstb_id = 1 and 
					p.lspd_id $posisi$ and 
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$ and
				a.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				select a.reg_spaj from eka.mst_policy a ,eka.mst_insured b
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ )
					and a.lspd_id $posisi$ and
					a.reg_spaj=b.reg_Spaj and
					b.lssa_id=#lssaId#
			</isEqual>
			<isEqual property="tipe" compareValue="5">
				select a.reg_spaj from eka.mst_policy a ,eka.mst_insured b
				where a.mspo_nasabah_acc $kata$ 
					and a.lspd_id $posisi$ and
					a.reg_spaj=b.reg_Spaj and
					b.lssa_id=#lssaId#
			</isEqual>
			<isEqual property="tipe" compareValue="7">
				select a.reg_spaj from eka.mst_policy a, eka.mst_insured b where a.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					a.lssp_id=#lssp_id# and
				</isNotNull>
				b.mste_no_vacc $kata$
				and a.reg_spaj = b.reg_spaj
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="8">
				SELECT a.reg_spaj
				  FROM eka.mst_policy a,
				       eka.mst_agent_comm b,
				       eka.lst_user c,
				       eka.mst_insured d
				 WHERE a.reg_spaj = b.reg_spaj
				   AND a.reg_spaj = d.reg_spaj
				   AND a.lus_id = c.lus_id
				   AND d.lssa_id=#lssaId#
				<isNotEqual property="posisi" compareValue="-1" prepend=" AND ">
					a.lspd_id = #posisi# 
				</isNotEqual>
				AND b.msag_id $kata$
				AND b.lev_comm = 4
				GROUP BY a.reg_spaj
				ORDER BY a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="9">
				select a.reg_spaj from eka.mst_simcard a
				where
				replace(upper(trim(a.no_kartu)),'.') $kata$				
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="10">
				select a.reg_spaj
				from eka.mst_worksite_flag a
				where nik $kata$				
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="11">
				select a.reg_spaj from eka.mst_policy a, eka.mst_insured b where a.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id $posisi$ and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					a.lssp_id=#lssp_id# and
				</isNotNull>
				trim(b.mste_no_vacc) $kata$
				and b.lssa_id=#lssaId#
				and a.reg_spaj = b.reg_spaj
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="12">				
				select A.REG_SPAJ  from eka.mst_spaj_temp a , eka.mst_policy b, eka.mst_insured c
				where a.reg_spaj =b.reg_spaj
				      and b.reg_spaj =c.reg_spaj 
				      and b.lstb_id = 1
				      and b.lspd_id $posisi$ 
				      and c.lssa_id=#lssaId#
				      and replace(upper(trim(a.NO_TEMP)),'.') $kata$                    
                order by a.reg_spaj
			</isEqual>
		</isNotNull>
	 </select> -->
	 
	  <select id="elions.uw.selectFilterSpaj2" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterSpaj2">
	 	<isNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
			 select * FROM(
				select ROWNUM as row_number, reg_spaj from eka.mst_policy where lstb_id in(1,2) and 
				<isNotEqual property="posisi" compareValue="-1">
					<isEqual property="posisi" compareValue="2,27,251,209">
						lspd_id in ($posisi$) and 
					</isEqual>
					<isNotEqual property="posisi" compareValue="2,27,251,209">
						lspd_id = #posisi# and 
					</isNotEqual>
				</isNotEqual>	
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				reg_spaj $kata$
				order by reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="1">
			select * FROM(
				select ROWNUM as row_number, reg_spaj from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					<isEqual property="posisi" compareValue="30,99">
						lspd_id in ($posisi$) and 
					</isEqual>
					<isNotEqual property="posisi" compareValue="30,99">
						lspd_id = #posisi# and 
					</isNotEqual>
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_policy_no $kata$
				order by reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="2">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a, eka.mst_client_new b where a.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="3">
			select * FROM(
				select ROWNUM as row_number, p.reg_spaj from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b where p.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="4">
			select * FROM(
				select ROWNUM as row_number, reg_spaj from eka.mst_policy a 
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ )
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				)
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="5">
			select * FROM(
				select ROWNUM as row_number, reg_spaj from eka.mst_policy a 
				where a.mspo_nasabah_acc $kata$ 
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				)
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="6">
			select * FROM(
				select ROWNUM as row_number, reg_spaj from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_no_blanko $kata$
				order by reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="7">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a, eka.mst_insured b where a.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					a.lssp_id=#lssp_id# and
				</isNotNull>
				b.mste_no_vacc $kata$
				and a.reg_spaj = b.reg_spaj
				order by a.reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="8">
			select * FROM(
				SELECT ROWNUM as row_number, a.reg_spaj
				  FROM eka.mst_policy a,
				       eka.mst_agent_comm b,
				       eka.lst_user c
				 WHERE a.reg_spaj = b.reg_spaj
				   AND a.lus_id = c.lus_id
				<isNotEqual property="posisi" compareValue="-1" prepend=" AND ">
					a.lspd_id = #posisi# 
				</isNotEqual>
				AND b.msag_id $kata$
				AND b.lev_comm = 4
				GROUP BY a.reg_spaj
				ORDER BY a.reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>			
			<isEqual property="tipe" compareValue="9">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_simcard a
				where
				replace(upper(trim(a.no_kartu)),'.') $kata$					
				order by a.reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="10">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj
				from eka.mst_worksite_flag a
				where nik $kata$				
				order by a.reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>		
			</isEqual>
			<isEqual property="tipe" compareValue="11">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a, eka.mst_insured b where a.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					a.lssp_id=#lssp_id# and
				</isNotNull>
				trim(b.mste_no_vacc) $kata$
				and a.reg_spaj = b.reg_spaj
				order by a.reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="12">
			select * FROM(				
				select ROWNUM as row_number, A.REG_SPAJ  from eka.mst_spaj_temp a , eka.mst_policy b
				where a.reg_spaj =b.reg_spaj
				      and b.lstb_id = 1
				      <isEqual property="posisi" compareValue="30,99">
						and b.lspd_id in ($posisi$)  
						</isEqual>
						<isNotEqual property="posisi" compareValue="30,99">
							<isNotEqual property="posisi" compareValue="-1">
								<isEqual property="posisi" compareValue="2,27,251,209">
									and b.lspd_id in ($posisi$)  
								</isEqual>
								<isNotEqual property="posisi" compareValue="2,27,251,209">
									and b.lspd_id = #posisi#  
								</isNotEqual>
							</isNotEqual>	
						</isNotEqual>
						<isNotNull property="lssp_id" >
							and b.lssp_id=#lssp_id# 
						</isNotNull>
				      and replace(upper(trim(a.NO_TEMP)),'.') $kata$                    
                order by a.reg_spaj )
            <isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="13">
				SELECT * FROM (
					select rownum row_number, a.reg_spaj
					from eka.mst_policy a, eka.mst_spaj_temp b
					where a.reg_spaj = b.reg_spaj
				    	and a.lstb_id = 1
						<isNotEqual property="posisi" compareValue="-1">
							<isEqual property="posisi" compareValue="2,27,251,209">
								and a.lspd_id in ($posisi$) 
							</isEqual>
							<isNotEqual property="posisi" compareValue="2,27,251,209">
								and a.lspd_id = #posisi# 
							</isNotEqual>
						</isNotEqual>	
						<isNotNull property="lssp_id" >
							and a.lssp_id = #lssp_id#
						</isNotNull>
						and b.sertifikat $kata$
					union
					select rownum row_number, a.reg_spaj
					from eka.mst_policy a, eka.mst_spaj_crt b
					where a.reg_spaj = b.reg_spaj
				    	and a.lstb_id = 1
						<isNotEqual property="posisi" compareValue="-1">
							<isEqual property="posisi" compareValue="2,27,251,209">
								and a.lspd_id in ($posisi$) 
							</isEqual>
							<isNotEqual property="posisi" compareValue="2,27,251,209">
								and a.lspd_id = #posisi# 
							</isNotEqual>
						</isNotEqual>	
						<isNotNull property="lssp_id" >
							and a.lssp_id = #lssp_id#
						</isNotNull>
						and b.no_policy $kata$
				)
				<isNotEmpty property="noPage">
		   			<isNotNull property="noRow">
				   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
				   			AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# ) )
			   		</isNotNull>
	   			</isNotEmpty>	
			</isEqual>
		</isNull>
		<isNotNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
			select * FROM(	
				select ROWNUM as row_number, a.reg_spaj 
					from eka.mst_policy a,
						 eka.mst_insured b
					where a.reg_spaj =b.reg_spaj and
						a.lstb_id = 1 and 
					a.lspd_id $posisi$ and 
				a.reg_spaj $kata$ and
				b.lssa_id=#lssaId#
				order by reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>		
			</isEqual>
			<isEqual property="tipe" compareValue="1">
			select * FROM(	
				select ROWNUM as row_number, a.reg_spaj 
				from eka.mst_policy a,
					 eka.mst_insured b
					where a.reg_spaj=b.reg_spaj and
						a.lstb_id = 1 and 
					a.lspd_id $posisi$ and 
				a.mspo_policy_no $kata$ and
				b.lssa_id=#lssaId#
				order by reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>		
			</isEqual>
			<isEqual property="tipe" compareValue="2">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a, eka.mst_client_new b,eka.mst_insured c
					 where a.reg_spaj=c.reg_spaj and
					 a.lstb_id = 1 and 
					a.lspd_id $posisi$ and 
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$ and
				c.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>		
			</isEqual>
			<isEqual property="tipe" compareValue="3">
			select * FROM(
				select ROWNUM as row_number, p.reg_spaj from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b where p.lstb_id = 1 and 
					p.lspd_id $posisi$ and 
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$ and
				a.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>		
			</isEqual>
			<isEqual property="tipe" compareValue="4">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a ,eka.mst_insured b
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ )
					and a.lspd_id $posisi$ and
					a.reg_spaj=b.reg_Spaj and
					b.lssa_id=#lssaId# )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="5">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a ,eka.mst_insured b
				where a.mspo_nasabah_acc $kata$ 
					and a.lspd_id $posisi$ and
					a.reg_spaj=b.reg_Spaj and
					b.lssa_id=#lssaId# )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="7">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a, eka.mst_insured b where a.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					a.lssp_id=#lssp_id# and
				</isNotNull>
				b.mste_no_vacc $kata$
				and a.reg_spaj = b.reg_spaj
				order by a.reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="8">
			select * FROM(
				SELECT ROWNUM as row_number, a.reg_spaj
				  FROM eka.mst_policy a,
				       eka.mst_agent_comm b,
				       eka.lst_user c,
				       eka.mst_insured d
				 WHERE a.reg_spaj = b.reg_spaj
				   AND a.reg_spaj = d.reg_spaj
				   AND a.lus_id = c.lus_id
				   AND d.lssa_id=#lssaId#
				<isNotEqual property="posisi" compareValue="-1" prepend=" AND ">
					a.lspd_id = #posisi# 
				</isNotEqual>
				AND b.msag_id $kata$
				AND b.lev_comm = 4
				GROUP BY a.reg_spaj
				ORDER BY a.reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="9">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_simcard a
				where
				replace(upper(trim(a.no_kartu)),'.') $kata$				
				order by a.reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="10">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj
				from eka.mst_worksite_flag a
				where nik $kata$				
				order by a.reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="11">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a, eka.mst_insured b where a.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id $posisi$ and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					a.lssp_id=#lssp_id# and
				</isNotNull>
				trim(b.mste_no_vacc) $kata$
				and b.lssa_id=#lssaId#
				and a.reg_spaj = b.reg_spaj
				order by a.reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="12">	
			select * FROM(			
				select ROWNUM as row_number, A.REG_SPAJ  from eka.mst_spaj_temp a , eka.mst_policy b, eka.mst_insured c
				where a.reg_spaj =b.reg_spaj
				      and b.reg_spaj =c.reg_spaj 
				      and b.lstb_id = 1
				      and b.lspd_id $posisi$ 
				      and c.lssa_id=#lssaId#
				      and replace(upper(trim(a.NO_TEMP)),'.') $kata$                    
                order by a.reg_spaj )
            <isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty> 
			</isEqual>
			<isEqual property="tipe" compareValue="13">
				SELECT * FROM (
					select rownum row_number, a.reg_spaj
					from eka.mst_policy a, eka.mst_spaj_temp b
					where a.reg_spaj = b.reg_spaj
				    	and a.lstb_id = 1
						and a.lspd_id $posisi$
						and a.lssa_id = #lssa_id#
						and b.sertifikat $kata$
					order by a.reg_spaj
				)
				<isNotEmpty property="noPage">
		   			<isNotNull property="noRow">
				   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
				   			AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# ) )
			   		</isNotNull>
	   			</isNotEmpty>	
			</isEqual>
		</isNotNull>
	 </select>	 
	 
	 <select id="elions.uw.selectTotalFilterSpaj2" parameterClass="java.util.HashMap" resultClass="string">
	 	<isNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy where lstb_id in(1,2) and 
				<isNotEqual property="posisi" compareValue="-1">
					<isEqual property="posisi" compareValue="2,27,251,209">
						lspd_id in ($posisi$) and 
					</isEqual>
					<isNotEqual property="posisi" compareValue="2,27,251,209">
						lspd_id = #posisi# and 
					</isNotEqual>
				</isNotEqual>	
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				reg_spaj $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="1">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					<isEqual property="posisi" compareValue="30,99">
						lspd_id in ($posisi$) and 
					</isEqual>
					<isNotEqual property="posisi" compareValue="30,99">
						lspd_id = #posisi# and 
					</isNotEqual>
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_policy_no $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a, eka.mst_client_new b where a.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b where p.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a 
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ )
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
			</isEqual>
			<isEqual property="tipe" compareValue="5">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a 
				where a.mspo_nasabah_acc $kata$ 
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
			</isEqual>
			<isEqual property="tipe" compareValue="6">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_no_blanko $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="7">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a, eka.mst_insured b where a.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					a.lssp_id=#lssp_id# and
				</isNotNull>
				b.mste_no_vacc $kata$
				and a.reg_spaj = b.reg_spaj
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="8">
				SELECT CEIL( count( * ) / 20 ) as total_pages
				  FROM eka.mst_policy a,
				       eka.mst_agent_comm b,
				       eka.lst_user c
				 WHERE a.reg_spaj = b.reg_spaj
				   AND a.lus_id = c.lus_id
				<isNotEqual property="posisi" compareValue="-1" prepend=" AND ">
					a.lspd_id = #posisi# 
				</isNotEqual>
				AND b.msag_id $kata$
				AND b.lev_comm = 4
				GROUP BY a.reg_spaj
				ORDER BY a.reg_spaj
			</isEqual>			
			<isEqual property="tipe" compareValue="9">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_simcard a
				where
				replace(upper(trim(a.no_kartu)),'.') $kata$					
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="10">
				SELECT CEIL( count( * ) / 20 ) as total_pages
				from eka.mst_worksite_flag a
				where nik $kata$				
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="11">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a, eka.mst_insured b where a.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					a.lssp_id=#lssp_id# and
				</isNotNull>
				trim(b.mste_no_vacc) $kata$
				and a.reg_spaj = b.reg_spaj
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="12">				
				SELECT CEIL( count( * ) / 20 ) as total_pages  from eka.mst_spaj_temp a , eka.mst_policy b
				where a.reg_spaj =b.reg_spaj
				      and b.lstb_id = 1
				      <isEqual property="posisi" compareValue="30,99">
						and b.lspd_id in ($posisi$)  
						</isEqual>
						<isNotEqual property="posisi" compareValue="30,99">
							<isNotEqual property="posisi" compareValue="-1">
								<isEqual property="posisi" compareValue="2,27,251,209">
									and b.lspd_id in ($posisi$)  
								</isEqual>
								<isNotEqual property="posisi" compareValue="2,27,251,209">
									and b.lspd_id = #posisi#  
								</isNotEqual>
							</isNotEqual>	
						</isNotEqual>
						<isNotNull property="lssp_id" >
							and b.lssp_id=#lssp_id# 
						</isNotNull>
				      and replace(upper(trim(a.NO_TEMP)),'.') $kata$                    
                order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="13">
			 select sum(total_pages) as total_pages from (
					SELECT CEIL( count( * ) / 20 ) as total_pages
					FROM eka.mst_policy a, eka.mst_spaj_temp b
					WHERE a.reg_spaj = b.reg_spaj
				    	AND a.lstb_id = 1
						<isEqual property="posisi" compareValue="30,99">
							AND a.lspd_id in ($posisi$)  
						</isEqual>
						<isNotEqual property="posisi" compareValue="30,99">
							<isNotEqual property="posisi" compareValue="-1">
								<isEqual property="posisi" compareValue="2,27,251,209">
									AND a.lspd_id in ($posisi$)  
								</isEqual>
								<isNotEqual property="posisi" compareValue="2,27,251,209">
									AND a.lspd_id = #posisi#  
								</isNotEqual>
							</isNotEqual>	
						</isNotEqual>
						<isNotNull property="lssp_id" >
							AND a.lssp_id = #lssp_id# 
						</isNotNull>
						AND b.sertifikat $kata$    
						union
						SELECT CEIL( count( * ) / 20 ) as total_pages
					FROM eka.mst_policy a, eka.mst_spaj_crt b
					WHERE a.reg_spaj = b.reg_spaj
				    	AND a.lstb_id = 1
						<isEqual property="posisi" compareValue="30,99">
							AND a.lspd_id in ($posisi$)  
						</isEqual>
						<isNotEqual property="posisi" compareValue="30,99">
							<isNotEqual property="posisi" compareValue="-1">
								<isEqual property="posisi" compareValue="2,27,251,209">
									AND a.lspd_id in ($posisi$)  
								</isEqual>
								<isNotEqual property="posisi" compareValue="2,27,251,209">
									AND a.lspd_id = #posisi#  
								</isNotEqual>
							</isNotEqual>	
						</isNotEqual>
						<isNotNull property="lssp_id" >
							AND a.lssp_id = #lssp_id# 
						</isNotNull>
						AND b.no_policy $kata$                  
					)
			</isEqual>
		</isNull>
		<isNotNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
				SELECT CEIL( count( * ) / 20 ) as total_pages
					from eka.mst_policy a,
						 eka.mst_insured b
					where a.reg_spaj =b.reg_spaj and
						a.lstb_id = 1 and 
					a.lspd_id $posisi$ and 
				a.reg_spaj $kata$ and
				b.lssa_id=#lssaId#
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="1">
				SELECT CEIL( count( * ) / 20 ) as total_pages
				from eka.mst_policy a,
					 eka.mst_insured b
					where a.reg_spaj=b.reg_spaj and
						a.lstb_id = 1 and 
					a.lspd_id $posisi$ and 
				a.mspo_policy_no $kata$ and
				b.lssa_id=#lssaId#
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a, eka.mst_client_new b,eka.mst_insured c
					 where a.reg_spaj=c.reg_spaj and
					 a.lstb_id = 1 and 
					a.lspd_id $posisi$ and 
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$ and
				c.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b where p.lstb_id = 1 and 
					p.lspd_id $posisi$ and 
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$ and
				a.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a ,eka.mst_insured b
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ )
					and a.lspd_id $posisi$ and
					a.reg_spaj=b.reg_Spaj and
					b.lssa_id=#lssaId#
			</isEqual>
			<isEqual property="tipe" compareValue="5">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a ,eka.mst_insured b
				where a.mspo_nasabah_acc $kata$ 
					and a.lspd_id $posisi$ and
					a.reg_spaj=b.reg_Spaj and
					b.lssa_id=#lssaId#
			</isEqual>
			<isEqual property="tipe" compareValue="7">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a, eka.mst_insured b where a.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					a.lssp_id=#lssp_id# and
				</isNotNull>
				b.mste_no_vacc $kata$
				and a.reg_spaj = b.reg_spaj
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="8">
				SELECT CEIL( count( * ) / 20 ) as total_pages
				  FROM eka.mst_policy a,
				       eka.mst_agent_comm b,
				       eka.lst_user c,
				       eka.mst_insured d
				 WHERE a.reg_spaj = b.reg_spaj
				   AND a.reg_spaj = d.reg_spaj
				   AND a.lus_id = c.lus_id
				   AND d.lssa_id=#lssaId#
				<isNotEqual property="posisi" compareValue="-1" prepend=" AND ">
					a.lspd_id = #posisi# 
				</isNotEqual>
				AND b.msag_id $kata$
				AND b.lev_comm = 4
				GROUP BY a.reg_spaj
				ORDER BY a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="9">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_simcard a
				where
				replace(upper(trim(a.no_kartu)),'.') $kata$				
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="10">
				SELECT CEIL( count( * ) / 20 ) as total_pages
				from eka.mst_worksite_flag a
				where nik $kata$				
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="11">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a, eka.mst_insured b where a.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id $posisi$ and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					a.lssp_id=#lssp_id# and
				</isNotNull>
				trim(b.mste_no_vacc) $kata$
				and b.lssa_id=#lssaId#
				and a.reg_spaj = b.reg_spaj
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="12">				
				SELECT CEIL( count( * ) / 20 ) as total_pages  from eka.mst_spaj_temp a , eka.mst_policy b, eka.mst_insured c
				where a.reg_spaj =b.reg_spaj
				      and b.reg_spaj =c.reg_spaj 
				      and b.lstb_id = 1
				      and b.lspd_id $posisi$ 
				      and c.lssa_id=#lssaId#
				      and replace(upper(trim(a.NO_TEMP)),'.') $kata$                    
                order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="13">
				SELECT CEIL( count( * ) / 20 ) as total_pages
				FROM eka.mst_policy a, eka.mst_spaj_temp b
				WHERE a.reg_spaj = b.reg_spaj
			    	AND a.lstb_id = 1
					AND a.lspd_id $posisi$
					AND a.lssa_id = #lssa_id#
					AND b.sertifikat $kata$
				ORDER BY a.reg_spaj
			</isEqual>
		</isNotNull>
	 </select>	 

	 <!-- <select id="elions.uw.selectFilterSpaj2_valid" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterSpaj2">
	 	<isNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
				select a.reg_spaj from eka.mst_policy a, eka.mst_reff_bii b where lstb_id = 1 and b.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				a.reg_spaj $kata$
				and a.reg_spaj = b.reg_spaj
				and b.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj $kata$)
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="1">
				select a.reg_spaj from eka.mst_policy a, eka.mst_reff_bii b where lstb_id = 1 and b.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_policy_no $kata$
				and a.reg_spaj = b.reg_spaj
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				select a.reg_spaj from eka.mst_policy a, eka.mst_client_new b, eka.mst_reff_bii c where a.lstb_id = 1 and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				a.reg_spaj = c.reg_spaj and
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				select p.reg_spaj from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b, eka.mst_reff_bii c where p.lstb_id = 1 and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and 
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					and lssp_id=#lssp_id#
				</isNotNull>
				p.reg_spaj = c.reg_spaj and
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				select a.reg_spaj from eka.mst_policy a, eka.mst_reff_bii b
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ ) and b.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#)
				and a.reg_spaj = b.reg_spaj
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
				<isNotNull property="lssp_id" >
					and lssp_id=#lssp_id#
				</isNotNull>
			</isEqual>
			<isEqual property="tipe" compareValue="5">
				select a.reg_spaj from eka.mst_policy a, eka.mst_reff_bii b
				where a.mspo_nasabah_acc $kata$ and b.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#)
				and a.reg_spaj = b.reg_spaj
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
				<isNotNull property="lssp_id" >
					and lssp_id=#lssp_id#
				</isNotNull>
			</isEqual>
			<isEqual property="tipe" compareValue="6">
				select reg_spaj from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_no_blanko $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="11">
				select p.reg_spaj from eka.mst_policy p, eka.mst_insured a where p.lstb_id = 1 and
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					p.lssp_id=#lssp_id# and
				</isNotNull>
				p.reg_spaj = a.reg_spaj and trim(a.MSTE_NO_VACC) $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by reg_spaj			
			</isEqual>
		</isNull>
		<isNotNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
				select a.reg_spaj 
					from eka.mst_policy a,
						 eka.mst_insured b,
						 eka.mst_reff_bii c
					where a.reg_spaj =b.reg_spaj and
						  a.reg_spaj = c.reg_spaj and
						a.lstb_id = 1 and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and 
					a.lspd_id $posisi$ and 
				a.reg_spaj $kata$ and
				b.lssa_id=#lssaId#
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="1">
				select a.reg_spaj 
				from eka.mst_policy a,
					 eka.mst_insured b,
					 eka.mst_reff_bii c
					where a.reg_spaj=b.reg_spaj and
					 	  a.reg_spaj =c.reg_spaj and
						a.lstb_id = 1 and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and
					a.lspd_id $posisi$ and 
				a.mspo_policy_no $kata$ and
				b.lssa_id=#lssaId#
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				select a.reg_spaj from eka.mst_policy a, eka.mst_client_new b,eka.mst_insured c, eka.mst_reff_bii d
					 where a.reg_spaj=c.reg_spaj and
					 	   a.reg_spaj = d.reg_spaj and d.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and
					 a.lstb_id = 1 and 
					a.lspd_id $posisi$ and 
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$ and
				c.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				select p.reg_spaj from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b, eka.mst_reff_bii c where p.lstb_id = 1 and 
					p.lspd_id $posisi$ and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and
				p.reg_spaj = a.reg_spaj and 
				p.reg_spaj = c.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$ and
				a.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				select a.reg_spaj from eka.mst_policy a ,eka.mst_insured b, eka.mst_reff_bii c
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ )
					and a.lspd_id $posisi$ and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and
					a.reg_spaj=b.reg_Spaj and
					a.reg_spaj = c.reg_spaj and
					b.lssa_id=#lssaId#
			</isEqual>
			<isEqual property="tipe" compareValue="5">
				select a.reg_spaj from eka.mst_policy a ,eka.mst_insured b, eka.mst_reff_bii c
				where a.mspo_nasabah_acc $kata$ 
					and a.lspd_id $posisi$ and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and
					a.reg_spaj=b.reg_Spaj and
					a.reg_spaj = c.reg_spaj and
					b.lssa_id=#lssaId#
			</isEqual>
			<isEqual property="tipe" compareValue="11">
				select p.reg_spaj from eka.mst_policy p, eka.mst_insured a where p.lstb_id = 1 and
				p.lspd_id $posisi$ and 
				p.reg_spaj = a.reg_spaj and trim(a.MSTE_NO_VACC) $kata$
				and a.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by reg_spaj			
			</isEqual>
		</isNotNull>
	 </select> -->
	 
	  <select id="elions.uw.selectFilterSpaj2_valid" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterSpaj2">
	 	<isNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
			 select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a, eka.mst_reff_bii b where lstb_id = 1 and b.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				a.reg_spaj $kata$
				and a.reg_spaj = b.reg_spaj
				and b.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj $kata$)
				order by a.reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		 	</isNotNull>
	   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="1">
			 select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a, eka.mst_reff_bii b where lstb_id = 1 and b.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_policy_no $kata$
				and a.reg_spaj = b.reg_spaj
				order by a.reg_spaj )
				<isNotEmpty property="noPage">
		  	 	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		 		</isNotNull>
	   			</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="2">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a, eka.mst_client_new b, eka.mst_reff_bii c where a.lstb_id = 1 and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				a.reg_spaj = c.reg_spaj and
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first )
				<isNotEmpty property="noPage">
		   		<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
			 	</isNotNull>
		   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="3">
			select * FROM(
				select ROWNUM as row_number, p.reg_spaj from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b, eka.mst_reff_bii c where p.lstb_id = 1 and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and 
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					and lssp_id=#lssp_id#
				</isNotNull>
				p.reg_spaj = c.reg_spaj and
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first )
				<isNotEmpty property="noPage">
		   		<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
			 	</isNotNull>
		   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="4">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a, eka.mst_reff_bii b
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ ) and b.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#)
				and a.reg_spaj = b.reg_spaj
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
				<isNotNull property="lssp_id" >
					and lssp_id=#lssp_id#
				</isNotNull>
				)
				<isNotEmpty property="noPage">
		   		<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
			 	</isNotNull>
		   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="5">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a, eka.mst_reff_bii b
				where a.mspo_nasabah_acc $kata$ and b.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#)
				and a.reg_spaj = b.reg_spaj
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
				<isNotNull property="lssp_id" >
					and lssp_id=#lssp_id#
				</isNotNull>
				)
				<isNotEmpty property="noPage">
		   		<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
			 	</isNotNull>
		   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="6">
			select * FROM(
				select ROWNUM as row_number, reg_spaj from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_no_blanko $kata$
				order by reg_spaj )
				<isNotEmpty property="noPage">
		   		<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
			 	</isNotNull>
		   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="11">
			select * FROM(
				select ROWNUM as row_number, p.reg_spaj from eka.mst_policy p, eka.mst_insured a where p.lstb_id = 1 and
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					p.lssp_id=#lssp_id# and
				</isNotNull>
				p.reg_spaj = a.reg_spaj and trim(a.MSTE_NO_VACC) $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by reg_spaj )
				<isNotEmpty property="noPage">
		   		<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
			 	</isNotNull>
		   		</isNotEmpty>						
			</isEqual>
		</isNull>
		<isNotNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj 
					from eka.mst_policy a,
						 eka.mst_insured b,
						 eka.mst_reff_bii c
					where a.reg_spaj =b.reg_spaj and
						  a.reg_spaj = c.reg_spaj and
						a.lstb_id = 1 and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and 
					a.lspd_id $posisi$ and 
				a.reg_spaj $kata$ and
				b.lssa_id=#lssaId#
				order by a.reg_spaj )
				<isNotEmpty property="noPage">
		   		<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
			 	</isNotNull>
		   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="1">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj 
				from eka.mst_policy a,
					 eka.mst_insured b,
					 eka.mst_reff_bii c
					where a.reg_spaj=b.reg_spaj and
					 	  a.reg_spaj =c.reg_spaj and
						a.lstb_id = 1 and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and
					a.lspd_id $posisi$ and 
				a.mspo_policy_no $kata$ and
				b.lssa_id=#lssaId#
				order by a.reg_spaj )
				<isNotEmpty property="noPage">
		   		<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
			 	</isNotNull>
		   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="2">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a, eka.mst_client_new b,eka.mst_insured c, eka.mst_reff_bii d
					 where a.reg_spaj=c.reg_spaj and
					 	   a.reg_spaj = d.reg_spaj and d.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and
					 a.lstb_id = 1 and 
					a.lspd_id $posisi$ and 
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$ and
				c.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first )
				<isNotEmpty property="noPage">
		   		<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
			 	</isNotNull>
		   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="3">
			select * FROM(
				select ROWNUM as row_number, p.reg_spaj from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b, eka.mst_reff_bii c where p.lstb_id = 1 and 
					p.lspd_id $posisi$ and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and
				p.reg_spaj = a.reg_spaj and 
				p.reg_spaj = c.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$ and
				a.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first )
				<isNotEmpty property="noPage">
		   		<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
			 	</isNotNull>
		   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="4">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a ,eka.mst_insured b, eka.mst_reff_bii c
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ )
					and a.lspd_id $posisi$ and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and
					a.reg_spaj=b.reg_Spaj and
					a.reg_spaj = c.reg_spaj and
					b.lssa_id=#lssaId# )
				<isNotEmpty property="noPage">
			   	<isNotNull property="noRow">
			   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
			   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
				 </isNotNull>
			   	</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="5">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a ,eka.mst_insured b, eka.mst_reff_bii c
				where a.mspo_nasabah_acc $kata$ 
					and a.lspd_id $posisi$ and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and
					a.reg_spaj=b.reg_Spaj and
					a.reg_spaj = c.reg_spaj and
					b.lssa_id=#lssaId# )
				<isNotEmpty property="noPage">
			   	<isNotNull property="noRow">
			   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
			   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
				 </isNotNull>
			   	</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="11">
			select * FROM(
				select ROWNUM as row_number, p.reg_spaj from eka.mst_policy p, eka.mst_insured a where p.lstb_id = 1 and
				p.lspd_id $posisi$ and 
				p.reg_spaj = a.reg_spaj and trim(a.MSTE_NO_VACC) $kata$
				and a.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by reg_spaj	)
				<isNotEmpty property="noPage">
			   	<isNotNull property="noRow">
			   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
			   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
				 </isNotNull>
			   	</isNotEmpty>			
			</isEqual>
		</isNotNull>
	 </select>
	 
	 <select id="elions.uw.selectTotalFilterSpaj2_valid" parameterClass="java.util.HashMap" resultClass="string">
	 	<isNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a, eka.mst_reff_bii b where lstb_id = 1 and b.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				a.reg_spaj $kata$
				and a.reg_spaj = b.reg_spaj
				and b.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj $kata$)
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="1">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a, eka.mst_reff_bii b where lstb_id = 1 and b.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_policy_no $kata$
				and a.reg_spaj = b.reg_spaj
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a, eka.mst_client_new b, eka.mst_reff_bii c where a.lstb_id = 1 and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				a.reg_spaj = c.reg_spaj and
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b, eka.mst_reff_bii c where p.lstb_id = 1 and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and 
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					and lssp_id=#lssp_id#
				</isNotNull>
				p.reg_spaj = c.reg_spaj and
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a, eka.mst_reff_bii b
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ ) and b.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#)
				and a.reg_spaj = b.reg_spaj
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
				<isNotNull property="lssp_id" >
					and lssp_id=#lssp_id#
				</isNotNull>
			</isEqual>
			<isEqual property="tipe" compareValue="5">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a, eka.mst_reff_bii b
				where a.mspo_nasabah_acc $kata$ and b.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#)
				and a.reg_spaj = b.reg_spaj
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
				<isNotNull property="lssp_id" >
					and lssp_id=#lssp_id#
				</isNotNull>
			</isEqual>
			<isEqual property="tipe" compareValue="6">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_no_blanko $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="11">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy p, eka.mst_insured a where p.lstb_id = 1 and
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					p.lssp_id=#lssp_id# and
				</isNotNull>
				p.reg_spaj = a.reg_spaj and trim(a.MSTE_NO_VACC) $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by reg_spaj			
			</isEqual>
		</isNull>
		<isNotNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
				SELECT CEIL( count( * ) / 20 ) as total_pages 
					from eka.mst_policy a,
						 eka.mst_insured b,
						 eka.mst_reff_bii c
					where a.reg_spaj =b.reg_spaj and
						  a.reg_spaj = c.reg_spaj and
						a.lstb_id = 1 and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and 
					a.lspd_id $posisi$ and 
				a.reg_spaj $kata$ and
				b.lssa_id=#lssaId#
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="1">
				SELECT CEIL( count( * ) / 20 ) as total_pages 
				from eka.mst_policy a,
					 eka.mst_insured b,
					 eka.mst_reff_bii c
					where a.reg_spaj=b.reg_spaj and
					 	  a.reg_spaj =c.reg_spaj and
						a.lstb_id = 1 and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and
					a.lspd_id $posisi$ and 
				a.mspo_policy_no $kata$ and
				b.lssa_id=#lssaId#
				order by a.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a, eka.mst_client_new b,eka.mst_insured c, eka.mst_reff_bii d
					 where a.reg_spaj=c.reg_spaj and
					 	   a.reg_spaj = d.reg_spaj and d.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and
					 a.lstb_id = 1 and 
					a.lspd_id $posisi$ and 
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$ and
				c.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b, eka.mst_reff_bii c where p.lstb_id = 1 and 
					p.lspd_id $posisi$ and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and
				p.reg_spaj = a.reg_spaj and 
				p.reg_spaj = c.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$ and
				a.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a ,eka.mst_insured b, eka.mst_reff_bii c
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ )
					and a.lspd_id $posisi$ and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and
					a.reg_spaj=b.reg_Spaj and
					a.reg_spaj = c.reg_spaj and
					b.lssa_id=#lssaId#
			</isEqual>
			<isEqual property="tipe" compareValue="5">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a ,eka.mst_insured b, eka.mst_reff_bii c
				where a.mspo_nasabah_acc $kata$ 
					and a.lspd_id $posisi$ and c.lcb_no = (select cab_bank from eka.lst_user where lus_id = #lus_id#) and
					a.reg_spaj=b.reg_Spaj and
					a.reg_spaj = c.reg_spaj and
					b.lssa_id=#lssaId#
			</isEqual>
			<isEqual property="tipe" compareValue="11">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy p, eka.mst_insured a where p.lstb_id = 1 and
				p.lspd_id $posisi$ and 
				p.reg_spaj = a.reg_spaj and trim(a.MSTE_NO_VACC) $kata$
				and a.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by reg_spaj			
			</isEqual>
		</isNotNull>
	 </select>	 

	<!--  <select id="elions.uw.selectFilterSpaj2SimasPrima" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterSpaj2">
	 	<isNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
				select reg_spaj from eka.mst_policy where lstb_id = 1 and lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id $posisi$ and 
				</isNotEqual>
				reg_spaj $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="1">
				select reg_spaj from eka.mst_policy where lstb_id = 1 and lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id $posisi$ and 
				</isNotEqual>
				mspo_policy_no $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				select a.reg_spaj from eka.mst_policy a, eka.mst_client_new b where a.lstb_id = 1 and a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id $posisi$ and 
				</isNotEqual>
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				select p.reg_spaj from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b where p.lstb_id = 1 and p.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and 
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id $posisi$ and 
				</isNotEqual>
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				select reg_spaj from eka.mst_policy a 
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ ) and  a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#)
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id $posisi$
				</isNotEqual>
			</isEqual>
			<isEqual property="tipe" compareValue="5">
				select reg_spaj from eka.mst_policy a, eka.mst_data_bmi b
				where a.reg_spaj = b.reg_spaj
				 and a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#)
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id $posisi$
				</isNotEqual>
				and b.norek $kata$
			</isEqual>
			
			<isEqual property="tipe" compareValue="6">
				select reg_spaj from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id $posisi$ and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_no_blanko $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="11">
				select p.reg_spaj from eka.mst_policy p, eka.mst_insured a where p.lstb_id = 1 and p.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and 
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id $posisi$ and 
				</isNotEqual>
				p.reg_spaj = a.reg_spaj and trim(a.MSTE_NO_VACC) $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by reg_spaj
			</isEqual>			
		</isNull>
		<isNotNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
				select a.reg_spaj 
					from eka.mst_policy a,
						 eka.mst_insured b
					where a.reg_spaj =b.reg_spaj and
						a.lstb_id = 1 and  a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and
					a.lspd_id $posisi$ and 
				a.reg_spaj $kata$ and
				b.lssa_id=#lssaId#
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="1">
				select a.reg_spaj 
				from eka.mst_policy a,
					 eka.mst_insured b
					where a.reg_spaj=b.reg_spaj and
						a.lstb_id = 1 and  a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and
					a.lspd_id $posisi$ and 
				a.mspo_policy_no $kata$ and
				b.lssa_id=#lssaId#
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				select a.reg_spaj from eka.mst_policy a, eka.mst_client_new b,eka.mst_insured c
					 where a.reg_spaj=c.reg_spaj and  a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and
					 a.lstb_id = 1 and 
					a.lspd_id $posisi$ and 
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$ and
				c.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				select p.reg_spaj from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b where p.lstb_id = 1 and 
					p.lspd_id $posisi$ and  p.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and 
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$ and
				a.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				select a.reg_spaj from eka.mst_policy a ,eka.mst_insured b
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ )
					and a.lspd_id $posisi$ and  a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and
					a.reg_spaj=b.reg_Spaj and
					b.lssa_id=#lssaId#
			</isEqual>
			<isEqual property="tipe" compareValue="5">
				select reg_spaj from eka.mst_policy a, eka.mst_data_bmi b, eka.mst_insured c
				where a.reg_spaj = b.reg_spaj and a.reg_spaj = c.reg_spaj
				 and a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#)
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
				and c.lssa_id=#lssaId#
				and b.norek $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="6">
				select reg_spaj from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_no_blanko $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="11">
				select p.reg_spaj from eka.mst_policy p, eka.mst_insured a where p.lstb_id = 1 and p.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and 
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id $posisi$ and 
				</isNotEqual>
				p.reg_spaj = a.reg_spaj and trim(a.MSTE_NO_VACC) $kata$
				and a.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by reg_spaj
			</isEqual>			
		</isNotNull>
	 </select> -->
	 
	 <select id="elions.uw.selectFilterSpaj2SimasPrima" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterSpaj2">
	 	<isNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
			 select * FROM(
				select ROWNUM as row_number, reg_spaj from eka.mst_policy where lstb_id = 1 and <!-- lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and  -->
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id $posisi$ and 
				</isNotEqual>
				reg_spaj $kata$
				order by reg_spaj)
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="1">
			 select * FROM(
				select  ROWNUM as row_number, reg_spaj from eka.mst_policy where lstb_id = 1 and <!-- lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and -->
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id $posisi$ and 
				</isNotEqual>
				mspo_policy_no $kata$
				order by reg_spaj)
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="2">
			 select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a, eka.mst_client_new b where a.lstb_id = 1 and <!-- a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and -->
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id $posisi$ and 
				</isNotEqual>
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first)
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="3">
			 select * FROM(
				select ROWNUM as row_number, p.reg_spaj from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b where p.lstb_id = 1 and <!-- p.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and --> 
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id $posisi$ and 
				</isNotEqual>
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first)
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="4">
			select * FROM(
				select ROWNUM as row_number, reg_spaj from eka.mst_policy a 
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ ) and  <!-- a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) -->
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id $posisi$					
				</isNotEqual>
				)
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="5">
			select * FROM(
				select ROWNUM as row_number, reg_spaj from eka.mst_policy a, eka.mst_data_bmi b
				where a.reg_spaj = b.reg_spaj
				 <!--and a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#)-->
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id $posisi$
				</isNotEqual>
				and b.norek $kata$
				)
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>
			</isEqual>			
			<isEqual property="tipe" compareValue="6">
			select * FROM(
				select ROWNUM as row_number, reg_spaj from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id $posisi$ and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_no_blanko $kata$
				order by reg_spaj
				)
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="11">
			select * FROM(
				select ROWNUM as row_number, p.reg_spaj from eka.mst_policy p, eka.mst_insured a where p.lstb_id = 1 and <!-- p.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and --> 
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id $posisi$ and 
				</isNotEqual>
				p.reg_spaj = a.reg_spaj and trim(a.MSTE_NO_VACC) $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by reg_spaj
				)
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>			
		</isNull>
		<isNotNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj 
					from eka.mst_policy a,
						 eka.mst_insured b
					where a.reg_spaj =b.reg_spaj and
						a.lstb_id = 1 and  <!--a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and -->
					a.lspd_id $posisi$ and 
				a.reg_spaj $kata$ and
				b.lssa_id=#lssaId#
				order by reg_spaj
				)
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="1">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj 
				from eka.mst_policy a,
					 eka.mst_insured b
					where a.reg_spaj=b.reg_spaj and
						a.lstb_id = 1 and  <!--a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and -->
					a.lspd_id $posisi$ and 
				a.mspo_policy_no $kata$ and
				b.lssa_id=#lssaId#
				order by reg_spaj
				)
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="2">
			select * FROM(
				select ROWNUM as row_number, a.reg_spaj from eka.mst_policy a, eka.mst_client_new b,eka.mst_insured c
					 where a.reg_spaj=c.reg_spaj and  <!--a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and -->
					 a.lstb_id = 1 and 
					a.lspd_id $posisi$ and 
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$ and
				c.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="3">
			select * FROM(
				select ROWNUM as row_number, p.reg_spaj from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b where p.lstb_id = 1 and 
					p.lspd_id $posisi$ and  <!-- p.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#)--> and 
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$ and
				a.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>	
			</isEqual>
			<isEqual property="tipe" compareValue="4">
			select * FROM(
				select  ROWNUM as row_number, a.reg_spaj from eka.mst_policy a ,eka.mst_insured b
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ )
					and a.lspd_id $posisi$ and  <!-- a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and -->
					a.reg_spaj=b.reg_Spaj and
					b.lssa_id=#lssaId# )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>		
			</isEqual>
			<isEqual property="tipe" compareValue="5">
			select * FROM(
				select ROWNUM as row_number, reg_spaj from eka.mst_policy a, eka.mst_data_bmi b, eka.mst_insured c
				where a.reg_spaj = b.reg_spaj and a.reg_spaj = c.reg_spaj
				 <!--and a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#)-->
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
				and c.lssa_id=#lssaId#
				and b.norek $kata$ )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>		
			</isEqual>
			<isEqual property="tipe" compareValue="6">
			select * FROM(
				select ROWNUM as row_number, reg_spaj from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_no_blanko $kata$
				order by reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>
			</isEqual>
			<isEqual property="tipe" compareValue="11">
			select * FROM(
				select ROWNUM as row_number, p.reg_spaj from eka.mst_policy p, eka.mst_insured a where p.lstb_id = 1 and <!-- p.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and --> 
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id $posisi$ and 
				</isNotEqual>
				p.reg_spaj = a.reg_spaj and trim(a.MSTE_NO_VACC) $kata$
				and a.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by reg_spaj )
			<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   		</isNotEmpty>
			</isEqual>			
		</isNotNull>
	 </select>
	 
	 <select id="elions.uw.selectTotalFilterSpaj2SimasPrima" parameterClass="java.util.HashMap" resultClass="string">
	 	<isNull property="lssaId">
			<isEqual property="tipe" compareValue="0">				
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy where lstb_id = 1 and <!-- lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and  -->
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id $posisi$ and 
				</isNotEqual>
				reg_spaj $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="1">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy where lstb_id = 1 and <!-- lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and -->
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id $posisi$ and 
				</isNotEqual>
				mspo_policy_no $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a, eka.mst_client_new b where a.lstb_id = 1 and <!-- a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and -->
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id $posisi$ and 
				</isNotEqual>
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b where p.lstb_id = 1 and <!-- p.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and --> 
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id $posisi$ and 
				</isNotEqual>
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a 
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ ) and  <!-- a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) -->
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id $posisi$
				</isNotEqual>
			</isEqual>
			<isEqual property="tipe" compareValue="5">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a, eka.mst_data_bmi b
				where a.reg_spaj = b.reg_spaj
				 <!--and a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#)-->
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id $posisi$
				</isNotEqual>
				and b.norek $kata$
			</isEqual>
			
			<isEqual property="tipe" compareValue="6">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id $posisi$ and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_no_blanko $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="11">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy p, eka.mst_insured a where p.lstb_id = 1 and <!-- p.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and --> 
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id $posisi$ and 
				</isNotEqual>
				p.reg_spaj = a.reg_spaj and trim(a.MSTE_NO_VACC) $kata$
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by reg_spaj
			</isEqual>			
		</isNull>
		<isNotNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
				SELECT CEIL( count( * ) / 20 ) as total_pages 
					from eka.mst_policy a,
						 eka.mst_insured b
					where a.reg_spaj =b.reg_spaj and
						a.lstb_id = 1 and  <!--a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and -->
					a.lspd_id $posisi$ and 
				a.reg_spaj $kata$ and
				b.lssa_id=#lssaId#
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="1">
				SELECT CEIL( count( * ) / 20 ) as total_pages 
				from eka.mst_policy a,
					 eka.mst_insured b
					where a.reg_spaj=b.reg_spaj and
						a.lstb_id = 1 and  <!--a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and -->
					a.lspd_id $posisi$ and 
				a.mspo_policy_no $kata$ and
				b.lssa_id=#lssaId#
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a, eka.mst_client_new b,eka.mst_insured c
					 where a.reg_spaj=c.reg_spaj and  <!--a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and -->
					 a.lstb_id = 1 and 
					a.lspd_id $posisi$ and 
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$ and
				c.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b where p.lstb_id = 1 and 
					p.lspd_id $posisi$ and  <!-- p.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#)--> and 
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$ and
				a.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by b.mcl_first
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a ,eka.mst_insured b
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ )
					and a.lspd_id $posisi$ and  <!-- a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and -->
					a.reg_spaj=b.reg_Spaj and
					b.lssa_id=#lssaId#
			</isEqual>
			<isEqual property="tipe" compareValue="5">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy a, eka.mst_data_bmi b, eka.mst_insured c
				where a.reg_spaj = b.reg_spaj and a.reg_spaj = c.reg_spaj
				 <!--and a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#)-->
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
				and c.lssa_id=#lssaId#
				and b.norek $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="6">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				mspo_no_blanko $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="11">
				SELECT CEIL( count( * ) / 20 ) as total_pages from eka.mst_policy p, eka.mst_insured a where p.lstb_id = 1 and <!-- p.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and --> 
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id $posisi$ and 
				</isNotEqual>
				p.reg_spaj = a.reg_spaj and trim(a.MSTE_NO_VACC) $kata$
				and a.lssa_id=#lssaId#
				<isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
				order by reg_spaj
			</isEqual>			
		</isNotNull>
	 </select>
	 
	 <select id="elions.uw.selectFilterSpajSimple" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterSpaj2">
        <isEqual property="tipe" compareValue="0">
                select a.reg_spaj from eka.mst_policy a, eka.mst_product_insured b where a.lstb_id = 1 and a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and 
                <isNotEqual property="posisi" compareValue="-1">
                    a.lspd_id = #posisi# and 
                </isNotEqual>
                <isEqual property="jenis" compareValue="simple">
                   (b.lsbs_id = 196 and b.lsdbs_number = 2) and
                </isEqual>
                a.reg_spaj = b.reg_spaj and
                a.reg_spaj $kata$
                order by a.reg_spaj
            </isEqual>
            <isEqual property="tipe" compareValue="1">
                select a.reg_spaj from eka.mst_policy a, eka.mst_product_insured b where a.lstb_id = 1 and a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and 
                <isNotEqual property="posisi" compareValue="-1">
                    a.lspd_id = #posisi# and 
                </isNotEqual>
                <isEqual property="jenis" compareValue="simple">
                   (b.lsbs_id = 196 and b.lsdbs_number = 2) and
                </isEqual>
                a.reg_spaj = b.reg_spaj and
                a.mspo_policy_no $kata$
                order by a.reg_spaj
            </isEqual>
            <isEqual property="tipe" compareValue="2">
                select a.reg_spaj from eka.mst_policy a, eka.mst_client_new b, eka.mst_product_insured c where a.lstb_id = 1 and a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and 
                <isNotEqual property="posisi" compareValue="-1">
                    a.lspd_id = #posisi# and 
                </isNotEqual>
                <isEqual property="jenis" compareValue="simple">
                   (c.lsbs_id = 196 and c.lsdbs_number = 2) and
                </isEqual>
                a.mspo_policy_holder = b.mcl_id and
                a.reg_spaj = c.reg_spaj and
                b.mcl_first $kata$
                <isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
                order by b.mcl_first
            </isEqual>
            <isEqual property="tipe" compareValue="3">
                select p.reg_spaj from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b, eka.mst_product_insured c where p.lstb_id = 1 and p.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#) and 
                <isNotEqual property="posisi" compareValue="-1">
                    p.lspd_id = #posisi# and 
                </isNotEqual>
                <isEqual property="jenis" compareValue="simple">
                   (c.lsbs_id = 196 and c.lsdbs_number = 2) and
                </isEqual>
                p.reg_spaj = a.reg_spaj and
                p.reg_spaj = c.reg_spaj and
                a.mste_insured = b.mcl_id and
                b.mcl_first $kata$
                <isNotEmpty property="tgl_lahir" prepend=" and "> b.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
                order by b.mcl_first
            </isEqual>
            <isEqual property="tipe" compareValue="4">
                select a.reg_spaj from eka.mst_policy a, eka.mst_product_insured b 
                where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ ) and a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#)
                <isNotEqual property="posisi" compareValue="-1">
                    and a.lspd_id = #posisi#
                </isNotEqual>
                <isEqual property="jenis" compareValue="simple">
                   and (b.lsbs_id = 196 and b.lsdbs_number = 2)
                </isEqual>
            </isEqual>
            <isEqual property="tipe" compareValue="5">
                select a.reg_spaj from eka.mst_policy a, eka.mst_data_bmi b, eka.mst_product_insured c
                where a.reg_spaj = b.reg_spaj
                and a.reg_spaj = c.reg_spaj
                and a.lus_id in (select lus_id from eka.lst_user where jn_bank=#jn_bank#)
                <isNotEqual property="posisi" compareValue="-1">
                    and a.lspd_id = #posisi#
                </isNotEqual>
                <isEqual property="jenis" compareValue="simple">
                   and (b.lsbs_id = 196 and b.lsdbs_number = 2)
                </isEqual>
                and b.norek $kata$
            </isEqual>
            <isEqual property="tipe" compareValue="6">
                select a.reg_spaj from eka.mst_policy a, eka.mst_product_insured b where lstb_id = 1 and 
                <isNotEqual property="posisi" compareValue="-1">
                    a.lspd_id = #posisi# and 
                </isNotEqual>
                <isNotNull property="lssp_id" >
                    a.lssp_id=#lssp_id# and
                </isNotNull>
                <isEqual property="jenis" compareValue="simple">
                   (b.lsbs_id = 196 and b.lsdbs_number = 2) and
                </isEqual>
                a.mspo_no_blanko $kata$
                order by a.reg_spaj
            </isEqual>
     </select>
	 
	  <select id="elions.uw.selectFilterOtorisasi" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterOtorisasi">
	 	<isEqual property="tipe" compareValue="0">
				SELECT DISTINCT x.reg_spaj, x.mspo_policy_no_format, x.lus_id,
                          x.mspo_date_print,x.mspo_policy_no
		  		FROM (SELECT a.reg_spaj, a.mspo_policy_no_format, a.lus_id,
		                 a.mspo_date_print,a.mspo_policy_no
		              FROM eka.mst_policy a, eka.mst_reff_bii b, eka.lst_user c
		              WHERE a.lspd_id = 6
		              		AND a.mspo_date_print IS NOT NULL
		             		AND a.reg_spaj = b.reg_spaj
		        	  ORDER BY a.mspo_date_print DESC)x
		 		WHERE x.reg_spaj $kata$
				order by x.reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="1">
				SELECT DISTINCT x.reg_spaj, x.mspo_policy_no_format, x.lus_id,
                          x.mspo_date_print, x.mspo_policy_no
		  		FROM (SELECT a.reg_spaj, a.mspo_policy_no_format, a.lus_id,a.mspo_policy_no,
		                 a.mspo_date_print
		              FROM eka.mst_policy a, eka.mst_reff_bii b, eka.lst_user c
		              WHERE a.lspd_id = 6
		              		AND a.mspo_date_print IS NOT NULL
		             		AND a.reg_spaj = b.reg_spaj
		        	  ORDER BY a.mspo_date_print DESC)x
		 		WHERE x.mspo_policy_no $kata$
				order by x.reg_spaj
			</isEqual>
	 </select>
	 
	  <select id="elions.uw.selectFilterHPlusSatu" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterOtorisasi">
	 	<isEqual property="tipe" compareValue="0">
		SELECT DISTINCT x.reg_spaj, x.mspo_policy_no_format, x.lus_id,
                          x.mspo_date_print,x.mspo_policy_no
					  FROM (SELECT   ROWNUM NO, a.reg_spaj, a.mspo_policy_no_format, a.lus_id,
		                 a.mspo_date_print, a.mspo_policy_no
		            FROM eka.mst_policy a, eka.mst_product_insured b , eka.mst_insured c
		           WHERE a.lspd_id = 2
		             AND a.mspo_date_print IS NOT NULL
		             AND a.reg_spaj = b.reg_spaj
		             AND a.reg_spaj = c.reg_spaj
		             AND c.mste_tgl_aksep  is null
		             AND (   (b.lsbs_id = 142 AND b.lsdbs_number = 2)
		                  OR (b.lsbs_id = 158 AND b.lsdbs_number = 6)
		                  OR (b.lsbs_id = 164 AND b.lsdbs_number = 2)
		                  OR (b.lsbs_id = 175 AND b.lsdbs_number = 2)
		                 )
		        ORDER BY a.mspo_date_print DESC)x
				 WHERE  x.reg_spaj $kata$
				 ORDER BY x.mspo_date_print DESC
			</isEqual>
			<isEqual property="tipe" compareValue="1">
			SELECT DISTINCT x.reg_spaj, x.mspo_policy_no_format, x.lus_id,
                          x.mspo_date_print,x.mspo_policy_no
		 			 FROM (SELECT   ROWNUM NO, a.reg_spaj, a.mspo_policy_no_format, a.lus_id,
		                 a.mspo_date_print, a.mspo_policy_no
		            FROM eka.mst_policy a, eka.mst_product_insured b , eka.mst_insured c
		           WHERE a.lspd_id = 2
		             AND a.mspo_date_print IS NOT NULL
		             AND a.reg_spaj = b.reg_spaj
		             AND a.reg_spaj = c.reg_spaj
		             AND c.mste_tgl_aksep  is null
		             AND (   (b.lsbs_id = 142 AND b.lsdbs_number = 2)
		                  OR (b.lsbs_id = 158 AND b.lsdbs_number = 6)
		                  OR (b.lsbs_id = 164 AND b.lsdbs_number = 2)
		                  OR (b.lsbs_id = 175 AND b.lsdbs_number = 2)
		                 )
		        ORDER BY a.mspo_date_print DESC)x
				 WHERE  x.mspo_policy_no $kata$
				 ORDER BY x.mspo_date_print DESC
			</isEqual>
	 </select>
	 
	 <select id="elions.uw.selectdetilagen" parameterClass="string" resultClass="com.ekalife.elions.model.Agen">
				SELECT "EKA"."MST_AGENT"."MSAG_ID",   
					   NVL("EKA"."MST_AGENT"."MST_LEADER",'') MST_LEADER,  
					         trim("EKA"."MST_CLIENT_NEW"."MCL_FIRST") MCL_FIRST,
					"EKA"."MST_AGENT"."LSLE_ID",
					"EKA"."MST_AGENT"."MSAG_ACTIVE",
					"EKA"."MST_AGENT"."MSAG_FLAG_BM",
					"EKA"."MST_AGENT"."MSAG_SBM",
					"EKA"."LST_LEVEL_AGENT"."LSLE_NAME"
					    FROM "EKA"."MST_AGENT",   
					         "EKA"."MST_CLIENT_NEW" ,
							 "EKA"."LST_LEVEL_AGENT" 
					   WHERE ( "EKA"."MST_CLIENT_NEW"."MCL_ID" = "EKA"."MST_AGENT"."MCL_ID" )    and
					"EKA"."MST_AGENT"."MSAG_ID"  =#value# AND
					"EKA"."MST_AGENT"."LSLE_ID" = "EKA"."LST_LEVEL_AGENT"."LSLE_ID" and
					"EKA"."LST_LEVEL_AGENT"."LSTB_ID" = 1
					order by  trim("EKA"."MST_CLIENT_NEW"."MCL_FIRST"),
					"EKA"."MST_AGENT"."MSAG_ID"				
	</select>
	 
	 <select id="elions.uw.selectFilteragency" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			<isEqual property="tipe" compareValue="0">
					SELECT "EKA"."MST_AGENT"."MSAG_ID",   
					         "EKA"."MST_AGENT"."MST_LEADER",   
					         trim("EKA"."MST_CLIENT_NEW"."MCL_FIRST") MCL_FIRST,
					"EKA"."MST_AGENT"."LSLE_ID",
					"EKA"."MST_AGENT"."MSAG_ACTIVE"
					    FROM "EKA"."MST_AGENT",   
					         "EKA"."MST_CLIENT_NEW"  
					   WHERE ( "EKA"."MST_CLIENT_NEW"."MCL_ID" = "EKA"."MST_AGENT"."MCL_ID" )    and
					"EKA"."MST_AGENT"."MSAG_ID"  $kata$
					order by  trim("EKA"."MST_CLIENT_NEW"."MCL_FIRST"),
					"EKA"."MST_AGENT"."MSAG_ID"			
		</isEqual>
		<isEqual property="tipe" compareValue="1">
					SELECT "EKA"."MST_AGENT"."MSAG_ID",   
					         "EKA"."MST_AGENT"."MST_LEADER",   
					         trim("EKA"."MST_CLIENT_NEW"."MCL_FIRST") MCL_FIRST,
					"EKA"."MST_AGENT"."LSLE_ID",
					"EKA"."MST_AGENT"."MSAG_ACTIVE"
					    FROM "EKA"."MST_AGENT",   
					         "EKA"."MST_CLIENT_NEW"  
					   WHERE ( "EKA"."MST_CLIENT_NEW"."MCL_ID" = "EKA"."MST_AGENT"."MCL_ID" )    and
					trim("EKA"."MST_CLIENT_NEW"."MCL_FIRST")  $kata$
					order by  trim("EKA"."MST_CLIENT_NEW"."MCL_FIRST"),
					"EKA"."MST_AGENT"."MSAG_ID"			
		</isEqual>
	 </select>
	 
	 <select id="elions.uw.selectgutri" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterSpaj2">
		<isEqual property="tipe" compareValue="0">
			select  distinct  tab.* from
			(
				(select reg_spaj from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				reg_spaj $kata$)
			union
				(select reg_spaj from eka.mst_billing 
				where  
				lspd_id in (59,60) and
				reg_spaj $kata$)
			) tab
			order by tab.reg_spaj
		</isEqual>
		<isEqual property="tipe" compareValue="1">
			select  distinct  tab.* from
			(
				(select reg_spaj from eka.mst_policy where lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				mspo_policy_no $kata$)
			union
				(select eka.mst_billing.reg_spaj 
				from eka.mst_billing ,eka.mst_policy
				where  eka.mst_billing.reg_spaj = eka.mst_policy.reg_spaj and
				eka.mst_billing.lspd_id in (59,60) 
				and 
				eka.mst_policy.mspo_policy_no $kata$ )
			) tab
			order by tab.reg_spaj
		</isEqual>
		<isEqual property="tipe" compareValue="2">
			select tab.* from
			(
				(select a.reg_spaj from eka.mst_policy a, eka.mst_client_new b where a.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					a.lspd_id = #posisi# and 
				</isNotEqual>
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$)
			union
				(select a.reg_spaj from eka.mst_policy a, eka.mst_client_new b ,eka.mst_billing c 
				where a.lstb_id = 1 and 
					c.lspd_id in (59,60) and a.reg_spaj = c.reg_spaj and
				a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$)
			) tab
			order by tab.reg_spaj
		</isEqual>
		<isEqual property="tipe" compareValue="3">
			select distinct tab.* from
			(
				(select p.reg_spaj from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b 
				where p.lstb_id = 1 and 
				<isNotEqual property="posisi" compareValue="-1">
					p.lspd_id = #posisi# and 
				</isNotEqual>
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$) 
			union
				(select p.reg_spaj 
				from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b ,
				eka.mst_billing c
				where p.lstb_id = 1 and 
				c.lspd_id in (59,60) and 
				p.reg_spaj = c.reg_spaj and
				p.reg_spaj = a.reg_spaj and a.mste_insured = b.mcl_id and b.mcl_first $kata$)
			)tab
			order by tab.reg_spaj
		</isEqual>
		<isEqual property="tipe" compareValue="4">
			select distinct tab.* from
			((select reg_spaj from eka.mst_policy a 
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ )
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
		)union(
			select a.reg_spaj 
			from eka.mst_policy a ,eka.mst_billing c
			where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ )
			and a.reg_spaj = c.reg_spaj 
			  AND c.lspd_id IN (59, 60))) tab
		</isEqual>
		<isEqual property="tipe" compareValue="5">
			select distinct tab.* from
			((select reg_spaj from eka.mst_policy a 
				where a.mspo_nasabah_acc $kata$ 
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
		)union(
			select a.reg_spaj 
			from eka.mst_policy a ,eka.mst_billing c
			where a.mspo_nasabah_acc $kata$ 
			and a.reg_spaj = c.reg_spaj 
			  AND c.lspd_id IN (59, 60))) tab
		</isEqual>
		<isEqual property="tipe" compareValue="6">
			SELECT a.reg_spaj
			  FROM eka.mst_policy a,
			       eka.mst_agent_comm b,
			       eka.lst_user c
			 WHERE a.reg_spaj = b.reg_spaj
			   AND a.lus_id = c.lus_id
			<isNotEqual property="posisi" compareValue="-1" prepend=" AND ">
				a.lspd_id = #posisi# 
			</isNotEqual>
			AND b.msag_id $kata$
			AND b.lev_comm = 4
			GROUP BY a.reg_spaj
			ORDER BY a.reg_spaj
		</isEqual>
	 </select>
	 
	 <select id="elions.uw.selectgutriSimple" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterSpaj2">
        <isEqual property="tipe" compareValue="0">
            select  distinct  tab.* from
            (
                (select a.reg_spaj from eka.mst_policy a, eka.mst_product_insured b where a.lstb_id = 1 and 
                <isNotEqual property="posisi" compareValue="-1">
                    a.lspd_id = #posisi# and 
                </isNotEqual>
                a.reg_spaj = b.reg_spaj and 
                <isEqual property="jenis" compareValue="simple">
                   (b.lsbs_id = 196 and b.lsdbs_number = 2) and 
                </isEqual>
                a.reg_spaj $kata$)
            union
                (select a.reg_spaj from eka.mst_billing a, eka.mst_product_insured b
                where  
                a.lspd_id in (59,60) and 
                a.reg_spaj = b.reg_spaj and 
                <isEqual property="jenis" compareValue="simple">
                   (b.lsbs_id = 196 and b.lsdbs_number = 2) and 
                </isEqual>
                a.reg_spaj $kata$)
            ) tab 
            order by tab.reg_spaj
        </isEqual>
        <isEqual property="tipe" compareValue="1">
            select  distinct  tab.* from
            (
                (select a.reg_spaj from eka.mst_policy a, eka.mst_product_insured b where a.lstb_id = 1 and 
                <isNotEqual property="posisi" compareValue="-1">
                    a.lspd_id = #posisi# and 
                </isNotEqual>
                a.reg_spaj = b.reg_spaj and
                <isEqual property="jenis" compareValue="simple">
                   (b.lsbs_id = 196 and b.lsdbs_number = 2) and
                </isEqual>
                a.mspo_policy_no $kata$)
            union
                (select eka.mst_billing.reg_spaj 
                from eka.mst_billing ,eka.mst_policy, eka.mst_product_insured
                where  eka.mst_billing.reg_spaj = eka.mst_policy.reg_spaj and
                eka.mst_policy.reg_spaj = eka.mst_product_insured.reg_spaj and
                eka.mst_billing.lspd_id in (59,60) and
                <isEqual property="jenis" compareValue="simple">
                   (eka.mst_product_insured.lsbs_id = 196 and eka.mst_product_insured.lsdbs_number = 2) and
                </isEqual>
                eka.mst_policy.mspo_policy_no $kata$ )
            ) tab
            order by tab.reg_spaj
        </isEqual>
        <isEqual property="tipe" compareValue="2">
            select tab.* from
            (
                (select a.reg_spaj from eka.mst_policy a, eka.mst_client_new b, eka.mst_product_insured c where a.lstb_id = 1 and 
                <isNotEqual property="posisi" compareValue="-1">
                    a.lspd_id = #posisi# and 
                </isNotEqual>
                a.mspo_policy_holder = b.mcl_id and
                a.reg_spaj = c.reg_spaj and
                <isEqual property="jenis" compareValue="simple">
                   (c.lsbs_id = 196 and c.lsdbs_number = 2) and
                </isEqual>
                b.mcl_first $kata$)
            union
                (select a.reg_spaj from eka.mst_policy a, eka.mst_client_new b ,eka.mst_billing c, eka.mst_product_insured d 
                where a.lstb_id = 1 and 
                c.lspd_id in (59,60) and
                a.reg_spaj = c.reg_spaj and
                a.reg_spaj = d.reg_spaj and
                <isEqual property="jenis" compareValue="simple">
                   (d.lsbs_id = 196 and d.lsdbs_number = 2) and
                </isEqual>
                a.mspo_policy_holder = b.mcl_id and b.mcl_first $kata$)
            ) tab
            order by tab.reg_spaj
        </isEqual>
        <isEqual property="tipe" compareValue="3">
            select distinct tab.* from
            (
                (select p.reg_spaj from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b, eka.mst_product_insured c
                where p.lstb_id = 1 and 
                <isNotEqual property="posisi" compareValue="-1">
                    p.lspd_id = #posisi# and 
                </isNotEqual>
                p.reg_spaj = a.reg_spaj and
                p.reg_spaj = c.reg_spaj and
                a.mste_insured = b.mcl_id and
                <isEqual property="jenis" compareValue="simple">
                   (c.lsbs_id = 196 and c.lsdbs_number = 2) and
                </isEqual>
                b.mcl_first $kata$) 
            union
                (select p.reg_spaj 
                from eka.mst_policy p, eka.mst_insured a, eka.mst_client_new b ,
                eka.mst_billing c, eka.mst_product_insured d
                where p.lstb_id = 1 and 
                c.lspd_id in (59,60) and 
                p.reg_spaj = c.reg_spaj and
                p.reg_spaj = a.reg_spaj and
                p.reg_spaj = d.reg_spaj and
                a.mste_insured = b.mcl_id and
                <isEqual property="jenis" compareValue="simple">
                   (d.lsbs_id = 196 and d.lsdbs_number = 2) and
                </isEqual>
                b.mcl_first $kata$)
            )tab
            order by tab.reg_spaj
        </isEqual>
        <isEqual property="tipe" compareValue="4">
            select distinct tab.* from
            ((select a.reg_spaj from eka.mst_policy a, eka.mst_product_insured b
                where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ )
                <isNotEqual property="posisi" compareValue="-1">
                    and a.lspd_id = #posisi#
                </isNotEqual>
                and a.reg_spaj = b.reg_spaj
                <isEqual property="jenis" compareValue="simple">
                   and (b.lsbs_id = 196 and b.lsdbs_number = 2)
                </isEqual>
        )union(
            select a.reg_spaj 
            from eka.mst_policy a ,eka.mst_billing c, eka.mst_product_insured b
            where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ )
            and a.reg_spaj = c.reg_spaj
            and a.reg_spaj = b.reg_spaj 
            AND c.lspd_id IN (59, 60)
            <isEqual property="jenis" compareValue="simple">
                and (b.lsbs_id = 196 and b.lsdbs_number = 2)
            </isEqual>)) tab
        </isEqual>
        <isEqual property="tipe" compareValue="5">
            select distinct tab.* from
            ((select a.reg_spaj from eka.mst_policy a, eka.mst_product_insured b
                where a.mspo_nasabah_acc $kata$ 
                <isNotEqual property="posisi" compareValue="-1">
                    and a.lspd_id = #posisi#
                </isNotEqual>
                and a.reg_spaj = b.reg_spaj
                <isEqual property="jenis" compareValue="simple">
                   and (b.lsbs_id = 196 and b.lsdbs_number = 2)
                </isEqual>
        )union(
            select a.reg_spaj 
            from eka.mst_policy a ,eka.mst_billing c, eka.mst_product_insured b
            where a.mspo_nasabah_acc $kata$ 
            and a.reg_spaj = c.reg_spaj
            and a.reg_spaj = b.reg_spaj 
              AND c.lspd_id IN (59, 60)
                <isEqual property="jenis" compareValue="simple">
                   (b.lsbs_id = 196 and b.lsdbs_number = 2) and
                </isEqual>)) tab
        </isEqual>
        <isEqual property="tipe" compareValue="6">
            SELECT a.reg_spaj
              FROM eka.mst_policy a,
                   eka.mst_agent_comm b,
                   eka.lst_user c,
                   eka.mst_product_insured d
             WHERE a.reg_spaj = b.reg_spaj
               AND a.lus_id = c.lus_id
               and a.reg_spaj = d.reg_spaj
            <isNotEqual property="posisi" compareValue="-1" prepend=" AND ">
                a.lspd_id = #posisi# 
            </isNotEqual>
            <isEqual property="jenis" compareValue="simple">
                and (b.lsbs_id = 196 and b.lsdbs_number = 2)
            </isEqual>
            AND b.msag_id $kata$
            AND b.lev_comm = 4
            GROUP BY a.reg_spaj
            ORDER BY a.reg_spaj
        </isEqual>
     </select>
	 
	 <select id="elions.uw.selectgutriblacklist" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterBlacklist">
	 	select x.*, NVL((select decode(w.telpon_rumah, null, decode(w.telpon_kantor, null, decode(w.no_hp, null, decode(no_hp2, null, decode(w.no_fax, null, '', w.no_fax), w.no_hp2), w.no_hp), w.telpon_kantor), w.telpon_rumah) 
	 	from eka.mst_address_new w where w.mcl_id = x.mcl_id), '') telpon_rumah from(

	 		(select a.mcl_id, a.mcl_first , a.MSPE_DATE_BIRTH , a.MSPE_NO_IDENTITY , b.MSPO_POLICY_NO , b.REG_SPAJ, decode((select lbl_nama from eka.lst_black_list 
			where (trim(lbl_nama)=trim(a.mcl_first) or trim(lbl_nama_alias_1)=trim(a.mcl_first) or trim(lbl_nama_alias_2)=trim(a.mcl_first) or trim(lbl_nama_alias_3)=trim(a.mcl_first) or trim(lbl_nama_alias_4)=trim(a.mcl_first)
				or trim(lbl_nama_alias_5)=trim(a.mcl_first)) and lbl_tgl_lahir = a.MSPE_DATE_BIRTH and rownum = 1), '', 0, 1) MCL_BLACKLIST
	 		, (select lbl_id from eka.lst_black_list where trim(lbl_nama)=trim(a.mcl_first) and lbl_tgl_lahir = a.MSPE_DATE_BIRTH and rownum = 1) lbl_id from eka.mst_client_new a, eka.mst_policy b
			<isNotNull property="telp">
				, eka.mst_address_new y
			</isNotNull>
				where a.mcl_id=b.mspo_policy_holder
			<isNotNull property="telp">
				and a.mcl_id = y.mcl_id and ((y.telpon_rumah like '%'||#telp#||'%') or (y.telpon_kantor like '%'||#telp#||'%') or (y.no_hp like '%'||#telp#||'%') or (y.no_hp2 like '%'||#telp#||'%') or (y.no_fax like '%'||#telp#||'%') )
		    </isNotNull>
			<isNotNull property="sumber">
				and b.lstb_id = #sumber#
			</isNotNull>
			<isEqual property="tipe" compareValue="0">
				and UPPER(trim(a.mcl_first)) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				and a.mcl_first in (select lbl_nama from eka.lst_black_list 
				where (trim(lbl_nama_alias_1) $kata$ or trim(lbl_nama_alias_2) $kata$ or trim(lbl_nama_alias_3) $kata$ or trim(lbl_nama_alias_4) $kata$
				or trim(lbl_nama_alias_5) $kata$) and lbl_tgl_lahir = a.MSPE_DATE_BIRTH)
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				and trim(a.MSPE_NO_IDENTITY) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				and b.reg_spaj in (select reg_spaj from eka.lst_black_list 
				where lbl_nama = a.mcl_first and lbl_tgl_lahir = a.MSPE_DATE_BIRTH and trim(LBL_NO_IDENTITY_SIM) $kata$)
			</isEqual>
			<isEqual property="tipe" compareValue="5">
				and b.reg_spaj in (select reg_spaj from eka.lst_black_list 
				where lbl_nama = a.mcl_first and lbl_tgl_lahir = a.MSPE_DATE_BIRTH and trim(LBL_NO_IDENTITY_PASPOR) $kata$)
			</isEqual>
			<isEqual property="tipe" compareValue="6">
				and b.reg_spaj in (select reg_spaj from eka.lst_black_list 
				where lbl_nama = a.mcl_first and lbl_tgl_lahir = a.MSPE_DATE_BIRTH and trim(LBL_NO_IDENTITY_AKTE_LAHIR) $kata$)
			</isEqual>
			<isEqual property="tipe" compareValue="7">
				and b.reg_spaj in (select reg_spaj from eka.lst_black_list 
				where lbl_nama = a.mcl_first and lbl_tgl_lahir = a.MSPE_DATE_BIRTH and trim(LBL_NO_IDENTITY_KIMS_KITAS) $kata$)
			</isEqual>
			<isEqual property="tipe" compareValue="8">
				and trim(b.MSPO_POLICY_NO) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="9">
				and trim(b.REG_SPAJ) $kata$
			</isEqual>
			<isNotEmpty property="tgl_lahir" prepend=" and "> a.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>)
			union

			(select a.mcl_id, a.mcl_first , a.MSPE_DATE_BIRTH , a.MSPE_NO_IDENTITY , c.MSPO_POLICY_NO , b.REG_SPAJ, decode((select lbl_nama from eka.lst_black_list 
			where (trim(lbl_nama)=trim(a.mcl_first) or trim(lbl_nama_alias_1)=trim(a.mcl_first) or trim(lbl_nama_alias_2)=trim(a.mcl_first) or trim(lbl_nama_alias_3)=trim(a.mcl_first) or trim(lbl_nama_alias_4)=trim(a.mcl_first)
				or trim(lbl_nama_alias_5)=trim(a.mcl_first)) and lbl_tgl_lahir = a.MSPE_DATE_BIRTH and rownum = 1), '', 0, 1) MCL_BLACKLIST 
			, (select lbl_id from eka.lst_black_list where trim(lbl_nama)=trim(a.mcl_first) and lbl_tgl_lahir = a.MSPE_DATE_BIRTH and rownum = 1) lbl_id from eka.mst_client_new a, eka.mst_insured b, eka.mst_policy c
			<isNotNull property="telp">
				, eka.mst_address_new y
			</isNotNull>
			where a.mcl_id=b.mste_insured and b.reg_spaj=c.reg_spaj
			<isNotNull property="telp">
				and a.mcl_id = y.mcl_id and ((y.telpon_rumah like '%'||#telp#||'%') or (y.telpon_kantor like '%'||#telp#||'%') or (y.no_hp like '%'||#telp#||'%') or (y.no_hp2 like '%'||#telp#||'%') or (y.no_fax like '%'||#telp#||'%') )
		    </isNotNull>
			<isNotNull property="sumber">
				and c.lstb_id = #sumber#
			</isNotNull>
			<isEqual property="tipe" compareValue="0">
				and UPPER(trim(a.mcl_first)) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				and a.mcl_first in (select lbl_nama from eka.lst_black_list 
				where (trim(lbl_nama_alias_1) $kata$ or trim(lbl_nama_alias_2) $kata$ or trim(lbl_nama_alias_3) $kata$ or trim(lbl_nama_alias_4) $kata$
				or trim(lbl_nama_alias_5) $kata$) and lbl_tgl_lahir = a.MSPE_DATE_BIRTH)
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				and trim(a.MSPE_NO_IDENTITY) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				and b.reg_spaj in (select reg_spaj from eka.lst_black_list 
				where lbl_nama = a.mcl_first and lbl_tgl_lahir = a.MSPE_DATE_BIRTH and trim(LBL_NO_IDENTITY_SIM) $kata$)
			</isEqual>
			<isEqual property="tipe" compareValue="5">
				and b.reg_spaj in (select reg_spaj from eka.lst_black_list 
				where lbl_nama = a.mcl_first and lbl_tgl_lahir = a.MSPE_DATE_BIRTH and trim(LBL_NO_IDENTITY_PASPOR) $kata$)
			</isEqual>
			<isEqual property="tipe" compareValue="6">
				and b.reg_spaj in (select reg_spaj from eka.lst_black_list 
				where lbl_nama = a.mcl_first and lbl_tgl_lahir = a.MSPE_DATE_BIRTH and trim(LBL_NO_IDENTITY_AKTE_LAHIR) $kata$)
			</isEqual>
			<isEqual property="tipe" compareValue="7">
				and b.reg_spaj in (select reg_spaj from eka.lst_black_list 
				where lbl_nama = a.mcl_first and lbl_tgl_lahir = a.MSPE_DATE_BIRTH and trim(LBL_NO_IDENTITY_KIMS_KITAS) $kata$)
			</isEqual>
			<isEqual property="tipe" compareValue="8">
				and trim(c.MSPO_POLICY_NO) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="9">
				and trim(b.REG_SPAJ) $kata$
			</isEqual>
			<isNotEmpty property="tgl_lahir" prepend=" and "> a.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>)
			union
			(select a.mcl_id, a.mcl_first , a.MSPE_DATE_BIRTH , a.MSPE_NO_IDENTITY , null MSPO_POLICY_NO , null REG_SPAJ, 1 MCL_BLACKLIST, lbl_id from eka.mst_client_new a, eka.lst_black_list b
			<isNotNull property="telp">
				, eka.mst_address_new y
			</isNotNull>
			where a.mcl_id=b.mcl_id and b.reg_spaj is null
			<isNotNull property="telp">
				and a.mcl_id = y.mcl_id and ((y.telpon_rumah like '%'||#telp#||'%') or (y.telpon_kantor like '%'||#telp#||'%') or (y.no_hp like '%'||#telp#||'%') or (y.no_hp2 like '%'||#telp#||'%') or (y.no_fax like '%'||#telp#||'%') )
		    </isNotNull>
			<isNotNull property="sumber">
				and a.mcl_id is null
			</isNotNull>
			<isEqual property="tipe" compareValue="1">
				and b.lbl_id $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="0">
				and UPPER(trim(a.mcl_first)) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="2">

				and (trim(lbl_nama_alias_1) $kata$ or trim(lbl_nama_alias_2) $kata$ or trim(lbl_nama_alias_3) $kata$ or trim(lbl_nama_alias_4) $kata$
				or trim(lbl_nama_alias_5) $kata$)
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				and trim(a.MSPE_NO_IDENTITY) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				and trim(b.LBL_NO_IDENTITY_SIM) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="5">
				and trim(b.LBL_NO_IDENTITY_PASPOR) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="6">
				and trim(b.LBL_NO_IDENTITY_AKTE_LAHIR) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="7">
				and trim(b.LBL_NO_IDENTITY_KIMS_KITAS) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="8">
				and a.mcl_id is null
			</isEqual>
			<isEqual property="tipe" compareValue="9">
				and a.mcl_id is null
			</isEqual>
			<isNotEmpty property="tgl_lahir" prepend=" and "> a.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>)
			union
			(select a.mcl_id, a.mcl_first , a.MSPE_DATE_BIRTH , a.MSPE_NO_IDENTITY , null MSPO_POLICY_NO , null REG_SPAJ, 0 MCL_BLACKLIST, null lbl_id from eka.mst_client_new a
			<isNotNull property="telp">
				, eka.mst_address_new y
			</isNotNull>
			where (select count(*) from eka.mst_policy where mspo_policy_holder = a.mcl_id and rownum = 1) = 0
			<isNotNull property="telp">
				and a.mcl_id = y.mcl_id and ((y.telpon_rumah like '%'||#telp#||'%') or (y.telpon_kantor like '%'||#telp#||'%') or (y.no_hp like '%'||#telp#||'%') or (y.no_hp2 like '%'||#telp#||'%') or (y.no_fax like '%'||#telp#||'%') )
		    </isNotNull>
			and (select count(*) from eka.mst_insured where mste_insured = a.mcl_id and rownum = 1) = 0
			and (select count(*) from eka.lst_black_list where mcl_id = a.mcl_id and rownum = 1) = 0
			<isNotNull property="sumber">
				and a.mcl_id is null
			</isNotNull>
			<isEqual property="tipe" compareValue="1">
				and a.mcl_id is null
			</isEqual>
			<isEqual property="tipe" compareValue="0">
				and UPPER(trim(a.mcl_first)) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				and a.mcl_id is null
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				and trim(a.MSPE_NO_IDENTITY) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				and a.mcl_id is null
			</isEqual>
			<isEqual property="tipe" compareValue="5">
				and a.mcl_id is null
			</isEqual>
			<isEqual property="tipe" compareValue="6">
				and a.mcl_id is null
			</isEqual>
			<isEqual property="tipe" compareValue="7">
				and a.mcl_id is null
			</isEqual>
			<isEqual property="tipe" compareValue="8">
				and a.mcl_id is null
			</isEqual>
			<isEqual property="tipe" compareValue="9">
				and a.mcl_id is null
			</isEqual>
			<isNotEmpty property="tgl_lahir" prepend=" and "> a.mspe_date_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>)

		) x
		where 1=1
		<isEqual property="tipe" compareValue="1">
			and x.lbl_id $kata$
		</isEqual>
		<isEqual property="cari" compareValue="exca">
			and (trim(x.REG_SPAJ) is not null)
			order by x.mcl_first, x.MSPE_DATE_BIRTH asc
		</isEqual>
		<isEqual property="cari" compareValue="spaj">
			and x.MCL_BLACKLIST = 1
			order by x.lbl_id asc
		</isEqual>
	</select>
	
	<select id="elions.uw.selectgutripas" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterPas">
	 	select 
	 	msp_id, msp_full_name, msp_identity_no, msp_date_of_birth, msp_address_1, msp_city, msp_postal_code, reg_spaj, msp_fire_id
	 	from eka.mst_pas_sms where 1=1
	 		<isEqual property="tipe" compareValue="1">
				and UPPER(trim(msp_full_name)) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				and UPPER(trim(msp_identity_no)) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="3">
				and UPPER(trim(msp_fire_id)) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="4">
				and UPPER(trim(no_kartu)) $kata$
			</isEqual>
			<isEqual property="posisi" compareValue="1">
				and msp_flag_pas = 1 and dist = '05'
			</isEqual>
			<isEqual property="posisi" compareValue="2">
				and msp_flag_pas <![CDATA[<>]]> 1 and id_ref is null
			</isEqual>
			<isNotEmpty property="tgl_lahir" prepend=" and "> msp_date_of_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
			and msp_kode_sts_sms = '00'
			and lspd_id = 1
			and (MSP_FIRE_JENIS is null or MSP_FIRE_JENIS=0)
			order by msp_receive_date asc
	</select>
	 
	<select id="elions.uw.selectgutri_valid" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterSpaj2">
		<isEqual property="tipe" compareValue="0">
			SELECT a.reg_spaj
			  FROM eka.mst_policy a, eka.mst_reff_bii b, eka.lst_user c
			 WHERE a.reg_spaj = b.reg_spaj AND b.lcb_no = c.cab_bank AND c.lus_id = #lus_id#
			<isNotEqual property="posisi" compareValue="-1" prepend=" AND ">
				a.lspd_id = #posisi#
			</isNotEqual>
			AND a.reg_spaj $kata$
			AND 0 = (select count(*) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ')
			GROUP BY a.reg_spaj
			ORDER BY a.reg_spaj
		</isEqual>
		<isEqual property="tipe" compareValue="1">
			SELECT a.reg_spaj
			  FROM eka.mst_policy a, eka.mst_reff_bii b, eka.lst_user c
			 WHERE a.reg_spaj = b.reg_spaj AND b.lcb_no = c.cab_bank AND c.lus_id = #lus_id#
			<isNotEqual property="posisi" compareValue="-1" prepend=" AND ">
				a.lspd_id = #posisi# 
			</isNotEqual>
			AND a.mspo_policy_no $kata$
			AND 0 = (select count(*) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ')
			GROUP BY a.reg_spaj
			ORDER BY a.reg_spaj
		</isEqual>
		<isEqual property="tipe" compareValue="2">
			SELECT a.reg_spaj
			  FROM eka.mst_policy a,
			       eka.mst_reff_bii b,
			       eka.lst_user c,
			       eka.mst_client_new d
			 WHERE a.reg_spaj = b.reg_spaj
			   AND b.lcb_no = c.cab_bank
			   AND a.mspo_policy_holder = d.mcl_id
			   AND c.lus_id = #lus_id#
			<isNotEqual property="posisi" compareValue="-1" prepend=" AND ">
				a.lspd_id = #posisi# 
			</isNotEqual>
			AND d.mcl_first $kata$
			AND 0 = (select count(*) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ')
			GROUP BY a.reg_spaj
			ORDER BY a.reg_spaj
		</isEqual>
		<isEqual property="tipe" compareValue="3">
			SELECT a.reg_spaj
			  FROM eka.mst_policy a,
			  	   eka.mst_insured i,
			       eka.mst_reff_bii b,
			       eka.lst_user c,
			       eka.mst_client_new d
			 WHERE a.reg_spaj = i.reg_spaj
			   AND a.reg_spaj = b.reg_spaj
			   AND b.lcb_no = c.cab_bank
			   AND i.mste_insured = d.mcl_id
			   AND c.lus_id = #lus_id#
			<isNotEqual property="posisi" compareValue="-1" prepend=" AND ">
				a.lspd_id = #posisi# 
			</isNotEqual>
			AND d.mcl_first $kata$
			AND 0 = (select count(*) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ')
			GROUP BY a.reg_spaj
			ORDER BY a.reg_spaj
		</isEqual>
		<isEqual property="tipe" compareValue="4">
			select distinct tab.* from
			((select reg_spaj from eka.mst_policy a 
				where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ and a.lus_id= #lus_id#)
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
		)union(
			select a.reg_spaj 
			from eka.mst_policy a ,eka.mst_billing c
			where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ and a.lus_id= #lus_id#)
			and a.reg_spaj = c.reg_spaj 
			  AND c.lspd_id IN (59, 60))) tab
		</isEqual>
		<isEqual property="tipe" compareValue="5">
			select distinct tab.* from
			((select reg_spaj from eka.mst_policy a 
				where a.mspo_nasabah_acc $kata$
				<isNotEqual property="posisi" compareValue="-1">
					and a.lspd_id = #posisi#
				</isNotEqual>
		)union(
			select a.reg_spaj 
			from eka.mst_policy a ,eka.mst_billing c
			where a.mspo_nasabah_acc $kata$ 
			and a.reg_spaj = c.reg_spaj 
			  AND c.lspd_id IN (59, 60))) tab
		</isEqual>
	 </select>	
	 
	 <select id="elions.uw.selectgutri_simple_valid" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterSpaj2">
        <isEqual property="tipe" compareValue="0">
            SELECT a.reg_spaj
              FROM eka.mst_policy a, eka.mst_reff_bii b, eka.lst_user c, eka.mst_product_insured d
             WHERE a.reg_spaj = b.reg_spaj AND a.reg_spaj = d.reg_spaj AND b.lcb_no = c.cab_bank AND c.lus_id = #lus_id#
            <isNotEqual property="posisi" compareValue="-1" prepend=" AND ">
                a.lspd_id = #posisi#
            </isNotEqual>
            <isEqual property="jenis" compareValue="simple">
                and (d.lsbs_id = 196 and d.lsdbs_number = 2)
            </isEqual>
            AND a.reg_spaj $kata$
            AND 0 = (select count(*) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ')
            GROUP BY a.reg_spaj
            ORDER BY a.reg_spaj
        </isEqual>
        <isEqual property="tipe" compareValue="1">
            SELECT a.reg_spaj
              FROM eka.mst_policy a, eka.mst_reff_bii b, eka.lst_user c, eka.mst_product_insured d
             WHERE a.reg_spaj = b.reg_spaj AND a.reg_spaj = d.reg_spaj AND b.lcb_no = c.cab_bank AND c.lus_id = #lus_id#
            <isNotEqual property="posisi" compareValue="-1" prepend=" AND ">
                a.lspd_id = #posisi# 
            </isNotEqual>
            <isEqual property="jenis" compareValue="simple">
                and (d.lsbs_id = 196 and d.lsdbs_number = 2)
            </isEqual>
            AND a.mspo_policy_no $kata$
            AND 0 = (select count(*) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ')
            GROUP BY a.reg_spaj
            ORDER BY a.reg_spaj
        </isEqual>
        <isEqual property="tipe" compareValue="2">
            SELECT a.reg_spaj
              FROM eka.mst_policy a,
                   eka.mst_reff_bii b,
                   eka.lst_user c,
                   eka.mst_client_new d,
                   eka.mst_product_insured e
             WHERE a.reg_spaj = b.reg_spaj
               AND a.reg_spaj = e.reg_spaj
               AND b.lcb_no = c.cab_bank
               AND a.mspo_policy_holder = d.mcl_id
               AND c.lus_id = #lus_id#
            <isNotEqual property="posisi" compareValue="-1" prepend=" AND ">
                a.lspd_id = #posisi# 
            </isNotEqual>
            <isEqual property="jenis" compareValue="simple">
                and (e.lsbs_id = 196 and e.lsdbs_number = 2)
            </isEqual>
            AND d.mcl_first $kata$
            AND 0 = (select count(*) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ')
            GROUP BY a.reg_spaj
            ORDER BY a.reg_spaj
        </isEqual>
        <isEqual property="tipe" compareValue="3">
            SELECT a.reg_spaj
              FROM eka.mst_policy a,
                   eka.mst_insured i,
                   eka.mst_reff_bii b,
                   eka.lst_user c,
                   eka.mst_client_new d,
                   eka.mst_product_insured e
             WHERE a.reg_spaj = i.reg_spaj
               AND a.reg_spaj = b.reg_spaj
               AND a.reg_spaj = e.reg_spaj
               AND b.lcb_no = c.cab_bank
               AND i.mste_insured = d.mcl_id
               AND c.lus_id = #lus_id#
            <isNotEqual property="posisi" compareValue="-1" prepend=" AND ">
                a.lspd_id = #posisi# 
            </isNotEqual>
            <isEqual property="jenis" compareValue="simple">
                and (e.lsbs_id = 196 and e.lsdbs_number = 2)
            </isEqual>
            AND d.mcl_first $kata$
            AND 0 = (select count(*) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ')
            GROUP BY a.reg_spaj
            ORDER BY a.reg_spaj
        </isEqual>
        <isEqual property="tipe" compareValue="4">
            select distinct tab.* from
            ((select a.reg_spaj from eka.mst_policy a, eka.mst_product_insured b
                where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ and a.lus_id= #lus_id#)
                and a.reg_spaj = b.reg_spaj
                <isNotEqual property="posisi" compareValue="-1">
                    and a.lspd_id = #posisi#
                </isNotEqual>
            <isEqual property="jenis" compareValue="simple">
                and (b.lsbs_id = 196 and b.lsdbs_number = 2)
            </isEqual>
        )union(
            select a.reg_spaj 
            from eka.mst_policy a ,eka.mst_billing c, eka.mst_product_insured b
            where a.mspo_customer in (select mcl_id from eka.mst_client_new where mcl_first $kata$ and a.lus_id= #lus_id#)
            and a.reg_spaj = c.reg_spaj 
            and a.reg_spaj = b.reg_spaj
            AND c.lspd_id IN (59, 60)
            <isEqual property="jenis" compareValue="simple">
                and (b.lsbs_id = 196 and b.lsdbs_number = 2)
            </isEqual>)) tab
        </isEqual>
        <isEqual property="tipe" compareValue="5">
            select distinct tab.* from
            ((select a.reg_spaj from eka.mst_policy a, eka.mst_product_insured b 
                where a.mspo_nasabah_acc $kata$
                and a.reg_spaj = b.reg_spaj
                <isNotEqual property="posisi" compareValue="-1">
                    and a.lspd_id = #posisi#
                </isNotEqual>
            <isEqual property="jenis" compareValue="simple">
                and (b.lsbs_id = 196 and b.lsdbs_number = 2)
            </isEqual>
        )union(
            select a.reg_spaj 
            from eka.mst_policy a ,eka.mst_billing c, eka.mst_product_insured b
            where a.mspo_nasabah_acc $kata$ 
            and a.reg_spaj = c.reg_spaj
            and a.reg_spaj = b.reg_spaj 
              AND c.lspd_id IN (59, 60)
            <isEqual property="jenis" compareValue="simple">
                and (b.lsbs_id = 196 and b.lsdbs_number = 2)
            </isEqual>)) tab
        </isEqual>
     </select>	
	 
	 <select id="elions.uw.selectFilterSpaj3" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterSpaj2">
		<isEqual property="tipe" compareValue="0">
			SELECT "MST_POLICY"."REG_SPAJ"
			  FROM "EKA"."MST_POLICY" "MST_POLICY",
			       "EKA"."MST_INSURED" "MST_INSURED",
			       "EKA"."MST_CLIENT_NEW" "MST_CLIENT_NEW",
			       "EKA"."MST_PRODUCT_INSURED" "MST_PRODUCT_INSURED",
			       "EKA"."MST_AGENT_PROD" "MST_AGENT_PROD",
			       "EKA"."LST_DET_BISNIS" "LST_DET_BISNIS",
			       "EKA"."MST_AGENT" "MST_AGENT"
			 WHERE ("MST_POLICY"."REG_SPAJ" = "MST_INSURED"."REG_SPAJ")
			   AND ("MST_POLICY"."MSPO_POLICY_HOLDER" = "MST_CLIENT_NEW"."MCL_ID")
			   AND (    ("MST_INSURED"."REG_SPAJ" = "MST_PRODUCT_INSURED"."REG_SPAJ")
			        AND ("MST_INSURED"."MSTE_INSURED_NO" = "MST_PRODUCT_INSURED"."MSTE_INSURED_NO"))
			   AND ("MST_PRODUCT_INSURED"."REG_SPAJ" = "MST_AGENT_PROD"."REG_SPAJ")
			   AND (("MST_PRODUCT_INSURED"."LSBS_ID" = "LST_DET_BISNIS"."LSBS_ID")
			        AND ("MST_PRODUCT_INSURED"."LSDBS_NUMBER" = "LST_DET_BISNIS"."LSDBS_NUMBER"))
			   AND ("MST_AGENT_PROD"."MSAG_ID" = "MST_AGENT"."MSAG_ID")
			<isNotEqual property="posisi" compareValue="-1">
			   AND "MST_POLICY"."LSPD_ID" =#posisi#
			</isNotEqual>
			   AND "MST_AGENT_PROD"."LSLE_ID" = 4
			   AND "MST_POLICY"."LSTB_ID" = 1
			   AND "MST_AGENT"."LCA_ID" = '42' 
			   AND "MST_PRODUCT_INSURED"."LSBS_ID" <![CDATA[<]]> 300 and
			   "MST_POLICY"."REG_SPAJ"	$kata$	
			   AND "MST_INSURED"."MSTE_FLAG_CC" = 3
			   ORDER BY  "MST_POLICY"."REG_SPAJ"
		</isEqual>
		<isEqual property="tipe" compareValue="1">
			SELECT "MST_POLICY"."REG_SPAJ"
			  FROM "EKA"."MST_POLICY" "MST_POLICY",
			       "EKA"."MST_INSURED" "MST_INSURED",
			       "EKA"."MST_CLIENT_NEW" "MST_CLIENT_NEW",
			       "EKA"."MST_PRODUCT_INSURED" "MST_PRODUCT_INSURED",
			       "EKA"."MST_AGENT_PROD" "MST_AGENT_PROD",
			       "EKA"."LST_DET_BISNIS" "LST_DET_BISNIS",
			       "EKA"."MST_AGENT" "MST_AGENT"
			 WHERE ("MST_POLICY"."REG_SPAJ" = "MST_INSURED"."REG_SPAJ")
			   AND ("MST_POLICY"."MSPO_POLICY_HOLDER" = "MST_CLIENT_NEW"."MCL_ID")
			   AND (    ("MST_INSURED"."REG_SPAJ" = "MST_PRODUCT_INSURED"."REG_SPAJ")
			        AND ("MST_INSURED"."MSTE_INSURED_NO" = "MST_PRODUCT_INSURED"."MSTE_INSURED_NO"))
			   AND ("MST_PRODUCT_INSURED"."REG_SPAJ" = "MST_AGENT_PROD"."REG_SPAJ")
			   AND (("MST_PRODUCT_INSURED"."LSBS_ID" = "LST_DET_BISNIS"."LSBS_ID")
			        AND ("MST_PRODUCT_INSURED"."LSDBS_NUMBER" = "LST_DET_BISNIS"."LSDBS_NUMBER"))
			   AND ("MST_AGENT_PROD"."MSAG_ID" = "MST_AGENT"."MSAG_ID")
			<isNotEqual property="posisi" compareValue="-1">
			   AND "MST_POLICY"."LSPD_ID" =#posisi#
			</isNotEqual>
			   AND "MST_AGENT_PROD"."LSLE_ID" = 4
			   AND "MST_POLICY"."LSTB_ID" = 1
			   AND "MST_AGENT"."LCA_ID" = '42' 
			   AND "MST_PRODUCT_INSURED"."LSBS_ID" <![CDATA[<]]> 300 and
			   "MST_POLICY"."MSPO_POLICY_NO"	$kata$	
			    AND "MST_INSURED"."MSTE_FLAG_CC" = 3
			   ORDER BY  "MST_POLICY"."REG_SPAJ"
		</isEqual>
		<isEqual property="tipe" compareValue="2">
			SELECT "MST_POLICY"."REG_SPAJ"
			  FROM "EKA"."MST_POLICY" "MST_POLICY",
			       "EKA"."MST_INSURED" "MST_INSURED",
			       "EKA"."MST_CLIENT_NEW" "MST_CLIENT_NEW",
			       "EKA"."MST_PRODUCT_INSURED" "MST_PRODUCT_INSURED",
			       "EKA"."MST_AGENT_PROD" "MST_AGENT_PROD",
			       "EKA"."LST_DET_BISNIS" "LST_DET_BISNIS",
			       "EKA"."MST_AGENT" "MST_AGENT"
			 WHERE ("MST_POLICY"."REG_SPAJ" = "MST_INSURED"."REG_SPAJ")
			   AND ("MST_POLICY"."MSPO_POLICY_HOLDER" = "MST_CLIENT_NEW"."MCL_ID")
			   AND (    ("MST_INSURED"."REG_SPAJ" = "MST_PRODUCT_INSURED"."REG_SPAJ")
			        AND ("MST_INSURED"."MSTE_INSURED_NO" = "MST_PRODUCT_INSURED"."MSTE_INSURED_NO"))
			   AND ("MST_PRODUCT_INSURED"."REG_SPAJ" = "MST_AGENT_PROD"."REG_SPAJ")
			   AND (("MST_PRODUCT_INSURED"."LSBS_ID" = "LST_DET_BISNIS"."LSBS_ID")
			        AND ("MST_PRODUCT_INSURED"."LSDBS_NUMBER" = "LST_DET_BISNIS"."LSDBS_NUMBER"))
			   AND ("MST_AGENT_PROD"."MSAG_ID" = "MST_AGENT"."MSAG_ID")
			<isNotEqual property="posisi" compareValue="-1">
			   AND "MST_POLICY"."LSPD_ID" =#posisi#
			</isNotEqual>
			   AND "MST_AGENT_PROD"."LSLE_ID" = 4
			   AND "MST_POLICY"."LSTB_ID" = 1
			   AND "MST_AGENT"."LCA_ID" = '42' 
			   AND "MST_PRODUCT_INSURED"."LSBS_ID" <![CDATA[<]]> 300 and
			   "MST_CLIENT_NEW"."MCL_FIRST"	$kata$	
			    AND "MST_INSURED"."MSTE_FLAG_CC" = 3
			   ORDER BY  "MST_POLICY"."REG_SPAJ"
		</isEqual>
		<isEqual property="tipe" compareValue="3">
			SELECT "MST_POLICY"."REG_SPAJ"
			  FROM "EKA"."MST_POLICY" "MST_POLICY",
			       "EKA"."MST_INSURED" "MST_INSURED",
			       "EKA"."MST_CLIENT_NEW" "MST_CLIENT_NEW",
			       "EKA"."MST_PRODUCT_INSURED" "MST_PRODUCT_INSURED",
			       "EKA"."MST_AGENT_PROD" "MST_AGENT_PROD",
			       "EKA"."LST_DET_BISNIS" "LST_DET_BISNIS",
			       "EKA"."MST_AGENT" "MST_AGENT",
				   "EKA"."MST_CLIENT_NEW" "b"
			 WHERE ("MST_POLICY"."REG_SPAJ" = "MST_INSURED"."REG_SPAJ")
			   AND ("MST_POLICY"."MSPO_POLICY_HOLDER" = "MST_CLIENT_NEW"."MCL_ID")
			   AND ("MST_INSURED"."MSTE_INSURED" = "b"."MCL_ID") 
			   AND (    ("MST_INSURED"."REG_SPAJ" = "MST_PRODUCT_INSURED"."REG_SPAJ")
			        AND ("MST_INSURED"."MSTE_INSURED_NO" = "MST_PRODUCT_INSURED"."MSTE_INSURED_NO"))
			   AND ("MST_PRODUCT_INSURED"."REG_SPAJ" = "MST_AGENT_PROD"."REG_SPAJ")
			   AND (("MST_PRODUCT_INSURED"."LSBS_ID" = "LST_DET_BISNIS"."LSBS_ID")
			        AND ("MST_PRODUCT_INSURED"."LSDBS_NUMBER" = "LST_DET_BISNIS"."LSDBS_NUMBER"))
			   AND ("MST_AGENT_PROD"."MSAG_ID" = "MST_AGENT"."MSAG_ID")
			<isNotEqual property="posisi" compareValue="-1">
			   AND "MST_POLICY"."LSPD_ID" =#posisi#
			</isNotEqual>
			   AND "MST_AGENT_PROD"."LSLE_ID" = 4
			   AND "MST_POLICY"."LSTB_ID" = 1
			   AND "MST_AGENT"."LCA_ID" = '42' 
			   AND "MST_PRODUCT_INSURED"."LSBS_ID" <![CDATA[<]]> 300 and
			   "b"."MCL_FIRST"	$kata$	
			    AND "MST_INSURED"."MSTE_FLAG_CC" = 3
			   ORDER BY "MST_POLICY"."REG_SPAJ"
		</isEqual>
	 </select>	 
	 
	 <select id="elions.uw.selectFilterSpaj4" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterSpaj2">
		<isEqual property="tipe" compareValue="0">
			SELECT distinct "MST_POLICY"."REG_SPAJ"
			  FROM "EKA"."MST_POLICY" "MST_POLICY",
			       "EKA"."MST_INSURED" "MST_INSURED",
			       "EKA"."MST_CLIENT_NEW" "MST_CLIENT_NEW",
			       "EKA"."MST_PRODUCT_INSURED" "MST_PRODUCT_INSURED",
			       "EKA"."MST_AGENT_PROD" "MST_AGENT_PROD",
			       "EKA"."LST_DET_BISNIS" "LST_DET_BISNIS",
			       "EKA"."MST_AGENT" "MST_AGENT"
			 WHERE ("MST_POLICY"."REG_SPAJ" = "MST_INSURED"."REG_SPAJ")
			   AND ("MST_POLICY"."MSPO_POLICY_HOLDER" = "MST_CLIENT_NEW"."MCL_ID")
			   AND (    ("MST_INSURED"."REG_SPAJ" = "MST_PRODUCT_INSURED"."REG_SPAJ")
			        AND ("MST_INSURED"."MSTE_INSURED_NO" = "MST_PRODUCT_INSURED"."MSTE_INSURED_NO"))
			   AND ("MST_PRODUCT_INSURED"."REG_SPAJ" = "MST_AGENT_PROD"."REG_SPAJ")
			   AND (("MST_PRODUCT_INSURED"."LSBS_ID" = "LST_DET_BISNIS"."LSBS_ID")
			        AND ("MST_PRODUCT_INSURED"."LSDBS_NUMBER" = "LST_DET_BISNIS"."LSDBS_NUMBER"))
			   AND ("MST_AGENT_PROD"."MSAG_ID" = "MST_AGENT"."MSAG_ID")
			   AND "MST_POLICY"."LSTB_ID" = 1
			   AND "MST_PRODUCT_INSURED"."LSBS_ID" =157 
			   and "MST_POLICY"."REG_SPAJ"	$kata$	
			   ORDER BY  "MST_POLICY"."REG_SPAJ"
		</isEqual>
		<isEqual property="tipe" compareValue="1">
					SELECT distinct "MST_POLICY"."REG_SPAJ"
			  FROM "EKA"."MST_POLICY" "MST_POLICY",
			       "EKA"."MST_INSURED" "MST_INSURED",
			       "EKA"."MST_CLIENT_NEW" "MST_CLIENT_NEW",
			       "EKA"."MST_PRODUCT_INSURED" "MST_PRODUCT_INSURED",
			       "EKA"."MST_AGENT_PROD" "MST_AGENT_PROD",
			       "EKA"."LST_DET_BISNIS" "LST_DET_BISNIS",
			       "EKA"."MST_AGENT" "MST_AGENT"
			 WHERE ("MST_POLICY"."REG_SPAJ" = "MST_INSURED"."REG_SPAJ")
			   AND ("MST_POLICY"."MSPO_POLICY_HOLDER" = "MST_CLIENT_NEW"."MCL_ID")
			   AND (    ("MST_INSURED"."REG_SPAJ" = "MST_PRODUCT_INSURED"."REG_SPAJ")
			        AND ("MST_INSURED"."MSTE_INSURED_NO" = "MST_PRODUCT_INSURED"."MSTE_INSURED_NO"))
			   AND ("MST_PRODUCT_INSURED"."REG_SPAJ" = "MST_AGENT_PROD"."REG_SPAJ")
			   AND (("MST_PRODUCT_INSURED"."LSBS_ID" = "LST_DET_BISNIS"."LSBS_ID")
			        AND ("MST_PRODUCT_INSURED"."LSDBS_NUMBER" = "LST_DET_BISNIS"."LSDBS_NUMBER"))
			   AND ("MST_AGENT_PROD"."MSAG_ID" = "MST_AGENT"."MSAG_ID")
			   AND "MST_POLICY"."LSTB_ID" = 1
			   AND "MST_PRODUCT_INSURED"."LSBS_ID" =157 
			   and "MST_POLICY"."MSPO_POLICY_NO"	$kata$	
			   ORDER BY  "MST_POLICY"."REG_SPAJ"
		</isEqual>
		<isEqual property="tipe" compareValue="2">
		SELECT distinct "MST_POLICY"."REG_SPAJ"
			  FROM "EKA"."MST_POLICY" "MST_POLICY",
			       "EKA"."MST_INSURED" "MST_INSURED",
			       "EKA"."MST_CLIENT_NEW" "MST_CLIENT_NEW",
			       "EKA"."MST_PRODUCT_INSURED" "MST_PRODUCT_INSURED",
			       "EKA"."MST_AGENT_PROD" "MST_AGENT_PROD",
			       "EKA"."LST_DET_BISNIS" "LST_DET_BISNIS",
			       "EKA"."MST_AGENT" "MST_AGENT",
				   "EKA"."MST_CLIENT_NEW" "B"
			 WHERE ("MST_POLICY"."REG_SPAJ" = "MST_INSURED"."REG_SPAJ")
			   AND ("MST_POLICY"."MSPO_POLICY_HOLDER" = "MST_CLIENT_NEW"."MCL_ID")
			   AND (    ("MST_INSURED"."REG_SPAJ" = "MST_PRODUCT_INSURED"."REG_SPAJ")
			        AND ("MST_INSURED"."MSTE_INSURED_NO" = "MST_PRODUCT_INSURED"."MSTE_INSURED_NO"))
			   AND ("MST_PRODUCT_INSURED"."REG_SPAJ" = "MST_AGENT_PROD"."REG_SPAJ")
			   AND (("MST_PRODUCT_INSURED"."LSBS_ID" = "LST_DET_BISNIS"."LSBS_ID")
			        AND ("MST_PRODUCT_INSURED"."LSDBS_NUMBER" = "LST_DET_BISNIS"."LSDBS_NUMBER"))
			   AND ("MST_AGENT_PROD"."MSAG_ID" = "MST_AGENT"."MSAG_ID")
			   AND "MST_POLICY"."LSTB_ID" = 1
			   AND "MST_PRODUCT_INSURED"."LSBS_ID" =157 
			   and "B"."MCL_FIRST"	$kata$
			   AND B."MCL_ID" = "MST_INSURED"."MSTE_INSURED"
			   ORDER BY  "MST_POLICY"."REG_SPAJ"
		</isEqual>
		<isEqual property="tipe" compareValue="3">
		SELECT distinct "MST_POLICY"."REG_SPAJ"
			  FROM "EKA"."MST_POLICY" "MST_POLICY",
			       "EKA"."MST_INSURED" "MST_INSURED",
			       "EKA"."MST_CLIENT_NEW" "MST_CLIENT_NEW",
			       "EKA"."MST_PRODUCT_INSURED" "MST_PRODUCT_INSURED",
			       "EKA"."MST_AGENT_PROD" "MST_AGENT_PROD",
			       "EKA"."LST_DET_BISNIS" "LST_DET_BISNIS",
			       "EKA"."MST_AGENT" "MST_AGENT",
				   "EKA"."MST_CLIENT_NEW" "B"
			 WHERE ("MST_POLICY"."REG_SPAJ" = "MST_INSURED"."REG_SPAJ")
			   AND ("MST_POLICY"."MSPO_POLICY_HOLDER" = "MST_CLIENT_NEW"."MCL_ID")
			   AND (    ("MST_INSURED"."REG_SPAJ" = "MST_PRODUCT_INSURED"."REG_SPAJ")
			        AND ("MST_INSURED"."MSTE_INSURED_NO" = "MST_PRODUCT_INSURED"."MSTE_INSURED_NO"))
			   AND ("MST_PRODUCT_INSURED"."REG_SPAJ" = "MST_AGENT_PROD"."REG_SPAJ")
			   AND (("MST_PRODUCT_INSURED"."LSBS_ID" = "LST_DET_BISNIS"."LSBS_ID")
			        AND ("MST_PRODUCT_INSURED"."LSDBS_NUMBER" = "LST_DET_BISNIS"."LSDBS_NUMBER"))
			   AND ("MST_AGENT_PROD"."MSAG_ID" = "MST_AGENT"."MSAG_ID")
			   AND "MST_POLICY"."LSTB_ID" = 1
			   AND "MST_PRODUCT_INSURED"."LSBS_ID" =157 
			   and "B"."MCL_FIRST"	$kata$
			   AND B."MCL_ID" = "MST_INSURED"."MSTE_INSURED"
			   ORDER BY  "MST_POLICY"."REG_SPAJ"

		</isEqual>
	 </select>	 	
	 
  
	 
	 <select id="elions.uw.selectDataNasabah" parameterClass="string" resultMap="elions.uw.result.dataNasabah">
		SELECT   a.reg_spaj, a.mspo_policy_no, k.lku_symbol, sts.lssp_status, a.lscb_id,
		         a.mspo_pay_period, a.mspo_ins_period, b.mste_age, b.mste_beg_date,
		         b.mste_end_date, c.lsbs_id, c.mspr_premium, c.mspr_tsi,
		         c.lsdbs_number, tt.mcl_first tt, pp.mcl_first pp, alamat.kota_rumah,
		         alamat.alamat_rumah, a.lca_id, cbg.lca_nama
		    FROM eka.mst_policy a,
		         eka.mst_insured b,
		         eka.mst_product_insured c,
		         eka.mst_client_new tt,
		         eka.mst_client_new pp,
		         eka.mst_address_new alamat,
		         eka.lst_kurs k,
		         eka.lst_policy_status sts,
		         eka.lst_cabang cbg
		   WHERE a.reg_spaj = b.reg_spaj
		     AND a.reg_spaj = c.reg_spaj
		     AND b.mste_insured_no = c.mste_insured_no
		     AND b.mste_insured = tt.mcl_id(+)
		     AND a.mspo_policy_holder = pp.mcl_id(+)
		     AND pp.mcl_id = alamat.mcl_id(+)
		     AND a.lku_id = k.lku_id
		     AND a.lssp_id = sts.lssp_id
		     AND a.lca_id = cbg.lca_id(+)
		     AND c.lsbs_id <![CDATA[<=]]> 300
		     AND a.reg_spaj = RPAD (#value[]#, 11, ' ')
		ORDER BY a.reg_spaj ASC
	 </select>
	 
	 <select id="elions.uw.selectPolicyNumberFromSpaj" parameterClass="string" resultClass="string">
	 	select mspo_policy_no from eka.mst_policy where reg_spaj = rpad(replace(#value#,'.'),11,' ')
	 </select>
	 
	 <select id="elions.uw.selectNoKartuFromId" parameterClass="string" resultClass="string">
	 	select no_kartu from eka.mst_pas_sms where msp_id = #value#
	 </select>
	 
	 <select id="elions.uw.selectInsuredNumber" parameterClass="string" resultClass="string">
		select mste_insured from eka.mst_insured where reg_spaj = rpad(replace(#value#,'.'),11,' ')
	 </select>
	 
	 <select id="elions.uw.selectAddressBilling" parameterClass="string" resultClass="java.util.HashMap">
		SELECT 
			(lca_id || lwk_id || lsrg_id) A1, lti_id A2, msap_contact A3, msap_address A4, a.lska_id A5, msap_zip_code A6, 
			msap_area_code1 A7, msap_phone1 A8, msap_area_code2 A11, msap_phone2 A12, msap_area_code3 A15, msap_phone3 A16,
			msap_area_code_fax1 A9, msap_fax1 A10, msap_area_code_fax2 A13, msap_fax2 A14, flag_cc A17, e_mail A18, 
			no_hp A19, no_hp2 A20, reg_spaj A21 
		  FROM eka.mst_address_billing a
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
	 </select>
	 
	 <select id="elions.uw.selectInfoEndorse" parameterClass="string" resultClass="java.util.HashMap">
		SELECT a.msen_endors_no, a.reg_spaj, decode(a.msen_internal,0,'Internal','External') msen_internal, a.msen_alasan,
		       a.msen_input_date, a.msen_endors_cost, a.msen_active_date,
		       a.msen_surat, a.lspd_id, a.msen_print, b.mspo_policy_no, b.lstb_id,
		       a.msen_tgl_trans, a.lus_id, c.lus_login_name, a.msen_aksep_uw
		  FROM eka.mst_endors a, eka.mst_policy b, eka.lst_user c
		 WHERE a.reg_spaj = b.reg_spaj AND a.lus_id = c.lus_id(+) AND a.msen_endors_no = #value#
	 </select>


	<select id="elions.uw.selectAllEndorsements" resultClass="java.util.HashMap" parameterClass="string">
		SELECT   msen_endors_no, '1' tipe
		    FROM eka.mst_endors
		   WHERE reg_spaj IN (
		            SELECT mscan_spaj_baru spaj
		              FROM eka.mst_cancel
		             WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
		            UNION
		            SELECT reg_spaj
		              FROM eka.mst_cancel
		             WHERE mscan_spaj_baru = rpad(replace(#value#,'.'),11,' ')
		            UNION
		            SELECT rpad(replace(#value#,'.'),11,' ') spaj
		              FROM DUAL)
		     AND msen_auto_rider <![CDATA[<>]]> 5
		UNION ALL
		SELECT   no_endors, '2' tipe
		    FROM eka.mst_endors_old
		   WHERE reg_spaj IN (
		            SELECT mscan_spaj_baru spaj
		              FROM eka.mst_cancel
		             WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
		            UNION
		            SELECT reg_spaj
		              FROM eka.mst_cancel
		             WHERE mscan_spaj_baru = rpad(replace(#value#,'.'),11,' ')
		            UNION
		            SELECT rpad(replace(#value#,'.'),11,' ') spaj
		              FROM DUAL)
		ORDER BY msen_endors_no
	</select>
	
	<select id="elions.uw.selectAllEndorse" resultClass="java.util.HashMap" parameterClass="string">
        SELECT   a.msen_endors_no,a.msen_alasan,b.mspo_policy_no,c.lus_login_name 
            FROM eka.mst_endors a,
                 eka.mst_policy b,
                 eka.lst_user c
                WHERE    a.reg_spaj = b.reg_spaj
                and      a.lus_id   = c.lus_id
                and      a.reg_spaj =rpad(replace(#value#,'.'),11,' ') 
        ORDER BY msen_endors_no
    </select>
	 
	 <select id="elions.uw.selectCekDetailEndorse" resultMap="elions.uw.result.selectCekDetailEndorse" parameterClass="string">
		SELECT a.msen_endors_no, a.msenf_number, a.lsje_id, a.msde_old1, a.msde_old2,
		       a.msde_old3, a.msde_old4, a.msde_old5, a.msde_new1, a.msde_new2,
		       a.msde_new3, a.msde_new4, a.msde_new5, a.mste_insured_no,
		       b.lsje_material, a.msde_old6, a.msde_new6, b.lsje_jenis
		  FROM eka.mst_det_endors a, eka.lst_jn_endors b
		 WHERE a.lsje_id = b.lsje_id AND a.msen_endors_no = RPAD (#value#, 12, ' ')
	 </select>
	 
	 <!-- <select id="elions.uw.selectCetakHeaderEndorse" resultMap="elions.uw.result.selectCetakHeaderEndorse" parameterClass="string"> -->
	 <select id="elions.uw.selectCetakHeaderEndorse" resultClass="java.util.HashMap" parameterClass="string">
		SELECT b.mspo_policy_no, a.msen_endors_no, b.mspo_policy_holder,
		       mst_client_a.mcl_first nama_pp, mst_client_b.mcl_first nama_tt,
		       a.msen_active_date, b.reg_spaj, c.mste_insured, a.msen_alasan alasan,
		       d.mscan_spaj_baru, a.msen_input_date
		  FROM eka.mst_endors a,
		       eka.mst_policy b,
		       eka.mst_insured c,
		       eka.mst_cancel d,
		       eka.mst_client_new mst_client_a,
		       eka.mst_client_new mst_client_b
		 WHERE a.reg_spaj = b.reg_spaj
		   AND a.reg_spaj = c.reg_spaj
		   AND a.reg_spaj = d.reg_spaj(+)
		   AND b.mspo_policy_holder = mst_client_a.mcl_id(+)
		   AND c.mste_insured = mst_client_b.mcl_id(+)
		   AND a.msen_endors_no = RPAD (#value#, 12, ' ')
   </select>

	 <select id="elions.uw.selectCetakHeaderEndorse.ssh" resultMap="elions.uw.result.selectCetakHeaderEndorse.ssh" parameterClass="string">
		SELECT a.msen_endors_no, a.msen_active_date, b.mspo_policy_no,
		       b.mspo_policy_holder, a.msen_print, a.lspd_id, b.reg_spaj, b.lku_id,
		       d.msde_old1, d.msde_old2, d.msde_old3, d.msde_old4, d.msde_new1,
		       d.msde_new2, d.msde_new3, d.msde_new4, e.mcl_first AS nama_tt,
		       f.mcl_first AS nama_pp, d.lsje_id, a.msen_input_date
		  FROM eka.mst_endors a,
		       eka.mst_policy b,
		       eka.mst_insured c,
		       eka.mst_det_endors d,
		       eka.mst_client_new e,
		       eka.mst_client_new f
		 WHERE b.reg_spaj = a.reg_spaj
		   AND c.reg_spaj = b.reg_spaj
		   AND a.msen_endors_no = d.msen_endors_no
		   AND c.mste_insured = e.mcl_id(+)
		   AND b.mspo_policy_holder = f.mcl_id(+)
		   AND a.msen_endors_no = RPAD (#value#, 12, ' ')
	</select>		       
	 
	 <select id="elions.uw.selectCetakHeaderEndorse.new" resultMap="elions.uw.result.selectCetakHeaderEndorse.new" parameterClass="java.util.HashMap">
		SELECT a.msde_old1, a.msde_old2, a.msde_old3, a.msde_old4, a.msde_old5,
		       a.msde_new1, a.msde_new2, a.msde_new3, a.msde_new4, a.msde_new5,
		       b.lsje_jenis, a.lsje_id, a.mste_insured_no, a.msde_old6, a.msde_new6,
		       a.msenf_number
		  FROM eka.mst_det_endors a, eka.lst_jn_endors b
		 WHERE a.lsje_id = b.lsje_id
		   AND a.msen_endors_no = RPAD (#no#, 12, ' ')
		   AND a.lsje_id = #lsje#
	</select>		
	 
	<select id="elions.uw.selectTanggalAksep" resultClass="string" parameterClass="string">
		SELECT to_char(MIN (msps_date),'dd-mm-yyyy') || ' ( Accepted by Underwriting )'
		  FROM eka.mst_position_spaj
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ') AND lssa_id = 5
	</select>
	 
	 <select id="elions.uw.selectTertanggungFromEndorse" resultClass="string" parameterClass="string">
		SELECT c.mste_insured
		  FROM eka.mst_det_endors a, eka.mst_endors b, eka.mst_insured c
		 WHERE b.msen_endors_no = a.msen_endors_no
		   AND b.reg_spaj = c.reg_spaj
		   AND a.msen_endors_no = RPAD (#value#, 12, ' ')
		   GROUP BY c.mste_insured
	 </select>
	 
	 <select id="elions.uw.selectBirthday" resultClass="date" parameterClass="string">
		SELECT mspe_date_birth
		  FROM eka.mst_person
		 WHERE mcl_id = #value#
	 </select>
	 
	 <select id="elions.uw.selectCountEndorse" resultClass="int" parameterClass="string">
		  SELECT COUNT(*)  
			 FROM EKA.MST_DET_ENDORS a
			WHERE  a.MSEN_ENDORS_NO = RPAD(#value#, 12, ' ')  AND  
					 a.LSJE_ID = 18	 
	</select>
		 
	<select id="elions.uw.selectMclFirst" resultClass="string" parameterClass="string">
		select mcl_first||mcl_gelar from eka.mst_client_new where mcl_id=#value#
	</select>		 
		 
	<select id="elions.uw.selectNamaKota" resultMap="elions.uw.result.selectNamaKota" parameterClass="string">
		SELECT b.lspr_note, b.lspr_id
		  FROM eka.lst_kabupaten a, eka.lst_propinsi b
		 WHERE a.lspr_id = b.lspr_id AND a.lska_note = #value#
	</select>		 
		 
	<select id="elions.uw.selectEndorseRubahPlanViewAll" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT   a.reg_spaj, a.lsdbs_number, a.lsbs_id, a.mspie_tsi, a.mspie_premium,
		         b.lscb_pay_mode, c.lku_symbol, d.lsdbs_name, a.mspie_tsi_old,
		         a.mspie_premium_old, a.mspie_disc_old, a.lsbs_id_old, e.lsje_id,
		         a.msen_endors_no, a.lku_id, e.msde_old3
		    FROM eka.mst_product_ins_end a,
		         eka.lst_pay_mode b,
		         eka.lst_kurs c,
		         eka.lst_det_bisnis d,
		         eka.mst_det_endors e
		   WHERE a.lscb_id_old = b.lscb_id(+)
		     AND c.lku_id = a.lku_id
		     AND a.lsbs_id_old = d.lsbs_id
		     AND a.lsdbs_num_old = d.lsdbs_number
		     AND a.msen_endors_no = e.msen_endors_no
		     AND a.mste_insured_no = e.mste_insured_no
		     AND a.msen_endors_no = RPAD(#no#, 12, ' ')
		     AND e.lsje_id = #lsje#
		     AND e.lsje_id <![CDATA[<>]]> 32
		ORDER BY a.lsbs_id ASC
	</select>
		 
	<select id="elions.uw.selectCountCancel" resultClass="int" parameterClass="string">
		SELECT COUNT(*)  
		FROM EKA.MST_CANCEL  
		WHERE REG_SPAJ = rpad(replace(#value#,'.'),11,' ')
	</select>
		 
	<select id="elions.uw.selectCetakWarisLama" resultClass="java.util.HashMap" parameterClass="string">
		SELECT a.lsre_id_old, a.msbee_persen_old, b.lsre_relation,
		          TRIM (a.msbee_first_old)
		       || ' '
		       || TRIM (a.msbee_middle_old)
		       || ' '
		       || TRIM (a.msbee_last_old) AS nama,
		       a.msbee_first_old, a.msbee_birth_old, a.msen_endors_no, 0 AS flag_tgl
		  FROM eka.mst_benefeciary_endors a,
		eka.lst_relation b
		 WHERE a.msen_endors_no = RPAD(#value#, 12, ' ') and 
		 a.lsre_id_old = b.lsre_id
	</select>
	
	<select id="elions.uw.selectCetakWarisBaru" resultClass="java.util.HashMap" parameterClass="string">
		SELECT lsre_id_new, msbee_persen_new, b.lsre_relation, 
		          TRIM (msbee_first_new)
		       || ' '
		       || TRIM (msbee_middle_new)
		       || ' '
		       || TRIM (msbee_last_new) AS nama,
		       msbee_first_new, msen_endors_no, reg_spaj, mste_insured_no,
		       msaw_number, msbee_birth_new, 0 AS flag_tgl
		  FROM eka.mst_benefeciary_endors a, eka.lst_relation b
		 WHERE msen_endors_no = RPAD(#value#, 12, ' ') and a.lsre_id_new = b.lsre_id
	</select>
	
	<select id="elions.uw.selectEndorseBankClause" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT msen_endors_no, reg_spaj, mste_insured_no, msaw_number, mdb_tgl_akad,
		       mdb_plafond, mdb_bayar_klaim, mdb_waktu, mdb_no_surat, mdb_tgl_surat,
		       mdb_alamat, mdb_kreditor, mdb_no_kredit
		  FROM eka.mst_det_benef_endors
		 WHERE msen_endors_no = RPAD(#endorse#, 12, ' ')
		   AND reg_spaj = RPAD(#spaj#, 11, ' ')
		   AND mste_insured_no = #insured#
		   AND msaw_number = #msaw#
	</select>
		 
	<select id="elions.uw.selectEndorseBebasPremi" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT   eka.f_lsdbs(b.reg_spaj, b.lsbs_id, b.lsdbs_number) lsdbs_name, b.lsbs_id, b.mspr_tsi, b.mspr_premium, a.lscb_id,
		         d.lku_symbol, e.lscb_pay_mode, ' ' AS ket, b.reg_spaj
		    FROM eka.mst_policy a,
		         eka.mst_product_insured b,
		         eka.lst_det_bisnis c,
		         eka.lst_kurs d,
		         eka.lst_pay_mode e
		   WHERE a.reg_spaj = b.reg_spaj
		     AND c.lsbs_id = b.lsbs_id
		     AND c.lsdbs_number = b.lsdbs_number
		     AND b.lku_id = d.lku_id
		     AND a.lscb_id = e.lscb_id
		     AND b.reg_spaj = RPAD(#spaj#, 11, ' ')
		     AND #lje# = 18
		ORDER BY b.lsbs_id ASC
	</select>
		 
	<select id="elions.uw.selectEndorseJadwalBayar" resultClass="java.util.HashMap" parameterClass="string">
		SELECT b.lku_symbol, a.msen_nilai, a.msen_beg_date, a.msen_end_date,
		       a.msen_type, a.msen_endors_no
		  FROM eka.mst_endors_bayar a, eka.lst_kurs b
		 WHERE a.lku_id = b.lku_id 
		 AND a.msen_endors_no = RPAD(#endorse#, 12, ' ')
	</select>
		 
	<select id="elions.uw.selectEndorseEdmNewFoot" resultClass="java.util.HashMap" parameterClass="string">
		SELECT b.MSPO_POLICY_NO,   
		         a.MSEN_ENDORS_NO,   
		         b.MSPO_POLICY_HOLDER,   
		         a.MSEN_ACTIVE_DATE,   
		         b.REG_SPAJ,   
		         c.MSTE_INSURED,   
		         a.MSEN_ALASAN,   
		         d.MSCAN_SPAJ_BARU,   
		         a.MSEN_INPUT_DATE  
		    FROM EKA.MST_ENDORS a,   
		         EKA.MST_POLICY b,   
		         EKA.MST_INSURED c,   
		         EKA.MST_CANCEL d  
		   WHERE a.reg_spaj = b.reg_spaj and a.reg_spaj = c.reg_spaj and a.REG_SPAJ = d.REG_SPAJ(+)
		and a.msen_endors_no = RPAD(#value#, 12, ' ')
	</select>

	<select id="elions.uw.selectNilaiSavingDevidentMaturity" resultClass="java.util.HashMap" parameterClass="map">
		SELECT DISTINCT a.lstab_tahun_ke,
		                  DECODE (a.lstab_jenis,
		                          5, SUM (a.lstab_value),
		                          0
		                         )
		                * DECODE (c.lsbs_id, 42, e.msinv_investasi, c.mspr_tsi)
		                / 1000 AS saving,
		                  DECODE (a.lstab_jenis,
		                          6, SUM (a.lstab_value),
		                          0
		                         )
		                * DECODE (c.lsbs_id, 42, e.msinv_investasi, c.mspr_tsi)
		                / 1000 AS deviden,
		                  DECODE (a.lstab_jenis,
		                          7, SUM (a.lstab_value),
		                          0
		                         )
		                * DECODE (c.lsbs_id, 42, e.msinv_investasi, c.mspr_tsi)
		                / 1000 AS maturity
		           FROM eka.lst_table a,
		                eka.mst_policy b,
		                eka.mst_product_insured c,
		                eka.mst_insured d,
		                eka.mst_investasi_plan_42 e
		          WHERE b.reg_spaj = RPAD(#spaj#, 11, ' ')
		            AND b.reg_spaj = c.reg_spaj
		            AND b.reg_spaj = d.reg_spaj
		            AND b.reg_spaj = e.reg_spaj(+)
		            AND c.lsbs_id <![CDATA[<]]> 800
		            AND a.lsbs_id = c.lsbs_id
		            AND a.lku_id = b.lku_id
		            AND a.lscb_id = b.lscb_id
		            AND a.lstab_lama_bayar = b.mspo_pay_period
		            AND a.lstab_lama_tanggung = #lamaTanggung#
		            AND a.lstab_age =
		                   (CASE
		                       WHEN c.lsbs_id IN (16, 31, 33, 70, 71, 72)
		                          THEN b.mspo_age
		                       WHEN c.lsbs_id = 11
		                          THEN b.mspo_umur_beasiswa
		                       ELSE d.mste_age
		                    END
		                   )
		            AND a.lstab_jenis NOT IN (1, 8)
		       GROUP BY a.lstab_jenis,
		                a.lstab_tahun_ke,
		                a.lsbs_id,
		                a.lku_id,
		                a.lscb_id,
		                a.lstab_lama_bayar,
		                a.lstab_lama_tanggung,
		                a.lstab_age,
		                c.mspr_tsi,
		                c.lsbs_id,
		                e.msinv_investasi
	</select>
	
	<select id="elions.uw.selectPolisSpajPemegang" resultClass="java.util.HashMap" parameterClass="string">
		select a.reg_spaj, a.mspo_policy_no, b.mcl_first from eka.mst_policy a, eka.mst_client_new b where a.mspo_policy_holder = b.mcl_id(+)
		and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.uw.selectAkumulasiPolisBySpaj.sumPremiRider" parameterClass="string" resultClass="double">
		  SELECT SUM(MSPR_PREMIUM)  
			 FROM EKA.MST_PRODUCT_INSURED  
			WHERE REG_SPAJ = rpad(replace(#value#,'.'),11,' ')
			  AND LSBS_ID BETWEEN 800 AND 899
	</select>

	<select id="elions.uw.selectAkumulasiPolisBySpaj.sumPremiExtra" parameterClass="string" resultClass="double">
		  SELECT SUM(MSPR_PREMIUM)  
			 FROM EKA.MST_PRODUCT_INSURED  
			WHERE REG_SPAJ = rpad(replace(#value#,'.'),11,' ')
			  AND LSBS_ID <![CDATA[>]]> 899
	</select>
	
	<!-- perhitungan SAR polis, BC-021202 -->
	<select id="elions.uw.selectAkumulasiPolisBySpaj.sarPolis" resultClass="double">
		select distinct
		b.mspr_tsi * nvl(a.lstaw_value,1000) / 1000
		from
		(
		SELECT a.lsbs_id, a.lstaw_value, b.maks
		  FROM eka.lst_table_awal a, 
		  (select lsbs_id, lku_id, lsrp_lama_tanggung_ext maks from eka.lst_reins_desc where lsdbs_number = #lsdbs#) b
		 WHERE a.lstaw_type = decode(#tahunKe#,1,1,2)
		   AND a.lsbs_id = decode(#lsbs#,70,31,71,31,72,31,78,52,82,69,83,58,62,52,64,56,#lsbs#)
		   AND a.lku_id = #lku#
		   AND a.lscb_id = decode(#lscb#,1,3,2,3,4,3,5,3,6,3,#lscb#)
		   AND a.lstaw_lama_bayar = decode(#lscb#,0,1,#lamaBayar#)
		   AND a.lstaw_lama_tanggung = (case when (#lsbs#=56 or #lsbs#=64) then 8 when nvl(b.maks,0)>0 then b.maks-#umurTertanggung# else #lamaTanggung# end)
		   AND a.lstaw_tahun_ke = #tahunKe#
		   AND a.lstaw_entry_age = decode(#lsbs#,65,#umurTertanggung#,1)
		   AND a.lsbs_id = b.lsbs_id(+)
		   AND a.lku_id = b.lku_id(+)
		) a,
		(select lsbs_id, mspr_tsi, mste_insured_no from eka.mst_product_insured where reg_spaj=rpad(replace(#spaj#,'.'),11,' ') and lsbs_id <![CDATA[<]]> 800) b
		where b.lsbs_id = a.lsbs_id(+)
		  and mste_insured_no = 1
	</select>

	<select id="elions.uw.selectAkumulasiPolisBySpaj.retensi" resultClass="double">
		select msrpr_retensi from eka.mst_reins_product where reg_spaj = #reg_spaj# and mste_insured_no = #mste_insured_no# 
		and lsbs_id = #lsbs_id# and lsdbs_number = #lsdbs_number#
	</select>

	 <select id="elions.uw.selectAkumulasiPolisBySpaj" parameterClass="string" resultMap="elions.uw.selectAkumulasiPolisBySpaj.result">
		SELECT * FROM (
			SELECT pp.mcl_first A, tt.mcl_first B,
			         (CASE
			           WHEN LENGTH (a.mspo_policy_no) = 9
			              THEN    SUBSTR (a.mspo_policy_no, 1, 2)
			                   || '.'
			                   || SUBSTR (a.mspo_policy_no, 3)
			           WHEN LENGTH (a.mspo_policy_no) = 11
			              THEN    SUBSTR (a.mspo_policy_no, 1, 2)
			                   || '.'
			                   || SUBSTR (a.mspo_policy_no, 3, 4)
			                   || '.'
			                   || SUBSTR (a.mspo_policy_no, 7)
			           ELSE    SUBSTR (a.mspo_policy_no, 1, 2)
			                || '.'
			                || SUBSTR (a.mspo_policy_no, 3, 3)
			                || '.'
			                || SUBSTR (a.mspo_policy_no, 6, 4)
			                || '.'
			                || SUBSTR (a.mspo_policy_no, 10)
			        END
			       ) C, d.lku_symbol D, c.mspr_tsi E,
			         c.mspr_premium G, 
			         TO_CHAR (b.mste_beg_date, 'dd-mm-yyyy') J,
			         TO_CHAR (b.mste_end_date, 'dd-mm-yyyy') K, g.lssp_status L,
			        	a.reg_spaj M,
			        	decode(e.tahun_ke,0,1,e.tahun_ke) N, c.lsbs_id O, a.lku_id P, a.lscb_id Q, a.mspo_pay_period R, a.mspo_ins_period S, b.mste_age T, c.lsdbs_number U,
			        	f.lsdbs_name V, b.mste_insured_no, a.lstb_id, b.mste_standard, b.mste_medical, months_between (b.mste_end_date,b.mste_beg_date) / 12 as pol_year,
			        	decode(g.lssp_id, 9, 
        (
        select msps_desc from eka.mst_position_spaj where lssa_id = 2 and reg_spaj = rpad(replace(#value#,'.'),11,' ')
                            and msps_date = (
                            select min(msps_date) from eka.mst_position_spaj where lssa_id = 2 and reg_spaj = rpad(replace(#value#,'.'),11,' ')
         ))) D1,a.mspo_age PP_AGE
			    FROM eka.mst_policy a,
			         eka.mst_insured b,
			         eka.mst_product_insured c,
			         eka.mst_client_new tt,
			         eka.mst_client_new pp,
			         eka.lst_kurs d,
			         (select reg_spaj, round((sysdate - mste_beg_date)/364)+1 tahun_ke from eka.mst_insured where mste_insured_no = 1) e,
			         eka.lst_det_bisnis f,
			         eka.lst_policy_status g
			   WHERE b.reg_spaj = a.reg_spaj
			     AND b.reg_spaj = c.reg_spaj
			     AND b.reg_spaj = e.reg_spaj
			     AND b.mste_insured_no = c.mste_insured_no
			     AND b.mste_insured = tt.mcl_id
			     AND a.mspo_policy_holder = pp.mcl_id
			     AND a.lku_id = d.lku_id(+)
				 AND a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
				 AND c.lsbs_id = f.lsbs_id
				 AND c.lsdbs_number = f.lsdbs_number
				 AND a.lssp_id = g.lssp_id
				 AND b.mste_insured_no = 1
				 AND c.mspr_active = 1
				 AND a.lspd_id <![CDATA[<>]]> 95
			UNION
			SELECT A.HOLDER_NAME AS a, B.NAMA_PESERTA AS b, 
				A.NO_SERTIFIKAT AS c, 'Rp.' AS d, A.LUMP_SUM AS e, 
				C.JUMLAH_PREMI AS g,
				TO_CHAR (B.BEG_DATE, 'dd-mm-yyyy') as J,
				TO_CHAR (B.END_AKTIF, 'dd-mm-yyyy') as K,F.LSSP_STATUS as L,
				A.ID as M, 
				decode(round((sysdate - B.BEG_DATE)/364)+1,0,1,round((sysdate - B.BEG_DATE)/364)+1) N, to_number(A.PRODUCT_CODE) as O, '01' AS LKU_ID, A.BILL_FREQ as Q, E.PAY_PERIOD as R, E.INS_PERIOD as S, B.USIA as T, B.PLAN as U,
				(TRIM(D.PRODUCT_NAME) || ' - ' || E.NAMA_PLAN) AS V, 1 as mste_insured_no, 11 as lstb_id, 0 as mste_standard, 0 as mste_medical, months_between (B.END_AKTIF,B.BEG_DATE) / 12 as pol_year,
				decode(f.lssp_id, 9, 
        (
        select msps_desc from eka.mst_position_spaj@eb where lssa_id = 2 and reg_spaj = rpad(replace(#value#,'.'),11,' ')
                            and msps_date = (
                            select min(msps_date) from eka.mst_position_spaj@eb where lssa_id = 2 and reg_spaj = rpad(replace(#value#,'.'),11,' ')
         ))) D1, 0 PP_AGE
			FROM EKA.MST_TMMS@eb A,
				 EKA.MST_TMMS_DET@eb B,
				 EKA.MST_TMMS_BILL@eb C,
				 EKA.LST_TM_PRODUCT@eb D,
				 EKA.LST_TM_PRODDET@eb E,
				 EKA.LST_POLICY_STATUS@eb F
			WHERE A.ID = B.ID 
			  AND A.ID = C.ID 
			  AND C.PREMI_KE = 1 
			  AND A.PRODUCT_CODE = D.PRODUCT_CODE 
			  AND B.PRODUCT_CODE = E.PRODUCT_CODE 
			  AND B.PLAN = E.PLAN
			  AND A.STATUS_POLIS = F.LSSP_ID
			  AND A.ID = rpad(replace(#value#,'.'),11,' ')
		)ORDER BY M ASC
	 </select>
	 
	 <select id="elions.uw.getKetMedis" resultClass="java.lang.String" parameterClass="java.lang.String">
		SELECT msps_desc
		  FROM eka.mst_position_spaj
		 WHERE reg_spaj = #value# AND lssa_id = 5 AND sub_id IN (3, 4)	 	
	 </select>
	 
	 <select id="elions.uw.selectLstTableMedisIndividu" resultClass="java.lang.String" parameterClass="java.lang.String">
	 	SELECT jenis_medis
		  FROM eka.lst_table_medis_individu_$kata$
	 </select>	 
	 
	 <select id="elions.uw.selectEmBmi" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		SELECT life,adb,tpd,wop
		  FROM eka.lst_rate_bmi
		 WHERE $kata$
	 </select>
	 
	 <select id="elions.uw.selectEmWorksheet" resultClass="java.util.HashMap" parameterClass="java.lang.Integer">
		SELECT life, adb, tpd, ci, wop, di
		  FROM eka.lst_worksheet_em
		 WHERE lw_id = #value#	 
	 </select>
	 
	 <select id="elions.uw.selectEmBloodPresure" resultClass="java.lang.String" parameterClass="java.lang.String">
		SELECT rate
		  FROM eka.lst_rate_blood_presure
		 WHERE $kata$	 
	 </select>
	 
	 <select id="elions.uw.getRatioChol" resultClass="java.lang.String" parameterClass="java.lang.String">
	 SELECT rate
		  FROM eka.lst_rate_chol_$kata$
	 </select>

	<select id="elions.uw.selectViewerKontrolMedis" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT b.lsmc_name, a.msdm_status, a.msdm_desc, a.msdm_input_date, f.lus_full_name
		  FROM eka.mst_det_medical a, 
		  	   eka.lst_medical_check_up b
			   <isNotNull property="lusId">
				   , eka.mst_policy c, 
				  eka.lst_user_admin d, 
				  eka.lst_region e
			  </isNotNull>
			  ,eka.lst_user f
		WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ') 
		  AND a.mste_insured_no = #no#
		  AND a.lsmc_id = b.lsmc_id
		  <isNotNull property="lusId">
			AND a.reg_spaj = c.reg_spaj
			AND c.lca_id = e.lca_id
			AND c.lwk_id = e.lwk_id
			AND c.lsrg_id = e.lsrg_id
			AND e.lar_id = d.lar_id
			AND d.lus_id = #lusId#	
		  </isNotNull>
		 AND a.msdm_lus_id = f.lus_id 
	</select>
	
	<select id="elions.uw.isWorksheetExis" resultClass="com.ekalife.elions.model.worksheet.UwWorkSheet" parameterClass="java.lang.String">
		  SELECT reg_spaj, insured_no, mcl_id, msw_medis
		    FROM eka.mst_worksheet
		   WHERE reg_spaj = #value# 
		     AND ROWNUM = 1
		ORDER BY insured_no
	</select>
	
	<select id="elions.uw.getUwWorksheet" resultMap="elions.uw.result.getWoksheet" parameterClass="java.util.HashMap">
		SELECT reg_spaj, insured_no, mcl_id, msw_medis, msw_lus_id, non_med_tb,
		       non_med_bb, non_med_bmi_kelainan, non_med_occupation, non_med_habits,
		       non_med_habits_kelainan, non_med_hobby, non_med_kelainan,
		       non_med_kelainan_kelainan, sumber_mcu, jenis_medis, non_med_occupation_desc, 
		       non_med_hobby_desc, position, mode_sim, msw_sex
		  FROM eka.mst_worksheet
		 WHERE reg_spaj = trim(#reg_spaj#) AND insured_no = trim(#insured_no#)	
	</select>
	
	<!--<select id="elions.uw.getWoksheetNonMed" resultMap="elions.uw.result.getWoksheetNonMed" parameterClass="java.util.HashMap">
		SELECT non_medis_tb, non_medis_bb, non_medis_bmi_kelainan,
		       non_medis_occupation, non_medis_habits,
		       non_medis_habits_kelainan, non_medis_hobby,
		       non_medis_kelainan, non_medis_kelainan_kelainan
		  FROM eka.mst_det_non_medis
		 WHERE reg_spaj = #reg_spaj# AND insured_no = #insured_no#
	</select>-->
	
	<select id="elions.uw.getListQuestionnaire" resultClass="com.ekalife.elions.model.worksheet.UwQuestionnaire" parameterClass="java.util.HashMap">
		SELECT reg_spaj, insured_no, urut, lw_id, kesimpulan
		  FROM eka.lst_worksheet_questionnaire
		 WHERE reg_spaj = #reg_spaj# AND insured_no = #insured_no#
	</select>
	
	<select id="elions.uw.cekMstWorksheet" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(*)
		  FROM eka.mst_worksheet
		 WHERE reg_spaj = #reg_spaj# AND insured_no = #insured_no#
	</select>
	
	<select id="elions.uw.cekMstDetNonMedis" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(*)
		  FROM eka.mst_det_non_medis
		 WHERE reg_spaj = #reg_spaj# AND insured_no = #insured_no#		
	</select>
	
	<select id="elions.uw.cekListQuest" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(*)
		  FROM eka.lst_worksheet_questionnaire
		 WHERE reg_spaj = #reg_spaj# AND insured_no = #insured_no# AND urut = #urut#	 	
	</select>
	
	<select id="elions.uw.cekMstWorkDec" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT (*)
		  FROM eka.mst_work_dec
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no# 
		   AND mwd_urut = #mwd_urut#		
	</select>
	
	<select id="elions.uw.getListUwDec" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		  SELECT a.reg_spaj, a.insured_no, a.mwd_urut, a.penyakit, a.lsbs_id,
		         a.lsdbs_number, a.prod_utama_persen, a.prod_utama_permil, a.lic_id,
		         b.lic_desc, a.urutan_penyakit, a.urutan_decision, a.catatan,
		         a.lus_id, to_char(a.input_date,'dd/mm/yyyy') input_date
		    FROM eka.mst_work_dec a LEFT JOIN eka.lst_icd b 
			  ON a.lic_id = b.lic_id
		   WHERE a.insured_no = #insured_no#
		     AND a.reg_spaj = #reg_spaj#
		ORDER BY a.mwd_urut	
	</select>

	<select id="elions.uw.cekMstWorkDecRider" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT (*)
		  FROM eka.mst_work_dec_rider
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no# 
		   AND mwd_urut = #mwd_urut#	
		   AND mwdr_urut = #mwdr_urut#	
	</select>
	
	<select id="elions.uw.getListWorkDecRider" resultClass="com.ekalife.elions.model.worksheet.UwDecisionRider" parameterClass="java.util.HashMap">
		SELECT   reg_spaj, insured_no, mwd_urut, mwdr_urut, lsbs_id, lsdbs_number,
		         urutan_penyakit, urutan_decision, rate_persen, rate_permil
		    FROM eka.mst_work_dec_rider
		   WHERE reg_spaj = #reg_spaj# AND insured_no = #insured_no# AND mwd_urut = #mwd_urut#
		ORDER BY mwd_urut, mwdr_urut	
	</select>
	
	<select id="elions.uw.getListWorkDecRiderById" resultClass="com.ekalife.elions.model.worksheet.UwDecisionRider" parameterClass="java.util.HashMap">
		SELECT   reg_spaj, insured_no, mwd_urut, mwdr_urut, lsbs_id, lsdbs_number,
		         urutan_penyakit, urutan_decision, rate_persen, rate_permil
		    FROM eka.mst_work_dec_rider
		   WHERE reg_spaj = #reg_spaj# 
		     AND insured_no = #insured_no# 
		     AND mwd_urut = #mwd_urut#
		     AND lsbs_id = #lsbs_id#
		     AND lsdbs_number = #lsdbs_number#
		ORDER BY mwd_urut, mwdr_urut	
	</select>

	<select id="elions.uw.getFinancialStat" resultClass="com.ekalife.elions.model.worksheet.UwWorkSheet" parameterClass="java.util.HashMap">
		SELECT reg_spaj, insured_no, flag_fs, to_char(fs_date,'dd/mm/yyyy') fs_date, fs_copy_rek_bank, fs_copy_npwp,
		       fs_spt_pribadi, fs_copy_neraca_persh, fs_lain, fs_lain_desc
		  FROM eka.mst_financial_stat
		 WHERE reg_spaj = #reg_spaj# AND insured_no = #insured_no#	
	</select>
	
	<select id="elions.uw.cekMstFinancialStat" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT (*)
		  FROM eka.mst_financial_stat
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no# 
	</select>
	
	<select id="elions.uw.getListLpk" resultMap="elions.uw.result.getListLpk" parameterClass="java.util.HashMap">
		SELECT reg_spaj, insured_no, urutan_lpk,
		       TO_CHAR (tgl_mcu_lpk, 'dd/mm/yyyy') tgl_mcu_lpk, tmp_mcu_lpk, lpk_tb,
		       lpk_bb, lpk_bmi_kelainan, lpk_systolic, lpk_diastolic, lpk_denyut_nadi,
		       lpk_rpd, lpk_rps, lpk_rpk, lpk_kelainan, nv_denyut_nadi
		  FROM eka.mst_med_lpk
		 WHERE reg_spaj = #reg_spaj# AND insured_no = #insured_no#	
	</select>
	
	<select id="elions.uw.cekListLpk" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT (*)
		  FROM eka.mst_med_lpk
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no# 
		   AND urutan_lpk = #urutan# 	
	</select>
	
	<select id="elions.uw.getListRiwPenyakit" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT reg_spaj, insured_no, urutan_lpk, rp_type, rp_urutan, rp_desc
		  FROM eka.lst_riw_penyakit
		 WHERE reg_spaj = #reg_spaj#
		   AND insured_no =  #insured_no#
		   AND urutan_lpk = #urutanLpk#
		   AND rp_type = #rp_type#	
	</select>
	
	<select id="elions.uw.cekLstRiwPenyakit" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT (*)
		  FROM eka.lst_riw_penyakit
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no# 
		   AND urutan_lpk = #urutan_lpk#
		   AND rp_urutan = #rp_urutan#
		   AND rp_type = #rp_type#
	</select>
	
	<select id="elions.uw.cekListUrin" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT (*)
		  FROM eka.mst_med_urin
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no# 
		   AND urutan_urin = #urutan#  	
	</select>
	
	<select id="elions.uw.getListUrin" resultMap="elions.uw.result.getListUrin" parameterClass="java.util.HashMap">
		SELECT a.reg_spaj, a.insured_no, a.urutan_urin, to_char(a.tgl_mcu_urin,'dd/mm/yyyy') tgl_mcu_urin,
		       a.tmp_mcu_urin, a.flag_warna, a.warna, a.warna_kelainan,
		       a.warna_lic_id, b.lic_desc warna_lic_desc, a.flag_kejernihan,
		       a.kejernihan, a.kejernihan_kelainan, a.kejernihan_lic_id,
		       c.lic_desc kejernihan_lic_desc, a.flag_bj, a.bj, a.bj_kelainan,
		       a.bj_lic_id, d.lic_desc bj_lic_desc, a.flag_ph, a.ph, a.ph_kelainan,
		       a.ph_lic_id, e.lic_desc ph_lic_desc, a.flag_protein, a.protein,
		       a.protein_kelainan, a.protein_lic_id, f.lic_desc protein_lic_desc,
		       a.flag_glukosa, a.glukosa, a.glukosa_kelainan, a.glukosa_lic_id,
		       g.lic_desc glukosa_lic_desc, a.flag_keton, a.keton, a.keton_kelainan,
		       a.keton_lic_id, h.lic_desc keton_lic_desc, a.flag_bilirubin,
		       a.bilirubin, a.bilirubin_kelainan, a.bilirubin_lic_id,
		       i.lic_desc bilirubin_lic_desc, a.flag_urobilinogen, a.urobilinogen,
		       a.urobilinogen_kelainan, a.urobilinogen_lic_id,
		       j.lic_desc urobilinogen_lic_desc, a.flag_nitrit, a.nitrit,
		       a.nitrit_kelainan, a.nitrit_lic_id, k.lic_desc nitrit_lic_desc,
		       a.flag_darah_samar, a.darah_samar, a.darah_samar_kelainan,
		       a.darah_samar_lic_id, l.lic_desc darah_samar_lic_desc,
		       a.flag_leukosit_esterase, a.leukosit_esterase,
		       a.leukosit_esterase_kelainan, a.leukosit_esterase_lic_id,
		       m.lic_desc lekosit_esterase_lic_desc, a.flag_sedimen_eritrosit,
		       a.sedimen_eritrosit, a.sedimen_eritrosit_kelainan,
		       a.sedimen_eritrosit_lic_id, n.lic_desc sedimen_eritrosit_lic_desc,
		       a.flag_sedimen_leukosit, a.sedimen_leukosit,
		       a.sedimen_leukosit_kelainan, a.sedimen_leukosit_lic_id,
		       o.lic_desc sedimen_leukosit_lic_desc, a.flag_sedimen_epitel,
		       a.sedimen_epitel, a.sedimen_epitel_kelainan, a.sedimen_epitel_lic_id,
		       p.lic_desc sedimen_epitel_lic_desc, a.flag_sedimen_silinder,
		       a.sedimen_silinder, a.sedimen_silinder_kelainan,
		       a.sedimen_silinder_lic_id, q.lic_desc sedimen_silinder_lic_desc,
		       a.flag_sedimen_kristal, a.sedimen_kristal, a.sedimen_kristal_kelainan,
		       a.sedimen_kristal_lic_id, r.lic_desc sedimen_kristal_lic_desc,
		       a.nv_warna, a.nv_kejernihan, a.nv_berat_jenis, a.nv_ph, a.nv_protein,
		       a.nv_glukosa, a.nv_keton, a.nv_bilirubin, a.nv_urobilinogen,
		       a.nv_nitrit, a.nv_darah_samar, a.nv_lekosit_esterase, a.nv_eritrosit,
		       a.nv_lekosit, a.nv_epitel, a.nv_silinder, a.nv_bakteri, a.nv_kristal,
		       a.flag_bakteri, a.bakteri,
		       a.bakteri_kelainan, a.bakteri_lic_id,
		       s.lic_desc bakteri_lic_desc
		  FROM eka.mst_med_urin a,
		       eka.lst_icd b,
		       eka.lst_icd c,
		       eka.lst_icd d,
		       eka.lst_icd e,
		       eka.lst_icd f,
		       eka.lst_icd g,
		       eka.lst_icd h,
		       eka.lst_icd i,
		       eka.lst_icd j,
		       eka.lst_icd k,
		       eka.lst_icd l,
		       eka.lst_icd m,
		       eka.lst_icd n,
		       eka.lst_icd o,
		       eka.lst_icd p,
		       eka.lst_icd q,
		       eka.lst_icd r,
		       eka.lst_icd s
		 WHERE a.warna_lic_id = b.lic_id(+)
		   AND a.kejernihan_lic_id = c.lic_id(+)
		   AND a.bj_lic_id = d.lic_id(+)
		   AND a.ph_lic_id = e.lic_id(+)
		   AND a.protein_lic_id = f.lic_id(+)
		   AND a.glukosa_lic_id = g.lic_id(+)
		   AND a.keton_lic_id = h.lic_id(+)
		   AND a.bilirubin_lic_id = i.lic_id(+)
		   AND a.urobilinogen_lic_id = j.lic_id(+)
		   AND a.nitrit_lic_id = k.lic_id(+)
		   AND a.darah_samar_lic_id = l.lic_id(+)
		   AND a.leukosit_esterase_lic_id = m.lic_id(+)
		   AND a.sedimen_eritrosit_lic_id = n.lic_id(+)
		   AND a.sedimen_leukosit_lic_id = o.lic_id(+)
	   AND a.sedimen_epitel_lic_id = p.lic_id(+)
	   AND a.sedimen_silinder_lic_id = q.lic_id(+)
	   AND a.sedimen_kristal_lic_id = r.lic_id(+)
	   AND a.sedimen_kristal_lic_id = s.lic_id(+)
	   AND a.reg_spaj = #reg_spaj# 
	   AND a.insured_no = #insured_no#		
	</select>
	
	<select id="elions.uw.cekListAda" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT (*)
		  FROM eka.mst_med_ada
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no#
		   AND urutan_ada = #urutan#  	
	</select>	
	
	<select id="elions.uw.getListAda" resultMap="elions.uw.result.getListAda" parameterClass="java.util.HashMap">
		SELECT a.reg_spaj, a.insured_no, a.urutan_ada, a.flag_ada,
		       TO_CHAR (a.tgl_mcu_ada, 'dd/mm/yyyy') tgl_mcu_ada, a.tmp_mcu_ada,
		       a.flag_hemoglobin, a.hemoglobin, a.hemoglobin_kelainan,
		       a.hemoglobin_lic_id, b.lic_desc hemoglobin_lic_desc, a.flag_leukosit,
		       a.leukosit, a.leukosit_kelainan, a.leukosit_lic_id, c.lic_desc leukosit_lic_desc,
		       a.flag_eosinofil, a.eosinofil, a.eosinofil_kelainan,
		       a.eosinofil_lic_id, d.lic_desc eosinofil_lic_desc, a.flag_basofil, a.basofil,
		       a.basofil_kelainan, a.basofil_lic_id, e.lic_desc basofil_lic_desc,
		       a.flag_neutrofil_batang, a.neutrofil_batang,
		       a.neutrofil_batang_kelainan, a.neutrofil_batang_lic_id, f.lic_desc neutrofil_batang_lic_desc,
		       a.flag_neutrofil_segmen, a.neutrofil_segmen,
		       a.neutrofil_segmen_kelainan, a.neutrofil_segmen_lic_id, g.lic_desc neutrofil_segmen_lic_desc,
		       a.flag_limfosit, a.limfosit, a.limfosit_kelainan, a.limfosit_lic_id,
		       h.lic_desc limfosit_lic_desc, a.flag_monosit, a.monosit, a.monosit_kelainan,
		       a.monosit_lic_id, i.lic_desc monosit_lic_desc, a.flag_trombosit, a.trombosit,
		       a.trombosit_kelainan, a.trombosit_lic_id, j.lic_desc trombosit_lic_desc, a.flag_eritrosit,
		       a.eritrosit, a.eritrosit_kelainan, a.eritrosit_lic_id, k.lic_desc eritrosit_lic_desc,
		       a.flag_hematokrit, a.hematokrit, a.hematokrit_kelainan,
		       a.hematokrit_lic_id, l.lic_desc hematokrit_lic_desc, a.flag_led, a.led, a.led_kelainan,
		       a.led_lic_id, m.lic_desc led_lic_desc, a.flag_mcv, a.mcv, a.mcv_kelainan, a.mcv_lic_id, n.lic_desc mcv_lic_desc,
		       a.flag_mch, a.mch, a.mch_kelainan, a.mch_lic_id, o.lic_desc mch_lic_desc,
		       a.flag_mchc, a.mchc, a.mchc_kelainan, a.mchc_lic_id, p.lic_desc mchc_lic_desc,
		       a.flag_rdw, a.rdw, a.rdw_kelainan, a.rdw_lic_id, q.lic_desc rdw_lic_desc,
		       a.flag_gula_darah_puasa, a.gula_darah_puasa,
		       a.gula_darah_puasa_kelainan, a.gula_darah_puasa_lic_id, r.lic_desc gula_darah_puasa_lic_desc,
		       a.flag_hb1c, a.hb1c, a.hb1c_kelainan, a.hb1c_lic_id, s.lic_desc hba1c_lic_desc,
		       a.satuan_chol, a.total_cholesterol, a.hdl_cholesterol,
		       a.ldl_cholesterol, a.trigiliserida,
		       a.flag_sgot, a.sgot, a.sgot_kelainan, a.sgot_lic_id, t.lic_desc sgot_lic_desc,
		       a.flag_sgpt, a.sgpt, a.sgpt_kelainan, a.sgpt_lic_id, u.lic_desc sgpt_lic_desc,
		       a.flag_ggt, a.ggt, a.ggt_kelainan, a.ggt_lic_id, v.lic_desc ggt_lic_desc,
		       a.flag_fosfatase_alkali, a.fosfatase_alkali,
		       a.fosfatase_alkali_kelainan, a.fosfatase_alkali_lic_id, w.lic_desc fosfatase_alkali_lic_desc,
		       a.flag_bilirubin_direk, a.bilirubin_direk, a.bilirubin_direk_kelainan,
		       a.bilirubin_direk_lic_id, x.lic_desc bilirubin_direk_lic_desc, a.flag_bilirubin_indirek,
		       a.bilirubin_indirek, a.bilirubin_indirek_kelainan,
		       a.bilirubin_indirek_lic_id, y.lic_desc bilirubin_indirek_lic_desc, a.flag_bilirubin_total, a.bilirubin_total,
		       a.bilirubin_total_kelainan, a.bilirubin_total_lic_id, z.lic_desc bilirubin_total_lic_desc,
		       a.flag_albumin, a.albumin, a.albumin_kelainan, a.albumin_lic_id,
		       a1.lic_desc albumin_lic_desc, a.flag_globulin, a.globulin, a.globulin_kelainan,
		       a.globulin_lic_id, b1.lic_desc globulin_lic_desc, a.flag_total_protein, a.total_protein,
		       a.total_protein_kelainan, a.total_protein_lic_id, c1.lic_desc total_protein_lic_desc,
		       a.flag_hbs_ag, a.hbs_ag, a.hbs_ag_kelainan, a.hbs_ag_lic_id,
		       d1.lic_desc hbs_ag_lic_desc, a.flag_hbe_ag, a.hbe_ag, a.hbe_ag_kelainan,
		       a.hbe_ag_lic_id, e1.lic_desc hbe_ag_lic_desc, a.flag_creatinin, a.creatinin,
		       a.creatinin_kelainan, a.creatinin_lic_id, f1.lic_desc creatinin_lic_desc, a.flag_ureum,
		       a.ureum, a.ureum_kelainan, a.ureum_lic_id, g1.lic_desc ureum_lic_desc,
		       a.flag_asam_urat, a.asam_urat, a.asam_urat_kelainan,
		       a.asam_urat_lic_id, h1.lic_desc asam_urat_lic_desc, a.nv_hemoglobin, a.nv_leukosit,
		       a.nv_trombosit, a.nv_eritrosit, a.nv_hemotokrit, a.nv_led, a.nv_mcv, a.nv_mchc,
		       a.nv_rdw, a.nv_eosinofil, a.nv_basofil, a.nv_neutrofil_batang,
		       a.nv_neutrofil_segmen, a.nv_limfosit, a.nv_monosit,
		       a.nv_glukosa_darah_puasa, a.nv_glukosa_hba1c, a.nv_total_cholesterol,
		       a.nv_hdl_cholesterol, a.nv_ldl_cholesterol, a.nv_ratio_total_chol_hdl,
		       a.nv_ratio_ldl_hdl, a.nv_trigiliserida, a.nv_sgot_ast, a.nv_sgpt_alt,
		       a.nv_gamma_gt_ggtp, a.nv_alkali_fosfatase, a.nv_bilirubin_direk,
		       a.nv_bilirubin_indirek, a.nv_bilirubin_total, a.nv_albumin,
		       a.nv_globulin, a.nv_total_protein, a.nv_hbsag, a.nv_hbeag, a.nv_ureum,
		       a.nv_creatinin, a.nv_asam_urat, a.nv_mch, a.nv_glukosa_darah_pp, a.flag_gula_darah_pp, a.gula_darah_pp,
		       a.gula_darah_pp_kelainan, a.gula_darah_pp_lic_id, i1.lic_desc gula_darah_pp_lic_desc
		  FROM eka.mst_med_ada a,
		       eka.lst_icd b,
		       eka.lst_icd c,
		       eka.lst_icd d,
		       eka.lst_icd e,
		       eka.lst_icd f,
		       eka.lst_icd g,
		       eka.lst_icd h,
		       eka.lst_icd i,
		       eka.lst_icd j,
		       eka.lst_icd k,
		       eka.lst_icd l,
		       eka.lst_icd m,
		       eka.lst_icd n,
		       eka.lst_icd o,
		       eka.lst_icd p,
		       eka.lst_icd q,
		       eka.lst_icd r,
		       eka.lst_icd s,
		       eka.lst_icd t,
		       eka.lst_icd u,
		       eka.lst_icd v,
		       eka.lst_icd w,
		       eka.lst_icd x,
		       eka.lst_icd y,
		       eka.lst_icd z,
		       eka.lst_icd a1,
		       eka.lst_icd b1,
		       eka.lst_icd c1,
		       eka.lst_icd d1,
		       eka.lst_icd e1,
		       eka.lst_icd f1,
		       eka.lst_icd g1,
		       eka.lst_icd h1,
			   eka.lst_icd i1
		  WHERE a.hemoglobin_lic_id = b.lic_id(+)
		   AND a.leukosit_lic_id = c.lic_id(+)
		   AND a.eosinofil_lic_id = d.lic_id(+)
		   AND a.basofil_lic_id = e.lic_id(+)
		   AND a.neutrofil_batang_lic_id = f.lic_id(+)
		   AND a.neutrofil_segmen_lic_id = g.lic_id(+)
		   AND a.limfosit_lic_id = h.lic_id(+)
		   AND a.monosit_lic_id = i.lic_id(+)
		   AND a.trombosit_lic_id = j.lic_id(+)
		   AND a.eritrosit_lic_id = k.lic_id(+)
		   AND a.hematokrit_lic_id = l.lic_id(+)
		   AND a.led_lic_id = m.lic_id(+)
		   AND a.mcv_lic_id = n.lic_id(+)
		   AND a.mch_lic_id = o.lic_id(+)
		   AND a.mchc_lic_id = p.lic_id(+)
		   AND a.rdw_lic_id = q.lic_id(+)
		   AND a.gula_darah_puasa_lic_id = r.lic_id(+)
		   AND a.hb1c_lic_id = s.lic_id(+)
		   AND a.sgot_lic_id = t.lic_id(+)
		   AND a.sgpt_lic_id = u.lic_id(+)
		   AND a.ggt_lic_id = v.lic_id(+)
		   AND a.fosfatase_alkali_lic_id = w.lic_id(+)
		   AND a.bilirubin_direk_lic_id = x.lic_id(+)
		   AND a.bilirubin_indirek_lic_id = y.lic_id(+)
		   AND a.bilirubin_total_lic_id = z.lic_id(+)
		   AND a.albumin_lic_id = a1.lic_id(+)
		   AND a.globulin_lic_id = b1.lic_id(+)
		   AND a.total_protein_lic_id = c1.lic_id(+)
		   AND a.hbs_ag_lic_id = d1.lic_id(+)
		   AND a.hbe_ag_lic_id = e1.lic_id(+)
		   AND a.creatinin_lic_id = f1.lic_id(+)
		   AND a.ureum_lic_id = g1.lic_id(+)
		   AND a.asam_urat_lic_id = h1.lic_id(+)
		   AND a.gula_darah_pp_lic_id = i1.lic_id(+)
		   AND a.reg_spaj = #reg_spaj# 
		   AND a.insured_no = #insured_no#		
	</select>
	
	<select id="elions.uw.cekListHiv" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT (*)
		  FROM eka.mst_med_hiv
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no#
		   AND urutan_hiv = #urutan#  	
	</select>
	
	<select id="elions.uw.getListHiv" resultMap="elions.uw.result.getListHiv" parameterClass="java.util.HashMap">
		SELECT reg_spaj, insured_no, urutan_hiv,
		       TO_CHAR (tgl_mcu_hiv, 'dd/mm/yyyy') tgl_mcu_hiv, tmp_mcu_hiv, anti_hiv,
		       nv_anti_hiv
		  FROM eka.mst_med_hiv
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no#		  	
	</select>
	
	<select id="elions.uw.cekListTumor" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT (*)
		  FROM eka.mst_med_tumor
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no#
		   AND urutan_tumor = #urutan#  	
	</select>
	
	<select id="elions.uw.getListTumor" resultMap="elions.uw.result.getListTumor" parameterClass="java.util.HashMap">
		SELECT reg_spaj, insured_no, urutan_tumor,
		       TO_CHAR (tgl_mcu_tumor, 'dd/mm/yyyy') tgl_mcu_tumor, tmp_mcu_tumor,
		       cea, afp, psa, ca_15_3, nv_cea, nv_afp, nv_psa, nv_ca_15_3
		  FROM eka.mst_med_tumor
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no# 		  	
	</select>
	
	<select id="elions.uw.cekListAbdomen" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT (*)
		  FROM eka.mst_med_abdomen
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no# 	
		   AND urutan_abdomen = #urutan# 
	</select>
	
	<select id="elions.uw.getListAbdomen" resultMap="elions.uw.result.getListAbdomen" parameterClass="java.util.HashMap">
		SELECT a.reg_spaj, a.insured_no, a.urutan_abdomen,
		       TO_CHAR (a.tgl_mcu_abdomen, 'dd/mm/yyyy') tgl_mcu_abdomen,
		       a.tmp_mcu_abdomen, a.flag_abdomen, a.abdomen_kelainan,
		       a.abdomen_lic_id, b.lic_desc abdomen_lic_desc
		  FROM eka.mst_med_abdomen a, eka.lst_icd b
		 WHERE a.abdomen_lic_id = b.lic_id(+) 	 
		   AND a.reg_spaj = #reg_spaj# 
		   AND a.insured_no = #insured_no# 	
	</select>
	
	<select id="elions.uw.getListDadaPa" resultMap="elions.uw.result.getListDadaPa" parameterClass="java.util.HashMap">
		SELECT a.reg_spaj, a.insured_no, a.urutan_dada_pa,
		       TO_CHAR (a.tgl_mcu_dada_pa, 'dd/mm/yyyy') tgl_mcu_dada_pa,
		       a.tmp_mcu_dada_pa, a.flag_dada_pa, a.dada_pa_kelainan, a.dada_pa_lic_id,
		       b.lic_desc dada_pa_lic_desc
		  FROM eka.mst_med_dada_pa a, 
		  	   eka.lst_icd b
		 WHERE a.dada_pa_lic_id = b.lic_id(+) 
		   AND a.reg_spaj = #reg_spaj# 
		   AND a.insured_no = #insured_no#		 	
	</select>
	
	<select id="elions.uw.cekListDadaPa" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT (*)
		  FROM eka.mst_med_dada_pa
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no#
		   AND urutan_dada_pa = #urutan#  	
	</select>
	
	<select id="elions.uw.getListEkg" resultMap="elions.uw.result.getListEkg" parameterClass="java.util.HashMap">
		SELECT a.reg_spaj, a.insured_no, a.urutan_ekg,
		       TO_CHAR (a.tgl_mcu_ekg, 'dd/mm/yyyy') tgl_mcu_ekg,
		       a.tmp_mcu_ekg, a.flag_ekg, a.ekg_kelainan, a.ekg_lic_id,
		       b.lic_desc ekg_lic_desc
		  FROM eka.mst_med_ekg a, 
		  	   eka.lst_icd b
		 WHERE a.ekg_lic_id = b.lic_id(+)		   
		   AND a.reg_spaj = #reg_spaj# 
		   AND a.insured_no = #insured_no#	
	</select>
	
	<select id="elions.uw.cekListEkg" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT (*)
		  FROM eka.mst_med_ekg
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no# 
		   AND urutan_ekg = #urutan# 	
	</select>
	
	<select id="elions.uw.getListTreadmill" resultMap="elions.uw.result.getListTreadmill" parameterClass="java.util.HashMap">
		SELECT a.reg_spaj, a.insured_no, a.urutan_treadmill, a.tmp_mcu_treadmill,
		       TO_CHAR (a.tgl_mcu_treadmill, 'dd/mm/yyyy') tgl_mcu_treadmill,
		       a.duration_men, a.duration_det, a.mets, a.reason_of_termination,
		       a.max_st_depresi, a.resting_bp, a.max_bp, a.max_bp, a.max_heart_rate,
		       a.interpretasi, a.treadmill_lic_id, b.lic_desc treadmill_lic_desc
		  FROM eka.mst_med_treadmill a, eka.lst_icd b
		 WHERE a.treadmill_lic_id = b.lic_id(+)		   
		   AND a.reg_spaj = #reg_spaj# 
		   AND a.insured_no = #insured_no#	
	</select>
	
	<select id="elions.uw.cekListTreadmill" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT (*)
		  FROM eka.mst_med_treadmill
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no#
		   AND urutan_treadmill = #urutan#  	
	</select>
	
	<select id="elions.uw.getListMedLain" resultMap="elions.uw.result.getListMedisLain" parameterClass="java.util.HashMap">
		SELECT reg_spaj, insured_no, urutan_med_lain,
		       TO_CHAR (tgl_mcu_med_lain, 'dd/mm/yyyy') tgl_mcu_med_lain,
		       tmp_mcu_med_lain, ket_med_lain
		  FROM eka.mst_med_lain 		   
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no#	
	</select>
	
	<select id="elions.uw.cekListMedLain" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT (*)
		  FROM eka.mst_med_lain
		 WHERE reg_spaj = #reg_spaj# 
		   AND insured_no = #insured_no#
		   AND urutan_med_lain = #urutan#  	
	</select>		
	
	<select id="elions.uw.selectExpiredDate" parameterClass="java.util.HashMap" resultClass="java.lang.String">		
		SELECT TO_CHAR (TO_DATE (#inputDate#, 'dd/mm/yyyy') + #dayAdd#, 'dd/mm/yyyy') FROM DUAL
	</select>
	
	<select id="elions.uw.getHasilReas" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT a.reg_spaj, a.mste_insured_no, b.lsre_nama, a.msdhr_input_date,
		       a.msdhr_expired_date, a.msdhr_em, a.msdhr_alasan, a.msdhr_catatan
		  FROM eka.mst_det_hsl_reas a, eka.lst_reinsurer b
		 WHERE a.lsrei_id = b.lsrei_id
		   AND a.reg_spaj = #reg_spaj#
		   AND a.mste_insured_no = #insured_no#
           AND rownum = 1
      ORDER BY msdhr_input_date desc 		    		
	</select>
	
	<select id="elions.uw.selectRujukanMedis" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		   <isEqual property="msw_sex" compareValue="0">
				b.nilai_wanita as nilai,
			</isEqual>
			<isEqual property="msw_sex" compareValue="1">
				b.nilai_pria as nilai,
			</isEqual>
			<isEqual property="msw_sex" compareValue="2">
				b.nilai_anak as nilai,
			</isEqual>
		   b.satuan, b.nama_medis,
	       to_number(b.usia_bawah) usia_bawah, to_number(b.usia_atas) usia_atas,
	       jenis_usia   
	  FROM eka.lst_rumah_sakit @eb a,
	       eka.mst_rujukan_medis b
	 WHERE a.rsid = b.rsid
	   AND a.rsnama = UPPER(TRIM(#rsnama#))
	   AND jenis_usia = UPPER(#jenis#)
	   AND UPPER(TRIM(nama_medis)) = UPPER(TRIM(#nama_medis#))
	   AND UPPER(b.usia) != 'SZASZ'
	   AND UPPER(b.usia) != 'PREMATUR'
	   AND TO_NUMBER(TRIM(b.usia_bawah)) <![CDATA[<=]]> #usia#
	   AND TO_NUMBER(TRIM(b.usia_atas)) <![CDATA[>=]]> #usia#		
	</select>

<select id="elions.uw.selectCountRowViewerKontrolNAV" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT count(*)
		  FROM eka.mst_nab_si a, 
		  eka.lst_user b
		  <isNotNull property="lusId">
		  , eka.mst_policy c, 
		  eka.lst_user_admin d, 
		  eka.lst_region e
		  </isNotNull>
		 WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ') 
		 AND a.mns_user = b.lus_id
		 <isNotNull property="lusId">
		 AND a.reg_spaj = c.reg_spaj
		 AND c.lca_id = e.lca_id
		 AND c.lwk_id = e.lwk_id
		 AND c.lsrg_id = e.lsrg_id
		 AND e.lar_id = d.lar_id
		 AND d.lus_id = #lusId#	 
		 </isNotNull>
		
</select>

	<select id="elions.uw.selectGetYearViewerKontrolNAV" resultMap="elions.uw.selectViewerKontrolNAV.result" parameterClass="java.util.HashMap">
		 SELECT a.th_ke, a.mns_ke, TO_CHAR (a.mns_bdate, 'dd/mm/yyyy') bdate,
		       a.mns_harga, a.mns_unit, a.mns_saldo, a.mns_tgl_input, a.mns_tgl_print,
		       DECODE (a.mns_print, 1, 'Yes', 'No') PRINT, b.lus_login_name,
		       SYSDATE AS tgl_next, null as ldec_rate, null as MANF_KEMATIAN, null as manf_non_kematian
		  FROM eka.mst_nab_si a, 
		  eka.lst_user b
		  <isNotNull property="lusId">
		  , eka.mst_policy c, 
		  eka.lst_user_admin d, 
		  eka.lst_region e
		  </isNotNull>
		 WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ') 
		 AND a.mns_user = b.lus_id
		 <isNotNull property="lusId">
		 AND a.reg_spaj = c.reg_spaj
		 AND c.lca_id = e.lca_id
		 AND c.lwk_id = e.lwk_id
		 AND c.lsrg_id = e.lsrg_id
		 AND e.lar_id = d.lar_id
		 AND d.lus_id = #lusId#	
		 </isNotNull>
	
	</select>
	
	<select id="elions.uw.selectViewerKontrolNAV" resultMap="elions.uw.selectViewerKontrolNAV.result" parameterClass="java.util.HashMap">
SELECT * from (
SELECT rownum as row_num, a.th_ke, a.mns_ke, TO_CHAR (a.mns_bdate, 'dd/mm/yyyy') bdate,
		       a.mns_harga, a.mns_unit, a.mns_saldo, a.mns_tgl_input, a.mns_tgl_print,
		       DECODE (a.mns_print, 1, 'Yes', 'No') PRINT, b.lus_login_name,
			   ((SELECT LSTAB_VALUE  
 	FROM EKA.LST_TABLE
	WHERE   LSTAB_JENIS = 2 AND  
		LSBS_ID = #bisnisId# AND  
		LKU_ID = '02' AND  
	 	LSCB_ID = 0 AND  
		LSTAB_LAMA_BAYAR = 1  AND  
		LSTAB_LAMA_TANGGUNG = 8  AND  
		LSTAB_TAHUN_KE = #thnKe# AND  
		LSTAB_AGE = #umur#
		) * #ldecUp# / 1000 ) as ldec_rate,
		(case when (((#ldecUp# * #multiply#) + #ldecBonus#) <![CDATA[>]]> (#varAdd# + #ldecBonus#))
		then (#varAdd# + #ldecBonus#)
		else ((#ldecUp# * #multiply#) + #ldecBonus#) end) manf_kematian,
				(case when (((#ldecUp# * #multiplyNon#) + #ldecBonus#)<![CDATA[>]]> (#varAddNon# + #ldecBonus#))
		then (#varAddNon# + #ldecBonus#)
		else ((#ldecUp# * #multiplyNon#) + #ldecBonus#) end) manf_non_kematian,
		       SYSDATE AS tgl_next
		  FROM eka.mst_nab_si a, 
		  eka.lst_user b
		   <isNotNull property="lusId">
		  , eka.mst_policy c, 
		  eka.lst_user_admin d, 
		  eka.lst_region e
		  </isNotNull>
		  WHERE a.reg_spaj = rpad(replace(#value#,'.'),11,' ') 
		  AND a.mns_user = b.lus_id
		  <isNotNull property="lusId">
		 AND a.reg_spaj = c.reg_spaj
		 AND c.lca_id = e.lca_id
		 AND c.lwk_id = e.lwk_id
		 AND c.lsrg_id = e.lsrg_id
		 AND e.lar_id = d.lar_id
		 AND d.lus_id = #lusId#	
		 </isNotNull>
		 )
		 where
		 row_num <![CDATA[=]]> #index#

	</select>	 	 

	<select id="elions.uw.selectViewerKontrolRewards" resultMap="elions.uw.selectViewerKontrolRewards.result" parameterClass="java.util.HashMap">
		  	 
		  	  SELECT  
		         a.MSBI_TAHUN_KE,   
		         a.MSBI_PREMI_KE,   
		         decode(a.JENIS,3,'Agent gets Agent',4,'Customer gets Agent',5,'Employee gets Agent',6,'Bank Reff gets Agent',7,'FA gets Agent',8,'ASM/SM gets Agent') jenis,   
		         a.MSRK_ID,   
		         a.NAMA,   
		         a.MSCO_COMM,   
		         a.MSCO_TAX,   
		         (a.MSCO_COMM-a.MSCO_TAX) nett,   
		         to_char(a.MSCO_DATE,'dd-mm-yyyy') msco_date,   
		         to_char(a.MSCO_PAY_DATE,'dd-mm-yyyy') msco_pay_date, 
				 b.lus_login_name,
		         a.MSCO_NILAI_KURS
		    FROM EKA.MST_REWARD a, 
		    eka.lst_user b
		    <isNotNull property="lusId">
		    , eka.mst_policy c, 
		    eka.lst_user_admin d, 
		    eka.lst_region e
		    </isNotNull>
		   WHERE a.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') 
		   AND a.lus_id = b.lus_id
		   <isNotNull property="lusId">
		   AND a.reg_spaj = c.reg_spaj 	
		   AND c.lca_id = e.lca_id
		   AND c.lwk_id = e.lwk_id
		   AND c.lsrg_id = e.lsrg_id
		   AND e.lar_id = d.lar_id
		   AND d.lus_id = #lusId#		 
		   </isNotNull>
	</select>
	
	<select id="elions.uw.selectCountMstBillingNB" resultClass="int" parameterClass="string">
	select count(*)
		from eka.mst_billing
		where reg_spaj = rpad(replace(#spaj#,'.'),11,' ') 
		and msbi_beg_date = (select msbi_beg_date from eka.mst_billing where reg_spaj = rpad(replace(#spaj#,'.'),11,' ')  and msbi_premi_ke = 1)
	</select>
	
	<select id="elions.uw.selectCountMstBillingSucc" resultClass="int" parameterClass="string">
	 select count(*)
        from eka.mst_billing
        where reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
        and nvl(msbi_nb,0) <![CDATA[<>]]> 1 
	</select>
	
	<select id="elions.uw.selectMstCommissionNewBusiness" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select reg_spaj, msbi_tahun_ke, msbi_premi_ke, msco_active, msco_paid
			from eka.mst_commission
			where reg_spaj = rpad(replace(#spaj#,'.'),11,' ') 
			and msbi_tahun_ke = #msbi_tahun_ke#
			and msbi_premi_ke = #msbi_premi_ke#
	</select>

	 <select id="elions.uw.selectViewerKontrolKomisi" resultMap="elions.uw.selectViewerKontrolKomisi.result" parameterClass="java.util.HashMap">
		SELECT   a.msbi_tahun_ke, a.msbi_premi_ke, a.msag_id, c.mcl_first,
		         DECODE (a.lev_comm, 4, 'Agent', 3, 'UM', 2, 'AM', 1, 'RM') komisi,
		         a.msco_comm, a.msco_tax, (a.msco_comm - a.msco_tax) total_komisi, 
		         TO_CHAR (a.msco_date, 'dd-mm-yyyy') msco_date,
		         TO_CHAR (a.msco_pay_date, 'dd-mm-yyyy') msco_pay_date,
		         DECODE (a.msco_paid, 1, 'Sudah', 'Belum') paid, d.lus_login_name,
		         a.msco_nilai_kurs
		    FROM eka.mst_commission a,
		         eka.mst_agent b,
		         eka.mst_client_new c,
		         eka.lst_user d
		         <isNotNull property="lusId">
		         ,eka.mst_policy e,
				 eka.lst_user_admin f,
				 eka.lst_region g
				 </isNotNull>
		   WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		     AND a.msag_id = b.msag_id
		     AND b.mcl_id = c.mcl_id
		     AND a.lus_id = d.lus_id
		     <isNotNull property="lusId">
		     AND a.reg_spaj = e.reg_spaj
			 AND e.lca_id = g.lca_id
			 AND e.lwk_id = g.lwk_id
			 AND e.lsrg_id = g.lsrg_id
			 AND g.lar_id = f.lar_id
			 AND f.lus_id = #lusId#
			 </isNotNull>
		ORDER BY a.reg_spaj ASC,
		         a.msbi_tahun_ke ASC,
		         a.msbi_premi_ke ASC,
		         a.lev_comm DESC
	 </select>
	 	 
	<select id="elions.uw.selectViewerKontrolReinstate" resultMap="elions.uw.selectViewerKontrolReinstate.result" parameterClass="java.util.HashMap">
		SELECT a.msbi_tahun_ke, a.msbi_premi_ke, a.msbi_beg_date, a.msbi_end_date,
		       a.msbi_due_date, e.lku_symbol, b.msur_total_unbayar,
		       b.msur_total_bunga_unbayar,
		       (b.msur_total_unbayar + b.msur_total_bunga_unbayar) sisa_tagihan,
		       a.msbi_paid, a.msbi_print, a.msbi_bill_no, nvl(a.lspd_id,'') lspd_id
		  FROM eka.mst_billing a,
		       eka.mst_uw_reinstate b,
		       eka.mst_reinstate c,
		       eka.mst_policy d,
		       eka.lst_kurs e
		       <isNotNull property="lusId">
		       ,eka.mst_policy f,
			   eka.lst_user_admin g,
			   eka.lst_region h
			   </isNotNull>
		 WHERE b.reg_spaj = c.reg_spaj
		   AND a.reg_spaj = c.reg_spaj
		   AND c.lspd_id = b.lspd_id
		   AND a.lku_id = e.lku_id 
		   AND d.reg_spaj = a.reg_spaj
		   AND b.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND a.msbi_end_date <![CDATA[>=]]> (SELECT MAX (b.msur_awal_prm_upaid)
		                             FROM eka.mst_uw_reinstate
		                            WHERE b.reg_spaj = rpad(replace(#spaj#,'.'),11,' '))
		   AND a.msbi_end_date <![CDATA[<=]]> (SELECT MAX (b.msur_akhir_prm_upaid)
		                             FROM eka.mst_uw_reinstate
		                            WHERE b.reg_spaj = rpad(replace(#spaj#,'.'),11,' '))
		   <isNotNull property="lusId">
		   AND a.reg_spaj = f.reg_spaj
		   AND b.reg_spaj = f.reg_spaj
		   AND c.reg_spaj = f.reg_spaj
		   AND f.lca_id = h.lca_id
		   AND f.lwk_id = h.lwk_id
		   AND f.lsrg_id = h.lsrg_id
		   AND h.lar_id = g.lar_id
		   AND g.lus_id = #lusId#
		   </isNotNull>
	</select>
	                            
	 <select id="elions.uw.selectViewerKontrolPrivasi" resultMap="elions.uw.selectViewerKontrolPrivasi.result" parameterClass="java.util.HashMap">
		SELECT TO_CHAR (a.mpp_interest_date, 'dd-mm-yyyy') tgl_interest,
		       DECODE (a.mpp_jns_premi,
		               0, 'Daily Process',
		               1, 'Awal Process',
		               2, 'Bayar Prm + New Int',
		               3, 'New Interest',
		               4, 'Bayar Premi',
		               5, 'Tarik Sebagian',
		               6, 'Tarik Semua',
		               7, 'Awal Hitung Bunga',
		               8, 'Last Prm Interest',
		               9, 'Surrender'
		              ) jenis_proses,
		       TO_CHAR (a.mpp_rate_date, 'dd-mm-yyyy') rate_date, a.mpp_rate rate,
		       DECODE (a.mpp_jns_premi, 3, '', d.lku_symbol) kurs,
		       DECODE (a.mpp_jns_premi, 3, '', a.mpp_premi) premi,
		       DECODE (a.mpp_jns_premi, 3, '', a.mpp_prm_deposit) deposit,
		       DECODE (a.mpp_jns_premi, 3, '', a.mpp_prm_interest) interest,
		       (CASE
		           WHEN a.mpp_jns_premi IN (3, 5, 6, 9)
		              THEN ''
		           ELSE a.mpp_bayar || ''
		        END
		       ) bayar_premi,
		       (CASE
		           WHEN a.mpp_jns_premi IN (3, 5, 6, 9)
		              THEN ''
		           ELSE TO_CHAR (a.mpp_tgl_bayar, 'dd-mm-yyyy')
		        END
		       ) paid_date,
		       (CASE
		           WHEN a.mpp_jns_premi IN (3, 5, 6, 9)
		              THEN TO_CHAR (a.mpp_tgl_bayar, 'dd-mm-yyyy')
		           ELSE ''
		        END
		       ) withdraw_date,
		       (CASE
		           WHEN a.mpp_jns_premi IN (5, 6, 9)
		              THEN a.mpp_bayar || ''
		           ELSE ''
		        END
		       ) tot_withdraw,
		       (CASE
		           WHEN a.mpp_jns_premi IN (5, 6, 9)
		              THEN c.mpt_note
		           ELSE ''
		        END) note
		  FROM eka.mst_privasi_proses a,
		       eka.mst_policy b,
		       eka.mst_privasi_tarik c,
		       eka.lst_kurs d
		       <isNotNull property="lusId">
		       ,eka.mst_policy e,
			   eka.lst_user_admin f,
			   eka.lst_region g
			   </isNotNull>
		 WHERE c.reg_spaj(+) = a.reg_spaj
		   AND c.mpt_tarik_date(+) = a.mpp_interest_date
		   AND a.reg_spaj = b.reg_spaj
		   AND a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND a.lku_id = d.lku_id(+)
		   AND a.mpp_jns_premi <![CDATA[<>]]> 0
		   <isNotNull property="lusId">
		   AND a.reg_spaj = e.reg_spaj
		   AND b.reg_spaj = e.reg_spaj
		   AND e.lca_id = g.lca_id
		   AND e.lwk_id = g.lwk_id
		   AND e.lsrg_id = g.lsrg_id
		   AND g.lar_id = f.lar_id
		   AND f.lus_id = #lusId#
		   </isNotNull>
	 </select>
	 	 
	<select id="elions.uw.selectViewerKontrolMaturity" resultMap="elions.uw.selectViewerKontrolMaturity.result" parameterClass="java.util.HashMap">
		SELECT (   SUBSTR (a.no_klaim, 1, 4)
		        || '/'
		        || SUBSTR (a.no_klaim, 5, 2)
		        || '/'
		        || SUBSTR (a.no_klaim, 7, 2)
		        || '/'
		        || SUBSTR (a.no_klaim, 9)
		       ) no_klaim,
		       (CASE
		           WHEN LENGTH (c.no_polis) = 9
		              THEN SUBSTR (c.no_polis, 1, 2) || '.' || SUBSTR (c.no_polis, 3)
		           WHEN LENGTH (c.no_polis) = 11
		              THEN    SUBSTR (c.no_polis, 1, 2)
		                   || '.'
		                   || SUBSTR (c.no_polis, 3, 4)
		                   || '.'
		                   || SUBSTR (c.no_polis, 7)
		           ELSE    SUBSTR (c.no_polis, 1, 2)
		                || '.'
		                || SUBSTR (c.no_polis, 3, 3)
		                || '.'
		                || SUBSTR (c.no_polis, 6, 4)
		                || '.'
		                || SUBSTR (c.no_polis, 10)
		        END
		       ) no_polis,
		       c.l_bayar tahun_ke, 
		       TO_CHAR (a.tgl_jt_tempo, 'dd-mm-yyyy') tgl_tempo,
		       TO_CHAR (a.mm_tgl_input, 'dd-mm-yyyy') tgl_input,
		       TO_CHAR (a.tgl_klaim, 'dd-mm-yyyy') tgl_klaim,
		       TO_CHAR (a.tgl_proses, 'dd-mm-yyyy') tgl_proses,
		       DECODE (c.kurs,
		               '01', 'Rp.',
		               '02', 'US$',
		               '03', 'Sin$',
		               '04', 'EUR'
		              ) kurs,
		       a.nilai_maturity, a.nilai_klaim, a.mm_note,
		       (CASE
		           WHEN (e.lsccn_id = 11 OR e.lsccn_id = 13)
		              THEN (   f.lsccn_cara
		                    || ' s/d '
		                    || TO_CHAR (a.tgl_jt_tempo, 'dd-mm-yyyy')
		                   )
		           ELSE f.lsccn_cara
		        END
		       ) cara,
		       e.reg_spaj_bayar, e.mbm_jumlah, e.mbm_desc
		  FROM eka.mst_maturity a,
		       eka.v_client_new b,
		       eka.v_polis c,
		       eka.v_client_new d,
		       eka.mst_bayar_maturity e,
		       eka.lst_cara_claim_nt f
		       <isNotNull property="lusId">
		       , eka.mst_policy g,
			   eka.lst_user_admin h,
			   eka.lst_region i
			   </isNotNull>
		 WHERE a.reg_spaj = e.reg_spaj(+)
		   AND a.reg_spaj = c.reg_spaj
		   AND c.pp_id = b.mcl_id
		   AND c.tt_id = d.mcl_id
		   AND e.lsccn_id = f.lsccn_id(+)
		   AND a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   <isNotNull property="lusId">
		   AND g.reg_spaj = a.reg_spaj
		   AND g.reg_spaj = c.reg_spaj
		   AND g.lca_id = i.lca_id
		   AND g.lwk_id = i.lwk_id
		   AND g.lsrg_id = i.lsrg_id
		   AND i.lar_id = h.lar_id
		   AND h.lus_id = #lusId#	
		   </isNotNull>
	</select>
	 	 
	<select id="elions.uw.selectViewerKontrolReas" resultMap="elions.uw.selectViewerKontrolReas.result" parameterClass="java.util.HashMap">
		SELECT (CASE
		           WHEN LENGTH (b.mspo_policy_no) = 9
		              THEN    SUBSTR (b.mspo_policy_no, 1, 2)
		                   || '.'
		                   || SUBSTR (b.mspo_policy_no, 3)
		           WHEN LENGTH (b.mspo_policy_no) = 11
		              THEN    SUBSTR (b.mspo_policy_no, 1, 2)
		                   || '.'
		                   || SUBSTR (b.mspo_policy_no, 3, 4)
		                   || '.'
		                   || SUBSTR (b.mspo_policy_no, 7)
		           ELSE    SUBSTR (b.mspo_policy_no, 1, 2)
		                || '.'
		                || SUBSTR (b.mspo_policy_no, 3, 3)
		                || '.'
		                || SUBSTR (b.mspo_policy_no, 6, 4)
		                || '.'
		                || SUBSTR (b.mspo_policy_no, 10)
		        END
		       ) polis,
		       c.msre_certificate sertifikat, e.mcl_first pp, f.mcl_first tt,
		       g.lsre_nama reinsurer,
		       DECODE (a.mste_reas, 1, 'TREATY', 'FACULTATIVE') reinsurer_tipe,
		       DECODE (c.msre_medical, 0, 'NON', 'MEDIC') medis,
		       TO_CHAR (d.msrpr_beg_date, 'dd-mm-yyyy') beg_date,
		       TO_CHAR (d.msrpr_end_date, 'dd-mm-yyyy') end_date, c.msre_bunga_kpr,
		       d.msrpr_pa_class, d.msrpr_pa_risk, h.lspd_position, i.lku_symbol,
		       d.lsbs_id, d.msrpr_simultan, d.msrpr_tsi, d.msrpr_resiko_awal,
		       d.msrpr_retensi, d.msrpr_tsi_reas, TO_CHAR (c.msre_tgl_recap, 'dd-mm-yyyy') tgl_recap 
		FROM   eka.mst_insured a,
		       eka.mst_policy b,
		       eka.mst_reins c,
		       eka.mst_reins_product d,
		       eka.mst_client_new e,
		       eka.mst_client_new f,
		       (SELECT a.msrpn_premium_no, b.lsre_nama
		          FROM eka.mst_reins_premium_no a, eka.lst_reinsurer b
		         WHERE b.lsrei_id = a.lsrei_id) g,
		       eka.lst_document_position h,
		       eka.lst_kurs i
		       <isNotNull property="lusId">
		       , eka.lst_user_admin j,
			   eka.lst_region k
			   </isNotNull>
		 WHERE b.reg_spaj = a.reg_spaj
		   AND c.reg_spaj = a.reg_spaj
		   AND c.mste_insured_no = a.mste_insured_no
		   AND d.reg_spaj = c.reg_spaj
		   AND d.mste_insured_no = c.mste_insured_no
		   AND b.mspo_policy_holder = e.mcl_id(+)
		   AND a.mste_insured = f.mcl_id(+)
		   AND g.msrpn_premium_no = c.msrpn_premium_no
		   AND c.lspd_id = h.lspd_id(+)
		   AND d.lku_id = i.lku_id(+)
   		   AND c.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND c.mste_insured_no = #no#
		   <isNotNull property="lusId">
		   AND b.lca_id = k.lca_id
		   AND b.lwk_id = k.lwk_id
		   AND b.lsrg_id = k.lsrg_id
		   AND k.lar_id = j.lar_id
		   AND j.lus_id = #lusId#
		   </isNotNull>
	</select>

	<select id="elions.uw.selectViewerKontrolReferrer" resultMap="elions.uw.selectViewerKontrolReferrer.result" parameterClass="java.util.HashMap">
		select lcb_no,cabang_prod ,penutup ,jenis,nm_cabang_penutup,nm_referrer,nm_cabang_referrer from (
			select  eka.lst_cabang_bii.lcb_no ,
        			eka.lst_cabang_bii.nama_cabang as cabang_prod,
        			eka.lst_reff_bii.nama_reff as penutup,
        			eka.lst_cabang_bii.jenis,
        			cabang_penutup.nama_cabang as nm_cabang_penutup,
        			referrer.nama_reff as nm_referrer,
        			cabang_referrer.nama_cabang as nm_cabang_referrer     
			from    eka.lst_cabang_bii ,
        			eka.lst_reff_bii ,
        			eka.lst_reff_bii referrer,
        			eka.lst_cabang_bii cabang_penutup,
        			eka.lst_cabang_bii cabang_referrer,
        			(select a.reg_spaj,a.level_id,a.lcb_no,a.lrb_id,a.reff_id 
          				from eka.mst_reff_bii a ,
        				(select reg_spaj,max(no_urut) as no_urut from eka.mst_reff_bii where level_id=4 group by reg_spaj) b
        					where a.reg_spaj = b.reg_spaj
        							and a.no_urut=b.no_urut
        							and a.level_id=4) mst_reff_bii     
						where ( mst_reff_bii.lrb_id   = eka.lst_reff_bii.lrb_id ) and          
        					  ( mst_reff_bii.lcb_no   = eka.lst_cabang_bii.lcb_no ) and          
        					  ( ( mst_reff_bii.reg_spaj = #spaj# ) and
         					  ( eka.lst_reff_bii.lcb_no = cabang_penutup.lcb_no ) and
         					  ( mst_reff_bii.reff_id   = referrer.lrb_id ) and
         					  ( referrer.lcb_no = cabang_referrer.lcb_no ) and          
                              ( mst_reff_bii.level_id = 4 )) 
		    union all          
 				select  eka.lst_cab_bii.kode as lcb_no,
        				eka.lst_cab_bii.nama_cabang as cabang_prod,
        				eka.lst_referrer_bii.nama_ref as penutup ,
       					1 as jenis,
        				cabang_penutup.nama_cabang as nm_cabang_penutup,
        				eka.lst_referrer_bii.nama_ref as nm_referrer,
        				cabang_penutup.nama_cabang as nm_cabang_referrer     
				from eka.lst_cab_bii ,
        			 eka.lst_referrer_bii ,
        			 eka.mst_nasabah,
        			 eka.mst_policy ,
        			 eka.lst_cab_bii cabang_penutup    
				where ( eka.mst_nasabah.mns_kd_nasabah   = eka.mst_policy.mspo_plan_provider ) and          
        				( eka.lst_referrer_bii.referrer_id   = eka.mst_nasabah.referrer_id ) and
        				( eka.lst_cab_bii.kode   = eka.mst_nasabah.kode ) and
        				( eka.lst_referrer_bii.kd_region   = cabang_penutup.kd_region ) and
        				( eka.lst_referrer_bii.kd_koord   = cabang_penutup.kd_koord ) and
        				( eka.lst_referrer_bii.kd_area   = cabang_penutup.kd_area ) and
        				( eka.lst_referrer_bii.kd_cabang   = cabang_penutup.kd_cabang ) and          
        				( ( eka.mst_policy.reg_spaj = #spaj# ))
			union all          
 				select  eka.lst_cab_bii.kode as lcb_no,
        				eka.lst_cab_bii.nama_cabang as cabang_prod,
        				bfa.nama_bfa as penutup ,
        				99 as jenis,
        				eka.lst_cab_bii.nama_cabang as nm_cabang_penutup,
        				bfa.nama_bfa as nm_referrer ,
        				eka.lst_cab_bii.nama_cabang as nm_cabang_referrer     
				from    eka.lst_cab_bii ,
        				(select distinct msag_id,nama_bfa
        					from eka.mst_bfa) bfa,
        						eka.mst_nasabah,
        						eka.mst_policy     
				where ( eka.mst_nasabah.mns_kd_nasabah   = eka.mst_policy.mspo_plan_provider ) and          
        				( bfa.msag_id   = eka.mst_nasabah.referrer_fa ) and
        				( eka.lst_cab_bii.kode   = eka.mst_nasabah.kode ) and          
        				( ( eka.mst_policy.reg_spaj = #spaj# ))
			) where lcb_no is not null
	</select>
	
	
	<select id="elions.uw.selectViewerKontrolAgent" resultMap="elions.uw.selectViewerKontrolAgent.result" parameterClass="java.util.HashMap">
		SELECT   a.lsle_id, a.msag_id, TRIM (b.nama) nama,
		         (CASE
		             WHEN (a.lsle_id = 1 AND a.flag_sbm = 1)
		                THEN 'SBM'
		             WHEN (a.lsle_id = 2 AND a.flag_sbm = 1)
		                THEN 'BM'
		             ELSE DECODE (a.lsle_id, 4, 'ME', 3, 'UM', 2, 'AM', 1, 'RM')
		          END
		         ) lepel,
		         DECODE (b.sts_aktif, 1, 'Yes', 'No') status,
		         DECODE (a.lev_comm, 1, 'Yes', 'No') komisi
		    FROM eka.mst_agent_prod a, 
		    eka.v_agent b
		    <isNotNull property="lusId">
		    , eka.mst_policy c, 
		    eka.lst_user_admin d, 
		    eka.lst_region e
		    </isNotNull>
		   WHERE a.msag_id = b.agent_id 
		   AND a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   <isNotNull property="lusId">
		   AND a.reg_spaj = c.reg_spaj
		   AND c.lca_id = e.lca_id
		   AND c.lwk_id = e.lwk_id
		   AND c.lsrg_id = e.lsrg_id
		   AND e.lar_id = d.lar_id
		   AND d.lus_id = #lusId#	
		   </isNotNull>	
		   ORDER BY a.lsle_id DESC
	</select>
	
	<select id="elions.uw.selectViewerKontrolDeduct" resultMap="elions.uw.selectViewerKontrolDeduct.result" parameterClass="java.util.HashMap">
		select a.reg_spaj, b.msco_id, b.msdd_number,a.msbi_tahun_ke, a.msbi_premi_ke,b.msdd_date,
	   		   b.msdd_deduct,b.msdd_tax,b.msdd_desc,b.lus_id, b.lsbs_id, b.lsdbs_number,e.lsdbs_name,
	   		   b.pot_upp,b.pot_biaya,b.pot_spaj,b.pot_desc,b.pot_extra, c.lsjd_jenis,
			   d.lus_login_name
		from eka.mst_commission a , eka.mst_deduct b, 
	 		 eka.lst_jn_deduct c , eka.lst_user d,
			 eka.lst_det_bisnis e
		where a.msco_id= b.msco_id
	  		  and b.lsjd_id= c.lsjd_id
			  and b.lus_id= d.lus_id
			  and b.LSBS_ID=e.LSBS_ID(+)
	 		  AND a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')	
		   order by reg_spaj desc
	</select>

	<select id="elions.uw.selectViewerKontrolPowersave" resultMap="elions.uw.selectViewerKontrolPowersave.result" parameterClass="java.util.HashMap">
		
	SELECT (ROWNUM||'.') nomor, periode, maturity, jangka_invest, mpr_nett_tax, mpr_rate, rate_date, mpr_tgl_confirm, lku_symbol,
	mpr_deposit, mpr_interest, mpr_debit, mpr_jns_ro, print_date, mpr_flag_comm, jenis_tax, prm_interest, mpr_hari, mpr_jns_rumus,
	note, no_rekening, user_name, proses_date, mpr_insurance, mpr_tax, mpr_debet, transaksi, reg_spaj, mpr_bayar_prm
	from
	( 
		SELECT DECODE (a.mps_kode,
		               4, '',
		                  TO_CHAR (a.mps_deposit_date, 'dd-Mon-yy')
		               || ' s/d '
		               || TO_CHAR (a.mpr_mature_date, 'dd-Mon-yy')
		              ) periode, 
		       DECODE (a.mps_kode,
		               4, TO_CHAR (a.mpr_mature_date, 'dd-Mon-yy'),
		               ''
		              ) maturity,
		       a.mpr_jangka_invest || ' Bln' jangka_invest,decode (a.mpr_nett_tax,'0','Normal','1','SpecialGross','2','SpecialNett','3','3','4','4') mpr_nett_tax, a.mpr_rate,
		       TO_CHAR (e.mps_rate_date, 'dd-Mon-yy') rate_date, TO_CHAR (a.mpr_tgl_confirm, 'dd-Mon-yy') mpr_tgl_confirm, f.lku_symbol,
		       a.mpr_deposit, a.mpr_interest, (a.mpr_debet + a.mpr_tax) mpr_debit, decode (a.mpr_jns_ro,'1','RO ALL','2','RO Prm Deposit','3','Auto-Break') mpr_jns_ro, to_char(a.mpr_print_date , 'dd-Mon-yy') print_date, a.mpr_flag_comm,
			   (case when(mpr_nett_tax in (1,2,4)) then 'NO TAX' else 'TAX' end) jenis_tax,  
			   (case 
  when ( a.mpr_bayar_prm = 1) 
  THEN
  'Bayar, Reg : ' ||  g.mpb_bayar_id || ', Print : ' ||  to_char(g.mpb_print_date , 'dd-Mon-yy') ||
  (case when ( g.mpb_hari > 0) 
	 THEN
	 ', Hari Lebih : ' ||  g.mpb_hari || ', Manfaat : ' 
	 ||  g.mpb_tambah 	  
  END)
  || ', Total : ' ||  (g.mpb_bunga + g.mpb_tambah - g.mpb_kurang )
  ||
  (case when ( g.mpb_filing = 1 )
  	 THEN 
	 ', ditransfer tgl ' ||  to_char(g.mpb_filing_date , 'dd-Mon-yy') 
  	 || 
 	 (case when (  g.mpb_kurang = 0)
	 	THEN
	 	(case when (  h.no_ref is null)
		   THEN 
		   ' ( Non Upload ) '
		   ELSE 
		   ' ( Upload ) ' 
		END)
		ELSE 
			 ' ( Pinj Konvensional : ' || g.mpb_kurang  || ' ) ' 
	 END
	 ) 
   END 
   )
END) prm_interest,
a.mpr_hari,decode (a.mpr_jns_rumus,'1','Rumus Hari','2','Rms Pangkat','3','Rms Bulan') mpr_jns_rumus,
(case when ( length( a.mpr_note ) > 0)
then
 a.mpr_note 
else  i.mpu_note end) note, 
('Bank '|| (CASE WHEN k.LSBP_NAMA IS NULL THEN '-' ELSE k.LSBP_NAMA END) ||
 ', Cab ' || (CASE WHEN j.MRC_CABANG IS NULL THEN '-' ELSE j.MRC_CABANG END) ||
 ', ' || (CASE WHEN j.MRC_KOTA IS NULL THEN '-' ELSE j.MRC_KOTA END) ||
 ', AC ' || (CASE WHEN j.MRC_NO_AC IS NULL THEN '-' ELSE j.MRC_NO_AC END) ||
 ' A/N ' || (CASE WHEN j.MRC_NAMA IS NULL THEN '-' ELSE j.MRC_NAMA END) ||
 ' ( ' || (CASE WHEN f.LKU_SYMBOL IS NULL THEN '-' ELSE f.LKU_SYMBOL END) || ' ) '  ) no_rekening,
 (select lus_login_name from eka.lst_user where lus_id = (CASE WHEN i.LUS_ID IS NULL THEN a.LUS_ID ELSE i.LUS_ID END )) USER_NAME,to_char(a.mpr_input_date , 'dd-MM-yyyy HH24:MI:SS') proses_date ,
		       a.mpr_insurance, a.mpr_tax, a.mpr_debet,
		       DECODE (a.mps_kode,
		               2, 'Roll Over Prm Deposit+Interest',
		               3, 'Roll Over Prm Deposit',
		               4, 'Withdrawal',
		               5, 'First Entry'
		              ) transaksi, a.reg_spaj,a.mpr_bayar_prm
		  FROM eka.mst_powersave_ro  a,
		       eka.mst_insured b,
		       eka.mst_policy c,
		       eka.mst_client_new d,
		       eka.mst_powersave_proses e,
		       eka.lst_kurs f,
			   eka.MST_PROSAVE_BAYAR g,
			   eka.MST_UPLOAD_FINANCE h,
			   eka.MST_POWERSAVE_UBAH i,
			   eka.MST_REK_CLIENT j,
			   eka.LST_BANK_PUSAT k
			   <isNotNull property="lusId">
			   , eka.lst_user_admin l,
			   eka.lst_region m
			   </isNotNull>
		 WHERE a.reg_spaj = e.reg_spaj(+)
		   AND a.mps_kode = e.mps_kode(+)
		   AND a.mps_deposit_date = e.mps_deposit_date(+)
		   AND a.reg_spaj = b.reg_spaj
		   AND c.reg_spaj = b.reg_spaj
		   AND c.mspo_policy_holder = d.mcl_id
		   AND c.lku_id = f.lku_id
		   AND a.reg_spaj = g.reg_spaj(+)
		   AND a.MPS_DEPOSIT_DATE = g.MPB_BEG_PERIOD(+)
		   AND g.reg_spaj = h.reg_spaj(+)
		   AND g.MPB_BAYAR_ID = h.NO_REF(+)		   		   
		   
		   AND a.reg_spaj = i.reg_spaj(+)
		   AND a.MPS_DEPOSIT_DATE = i.MPU_TGL_AWAL(+)
		   AND c.REG_SPAJ = j.reg_spaj(+)
		   AND j.LSBP_ID = k.LSBP_ID(+)
		   AND j.MRC_KURS = f.LKU_ID(+)
		   AND (a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND ( i.MPU_JENIS(+) = 3 )
		   <isNotNull property="lusId">
		   AND c.lca_id = m.lca_id
		   AND c.lwk_id = m.lwk_id
		   AND c.lsrg_id = m.lsrg_id
		   AND m.lar_id = l.lar_id
		   AND l.lus_id = #lusId#
		   </isNotNull>
		   )
			order by a.mps_deposit_date
			)
	</select>
	<!-- AND a.mpr_bayar_prm = 1 -->	 
		 
	<select id="elions.uw.selectViewerKontrolClaimNilaiTunai" resultMap="elions.uw.selectViewerKontrolClaimNilaiTunai.result" parameterClass="java.util.HashMap">
		SELECT a.mssur_tahun_ke, a.mssur_no_surr,
		       TO_CHAR (a.mssur_tgl_klaim, 'dd-mm-yyyy') tgl_klaim,
		       TO_CHAR (a.mssur_tgl_aktif, 'dd-mm-yyyy') tgl_aktif,
		       TO_CHAR (a.mssur_tgl_input, 'dd-mm-yyyy') tgl_input, a.mssur_jml_nt,
		       a.mssur_jml_bonus, a.mssur_alasan,
		       TO_CHAR (a.mssur_tgl_prod, 'dd-mm-yyyy') tgl_prod, e.lsccn_cara,
		       c.mscln_jumlah, c.mscln_desc, d.lus_login_name
		  FROM eka.mst_surrender a,
		       eka.mst_policy b,
		       eka.mst_claim_nt c,
		       eka.lst_user d,
		       eka.lst_cara_claim_nt e
		       <isNotNull property="lusId">
		       , eka.lst_user_admin f,
			   eka.lst_region g
			   </isNotNull>
		 WHERE b.reg_spaj = c.reg_spaj(+)
		   AND a.reg_spaj = b.reg_spaj
		   AND a.lus_id = d.lus_id
		   AND c.lsccn_id = e.lsccn_id(+)
		   AND a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   <isNotNull property="lusId">
		   AND b.lca_id = g.lca_id
		   AND b.lwk_id = g.lwk_id
		   AND b.lsrg_id = g.lsrg_id
		   AND g.lar_id = f.lar_id
		   AND f.lus_id = #lusId#
		   </isNotNull>
	</select>
		 
	<select id="elions.uw.selectViewerKontrolPinjaman" resultMap="elions.uw.selectViewerKontrolPinjaman.result" parameterClass="java.util.HashMap">
		SELECT 
		a.mspin_pinjaman_ke, 
		decode(length(trim(mspin_no_pinjaman)),
		7,substr(mspin_no_pinjaman,1,3)||'/'||substr(mspin_no_pinjaman,4,1)||'/'||substr(mspin_no_pinjaman,5,1)||'/'||substr(mspin_no_pinjaman,6),
		8,substr(mspin_no_pinjaman,1,3)||'/'||substr(mspin_no_pinjaman,4,1)||'/'||substr(mspin_no_pinjaman,5,2)||'/'||substr(mspin_no_pinjaman,7),
		9,substr(mspin_no_pinjaman,1,3)||'/'||substr(mspin_no_pinjaman,4,4)||'/'||substr(mspin_no_pinjaman,8),
		10,substr(mspin_no_pinjaman,1,3)||'/'||substr(mspin_no_pinjaman,4,3)||'/'||substr(mspin_no_pinjaman,7,2)||'/'||substr(mspin_no_pinjaman,9),
		11,substr(mspin_no_pinjaman,1,4)||'/'||substr(mspin_no_pinjaman,5,3)||'/'||substr(mspin_no_pinjaman,8,2)||'/'||substr(mspin_no_pinjaman,10),
		13,substr(mspin_no_pinjaman,1,4)||'/'||substr(mspin_no_pinjaman,5,3)||'/'||substr(mspin_no_pinjaman,8,2)||'/'||substr(mspin_no_pinjaman,10),'[GENERAL]') no_pinjaman,
		to_char(a.mspin_tgl_input,'dd/mm/yy') tgl_input, 
		to_char(a.mspin_beg_date,'dd/mm/yy') beg_date, 
		to_char(a.mspin_end_date,'dd/mm/yy') end_date, 
		a.mspin_pinjaman,  
		decode(a.mspin_aktif,1,'Ya','Tidak') mspin_aktif, 
		a.mspin_bunga rate, 
		round((case when to_char(a.mspin_beg_date,'yyyymmdd')<![CDATA[<]]>'20010501' then
			  (case when a.mspin_tgl_trans is not null then
			        (a.mspin_pinjaman*(power((1+(round(a.mspin_bunga/12,2)/100)),(((floor(a.mspin_end_date-a.mspin_tgl_trans)+1)/365)*12)))-a.mspin_pinjaman) 
				else 
			  		(a.mspin_pinjaman * (power((1+(round(a.mspin_bunga/12,2)/100)),(((floor(a.mspin_end_date-a.mspin_beg_date)+1)/365)*12)))-a.mspin_pinjaman)
			end)
		else
			(case when a.mspin_tgl_trans is not null then
				  (a.mspin_pinjaman*(power((1+(a.mspin_bunga/365/100)),(((floor(a.mspin_end_date-a.mspin_tgl_trans)+1)))))-a.mspin_pinjaman)	 
				else 
				  (a.mspin_pinjaman*(power((1+(a.mspin_bunga/365/100)),(((floor(a.mspin_end_date-a.mspin_beg_date)+1)))))-a.mspin_pinjaman)	 
			end)
		end),2) bunga,
		a.rollover_ke, 
		decode(a.mspin_paid,1,'Ya','Tidak') mspin_paid,
		to_char(a.mspin_tgl_trans,'dd/mm/yy') mspin_tgl_trans, 
		to_char(a.mspin_tgl_bayar,'dd/mm/yy') mspin_tgl_bayar,
		a.mspin_jlh_nt,
		(case when ( (to_char(a.MSPIN_BEG_DATE , 'D')) = '6') then '2' 
		else  (case when ( (to_char(a.MSPIN_BEG_DATE , 'D')) = '7') then '1' else '0' end )
		end) BENEFIT_DAY,
		a.mspin_jlh_bunga,
		(case when(c.msbap_note is null) then a.mspin_note else (a.mspin_note ||'~n' || c.msbap_note) end) keterangan,
		(c.msbap_jumlah+c.msbap_sisa-c.msbap_bunga) pinjaman_akhir,
		c.msbap_bunga, c.msbap_jumlah, c.msbap_sisa, 
		to_char(c.msbap_tgl_bayar,'dd/mm/yy') msbap_tgl_bayar, 
		decode(c.msbap_cara,1,'Tahapan',2,'Setoran',3,'Pinjaman Baru',4,'Claim NT',5,'Investasi',6,'Maturity',7,'Death Claim','') cara,
		to_char(c.msbap_tgl_input,'dd/mm/yy') msbap_tgl_input, 
		c.msbap_note
		  FROM eka.mst_pinjaman a,
		       eka.mst_policy b,
		       eka.mst_bayar_pinjaman c,
		       eka.mst_client_new d
		       <isNotNull property="lusId">
		       , eka.lst_user_admin e,
			   eka.lst_region f
			   </isNotNull>
		 WHERE a.reg_spaj = c.reg_spaj(+)
		   AND a.mspin_pinjaman_ke = c.mspin_pinjaman_ke(+)
		   AND a.reg_spaj = b.reg_spaj
		   AND b.mspo_policy_holder = d.mcl_id
		   AND a.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ')
		   <isNotNull property="lusId">
		   AND b.lca_id = f.lca_id
		   AND b.lsrg_id = f.lsrg_id
		   AND b.lwk_id = f.lwk_id
		   AND f.lar_id = e.lar_id
		   AND e.lus_id = #lusId#
		   </isNotNull>
	</select>
	
	<select id="elions.uw.selectViewerKontrolSimpanan" resultMap="elions.uw.selectViewerKontrolSimpanan.result" parameterClass="java.util.HashMap">
		select 
		(case when length(trim(a.mssim_no_deposito))<![CDATA[<]]>10 then '[general]'
		when length(trim(a.mssim_no_deposito))=10 then substr(a.mssim_no_deposito,1,3)||'/'||substr(a.mssim_no_deposito,4,3)||'/'||substr(a.mssim_no_deposito,7,2)||'/'||substr(a.mssim_no_deposito,9)
		when length(trim(a.mssim_no_deposito))=11 then substr(a.mssim_no_deposito,1,3)||'/'||substr(a.mssim_no_deposito,4,3)||'/'||substr(a.mssim_no_deposito,7)
		else substr(a.mssim_no_deposito,1,5)||'/'||substr(a.mssim_no_deposito,6,3)||'/'||substr(a.mssim_no_deposito,9,2)||'/'||substr(a.mssim_no_deposito,11)
		end ) mssim_no_deposito, 
		(case when length(trim(a.mssim_no_reg))=0 or a.mssim_no_reg is null then '' when length(trim(a.mssim_no_reg))=8 then substr(a.mssim_no_reg,1,4)||'/'||substr(a.mssim_no_reg,5,2)||'/'||substr(a.mssim_no_reg,7)
		else substr(a.mssim_no_reg,1,5)||'/'||substr(a.mssim_no_reg,6,2)||'/'||substr(a.mssim_no_reg,8) end ) mssim_no_reg,
		a.mssim_jumlah, (a.mssim_persen || ' %') mssim_persen,  
		to_char(a.mssim_beg_date,'dd-mm-yyyy') beg_date, 
		to_char(a.mssim_end_date,'dd-mm-yyyy') end_date, 
		to_char(a.mssim_tgl_input,'dd-mm-yyyy') tgl_input,
		to_char(a.mssim_tgl_klaim,'dd-mm-yyyy') tgl_klaim,
		to_char(a.mssim_tgl_trans,'dd-mm-yyyy') tgl_trans,
		d.lscsi_claim, b.mbs_jumlah, b.mbs_desc, 
		(case when length(trim(a.mstah_no_tahapan))=0 or a.mstah_no_tahapan is null then ''  
		when length(trim(a.mstah_no_tahapan))<![CDATA[<]]>12 then '[GENERAL]'
		else substr(a.mstah_no_tahapan,1,5)||'/'||substr(a.mstah_no_tahapan,6,3)||'/'||substr(a.mstah_no_tahapan,9,2)||'/'||substr(a.mstah_no_tahapan,11)
		end) no_tahapan,
		(case when length(trim(a.mssim_old_deposito))=0 or a.mssim_old_deposito is null then '' 
		when length(trim(a.mssim_old_deposito))<![CDATA[<]]>10 then '[general]'
		when length(trim(a.mssim_old_deposito))=10 then substr(a.mssim_old_deposito,1,3)||'/'||substr(a.mssim_old_deposito,4,3)||'/'||substr(a.mssim_old_deposito,7,2)||'/'||substr(a.mssim_old_deposito,9)
		when length(trim(a.mssim_old_deposito))=11 then substr(a.mssim_old_deposito,1,3)||'/'||substr(a.mssim_old_deposito,4,3)||'/'||substr(a.mssim_old_deposito,7)
		else substr(a.mssim_old_deposito,1,5)||'/'||substr(a.mssim_old_deposito,6,3)||'/'||substr(a.mssim_old_deposito,9,2)||'/'||substr(a.mssim_old_deposito,11)
		end ) mssim_old_deposito 
		    FROM eka.mst_simpanan a, 
		    eka.mst_bayar_simpanan b, 
		    eka.mst_cancel c, 
		    eka.lst_claim_simpanan d
		    <isNotNull property="lusId">
		    , eka.mst_policy e,
			eka.lst_user_admin f,
			eka.lst_region g
			</isNotNull>
		   WHERE a.reg_spaj = b.reg_spaj(+)
		     AND a.mssim_number = b.mssim_number(+)
		     AND a.reg_spaj = c.reg_spaj(+)
		<iterate prepend="AND a.reg_spaj in" property="spaj"  open="(" close=")" conjunction=",">
				RPAD (#spaj[]#, 11, ' ')
			</iterate>
			 AND b.lscsi_id = d.lscsi_id(+)
			 <isNotNull property="lusId">
			 AND a.reg_spaj = e.reg_spaj
			 AND e.lca_id = g.lca_id
		 	 AND e.lwk_id = g.lwk_id
		 	 AND e.lsrg_id = g.lsrg_id
		 	 AND g.lar_id = f.lar_id		 	 
		 	 AND f.lus_id = #lusId#
		 	 </isNotNull>
		ORDER BY a.reg_spaj ASC, a.mssim_number ASC	
	</select>
		 
	<select id="elions.uw.selectViewerKontrolBilling" resultMap="elions.uw.selectViewerKontrolBilling.result" parameterClass="java.util.HashMap">
		SELECT DECODE (d.msbi_paid, 1, 'Paid', 'OutS') paid, c.msbi_tahun_ke,
		       c.msbi_premi_ke, TO_CHAR (c.msbi_beg_date, 'dd/mm/yy') beg_date,
		       TO_CHAR (c.msbi_end_date, 'dd/mm/yy') end_date, d.msbi_bill_no,
		       g.lku_symbol, c.premi_std, c.premi_rider, c.premi_extra, c.premi_hcr,
		       c.discount, d.msbi_stamp,
		       (c.premi_std + c.premi_rider + c.premi_extra - c.discount
		        + d.msbi_stamp
		       ) total_tagih,
		       TO_CHAR (a.mspa_date_book, 'dd/mm/yy') mspa_date_book,
		       TO_CHAR (a.mspa_input_date, 'dd/mm/yy') mspa_input_date,
		       a.mspa_no_voucher, a.mspa_payment,
		       TO_CHAR (e.mspro_prod_date, 'dd/mm/yy hh:mm') prod_date,
		       e.mspro_nilai_kurs, DECODE (d.msbi_print, 1, 'Ya', 'Tidak') PRINT,
		       h.lus_login_name, j.lus_login_name USER_BILLING, i.lspd_position,
		       TO_CHAR (d.msbi_input_date, 'dd/mm/yy hh:mm') msbi_input_date,
		       d.msbi_add_bill
		  FROM eka.mst_payment a,
		       eka.mst_tag_payment b,
		       eka.v_billing c,
		       eka.mst_billing d,
		       eka.mst_production e,
		       eka.mst_cancel f,
		       eka.lst_kurs g,
		       eka.lst_user h,
		       eka.lst_document_position i,
		       eka.lst_user j
		       <isNotNull property="lusId">
		       , eka.mst_policy k,
			   eka.lst_user_admin l,
			   eka.lst_region m
			   </isNotNull>
		 WHERE b.mspa_payment_id = a.mspa_payment_id(+)
		   AND c.lku_id = g.lku_id(+)
		   AND b.reg_spaj(+) = c.reg_spaj
		   AND c.msbi_tahun_ke = b.msbi_tahun_ke(+)
		   AND c.msbi_premi_ke = b.msbi_premi_ke(+)
		   AND d.reg_spaj = e.reg_spaj(+)
		   AND d.msbi_tahun_ke = e.msbi_tahun_ke(+)
		   AND d.msbi_premi_ke = e.msbi_premi_ke(+)
		   AND e.mspro_jn_prod = 1
		   AND a.reg_spaj = f.reg_spaj(+)
		   AND d.reg_spaj = c.reg_spaj
		   AND d.msbi_tahun_ke = c.msbi_tahun_ke
		   AND d.msbi_premi_ke = c.msbi_premi_ke
		   AND a.lus_id = h.lus_id
		   AND d.lus_id = j.lus_id
		   AND d.lspd_id = i.lspd_id
			<iterate prepend="AND c.reg_spaj in " property="spaj" open="(" close=")" conjunction=",">
				RPAD (#spaj[]#, 11, ' ')
			</iterate>
			<isNotNull property="lusId">
		   AND c.reg_spaj = k.reg_spaj
 		   AND k.lca_id = m.lca_id
		   AND k.lsrg_id = m.lsrg_id
		   AND k.lwk_id = m.lwk_id
		   AND m.lar_id = l.lar_id
		   AND l.lus_id = #lusId#	
		   </isNotNull>	
	</select>
	
	<select id="elions.uw.selectViewerKontrolTahapan" resultMap="elions.uw.selectViewerKontrolTahapan.result" parameterClass="java.util.HashMap">
		SELECT   a.mstah_tahapan_ke,
		         (CASE
		             WHEN LENGTH (TRIM (a.mstah_no_tahapan)) = 0
		              OR a.mstah_no_tahapan IS NULL
		                THEN ''
		             WHEN LENGTH (TRIM (a.mstah_no_tahapan)) <![CDATA[<]]> 12
		                THEN '[GENERAL]'                               
		             ELSE    SUBSTR (a.mstah_no_tahapan, 1, 5)
		                  || '/'
		                  || SUBSTR (a.mstah_no_tahapan, 6, 3)
		                  || '/'
		                  || SUBSTR (a.mstah_no_tahapan, 9, 2)
		                  || '/'
		                  || SUBSTR (a.mstah_no_tahapan, 11)
		          END
		         ) no_tahapan,
		         TO_CHAR (a.mstah_beg_active, 'dd-mm-yyyy') beg_aktif, a.mstah_jumlah,
		         (a.mstah_persen ||' %') mstah_persen, TO_CHAR (a.mstah_jt_tempo, 'dd-mm-yyyy') jatuh_tempo,
		         TO_CHAR (a.mstah_tgl_proses, 'dd-mm-yyyy') tgl_proses,
		         TO_CHAR (a.mstah_tgl_print, 'dd-mm-yyyy') tgl_print,
		         TO_CHAR (a.mstah_tgl_konfirmasi, 'dd-mm-yyyy') tgl_konf,
		         TO_CHAR (a.mstah_tgl_trans, 'dd-mm-yyyy') tgl_trans, d.lsjta_type,
		         b.msbat_jumlah, 
		         TO_CHAR (b.beg_date_bill, 'dd-mm-yyyy') beg_date_bill,
		         b.msbat_desc
		    FROM eka.mst_tahapan a,
		         eka.mst_bayar_tahapan b,
		         eka.mst_cancel c,
		         eka.lst_jn_tahapan d
		         <isNotNull property="lusId">
		         ,eka.mst_policy e,
				 eka.lst_user_admin f,
				 eka.lst_region g
				 </isNotNull>
		   WHERE a.reg_spaj = b.reg_spaj(+)
		     AND a.mstah_tahapan_ke = b.mstah_tahapan_ke(+)
		     AND b.lsjta_id = d.lsjta_id(+)
		     AND a.reg_spaj = c.reg_spaj(+)
			<iterate prepend="AND a.reg_spaj in " property="spaj" open="(" close=")" conjunction=",">
				RPAD (#spaj[]#, 11, ' ')
			</iterate>
			<isNotNull property="lusId">
			AND a.reg_spaj = e.reg_spaj
			AND b.reg_spaj = e.reg_spaj
			AND e.lca_id = g.lca_id
			AND e.lwk_id = g.lwk_id
			AND e.lsrg_id = g.lsrg_id
			AND g.lar_id = f.lar_id
			AND f.lus_id = #lusId#
			</isNotNull>
		ORDER BY a.reg_spaj ASC, a.mstah_tahapan_ke ASC
	</select>
	<select id="elions.uw.selectViewerKontrolStableLink" resultMap="elions.uw.selectViewerKontrolStableLink.result" parameterClass="java.util.HashMap">
	
	SELECT  
	rownum as row_number,
	MSL_KODE ,
    MSL_NO ,
    LJI_ID ,            
    NO_REG ,
    NO_REG_REF ,
	MSL_TU_KE,
    PERIODE_DATE,
	MSL_BDATE, 
	MSL_BDATE TGL_BDATE,
    MSL_MGI ,
    MSL_PREMI ,
    MSL_BUNGA ,
    MSL_TAX ,
    MSL_TGL_NAB ,
    MSL_NAB ,
    MSL_UNIT ,
    MSL_TGL_NAB_BP ,
    MSL_NAB_BP ,
    MSL_NILAI_POLIS ,
    MSL_BP_RATE ,
    MSL_BP ,
    MSL_BP_PT ,
    MCL_FIRST ,
    MSPO_POLICY_NO ,
    LKU_ID ,
    MSL_RO ,
    MSL_INPUT_DATE ,
    MSL_DESC ,           
    FLAG_RATE ,
    MSL_BAYAR_BUNGA ,
    MSL_BAYAR_BP ,
    MSL_BAYAR_TARIK ,
    MSL_FLAG_COMM ,
    MSL_CONFIRM_DATE ,
    MSL_HARI ,
    MSL_JN_RUMUS,
    MSL_RATE ,
    NOTE,
    MSL_RATE_DATE ,
	no_rekening,
	USER_NAME,
	MSL_PRINT_DATE,
	PRM_INTEREST from 
		  (SELECT  /*+ first_rows */
		   DISTINCT
		   d.MSL_KODE ,
           d.MSL_NO ,
           d.LJI_ID ,
           d.NO_REG ,
           d.NO_REG_REF ,
           d.MSL_TU_KE,
           ( (case when(d.MSL_TU_KE = '0') then 'Premi Utama' else 'Premi Top Up Ke-' || d.MSL_TU_KE end) ||' ' || TO_CHAR (d.MSL_BDATE, 'dd-Mon-yyyy') || ' s/d ' ||
           TO_CHAR (d.MSL_EDATE, 'dd-Mon-yyyy') ) PERIODE_DATE,
		   TO_CHAR (d.MSL_BDATE, 'dd-mm-yyyy') MSL_BDATE, 
		   d.MSL_BDATE TGL_BDATE,
           (d.MSL_MGI || ' Bln') MSL_MGI,
           d.MSL_PREMI ,
           d.MSL_BUNGA ,
           d.MSL_TAX ,
           TO_CHAR (d.MSL_TGL_NAB, 'dd-mm-yyyy') MSL_TGL_NAB ,
           d.MSL_NAB ,
           d.MSL_UNIT ,
           TO_CHAR (d.MSL_TGL_NAB_BP, 'dd-mm-yyyy') MSL_TGL_NAB_BP ,
           d.MSL_NAB_BP ,
           d.MSL_NILAI_POLIS ,
           d.MSL_BP_RATE ,
           d.MSL_BP ,
           d.MSL_BP_PT ,
           c.MCL_FIRST ,
           b.MSPO_POLICY_NO ,
           DECODE(b.LKU_ID,'01','Rp','02','USD','03','SinD') LKU_ID ,
           DECODE(d.MSL_RO,'1','RO All','2','RO Premi','3','Auto-Break') MSL_RO ,
           TO_CHAR (d.MSL_INPUT_DATE , 'dd-mm-yyyy') MSL_INPUT_DATE ,
           d.MSL_DESC ,
           DECODE (d.FLAG_RATE,'0','Normal','1','SpecialGross','2','SpecialNett') FLAG_RATE ,
           d.MSL_BAYAR_BUNGA ,
           d.MSL_BAYAR_BP ,
           d.MSL_BAYAR_TARIK ,
           d.MSL_FLAG_COMM ,
           TO_CHAR (d.MSL_CONFIRM_DATE , 'dd-mm-yyyy') MSL_CONFIRM_DATE ,
           d.MSL_HARI ,
           DECODE( d.MSL_JN_RUMUS,'1','Rumus Hari','3','Rumus Bulan') MSL_JN_RUMUS ,
           d.MSL_RATE ,
           TO_CHAR (d.MSL_RATE_DATE , 'dd-mm-yyyy') MSL_RATE_DATE ,
          (case when(length(d.MSL_NOTE) > 0) then d.MSL_NOTE else e.MSLU_NOTE end) NOTE,
           ('Bank '|| (CASE WHEN g.LSBP_NAMA IS NULL THEN '-' ELSE g.LSBP_NAMA END) ||
 			', Cab ' || (CASE WHEN f.MRC_CABANG IS NULL THEN '-' ELSE f.MRC_CABANG END) ||
 			', ' || (CASE WHEN f.MRC_KOTA IS NULL THEN '-' ELSE f.MRC_KOTA END) ||
 			', AC ' || (CASE WHEN f.MRC_NO_AC IS NULL THEN '-' ELSE f.MRC_NO_AC END) ||
 			' A/N ' || (CASE WHEN f.MRC_NAMA IS NULL THEN '-' ELSE f.MRC_NAMA END) ||
 			' ( ' || (CASE WHEN h.LKU_SYMBOL IS NULL THEN '-' ELSE h.LKU_SYMBOL END) || ' ) '  ) no_rekening,
 			(select lus_login_name from eka.lst_user where lus_id = (CASE WHEN e.LUS_ID IS NULL THEN d.LUS_ID ELSE e.LUS_ID END )) USER_NAME,
			  TO_CHAR (d.MSL_PRINT_DATE , 'dd-mm-yyyy') MSL_PRINT_DATE,
			  		  (case when( d.msl_bayar_bunga = 1 ) then 'Bayar, Reg : ' || 
			  (SELECT MSLB_BAYAR_ID  
			          FROM EKA.MST_SLINK_BAYAR  
			  		  WHERE ( REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') ) AND  
					  ( MSL_NO = d.MSL_NO ) )
			   ||  ' Print : ' || 
			   			  (SELECT to_char(MSLB_PRINT_DATE,'dd-mm-yyyy')
			          FROM EKA.MST_SLINK_BAYAR  
			  		  WHERE ( REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') ) AND  
					  ( MSL_NO = d.MSL_NO ) )	
				|| ', Hari Lebih : ' || 	
				(SELECT MSLB_HARI
			          FROM EKA.MST_SLINK_BAYAR  
			  		  WHERE ( REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') ) AND  
					  ( MSL_NO = d.MSL_NO ) )		
				|| ', Manfaat : ' || 		
				(SELECT MSLB_TAMBAH
			          FROM EKA.MST_SLINK_BAYAR  
			  		  WHERE ( REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') ) AND  
					  ( MSL_NO = d.MSL_NO ) )		
				|| ', Total :'  ||		
				(SELECT MSLB_BUNGA + MSLB_BP	
			          FROM EKA.MST_SLINK_BAYAR  
			  		  WHERE ( REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') ) AND  
					  ( MSL_NO = d.MSL_NO ) )								   		  
			    end) PRM_INTEREST
            FROM EKA.MST_SLINK d ,
				  EKA.MST_INSURED a,
				  EKA.MST_POLICY b,
				  EKA.MST_CLIENT_NEW c,
				  EKA.MST_SLINK_UBAH e,
				  EKA.MST_REK_CLIENT f,
				  EKA.LST_BANK_PUSAT g,
				  EKA.LST_KURS h
				  <isNotNull property="lusId">
				  , EKA.LST_USER_ADMIN i,
				  EKA.LST_REGION j				
				  </isNotNull>	   		     
            WHERE ( d.REG_SPAJ = e.REG_SPAJ (+)) and          
					( d.MSL_BDATE = e.MSLU_TGL_AWAL (+)) and          
					( d.REG_SPAJ = a.REG_SPAJ ) and          
					( b.REG_SPAJ = a.REG_SPAJ ) and          
					( b.MSPO_POLICY_HOLDER = c.MCL_ID (+)) and          
					( b.REG_SPAJ = f.REG_SPAJ (+)) and          
					( f.LSBP_ID = g.LSBP_ID (+)) and          
					( f.MRC_KURS = h.LKU_ID (+))  and 										       
					( ( d.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') ) and          
					( e.MSLU_JENIS(+) = 3 ) ) 
					<isNotNull property="lusId">
					and	b.lca_id = j.lca_id and
					b.lwk_id = j.lwk_id and
					b.lsrg_id = j.lsrg_id and
					j.lar_id = i.lar_id and
					i.lus_id = #lusId#	
					</isNotNull>
				ORDER BY MSL_TU_KE, TGL_BDATE
					)   
	</select>
	<select id="elions.uw.selectCount.PowerSaveProses" resultClass="integer" parameterClass="string">
	 		SELECT count(*)  
		    FROM EKA.MST_POWERSAVE_PROSES  
		    WHERE EKA.MST_POWERSAVE_PROSES.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') 

	</select>
	
	<select id="elions.uw.select.DataBank" resultClass="java.util.HashMap" parameterClass="string">
	    SELECT EKA.LST_BANK_PUSAT.LSBP_NAMA,   
	         EKA.MST_REK_CLIENT.MRC_CABANG,   
	         EKA.MST_REK_CLIENT.MRC_NAMA,   
	         EKA.MST_REK_CLIENT.MRC_NO_AC  
	    FROM EKA.LST_BANK_PUSAT,   
	         EKA.MST_REK_CLIENT  
	   WHERE ( EKA.MST_REK_CLIENT.LSBP_ID = EKA.LST_BANK_PUSAT.LSBP_ID ) and  
	         ( ( EKA.MST_REK_CLIENT.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') ) )   
	</select>

	<select id="elions.uw.select.rekClientAccount" resultClass="java.util.HashMap" parameterClass="string">
	     SELECT EKA.LST_BANK_PUSAT.LSBP_NAMA,   
		 EKA.MST_REK_CLIENT.MRC_CABANG,   
		 EKA.MST_REK_CLIENT.MRC_NAMA,   
		 EKA.MST_REK_CLIENT.MRC_NO_AC,  
			 EKA.mst_rek_client.reg_spaj ,
			 EKA.mst_rek_client.lsbp_id ,
			 EKA.mst_rek_client.mrc_jenis ,
	     EKA.mst_rek_client.mrc_jn_nasabah     
	    FROM EKA.LST_BANK_PUSAT,   
		 EKA.MST_REK_CLIENT  
	   WHERE ( EKA.MST_REK_CLIENT.LSBP_ID = EKA.LST_BANK_PUSAT.LSBP_ID ) and  
		 ( ( EKA.MST_REK_CLIENT.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') ) )   
	</select>

	<!-- Cek f_add_months-->
	<select id="elions.uw.selectFAddMonths" resultClass="java.util.Date"
		parameterClass="java.util.HashMap">
			SELECT ADD_MONTHS( #beg_date#,#i#)ADD_MONTHS 
				   FROM DUAL 
		
	</select>	 

	<select id="elions.uw.select.PowerSaveProses_Kode" resultClass="java.util.HashMap"
		parameterClass="java.util.HashMap">
 		SELECT EKA.MST_POWERSAVE_PROSES.MPS_BATAS_DATE,   
	         EKA.MST_POWERSAVE_PROSES.MPS_ROLL_OVER,      EKA.MST_POWERSAVE_PROSES.MPS_JANGKA_INV,   
	         EKA.MST_POWERSAVE_PROSES.MPS_RATE_DATE,      EKA.MST_POWERSAVE_PROSES.MPS_RATE,   
	         EKA.MST_POWERSAVE_PROSES.MPS_PRM_DEPOSIT,    EKA.MST_POWERSAVE_PROSES.MPS_PRM_INTEREST,   
	         EKA.MST_POWERSAVE_PROSES.MPS_EMPLOYEE  
	    FROM EKA.MST_POWERSAVE_PROSES  
	   WHERE ( EKA.MST_POWERSAVE_PROSES.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') ) AND  
	         ( EKA.MST_POWERSAVE_PROSES.MPS_KODE = #mps_kode# )   
			
		
	</select>	 
	
	
	<select id="elions.uw.select.countMstReins" resultClass="java.lang.Integer"
		parameterClass="java.lang.String">
			 SELECT Count(*)  
			  FROM EKA.MST_REINS  
			 WHERE EKA.MST_REINS.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') 
	</select>	 
	
	<select id="elions.uw.select.countReasTempNew" resultClass="java.lang.Integer"
		parameterClass="java.lang.String">
			 SELECT Count(*)  
			  FROM EKA.M_REAS_TEMP_NEW  
			 WHERE REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') 
	</select>

	<select id="elions.uw.select.countMstSampleUw" resultClass="java.lang.Integer"
		parameterClass="java.lang.String">
			 SELECT COUNT(*)
			    FROM EKA.MST_SAMPLE_UW  
			   WHERE EKA.MST_SAMPLE_UW.REG_SPAJ = #reg_spaj# 
		
	</select>	 
	
	<select id="elions.uw.select.mstProductInsured" resultClass="com.ekalife.elions.model.Rider"
		parameterClass="java.util.HashMap">
		  SELECT EKA.MST_PRODUCT_INSURED.REG_SPAJ noSpaj ,   
		         EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO insuredNo,   
				 EKA.LST_BISNIS.LSBS_NAME bisnisName,
		         EKA.MST_PRODUCT_INSURED.LSBS_ID bisnisId, 
		         EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER bisnisNumber,   
		         EKA.MST_PRODUCT_INSURED.LKU_ID kursId,   
		         EKA.MST_PRODUCT_INSURED.MSPR_TSI msprTsi,   
		         EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_A msprTsiA,   
		         EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_B msprTsiB,   
		         EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_C msprTsiC,   
		         EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_D msprTsiD,   
		         EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_M msprTsiM,   
		         EKA.MST_PRODUCT_INSURED.MSPR_CLASS msprClass,   
		         EKA.MST_PRODUCT_INSURED.MSPR_UNIT msprUnit,   
		         EKA.MST_PRODUCT_INSURED.MSPR_PERSEN msprPersen,   
		         EKA.MST_PRODUCT_INSURED.MSPR_PREMIUM msprPremium,   
		         nvl(EKA.MST_PRODUCT_INSURED.MSPR_DISCOUNT,0) msprDiscount,   
		         EKA.MST_PRODUCT_INSURED.MSPR_REF_NO msprRefNo,   
		         EKA.MST_PRODUCT_INSURED.MSPR_ACTIVE msprActive,   
		         TO_CHAR( EKA.MST_PRODUCT_INSURED.LSBS_ID ) || '~X' || TO_CHAR( EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER) as prodId,   
		         EKA.MST_PRODUCT_INSURED.MSPR_RATE msprRate,   
		         999.99 as discount,   
		         EKA.MST_PRODUCT_INSURED.MSPR_EXTRA msprExtra,   
		         EKA.MST_PRODUCT_INSURED.MSPR_INS_PERIOD msprInsPeriod,   
		         EKA.MST_PRODUCT_INSURED.MSPR_BEG_DATE begDate,   
		         EKA.MST_PRODUCT_INSURED.MSPR_END_DATE endDate,   
		         EKA.MST_PRODUCT_INSURED.MSPR_END_PAY msprEndPay,   
		         EKA.MST_PRODUCT_INSURED.MSPR_TT msprTt  
		    FROM EKA.MST_PRODUCT_INSURED,
				   EKA.LST_BISNIS
		   WHERE ( EKA.MST_PRODUCT_INSURED.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') ) AND  
		         ( EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO = #insured_no# ) AND  
		         ( EKA.MST_PRODUCT_INSURED.MSPR_ACTIVE = #active# ) AND
				 (EKA.MST_PRODUCT_INSURED.LSBS_ID=EKA.LST_BISNIS.LSBS_ID)  
		ORDER BY EKA.MST_PRODUCT_INSURED.LSBS_ID ASC   
		
	</select>	 
	
		<select id="elions.uw.select.mstProductInsured2" resultClass="java.util.HashMap"
		parameterClass="java.util.HashMap">
		  SELECT EKA.MST_PRODUCT_INSURED.REG_SPAJ  ,   
		         EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO ,   
				 EKA.LST_BISNIS.LSBS_NAME ,
		         EKA.MST_PRODUCT_INSURED.LSBS_ID , 
		         EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER ,   
		         EKA.MST_PRODUCT_INSURED.LKU_ID ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_TSI ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_A ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_B ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_C ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_D ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_M ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_CLASS ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_UNIT ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_PERSEN ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_PREMIUM ,   
		         nvl(EKA.MST_PRODUCT_INSURED.MSPR_DISCOUNT,0) mspr_discount ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_REF_NO ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_ACTIVE ,   
		         TO_CHAR( EKA.MST_PRODUCT_INSURED.LSBS_ID ) || '~X' || TO_CHAR( EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER) as prodId,   
		         EKA.MST_PRODUCT_INSURED.MSPR_RATE ,   
		         999.99 as discount,   
		         EKA.MST_PRODUCT_INSURED.MSPR_EXTRA ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_INS_PERIOD ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_BEG_DATE ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_END_DATE ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_END_PAY ,   
		         EKA.MST_PRODUCT_INSURED.MSPR_TT   
		    FROM EKA.MST_PRODUCT_INSURED,
				   EKA.LST_BISNIS
		   WHERE ( EKA.MST_PRODUCT_INSURED.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') ) AND  
		         ( EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO = #insured_no# ) AND  
		         ( EKA.MST_PRODUCT_INSURED.MSPR_ACTIVE = #active# ) AND
				 (EKA.MST_PRODUCT_INSURED.LSBS_ID=EKA.LST_BISNIS.LSBS_ID)  
		ORDER BY EKA.MST_PRODUCT_INSURED.LSBS_ID ASC   
		
	</select>	 
	
	<select id="elions.uw.select.lst_rider_rate2" resultClass="java.math.BigDecimal"
	parameterClass="java.util.HashMap">
	
	 SELECT EKA.LST_RIDER.RATE  
			 FROM EKA.LST_RIDER  
			WHERE ( EKA.LST_RIDER.LSBS_ID = #bisnis_id# ) AND  
					( EKA.LST_RIDER.LSR_JENIS = #jenis#) AND  
					( EKA.LST_RIDER.LKU_ID = #kurs# ) AND  
					( EKA.LST_RIDER.USIA_PP = #usiapp# ) AND  					
					( EKA.LST_RIDER.USIA_TT = #usiatt# )   
	

		
	</select>	 
	
	<select id="elions.uw.selectAllBisnisIdnName" resultClass="java.util.HashMap"
	parameterClass="java.util.HashMap">
	
		 SELECT EKA.LST_DET_BISNIS.LSBS_ID,EKA.LST_DET_BISNIS.LSDBS_NUMBER,   
	          		 EKA.LST_DET_BISNIS.LSDBS_NAME  
	     FROM EKA.LST_DET_BISNIS,   
	         EKA.LST_BISNIS  
		   WHERE ( EKA.LST_DET_BISNIS.LSBS_ID = EKA.LST_BISNIS.LSBS_ID )   
		    	 	<![CDATA[
		   AND (EKA.LST_DET_BISNIS.LSBS_ID <300   )	
		   ]]>
		 ORDER BY EKA.LST_DET_BISNIS.LSDBS_NAME ASC   
		
	</select>	 
	
	<select id="elions.uw.selectAllBisnisIdnNameRider" resultClass="java.util.HashMap"
	parameterClass="java.util.HashMap">
	
		 SELECT EKA.LST_DET_BISNIS.LSBS_ID,EKA.LST_DET_BISNIS.LSDBS_NUMBER,   
			 TO_CHAR( EKA.LST_DET_BISNIS.LSBS_ID ) || '~X' || TO_CHAR( EKA.LST_DET_BISNIS.LSDBS_NUMBER) as BISNIS_ID,  
	          		 EKA.LST_DET_BISNIS.LSDBS_NAME  
	     FROM EKA.LST_DET_BISNIS,   
	         EKA.LST_BISNIS  
		   WHERE ( EKA.LST_DET_BISNIS.LSBS_ID = EKA.LST_BISNIS.LSBS_ID ) 
		    	 <isNotEmpty property="filter" prepend="and" >
				  <![CDATA[ ($filter$)  ]]>
		    	 </isNotEmpty>
		 ORDER BY EKA.LST_DET_BISNIS.LSDBS_NAME ASC   
		
	</select>	 	

	<select id="elions.uw.selectBisnisName" resultClass="java.lang.String"
	parameterClass="java.util.HashMap">
		select lsdbs_name 
			from eka.lst_det_bisnis 
				where lsbs_id=#bisnisId# and 
					lsdbs_number=#bisnisNo#
	</select>	 	
	
	<select id="elions.uw.selectLstStatusAccept" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT LSSA_ID, STATUS_ACCEPT, LSSA_SUB
		FROM EKA.LST_STATUS_ACCEPT   
	    <isNotNull property="lssa_id">
			WHERE LSSA_ID = #lssa_id#  
	    </isNotNull>
	    ORDER BY STATUS_ACCEPT
	</select>	
	
	<select id="elions.uw.selectMstPositionSpajWithSubId" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		SELECT EKA.MST_POSITION_SPAJ.REG_SPAJ,   
			   TO_CHAR(EKA.MST_POSITION_SPAJ.MSPS_DATE,'dd-MM-yyyy hh24:mi:ss')MSPS_DATE,   
			   EKA.MST_POSITION_SPAJ.MSPS_DATE AS TGL,
			   EKA.MST_POSITION_SPAJ.LSPD_ID,   
			   EKA.MST_POSITION_SPAJ.LSSP_ID,   
			   EKA.MST_POSITION_SPAJ.LSSA_ID,   
			   EKA.MST_POSITION_SPAJ.LUS_ID,   
			   EKA.MST_POSITION_SPAJ.MSPS_DESC,
			   EKA.MST_POSITION_SPAJ.SUB_ID,
			   EKA.LST_STATUS_ACCEPT_SUB.SUB_DESC
		  FROM EKA.MST_POSITION_SPAJ,
		  	   EKA.LST_STATUS_ACCEPT_SUB
		 WHERE EKA.MST_POSITION_SPAJ.LSSA_ID = EKA.LST_STATUS_ACCEPT_SUB.LSSA_ID(+)
		   AND EKA.MST_POSITION_SPAJ.SUB_ID = EKA.LST_STATUS_ACCEPT_SUB.SUB_ID(+)
		   AND EKA.MST_POSITION_SPAJ.REG_SPAJ = #spaj#
	  ORDER BY EKA.MST_POSITION_SPAJ.MSPS_DATE ASC
	</select>
	
	<select id="elions.uw.selectSubStatusAccept" resultClass="java.util.HashMap"
	parameterClass="java.util.HashMap">
		SELECT EKA.LST_STATUS_ACCEPT_SUB.SUB_ID,   
			   EKA.LST_STATUS_ACCEPT_SUB.SUB_DESC  
		FROM EKA.LST_STATUS_ACCEPT_SUB   
	    <isNotNull property="lssa_id">
			WHERE EKA.LST_STATUS_ACCEPT_SUB.LSSA_ID=#lssa_id#  
	    </isNotNull>
	</select> 	
	
	<select id="elions.uw.selectLstStatusAcceptAksepnFund" resultClass="java.util.HashMap"
	parameterClass="java.lang.String">
		SELECT  EKA.LST_STATUS_ACCEPT.LSSA_ID,   
				EKA.LST_STATUS_ACCEPT.STATUS_ACCEPT  
		FROM EKA.LST_STATUS_ACCEPT
		WHERE LSSA_ID IN(5,8,10,12)   
	</select>	 	
	
	<select id="elions.uw.selectLstUser" resultClass="java.util.HashMap"
	parameterClass="java.lang.String">
	 	SELECT  EKA.LST_USER.LUS_ID,   
		        EKA.LST_USER.LUS_LOGIN_NAME,   
		        EKA.LST_USER.LDE_ID  
		   FROM EKA.LST_USER   
	
	</select>	 	
	
	<select id="elions.uw.selectLstUser2" resultClass="java.util.HashMap"
	parameterClass="java.lang.String">
	 	SELECT  EKA.LST_USER.LUS_ID key,   
		        EKA.LST_USER.LUS_LOGIN_NAME value
		   FROM EKA.LST_USER   order by lus_login_name asc
	
	</select>	 	
	
	<select id="elions.uw.selectLstMedical" resultClass="com.ekalife.elions.model.Medical"
	parameterClass="java.util.HashMap">
	   SELECT a.reg_spaj, a.mste_insured_no,a.lsmc_id, a.msdm_lus_id,    
		      a.mpa_number,a.msdm_status,a.msdm_desc,a.msdm_input_date,
			  b.lsmc_name,0 cek,
			  c.lus_full_name
	     FROM eka.mst_det_medical a,
		 	  eka.lst_medical_check_up b,
			  eka.lst_user c
	    WHERE a.lsmc_id = b.lsmc_id 
		  AND a.msdm_lus_id = c.lus_id(+)
		  AND a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')   
		  AND a.mste_insured_no =  #insuredNo# 
	</select>	 	

	<select id="elions.uw.selectLstIcd" resultClass="com.ekalife.elions.model.Icd" parameterClass="java.util.HashMap">
		SELECT a.reg_spaj, a.lic_id, a.mpa_number, a.msdi_lus_id, a.msdi_input_date, a.mste_insured_no,
			   b.lic_desc, c.lus_full_name, 0 cek 
		  FROM eka.mst_det_icd a,
		  	   eka.lst_icd b,
			   eka.lst_user c
		 WHERE a.lic_id = b.lic_id
		   AND a.msdi_lus_id = c.lus_id
		   AND a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND a.mste_insured_no =  #insuredNo#
	</select>
	
	<select id="elions.uw.selectLstHslReas" resultClass="com.ekalife.elions.model.HslReas" parameterClass="java.util.HashMap">
		SELECT a.reg_spaj, a.mste_insured_no, a.mpa_number, a.lsrei_id, a.msdhr_keputusan, a.msdhr_em, 
			   a.msdhr_alasan, a.msdhr_lus_id, to_char(a.msdhr_input_date,'dd/mm/yyyy') msdhr_input_date, b.lus_full_name, 0 cek, 
			   a.msdhr_catatan, to_char(a.msdhr_expired_date,'dd/mm/yyyy') msdhr_expired_date, msdhr_expired_day
		  FROM eka.mst_det_hsl_reas a,
			   eka.lst_user b
		 WHERE a.msdhr_lus_id = b.lus_id	 
		   AND a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND a.mste_insured_no =  #insuredNo#
	</select>
	
	<select id="elions.uw.selectLstMedicalMax" resultClass="java.lang.Integer"
	parameterClass="java.util.HashMap">
 		SELECT MAX(EKA.MST_DET_MEDICAL.MPA_NUMBER) li_no 
 	   	 FROM EKA.MST_DET_MEDICAL 
   	   	 WHERE ( EKA.MST_DET_MEDICAL.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') ) AND 
   	           ( EKA.MST_DET_MEDICAL.MSTE_INSURED_NO = #insuredNo#)
	</select>	 	
	
	<select id="elions.uw.selectAllLstMedicalCheckUp" resultClass="java.util.HashMap"
	parameterClass="java.util.HashMap">
 		select * from eka.lst_medical_check_up where active = 1 order by lsmc_name
	</select>	 	

	<select id="elions.uw.selectAllLstMedicalCheckUpNew" resultClass="id.co.sinarmaslife.std.model.vo.DropDown">
 		select lsmc_id key, lsmc_name value from eka.lst_medical_check_up where active = 1 order by lsmc_name
	</select>	 	

	<select id="elions.uw.selectLsInsurer" resultClass="id.co.sinarmaslife.std.model.vo.DropDown">
 		select lsrei_id key, lsre_nama value from eka.lst_reinsurer
	</select>
	
	<select id="elions.uw.selectAllLstBlackList" resultClass="com.ekalife.elions.model.BlackList"
	parameterClass="java.util.HashMap">
	 	  select 	 eka.lst_user.lus_login_name,   
			         eka.lst_black_list.lbl_id,   
			         eka.lst_black_list.lbl_nama,   
			         eka.lst_black_list.lbl_tempat,   
			         eka.lst_black_list.lbl_tgl_lahir,   
			         eka.lst_black_list.lbl_alamat,   
			         eka.lst_black_list.lbl_asuransi,   
			         eka.lst_black_list.lbl_alasan,   
			         eka.lst_black_list.lbl_tgl_input,   
			         eka.lst_black_list.lus_id  
			    from eka.lst_black_list,eka.lst_user
		where eka.lst_black_.lus_id = eka.lst_user.lus_id
 	</select>	 	

	<select id="elions.uw.selectMaxLstBunga" resultClass="java.util.Date"
	parameterClass="java.util.HashMap">
		SELECT MAX(EKA.LST_BUNGA.LSBUN_TGL)
		   FROM EKA.LST_BUNGA  
		   WHERE ( EKA.LST_BUNGA.LSBUN_JENIS = #jns# ) AND
		         ( EKA.LST_BUNGA.LKU_ID = #kurs# ) AND
		         ( EKA.LST_BUNGA.LSBUN_TGL <![CDATA[<=]]>  SYSDATE )   	
	</select>
	
	<select id="elions.uw.selectLstBungaLsbunBunga" resultClass="java.lang.Double"
	parameterClass="java.util.HashMap">
			SELECT EKA.LST_BUNGA.LSBUN_BUNGA
			      FROM EKA.LST_BUNGA  
			      WHERE ( EKA.LST_BUNGA.LSBUN_JENIS = #jns# ) AND
			            ( EKA.LST_BUNGA.LKU_ID = #kurs# ) AND
			            ( EKA.LST_BUNGA.LSBUN_TGL = #tgl# )   				
	</select>			            
	
	<select id="elions.uw.selectLstJenisInvestLjiId" resultClass="java.util.HashMap"
	parameterClass="java.util.HashMap">
		  SELECT EKA.LST_JENIS_INVEST.LJI_ID,   
		         EKA.LST_JENIS_INVEST.LJI_INVEST  
		    FROM EKA.LST_JENIS_INVEST   
	</select>
	
	<select id="elions.uw.selectDw1Underwriting" resultClass="com.ekalife.elions.model.Policy"
	parameterClass="java.util.HashMap">
			  select eka.mst_policy.reg_spaj,   
		         eka.mst_policy.lstb_id,   
		         eka.mst_policy.lca_id,   
		         eka.mst_policy.lwk_id,   
		         eka.mst_policy.lsrg_id,   
		         eka.mst_policy.mpi_mou,   
		         eka.mst_policy.lssp_id,   
		         eka.mst_policy.lspd_id,   
		         eka.mst_policy.mspo_policy_holder,   
		         eka.mst_policy.lsre_id,   
		         eka.mst_policy.mspo_age,   
		         eka.mst_policy.lku_id,   
		         eka.mst_policy.lscb_id,   
		         eka.mst_policy.lus_id,   
		         eka.mst_policy.mspo_policy_no,   
		         eka.mst_policy.mspo_spaj_date,   
		         eka.mst_policy.mspo_ins_period,   
		         eka.mst_policy.mspo_pay_period,   
		         eka.mst_policy.mspo_proses_bill,   
		         eka.mst_policy.mspo_next_bill,   
		         eka.mst_policy.mspo_installment,   
		         eka.mst_policy.mspo_flat,   
		         eka.mst_policy.mspo_ref_bii,   
		         eka.mst_policy.mspo_date_print,   
		         eka.mst_policy.mspo_date_spec,   
		         eka.mst_policy.mspo_date_ttp,   
		         eka.mst_policy.mspo_pribadi,   
		         eka.mst_policy.mspo_ao,   
		         eka.mst_policy.mspo_no_blanko,   
		         eka.mst_policy.mspo_follow_up,   
		         eka.mst_policy.mspo_komisi_bii,   
		         eka.mst_policy.mspo_input_date,   
		         eka.mst_insured.mste_tgl_recur,   
		         eka.mst_insured.mste_flag_recur,   
		         eka.mst_policy.mspo_umur_beasiswa,   
		         eka.mst_insured.mste_standard,   
		         eka.mst_policy.mspo_preexisting,   
		         eka.mst_policy.lstp_id,   
		         eka.mst_policy.mspo_policy_no_format,  
		         eka.mst_insured.mste_kyc_date
		    from eka.mst_policy,   
		         eka.mst_insured  
		   where ( eka.mst_policy.reg_spaj = eka.mst_insured.reg_spaj ) and  
		         ( eka.mst_policy.reg_spaj=rpad(replace(#spaj#,'.'),11,' ') )and
      		 <isNotNull property="lspdId">
		         (  eka.mst_policy.lspd_id = #lspdId# ) and  
		     </isNotNull>    
		         ( eka.mst_policy.lstb_id = #lstbId# )    
		order by eka.mst_policy.reg_spaj asc   
	</select>
	
	<select id="elions.uw.selectAllClientNewPemegang" resultClass="com.ekalife.elions.model.Client"
	parameterClass="java.lang.String">
		select * from eka.mst_client_new where mcl_id in
		(select mspo_policy_holder from eka.mst_policy where reg_spaj=#spaj#)
		
	</select>
	
	<select id="elions.uw.selectAllClientNewTertanggung" resultClass="com.ekalife.elions.model.Client"
	parameterClass="java.lang.String">
		select * from eka.mst_client_new where mcl_id in
		(select mste_insured from eka.mst_insured where reg_spaj=#spaj#)
		
	</select>
	
	<select id="elions.uw.selectAllClientBlacklist" resultClass="com.ekalife.elions.model.Client"
	parameterClass="java.lang.String">
		select * from eka.mst_client_new where mcl_id = #value#
	</select>
	
	<select id="elions.uw.selectCekSpajSebelumSurrender" resultClass="string"
	parameterClass="java.lang.String">
		select mspo_joint_policy
		from eka.mst_policy
		where reg_spaj = #value#
	</select>
	
	<!-- 
	<select id="elions.uw.selectCekBlacklist" resultClass="string"
	parameterClass="java.lang.String">
		select distinct * from(
		select decode((select lbl_nama from eka.lst_black_list where (trim(lbl_nama)=trim(a.mcl_first) or upper(trim(lbl_nama_alias_1)) = upper(trim(a.mcl_first)) 
		or upper(trim(lbl_nama_alias_2)) = upper(trim(a.mcl_first)) or upper(trim(lbl_nama_alias_3)) = upper(trim(a.mcl_first))
		or upper(trim(lbl_nama_alias_4)) = upper(trim(a.mcl_first)) or upper(trim(lbl_nama_alias_5)) = upper(trim(a.mcl_first))) and lbl_tgl_lahir = a.MSPE_DATE_BIRTH and rownum = 1), '', '', b.reg_spaj) reg_spaj
		from eka.mst_client_new a, eka.mst_policy b
		where a.mcl_id=b.mspo_policy_holder and b.reg_spaj = #reg_spaj#
		union
		select decode((select lbl_nama from eka.lst_black_list where (trim(lbl_nama)=trim(a.mcl_first) or upper(trim(lbl_nama_alias_1)) = upper(trim(a.mcl_first)) 
		or upper(trim(lbl_nama_alias_2)) = upper(trim(a.mcl_first)) or upper(trim(lbl_nama_alias_3)) = upper(trim(a.mcl_first))
		or upper(trim(lbl_nama_alias_4)) = upper(trim(a.mcl_first)) or upper(trim(lbl_nama_alias_5)) = upper(trim(a.mcl_first))) and lbl_tgl_lahir = a.MSPE_DATE_BIRTH and rownum = 1), '', '', b.reg_spaj) reg_spaj
		from eka.mst_client_new a, eka.mst_insured b
		where a.mcl_id=b.mste_insured and b.reg_spaj = #reg_spaj#
		) where reg_spaj is not null
	</select>
	-->
	
	<select id="elions.uw.selectCekBlacklist" resultClass="string"
	parameterClass="java.lang.String">
		select nvl(max(b.reg_spaj),'') reg_spaj
        from eka.mst_client_new a
            , eka.mst_policy b
            , eka.mst_insured c
        where b.reg_spaj = #reg_spaj#
            and b.reg_spaj = c.reg_spaj
            and 
                (a.mcl_id=b.mspo_policy_holder 
                    or a.mcl_id=c.mste_insured )
            and exists
            (
                select lbl_nama from eka.lst_black_list where (trim(lbl_nama)=trim(a.mcl_first) or upper(trim(lbl_nama_alias_1)) = upper(trim(a.mcl_first)) 
                    or upper(trim(lbl_nama_alias_2)) = upper(trim(a.mcl_first)) or upper(trim(lbl_nama_alias_3)) = upper(trim(a.mcl_first))
                    or upper(trim(lbl_nama_alias_4)) = upper(trim(a.mcl_first)) or upper(trim(lbl_nama_alias_5)) = upper(trim(a.mcl_first))) and lbl_tgl_lahir = a.MSPE_DATE_BIRTH and rownum = 1
            ) and rownum = 1
	</select>
	
	<select id="elions.uw.selectCekBlacklistDirect" resultClass="string"
	parameterClass="java.util.HashMap">
		select lbl_nama from eka.lst_black_list where (trim(lbl_nama)=trim(#lbl_nama#) or trim(lbl_nama_alias_1)=trim(#lbl_nama#) or 
		trim(lbl_nama_alias_2)=trim(#lbl_nama#) or trim(lbl_nama_alias_3)=trim(#lbl_nama#) or trim(lbl_nama_alias_4)=trim(#lbl_nama#) or
		trim(lbl_nama_alias_5 )=trim(#lbl_nama#)) and lbl_tgl_lahir = to_date(#lbl_tgl_lahir#, 'dd/mm/yyyy') and rownum = 1
	</select>
	
	<select id="elions.uw.selectAllBlacklist" resultClass="com.ekalife.elions.model.BlackList"
	parameterClass="java.util.HashMap">
		select 
		lbl_id, lbl_nama, lbl_nama_alias_1, lbl_nama_alias_2, lbl_nama_alias_3, lbl_nama_alias_4, lbl_nama_alias_5, 
		lbl_tempat, lbl_tgl_lahir, lbl_alamat, lbl_asuransi, lbl_flag_alasan, lbl_alasan, lbl_tgl_input, 
		lus_id, mcl_id, lbl_sumber_info, lbl_sumber_informasi, lbl_tgl_kejadian, lbl_diagnosa, lbl_sts_cust, 
		null reg_spaj, (select x.lus_login_name from eka.lst_user x where x.lus_id = z.lus_id) lus_login_name,
		lbl_nb_process, lbl_sumber_info2, lbl_tgl_kejadian_to, lbl_no_identity,
		lbl_no_identity_sim, lbl_no_identity_paspor, lbl_no_identity_akte_lahir, lbl_no_identity_kims_kitas
		 from eka.lst_black_list z where (lbl_nama = #lbl_nama# or lbl_nama_alias_1 = #lbl_nama#
		 or lbl_nama_alias_2 = #lbl_nama# or lbl_nama_alias_3 = #lbl_nama# 
		 or lbl_nama_alias_4 = #lbl_nama# or lbl_nama_alias_5 = #lbl_nama#)
		 	<isNotNull property="lbl_tgl_lahir" >
				   and lbl_tgl_lahir = #lbl_tgl_lahir#
			</isNotNull>
			and rownum = 1
	</select>
	
	<select id="elions.uw.selectAllDetBlacklist" resultClass="com.ekalife.elions.model.DetBlackList"
	parameterClass="java.lang.String">
		select * from eka.lst_det_black_list where lbl_id = #value#
		order by ldbl_number asc
	</select>
	
	<select id="elions.uw.selectAllBlacklistFamily" resultClass="com.ekalife.elions.model.BlackListFamily"
	parameterClass="java.lang.Integer">
		select * from eka.lst_black_list_family where lbl_id = #value#
	</select>
	
	<select id="elions.uw.selectAllAddressNew" resultClass="com.ekalife.elions.model.AddressNew"
	parameterClass="java.lang.String">
		select * from eka.mst_address_new where mcl_id = #value#
	</select>
	
	<select id="elions.uw.selectAllAddressNewPemegang" resultClass="com.ekalife.elions.model.AddressNew"
	parameterClass="java.lang.String">
		select * from eka.mst_address_new where mcl_id in
		(select mspo_policy_holder from eka.mst_policy where reg_spaj=#spaj#)
	</select>
	
	<select id="elions.uw.selectAllAddressNewTertanggung" resultClass="com.ekalife.elions.model.AddressNew"
	parameterClass="java.lang.String">
		select * from eka.mst_address_new where mcl_id in
		(select mste_insured from eka.mst_insured where reg_spaj=#spaj#)
	</select>

	<select id="elions.uw.selectAllLstAgama" resultClass="java.util.HashMap"
	parameterClass="java.lang.String">
		select * from eka.lst_agama order by lsag_id
	</select>
	
	
	<select id="elions.uw.selectAllLstTolak" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	SELECT id, keterangan from eka.lst_alasan_tolak 
		order by id
	</select>
	
	<select id="elions.uw.selectAllLstIdentity" resultClass="java.util.HashMap"
	parameterClass="java.lang.String">
		select * from eka.lst_identity order by lside_id
	</select>
	
	<select id="elions.uw.selectAllLstEducation" resultClass="java.util.HashMap"
	parameterClass="java.lang.String">
		select * from eka.lst_education order by lsed_id
	</select>
	
	<select id="elions.uw.selectAllLstGrpJob" resultClass="java.util.HashMap"
	parameterClass="java.lang.String">
		select * from eka.lst_grp_job order by lgj_id
	</select>
	
	<select id="elions.uw.selectAllLstJabatan" resultClass="java.util.HashMap"
	parameterClass="java.lang.String">
		select * from eka.lst_jabatan order by ljb_id
	</select>
	
	<select id="elions.uw.selectAllLstNegara" resultClass="java.util.HashMap"
	parameterClass="java.lang.String">
		select * from eka.lst_negara order by lsne_id
	</select>

	<select id="elions.uw.selectemailAdmin" resultClass="java.lang.String"
	parameterClass="java.lang.String">
		select lar_email
		from eka.mst_policy a,
			 eka.lst_region b,
			 eka.lst_addr_region c
		where a.lca_id=b.lca_id and
			  a.lwk_id=b.lwk_id and
			  a.lsrg_id=b.lsrg_id(+) and
			  b.lar_id=c.lar_id and
			  a.reg_spaj=#spaj#
	</select>
	
	<select id="elions.uw.selectemailAgen" resultMap="elions.uw.selectemailAgen.result"
	parameterClass="java.lang.String">
		select a.mcl_first, a.mspe_email,b.msag_id,b.msag_active,b.msag_sertifikat,msag_beg_date,msag_end_date, msag_berlaku
		from eka.mst_client_new a,
			 eka.mst_agent b,
			 eka.mst_agent_prod c	
		where a.mcl_id=b.mcl_id and
			  b.msag_id=c.msag_id and
			  c.lsle_id=4 and
			  c.reg_spaj=rpad(replace(#spaj# ,'.'),11,' ') 
	</select>
	
	<select id="elions.uw.selectemailAgen2" resultMap="elions.uw.selectemailAgen.result"
	parameterClass="java.lang.String">
		select a.mcl_first, a.mspe_email,b.msag_id,b.msag_active,b.msag_sertifikat,msag_beg_date,msag_end_date, msag_berlaku
		from eka.mst_client_new a,
			 eka.mst_agent b
		where a.mcl_id=b.mcl_id and
			  b.msag_id=#msag_id#
	</select>
	
	<select id="elions.uw.selectInfoPemegang" resultMap="elions.uw.selectInfoPemegang.result"
	parameterClass="java.lang.String">
		select a.reg_spaj, a.mspo_policy_no ,mcl_first,eka.f_lsbs(a.reg_spaj, c.lsbs_id) lsbs_name,c.LSBS_ID, 
			   TO_CHAR(f.mste_tgl_kirim_polis,'dd/mm/yyyy')mste_tgl_kirim_polis,a.lca_id
		from eka.mst_policy a, eka.mst_client_new b, 
     		 eka.mst_product_insured c, EKA.LST_BISNIS d,eka.mst_insured f
		where a.mspo_policy_holder= b.mcl_id
      		and a.reg_spaj=c.reg_spaj
      		and a.reg_spaj=f.reg_spaj
            and c.lsbs_id=D.LSBS_ID
            and a.reg_spaj=#spaj#
            and c.lsbs_id <![CDATA[<]]> 300
	</select>

	<select id="elions.uw.selectAllLstCabang" resultClass="java.util.HashMap"
	parameterClass="java.lang.String">
		select lca_id key, lca_nama value from eka.lst_cabang order by lca_nama asc
	</select>

	<select id="elions.uw.selectAllLstRegion" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		select lca_id key, lsrg_nama value from eka.lst_region order by lsrg_nama asc
	</select>
	
	<select id="elions.uw.selectAllLstCabang2" resultClass="java.util.HashMap"
	parameterClass="java.lang.String">
	   select lca_id key,lca_nama value from eka.lst_cabang where lca_id !='WW' and lca_id!='XX' and lca_id !='99'
	   order by lca_id

	</select>
	
	<select id="elions.uw.selectProductCombined" resultClass="java.util.HashMap">
		select lpad(lsbs_id, 3, 0)||lpad(lsdbs_number,3,0) key, lsdbs_name value from eka.lst_det_bisnis where lsdbs_aktif = 1 and lsbs_id <![CDATA[<]]> 300
		order by lsdbs_name 
	</select>
	
	<select id="elions.uw.selectlstlevel" resultClass="java.util.HashMap" parameterClass="java.lang.String">
	   select  lsle_id , lsle_name 
	   from eka.lst_level_agent 
	   where lstb_id = 1 order by lsle_id 
	 </select>
	
	<resultMap id="elions.uw.selectAllMstPositionSpajMspsDate.result" class="java.util.HashMap">
		<result property="REG_SPAJ" column="REG_SPAJ" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                  
		<result property="MSPS_DATE" column="MSPS_DATE" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                  
		<result property="spaj" column="{reg_spaj=REG_SPAJ,msps_date=MSPS_DATE}" select="elions.uw.selectAllSummaryStatus" javaType="java.util.HashMap"/>                                                                                                                                                  
	</resultMap>	

	<resultMap id="elions.uw.selectAllSummaryStatus.result" class="java.util.HashMap">
		<result property="LCA_ID" column="LCA_ID" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                      
		<result property="LCA_NAMA" column="LCA_NAMA" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                              
		<result property="MSTE_INPUT_DATE" column="MSTE_INPUT_DATE" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                
		<result property="NAMA_AGEN" column="NAMA_AGEN" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                            
		<result property="REG_SPAJ" column="REG_SPAJ" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                  
		<result property="MSPO_POLICY_NO" column="MSPO_POLICY_NO" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                  
		<result property="LSDBS_NAME" column="LSDBS_NAME" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                          
		<result property="NAMA_PP" column="NAMA_PP" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                                
		<result property="NAMA_TT" column="NAMA_TT" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                                
		<result property="LKU_ID" column="LKU_ID" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                      
		<result property="MSPR_TSI" column="MSPR_TSI" javaType="double" jdbcType="NUMBER" />                                                                                                                                                            
		<result property="LSSA_ID" column="LSSA_ID" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
		<result property="STATUS_ACCEPT" column="STATUS_ACCEPT" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                    
		<result property="LSPD_ID" column="LSPD_ID" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                 
		<result property="LSPD_POSITION" column="LSPD_POSITION" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                    
		<result property="LUS_ID" column="LUS_ID" javaType="int" jdbcType="NUMBER" />                                                                                                                                                                   
		<result property="MSPS_DESC" column="MSPS_DESC" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                            
		<result property="KET_AKSEP" column="KET_AKSEP" javaType="string" jdbcType="VARCHAR2" nullValue=""/>    
	</resultMap>	

	<select id="elions.uw.selectMstPositionSpajCekStatus" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select distinct a.reg_spaj, a.msps_desc, a.lus_id, b.mcl_first,e.lde_id,E.LUS_EMAIL,E.LUS_LOGIN_NAME, a.jenis  from eka.mst_position_spaj a ,eka.mst_client_new b, eka.mst_policy c, eka.lst_user e
            where B.MCL_ID = C.MSPO_POLICY_HOLDER AND
            c.reg_spaj = A.REG_SPAJ AND
            a.lus_id=e.lus_id and      
            a.reg_spaj IN (select distinct reg_spaj from eka.mst_position_spaj d where d.jenis IN('WAITING APPROVAL SPT','WAITING APPROVAL SPT OLEH CSFL')and d.reg_spaj = a.reg_spaj) and
            a.reg_spaj NOT IN( select distinct reg_spaj from eka.mst_position_spaj d where d.jenis IN ('SPT HAS APPROVED','SPT HASNT APPROVED')) 
            and (a.jenis='WAITING APPROVAL SPT OLEH CSFL' or a.jenis='WAITING APPROVAL SPT')
	</select>
		
	<select id="elions.uw.selectSptUpload" resultClass="java.lang.String" parameterClass="java.lang.String">		
		 select distinct eka.mst_position_spaj.msps_desc from eka.mst_position_spaj 
        where eka.mst_position_spaj .REG_SPAJ =#reg_spaj# and  (SELECT COUNT(*) FROM eka.mst_position_spaj b WHERE eka.mst_position_spaj.REG_SPAJ = b.REG_SPAJ 
        AND b.msps_desc IN ('SPT DIKIRIM KE DIREKSI')) = 0 AND eka.mst_position_spaj.msps_desc='Validasi SPT'  
	</select>
		
	<select id="elions.uw.selectNamaBank" resultClass="java.util.HashMap" parameterClass="java.lang.String">		
		SELECT  c.lsbp_nama, b.lbn_nama
          FROM  eka.lst_bank b, eka.lst_bank_pusat c
         WHERE b.lbn_id= #value# AND b.lsbp_id = c.lsbp_id
	</select>
	
	<select id="elions.uw.selectDireksi" resultClass="java.lang.String" parameterClass="java.lang.String">		
		select lus_id from eka.mst_position_spaj where reg_spaj= rpad(replace(#reg_spaj# ,'.'),11,' ') and jenis='SPT HAS APPROVED'
	</select>
	
	<select id="elions.uw.selectMstPositionSpajCekAksep" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		 select distinct reg_spaj, msps_desc, lus_id, EKA.UTILS.USER_INPUT(lus_id) nama
         from 
         eka.mst_position_spaj 
         where 
          <isEqual property="flag" compareValue="1">
         	(msps_desc ='SPT TELAH DISETUJUI' OR msps_desc='SPT TIDAK DISETUJUI') 
         </isEqual>
          <isEqual property="flag" compareValue="2">
         	(msps_desc ='SPT DISETUJUI CSFL' OR msps_desc='SPT DITOLAK CSFL') 
         </isEqual>
         and reg_spaj=rpad(replace(#reg_spaj# ,'.'),11,' ') 
	
   </select>
   
   <select id="elions.uw.selectMstPositionSpajCekAksepCS" resultClass="integer" parameterClass="string">
		select count (*) from eka.mst_position_spaj where msps_desc='SPT DISETUJUI CSFL' and jenis='WAITING APPROVAL SPT' and reg_spaj = rpad(replace(#reg_spaj# ,'.'),11,' ')  
   </select>
   
     
	<select id="elions.uw.selectDataPemegangPolisSpt" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
	   SELECT DISTINCT
       a.reg_spaj,a.mspo_policy_no, l.lsrg_nama, a.lssp_id, a.lspd_id, b.lssa_id,
       a.mspo_policy_no_format, c.lsbs_id, c.lsdbs_number,a.mspo_no_pengiriman,
       eka.utils.pemegang (a.reg_spaj) pemegang,a.lca_id,a.lwk_id,a.lsrg_id,
       eka.utils.tertanggung (a.reg_spaj) tertanggung,
       eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) LSDBS_NAME,
       TO_CHAR (b.mste_beg_date, 'dd/MM/yyyy') tanggal_mulai,
       c.mspr_tsi UP,
       (CASE WHEN a.lku_id = '01' THEN c.mspr_premium ELSE NULL END)
          premi_rupiah,
       (CASE WHEN a.lku_id = '02' THEN c.mspr_premium ELSE NULL END)
          premi_dollar,
       e.lscb_pay_mode cara_bayar,       
        (select  k.mrc_no_ac ||' ('||z.lsbp_nama||' '||'CABANG'||' '||k.mrc_cabang||' '||k.mrc_kota||')' 
         from
             eka.mst_rek_client k ,          
             eka.lst_bank_pusat z
         where           
             k.lsbp_id = z.lsbp_id
            and k.reg_spaj=a.reg_spaj )no_rek,       
           I.LCA_NAMA Cabang , 
           k.mrc_nama,       
          (  CASE
                when d.lsbs_id in(086,094,123,124,142,143,144,155,175,176,177) then (select distinct to_char(mpr_jangka_invest) from eka.mst_powersave_ro where reg_spaj = a.reg_spaj and msbi_premi_ke='1' and msbi_tahun_ke='1')||'bln'
                 when d.lsbs_id =158 then (select distinct to_char(mpr_jangka_invest) from eka.mst_powersave_ro where reg_spaj = a.reg_spaj and msbi_premi_ke='1' and msbi_tahun_ke='1')||'bln MIP'
                 when d.lsbs_id = 188 then ((case when (select flag_bulanan from eka.mst_psave where reg_spaj = a.reg_spaj)=1 then (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj and mps_premi_ke='1' and mps_tahun_ke='1')|| ' bln MIP' else (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj and mps_premi_ke='1')||' bln' end))
                 when d.lsdbs_name like '%STABLE LINK%' then((case when (select distinct flag_bulanan from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')=1 then (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1'and msl_premi_ke='1' and msl_tahun_ke='1')|| ' bln MIP' else (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1'and msl_premi_ke='1' and msl_tahun_ke='1')||' bln' end))
                 when d.lsdbs_name like '%STABLE SAVE%' then((case when (select distinct flag_bulanan from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')=1 then (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')|| ' bln MIP' else (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')||' bln' end))
                  ELSE '' END)mgi                                      
  FROM eka.mst_policy a,
       eka.mst_insured b,
       eka.mst_product_insured c,
       eka.lst_det_bisnis d,
       eka.lst_pay_mode e,
       eka.lst_cabang i,
       eka.mst_client_new j,
       eka.mst_rek_client k,
       eka.lst_region l
 WHERE a.reg_spaj = rpad(replace(#reg_spaj# ,'.'),11,' ')       
        AND a.reg_spaj = b.reg_spaj
        AND b.reg_spaj = c.reg_spaj
        and a.reg_spaj = k.reg_spaj(+)
        AND b.mste_insured_no = c.mste_insured_no
        and c.lsbs_id <![CDATA[<]]>800   
    	and c.lsbs_id = d.lsbs_id
   	 	and c.lsdbs_number = d.lsdbs_number
    	and a.lscb_id = e.lscb_id
        and a.lca_id=i.lca_id
        and a.mspo_policy_holder=j.mcl_id 
        and a.lca_id=l.lca_id
        and a.lwk_id=l.lwk_id
        and a.lsrg_id=l.lsrg_id          		
	</select>

	<select id="elions.uw.selectAllMstPositionSpajMspsDate" resultMap="elions.uw.selectAllMstPositionSpajMspsDate.result"
	parameterClass="java.util.HashMap">
      	select a.reg_spaj,#msps_date# msps_date  
		from eka.mst_position_spaj a,
			 eka.mst_product_insured b ,
			 eka.mst_policy c
		where a.reg_spaj=b.reg_spaj and
			  a.reg_spaj=c.reg_spaj and
			  b.lsbs_id<![CDATA[<]]> 300 and
			<isNotEqual property="lca_id" compareValue="00">
			   c.lca_id =#lca_id# and
			  </isNotEqual> 
			  trunc(a.msps_date)=to_date(#msps_date#,'dd/mm/yyyy')
	   		  group by A.reg_spaj
	</select>
	
	<select id="elions.uw.selectAllSummaryStatus" resultMap="elions.uw.selectAllSummaryStatus.result"
	parameterClass="java.util.HashMap">
		
		  select a.lca_id,i.lca_nama,to_char(b.mste_input_date,'dd/mm/yyyy')mste_input_date,aa.mcl_first nama_agen,posisi.reg_spaj,a.MSPO_POLICY_NO,
		  		 eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) lsdbs_name,pp.mcl_first nama_pp,tt.mcl_first nama_tt,c.lku_id,c.mspr_tsi,
				 posisi.lssa_id,posisi.status_accept,posisi.lspd_id,posisi.lspd_position,posisi.lus_id,posisi.msps_desc,ket.msps_Desc ket_aksep
	  from ( 	select a.reg_spaj,a.msps_date,a.lspd_id,c.lspd_position,
	  	   			   case
					   	   when a.lssa_id is null then
						   		case 
									 when a.lspd_id>=5 then
									 	  5
									 else
									 	 1
								end
							else
								a.lssa_id	
						end lssa_id,
					   b.status_accept,a.lus_id,a.msps_desc
	  	   		from eka.mst_position_spaj a,
					 eka.lst_status_accept b,
					 eka.lst_document_position c 
				where a.lspd_id=c.lspd_id and
					  case
					   	   when a.lssa_id is null then
						   		case 
									 when a.lspd_id>=5 then
									 	  5
									 else
									 	 1
								end
							else
								a.lssa_id	
						end 
					  =b.lssa_id and
					  a.reg_spaj=#reg_spaj# and
					  a.msps_date=(
					  			 select max (b.msps_date) 
									 from eka.mst_position_spaj a,
									 	  ( select reg_spaj,msps_date  
												from eka.mst_position_spaj
												where reg_spaj=#reg_spaj# and
													  trunc(msps_date)=to_date(#msps_date#,'dd/mm/yyyy')
											)b		  
									 where a.reg_spaj=#reg_spaj#
					  			)
		   ) posisi,
		   ( 	select * from eka.mst_position_spaj 
				where lssa_id=5 and lspd_id=2 and lssp_id=10 and reg_spaj=#reg_spaj# 
		   )ket,
	  	   eka.mst_policy a,
		   eka.mst_insured b,
		   eka.mst_product_insured c,
		   eka.lst_det_bisnis d,
		   eka.mst_client_new pp,
		   eka.mst_client_new tt,
		   eka.mst_client_new aa,
		   eka.mst_agent e,
		   eka.mst_agent_prod f,
		   eka.lst_status_accept g,
		   eka.lst_document_position h,
		   eka.lst_cabang i
	  where   a.reg_spaj=posisi.reg_spaj and
	  		  a.reg_spaj=ket.reg_spaj(+) and
	  		  a.mspo_policy_holder=pp.mcl_id and
			  a.reg_spaj=b.reg_spaj and
			  a.reg_spaj=c.reg_spaj and
			  c.lsbs_id=d.lsbs_id and
			  c.lsdbs_number=d.lsdbs_number and
		   	  b.mste_insured=tt.mcl_id and
			  e.msag_id=f.msag_id and
			  a.reg_spaj=f.reg_spaj and
		   	  e.mcl_id=aa.mcl_id and
			  b.lssa_id=g.lssa_id and
			  a.lspd_id=h.lspd_id and
			  a.lca_id=i.lca_id and
		      f.lsle_id=4 and
			  a.reg_spaj=#reg_spaj# and
			   c.lsbs_id <![CDATA[<]]> 300 
 
	</select>
	
	<select id="elions.uw.selectLstBakUlinkAkuisisi" resultClass="double"
	parameterClass="java.util.HashMap">
	 SELECT EKA.LST_BAK_ULINK.AKUISISI  
	    FROM EKA.LST_BAK_ULINK  
	   WHERE ( EKA.LST_BAK_ULINK.LSBS_ID = #lsbs_id# ) AND  
	         ( EKA.LST_BAK_ULINK.LSDBS_NUMBER = #lsdbs_number# ) AND  
	         ( EKA.LST_BAK_ULINK.LSCB_ID = #lscb_id# ) AND  
	         ( EKA.LST_BAK_ULINK.LBU_LBAYAR = #lbu_lbayar# ) AND  
	         ( EKA.LST_BAK_ULINK.TAHUN_KE =#tahun_ke#  )   
	</select>
	
	<select id="elions.uw.selectViewerKontrolBonus" resultMap="elions.uw.selectViewerKontrolBonus.result" parameterClass="java.util.HashMap">
		SELECT a.REG_SPAJ,
		 a.MSBI_TAHUN_KE,
		 a.MSBI_PREMI_KE,
 		 DECODE(a.TIPE,1 ,'BONUS PENJUALAN','') "TIPE",
		 a.NAMA,
		 a.NO_ACCOUNT,
		 a.LBN_ID,
		 a.MSCO_ID,
		 a.MSCO_COMM,
		 a.MSCO_TAX,
		 a.MSCO_DATE,
		 a.MSCO_PAY_DATE,
		 DECODE(a.MSCO_PAID,1,'SUDAH BAYAR' , 'BELUM BAYAR') "MSCO_PAID",
		 DECODE(a.MSCO_ACTIVE,1,'AKTIF','TIDAK AKTIF') "MSCO_ACTIVE",
		 a.LUS_ID,
		 a.MSCO_NILAI_KURS,
		 a.FLAG_UPLOAD,
		 a.MSAG_ID ,
		 c.MCL_FIRST,
		 d.LUS_LOGIN_NAME,
		 f.LSBP_NAMA||' '||e.LBN_NAMA "NAMA_BANK"
		 FROM EKA.MST_COMM_BONUS a,
		 EKA.MST_AGENT b,
		 EKA.mst_client_new c,
		 EKA.LST_USER d, 
		 EKA.LST_BANK e,
		 EKA.LST_BANK_PUSAT f
		 <isNotNull property="lusId">
		 , eka.mst_policy g,
		 eka.lst_user_admin h,
		 eka.lst_region i
		 </isNotNull>
		 WHERE a.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ')
		 AND a.MSAG_ID = b.MSAG_ID 
		 AND c.MCL_ID = b.MCL_ID
		 AND a.LUS_ID = d.LUS_ID
		 AND a.LBN_ID = e.LBN_ID
		 AND e.LSBP_ID = f.LSBP_ID
		 <isNotNull property="lusId">
		 AND a.reg_spaj = g.reg_spaj
		 AND g.lca_id = i.lca_id 
		 AND g.lwk_id = i.lwk_id
		 AND g.lsrg_id = i.lsrg_id
		 AND i.lar_id = h.lar_id
		 AND h.lus_id = #lusId#
		 </isNotNull>
	</select>
	
	<select id="elions.uw.selectLstUlangan" resultClass="com.ekalife.elions.model.Ulangan" parameterClass="string">
		select a.*,b.lus_full_name,c.lssp_status
			from eka.lst_ulangan a,
				 eka.lst_user b,
				 eka.lst_policy_status c
				 where a.lus_id=b.lus_id and
				 	   a.status_polis=c.lssp_id and
					   a.reg_spaj=rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectLstPolicyStatus" resultClass="string" parameterClass="integer">
		select lssp_status
		 from eka.lst_policy_status 
		 where lssp_id=#value#
	</select>
	
	<select id="elions.uw.selectPerusahaanWorksite" resultClass="java.util.HashMap" parameterClass="string">
		select a.mcl_gelar,a.mcl_first,c.nik 
		from eka.mst_client_new a,
			 eka.mst_policy b,
			 eka.mst_worksite_flag c
		where a.mcl_id=b.mspo_customer and
			  c.REG_SPAJ =b.reg_spaj and
			  b.reg_spaj=#spaj#
	</select>
	
	<select id="elions.uw.countkomisiperagen" resultClass="integer" parameterClass="java.util.HashMap">
	SELECT count("mst_client_new_c"."MCL_FIRST") "jumlah"
	    FROM "EKA"."MST_AGENT",   
	         "EKA"."MST_COMMISSION",   
	         "EKA"."MST_DEDUCT",   
	         "EKA"."MST_POLICY",   
	         "EKA"."MST_INSURED",    
	         EKA.mst_client_new "mst_client_new_c" ,
		 EKA.MST_AGENT_PROD,
		 EKA.MST_PRODUCTION,
		 "EKA"."LST_USER_ADMIN",   
	         "EKA"."LST_ADDR_REGION",   
	         "EKA"."LST_REGION"
	   WHERE ( "EKA"."MST_AGENT"."MSAG_ID" = "EKA"."MST_COMMISSION"."MSAG_ID" ) and  
	         ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_INSURED"."REG_SPAJ" ) and  
	         ( "EKA"."MST_COMMISSION"."REG_SPAJ" = "EKA"."MST_POLICY"."REG_SPAJ" ) and  
	         ( "EKA"."MST_INSURED"."MSTE_INSURED" = "mst_client_new_c"."MCL_ID" ) AND
	         ( EKA.MST_COMMISSION.MSCO_ID = EKA.MST_DEDUCT.MSCO_ID (+)) and  
			(EKA.MST_POLICY.REG_SPAJ=EKA.MST_AGENT_PROD.REG_SPAJ) AND
			(EKA.MST_AGENT_PROD.LSLE_ID=4) AND
			(EKA.MST_COMMISSION.REG_SPAJ =EKA.MST_PRODUCTION.REG_SPAJ(+)) AND
			(EKA.MST_COMMISSION.MSBI_TAHUN_KE = EKA.MST_PRODUCTION.MSBI_TAHUN_KE(+)) AND
			(EKA.MST_COMMISSION.MSBI_PREMI_KE = EKA.MST_PRODUCTION.MSBI_PREMI_KE(+)) AND
	         ("EKA"."MST_AGENT"."MSAG_ID" = #kode_agen#) and
	          ( "EKA"."LST_USER_ADMIN"."LAR_ID" = "EKA"."LST_ADDR_REGION"."LAR_ID" ) and  
	         ( "EKA"."LST_REGION"."LAR_ID" = "EKA"."LST_ADDR_REGION"."LAR_ID" ) and  
	         ( "EKA"."LST_REGION"."LCA_ID" = "EKA"."MST_AGENT"."LCA_ID" ) and  
	         ( "EKA"."LST_REGION"."LWK_ID" = "EKA"."MST_AGENT"."LWK_ID" ) and  
	         ( "EKA"."LST_REGION"."LSRG_ID" = "EKA"."MST_AGENT"."LSRG_ID" ) and  
	         ( ( EKA."LST_USER_ADMIN"."LUS_ID" = #id# ) ) and
	         ("EKA"."MST_POLICY"."LSTB_ID" = 1 ) and
			 EKA.MST_PRODUCTION.MSPRO_JN_PROD <![CDATA[<]]> 3
		
	</select>

	<select id="elions.uw.countkomisipertglbayar" resultClass="integer" parameterClass="java.util.HashMap">
		SELECT count("mst_client_new_c"."MCL_FIRST") "jumlah"
	    FROM "EKA"."MST_AGENT",   
	         "EKA"."MST_COMMISSION",   
	         "EKA"."MST_DEDUCT",   
	         "EKA"."MST_POLICY",   
	         "EKA"."MST_INSURED",    
	         EKA.mst_client_new "mst_client_new_c" ,
		 EKA.MST_AGENT_PROD,
		 EKA.MST_PRODUCTION,
		 "EKA"."LST_USER_ADMIN",   
	         "EKA"."LST_ADDR_REGION",   
	         "EKA"."LST_REGION"
	   WHERE ( "EKA"."MST_AGENT"."MSAG_ID" = "EKA"."MST_COMMISSION"."MSAG_ID" ) and  
	         ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_INSURED"."REG_SPAJ" ) and  
	         ( "EKA"."MST_COMMISSION"."REG_SPAJ" = "EKA"."MST_POLICY"."REG_SPAJ" ) and  
	         ( "EKA"."MST_INSURED"."MSTE_INSURED" = "mst_client_new_c"."MCL_ID" ) AND
	         ( EKA.MST_COMMISSION.MSCO_ID = EKA.MST_DEDUCT.MSCO_ID (+)) and  
			(EKA.MST_POLICY.REG_SPAJ=EKA.MST_AGENT_PROD.REG_SPAJ) AND
			(EKA.MST_AGENT_PROD.LSLE_ID=4) AND
			(EKA.MST_COMMISSION.REG_SPAJ =EKA.MST_PRODUCTION.REG_SPAJ(+)) AND
			(EKA.MST_COMMISSION.MSBI_TAHUN_KE = EKA.MST_PRODUCTION.MSBI_TAHUN_KE(+)) AND
			(EKA.MST_COMMISSION.MSBI_PREMI_KE = EKA.MST_PRODUCTION.MSBI_PREMI_KE(+)) AND
	         ("EKA"."MST_AGENT"."MSAG_ID" = #kode_agen#) and
	          ( "EKA"."LST_USER_ADMIN"."LAR_ID" = "EKA"."LST_ADDR_REGION"."LAR_ID" ) and  
	         ( "EKA"."LST_REGION"."LAR_ID" = "EKA"."LST_ADDR_REGION"."LAR_ID" ) and  
	         ( "EKA"."LST_REGION"."LCA_ID" = "EKA"."MST_AGENT"."LCA_ID" ) and  
	         ( "EKA"."LST_REGION"."LWK_ID" = "EKA"."MST_AGENT"."LWK_ID" ) and  
	         ( "EKA"."LST_REGION"."LSRG_ID" = "EKA"."MST_AGENT"."LSRG_ID" ) and  
	         ( ( EKA."LST_USER_ADMIN"."LUS_ID" = #id# ) ) and
	         ("EKA"."MST_POLICY"."LSTB_ID" = 1 ) and
			 EKA.MST_PRODUCTION.MSPRO_JN_PROD <![CDATA[<]]> 3 and
	     (to_char( EKA.MST_COMMISSION.MSCO_PAY_DATE,'yyyymmdd') between #tgl1#  and #tgl2#)
	</select>
	
		<select id="elions.uw.countkomisiperttp" resultClass="integer" parameterClass="java.util.HashMap">
		SELECT count("mst_client_new_c"."MCL_FIRST") "jumlah"
	    FROM "EKA"."MST_AGENT",   
	         "EKA"."MST_COMMISSION",   
	         "EKA"."MST_DEDUCT",   
	         "EKA"."MST_POLICY",   
	         "EKA"."MST_INSURED",    
	         EKA.mst_client_new "mst_client_new_c" ,
		 EKA.MST_AGENT_PROD,
		 EKA.MST_PRODUCTION,
		 "EKA"."LST_USER_ADMIN",   
	         "EKA"."LST_ADDR_REGION",   
	         "EKA"."LST_REGION"
	   WHERE ( "EKA"."MST_AGENT"."MSAG_ID" = "EKA"."MST_COMMISSION"."MSAG_ID" ) and  
	         ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_INSURED"."REG_SPAJ" ) and  
	         ( "EKA"."MST_COMMISSION"."REG_SPAJ" = "EKA"."MST_POLICY"."REG_SPAJ" ) and  
	         ( "EKA"."MST_INSURED"."MSTE_INSURED" = "mst_client_new_c"."MCL_ID" ) AND
	         ( EKA.MST_COMMISSION.MSCO_ID = EKA.MST_DEDUCT.MSCO_ID (+)) and  
			(EKA.MST_POLICY.REG_SPAJ=EKA.MST_AGENT_PROD.REG_SPAJ) AND
			(EKA.MST_AGENT_PROD.LSLE_ID=4) AND
			(EKA.MST_COMMISSION.REG_SPAJ =EKA.MST_PRODUCTION.REG_SPAJ(+)) AND
			(EKA.MST_COMMISSION.MSBI_TAHUN_KE = EKA.MST_PRODUCTION.MSBI_TAHUN_KE(+)) AND
			(EKA.MST_COMMISSION.MSBI_PREMI_KE = EKA.MST_PRODUCTION.MSBI_PREMI_KE(+)) AND
	         ("EKA"."MST_AGENT"."MSAG_ID" = #kode_agen#) and
	          ( "EKA"."LST_USER_ADMIN"."LAR_ID" = "EKA"."LST_ADDR_REGION"."LAR_ID" ) and  
	         ( "EKA"."LST_REGION"."LAR_ID" = "EKA"."LST_ADDR_REGION"."LAR_ID" ) and  
	         ( "EKA"."LST_REGION"."LCA_ID" = "EKA"."MST_AGENT"."LCA_ID" ) and  
	         ( "EKA"."LST_REGION"."LWK_ID" = "EKA"."MST_AGENT"."LWK_ID" ) and  
	         ( "EKA"."LST_REGION"."LSRG_ID" = "EKA"."MST_AGENT"."LSRG_ID" ) and  
	         ( ( EKA."LST_USER_ADMIN"."LUS_ID" = #id# ) ) and
	         ("EKA"."MST_POLICY"."LSTB_ID" = 1 ) and
			 EKA.MST_PRODUCTION.MSPRO_JN_PROD <![CDATA[<]]> 3 and
	     (to_char( EKA.MST_POLICY.MSPO_DATE_TTP,'yyyymmdd') between #tgl1#  and #tgl2#)
	</select>
	
	<select id="elions.uw.countkomisipertglproduksi" resultClass="integer" parameterClass="java.util.HashMap">
		SELECT count("mst_client_new_c"."MCL_FIRST") "jumlah"
	    FROM "EKA"."MST_AGENT",   
	         "EKA"."MST_COMMISSION",   
	         "EKA"."MST_DEDUCT",   
	         "EKA"."MST_POLICY",   
	         "EKA"."MST_INSURED",    
	         EKA.mst_client_new "mst_client_new_c" ,
		 EKA.MST_AGENT_PROD,
		 EKA.MST_PRODUCTION,
		 "EKA"."LST_USER_ADMIN",   
	         "EKA"."LST_ADDR_REGION",   
	         "EKA"."LST_REGION"
	   WHERE ( "EKA"."MST_AGENT"."MSAG_ID" = "EKA"."MST_COMMISSION"."MSAG_ID" ) and  
	         ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_INSURED"."REG_SPAJ" ) and  
	         ( "EKA"."MST_COMMISSION"."REG_SPAJ" = "EKA"."MST_POLICY"."REG_SPAJ" ) and  
	         ( "EKA"."MST_INSURED"."MSTE_INSURED" = "mst_client_new_c"."MCL_ID" ) AND
	         ( EKA.MST_COMMISSION.MSCO_ID = EKA.MST_DEDUCT.MSCO_ID (+)) and  
			(EKA.MST_POLICY.REG_SPAJ=EKA.MST_AGENT_PROD.REG_SPAJ) AND
			(EKA.MST_AGENT_PROD.LSLE_ID=4) AND
			(EKA.MST_COMMISSION.REG_SPAJ =EKA.MST_PRODUCTION.REG_SPAJ(+)) AND
			(EKA.MST_COMMISSION.MSBI_TAHUN_KE = EKA.MST_PRODUCTION.MSBI_TAHUN_KE(+)) AND
			(EKA.MST_COMMISSION.MSBI_PREMI_KE = EKA.MST_PRODUCTION.MSBI_PREMI_KE(+)) AND
	         ("EKA"."MST_AGENT"."MSAG_ID" = #kode_agen#) and
	          ( "EKA"."LST_USER_ADMIN"."LAR_ID" = "EKA"."LST_ADDR_REGION"."LAR_ID" ) and  
	         ( "EKA"."LST_REGION"."LAR_ID" = "EKA"."LST_ADDR_REGION"."LAR_ID" ) and  
	         ( "EKA"."LST_REGION"."LCA_ID" = "EKA"."MST_AGENT"."LCA_ID" ) and  
	         ( "EKA"."LST_REGION"."LWK_ID" = "EKA"."MST_AGENT"."LWK_ID" ) and  
	         ( "EKA"."LST_REGION"."LSRG_ID" = "EKA"."MST_AGENT"."LSRG_ID" ) and  
	         ( ( EKA."LST_USER_ADMIN"."LUS_ID" = #id# ) ) and
	         ("EKA"."MST_POLICY"."LSTB_ID" = 1 ) and
			 EKA.MST_PRODUCTION.MSPRO_JN_PROD <![CDATA[<]]> 3 and
	     (to_char( EKA.MST_PRODUCTION.MSPRO_PROD_DATE,'yyyymmdd') between #tgl1#  and #tgl2#)
	</select>	

	<select id="elions.uw.countproduksiperkodeagen" resultClass="integer" parameterClass="java.util.HashMap">
		SELECT /*+ first_rows */ 
		         count("EKA"."MST_DET_PRODUCTION"."REG_SPAJ") "jumlah"
		    FROM "EKA"."MST_AGENT_PROD",   
		         "EKA"."MST_DET_PRODUCTION",   
		         "EKA"."MST_PRODUCTION",   
		         "EKA"."MST_AGENT",   
				 "EKA"."LST_USER_ADMIN",
				 "EKA"."LST_REGION"
		   WHERE ( "EKA"."MST_AGENT_PROD"."REG_SPAJ" = "EKA"."MST_DET_PRODUCTION"."REG_SPAJ" ) and  
		         ( "EKA"."MST_PRODUCTION"."LSTB_ID" = "EKA"."MST_DET_PRODUCTION"."LSTB_ID" ) and  
		         ( "EKA"."MST_PRODUCTION"."REG_SPAJ" = "EKA"."MST_DET_PRODUCTION"."REG_SPAJ" ) and  
		         ( "EKA"."MST_PRODUCTION"."MSPRO_PROD_KE" = "EKA"."MST_DET_PRODUCTION"."MSPRO_PROD_KE" ) and  
		         ( "EKA"."MST_PRODUCTION"."MSPRO_PROD_DATE" = "EKA"."MST_DET_PRODUCTION"."MSPRO_PROD_DATE" ) and  
		         ( "EKA"."MST_AGENT"."MSAG_ID" = "EKA"."MST_AGENT_PROD"."MSAG_ID" ) and  
		         ( ( EKA."MST_PRODUCTION"."MSPRO_JN_PROD" in (1,3) ) AND  
		         (TO_CHAR(EKA."MST_PRODUCTION"."MSPRO_PROD_DATE",'YYYYMMDD') between #tgl1#  and #tgl2# ) AND  
		         ( EKA."MST_DET_PRODUCTION"."LSBS_ID" <![CDATA[<]]> 300 )  )    and
				 "EKA"."MST_AGENT"."MSAG_ID" =#kode_agen# and
				 ( "EKA"."LST_USER_ADMIN"."LUS_ID"=#id#) AND
		          ("EKA"."LST_USER_ADMIN"."LAR_ID" =  "EKA"."LST_REGION"."LAR_ID") and
				  ("EKA"."LST_REGION"."LCA_ID" = "EKA"."MST_PRODUCTION"."LCA_ID") and
		         ("EKA"."LST_REGION"."LWK_ID" = "EKA"."MST_PRODUCTION"."LWK_ID") and
		         ("EKA"."LST_REGION"."LSRG_ID" = "EKA"."MST_PRODUCTION"."LSRG_ID")
	</select>
	
	<select id="elions.uw.countproduksiperlevel" resultClass="integer" parameterClass="java.util.HashMap">
	SELECT /*+ first_rows */ 
		         count("EKA"."MST_DET_PRODUCTION"."REG_SPAJ") "jumlah"
		    FROM "EKA"."MST_AGENT_PROD",   
		         "EKA"."MST_DET_PRODUCTION",   
		         "EKA"."MST_PRODUCTION",   
		         "EKA"."MST_AGENT",   
				 "EKA"."LST_USER_ADMIN",
				 "EKA"."LST_REGION"
		   WHERE ( "EKA"."MST_AGENT_PROD"."REG_SPAJ" = "EKA"."MST_DET_PRODUCTION"."REG_SPAJ" ) and  
		         ( "EKA"."MST_PRODUCTION"."LSTB_ID" = "EKA"."MST_DET_PRODUCTION"."LSTB_ID" ) and  
		         ( "EKA"."MST_PRODUCTION"."REG_SPAJ" = "EKA"."MST_DET_PRODUCTION"."REG_SPAJ" ) and  
		         ( "EKA"."MST_PRODUCTION"."MSPRO_PROD_KE" = "EKA"."MST_DET_PRODUCTION"."MSPRO_PROD_KE" ) and  
		         ( "EKA"."MST_PRODUCTION"."MSPRO_PROD_DATE" = "EKA"."MST_DET_PRODUCTION"."MSPRO_PROD_DATE" ) and  
		         ( "EKA"."MST_AGENT"."MSAG_ID" = "EKA"."MST_AGENT_PROD"."MSAG_ID" ) and  
		         ( ( EKA."MST_PRODUCTION"."MSPRO_JN_PROD" in (1,3) ) AND  
		         (TO_CHAR(EKA."MST_PRODUCTION"."MSPRO_PROD_DATE",'YYYYMMDD') between #tgl1#  and #tgl2# ) AND  
		         ( EKA."MST_DET_PRODUCTION"."LSBS_ID" <![CDATA[<]]> 300 )  )    and
				 "EKA"."MST_AGENT_PROD"."LSLE_ID" = #level# and
				 ( "EKA"."LST_USER_ADMIN"."LUS_ID"=#id#) AND
		          ("EKA"."LST_USER_ADMIN"."LAR_ID" =  "EKA"."LST_REGION"."LAR_ID") and
				  ("EKA"."LST_REGION"."LCA_ID" = "EKA"."MST_PRODUCTION"."LCA_ID") and
		         ("EKA"."LST_REGION"."LWK_ID" = "EKA"."MST_PRODUCTION"."LWK_ID") and
		         ("EKA"."LST_REGION"."LSRG_ID" = "EKA"."MST_PRODUCTION"."LSRG_ID")
	</select>

	<select id="elions.uw.countproduksipercabang" resultClass="integer" parameterClass="java.util.HashMap">
		SELECT /*+ first_rows */    
         count("EKA"."MST_PRODUCTION"."REG_SPAJ") "jumlah"
	    FROM "EKA"."MST_DET_PRODUCTION",   
	         "EKA"."MST_PRODUCTION",   
	         "EKA"."LST_USER_ADMIN",
			 "EKA"."LST_REGION"
	   WHERE 
         ( "EKA"."MST_PRODUCTION"."LSTB_ID" = "EKA"."MST_DET_PRODUCTION"."LSTB_ID" ) and  
         ( "EKA"."MST_PRODUCTION"."REG_SPAJ" = "EKA"."MST_DET_PRODUCTION"."REG_SPAJ" ) and  
         ( "EKA"."MST_PRODUCTION"."MSPRO_PROD_KE" = "EKA"."MST_DET_PRODUCTION"."MSPRO_PROD_KE" ) and  
         ( "EKA"."MST_PRODUCTION"."MSPRO_PROD_DATE" = "EKA"."MST_DET_PRODUCTION"."MSPRO_PROD_DATE" ) and   
         ( ( EKA."MST_PRODUCTION"."MSPRO_JN_PROD" in (1,3) ) AND  
         (TO_CHAR(EKA."MST_PRODUCTION"."MSPRO_PROD_DATE",'YYYYMMDD') between #tgl1#  and #tgl2# ) AND  
         ( EKA."MST_DET_PRODUCTION"."LSBS_ID" <![CDATA[<]]>  300 )  )    and
		 "EKA"."MST_PRODUCTION"."LCA_ID"=#cabang# and
		 ( "EKA"."LST_USER_ADMIN"."LUS_ID"=#id#) AND
          ("EKA"."LST_USER_ADMIN"."LAR_ID" =  "EKA"."LST_REGION"."LAR_ID") and
		  ("EKA"."LST_REGION"."LCA_ID" = "EKA"."MST_PRODUCTION"."LCA_ID") and
         ("EKA"."LST_REGION"."LWK_ID" = "EKA"."MST_PRODUCTION"."LWK_ID") and
         ("EKA"."LST_REGION"."LSRG_ID" = "EKA"."MST_PRODUCTION"."LSRG_ID")
	</select>
		
		<select id="elions.uw.countproduksipercabang_all" resultClass="integer" parameterClass="java.util.HashMap">
		SELECT /*+ first_rows */    
         count("EKA"."MST_PRODUCTION"."REG_SPAJ") "jumlah"
	    FROM "EKA"."MST_DET_PRODUCTION",   
	         "EKA"."MST_PRODUCTION",   
	         "EKA"."LST_USER_ADMIN",
			 "EKA"."LST_REGION"
	   WHERE 
         ( "EKA"."MST_PRODUCTION"."LSTB_ID" = "EKA"."MST_DET_PRODUCTION"."LSTB_ID" ) and  
         ( "EKA"."MST_PRODUCTION"."REG_SPAJ" = "EKA"."MST_DET_PRODUCTION"."REG_SPAJ" ) and  
         ( "EKA"."MST_PRODUCTION"."MSPRO_PROD_KE" = "EKA"."MST_DET_PRODUCTION"."MSPRO_PROD_KE" ) and  
         ( "EKA"."MST_PRODUCTION"."MSPRO_PROD_DATE" = "EKA"."MST_DET_PRODUCTION"."MSPRO_PROD_DATE" ) and   
         ( ( EKA."MST_PRODUCTION"."MSPRO_JN_PROD" in (1,3) ) AND  
         (TO_CHAR(EKA."MST_PRODUCTION"."MSPRO_PROD_DATE",'YYYYMMDD')  between #tgl1#  and #tgl2# ) AND  
         ( EKA."MST_DET_PRODUCTION"."LSBS_ID" <![CDATA[<]]>  300 )  )    and
		 ( "EKA"."LST_USER_ADMIN"."LUS_ID"=#id#) AND
          ("EKA"."LST_USER_ADMIN"."LAR_ID" =  "EKA"."LST_REGION"."LAR_ID") and
		  ("EKA"."LST_REGION"."LCA_ID" = "EKA"."MST_PRODUCTION"."LCA_ID") and
         ("EKA"."LST_REGION"."LWK_ID" = "EKA"."MST_PRODUCTION"."LWK_ID") and
         ("EKA"."LST_REGION"."LSRG_ID" = "EKA"."MST_PRODUCTION"."LSRG_ID")
	</select>
	
	<select id="elions.uw.ceklevelagen" resultClass="integer" parameterClass="string">
		SELECT EKA.MST_AGENT.LSLE_ID FROM EKA.MST_AGENT WHERE MSAG_ID=#value#
	</select>
	
	<select id="elions.uw.countkomisipercabang" resultClass="integer" parameterClass="java.util.HashMap">
		SELECT count("mst_client_new_c"."MCL_FIRST") "jumlah"
	    FROM "EKA"."MST_AGENT",   
	         "EKA"."MST_COMMISSION",   
	         "EKA"."MST_DEDUCT",   
	         "EKA"."MST_POLICY",   
	         "EKA"."MST_INSURED",    
	         EKA.mst_client_new "mst_client_new_c" ,
		 EKA.MST_AGENT_PROD,
		 EKA.MST_PRODUCTION,
		 "EKA"."LST_USER_ADMIN",   
	         "EKA"."LST_ADDR_REGION",   
	         "EKA"."LST_REGION"
	   WHERE ( "EKA"."MST_AGENT"."MSAG_ID" = "EKA"."MST_COMMISSION"."MSAG_ID" ) and  
	         ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_INSURED"."REG_SPAJ" ) and  
	         ( "EKA"."MST_COMMISSION"."REG_SPAJ" = "EKA"."MST_POLICY"."REG_SPAJ" ) and  
	         ( "EKA"."MST_INSURED"."MSTE_INSURED" = "mst_client_new_c"."MCL_ID" ) AND
	         ( EKA.MST_COMMISSION.MSCO_ID = EKA.MST_DEDUCT.MSCO_ID (+)) and  
			(EKA.MST_POLICY.REG_SPAJ=EKA.MST_AGENT_PROD.REG_SPAJ) AND
			(EKA.MST_AGENT_PROD.LSLE_ID=4) AND
			(EKA.MST_COMMISSION.REG_SPAJ =EKA.MST_PRODUCTION.REG_SPAJ(+)) AND
			(EKA.MST_COMMISSION.MSBI_TAHUN_KE = EKA.MST_PRODUCTION.MSBI_TAHUN_KE(+)) AND
			(EKA.MST_COMMISSION.MSBI_PREMI_KE = EKA.MST_PRODUCTION.MSBI_PREMI_KE(+)) AND
	         ("EKA"."MST_AGENT"."LCA_ID" = #cabang#) and
	          ( "EKA"."LST_USER_ADMIN"."LAR_ID" = "EKA"."LST_ADDR_REGION"."LAR_ID" ) and  
	         ( "EKA"."LST_REGION"."LAR_ID" = "EKA"."LST_ADDR_REGION"."LAR_ID" ) and  
	         ( "EKA"."LST_REGION"."LCA_ID" = "EKA"."MST_AGENT"."LCA_ID" ) and  
	         ( "EKA"."LST_REGION"."LWK_ID" = "EKA"."MST_AGENT"."LWK_ID" ) and  
	         ( "EKA"."LST_REGION"."LSRG_ID" = "EKA"."MST_AGENT"."LSRG_ID" ) and  
	         ( ( EKA."LST_USER_ADMIN"."LUS_ID" = #id#) ) and
	         ("EKA"."MST_POLICY"."LSTB_ID" = 1 ) and
			 EKA.MST_PRODUCTION.MSPRO_JN_PROD <![CDATA[<]]> 3 and
	     (to_char( EKA.MST_COMMISSION.MSCO_PAY_DATE,'yyyymmdd') between #tgl1#  and #tgl2#)
	</select>
	
	<select id="elions.uw.countkomisipercabang_all" resultClass="integer" parameterClass="java.util.HashMap">
		SELECT count("mst_client_new_c"."MCL_FIRST") "jumlah"
	    FROM "EKA"."MST_AGENT",   
	         "EKA"."MST_COMMISSION",   
	         "EKA"."MST_DEDUCT",   
	         "EKA"."MST_POLICY",   
	         "EKA"."MST_INSURED",    
	         EKA.mst_client_new "mst_client_new_c" ,
		 EKA.MST_AGENT_PROD,
		 EKA.MST_PRODUCTION,
		 "EKA"."LST_USER_ADMIN",   
	         "EKA"."LST_ADDR_REGION",   
	         "EKA"."LST_REGION"
	   WHERE ( "EKA"."MST_AGENT"."MSAG_ID" = "EKA"."MST_COMMISSION"."MSAG_ID" ) and  
	         ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_INSURED"."REG_SPAJ" ) and  
	         ( "EKA"."MST_COMMISSION"."REG_SPAJ" = "EKA"."MST_POLICY"."REG_SPAJ" ) and  
	         ( "EKA"."MST_INSURED"."MSTE_INSURED" = "mst_client_new_c"."MCL_ID" ) AND
	         ( EKA.MST_COMMISSION.MSCO_ID = EKA.MST_DEDUCT.MSCO_ID (+)) and  
			(EKA.MST_POLICY.REG_SPAJ=EKA.MST_AGENT_PROD.REG_SPAJ) AND
			(EKA.MST_AGENT_PROD.LSLE_ID=4) AND
			(EKA.MST_COMMISSION.REG_SPAJ =EKA.MST_PRODUCTION.REG_SPAJ(+)) AND
			(EKA.MST_COMMISSION.MSBI_TAHUN_KE = EKA.MST_PRODUCTION.MSBI_TAHUN_KE(+)) AND
			(EKA.MST_COMMISSION.MSBI_PREMI_KE = EKA.MST_PRODUCTION.MSBI_PREMI_KE(+)) AND
	          ( "EKA"."LST_USER_ADMIN"."LAR_ID" = "EKA"."LST_ADDR_REGION"."LAR_ID" ) and  
	         ( "EKA"."LST_REGION"."LAR_ID" = "EKA"."LST_ADDR_REGION"."LAR_ID" ) and  
	         ( "EKA"."LST_REGION"."LCA_ID" = "EKA"."MST_AGENT"."LCA_ID" ) and  
	         ( "EKA"."LST_REGION"."LWK_ID" = "EKA"."MST_AGENT"."LWK_ID" ) and  
	         ( "EKA"."LST_REGION"."LSRG_ID" = "EKA"."MST_AGENT"."LSRG_ID" ) and  
	         ( ( EKA."LST_USER_ADMIN"."LUS_ID" = #id#) ) and
	         ("EKA"."MST_POLICY"."LSTB_ID" = 1 ) and
			 EKA.MST_PRODUCTION.MSPRO_JN_PROD <![CDATA[<]]> 3 and
	     (to_char( EKA.MST_COMMISSION.MSCO_PAY_DATE,'yyyymmdd') between #tgl1#  and #tgl2#)
	</select>	

	<select id="elions.uw.selectAllMstInsured" resultClass="java.util.HashMap" parameterClass="string">
		select * from eka.mst_insured where reg_spaj=rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.uw.selectAllMstSimultaneous" resultClass="java.util.HashMap" parameterClass="string">
		select * from eka.mst_simultaneous where reg_spaj=rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.uw.selectAllMstDetUlink" resultClass="com.ekalife.elions.model.DetUlink" parameterClass="java.util.HashMap">
		select * 
		from eka.mst_det_ulink 
		where reg_spaj=rpad(replace(#spaj#,'.'),11,' ')
				and mdu_persen !=0
		 		<isNotNull property="lji_id">
		 			and lji_id=#lji_id#
		 		</isNotNull>
		 	ORDER BY lji_id ASC, mu_ke ASC
	</select>

	<select id="elions.uw.selectAllMstTransUlink" resultClass="com.ekalife.elions.model.TransUlink" parameterClass="string">
		select * from eka.mst_trans_ulink where reg_spaj=rpad(replace(#value#,'.'),11,' ') ORDER BY lji_id ASC, mu_ke ASC
	</select>
	
	<select id="elions.uw.selectJnsLinkAndNab" resultClass="com.ekalife.elions.model.TransUlink" parameterClass="java.util.HashMap">
		SELECT a.lji_id,a.mu_ke,b.lji_invest,a.mtu_nab FROM eka.mst_trans_ulink a,eka.lst_jenis_invest b WHERE a.lji_id=b.lji_id AND a.reg_spaj=#spaj# 
		<isNotNull property="mu_ke">
			AND a.mu_ke=#mu_ke#
		</isNotNull>
	</select>

	<select id="elions.uw.countsummaryinput" resultClass="integer" parameterClass="java.util.HashMap">
		SELECT count("EKA"."MST_POLICY"."REG_SPAJ") jumlah
		    FROM "EKA"."MST_POLICY",
		         "EKA"."LST_USER" 
		   WHERE 
		        ( "EKA"."MST_POLICY"."LUS_ID" = "EKA"."LST_USER"."LUS_ID" ) and
		         ( "EKA"."MST_POLICY"."LSTB_ID" =1 )AND
		  (to_char("EKA"."MST_POLICY"."MSPO_INPUT_DATE",'YYYYMMDD') between #tgl1#  and #tgl2#) and
			( "EKA"."LST_USER"."LUS_ID" = #id#) 
	</select>	
	
		<select id="elions.uw.countsummaryinputguthrie" resultClass="integer" parameterClass="java.util.HashMap">
		SELECT count("EKA"."MST_POLICY"."REG_SPAJ") jumlah
		    FROM "EKA"."MST_POLICY",
			"EKA"."MST_INSURED"
		   WHERE 
		         ( "EKA"."MST_POLICY"."LSTB_ID" =1 )AND
		  (to_char("EKA"."MST_POLICY"."MSPO_INPUT_DATE",'YYYYMMDD') between #tgl1# and #tgl2#) AND
		  ("EKA"."MST_INSURED"."REG_SPAJ" = "EKA"."MST_POLICY"."REG_SPAJ") AND
		  ("EKA"."MST_INSURED"."MSTE_FLAG_GUTHRIE" = 1) 
	</select>
	
	<select id="elions.uw.selectMstProductInsuredExtra" resultClass="com.ekalife.elions.model.Product" parameterClass="string">
		select * from eka.mst_product_insured where reg_spaj=rpad(replace(#value#,'.'),11,' ') and lsbs_id <![CDATA[>=]]>  900
	</select>	
	
	<select id="elions.uw.countagenbonus" resultClass="integer" parameterClass="java.util.HashMap">
			SELECT   count(*) jumlah
			 FROM    "EKA"."MST_AGENT_BONUS" ,
			    	 "EKA"."LST_TYPE_BONUS",
			    	 "EKA"."MST_AGENT",
			    	 "EKA"."MST_CLIENT_NEW",
			    	  "EKA"."LST_USER_ADMIN",   
			         "EKA"."LST_ADDR_REGION",   
			         "EKA"."LST_REGION"
			 WHERE   ("EKA"."MST_AGENT"."MSAG_ID" = "EKA"."MST_AGENT_BONUS"."MSAG_ID" ) AND
			 	  ("EKA"."MST_AGENT"."MCL_ID" = "EKA"."MST_CLIENT_NEW"."MCL_ID" )AND
			 	 ("EKA"."MST_AGENT_BONUS"."LSTBO_ID" = "EKA"."LST_TYPE_BONUS"."LSTBO_ID") AND
			 	 ("EKA"."MST_AGENT_BONUS"."MSAB_PAY_DATE" is not null ) and 
			         ("EKA"."MST_AGENT_BONUS"."LSTB_ID" = 1 ) and
			 	 ("EKA"."MST_AGENT_BONUS"."MSAG_ID" = #kode_agen#) and 
			 	 ( to_char(EKA."MST_AGENT_BONUS"."MSAB_PAY_DATE",'yyyymmdd') between #tgl1# and #tgl2#) AND  
			          ( "EKA"."LST_USER_ADMIN"."LAR_ID" = "EKA"."LST_ADDR_REGION"."LAR_ID" ) and  
			         ( "EKA"."LST_REGION"."LAR_ID" = "EKA"."LST_ADDR_REGION"."LAR_ID" ) and  
			         ( "EKA"."LST_REGION"."LCA_ID" = "EKA"."MST_AGENT"."LCA_ID" ) and  
			         ( "EKA"."LST_REGION"."LWK_ID" = "EKA"."MST_AGENT"."LWK_ID" ) and  
			         ( "EKA"."LST_REGION"."LSRG_ID" = "EKA"."MST_AGENT"."LSRG_ID" ) and  
			         ( ( EKA."LST_USER_ADMIN"."LUS_ID" =#id#) ) 
			ORDER BY "EKA"."MST_AGENT_BONUS"."MSAG_ID" ASC ,
				    "EKA"."MST_AGENT_BONUS"."MSAB_PAY_DATE" ASC
	</select>	
	
	<select id="elions.uw.selectAllRiderCheckReas" resultClass="com.ekalife.elions.model.Temp" parameterClass="java.util.HashMap">
		SELECT a.reg_spaj, a.mste_age, a.mste_medical, b.lsbs_id, b.lsdbs_number,
		       b.lku_id, b.mspr_beg_date, b.mspr_tsi
		  FROM eka.mst_insured a,
		       (SELECT *
		          FROM eka.mst_product_insured
		         WHERE mspr_beg_date >= to_date(#begDate#,'dd/mm/yyyy')
		           AND lsbs_id <![CDATA[>=]]> #lsbsId1#
		           AND lsbs_id <![CDATA[<=]]> #lsbsId2#) b
		 WHERE a.reg_spaj = b.reg_spaj  AND
		 	   a.lssa_id=5
	</select>	
	
	<select id="elions.uw.countsoftcopy" resultClass="integer" parameterClass="java.util.HashMap">
		SELECT /*+ first_rows */ count(*) jumlah
    FROM "EKA"."MST_AGENT_PROD",   
         "EKA"."MST_POLICY",   
         "EKA"."MST_PRODUCT_INSURED", 
         "EKA"."MST_INSURED", 
		 "EKA"."MST_AGENT"
   WHERE 
   ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_AGENT_PROD"."REG_SPAJ" ) and  
         ( "EKA"."MST_POLICY"."LSTB_ID" = "EKA"."MST_AGENT_PROD"."LSTB_ID" ) and  
         ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_INSURED"."REG_SPAJ" ) and  
         ( "EKA"."MST_INSURED"."REG_SPAJ" = "EKA"."MST_PRODUCT_INSURED"."REG_SPAJ" ) and  
         ( "EKA"."MST_INSURED"."MSTE_INSURED_NO" = "EKA"."MST_PRODUCT_INSURED"."MSTE_INSURED_NO" ) and 
         ( ( EKA."MST_AGENT_PROD"."LSTB_ID" = 1 ) AND  
         ( EKA."MST_PRODUCT_INSURED"."LSBS_ID"  <![CDATA[<]]> 300 ) AND  
         ( EKA."MST_AGENT_PROD"."LEV_COMM" = 4 ) ) and 
		 ( "EKA"."MST_AGENT_PROD"."MSAG_ID" = "EKA"."MST_AGENT"."MSAG_ID" ) and
		 (to_char ("EKA"."MST_INSURED"."MSTE_TGL_KIRIM_POLIS",'YYYYMMDD') between #tgl1# and #tgl2#)
		</select>
	
<select id="elions.uw.countmonitorpolis" resultClass="integer" parameterClass="java.util.HashMap">
			SELECT count(*) jumlah
	    FROM "EKA"."MST_INSURED",   
	         "EKA"."MST_POLICY"
	   WHERE ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_INSURED"."REG_SPAJ" ) and  
			 (to_char("EKA"."MST_INSURED"."MSTE_TGL_TERIMA_SPAJ",'YYYYMMDD') between #tgl1# and #tgl2# )
	           and "EKA"."MST_POLICY"."LSTB_ID" = 1
	</select>	
	
	<select id="elions.uw.selectAllRiderCheckReasDetail" resultClass="com.ekalife.elions.model.Temp" parameterClass="com.ekalife.elions.model.Temp">
			SELECT a.mspo_policy_no, c.mcl_first, d.lsdbs_name
			FROM eka.mst_policy a,
				 		  eka.mst_insured b,
						  eka.mst_client_new c,
						  eka.lst_det_bisnis d
			WHERE a.reg_spaj = b.reg_spaj AND
				  			 b.mste_insured=c.mcl_id AND
							 d.lsbs_id=#lsbs_id# AND
							 d.lsdbs_number=#lsdbs_number# AND
							 a.reg_spaj=#reg_spaj#
	</select>	

	<select id="elions.uw.countservicepolis" resultClass="integer" parameterClass="java.util.HashMap">
		SELECT count(*) jumlah
	    FROM "EKA"."MST_INSURED",   
	         "EKA"."MST_POLICY"
	   WHERE ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_INSURED"."REG_SPAJ" ) and  
			 (to_char("EKA"."MST_INSURED"."MSTE_TGL_AKSEP",'YYYYMMDD') between #tgl1# and #tgl2#)
	           and "EKA"."MST_POLICY"."LSTB_ID" = 1
	</select>	

	<resultMap id="elions.uw.kode_bea_meterai1" class="java.util.HashMap">	
		<result property="MSTM_KODE" column="MSTM_KODE" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                            
		<result property="MSTM_KODE_DIRJEN" column="MSTM_KODE_DIRJEN" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                              
		<result property="MSTM_BULAN" column="MSTM_BULAN" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                          
		<result property="MSTM_SALDO_AWAL" column="MSTM_SALDO_AWAL" javaType="int" jdbcType="NUMBER" />                                                                                                                                                 
		<result property="MSTM_SALDO_AKHIR" column="MSTM_SALDO_AKHIR" javaType="int" jdbcType="NUMBER" />                                                                                                                                               
		<result property="MSTM_CREATE_DT" column="MSTM_CREATE_DT" javaType="date" jdbcType="DATE" />                                                                                                                                                    
		<result property="MSTM_LUS_ID" column="MSTM_LUS_ID" javaType="int" jdbcType="NUMBER" />  
	</resultMap>

	<select id="elions.uw.countbea_perproduk" resultClass="integer" parameterClass="java.util.HashMap">
			SELECT   COUNT (eka.mst_product_insured.reg_spaj) jumlah
	    FROM eka.mst_stamp_hist, eka.mst_product_insured
	   WHERE eka.mst_stamp_hist.msth_ref_no = eka.mst_product_insured.reg_spaj
	     AND eka.mst_product_insured.lsbs_id <![CDATA[<]]>300
	     AND (TO_CHAR (eka.mst_stamp_hist.msth_tgl_bayar, 'yyyymmdd') BETWEEN  #tgl1# and #tgl2#)
	</select>

	<select id="elions.uw.kode_bea_meterai" resultMap="elions.uw.kode_bea_meterai1" parameterClass="java.util.HashMap">
		select mstm_kode ,mstm_kode_dirjen, mstm_bulan,mstm_saldo_awal,mstm_saldo_akhir,mstm_create_dt, mstm_lus_id
		from eka.mst_stamp 
		order by mstm_kode desc
	</select>

	<select id="elions.uw.count_kode_bea_meterai" resultClass="integer" parameterClass="string">
		select count(mstm_kode) jumlah 
		from eka.mst_stamp 
		where mstm_bulan =#value#
	</select>
	
	<select id="elions.uw.bulan_stamp" resultClass="double" parameterClass="string">
		select mstm_saldo_akhir
		from eka.mst_stamp 
		where mstm_bulan =#value#
	</select>	

	<select id="elions.uw.stamp_sekarang" resultClass="java.util.HashMap">
		select max(mstm_saldo_awal) mstm_saldo_awal,
		max(mstm_saldo_akhir) mstm_saldo_akhir,
		concat(concat(SUBSTR(mstm_bulan,5,2),'/'),SUBSTR(mstm_bulan,1,4)) mstm_bulan
		from eka.mst_stamp 
		where mstm_bulan = (select max(a.mstm_bulan) from eka.mst_stamp a)
		group by concat(concat(SUBSTR(mstm_bulan,5,2),'/'),SUBSTR(mstm_bulan,1,4))
	</select>
	
	<select id="elions.uw.kode_stamp" resultClass="string" parameterClass="string">
		select mstm_bulan
		from eka.mst_stamp 
		where mstm_kode =#value#
	</select>
	<select id="elions.uw.selectAllRiderCheckReasNew" resultClass="com.ekalife.elions.model.Temp" parameterClass="java.util.HashMap">
		 SELECT c.mspo_policy_no, a.reg_spaj, c.mspo_policy_holder, e.mcl_first mcl_first_t,
		       e.mspe_sex mspe_sex_t, e.mspe_date_birth mspe_date_birth_t, c.mspo_age, b.mste_age, a.mspr_beg_date,
		       a.mspr_end_date, c.mspo_ins_period, c.mspo_pay_period, b.mste_medical,
		       a.mspr_class, a.lku_id, f.lsbs_id AS lsbs_id1, a.lsbs_id AS lsbs_id2,
		       eka.f_lsdbs(a.reg_spaj, a.lsbs_id, a.lsdbs_number) lsdbs_name, a.mspr_tsi, b.mste_reas, g.lscb_pay_mode
		FROM eka.mst_product_insured a,
			 		  eka.mst_insured  b,
					  eka.mst_policy c,
					  eka.lst_det_bisnis d,
					  eka.mst_client_new e,
					  (SELECT  reg_spaj,lsbs_id
											          FROM eka.mst_product_insured
											         WHERE mspr_beg_date <![CDATA[>=]]>TO_DATE(#beg_date#,'dd/mm/yyyy')  and mspr_beg_date <![CDATA[<=]]>TO_DATE(#end_date#,'dd/mm/yyyy') AND lsbs_id<![CDATA[<]]>300 AND
													 	   			   lsbs_id $unitlink$)f,
					eka.lst_pay_mode g													 	   			   
		WHERE a.reg_spaj=f.reg_spaj
						AND a.reg_spaj=b.reg_spaj 
						AND a.reg_spaj=c.reg_spaj 
						AND a.lsbs_id=d.lsbs_id 
						AND a.lsdbs_number=d.lsdbs_number
						AND b.mste_insured=e.mcl_id
						AND ((b.mste_tgl_aksep <![CDATA[>=]]>  TO_DATE(#beg_date_time#,'dd/mm/yyyy hh24:mi:ss')
						AND b.mste_tgl_aksep <![CDATA[<=]]> TO_DATE(#end_date_time#,'dd/mm/yyyy hh24:mi.ss'))OR b.mste_tgl_aksep IS NULL)
						AND b.lssa_id=5
						AND c.lscb_id=g.lscb_id
						ORDER BY a.reg_Spaj ASC,a.lsbs_id ASC
	</select>		
	
	<select id="elions.uw.detil_kode_stamp"  resultClass="com.ekalife.elions.model.Stamp" parameterClass="string">
		select mstm_kode ,mstm_kode_dirjen, mstm_bulan,mstm_saldo_awal,mstm_saldo_akhir,mstm_create_dt, mstm_lus_id
		from eka.mst_stamp 
		where mstm_kode = #value#
		order by mstm_kode
	</select>		

	<select id="elions.uw.selectMstPositionSPajMspsDesc"  resultClass="string" parameterClass="java.util.HashMap">
			SELECT distinct SUBSTR (msps_desc,
		               INSTR (msps_desc, '(') + 1,
		               INSTR (msps_desc, ')') - (INSTR (msps_desc, '(') + 1)
		              )
		  FROM eka.mst_position_spaj
		 WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ')AND msps_desc $ket$
	</select>
	
	<select id="elions.uw.selectMstPositionSpajOtorisasi"  resultClass="int" parameterClass="java.util.HashMap">
			SELECT count(msps_desc)
		  FROM eka.mst_position_spaj
		 WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ')AND msps_desc $ket$
	</select>		

	
	<select id="elions.uw.selectLstJnDeduct" resultClass="id.co.sinarmaslife.std.model.vo.DropDown" >
		select lsjd_id key, lsjd_jenis value from eka.lst_jn_deduct
	</select>
		
	<select id="elions.uw.selectMstDeduct" resultClass="com.ekalife.elions.model.Deduct" parameterClass="java.util.HashMap" >
		select msco_id, msdd_number, lsjd_id, 
			   msdd_date, msdd_deduct, msdd_tax, 
			   msdd_desc, lus_id, lsbs_id, 
			   lsdbs_number, nvl(pot_upp,0) pot_upp, nvl(pot_biaya,0) pot_biaya, 
			   pot_desc, pot_spaj, nvl(pot_extra,0) pot_extra
	 	from eka.mst_deduct where msco_id=rpad(replace(#msco_id#,'.'),12,' ') and msdd_number=#msdd_number#
	</select>
	
	<select id="elions.uw.selectLstBisnis" resultClass="id.co.sinarmaslife.std.model.vo.DropDown" >
		SELECT   lsbs_id KEY, lsbs_name VALUE
	    FROM eka.lst_bisnis
	    WHERE lsbs_active = 1 AND lsbs_id <![CDATA[<]]> 300
		ORDER BY lsbs_name ASC
	</select>

	<select id="elions.uw.selectLstDetBisnis" resultClass="id.co.sinarmaslife.std.model.vo.DropDown" parameterClass="int" >
		SELECT lsdbs_number KEY, lsdbs_name VALUE
	  	FROM eka.lst_det_bisnis
		WHERE lsbs_id = #lsbs_id#
	</select>	

	<select id="elions.uw.selectLstDetBisnisNamaProduk" resultClass="string" parameterClass="java.util.HashMap" >
		SELECT lsdbs_name
		  FROM eka.lst_det_bisnis
		 WHERE lsbs_id = #lsbs_id# AND lsdbs_number = #lsdbs_number#
	</select>	

	<select id="elions.uw.selectMstCommissionMscoId" resultClass="string" parameterClass="java.util.HashMap" >
		SELECT msco_id
		  FROM eka.mst_commission
		 WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
			   AND msbi_tahun_ke = #tahun_ke#
			   AND msbi_premi_ke = #premi_ke#
			   AND lev_comm = #lev_comm#
	</select>
	
	<select id="elions.uw.selectMstInsuredMsteFlagKomisi" resultClass="int" parameterClass="string" >
		SELECT mste_flag_komisi 
			FROM eka.mst_insured WHERE reg_spaj=rpad(replace(#spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectPolicy_Agent_Product" resultMap="elions.uw.selectPolicy_Agent_Product.result" parameterClass="string" >
		 SELECT LCA_ID,LSBS_ID,MSAG_ID  FROM eka.mst_policy a,
						 eka.mst_agent_prod b,
						 eka.mst_product_insured c
						 WHERE a.reg_spaj=b.reg_spaj AND
						 	   a.reg_spaj = c.reg_spaj AND
							   b.lstb_id=1 AND 
							   b.lsle_id=4 AND 
							   c.lsbs_id <![CDATA[<]]>  300 AND
							   a.reg_spaj=rpad(replace(#spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectLstPayMode" resultClass="string" parameterClass="int" >
		select lscb_pay_mode from eka.lst_pay_Mode where lscb_id =#value#
	</select>
	
	<select id="elions.uw.jumlahkematianbayar" resultClass="int" parameterClass="java.util.HashMap">
			SELECT count(DISTINCT  "EKA"."MST_POLICY"."REG_SPAJ") jumlah
		    FROM EKA."MST_CLIENT_NEW" "MST_CLIENT_NEW_A",   
		         "EKA"."MST_INSURED",   
		         "EKA"."MST_CLAIM",   
		         "EKA"."MST_POLICY",   
		         "EKA"."LST_WAKIL",   
		         EKA."MST_CLIENT_NEW" "MST_CLIENT_NEW_B",   
		         "EKA"."MST_AGENT",   
		         "EKA"."MST_AGENT_PROD",   
		         "EKA"."MST_PERSON",   
		         "EKA"."MST_DET_CLAIM",   
		         "EKA"."MST_BAYAR_CLAIM",   
		         "EKA"."MST_REINS_PRODUCT",   
		         "EKA"."ID_STAT_ACP",
		         "EKA"."LST_REGION",
		         "EKA"."LST_USER_ADMIN",
		         "EKA"."LST_USER"    
		   WHERE ( EKA.MST_AGENT_PROD.REG_SPAJ (+) = EKA.MST_POLICY.REG_SPAJ) and  
		         ( EKA.MST_CLAIM.REG_SPAJ = EKA.MST_REINS_PRODUCT.REG_SPAJ (+)) and  
		         ( EKA.MST_CLAIM.MSTE_INSURED_NO = EKA.MST_REINS_PRODUCT.MSTE_INSURED_NO (+)) and  
		         ( "MST_CLIENT_NEW_B"."MCL_ID" = "EKA"."MST_AGENT"."MCL_ID" ) and  
		         ( "EKA"."MST_AGENT_PROD"."MSAG_ID" = "EKA"."MST_AGENT"."MSAG_ID" ) and  
		         ( "EKA"."MST_CLAIM"."REG_SPAJ" = "EKA"."MST_INSURED"."REG_SPAJ" ) and  
		         ( "EKA"."MST_CLAIM"."MSTE_INSURED_NO" = "EKA"."MST_INSURED"."MSTE_INSURED_NO" ) and  
		         ( "EKA"."MST_CLAIM"."REG_SPAJ" = "EKA"."MST_POLICY"."REG_SPAJ" ) and  
		         ( "EKA"."MST_POLICY"."LCA_ID" = "EKA"."LST_WAKIL"."LCA_ID" ) and  
		         ( "EKA"."MST_POLICY"."LWK_ID" = "EKA"."LST_WAKIL"."LWK_ID" ) and  
		         ( "EKA"."MST_CLAIM"."MSCL_CLIENT_ID" = "MST_CLIENT_NEW_A"."MCL_ID" ) and  
		         ( "EKA"."MST_CLAIM"."MSCL_CLIENT_ID" = "EKA"."MST_PERSON"."MCL_ID" ) and  
		         ( "EKA"."MST_CLAIM"."REG_SPAJ" = "EKA"."MST_DET_CLAIM"."REG_SPAJ" ) and  
		         ( "EKA"."MST_CLAIM"."MSTE_INSURED_NO" = "EKA"."MST_DET_CLAIM"."MSTE_INSURED_NO" ) and  
		         ( "EKA"."MST_CLAIM"."REG_SPAJ" = "EKA"."MST_BAYAR_CLAIM"."REG_SPAJ" ) and  
		         ( "EKA"."MST_CLAIM"."MSTE_INSURED_NO" = "EKA"."MST_BAYAR_CLAIM"."MSTE_INSURED_NO" ) and  
		         ( "EKA"."MST_CLAIM"."ST_ACP" = "EKA"."ID_STAT_ACP"."ST_ACP" ) and  
		         ( "EKA"."MST_POLICY"."LCA_ID" = "EKA"."LST_REGION"."LCA_ID") and
		         ( "EKA"."MST_POLICY"."LWK_ID" = "EKA"."LST_REGION"."LWK_ID") and
		         ( "EKA"."MST_POLICY"."LSRG_ID" = "EKA"."LST_REGION"."LSRG_ID") and  
		         ( "EKA"."LST_REGION"."LAR_ID" = "EKA"."LST_USER_ADMIN"."LAR_ID") and
		         ( "EKA"."LST_USER_ADMIN"."LUS_ID" = "EKA"."LST_USER"."LUS_ID") and
		         ( "EKA"."LST_USER"."LUS_ID" = #lus_id#) and
		         ( ( EKA."MST_POLICY"."LSTB_ID" = #lstb_id#) AND  
		         ( to_char(EKA."MST_CLAIM"."MSCL_TGL_CLAIM",'YYYYMMDD') between #tgl1# and #tgl2# ) )   and
		         ("EKA"."ID_STAT_ACP"."ST_ACP" <![CDATA[<>]]>1) 
		ORDER BY "EKA"."MST_CLAIM"."MSCL_TGL_CLAIM",
		"EKA"."MST_POLICY"."MSPO_POLICY_NO" ASC
	</select>

	<select id="elions.uw.jumlahkematianpending" resultClass="int" parameterClass="java.util.HashMap">
			SELECT count(DISTINCT  "EKA"."MST_POLICY"."REG_SPAJ" ) jumlah
		    FROM EKA."MST_CLIENT_NEW" "MST_CLIENT_NEW_A",   
		         "EKA"."MST_INSURED",   
		         "EKA"."MST_CLAIM",   
		         "EKA"."MST_POLICY",   
		         "EKA"."LST_WAKIL",   
		         EKA."MST_CLIENT_NEW" "MST_CLIENT_NEW_B",   
		         "EKA"."MST_AGENT",   
		         "EKA"."MST_AGENT_PROD",   
		         "EKA"."MST_PERSON",   
		         "EKA"."MST_DET_CLAIM",   
		         "EKA"."MST_BAYAR_CLAIM",   
		         "EKA"."MST_REINS_PRODUCT",   
		         "EKA"."ID_STAT_ACP",
		         "EKA"."LST_REGION",
		         "EKA"."LST_USER_ADMIN",
		         "EKA"."LST_USER"  
		   WHERE ( EKA.MST_AGENT_PROD.REG_SPAJ (+) = EKA.MST_POLICY.REG_SPAJ) and  
		         ( EKA.MST_CLAIM.REG_SPAJ = EKA.MST_REINS_PRODUCT.REG_SPAJ (+)) and  
		         ( EKA.MST_CLAIM.MSTE_INSURED_NO = EKA.MST_REINS_PRODUCT.MSTE_INSURED_NO (+)) and  
		         ( "MST_CLIENT_NEW_B"."MCL_ID" = "EKA"."MST_AGENT"."MCL_ID" ) and  
		         ( "EKA"."MST_AGENT_PROD"."MSAG_ID" = "EKA"."MST_AGENT"."MSAG_ID" ) and  
		         ( "EKA"."MST_CLAIM"."REG_SPAJ" = "EKA"."MST_INSURED"."REG_SPAJ" ) and  
		         ( "EKA"."MST_CLAIM"."MSTE_INSURED_NO" = "EKA"."MST_INSURED"."MSTE_INSURED_NO" ) and  
		         ( "EKA"."MST_CLAIM"."REG_SPAJ" = "EKA"."MST_POLICY"."REG_SPAJ" ) and  
		         ( "EKA"."MST_POLICY"."LCA_ID" = "EKA"."LST_WAKIL"."LCA_ID" ) and  
		         ( "EKA"."MST_POLICY"."LWK_ID" = "EKA"."LST_WAKIL"."LWK_ID" ) and  
		         ( "EKA"."MST_CLAIM"."MSCL_CLIENT_ID" = "MST_CLIENT_NEW_A"."MCL_ID" ) and  
		         ( "EKA"."MST_CLAIM"."MSCL_CLIENT_ID" = "EKA"."MST_PERSON"."MCL_ID" ) and  
		         ( "EKA"."MST_CLAIM"."REG_SPAJ" = "EKA"."MST_DET_CLAIM"."REG_SPAJ" ) and  
		         ( "EKA"."MST_CLAIM"."MSTE_INSURED_NO" = "EKA"."MST_DET_CLAIM"."MSTE_INSURED_NO" ) and  
		         ( "EKA"."MST_CLAIM"."REG_SPAJ" = "EKA"."MST_BAYAR_CLAIM"."REG_SPAJ" ) and  
		         ( "EKA"."MST_CLAIM"."MSTE_INSURED_NO" = "EKA"."MST_BAYAR_CLAIM"."MSTE_INSURED_NO" ) and  
		         ( "EKA"."MST_CLAIM"."ST_ACP" = "EKA"."ID_STAT_ACP"."ST_ACP" ) and  
		         ( "EKA"."MST_POLICY"."LCA_ID" = "EKA"."LST_REGION"."LCA_ID") and
		         ( "EKA"."MST_POLICY"."LWK_ID" = "EKA"."LST_REGION"."LWK_ID") and
		         ( "EKA"."MST_POLICY"."LSRG_ID" = "EKA"."LST_REGION"."LSRG_ID") and  
		         ( "EKA"."LST_REGION"."LAR_ID" = "EKA"."LST_USER_ADMIN"."LAR_ID") and
		         ( "EKA"."LST_USER_ADMIN"."LUS_ID" = "EKA"."LST_USER"."LUS_ID") and
		         ( "EKA"."LST_USER"."LUS_ID" = #lus_id#) and
		         ( ( EKA."MST_POLICY"."LSTB_ID" =#lstb_id# ) AND  
		         ( to_char(EKA."MST_CLAIM"."MSCL_TGL_CLAIM",'YYYYMMDD') between #tgl1# and #tgl2# ) )   and
		         ("EKA"."ID_STAT_ACP"."ST_ACP" =1) 
		ORDER BY "EKA"."MST_CLAIM"."MSCL_TGL_CLAIM",
		"EKA"."MST_POLICY"."MSPO_POLICY_NO" ASC
	</select>
	
	<select id="elions.uw.jumlahkesehatan" resultClass="int" parameterClass="java.util.HashMap">
		SELECT count("EKA"."MST_PRODUCT_INSURED"."REG_SPAJ") jumlah
	    FROM "EKA"."ID_MST_CLM",   
	         "EKA"."ID_STAT_ACP",   
	         "EKA"."ID_TRX_CLMDTL",   
	         "EKA"."MST_POLICY",   
	         "EKA"."MST_CLIENT",   
	         "EKA"."MST_PERSON",   
	         "EKA"."LST_CABANG",   
	         "EKA"."MST_PRODUCT_INSURED",   
	         "EKA"."LST_KURS",   
	         "EKA"."MST_INSURED",
	         "EKA"."LST_REGION",
	         "EKA"."LST_USER_ADMIN",
	         "EKA"."LST_USER"   
	   WHERE ( EKA.MST_POLICY.LCA_ID = EKA.LST_CABANG.LCA_ID (+)) and  
	         ( "EKA"."ID_STAT_ACP"."ST_ACP" = "EKA"."ID_MST_CLM"."ST_ACP" ) and  
	         ( "EKA"."ID_TRX_CLMDTL"."REGCLAIM" = "EKA"."ID_MST_CLM"."REGCLAIM" ) and  
	         ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."ID_MST_CLM"."REGSPAJ" ) and  
	         ( "EKA"."ID_MST_CLM"."MSTE_INSURED" = "EKA"."MST_CLIENT"."MCL_ID" ) and  
	         ( "EKA"."MST_CLIENT"."MCL_ID" = "EKA"."MST_PERSON"."MCL_ID" ) and  
	         ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_PRODUCT_INSURED"."REG_SPAJ" ) and  
	         ( "EKA"."LST_KURS"."LKU_ID" = "EKA"."MST_POLICY"."LKU_ID" ) and  
	         ( "EKA"."MST_INSURED"."REG_SPAJ" = "EKA"."MST_PRODUCT_INSURED"."REG_SPAJ" ) and  
	         ( "EKA"."MST_POLICY"."LCA_ID" = "EKA"."LST_REGION"."LCA_ID") and
	         ( "EKA"."MST_POLICY"."LWK_ID" = "EKA"."LST_REGION"."LWK_ID") and
	         ( "EKA"."MST_POLICY"."LSRG_ID" = "EKA"."LST_REGION"."LSRG_ID") and
	         ( "EKA"."LST_REGION"."LAR_ID" = "EKA"."LST_USER_ADMIN"."LAR_ID") and
	         ( "EKA"."LST_USER_ADMIN"."LUS_ID" = "EKA"."LST_USER"."LUS_ID") and
	         ( "EKA"."LST_USER"."LUS_ID" = #lus_id#) and
	         ( to_char( EKA."ID_MST_CLM"."REGAPLDATE",'YYYYMMDD') between #tgl1# and #tgl2# ) AND  
	         ( EKA."MST_PRODUCT_INSURED"."MSTE_INSURED_NO" = 1 ) AND  
	         ( EKA."ID_MST_CLM"."MSTE_INSURED_NO" = 1 ) AND  
	         ( EKA."MST_PRODUCT_INSURED"."LSBS_ID" <![CDATA[<]]> 300 )     
	order by  "EKA"."ID_MST_CLM"."REGAPLDATE", 
	 "EKA"."ID_MST_CLM"."REGCLAIM"
	 </select>

	<resultMap id="elions.uw.listadmin1.result" class="java.util.HashMap">
		<result property="LAR_LCA_ID" column="LAR_LCA_ID" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                              
		<result property="REG_ADR_ID" column="REG_ADR_ID" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                          
		<result property="NAMA" column="NAMA" javaType="string" jdbcType="VARCHAR2" nullValue=""/>   
	</resultMap>
	 
	<select id="elions.uw.listadmin" resultMap="elions.uw.listadmin1.result" parameterClass="string">
		SELECT ("EKA"."LST_ADDR_REGION"."LAR_NAMA"||' '||"EKA"."LST_ADDR_REGION"."LAR_ADMIN"||' '||"EKA"."LST_ADDR_REGION"."LAR_TELPON") nama,   
		         "EKA"."LST_ADDR_REGION"."LAR_LCA_ID",   
		         TO_CHAR(EKA."LST_ADDR_REGION"."LAR_ID") as reg_adr_id  
		    FROM "EKA"."LST_ADDR_REGION",
		     "EKA"."LST_USER_ADMIN"
		where ( "EKA"."LST_USER_ADMIN"."LAR_ID" = "EKA"."LST_ADDR_REGION"."LAR_ID" ) and      
		( EKA."LST_USER_ADMIN"."LUS_ID" = #value#)   
		ORDER BY "EKA"."LST_ADDR_REGION"."LAR_NAMA",
		"EKA"."LST_ADDR_REGION"."LAR_ADMIN",
		"EKA"."LST_ADDR_REGION"."LAR_TELPON"
	</select>		
	
	<select id="elions.uw.jumlahfollowup" resultClass="int" parameterClass="java.util.HashMap">
			SELECT count("EKA"."MST_POLICY"."MSPO_POLICY_NO") jumlah
		    FROM "EKA"."MST_BILLING",
		         "EKA"."MST_POLICY",   
		         "EKA"."MST_CLIENT_NEW",   
		         "EKA"."MST_BILLING_HCR",   
		         "EKA"."MST_HCR",   
		         "EKA"."MST_ADDRESS_BILLING",   
		         "EKA"."LST_KABUPATEN",   
		         "EKA"."LST_REGION",   
		         "EKA"."LST_WAKIL",   
		         "EKA"."LST_ADDR_REGION"  
		   WHERE ( EKA.MST_BILLING.REG_SPAJ      = EKA.MST_BILLING_HCR.REG_SPAJ (+)) and  
		         ( EKA.MST_BILLING.MSBI_TAHUN_KE = EKA.MST_BILLING_HCR.MSBIH_TAHUN_KE (+)) and  
		         ( EKA.MST_BILLING.MSBI_PREMI_KE = EKA.MST_BILLING_HCR.MSBIH_PREMI_KE (+)) and  
		         ( EKA.MST_BILLING_HCR.REG_SPAJ  = EKA.MST_HCR.REG_SPAJ (+)) and  
		         ( "EKA"."MST_BILLING"."REG_SPAJ" = "EKA"."MST_POLICY"."REG_SPAJ" ) and  
		         ( "EKA"."MST_POLICY"."MSPO_POLICY_HOLDER" = "EKA"."MST_CLIENT_NEW"."MCL_ID" ) and  
		         ( "EKA"."MST_BILLING"."REG_SPAJ" = "EKA"."MST_ADDRESS_BILLING"."REG_SPAJ" ) and  
		         ( EKA.MST_ADDRESS_BILLING.LSKA_ID = EKA.LST_KABUPATEN.LSKA_ID (+)) and  
		         ( "EKA"."MST_ADDRESS_BILLING"."LCA_ID" = "EKA"."LST_REGION"."LCA_ID" ) and  
		         ( "EKA"."MST_ADDRESS_BILLING"."LWK_ID" = "EKA"."LST_REGION"."LWK_ID" ) and  
		         ( "EKA"."MST_ADDRESS_BILLING"."LSRG_ID" = "EKA"."LST_REGION"."LSRG_ID" ) and  
		         ( "EKA"."LST_REGION"."LCA_ID" = "EKA"."LST_WAKIL"."LCA_ID" ) and  
		         ( "EKA"."LST_REGION"."LWK_ID" = "EKA"."LST_WAKIL"."LWK_ID" ) and  
		         ( "EKA"."LST_REGION"."LAR_ID" = "EKA"."LST_ADDR_REGION"."LAR_ID" ) and 
		         ( ( EKA."MST_BILLING"."MSBI_BEG_DATE" between  TO_DATE(#tgl1#,'YYYYMMDD') and  TO_DATE(#tgl2#,'YYYYMMDD') ) AND  
		         ( EKA."LST_ADDR_REGION"."LAR_ID" in ( #admin# ) ) AND  
		         ( EKA."MST_BILLING"."LSPD_ID" in ( 21 , 12 ) ) )   
		ORDER BY "EKA"."MST_BILLING"."MSBI_BILL_NO" ASC,
		"EKA"."LST_ADDR_REGION"."LAR_ADMIN" ,
		"EKA"."MST_CLIENT_NEW"."MCL_FIRST"
	</select>
	
	<select id="elions.uw.selectTanggalLahirPemegang" resultClass="date" parameterClass="string">
		select b.mspe_date_birth from eka.mst_policy a, eka.mst_client_new b
		where a.mspo_policy_holder = b.mcl_id and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>

	<select id="elions.uw.f_prod_topup" resultClass="integer" parameterClass="java.util.HashMap">
		SELECT "EKA"."MST_BILLING"."MSBI_FLAG_TOPUP"
		FROM   "EKA"."MST_PRODUCTION",
				 "EKA"."MST_BILLING"
		WHERE  "EKA"."MST_PRODUCTION"."REG_SPAJ"        = "EKA"."MST_BILLING"."REG_SPAJ"      AND
				 "EKA"."MST_PRODUCTION"."MSBI_TAHUN_KE"   = "EKA"."MST_BILLING"."MSBI_TAHUN_KE" AND
				 "EKA"."MST_PRODUCTION"."MSBI_PREMI_KE"   = "EKA"."MST_BILLING"."MSBI_PREMI_KE" AND
				 "EKA"."MST_PRODUCTION"."REG_SPAJ"        = #spaj#                           AND
				 "EKA"."MST_PRODUCTION"."MSPRO_PROD_KE"   = #prod_ke#	
	</select>	

	<select id="elions.uw.jenis_topproducer" resultClass="java.util.HashMap" >
		select ltp_id , ltp_jenis from eka.lst_jenis_topproducer order by ltp_id
	</select>

	<select id="elions.uw.list_topproducer" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		select lvl,nama,upp,keterangan,ket,ltp_id,ke,thn from eka.mst_topproducer
		where thn = #tahun# and
		ltp_id = #id#
		order by ke, upp desc
	</select>	

	<select id="elions.uw.count_topproducer" resultClass="integer" parameterClass="java.util.HashMap">
		select count(*) jumlah
		 from eka.mst_topproducer
		where thn = #tahun# and
		ltp_id = #id#
	</select>
	
	<select id="elions.uw.selectLstMedicalRange" resultClass="java.util.HashMap" >
		 SELECT * FROM eka.lst_medical_range
	</select>	 
	
	<select id="elions.uw.selectCountMstPeserta" resultClass="int" parameterClass="string">
		select count(*) 
			from eka.mst_peserta 
			 where reg_spaj=rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectCountMstProductInsuredRider" resultClass="int" parameterClass="java.util.HashMap" >
		select count(*) 
			   from eka.mst_product_insured 
			   		where reg_spaj=rpad(replace(#reg_spaj#,'.'),11,' ') and lsbs_id=#lsbs_id#
	</select>	   		
	
	<select id="elions.uw.selectCountTotalRider" resultClass="int" parameterClass="java.util.HashMap" >
		select count(*) 
			   from eka.mst_product_insured 
			   		where reg_spaj=rpad(replace(#reg_spaj#,'.'),11,' ') and lsbs_id between 800 and 899
	</select>	  
	
	<select id="elions.uw.selectLstMedicalRangeSar" resultClass="int" parameterClass="java.util.HashMap" >
		  select id_range_sar
	  	from eka.lst_medical_range_sar  
			 where lku_id=#lku_id# and
		 	   <![CDATA[ #total_sar#>=sar_awal and #total_sar#<sar_akhir ]]>
	</select>
	
	<select id="elions.uw.selectLstMedicalRangeAge" resultClass="int" parameterClass="int" >
		  select id_range_age
		  	from eka.lst_medical_range_age 
				 <![CDATA[ where #value# >=usia_awal and #value#<=usia_akhir ]]> 
	</select>						   
	
	<select id="elions.uw.selectMstProductInsuredKurs" resultClass="string" parameterClass="java.util.HashMap" >
		select lku_id 
			from eka.mst_product_insured 
				where 	reg_spaj=rpad(replace(#spaj#,'.'),11,' ') and 
						mste_insured_no=#insured_no# and 
						lsbs_id <![CDATA[<]]>300						   
	</select>
	
	<select id="elions.uw.selectDaftarTabelMedis" resultClass="com.ekalife.elions.model.TabelMedis" parameterClass="java.util.HashMap" >
		 select a.mstm_tgl_periode,c.usia_awal,c.usia_akhir,b.sar_awal,b.sar_akhir,a.lku_id,e.jns_medis,e.jns_prefix,f.lsmc_id,f.lsmc_name
	   		  from eka.mst_medical  a,
			  	   eka.lst_medical_range_sar b,
				   eka.lst_medical_range_age c,
				   (select max(mstm_tgl_periode) mstm_tgl_periode  from eka.mst_medical) d,
				   eka.lst_jenis_medical e,
				   eka.lst_medical_check_up f
				where a.id_range_sar=b.id_range_sar and
					  a.id_range_age=c.id_range_age and 
					  a.lku_id=b.lku_id and
					  a.mstm_tgl_periode=d.mstm_tgl_periode and
					  a.jns_medis  = e.jns_medis and
					  e.lsmc_id=f.lsmc_id and
					  f.active=#active# and
					  a.lku_id=#lku_id# and 
					  b.id_range_sar=#id_range_sar# and 
					  c.id_range_age=#id_range_age#
	</select>		
	
	<select id="elions.uw.selectSpajPremiUlinkNotInserted" resultClass="java.util.HashMap" parameterClass="int" >
		select reg_spaj,lspd_id from eka.mst_policy where reg_spaj in(
		select distinct reg_spaj from eka.mst_product_insured where lsbs_id <![CDATA[<]]> 300 and lsbs_id=#value#) and lspd_id>3 		  
	</select>	

	<select id="elions.uw.selectSpajPremiUlinkNotInsertedNew" resultClass="java.util.HashMap" parameterClass="int" >
	  SELECT EKA.MST_POLICY.REG_SPAJ REG_SPAJ, eka.mst_policy.lspd_id LSPD_ID
	    FROM EKA.MST_POLICY,   
	         EKA.MST_INSURED,   
	         EKA.LST_POLICY_STATUS,   
	         EKA.MST_PRODUCT_INSURED  
	   WHERE ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ ) AND  
	         ( EKA.MST_POLICY.LSSP_ID = EKA.LST_POLICY_STATUS.LSSP_ID ) AND  
	         ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_PRODUCT_INSURED.REG_SPAJ ) AND  
	         ( EKA.MST_INSURED.MSTE_INSURED_NO = EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO ) AND  
	         ( ( EKA.MST_POLICY.LSTB_ID = 1 ) AND  
	         ( EKA.MST_POLICY.MSPO_PROSES_BILL = 1 ) AND		   
	         ( EKA.LST_POLICY_STATUS.LSSP_ACTIVE = 1 ) AND  
	         ( EKA.MST_PRODUCT_INSURED.LSBS_ID IN (115,116,117,118,119,122,138,139,153,159,160,162,165,166) ) )   
			 AND mst_policy.reg_spaj NOT IN (SELECT reg_spaj FROM eka.mst_premi_ulink) 
	</select>
	
	<select id="elions.uw.selectLstGroupBisnis" resultClass="com.ekalife.elions.model.reas.GroupBisnis" parameterClass="int" >
		select lsgb_id,lsgb_name 
			from eka.lst_group_bisnis a 
				where lstb_id=#value# order by lsgb_id asc
	</select>
	
	<select id="elions.uw.selectLstGroupReas" resultClass="id.co.sinarmaslife.std.model.vo.DropDown" >
		select lsgr_id key, lsgr_name value from eka.lst_group_reas
	</select>	
		
	<select id="elions.uw.selectCountsimassehat" resultClass="int" parameterClass="java.util.HashMap">
		SELECT count(*) jumlah
	    FROM "EKA"."MST_POLICY",   
	         "EKA"."MST_PRODUCT_INSURED",   
	         "EKA"."MST_INSURED",   
	         "EKA"."MST_PESERTA",   
			EKA.LST_KURS
	   WHERE ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_INSURED"."REG_SPAJ" ) and  
	         ( "EKA"."MST_INSURED"."REG_SPAJ" = "EKA"."MST_PRODUCT_INSURED"."REG_SPAJ" ) and  
	         ( "EKA"."MST_INSURED"."MSTE_INSURED_NO" = "EKA"."MST_PRODUCT_INSURED"."MSTE_INSURED_NO" ) and  
	         ( "EKA"."MST_PESERTA"."REG_SPAJ" = "EKA"."MST_POLICY"."REG_SPAJ" ) and  
	         ( EKA."MST_PRODUCT_INSURED"."LSBS_ID" <![CDATA[<]]> 300 ) AND  
	         ( EKA."MST_POLICY"."LSTB_ID" = 1 )     AND
			(   to_char( "EKA"."MST_INSURED"."MSTE_TGL_KIRIM_POLIS",'yyyymmdd')  between #tgl1#  and #tgl2#)
	</select>

	<select id="elions.uw.kurang_tanggal" resultClass="date" parameterClass="java.util.HashMap">
		SELECT (TO_DATE(#tanggal#,'DD/MM/YYYY') - #hari#)tanggal_sementara FROM DUAL
	</select>
	
	<select id="elions.uw.count_softcopy_perhari" resultClass="int" parameterClass="java.util.HashMap">
		SELECT /*+ first_rows */ count(*) jumlah
    FROM "EKA"."MST_AGENT_PROD",   
         "EKA"."MST_POLICY",   
         "EKA"."MST_PRODUCT_INSURED",   
         "EKA"."LST_DET_BISNIS",   
         "EKA"."LST_PAY_MODE",   
         "EKA"."MST_INSURED",   
         EKA."MST_CLIENT_NEW" "MST_CLIENT_NEW_B",   
         "EKA"."LST_USER",   
         "EKA"."MST_ADDRESS_BILLING",   
         EKA."MST_CLIENT_NEW" "MST_CLIENT_NEW_C"  ,
		 EKA."LST_REGION",
		 "EKA"."MST_AGENT",
		  EKA."MST_CLIENT_NEW" "MST_CLIENT_NEW_A"
   WHERE ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_AGENT_PROD"."REG_SPAJ" ) and  
         ( "EKA"."MST_POLICY"."LSTB_ID" = "EKA"."MST_AGENT_PROD"."LSTB_ID" ) and  
         ( "EKA"."LST_DET_BISNIS"."LSBS_ID" = "EKA"."MST_PRODUCT_INSURED"."LSBS_ID" ) and  
         ( "EKA"."LST_DET_BISNIS"."LSDBS_NUMBER" = "EKA"."MST_PRODUCT_INSURED"."LSDBS_NUMBER" ) and  
         ( "EKA"."MST_POLICY"."LSCB_ID" = "EKA"."LST_PAY_MODE"."LSCB_ID" ) and  
         ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_INSURED"."REG_SPAJ" ) and  
         ( "EKA"."MST_INSURED"."REG_SPAJ" = "EKA"."MST_PRODUCT_INSURED"."REG_SPAJ" ) and  
         ( "EKA"."MST_INSURED"."MSTE_INSURED_NO" = "EKA"."MST_PRODUCT_INSURED"."MSTE_INSURED_NO" ) and  
         ( "EKA"."MST_INSURED"."MSTE_INSURED" = "MST_CLIENT_NEW_B"."MCL_ID" ) and  
         ( "EKA"."MST_POLICY"."LUS_ID" = "EKA"."LST_USER"."LUS_ID" ) and  
         ( "EKA"."MST_POLICY"."REG_SPAJ" = "EKA"."MST_ADDRESS_BILLING"."REG_SPAJ" ) and
         ( "EKA"."MST_POLICY"."MSPO_POLICY_HOLDER" = "MST_CLIENT_NEW_C"."MCL_ID" ) and  
		 ( EKA."LST_REGION"."LCA_ID" = "EKA"."MST_POLICY"."LCA_ID") AND
		 ( EKA."LST_REGION"."LWK_ID" = "EKA"."MST_POLICY"."LWK_ID") AND
		 ( EKA."LST_REGION"."LSRG_ID" = "EKA"."MST_POLICY"."LSRG_ID") AND
         ( ( EKA."MST_AGENT_PROD"."LSTB_ID" = 1 ) AND  
         ( EKA."MST_PRODUCT_INSURED"."LSBS_ID" <![CDATA[ < ]]>300 ) AND  
         ( EKA."MST_AGENT_PROD"."LSLE_ID" = 4 ) ) and 
		 (not("EKA"."MST_ADDRESS_BILLING"."E_MAIL"  is  null) or not("MST_CLIENT_NEW_C"."MSPE_EMAIL" is  null)) and
		 ( "EKA"."MST_AGENT_PROD"."MSAG_ID" = "EKA"."MST_AGENT"."MSAG_ID" ) and
		 ( "EKA"."MST_AGENT"."MCL_ID" = "MST_CLIENT_NEW_A"."MCL_ID" ) and
			 (to_char ("EKA"."MST_INSURED"."MSTE_TGL_AKSEP",'YYYYMMDD HH:mm:ss') between #tgl1# and #tgl2#)
	
	</select>
	
	<resultMap id="result.mst_cekRekAgen" class="java.util.HashMap">
		<result property="AGEN" column="AGEN" javaType="string" jdbcType="VARCHAR" />
		<result property="MSAG_ID" column="MSAG_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="LSLE_ID" column="LSLE_ID" javaType="int" jdbcType="NUMBER" />                                                                                                                                    
		<result property="MSAG_TABUNGAN" column="MSAG_TABUNGAN" javaType="string" jdbcType="VARCHAR" nullValue="" />      
		<result property="LCA_ID" column="LCA_ID" javaType="string" jdbcType="VARCHAR" nullValue="" />    
		<result property="LEV_COMM" column="LEV_COMM" javaType="string" jdbcType="VARCHAR" nullValue="" />
		<result property="LBN_ID" column="LBN_ID" javaType="int" jdbcType="NUMBER" />   
		<result property="MSTE_BEG_DATE" column="MSTE_BEG_DATE" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                       
	</resultMap>
	
	<select id="elions.uw.cekRekAgen" resultMap="result.mst_cekRekAgen" parameterClass="string">
		select distinct ('['||e.msag_id||'] '||c.mcl_first ) agen,f.mste_beg_date, a.lsle_id,  rpad(replace(b.msag_tabungan ,'.'),10,0)msag_tabungan ,e.msag_id, b.lca_id , nvl(e.lev_comm,'') lev_comm , d.lbn_id
        from eka.mst_agent_prod a, eka.mst_agent b, eka.mst_client_new c, eka.mst_agent d, eka.mst_agent_comm e, eka.mst_insured f
        where a.msag_id=b.msag_id and b.mcl_id = c.mcl_id and b.mcl_id = d.mcl_id 
            and a.reg_spaj= e.reg_spaj 
            and a.reg_spaj= f.reg_spaj
            and e.msag_id = a.msag_id
            and e.msag_id = d.msag_id
            and b.msag_active=1
			and a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
			and (b.MSAG_ACTIVE <![CDATA[<>]]>0 or b.MSAG_KOMISI<![CDATA[<>]]>0)
	</select>
	
	<select id="elions.uw.cekAgenDariAgenNonKomisi" resultMap="result.mst_cekRekAgen" parameterClass="string">
	    select distinct ('['||a.msag_id||'] '||c.mcl_first ) agen,f.mste_beg_date, a.lsle_id,  rpad(replace(b.msag_tabungan ,'.'),10,0)msag_tabungan ,a.msag_id, b.lca_id , nvl(a.lev_comm,'') lev_comm , d.lbn_id
        from eka.mst_agent_prod a, eka.mst_agent b, eka.mst_client_new c, eka.mst_agent d, eka.mst_insured f
        where a.msag_id=b.msag_id and b.mcl_id = c.mcl_id and b.mcl_id = d.mcl_id 
            and a.reg_spaj= f.reg_spaj
            and b.msag_active=1
            and a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
            and D.MSAG_KOMISI=0
            and A.LSLE_ID=4
	</select>
	
	<select id="elions.uw.namaAgen" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select distinct ('['||e.msag_id||'] '||c.mcl_first ) agen, upper(c.mcl_first)mcl_first
		from eka.mst_agent_prod a, eka.mst_agent b, eka.mst_client_new c, eka.mst_agent d, eka.mst_agent_comm e, eka.mst_insured f
		where a.msag_id=b.msag_id and b.mcl_id = c.mcl_id and b.mcl_id = d.mcl_id 
        	and a.reg_spaj= e.reg_spaj 
        	and a.reg_spaj= f.reg_spaj
        	and e.msag_id = a.msag_id
        	and e.msag_id = d.msag_id
        	and a.msag_id=#msag_id#
			and a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
			and (b.MSAG_ACTIVE <![CDATA[<>]]>0 or b.MSAG_KOMISI<![CDATA[<>]]>0)
	</select>
	<resultMap id="result.cekSertifikat" class="java.util.HashMap">
		<result property="MSAG_KOMISI" column="MSAG_KOMISI" javaType="int" jdbcType="NUMBER" />
		<result property="MSAG_ID" column="MSAG_ID" javaType="string" jdbcType="VARCHAR" />
		<result property="MSAG_SERTIFIKAT" column="MSAG_SERTIFIKAT" javaType="int" jdbcType="NUMBER" />                                                                                                                                    
		<result property="MSAG_BERLAKU" column="MSAG_BERLAKU" javaType="date" jdbcType="DATE" nullValue="" />      
		                                                                                                                                                       
	</resultMap>
	
	<select id="elions.uw.cekSertifikat" resultClass="java.util.HashMap" parameterClass="string">
		SELECT   C.MSAG_ID,
         		C.MSAG_KOMISI,
         		C.MSAG_SERTIFIKAT,
         		C.MSAG_BERLAKU
  		FROM   eka.mst_policy a, eka.mst_agent_prod b, eka.mst_agent c
 		WHERE a.reg_spaj = b.reg_spaj
         	AND b.msag_id = c.msag_id
         	AND a.reg_spaj = #spaj#
         	AND B.LEV_COMM IS NOT NULL
	</select>
	
	<select id="elions.uw.cekJnSertifikat" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
	 SELECT   C.MSAG_ID,
         C.MSAG_KOMISI,
         C.MSAG_SERTIFIKAT,
         C.MSAG_BERLAKU
  	FROM eka.mst_policy a, eka.mst_agent_prod b, eka.mst_agent c
 	WHERE a.reg_spaj = b.reg_spaj
         AND b.msag_id = c.msag_id
         AND a.reg_spaj = #spaj#
         and c.msag_id=#msag_id#
         and C.MSAG_SERTIFIKAT not in(0)
         AND B.LEV_COMM IS NOT NULL
	</select>
	
	<select id="elions.uw.cekBegDateInsured" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT C.MSAG_BERLAKU, d.mste_beg_date,sysdate
  		FROM eka.mst_policy a, eka.mst_agent_prod b, 
               eka.mst_agent c, eka.mst_insured d
 		WHERE a.reg_spaj = b.reg_spaj
         AND b.msag_id = c.msag_id
         AND a.reg_spaj= d.reg_spaj
         AND c.msag_id = #msag_id#
         and a.reg_spaj= #spaj#
         AND B.LEV_COMM IS NOT NULL
         AND C.MSAG_BERLAKU <![CDATA[>=]]> d.mste_beg_date
	</select>
	
	<select id="elions.uw.cekKdBankRekAgen"  resultClass="java.util.HashMap" parameterClass="string">
		SELECT nvl(a.msag_flag,0) msag_flag, c.lsbp_id
  		FROM eka.mst_agent a, eka.lst_bank b, eka.lst_bank_pusat c
 		WHERE a.msag_id =#msag_id# AND a.lbn_id = b.lbn_id AND b.lsbp_id = c.lsbp_id
	</select>
	
	<resultMap id="result.mst_cekRekAgenD" class="java.util.HashMap">
		<result property="AGEN" column="AGEN" javaType="string" jdbcType="VARCHAR" />                                                                                                                                   
		<result property="MSAG_TABUNGAN" column="MSAG_TABUNGAN" javaType="string" jdbcType="VARCHAR" nullValue="" />      
		<result property="LCA_ID" column="LCA_ID" javaType="string" jdbcType="VARCHAR" nullValue="" />    
		<result property="LBN_ID" column="LBN_ID" javaType="int" jdbcType="NUMBER" />                                                                                                                                                          
	</resultMap>
	
	<select id="elions.uw.cekRekAgenD" resultMap="result.mst_cekRekAgenD" parameterClass="string">
		SELECT DISTINCT ('[' || e.msag_id || '] ' || c.mcl_first) agen,
                RPAD (REPLACE (b.msag_tabungan, '.'), 10, 0) msag_tabungan,
                b.lca_id, d.lbn_id
           FROM eka.mst_agent_prod a,
                eka.mst_agent b,
                eka.mst_client_new c,
                eka.mst_agent d,
                eka.mst_agent_comm e
		where a.msag_id=b.msag_id and b.mcl_id = c.mcl_id and b.mcl_id = d.mcl_id 
		and a.reg_spaj= e.reg_spaj and e.msag_id = a.msag_id
		and e.msag_id = d.msag_id
		and a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	<resultMap id="result.mst_cekTglRk" class="java.util.HashMap">
		<result property="MSPA_DATE_BOOK" column="MSPA_DATE_BOOK" javaType="string" jdbcType="VARCHAR2" nullValue="" />                                                                                                                                    
		<result property="MSTE_BEG_DATE" column="MSTE_BEG_DATE" javaType="string" jdbcType="VARCHAR2" nullValue="" />                                                                                                                                                                 
	</resultMap>
	
	<select id="elions.uw.cekTglRk" resultClass="com.ekalife.elions.model.TopUp" parameterClass="string">
		select a.mspa_date_book,b.mste_beg_date from eka.mst_payment a, eka.mst_insured b
		where a.reg_spaj= b.reg_spaj
			and a.reg_spaj=#reg_spaj#
		order by mspa_date_book desc
	</select>
	
	<select id="elions.uw.selectKoefisienUpp" resultClass="java.util.HashMap" parameterClass="com.ekalife.elions.model.Upp">
		SELECT 
				lspc_coef, 
				lspc_mod_hybrid, 
				lspc_mod_con, 
				lspc_mod_con_hs, 
				lspc_mod_link, 
				lspc_mod_con_rider, 
				lspc_mod_con_rider_hs, 
				lspc_comm_eva,
				lspc_mod_lain,
				lspc_mod_lain_rider,
				lspc_mod_lain_hs,
				lspc_mod_lain_rider_hs,
				lspc_bonus_coef,
				lspc_bonus_comm
		  FROM eka.lst_production_coef
		 WHERE lsbs_id = #lsbs_id#
		   AND lsdbs_number = #lsdbs_number#
		   AND lspc_type = #lspc_type#
		   AND lspc_topup = #flag_topup#
		   AND lspc_mgi = #mgi#
		   AND lscb_id = #lscb_id#
		   AND lspc_date_beg =
		          (SELECT MAX (z.lspc_date_beg)
		             FROM eka.lst_production_coef z
		            WHERE z.lsbs_id = #lsbs_id#
		              AND z.lsdbs_number = #lsdbs_number#
		              AND z.lspc_type = 1
		              AND z.lspc_topup = #flag_topup#
		              AND z.lspc_mgi = #mgi#
		              AND z.lscb_id = #lscb_id#
		              AND z.lspc_date_beg <![CDATA[<=]]> #mspro_prod_date#)	
	</select>
	
	<select id="elions.uw.selectIsTopUp" resultClass="int" parameterClass="java.util.HashMap">
		SELECT b.msbi_flag_topup
		  FROM eka.mst_production a, eka.mst_billing b
		 WHERE a.reg_spaj = b.reg_spaj
		   AND a.msbi_tahun_ke = b.msbi_tahun_ke
		   AND a.msbi_premi_ke = b.msbi_premi_ke
		   AND a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
		   AND a.mspro_prod_ke = #prod_ke#
	</select>

	<select id="elions.uw.selectCountMstPositionSpaj" resultClass="int" parameterClass="java.util.HashMap">
		select count(*) 
			from eka.mst_position_Spaj  
				where reg_spaj=rpad(replace(#reg_spaj#,'.'),11,' ')
				 and lssa_id $lssaId$
	</select>
	
	
	<select id="elions.uw.selectCountTerimaTtp" resultClass="int" parameterClass="java.util.HashMap">
		select count(*) 
			from eka.mst_policy where mspo_terima_ttp is not null
				AND reg_spaj=rpad(replace(#reg_spaj#,'.'),11,' ')
				AND lspd_id=7
	</select>
	
	<select id="elions.uw.selectHighRiskCustm" resultClass="com.ekalife.elions.model.kyc.Hrc">
		select lshc_id,lshc_desc, rownum brs , 0 cek from EKA.LST_HIGHRISK_CUST where lshc_id >0 order by lshc_id asc
	</select>

	<select id="elions.uw.selectKYCnewBis_utama" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.kyc.NewBusinessCase">
		SELECT c.lsbs_id,b.mste_kyc_result kycResult, 
	           eka.utils.jml_trans_link(a.reg_spaj) jmlh_tu,
		       eka.utils.nominal_trans_link(a.reg_spaj) total_tu,
		       a.reg_spaj, a.mspo_policy_no_format, i.ljb_note jabatan,
		       (select count(*) from eka.mst_trans_ulink where reg_spaj = a.reg_spaj and lt_id in (3,11))flagWD,
               (select count(*) from eka.mst_surrender where reg_spaj = a.reg_spaj)flagWD2,
		       d.mcl_first pemegang, d.mspe_date_birth , e.mcl_first tertanggung, b.mste_beg_date,
		       eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) lsdbs_name, g.lku_symbol,(c.mspr_premium - nvl(c.mspr_discount,0)) premi_pokok, '' topup,
		       DECODE (a.lscb_id, 6, 'M', 1, 'Q', 2, 'SA', 3, 'A', 'SP') frek,
		       d.mpn_job_desc, d.mkl_kerja, d.mkl_industri, d.mkl_penghasilan,
		       d.mkl_pendanaan, d.mkl_tujuan,a.mspo_policy_holder, b.mste_kyc_date,b.mste_flag_uw,
		       (case when ((select k.jenis
                				from eka.mst_reff_bii  j,
                 	    		eka.lst_reff_bii k
                				where j.lrb_id = k.lrb_id
                				and j.reg_spaj = a.reg_spaj and no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = j.reg_spaj))=2 
                			AND
                			(SELECT m.flag_print_cabang
                  				FROM eka.mst_policy l, eka.lst_wakil m
                 				WHERE l.lca_id = m.lca_id
                   				AND l.lwk_id = m.lwk_id
                   				AND l.reg_spaj = a.reg_spaj)=1)
           		 	then 'SPAJ belum diterima'
            		else ''
            	end) status_spaj,
            	(select count (*) from eka.mst_tag_payment where reg_spaj =a.reg_spaj)premiKe
		  FROM eka.mst_policy a,
		       eka.mst_insured b,
		       eka.mst_product_insured c,
		       eka.mst_client_new d,
		       eka.mst_client_new e,
		       eka.lst_det_bisnis f,
		       eka.lst_kurs g,
		       eka.lst_jabatan i
		 WHERE a.lstb_id = 1
		   and trunc(b.mste_kyc_date) <![CDATA[ >= ]]>  to_date(#dariTanggal#,'dd/MM/yyyy')
		   and trunc(b.mste_kyc_date) <![CDATA[ <= ]]>  to_date(#sampaiTanggal#,'dd/MM/yyyy')
		   AND a.reg_spaj = b.reg_spaj
		   AND a.reg_spaj = c.reg_spaj
		   AND a.mspo_policy_holder = d.mcl_id
		   AND b.mste_insured = e.mcl_id
		   AND c.lsbs_id = f.lsbs_id
		   AND c.lsdbs_number = f.lsdbs_number
		   AND a.lku_id = g.lku_id
		   And d.ljb_id= i.ljb_id(+)
		   and <![CDATA[ c.lsbs_id < 300 ]]> 
	</select>
	
	<resultMap class="java.util.HashMap" id="result.selectPEP">
		<result property="name" column="name" javaType="string" jdbcType="VARCHAR"/>                                                                                                                                                  
		<result property="nickname" column="nickname" javaType="string" jdbcType="VARCHAR" />                                                                                                                                      
		<result property="id_number" column="id_number" javaType="string" jdbcType="VARCHAR" />  
		<result property="sex" column="sex" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                            
		<result property="martial_status" column="martial_status" javaType="string" jdbcType="VARCHAR" />
		<result property="address" column="address" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                          
		<result property="current_address" column="current_address" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                          
		<result property="place_of_birth" column="place_of_birth" javaType="string" jdbcType="VARCHAR" />
		<result property="date_of_birth" column="date_of_birth" javaType="date" jdbcType="DATE" />
		<result property="nationality" column="nationality" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                      
		<result property="occupation" column="occupation" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                            
		<result property="details_of_occupation" column="details_of_occupation" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                            
		<result property="corporate" column="corporate" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                         
		<result property="office_address" column="office_address" javaType="string" jdbcType="VARCHAR" nullValue=""/>                                                                                                                                                        
		<result property="office_phone" column="office_phone" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                                        
		<result property="fund" column="fund" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                        
		<result property="income" column="income" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                              
		<result property="purpose" column="purpose" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                        
		<result property="nama_beneficiary1" column="nama_beneficiary1" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                  
		<result property="nama_beneficiary2" column="nama_beneficiary2" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                      
		<result property="nama_beneficiary3" column="nama_beneficiary3" javaType="string" jdbcType="VARCHAR" /> 
		<result property="relation1" column="relation1" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                  
		<result property="relation2" column="relation2" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                      
		<result property="relation3" column="relation3" javaType="string" jdbcType="VARCHAR" /> 
		<result property="place_birth1" column="place_birth1" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                  
		<result property="place_birth2" column="place_birth2" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                      
		<result property="place_birth3" column="place_birth3" javaType="string" jdbcType="VARCHAR" /> 
		<result property="date_birth1" column="date_birth1" javaType="date" jdbcType="DATE" />                                                                                                                                                  
		<result property="date_birth2" column="date_birth2" javaType="date" jdbcType="DATE" />                                                                                                                                                      
		<result property="date_birth3" column="date_birth3" javaType="date" jdbcType="DATE" /> 
		<result property="negara1" column="negara1" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                  
		<result property="negara2" column="negara2" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                      
		<result property="negara3" column="negara3" javaType="string" jdbcType="VARCHAR" /> 
		<result property="reg_spaj" column="reg_spaj" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                      
		<result property="status" column="status" javaType="string" jdbcType="VARCHAR" /> 
		
	</resultMap>
	
	<select id="elions.uw.selectReportPep" parameterClass="java.util.HashMap" resultMap="result.selectPEP">
		select d.mcl_first name, D.MCL_FIRST_ALIAS nickname, D.MSPE_NO_IDENTITY id_number,
        decode(d.mspe_sex,1,'PRIA','WANITA') sex,
        decode(D.MSPE_STS_MRT,1,'BELUM MENIKAH',2,'MENIKAH',3,'JANDA',4,'DUDA') martial_status,
        k.alamat_rumah address, k.alamat_tpt_tinggal current_address, d.mspe_place_birth place_of_birth,
        trunc(D.MSPE_DATE_BIRTH) date_of_birth,L.LSNE_NOTE nationality, nvl(d.mkl_kerja,'LAINNYA') occupation,
        d.mkl_kerja_ket details_of_occupation, d.mcl_company_name corporate,k.alamat_kantor office_address,
        k.telpon_kantor office_phone, d.mkl_pendanaan fund, d.mkl_penghasilan income, d.mkl_tujuan purpose,
        (select msaw_first from EKA.MST_BENEFECIARY where reg_spaj = b.reg_spaj and mste_insured_no = b.mste_insured_no and msaw_number=1) nama_beneficiary1,
        (select Y.LSRE_RELATION from EKA.MST_BENEFECIARY x, EKA.LST_RELATION y where x.reg_spaj = b.reg_spaj 
        and x.mste_insured_no = b.mste_insured_no and x.lsre_id = y.lsre_id and x.msaw_number=1) relation1,
        (select msaw_place_birth from EKA.MST_BENEFECIARY where reg_spaj = b.reg_spaj and mste_insured_no = b.mste_insured_no and msaw_number=1) place_birth1,
        (select trunc (msaw_birth) from EKA.MST_BENEFECIARY where reg_spaj = b.reg_spaj and mste_insured_no = b.mste_insured_no and msaw_number=1) date_birth1,
        (select l.lsne_note from EKA.MST_BENEFECIARY where reg_spaj = b.reg_spaj and mste_insured_no = b.mste_insured_no and msaw_number=1 and lsne_id = l.lsne_id) negara1,
        (select msaw_first from EKA.MST_BENEFECIARY where reg_spaj = b.reg_spaj and mste_insured_no = b.mste_insured_no and msaw_number=2) nama_beneficiary2,
        (select Y.LSRE_RELATION from EKA.MST_BENEFECIARY x, EKA.LST_RELATION y where x.reg_spaj = b.reg_spaj 
        and x.mste_insured_no = b.mste_insured_no and x.lsre_id = y.lsre_id and x.msaw_number=2) relation2,
        (select msaw_place_birth from EKA.MST_BENEFECIARY where reg_spaj = b.reg_spaj and mste_insured_no = b.mste_insured_no and msaw_number=2) place_birth2,
        (select trunc (msaw_birth)from EKA.MST_BENEFECIARY where reg_spaj = b.reg_spaj and mste_insured_no = b.mste_insured_no and msaw_number=2) date_birth2,
        (select l.lsne_note from EKA.MST_BENEFECIARY where reg_spaj = b.reg_spaj and mste_insured_no = b.mste_insured_no and msaw_number=2 and lsne_id = l.lsne_id) negara2,
        (select msaw_first from EKA.MST_BENEFECIARY where reg_spaj = b.reg_spaj and mste_insured_no = b.mste_insured_no and msaw_number=3) nama_beneficiary3,
        (select Y.LSRE_RELATION from EKA.MST_BENEFECIARY x, EKA.LST_RELATION y where x.reg_spaj = b.reg_spaj 
        and x.mste_insured_no = b.mste_insured_no and x.lsre_id = y.lsre_id and x.msaw_number=3) relation3,
        (select msaw_place_birth from EKA.MST_BENEFECIARY where reg_spaj = b.reg_spaj and mste_insured_no = b.mste_insured_no and msaw_number=3) place_birth3,
        (select trunc (msaw_birth) from EKA.MST_BENEFECIARY where reg_spaj = b.reg_spaj and mste_insured_no = b.mste_insured_no and msaw_number=3) date_birth3,
        (select l.lsne_note from EKA.MST_BENEFECIARY where reg_spaj = b.reg_spaj and mste_insured_no = b.mste_insured_no and msaw_number=3 and lsne_id = l.lsne_id) negara3,
		a.reg_spaj, i.LSSP_STATUS status
		  FROM eka.mst_policy a,
		       eka.mst_insured b,
		       eka.mst_product_insured c,
		       eka.mst_client_new d,
		       eka.mst_client_new e,
		       eka.lst_det_bisnis f,
		       EKA.LST_POLICY_STATUS i,
		       EKA.LST_IDENTITY j,
		       eka.mst_address_new k,
		       eka.lst_negara l,
		       eka.lst_highrisk_cust m
		 WHERE a.lstb_id = 1
		   and trunc(b.mste_kyc_date) <![CDATA[ >= ]]>  to_date(#dariTanggal#,'dd/MM/yyyy')
		   and trunc(b.mste_kyc_date) <![CDATA[ <= ]]>  to_date(#sampaiTanggal#,'dd/MM/yyyy')
		   AND a.reg_spaj = b.reg_spaj
		   AND a.reg_spaj = c.reg_spaj
		   AND a.mspo_policy_holder = d.mcl_id
		   AND b.mste_insured = e.mcl_id
		   AND c.lsbs_id = f.lsbs_id
		   and j.lside_id(+) = d.lside_id
		   AND c.lsdbs_number = f.lsdbs_number
		   and A.LSSP_ID = I.LSSP_ID
		   and A.LSSP_ID in ('1','8')
		   and l.lsne_id(+) = d.lsne_id
		   and d.mcl_id = k.mcl_id
		   and M.LSHC_DESC = d.mkl_kerja
		   and <![CDATA[ c.lsbs_id < 300 ]]> 
	</select>
	
	<resultMap class="java.util.HashMap" id="result.selectKYC">
		<result property="spaj" column="reg_spaj" javaType="string" jdbcType="CHAR" />                                                                                                                                                  
		<result property="mspo_policy_no_format" column="mspo_policy_no_format" javaType="string" jdbcType="VARCHAR" />                                                                                                                                      
		<result property="pemegang" column="pemegang" javaType="string" jdbcType="VARCHAR" />  
		<result property="jabatan" column="jabatan" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                            
		<result property="tertanggung" column="tertanggung" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                          
		<result property="mste_beg_date" column="mste_beg_date" javaType="date" jdbcType="DATE" />                                                                                                                                                      
		<result property="lsdbs_name" column="lsdbs_name" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                            
		<result property="lku_symbol" column="lku_symbol" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                            
		<result property="premi_pokok" column="premi_pokok" javaType="double" jdbcType="NUMBER" />                                                                                                                                                         
		<result property="topup" column="topup" javaType="string" jdbcType="CHAR" nullValue=""/>                                                                                                                                                        
		<result property="frek" column="frek" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                                        
		<result property="mpn_job_desc" column="mpn_job_desc" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                        
		<result property="mkl_kerja" column="mkl_kerja" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                              
		<result property="mkl_industri" column="mkl_industri" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                        
		<result property="mkl_penghasilan" column="mkl_penghasilan" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                  
		<result property="mkl_pendanaan" column="mkl_pendanaan" javaType="string" jdbcType="VARCHAR" />                                                                                                                                                      
		<result property="mkl_tujuan" column="mkl_tujuan" javaType="string" jdbcType="VARCHAR" /> 
		<result property="mste_kyc_date" column="mste_kyc_date" javaType="date" jdbcType="DATE" />
		<result property="mste_flag_uw" column="mste_flag_uw" javaType="int" jdbcType="NUMBER" /> 
		<result property="mspo_policy_holder" column="mspo_policy_holder" javaType="string" jdbcType="VARCHAR" /> 
	</resultMap>
	
	<select id="elions.uw.selectKYC" parameterClass="java.util.HashMap" resultMap="result.selectKYC">
		SELECT a.mspo_policy_holder,c.lsbs_id,b.mste_kyc_result kycResult, 
	           eka.utils.jml_trans_link(a.reg_spaj) jmlh_tu,
		       eka.utils.nominal_trans_link(a.reg_spaj) total_tu,
			   a.reg_spaj, a.mspo_policy_no_format,
		       d.mpn_job_desc jabatan,d.mcl_first pemegang, e.mcl_first tertanggung, b.mste_beg_date,
		       eka.f_lsdbs(a.reg_spaj, c.reg_spaj, c.reg_spaj) lsdbs_name, g.lku_symbol,
		       (c.mspr_premium - nvl(c.mspr_discount,0)) premi_pokok, '' topup,
		       DECODE (a.lscb_id, 6, 'M', 1, 'Q', 2, 'SA', 3, 'A', 'SP') frek,
		       d.mpn_job_desc, d.mkl_kerja, d.mkl_industri, d.mkl_penghasilan,
		       d.mkl_pendanaan, d.mkl_tujuan,a.mspo_policy_holder, b.mste_kyc_date, b.mste_flag_uw
		  FROM eka.mst_policy a,
		       eka.mst_insured b,
		       eka.mst_product_insured c,
		       eka.mst_client_new d,
		       eka.mst_client_new e,
		       eka.lst_det_bisnis f,
		       eka.lst_kurs g
		 WHERE a.lstb_id = 1
		   AND a.reg_spaj=#spaj# 
		   AND a.reg_spaj = b.reg_spaj
		   AND a.reg_spaj = c.reg_spaj
		   AND a.mspo_policy_holder = d.mcl_id
		   AND b.mste_insured = e.mcl_id
		   AND c.lsbs_id = f.lsbs_id
		   AND c.lsdbs_number = f.lsdbs_number
		   AND a.lku_id = g.lku_id
		   and <![CDATA[ c.lsbs_id  < 300 ]]> 
	
	</select>
	<select id="elions.uw.selectProsesKyc" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.kyc.NewBusinessCase">
		SELECT reg_spaj, mste_insured, mste_kyc_result, mste_flag_uw 
		FROM eka.mst_insured
		WHERE reg_spaj=#reg_spaj#

	</select>
	
	<select id="elions.uw.selectKYCnewBis_utamaPK" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.kyc.NewBusinessCase">
		SELECT i.mssur_tgl_input,c.lsbs_id,b.mste_kyc_result kycResult, 
	           eka.utils.jml_trans_link(a.reg_spaj) jmlh_tu,
		       eka.utils.nominal_trans_link(a.reg_spaj) total_tu,
			   a.reg_spaj, a.mspo_policy_no_format,
		       d.mpn_job_desc jabatan,d.mcl_first pemegang, e.mcl_first tertanggung, b.mste_beg_date,
		       eka.f_lsdbs(a.reg_spaj, c.reg_spaj, c.reg_spaj) lsdbs_name, g.lku_symbol,
		       (c.mspr_premium - nvl(c.mspr_discount,0)) premi_pokok, '' topup,
		       DECODE (a.lscb_id, 6, 'M', 1, 'Q', 2, 'SA', 3, 'A', 'SP') frek,
		       d.mpn_job_desc, d.mkl_kerja, d.mkl_industri, d.mkl_penghasilan,
		       d.mkl_pendanaan, d.mkl_tujuan
		  FROM eka.mst_policy a,
		       eka.mst_insured b,
		       eka.mst_product_insured c,
		       eka.mst_client_new d,
		       eka.mst_client_new e,
		       eka.lst_det_bisnis f,
		       eka.lst_kurs g,
   	           eka.mst_surrender i
		 WHERE a.lstb_id = 1
		   and i.mssur_tgl_input <![CDATA[ >= ]]>  to_date(#dariTanggal#,'dd/MM/yyyy')
		   and i.mssur_tgl_input <![CDATA[ <= ]]>  to_date(#sampaiTanggal#,'dd/MM/yyyy')
		   AND a.reg_spaj=i.reg_spaj 
		   AND a.reg_spaj = b.reg_spaj
		   AND a.reg_spaj = c.reg_spaj
		   AND a.mspo_policy_holder = d.mcl_id
		   AND b.mste_insured = e.mcl_id
		   AND c.lsbs_id = f.lsbs_id
		   AND c.lsdbs_number = f.lsdbs_number
		   AND a.lku_id = g.lku_id
		   and <![CDATA[ c.lsbs_id  < 300 ]]>
	</select>
	
	<select id="elions.uw.selectMstpositionSpajUserAccept" parameterClass="string" resultClass="com.ekalife.elions.model.User">
		SELECT b.*
		  FROM eka.mst_position_spaj a, eka.lst_user b
		 WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND a.lus_id = b.lus_id
		   AND b.lde_id = '11'
		   AND a.msps_date =
		          (SELECT MIN (msps_date)
		             FROM eka.mst_position_spaj c, eka.lst_user d
		            WHERE c.reg_spaj = a.reg_spaj
		              AND c.lus_id = d.lus_id
		              AND d.lde_id = '11')
 	</select>
	<!-- 
		   SELECT b.* FROM
				(SELECT tabel1.*
						  FROM eka.mst_position_spaj tabel1
						 WHERE tabel1.lspd_id = 2
						   AND tabel1.lssa_id = 5
						   AND tabel1.msps_date =
						             (SELECT MIN (msps_date)
						                FROM eka.mst_position_spaj subTabel1
						               WHERE tabel1.reg_spaj = subTabel1.reg_spaj AND subTabel1.lspd_id = 2 AND subTabel1.lssa_id = 5)
			  )a,
			  eka.lst_user b
			  WHERE a.lus_id=b.lus_id AND
			  a.reg_spaj=#spaj#
	-->
	
	<select id="elions.uw.selectKYCnewBisJnsTopUp" parameterClass="string" resultClass="string">
		SELECT b.lt_transksi
		  FROM eka.mst_ulink a, eka.lst_transaksi b
		 WHERE a.lt_id = b.lt_id
		   AND a.mu_tgl_trans = (SELECT mu_tgl_trans
		                           FROM eka.mst_ulink
		                          WHERE reg_spaj = a.reg_spaj AND mu_ke = 1)
		   AND a.lt_id IN (2, 5) and a.reg_spaj=rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectCountLstHighRiskCust" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(*)FROM eka.lst_highrisk_cust 
		WHERE 
				  UPPER(REPLACE(lshc_desc,' ','')) =REPLACE(#arg1#,' ','') OR
				  UPPER(REPLACE(lshc_desc,' ','')) =REPLACE(#arg2#,' ','') OR
				  UPPER(REPLACE(lshc_desc,' ','')) =REPLACE(#arg3#,' ','')
	</select>
	
	<select id="elions.uw.selectlstCabangForAkseptasiKhusus" resultClass="id.co.sinarmaslife.std.model.vo.DropDown">
		select c.lca_id key, c.lca_nama value From eka.mst_insured a,
			eka.mst_policy b,
			eka.lst_cabang c
			 where a.reg_spaj=b.reg_spaj and
			 	   b.lca_id=c.lca_id and
				   a.lssa_id=10
				   group by c.lca_id,c.lca_nama
	</select>
	
	<select id="elions.uw.selectlstCabangForBancass" resultClass="id.co.sinarmaslife.std.model.vo.DropDown">
        select a.lsrg_id key, a.lsrg_nama value 
            from eka.lst_region a, eka.lst_cabang b
             where a.lca_id = b.lca_id
                    AND a.lca_id ='09'
                group by a.lsrg_id,a.lsrg_nama
    </select>

	<select id="elions.uw.selectlstCabangForAkseptasiKhususToday" resultClass="id.co.sinarmaslife.std.model.vo.DropDown">
		SELECT DISTINCT l.lca_nama value
				  FROM eka.mst_policy a,
				  	   eka.mst_insured b,
					   eka.mst_client_new c1,
					   eka.mst_client_new c2,
					   eka.mst_client_new c3,
					   eka.mst_product_insured d,
					   eka.lst_det_bisnis e,
					   eka.lst_pay_mode f,
					   eka.mst_address_new h,
					   eka.mst_address_billing i,
					   eka.mst_agent_prod j,
					   eka.mst_agent k,
					   eka.lst_cabang l
				 WHERE a.reg_spaj=b.reg_spaj
				   AND a.reg_spaj=d.reg_spaj
				   AND a.lscb_id=f.lscb_id 
				   AND d.lsbs_id=e.lsbs_id 
				   AND a.reg_Spaj=i.reg_spaj
				   AND d.lsdbs_number=e.lsdbs_number
				   AND d.lsbs_id  <![CDATA[<]]>  300
				   AND a.mspo_policy_holder=c1.MCL_ID
				   AND b.mste_insured=c2.mcl_id
				   AND a.mspo_policy_holder=h.mcl_id
				   AND a.reg_spaj=j.reg_spaj
				   AND j.lsle_id=4
				   AND j.msag_id=k.msag_id
				   AND k.mcl_id=c3.mcl_id
				   AND a.lspd_id IN(2,4,6) 
				   AND a.lstb_id = 1
				   AND b.lssa_id=10
				    AND TRUNC(b.mste_tgl_aksep) = TRUNC(SYSDATE)
				   AND a.lca_id =l.lca_id
				   order by l.lca_nama asc
	</select>
				   
	<select id="elions.uw.selectCountMstSurrender" parameterClass="java.util.HashMap" resultClass="int">
			select count(*) from eka.mst_surrender where lstb_id=#lstb_id# and reg_spaj=rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>		
	
	<!-- Khusus untuk update nasabah -->
	<select id="elions.uw.selectPemegangPolisUpdateNasabah" resultClass="com.ekalife.elions.model.Pemegang2" parameterClass="string">
			select distinct eka.mst_client_new.mcl_first, eka.mst_client_new.mcl_id,eka.mst_client_new.mkl_kerja,
			eka.mst_client_new.mkl_kerja kerjaa,
			decode(mst_client_new.mkl_kerja,'KARYAWAN SWASTA', eka.mst_client_new.mpn_job_desc,decode(eka.lst_jabatan.ljb_note,'','-',eka.lst_jabatan.ljb_note)) KERJAB,
			eka.mst_client_new.mkl_tujuan,
			eka.mst_client_new.mkl_tujuan tujuana,
			 eka.mst_client_new.mkl_penghasilan , eka.mst_client_new.mkl_pendanaan ,
			 eka.mst_client_new.mkl_pendanaan danaa,
			 eka.mst_client_new.mkl_industri , eka.mst_client_new.mkl_industri industria,
		       eka.mst_client_new.mspe_no_identity, eka.mst_client_new.mspe_no_identity_expired, eka.mst_client_new.lside_id,
		       eka.mst_client_new.mspe_place_birth,
		       eka.mst_client_new.mspe_date_birth, eka.mst_client_new.mspe_sex, decode(eka.mst_client_new.mspe_sex,1,'PRIA','WANITA') mspe_sex2,
		       eka.mst_client_new.mspe_sts_mrt, eka.mst_policy.mspo_umur_beasiswa,
		       eka.lst_grp_job.lgj_note,eka.lst_grp_job.lgj_id, eka.mst_client_new.mspe_lama_kerja,
		       eka.lst_identity.lside_name, eka.lst_negara.lsne_note,eka.lst_negara.lsne_id,
		       eka.mst_client_new.mcl_gelar, eka.mst_client_new.mpn_job_desc,
		       eka.mst_client_new.mspe_mother, eka.mst_address_new.alamat_rumah,
		       eka.mst_address_new.kd_pos_rumah, eka.mst_address_new.kota_rumah,
		       eka.mst_address_new.kota_rumah kota_rumaha,
		       eka.mst_address_new.area_code_rumah, eka.mst_address_new.telpon_rumah,
		       eka.mst_address_new.alamat_kantor, eka.mst_address_new.kd_pos_kantor,
		       eka.mst_address_new.kota_kantor,
		       eka.mst_address_new.kota_kantor kota_kantora,
		        eka.mst_address_new.no_hp2,
		       eka.mst_address_new.no_hp, eka.mst_address_new.email,
		       eka.mst_address_new.area_code_kantor,
		       eka.mst_address_new.telpon_kantor, eka.mst_policy.reg_spaj,
		       eka.mst_insured.mste_insured_no,
		       eka.mst_insured.mste_spaj_asli,
		       eka.mst_insured.mste_standard, eka.mst_policy.mspo_age mste_age,
		       eka.lst_agama.lsag_name,lst_agama.lsag_id, eka.lst_education.lsed_name,eka.lst_education.lsed_id,
		       eka.lst_jabatan.ljb_id, eka.lst_relation.lsre_id,eka.lst_relation.lsre_relation,
		       eka.mst_agent.msag_id, eka.mst_agent.lca_id, eka.mst_agent.lwk_id,
		       eka.mst_agent.lsrg_id,eka.mst_policy.lscb_id,eka.mst_policy.mspo_policy_no,eka.mst_policy.mspo_policy_holder,
		       eka.mst_policy.mspo_no_blanko,
		       eka.mst_insured.mste_tgl_recur,
		       eka.mst_policy.mspo_under_table,
		       eka.mst_policy.mspo_under_table bonus_tahapan,
		       eka.mst_policy.mspo_pribadi,
		       eka.mst_policy.mspo_follow_up,
		       eka.mst_policy.mspo_ao,
		       eka.mst_policy.lssp_id,
		       b.mcl_first nama_ao,
		       eka.mst_policy.mspo_ref_bii,
		       eka.mst_policy.mspo_spaj_date,
		       eka.mst_policy.mspo_komisi_bii,
		        eka.mst_address_new.area_code_rumah2,
		        eka.mst_address_new.telpon_rumah2,
		        eka.mst_address_new.area_code_kantor2,
		        eka.mst_address_new.telpon_kantor2,
		        eka.mst_address_new.no_fax,
		         eka.mst_address_new.area_code_fax,
		        eka.mst_policy.mspo_customer,
				eka.mst_worksite_flag.nik,
				eka.mst_insured.mste_pct_dplk,
				eka.mst_policy.mspo_jenis_terbit,
				eka.mst_client_new.mspe_email,
				eka.mst_insured.mste_flag_guthrie,
				 t1.*,
				 eka.mst_policy.lssp_id,cabang.lca_nama
		  from eka.mst_address_new,
		       eka.mst_client_new,
		       eka.mst_insured,
		       eka.mst_policy,
		       eka.lst_negara,
		       eka.lst_grp_job,
		       eka.lst_identity,
		       eka.lst_jabatan,
		       eka.lst_agama,
		       eka.lst_education,
		       eka.lst_relation,
		       eka.mst_agent,
		       eka.mst_agent_prod,
		       eka.mst_agent a,
		       eka.mst_client_new b,
		       eka.lst_cabang cabang,
			   eka.mst_worksite_flag,
			(select si.reg_spaj,si.nama "nama_si",si.lsre_id "hubungan_si",si.tanggal_lahir "tgllhr_si",
			anak_1.nama "nama_anak1",anak_1.lsre_id "hubungan_anak1", anak_1.tanggal_lahir "tgllhr_anak1",
			anak_2.nama "nama_anak2",anak_2.lsre_id "hubungan_anak2", anak_2.tanggal_lahir "tgllhr_anak2",
			anak_3.nama "nama_anak3",anak_3.lsre_id "hubungan_anak3", anak_3.tanggal_lahir "tgllhr_anak3"
			from				
			(select reg_spaj ,nama,lsre_id,tanggal_lahir 
			from eka.mst_keluarga 
			where lsre_id = 5 and no = 0 and insured = 1)si,
			(select reg_spaj,nama,lsre_id,tanggal_lahir 
			from eka.mst_keluarga 
			where lsre_id = 4 and no = 1 and insured = 1)anak_1,
			(select reg_spaj,nama,lsre_id,tanggal_lahir 
			from eka.mst_keluarga 
			where lsre_id = 4 and no = 2 and insured = 1)anak_2,
			(select reg_spaj,nama,lsre_id,tanggal_lahir 
			from eka.mst_keluarga 
			where lsre_id = 4 and no = 3 and insured = 1)anak_3
			where si.reg_spaj = anak_1.reg_spaj and
			si.reg_spaj = anak_2.reg_spaj (+)and
			si.reg_spaj = anak_3.reg_spaj (+)	) t1
		 where (eka.mst_client_new.mcl_id = eka.mst_address_new.mcl_id)
		   and (eka.mst_policy.reg_spaj = eka.mst_insured.reg_spaj)
		   and (eka.lst_negara.lsne_id(+) = eka.mst_client_new.lsne_id)
		   and (eka.lst_grp_job.lgj_id(+) = eka.mst_client_new.lgj_id)
		   and (eka.lst_identity.lside_id(+) = eka.mst_client_new.lside_id)
		   and (eka.mst_policy.mspo_policy_holder = eka.mst_client_new.mcl_id)
		   and (eka.mst_client_new.lsag_id = eka.lst_agama.lsag_id(+))
		   and (eka.mst_client_new.lsed_id = eka.lst_education.lsed_id(+))
		   and (eka.mst_policy.lsre_id = eka.lst_relation.lsre_id(+))
		   and (eka.mst_client_new.ljb_id = eka.lst_jabatan.ljb_id(+))
		   and eka.mst_agent.msag_id = eka.mst_agent_prod.msag_id
		   and eka.mst_policy.reg_spaj = eka.mst_agent_prod.reg_spaj
		   and eka.mst_agent_prod.lsle_id = 4
		   and ((eka.mst_policy.reg_spaj = rpad(replace(#value#,'.'),11,' ')))
		   and  (eka.mst_policy.mspo_ao = a.msag_id (+))
		   and (a.mcl_id = b.mcl_id(+)) 
		   and (eka.mst_worksite_flag.reg_spaj(+) = eka.mst_policy.reg_spaj)
		   and t1.reg_spaj (+)=  EKA.MST_POLICY.REG_SPAJ
		   and eka.mst_policy.lca_id=cabang.lca_id
	</select>	 
  
 	<select id="elions.uw.selectTertanggungUpdateNasabah" resultClass="com.ekalife.elions.model.Tertanggung" parameterClass="string">
			SELECT   EKA.MST_CLIENT_NEW.MCL_FIRST,
			EKA.MST_CLIENT_NEW.MCL_ID, 
			EKA.MST_CLIENT_NEW.MKL_KERJA,
			EKA.MST_CLIENT_NEW.MKL_KERJA KERJAA,
			decode(EKA.MST_CLIENT_NEW.MKL_KERJA , 'KARYAWAN SWASTA', EKA.MST_CLIENT_NEW.MPN_JOB_DESC,decode(eka.lst_jabatan.ljb_note,'','-',eka.lst_jabatan.ljb_note)) KERJAB,			EKA.MST_CLIENT_NEW.MKL_TUJUAN, 
			EKA.MST_CLIENT_NEW.MKL_TUJUAN TUJUANA,
			EKA.MST_CLIENT_NEW.MKL_PENGHASILAN ,
			EKA.MST_CLIENT_NEW.MKL_PENDANAAN ,	 	
			EKA.MST_CLIENT_NEW.MKL_PENDANAAN DANAA,	
			EKA.MST_CLIENT_NEW.MKL_INDUSTRI ,      
			EKA.MST_CLIENT_NEW.MKL_INDUSTRI INDUSTRIA,
			EKA.MST_CLIENT_NEW.MSPE_NO_IDENTITY,
			EKA.MST_CLIENT_NEW.MSPE_NO_IDENTITY_EXPIRED,     
			EKA.MST_CLIENT_NEW.LSIDE_ID,      
			EKA.MST_CLIENT_NEW.MSPE_PLACE_BIRTH,     
			EKA.MST_CLIENT_NEW.MSPE_DATE_BIRTH,      
			EKA.MST_CLIENT_NEW.MSPE_SEX, DECODE(EKA.MST_CLIENT_NEW.MSPE_SEX,1,'PRIA','WANITA') MSPE_SEX2,
			EKA.MST_CLIENT_NEW.MSPE_STS_MRT,     
			EKA.MST_POLICY.MSPO_UMUR_BEASISWA,     
			EKA.LST_GRP_JOB.LGJ_NOTE,     
			EKA.LST_GRP_JOB.LGJ_ID, 
			EKA.MST_CLIENT_NEW.MSPE_LAMA_KERJA,     
			EKA.LST_IDENTITY.LSIDE_NAME,     
			EKA.LST_NEGARA.LSNE_NOTE,     
			EKA.LST_NEGARA.LSNE_ID,
			EKA.MST_CLIENT_NEW.MCL_GELAR,     
			EKA.MST_CLIENT_NEW.MPN_JOB_DESC,     
			EKA.MST_CLIENT_NEW.MSPE_MOTHER,     
			EKA.MST_ADDRESS_NEW.ALAMAT_RUMAH,     
			EKA.MST_ADDRESS_NEW.KD_POS_RUMAH,     
			EKA.MST_ADDRESS_NEW.KOTA_RUMAH, 
			EKA.MST_ADDRESS_NEW.KOTA_RUMAH KOTA_RUMAHA,    
			EKA.MST_ADDRESS_NEW.AREA_CODE_RUMAH,     
			EKA.MST_ADDRESS_NEW.TELPON_RUMAH,     
			EKA.MST_ADDRESS_NEW.ALAMAT_KANTOR,     
			EKA.MST_ADDRESS_NEW.KD_POS_KANTOR,     
			EKA.MST_ADDRESS_NEW.KOTA_KANTOR,     
			EKA.MST_ADDRESS_NEW.KOTA_KANTOR KOTA_KANTORA,     
			EKA.MST_ADDRESS_NEW.NO_HP2,      
			EKA.MST_ADDRESS_NEW.NO_HP,     
			EKA.MST_ADDRESS_NEW.EMAIL,     
			EKA.MST_ADDRESS_NEW.AREA_CODE_KANTOR,     
			EKA.MST_ADDRESS_NEW.TELPON_KANTOR,     
			EKA.MST_POLICY.REG_SPAJ,     
 			EKA.MST_INSURED.MSTE_INSURED_NO,
 			EKA.MST_INSURED.LSPD_ID,
			EKA.MST_INSURED.MSTE_STANDARD,
			EKA.MST_INSURED.MSTE_AGE,
			EKA.LST_AGAMA.LSAG_NAME,     
			LST_AGAMA.LSAG_ID,
			EKA.LST_EDUCATION.LSED_NAME,   
			EKA.LST_EDUCATION.LSED_ID,  
			EKA.LST_JABATAN.LJB_ID,  
			EKA.LST_RELATION.LSRE_RELATION,
			EKA.LST_RELATION.LSRE_ID,
			EKA.MST_AGENT.MSAG_ID,   
			EKA.MST_AGENT.LCA_ID,   
			EKA.MST_AGENT.LWK_ID,   
			EKA.MST_AGENT.LSRG_ID,
			EKA.MST_POLICY.LSCB_ID,
			EKA.MST_POLICY.MSPO_POLICY_NO,
	        eka.mst_address_new.area_code_rumah2,
		        eka.mst_address_new.telpon_rumah2,
		        eka.mst_address_new.area_code_kantor2,
		        eka.mst_address_new.telpon_kantor2,
		        eka.mst_address_new.no_fax,
		         eka.mst_address_new.area_code_fax,
		         eka.mst_client_new.mspe_email,
				 t1.*
		FROM EKA.MST_ADDRESS_NEW,     
			EKA.MST_CLIENT_NEW,     
			EKA.MST_INSURED,     
			EKA.MST_POLICY,     
			EKA.LST_NEGARA,     
			EKA.LST_GRP_JOB,      
			EKA.LST_IDENTITY,   
			EKA.LST_JABATAN,  
			EKA.LST_AGAMA,     
			EKA.LST_EDUCATION,     
			EKA.LST_RELATION,
			EKA.MST_AGENT,
			EKA.MST_AGENT_PROD   ,
			(select si.reg_spaj,si.nama "nama_si",si.lsre_id "hubungan_si",si.tanggal_lahir "tgllhr_si",
				anak_1.nama "nama_anak1",anak_1.lsre_id "hubungan_anak1", anak_1.tanggal_lahir "tgllhr_anak1",
				anak_2.nama "nama_anak2",anak_2.lsre_id "hubungan_anak2", anak_2.tanggal_lahir "tgllhr_anak2",
				anak_3.nama "nama_anak3",anak_3.lsre_id "hubungan_anak3", anak_3.tanggal_lahir "tgllhr_anak3"
				from				
				(select reg_spaj ,nama,lsre_id,tanggal_lahir 
				from eka.mst_keluarga 
				where lsre_id = 5 and no = 0 and insured = 0)si,
				(select reg_spaj,nama,lsre_id,tanggal_lahir 
				from eka.mst_keluarga 
				where lsre_id = 4 and no = 1 and insured = 0)anak_1,
				(select reg_spaj,nama,lsre_id,tanggal_lahir 
				from eka.mst_keluarga 
				where lsre_id = 4 and no = 2 and insured = 0)anak_2,
				(select reg_spaj,nama,lsre_id,tanggal_lahir 
				from eka.mst_keluarga 
				where lsre_id = 4 and no = 3 and insured = 0)anak_3
				where si.reg_spaj = anak_1.reg_spaj and
				si.reg_spaj = anak_2.reg_spaj (+) and
				si.reg_spaj = anak_3.reg_spaj (+)	) t1
			    WHERE ( EKA.MST_CLIENT_NEW.MCL_ID = EKA.MST_ADDRESS_NEW.MCL_ID ) and    
			    ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ ) and    
			    ( EKA.LST_NEGARA.LSNE_ID(+) = EKA.MST_CLIENT_NEW.LSNE_ID ) and    
			    ( EKA.LST_GRP_JOB.LGJ_ID(+) = EKA.MST_CLIENT_NEW.LGJ_ID ) and    
			    ( EKA.LST_IDENTITY.LSIDE_ID(+) = EKA.MST_CLIENT_NEW.LSIDE_ID ) and    
			    ( EKA.MST_INSURED.MSTE_INSURED = EKA.MST_CLIENT_NEW.MCL_ID ) and    
			    ( EKA.MST_CLIENT_NEW.LSAG_ID = EKA.LST_AGAMA.LSAG_ID (+)) and    
			    ( EKA.MST_CLIENT_NEW.LSED_ID = EKA.LST_EDUCATION.LSED_ID (+)) and    
			    ( EKA.MST_POLICY.LSRE_ID = EKA.LST_RELATION.LSRE_ID (+)) and    
				 ( EKA.MST_CLIENT_NEW.LJB_ID = EKA.LST_JABATAN.LJB_ID (+)) and  
				 EKA.MST_AGENT.MSAG_ID= EKA.MST_AGENT_PROD.MSAG_ID AND
				 EKA.MST_POLICY.REG_SPAJ = EKA.MST_AGENT_PROD.REG_SPAJ AND
				 EKA.MST_AGENT_PROD.LSLE_ID = 4 AND
			    ( ( EKA.MST_POLICY.REG_SPAJ =rpad(replace(#value#,'.'),11,' ')))and
				t1.reg_spaj (+)=  EKA.MST_POLICY.REG_SPAJ 
	</select>
	
 	<select id="elions.uw.selectMstCommissionKomisiAgen" resultClass="double" parameterClass="java.util.HashMap">
		SELECT msco_comm-msco_tax
		  FROM eka.mst_commission
		 WHERE reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
			   AND lev_comm = #lev_comm#
			   AND msbi_tahun_ke = #msbi_tahun_ke#
			   AND msbi_premi_ke = #msbi_premi_ke#
	</select>
	   
	<select id="elions.uw.selectAllLstRegion1" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		select a.lca_id key, b.lwk_nama value from eka.lst_cabang a, eka.lst_wakil b
		where a.lca_id = b.lca_id 
		order by order by lwk_nama asc
	</select>

	<select id="elions.uw.selectCountProductSimasPrimaAkseptasiKhusus" resultClass="int" parameterClass="java.util.HashMap">
		SELECT COUNT (*)
		  FROM eka.mst_policy a,
		       eka.lst_user b,
		       eka.mst_insured c,
		       eka.mst_reff_bii d,
		       eka.lst_cabang_bii e
		 WHERE a.reg_spaj = c.reg_spaj
		   AND c.mste_insured_no = #insured_no#
		   AND c.lssa_id = #lssa_id#
		   AND a.lus_id = b.lus_id
		   AND a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND a.reg_spaj = d.reg_spaj
		   AND d.lcb_no = e.lcb_no
		   AND e.jenis = #jn_bank#	   
	</select>
		
	<select id="elions.uw.selectAllLstCab" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		select lca_id key , lca_nama value from eka.lst_cabang order by value asc
	</select>
	
	<select id="elions.uw.selectAllLstCab3" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		select lca_id key , lca_nama value from eka.lst_cabang  where lca_id='44' order by value asc 
	</select>
	<select id="elions.uw.selectEmailAddr" parameterClass="string" resultClass="string">
		select distinct Lar_Email from eka.lst_addr_region, eka.lst_cabang
		where lar_lca_id=lca_id and lca_id=#lca_id#
	</select>
	
	<select id="elions.uw.selectEmailCabangPenutup" parameterClass="java.util.HashMap" resultClass="string">
		select distinct (c.lar_email || decode(lar_email_tambahan,null,'',';' || lar_email_tambahan) || decode(lar_email_tambahan_cc,null,'',';' || lar_email_tambahan_cc)) email
		from
			    eka.mst_policy a,
			    eka.lst_region b,
			    eka.lst_addr_region c
		where 
			   a.lca_id=b.lca_id
			   and a.lwk_id=b.lwk_id(+)
			   and a.lsrg_id=b.lsrg_id(+)
			   and b.lar_id=c.lar_id(+)
			   <isEqual property="tipe" compareValue="1">
			   	and a.reg_spaj=#nilai#
			   </isEqual>
			   <isEqual property="tipe" compareValue="2">
			   	and b.lar_id=#nilai#
			   </isEqual>
	</select>
	
	<select id="elions.uw.selectStampHist" parameterClass="string" resultClass="java.util.HashMap">
		select * from eka.mst_stamp_hist 
		where msth_ref_no = rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.mstm_bulan" resultClass="string">
		select max(mstm_bulan) from eka.mst_stamp
	</select>
	
	<select id="elions.uw.selectLstRateRider" resultClass="double" parameterClass="java.util.HashMap" >
		SELECT lsrr_premi
		  FROM eka.lst_rate_rider
			 WHERE lsbs_id = #lsbs_id# AND lsdbs_number = #lsdbs_number# 
			 AND lsrr_age = #lsrr_age# AND lku_id = #lku_id#
	</select>

	<select id="elions.uw.selectCountMstSimultaneous" resultClass="int" parameterClass="string" >
		SELECT COUNT(*) FROM eka.mst_simultaneous WHERE reg_spaj=#reg_spaj#
	</select>
	
	<select id="elions.uw.selectMstSimultaneousIdSimultan" resultClass="string" parameterClass="string" >
		SELECT DISTINCT id_simultan FROM eka.mst_simultaneous WHERE mcl_id=#mcl_id#
	</select>

	<select id="elions.uw.selectLstbisnisLsgrId" resultClass="int" parameterClass="int" >
		SELECT lsgr_id FROM eka.lst_bisnis WHERE lsbs_id=#value#
	</select>
	
	<select id="elions.uw.selectReinstatementWorkSheet" resultClass="com.ekalife.elions.model.reinstate.Reinstatement" parameterClass="string" >
		SELECT a.lssp_id, a.mspo_pay_period, a.mspo_policy_no_format,
		       UPPER (e.lsdbs_name) lsdbs_name, f.lku_symbol, d.mspr_tsi,
		       d.mspr_premium, g.lscb_print, UPPER (cp.mcl_first) nama_pp,
           TO_CHAR (cp.mspe_date_birth, 'DD/MM/YYYY') ttl_pp, (round(months_between(sysdate,cp.mspe_date_birth)/12)) mspo_age,
           UPPER (ct.mcl_first) nama_tt,
           TO_CHAR (ct.mspe_date_birth, 'DD/MM/YYYY') ttl_tt, (round(months_between(sysdate, ct.mspe_date_birth)/12)) mste_age,
	       a.mspo_end_date, a.mspo_ins_period, msbi_aktif_date,
	       (TRUNC (SYSDATE) - i.msbi_aktif_date) + 1 lama_lapse,
	       (msbi_beg_date) tgl_lapse, a.lssp_id, rider.NO,
	       UPPER (rider.lsdbs_name) rider_name, h.msps_desc put_uw_old,
	       TO_CHAR (b.mste_tgl_terima_lb, 'DD/MM/YYYY') mste_tgl_terima_lb,
	       TO_CHAR (b.mste_tgl_kirim_lb, 'DD/MM/YYYY') mste_tgl_kirim_lb,
	       i.msbi_tahun_ke, j.keterangan put_uw_new
	  FROM eka.mst_policy a,
	       eka.mst_insured b,
	       eka.mst_client_new cp,
	       eka.mst_client_new ct,
	       eka.mst_product_insured d,
	       eka.lst_det_bisnis e,
	       (SELECT ROWNUM NO, x.*, eka.f_lsdbs(x.reg_spaj, x.reg_spaj, x.reg_spaj) lsdbs_name
	          FROM eka.mst_product_insured x, eka.lst_det_bisnis y
	         WHERE x.lsbs_id = y.lsbs_id
	           AND x.lsdbs_number = y.lsdbs_number
	           AND (   (x.lsbs_id <![CDATA[>=]]> 600 AND x.lsbs_id <![CDATA[<=]]> 603)
	                OR (x.lsbs_id <![CDATA[>=]]> 800 AND x.lsbs_id <![CDATA[<=]]> 826)
	               )
	           AND x.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')) rider,
	       eka.lst_kurs f,
	       eka.lst_pay_mode g,
	       (SELECT tabel1.reg_spaj, tabel1.msps_desc
	          FROM eka.mst_position_spaj tabel1
	         WHERE tabel1.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
			   AND lssa_id = 5
	           AND lspd_id = 2
	           AND msps_date IN (
	                  SELECT MIN (msps_date)
	                    FROM eka.mst_position_spaj tabel2
	                   WHERE tabel1.lssa_id = tabel2.lssa_id
	                     AND tabel1.lspd_id = tabel2.lspd_id
	                     AND tabel1.reg_spaj = tabel2.reg_spaj)) h,
	       (SELECT *
	          FROM eka.mst_billing tabel1
	         WHERE tabel1.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
			 AND tabel1.msbi_beg_date IN (
	                  SELECT MIN (msbi_beg_date)
	                    FROM eka.mst_billing tabel2
	                   WHERE tabel2.reg_spaj = tabel1.reg_spaj
	                     AND tabel2.msbi_paid = 0)) i,
	       (SELECT *
	          FROM eka.lst_ulangan tabel1
	         WHERE tabel1.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
			 AND tabel1.tanggal IN (SELECT MAX (tabel2.tanggal)
	                                    FROM eka.lst_ulangan tabel2
	                                   WHERE tabel2.jenis = tabel1.jenis)
	           AND tabel1.jenis = 'REINSTATEMENT') j
	 WHERE a.reg_spaj = b.reg_spaj
	   AND a.mspo_policy_holder = cp.mcl_id
	   AND b.mste_insured = ct.mcl_id
	   AND a.reg_spaj = d.reg_spaj
	   AND a.reg_spaj = i.reg_spaj
	   AND d.reg_spaj = rider.reg_spaj(+)
	   AND a.reg_spaj = h.reg_spaj(+)
	   AND a.reg_spaj = j.reg_spaj(+)
	   AND d.lsbs_id <![CDATA[<]]> 300
	   AND d.lsbs_id = e.lsbs_id
	   AND d.lsdbs_number = e.lsdbs_number
	   AND d.lku_id = f.lku_id
	   AND a.lscb_id = g.lscb_id
	   AND i.msbi_paid = 0
	   AND a.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
	   ORDER BY rider.no
    </select>
    
    <select id="elions.uw.selectReinstatementWorkSheet2" resultClass="com.ekalife.elions.model.reinstate.Reinstatement" parameterClass="string" >
		SELECT a.lssp_id, a.mspo_pay_period, a.mspo_policy_no_format,
		       UPPER (e.lsdbs_name) lsdbs_name, f.lku_symbol, d.mspr_tsi,
		       d.mspr_premium, g.lscb_print, UPPER (cp.mcl_first) nama_pp,
           TO_CHAR (cp.mspe_date_birth, 'DD/MM/YYYY') ttl_pp, (round(months_between(sysdate,cp.mspe_date_birth)/12)) mspo_age,
           UPPER (ct.mcl_first) nama_tt,
           TO_CHAR (ct.mspe_date_birth, 'DD/MM/YYYY') ttl_tt, (round(months_between(sysdate, ct.mspe_date_birth)/12)) mste_age,
	       a.mspo_end_date, a.mspo_ins_period, msbi_aktif_date,
	       (TRUNC (SYSDATE) -  k.tgl_prod) lama_lapse,
	        k.tgl_prod tgl_lapse, a.lssp_id, rider.NO,
	       UPPER (rider.lsdbs_name) rider_name, h.msps_desc put_uw_old,
	       TO_CHAR (b.mste_tgl_terima_lb, 'DD/MM/YYYY') mste_tgl_terima_lb,
	       TO_CHAR (b.mste_tgl_kirim_lb, 'DD/MM/YYYY') mste_tgl_kirim_lb,
	       i.msbi_tahun_ke, j.keterangan put_uw_new 
	  FROM eka.mst_policy a,
	       eka.mst_insured b,
	       eka.mst_client_new cp,
	       eka.mst_client_new ct,
	       eka.mst_product_insured d,
	       eka.lst_det_bisnis e,
	       (SELECT ROWNUM NO, x.*, eka.f_lsdbs(x.reg_spaj, x.reg_spaj, x.reg_spaj) lsdbs_name
	          FROM eka.mst_product_insured x, eka.lst_det_bisnis y
	         WHERE x.lsbs_id = y.lsbs_id
	           AND x.lsdbs_number = y.lsdbs_number
	           AND (   (x.lsbs_id <![CDATA[>=]]> 600 AND x.lsbs_id <![CDATA[<=]]> 603)
	                OR (x.lsbs_id <![CDATA[>=]]> 800 AND x.lsbs_id <![CDATA[<=]]> 826)
	               )
	           AND x.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')) rider,
	       eka.lst_kurs f,
	       eka.lst_pay_mode g,
	       (SELECT tabel1.reg_spaj, tabel1.msps_desc
	          FROM eka.mst_position_spaj tabel1
	         WHERE tabel1.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
			   AND lssa_id = 5
	           AND lspd_id = 2
	           AND msps_date IN (
	                  SELECT MIN (msps_date)
	                    FROM eka.mst_position_spaj tabel2
	                   WHERE tabel1.lssa_id = tabel2.lssa_id
	                     AND tabel1.lspd_id = tabel2.lspd_id
	                     AND tabel1.reg_spaj = tabel2.reg_spaj)) h,
	       (SELECT *
	          FROM eka.mst_billing tabel1
	         WHERE tabel1.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
			 AND tabel1.msbi_beg_date IN (
	                  SELECT MIN (msbi_beg_date)
	                    FROM eka.mst_billing tabel2
	                   WHERE tabel2.reg_spaj = tabel1.reg_spaj
	                     AND tabel2.msbi_paid = 0)) i,
	       (SELECT *
	          FROM eka.lst_ulangan tabel1
	         WHERE tabel1.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
			 AND tabel1.tanggal IN (SELECT MAX (tabel2.tanggal)
	                                    FROM eka.lst_ulangan tabel2
	                                   WHERE tabel2.jenis = tabel1.jenis)
	           AND tabel1.jenis = 'REINSTATEMENT') j ,
	   (select tgl_prod, reg_spaj from (
            select reg_spaj, tgl_prod, sum(pot_tunggak) as pot_tunggak, sum(premi_tunggak) as premi_tunggak, mcl_first, tgl_proses,
            mspo_policy_no, mspo_age as age_pp, tahun, pot_ke, usia_pp, usia_tt, mste_age as age_tt, lku_id, mspr_tsi, lama_lapse,
            usia_polis, ket_pp, ket_tt, mste_beg_date, lsbs_id, lsre_id, lscb_id, mspo_pay_period, mspr_premium, lsdbs_number, to_date(null) as bill_beg_date,
            to_date(null) as tgl_bayar
            from (
            select a.reg_spaj, 0 as pot_tunggak, (a.mu_jlh_premi + a.mu_jlh_tu) as premi_tunggak, b.tgl_prod, d.mcl_first, b.tgl_proses,
            c.mspo_policy_no, c.mspo_age, b.tahun, b.pot_ke, b.usia_pp, b.usia_tt, e.mste_age, c.lku_id, f.mspr_tsi,
            0 as lama_lapse, 0 as usia_polis, ' ' as ket_pp, ' ' as ket_tt, e.mste_beg_date, f.lsbs_id, c.lsre_id, c.lscb_id,
            c.mspo_pay_period, f.mspr_premium, f.lsdbs_number
            from eka.mst_ulink a, eka.mst_ulink_bill b, eka.mst_policy c, eka.mst_client_new d, eka.mst_insured e, eka.mst_product_insured f
            where a.reg_spaj =#value# and
            a.mu_ke = 1 and
            a.reg_spaj = b.reg_spaj and
            a.reg_spaj = c.reg_spaj and
            a.reg_spaj = e.reg_spaj and
            e.reg_spaj = f.reg_spaj and
            c.mspo_policy_holder = d.mcl_id and
            e.mste_insured_no = f.mste_insured_no and
            f.lsbs_id <![CDATA[<]]> 300 and
            b.tgl_prod <![CDATA[>]]>  (select max(msbi_beg_date) from eka.mst_billing where reg_spaj = a.reg_spaj and msbi_paid = 1)
            UNION ALL
            select a.reg_spaj, b.total_premi, 0 as premi_tunggak, b.tgl_prod, d.mcl_first, b.tgl_proses,
            c.mspo_policy_no, c.mspo_age, b.tahun, b.pot_ke, b.usia_pp, b.usia_tt, e.mste_age, c.lku_id, f.mspr_tsi,
            0 as lama_lapse, 0 as usia_polis, ' ' as ket_pp, ' ' as ket_tt, e.mste_beg_date, f.lsbs_id, c.lsre_id, c.lscb_id,
            c.mspo_pay_period, f.mspr_premium, f.lsdbs_number 
            from eka.mst_ulink a, eka.mst_ulink_bill b, eka.mst_policy c, eka.mst_client_new d, eka.mst_insured e, eka.mst_product_insured f
            where a.reg_spaj = #value# and
            a.mu_ke = 1 and
            a.reg_spaj = b.reg_spaj and
            a.reg_spaj = c.reg_spaj and
            a.reg_spaj = e.reg_spaj and
            e.reg_spaj = f.reg_spaj and
            c.mspo_policy_holder = d.mcl_id and
            e.mste_insured_no = f.mste_insured_no and
            f.lsbs_id <![CDATA[<]]> 300 and
            b.tgl_prod <![CDATA[>]]>  (select max(msbi_beg_date) from eka.mst_billing where reg_spaj = a.reg_spaj and msbi_paid = 1) and
            b.flag_kurang = 1 )
            GROUP BY reg_spaj, tgl_prod, mcl_first, tgl_proses, mspo_policy_no, mspo_age, tahun, pot_ke, usia_pp,
            usia_tt,mste_age,lku_id,mspr_tsi, lama_lapse, usia_polis, ket_pp, ket_tt, mste_beg_date, lsbs_id,
            lsre_id, lscb_id, mspo_pay_period, mspr_premium, lsdbs_number
            order by tgl_prod asc
            ) where  rownum=1)k
	 WHERE a.reg_spaj = b.reg_spaj
	   AND a.mspo_policy_holder = cp.mcl_id
	   AND b.mste_insured = ct.mcl_id
	   AND a.reg_spaj = d.reg_spaj
	   AND a.reg_spaj = i.reg_spaj
	   AND d.reg_spaj = rider.reg_spaj(+)
	   AND a.reg_spaj = h.reg_spaj(+)
	   AND a.reg_spaj = j.reg_spaj(+)
	   AND d.lsbs_id <![CDATA[<]]> 300
	   AND d.lsbs_id = e.lsbs_id
	   AND d.lsdbs_number = e.lsdbs_number
	   AND d.lku_id = f.lku_id
	   AND a.lscb_id = g.lscb_id
	   AND i.msbi_paid = 0
	   AND a.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
	   ORDER BY rider.no
    </select>
    
    <select id="elions.uw.selectUwRenewal" parameterClass="string" resultClass="java.util.HashMap" >
		SELECT  A.REG_SPAJ, 
                A.MSPO_NO_BLANKO no_blanko, 
                a.mspo_policy_no_format no_polis,
                initcap(EKA.UTILS.PEMEGANG(a.reg_spaj)) nama_pp, 
                (initcap(C.MCL_FIRST) || ' / ' ||  (trunc((sysdate - C.MSPE_DATE_BIRTH)/365)+1) ) pemegang,
                (initcap(d.MCL_FIRST) || ' / ' ||  (trunc((sysdate - d.MSPE_DATE_BIRTH )/365)+1) ) tertanggung,
                pri.LSBS_ID,
                pri.LSDBS_NUMBER,
                ((select to_char((ADD_MONTHS( PI.MSPR_BEG_DATE, 12 )),'dd/mm') || '/' || to_char((ADD_MONTHS( sysdate, (case when (((select to_char((ADD_MONTHS( PI.MSPR_BEG_DATE, 12 )-1),'yyyy') from eka.mst_product_insured pi 
		where a.reg_spaj = pi.reg_spaj and pri.lsbs_id = pi.lsbs_id and pi.lsdbs_number = pri.lsdbs_number))-(to_char(sysdate,'yyyy'))) = 1 then 12 else 0 end) )-1),'yyyy')
                    from eka.mst_product_insured pi where a.reg_spaj = pi.reg_spaj and pri.lsbs_id = pi.lsbs_id and pi.lsdbs_number = pri.lsdbs_number) || ' - ' ||            
                    (select to_char((ADD_MONTHS( PI.MSPR_BEG_DATE, 24 )-1),'dd/mm') || '/' || to_char((ADD_MONTHS( sysdate, (12+(case when (((select to_char((ADD_MONTHS( PI.MSPR_BEG_DATE, 12 )-1),'yyyy') from eka.mst_product_insured pi 
		where a.reg_spaj = pi.reg_spaj and pri.lsbs_id = pi.lsbs_id and pi.lsdbs_number = pri.lsdbs_number))-(to_char(sysdate,'yyyy'))) = 1 then 12 else 0 end)) )-1),'yyyy')
                    from eka.mst_product_insured pi where a.reg_spaj = pi.reg_spaj and pri.lsbs_id = pi.lsbs_id and pi.lsdbs_number = pri.lsdbs_number)) periode_polis,
                (SELECT TO_CHAR(SYSDATE,'dd MON yyyy') FROM DUAL) tggl,
                (SELECT TO_CHAR(SYSDATE,'dd-mm-yyyy') FROM DUAL) tggl1
            FROM eka.mst_policy a, eka.mst_insured i, eka.mst_client_new c, eka.mst_client_new d, eka.mst_product_insured pri
            WHERE a.lstb_id = 1
                AND a.reg_spaj = i.reg_spaj
                and a.mspo_policy_holder = c.mcl_id
                and i.mste_insured = d.mcl_id (+)
                and a.reg_spaj = pri.reg_spaj
                AND a.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
    </select>

    <select id="elions.uw.selectRenewalDU" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select db.lsdbs_name PROD, db.lsbs_id, db.lsdbs_number, (db.lsbs_id || '-' || db.lsdbs_number) kode
		from eka.mst_product_insured pi, eka.lst_det_bisnis db
		where pi.reg_spaj = RPAD (REPLACE (#spaj#, '.'), 11, ' ')
		and pi.lsbs_id = db.lsbs_id 
		and pi.lsdbs_number = db.lsdbs_number
		<isEqual property="tim" compareValue="1">
			and pi.lsbs_id <![CDATA[<]]> 300
		</isEqual>
		<isEqual property="tim" compareValue="2">
			and pi.lsbs_id <![CDATA[>]]> 300
		</isEqual>
    </select>
    
    <select id="elions.uw.selectProdRenewal" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select * from(
	        select db.lsdbs_name PROD, db.lsbs_id, db.lsdbs_number, (db.lsbs_id || '-' || db.lsdbs_number) kode
	        from eka.mst_product_insured pi, eka.lst_det_bisnis db
	        where pi.reg_spaj = RPAD (REPLACE (#spaj#, '.'), 11, ' ')
	        and pi.lsbs_id = db.lsbs_id 
	        and pi.lsdbs_number = db.lsdbs_number
		) where kode = #kode#  
    </select>
   
	<select id="elions.uw.selectSpajLostInsertMstReinsProduct" resultClass="string"  >
		<!-- 
		SELECT satu.reg_spaj FROM 
		(SELECT *FROM eka.mst_reins a
		WHERE a.lsbs_id IN(86,94,123,124,142,143,144,155,158)) satu
		,
		(SELECT * FROM eka.mst_position_spaj a
		WHERE a.msps_date IN(
		SELECT MAX(b.msps_date) tgl FROM eka.mst_position_spaj  b WHERE b.lspd_id=4 AND a.reg_spaj=b.reg_spaj )) dua
		WHERE satu.reg_spaj=dua.reg_spaj AND 
		dua.msps_date  <![CDATA[>=]]>  TO_DATE ('15/01/2008 00:00:00','dd/mm/yyyy hh24:mi:ss') AND
		dua.msps_date  <![CDATA[<=]]>  TO_DATE ('16/01/2008 13:52:00','dd/mm/yyyy hh24:mi:ss')
		MINUS
		SELECT reg_spaj FROM eka.mst_reins_product WHERE reg_spaj IN(
		SELECT satu.reg_spaj FROM 
		(SELECT *FROM eka.mst_reins a
		WHERE a.lsbs_id IN(86,94,123,124,142,143,144,155,158)) satu
		,
		(SELECT * FROM eka.mst_position_spaj a
		WHERE a.msps_date IN(
		SELECT MAX(b.msps_date) tgl FROM eka.mst_position_spaj  b WHERE b.lspd_id=4 AND a.reg_spaj=b.reg_spaj )) dua
		WHERE satu.reg_spaj=dua.reg_spaj AND 
		dua.msps_date  <![CDATA[>=]]>  TO_DATE ('15/01/2008 00:00:00','dd/mm/yyyy hh24:mi:ss') AND
		dua.msps_date  <![CDATA[<=]]>  TO_DATE ('16/01/2008 13:52:00','dd/mm/yyyy hh24:mi:ss')
		) -->
			
	</select>
	<select id="elions.uw.selectCountMReasTempNew" parameterClass="string" resultClass="int">
		select count(reg_spaj)
			from eka.m_reas_temp_new  
				where reg_spaj=rpad(replace(#reg_spaj#,'.'),11,' ') 
	</select>
	
	<select id="elions.uw.selectMstReins" parameterClass="string" resultClass="int">
		select count(reg_spaj)
			from eka.mst_reins  
				where reg_spaj=rpad(replace(#reg_spaj#,'.'),11,' ') 
	</select>
	<select id="elions.uw.selecCounttMstReinsProd" parameterClass="string" resultClass="int">
		select COUNT (*) from eka.mst_reins_product
		where reg_spaj=rpad(replace(#reg_spaj#,'.'),11,' ')
			AND lsbs_id like '8%'
	</select>
	
	<select id="elions.uw.selectLstJenisPrefix" resultClass="com.ekalife.elions.model.vo.JenisMedicalVO" >
		SELECT
            jns_medis as cd, jns_prefix as descr
        FROM eka.lst_jenis_medical
        GROUP BY jns_medis, jns_prefix
	</select>

    <select id="elions.uw.selectMedicalCheckupList" resultClass="com.ekalife.elions.model.vo.MedicalCheckupVO" >
		SELECT
            lsmc_id as cd, lsmc_name as descr
        FROM eka.lst_medical_check_up
        WHERE active = 1
        ORDER BY lsmc_name
	</select>

    <select id="elions.uw.selectMedicalCheckupListByJenisMedis" resultClass="java.lang.Integer" parameterClass="java.lang.Integer" >
		SELECT
            lsmc_id
        FROM eka.lst_jenis_medical
		WHERE jns_medis = #jns_medis#
	</select>

    <select id="elions.uw.selectPersonBySpaj" resultClass="java.util.HashMap" parameterClass="string" >
		SELECT c.mcl_first pemegang, d.mcl_first tertanggung
        FROM
            eka.mst_policy a,
            eka.mst_insured b,
            eka.mst_client c,
            eka.mst_client d
        WHERE
            a.reg_spaj = #spaj#
            AND a.reg_spaj = b.reg_spaj
            AND a.mspo_policy_holder = c.mcl_id
            AND b.mste_insured = d.mcl_id
	</select>
	
	<select id="elions.uw.selectCountCekValid" resultClass="java.lang.Integer"
		parameterClass="java.lang.String">
			 SELECT Count(*)  
			  FROM EKA.LST_CEK_VALID  
			 WHERE REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ') 
	</select>
	
	
	<select id="elions.uw.selectCabangEmail" resultClass="java.util.HashMap"
	parameterClass="java.lang.String">
		select lca_id key, lca_nama value, b.LAR_EMAIL from eka.lst_cabang a,  eka.lst_addr_region b
		where a.lca_id= b.lar_lca_id and b.lar_lca_id = #cabang#
		order by lca_nama 
	</select>
	
	<select id="elions.uw.selectIntMonth" parameterClass="string" resultClass="int">
		select (case when to_char(mste_beg_date,'mm')<![CDATA[<>]]>  to_char(sysdate, 'mm') then 0 else 1 end) hasil 
		from eka.mst_insured
		where reg_spaj= #spaj#
	</select>
	
	<select id="elions.uw.selectFlagReas" resultClass="int" parameterClass="string">
		select mste_reas from eka.m_reas_temp where reg_spaj= #spaj#
	</select>
	
		
	<select id= "elions.uw.selectGroupReas" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		select distinct b.lsgr_id from eka.lst_bisnis_reas a, eka.lst_group_reas b
		where a.lsgr_id=b.lsgr_id and a.lsbs_id=#bisnisId#
	</select>
	
<select id="elions.uw.selectGetInfoForRate" resultMap="elions.uw.selectGetInfoForRate.result" parameterClass="java.util.HashMap">
	select a.MSTE_AGE LI_UMUR, TO_CHAR (a.mste_beg_date, 'dd/mm/yyyy') LDT_BDATE, b.lsbs_id LI_BISNIS, b.mspr_tsi LDEC_UP 
	from
	eka.MST_INSURED a,
	eka.MST_PRODUCT_INSURED b,
	eka.MST_POLICY c
	where a.reg_spaj = c.reg_spaj
	and a.reg_spaj = b.reg_spaj
	and b.lsbs_id <![CDATA[<]]> 300
	and c.reg_spaj = #regSpaj#
	</select>
	
	<select id="elions.uw.selectGetLdecRate" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT LSTAB_VALUE  
	 	FROM EKA.LST_TABLE
		WHERE   LSTAB_JENIS = 2 AND  
			LSBS_ID = #bisnisId# AND  
			LKU_ID = '02' AND  
		 	LSCB_ID = 0 AND  
			LSTAB_LAMA_BAYAR = 1  AND  
			LSTAB_LAMA_TANGGUNG = 8  AND  
			LSTAB_TAHUN_KE = #thnKe# AND  
			LSTAB_AGE = #umur#
	</select>
	
		<select id="elions.uw.selectGetLdecRateIfNoRow" resultClass="java.lang.String" parameterClass="java.util.HashMap">
			SELECT LSTAB_VALUE  
		 	FROM EKA.LST_TABLE
			WHERE LSTAB_JENIS = 3 AND  
				LSBS_ID = #bisnisId# AND  
				LKU_ID = '02' AND  
			 	LSCB_ID = 0 AND  
				LSTAB_LAMA_BAYAR = 1  AND  
				LSTAB_LAMA_TANGGUNG = 8  AND  
				LSTAB_TAHUN_KE = 4 AND  
				LSTAB_AGE = #umur#
	</select>
	
	<select id="elions.uw.selectIcdDesc" resultClass="java.lang.String" parameterClass="java.lang.String">	
		SELECT lic_desc FROM eka.lst_icd WHERE lic_id = #value#
	</select>
	
	<select id="elions.uw.selectIcdCategory" resultClass="java.lang.String" parameterClass="java.lang.String">	
		SELECT lic_category FROM eka.lst_icd WHERE lic_id = #value#
	</select>
	
		<select id="elions.uw.selectPincab" resultClass="java.util.HashMap">	
		  SELECT DISTINCT a.kode_cab,b.nama_cab, eka.add_workdays(sysdate,-4) date1, eka.add_workdays(sysdate,-1) date2
			FROM eka.mst_drek a, eka.cab_bsm b
		   WHERE kode_cab = kode(+)
			 AND tgl_proses IS NULL
			 AND a.nilai_trx BETWEEN 0 AND 999999999999
			 AND a.lsbp_id = 156
			 AND a.norek_ajs in ('0000791814','0000791822','0001238299','0001238288')
			 AND a.tgl_trx between to_date('07/01/2009','mm/dd/yyyy') and eka.add_workdays(sysdate,-4)
			 AND a.kode_cab is not null
			 AND b.nama_cab is not null			 
			 AND a.kode_cab != 'EBK'
			 AND (upper(a.ket) not like '%TOP%' and upper(a.ket) not like '%UP%')
		ORDER BY a.kode_cab				
	</select>
	
	<select id="elions.uw.selectEmailPincab_Ao" resultClass="java.lang.String" parameterClass="java.lang.String">
		SELECT NVL (d.mspe_email, 'n/a') mspe_email
		  FROM eka.mst_agent c, eka.mst_client_new d
		 WHERE c.msag_id = #value# AND c.mcl_id = d.mcl_id	
	</select>
	
	<select id="elions.uw.selectEmailPincab" resultClass="java.util.HashMap" parameterClass="java.lang.String">
<!-- 		SELECT nvl(a.msag_id_ao,'n/a') msag_id_ao, b.kode,b.nama_cab,b.em_pincab -->
<!-- 		  FROM eka.lst_cabang_bii a, eka.cab_bsm b -->
<!-- 		 WHERE a.kode = SUBSTR (b.kode1, -3) AND a.jenis = 2 AND b.kode = #value#	 -->
			SELECT nvl(a.msag_id_ao,'n/a') msag_id_ao, a.mnemonic kode,a.nama_cabang nama_cab, a.email_cab em_pincab, upper(a.team_name) team_name
			FROM eka.lst_cabang_bii a
			 WHERE a.jenis = 2 AND a.mnemonic = #value#
	</select>	
	
	<select id="elions.uw.getRowSs" resultClass="java.lang.Integer">
		  SELECT count(*)
		    FROM eka.mst_drek drek,
		         eka.lst_bank_pusat bank,
		         eka.lst_kurs kurs,
		         eka.lst_user user_input,
		         eka.lst_user user_proses,
		         eka.cab_bsm cab,
		         eka.lst_rek_ekalife r,
		         eka.lst_bank rb,
		         eka.lst_bank_pusat rbp
		   WHERE drek.tgl_trx between to_date('07/01/2009','mm/dd/yyyy') and eka.add_workdays(sysdate,-4)
			 AND drek.nilai_trx between 0 and 999999999999
		     AND drek.lsbp_id = 156
		     AND drek.lsbp_id = bank.lsbp_id(+)
		     AND drek.lku_id = kurs.lku_id(+)
		     AND drek.user_input = user_input.lus_id(+)
		     AND drek.user_proses = user_proses.lus_id(+)
		     AND drek.kode_cab = cab.kode(+)
		     AND drek.norek_ajs = replace(replace(replace(r.lre_acc_no,'.'),'-'),' ')
		     AND drek.norek_ajs in ('0000791814','0000791822','0001238299','0001238288')
		     AND r.lbn_id = rb.lbn_id
		     AND rb.lsbp_id = rbp.lsbp_id
		     AND drek.tgl_proses is null
		     AND (upper(drek.ket) not like '%TOP%' and upper(drek.ket) not like '%UP%')
		     AND r.lsrek_id in(214,216,223,278)
	</select>
	
	<select id="elions.uw.selectVersionViewMedis" resultClass="int">
		SELECT DISTINCT (CASE
				       		WHEN trunc(min(msdm_input_date)) <![CDATA[>]]> to_date('3/6/2009','dd/mm/yyyy') THEN 1
							ELSE 0
					    END) ver
		 FROM eka.mst_det_medical
		WHERE reg_spaj = #value#	
	</select> 
	
	<select id="elions.uw.selectSpajExpire" resultClass="java.util.HashMap">
		  SELECT reg_spaj
		    FROM (SELECT   a.reg_spaj, MAX (b.msps_date) max_proses
		              FROM eka.mst_policy a, eka.mst_position_spaj b
		             WHERE a.lstb_id = 1
		               AND a.lspd_id = 1
		               AND a.mspo_input_date <![CDATA[<]]> ADD_MONTHS (SYSDATE, -3)
		               AND a.reg_spaj = b.reg_spaj
		          GROUP BY a.reg_spaj)
		   WHERE max_proses <![CDATA[<]]> ADD_MONTHS (SYSDATE, -3)
		ORDER BY reg_spaj	
	</select>
	
	<select id="elions.uw.selectTahunFiling" resultClass="java.util.HashMap">
		SELECT distinct TO_CHAR (b.tgl_created, 'yyyy') tahun
		  FROM filing.mbox a, filing.mfile b
		 WHERE a.kd_box = b.kd_box AND a.kd_divisi = 11	
	</select>
	
	<select id="elions.uw.selectBulanFiling" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT DISTINCT TO_CHAR (b.tgl_created, 'mm') VALUE,
		                TO_CHAR (b.tgl_created, 'MONTH') label
		           FROM filing.mbox a, filing.mfile b
		          WHERE a.kd_box = b.kd_box
		            AND a.kd_divisi = 11
		            AND TO_CHAR (b.tgl_created, 'yyyy') = #value# 	
	</select>

	<select id="elions.uw.selectBiiNonSelfGen" parameterClass="string" resultClass="java.util.HashMap">
		select c.mspo_policy_no,eka.f_lsdbs(d.reg_spaj, d.reg_spaj, d.reg_spaj) lsdbs_name,b.nm_jenis, a.jn_lead as JN_LEAD
			from eka.mst_nasabah a,
				 eka.lst_jn_nasabah b,
				 eka.mst_policy c,
				 eka.mst_product_insured d,
				 eka.lst_det_bisnis e
			where a.jn_nasabah=b.jn_nasabah
			and	  a.mns_kd_nasabah=c.mspo_plan_provider
			and	  c.reg_spaj=d.reg_spaj
			and	  d.lsbs_id = e.lsbs_id
			and	  d.lsdbs_number = e.lsdbs_number
			and	  e.jn_bank=1
			and	  a.referrer_id is not null
			and   c.reg_spaj = rpad(replace(#value#,'.'),11,' ')
			union all
		select c.mspo_policy_no,eka.f_lsdbs(d.reg_spaj, d.reg_spaj, d.reg_spaj) lsdbs_name,'' as nm_jenis, 1 as JN_LEAD 
			from eka.mst_reff_bii a,
				 eka.mst_policy c,
				 eka.mst_product_insured d,
				 eka.lst_det_bisnis e
			where a.reg_spaj=c.reg_spaj
			and	  c.reg_spaj=d.reg_spaj
			and	  d.lsbs_id = e.lsbs_id
			and	  d.lsdbs_number = e.lsdbs_number
			and	  a.level_id=4
			and   c.reg_spaj = rpad(replace(#value#,'.'),11,' ')
			and	  e.jn_bank=1
	</select>
	
	<select id="elions.uw.selectNoTranSLink" parameterClass="java.util.HashMap" resultClass="int">
		select count(*) from EKA.MST_SLINK where no_trx like '%'|| upper(#no_trx#)||'%'  and msl_tu_ke <![CDATA[<>]]>#tu_ke#
	</select>
	
	<select id="elions.uw.selectNoTranPsave" parameterClass="java.util.HashMap" resultClass="int">
		select count(*) from EKA.MST_PSAVE where mps_no_trx like '%'|| upper(#no_trx#)||'%'  and mps_tu_ke <![CDATA[<>]]>#tu_ke#
	</select>
	
	<select id="elions.uw.selectNoKeSlink" parameterClass="string" resultClass="int">
		select nvl(max(msl_premi_ke),0) from eka.mst_slink where reg_spaj =#value# and msl_new =2
	</select>
	
	<select id="elions.uw.selectCabBsm" parameterClass="string" resultClass="java.util.HashMap">
		select * from eka.cab_bsm where kode=upper(#value#)
	</select>
	
	<select id="elions.uw.getBankPusat" parameterClass="string" resultClass="string">
		SELECT b.lsbp_id
		  FROM eka.lst_bank a, eka.lst_bank_pusat b
		 WHERE a.lsbp_id = b.lsbp_id AND a.lbn_id = #value#	
	</select>
	
	<select id="elions.uw.getFlagSpecial" parameterClass="string" resultClass="int">
		SELECT flag_special
		  FROM eka.mst_slink
		 WHERE msl_no =1 AND reg_spaj = #value#
	</select>
	
	<select id="elions.uw.selectMstEndorsAutoRider" parameterClass="string" resultClass="int">
		SELECT msen_auto_rider 
		  FROM eka.mst_endors a, eka.mst_product_ins_end b
		 WHERE a.msen_endors_no = b.msen_endors_no
		   AND a.reg_spaj = b.reg_spaj
		   AND b.lsbs_id = 822 
		   AND a.reg_spaj = #value#
	</select>
	
	<select id="elions.uw.select_blacklist_id" resultClass="int">
	 SELECT (CASE WHEN (COUNT(lbl_id) = 0) THEN 1
			ELSE (MAX(lbl_id)+1)
			END)
	 from eka.lst_black_list
	</select> 
	
	<select id="elions.uw.select_blacklistFamily_id" resultClass="int">
		SELECT (CASE WHEN (COUNT(lblf_id) = 0) THEN 1
			ELSE (MAX(lblf_id)+1)
			END)
	 	from eka.lst_black_list_family
	</select> 
	
	<select id="elions.uw.select_productName" resultClass="java.lang.String" parameterClass="java.lang.String">
		SELECT eka.f_lsdbs(prod.reg_spaj, prod.reg_spaj, prod.reg_spaj) lsdbs_name
		  FROM eka.mst_policy pol,
		       eka.mst_insured ins,
		       eka.mst_product_insured prod,
		       eka.mst_client_new pp,
			   eka.lst_det_bisnis ldb
		 WHERE pol.reg_spaj = ins.reg_spaj
		   AND pol.reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ')
		   AND pol.mspo_policy_holder = pp.mcl_id
		   AND ins.mste_insured_no = prod.mste_insured_no
		   AND ins.reg_spaj = prod.reg_spaj
		   AND prod.lsbs_id <![CDATA[<]]> 300
		   AND pol.mspo_policy_holder = pp.mcl_id
		   AND prod.lsbs_id = ldb.lsbs_id
		   AND prod.lsdbs_number = ldb.lsdbs_number 
	</select> 
	
	<select id="elions.uw.selectExistBlacklist" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(*) from eka.lst_black_list a, eka.mst_client_new b
		where (upper(trim(a.lbl_nama)) = upper(trim(#mcl_first#)) or upper(trim(a.lbl_nama_alias_1)) = upper(trim(#mcl_first#)) 
		or upper(trim(a.lbl_nama_alias_2)) = upper(trim(#mcl_first#)) or upper(trim(a.lbl_nama_alias_3)) = upper(trim(#mcl_first#))
		or upper(trim(a.lbl_nama_alias_4)) = upper(trim(#mcl_first#)) or upper(trim(a.lbl_nama_alias_5)) = upper(trim(#mcl_first#)))
			AND to_date(a.lbl_tgl_lahir) = to_date(#mspe_date_birth#, 'dd/mm/yyyy')
		and a.mcl_id = b.mcl_id
	</select>
	
	<select id="elions.uw.selectCheckSpajInMstSLink" parameterClass="string" resultClass="java.lang.Integer">
	SELECT count(*)
 	 FROM eka.mst_policy a, eka.mst_slink b
 	WHERE a.reg_spaj = b.reg_spaj
  	 AND a.mspo_date_print <![CDATA[<=]]> TO_DATE ('01/09/2009', 'dd/mm/yyyy')
   	AND b.msl_no = 1
   	AND b.reg_spaj = #spaj#
   </select>
   
   
   	<select id="elions.uw.selectCheckSpajInMstSLinkBasedFlagBulanan" parameterClass="string" resultClass="java.lang.Integer">
	SELECT COUNT (*)
  	FROM eka.mst_slink
 	WHERE reg_spaj = #spaj# AND flag_bulanan <![CDATA[>]]> 0 
   </select>
   
   <select id="elions.uw.selectCheckSpajInMstPsave" parameterClass="string" resultClass="java.lang.Integer">
	SELECT count(*)
 	 FROM eka.mst_policy a, eka.mst_psave b
 	WHERE a.reg_spaj = b.reg_spaj
  	 AND a.mspo_date_print <![CDATA[<=]]> TO_DATE ('01/09/2009', 'dd/mm/yyyy')
   	AND b.mps_no = 1
   	AND b.reg_spaj = #spaj#
   </select>
   
   
   	<select id="elions.uw.selectCheckSpajInMstPsaveBasedFlagBulanan" parameterClass="string" resultClass="java.lang.Integer">
	SELECT COUNT (*)
  	FROM eka.mst_psave
 	WHERE reg_spaj = #spaj# AND flag_bulanan <![CDATA[>]]> 0
 	AND b.mps_no = 1 
   </select>
   
   <select id="elions.uw.selectCheckSpajInLstUlangan" parameterClass="string" resultClass="java.lang.Integer">
   SELECT COUNT (*)
  FROM eka.lst_ulangan
 WHERE reg_spaj = #spaj# AND jenis = 'SURAT ENDORS SLINK MBULANAN'
 </select>

	<select id="elions.uw.selectExtraMortalita" parameterClass="string" resultClass="java.util.HashMap">
		SELECT a.lem_yrt, c.lsbs_id, c.mspr_tsi, d.lscb_id
		  FROM eka.lst_ext_mor a,
		       eka.mst_insured b,
		       eka.mst_product_insured c,
		       eka.mst_policy d
		 WHERE a.lem_umur = b.mste_age
		   AND b.reg_spaj = c.reg_spaj
		   AND b.reg_spaj = d.reg_spaj
		   AND a.lstab_sex = 9
		   AND c.lsbs_id <![CDATA[<]]> 300
		   AND b.reg_spaj = #value#	
	</select>
	
	<select id="elions.uw.selectDataAdmedika" parameterClass="string" resultClass="java.util.HashMap">
		select a.reg_spaj, a.mspo_policy_no, a.mspo_policy_no_format, c.msen_endors_no, e.mcl_first nama_pp, f.mcl_first nama_tt,
			   b.mste_beg_date
		from eka.mst_policy a,
			 eka.mst_insured b,
			 eka.mst_endors c,
			 eka.mst_client_new e,
			 eka.mst_client_new f
		where a.reg_spaj = b.reg_spaj
		and a.reg_spaj = c.reg_spaj
		and a.mspo_policy_holder = e.mcl_id
		and b.mste_insured = f.mcl_id 
		and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		and c.msen_auto_rider = 5
	</select>
	
	<select id="elions.uw.selectLcaIdMstPolicyBasedSpaj" parameterClass="java.lang.String" resultClass="java.lang.String">
		select lca_id from eka.mst_policy where reg_spaj = #spaj#
	</select>
 
 	<select id="elions.uw.selectForPrintEndorsemenLcaId9" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
 	
SELECT d.nama_cabang, a.reg_spaj, a.mspo_policy_no_format, e.mcl_first nm_pp,
       i.mcl_first nm_tt, f.nama_reff, a.mspo_date_print, b.msl_bdate,
       j.alamat_rumah alamat,
       TRIM (NVL (j.kota_rumah, '') || ' ' || NVL (j.kd_pos_rumah, '')) kota, a.mspo_policy_no
  FROM eka.mst_policy a,
       eka.mst_slink b,
       eka.mst_reff_bii c,
       eka.lst_cabang_bii d,
       eka.mst_client e,
       eka.lst_reff_bii f,
       eka.mst_insured h,
       eka.mst_client_new i,
       eka.mst_address_new j
 WHERE a.reg_spaj = b.reg_spaj
   AND a.reg_spaj = c.reg_spaj
   AND a.reg_spaj = h.reg_spaj
   AND h.mste_insured = i.mcl_id
   AND c.lcb_no = d.lcb_no
   AND a.mspo_policy_holder = e.mcl_id
   AND c.reff_id = f.lrb_id
   AND e.mcl_id = j.mcl_id
   AND c.level_id = 4
   AND c.no_urut = 1
   AND d.jenis = 2
   AND a.lstb_id = 1
   AND b.msl_tu_ke = #tuKe#
   AND a.reg_spaj = #spaj#
 	
	 </select>
	 
	  	<select id="elions.uw.selectForPrintEndorsemenNotLcaId9" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
 	
 	SELECT a.reg_spaj, a.mspo_policy_no_format, e.mcl_first nm_pp,
       d.mcl_first nm_tt, a.mspo_date_print, b.msl_bdate,
       (CASE WHEN a.lca_id IN ('37', '46', '42', '52') THEN j.lwk_nama ELSE i.lca_nama END) nama_cabang,
       k.alamat_rumah alamat,
       TRIM (NVL (k.kota_rumah, '') || ' ' || NVL (k.kd_pos_rumah, '')) kota, a.mspo_policy_no
  FROM eka.mst_policy a,
       eka.mst_slink b,
       eka.mst_client e,
       eka.mst_insured c,
       eka.mst_client_new d,
       eka.lst_region f,
       eka.lst_cabang i,
       eka.lst_wakil j,
       eka.mst_address_new k
 WHERE a.reg_spaj = b.reg_spaj
   AND a.reg_spaj = c.reg_spaj
   AND c.mste_insured = d.mcl_id
   AND a.mspo_policy_holder = e.mcl_id
   AND e.mcl_id = k.mcl_id
   AND a.lstb_id = 1
   AND a.lca_id = f.lca_id
   AND a.lwk_id = f.lwk_id
   AND a.lsrg_id = f.lsrg_id
   AND f.lca_id = j.lca_id
   AND f.lwk_id = j.lwk_id
   AND i.lca_id = j.lca_id
   AND b.msl_tu_ke = #tuKe#
   AND a.reg_spaj = #spaj#
 	
	 </select>
	 	 
	 <select id="elions.uw.selectHealthClaim" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	SELECT /*+ first_rows */
		       eka.id_stat_acp.st_expl, 
			   decode(eka.id_mst_clm.st_acp,5, eka.id_trx_clmdtl.pay_claim, 10, eka.id_trx_clmdtl.pay_claim,0)  pay_claim,
		       eka.id_trx_clmdtl.amt_claim, eka.id_trx_clmdtl.max_claim,
		       eka.id_mst_clm.regclaim, eka.id_mst_clm.st_acp,
		       eka.id_mst_clm.mspo_policy_no, eka.id_mst_clm.regapldate,
		       eka.id_mst_clm.acceptdate, eka.id_mst_clm.clm_paid_date,
		       eka.id_mst_clm.nm_diagnos, eka.id_mst_clm.date_ri_1,
		       eka.id_mst_clm.date_ri_2, EKA.ID_MST_CLM.AMOUNT_RI, eka.mst_policy.mspo_ins_period,
		       eka.mst_person.mspe_sex, eka.lst_cabang.lca_nama,
		       eka.mst_product_insured.mspr_tsi, eka.lst_kurs.lku_symbol,
		       eka.mst_insured.mste_age, eka.mst_insured.mste_medical,
		       eka.mst_product_insured.reg_spaj,
		          TRIM (eka.mst_client.mcl_first)
		       || '  '
		       || TRIM (eka.mst_client.mcl_middle)
		       || '  '
		       || TRIM (eka.mst_client.mcl_last) AS nama_tt,
		       eka.mst_person.mspe_date_birth, eka.mst_person.mspe_place_birth,
		       eka.id_mst_clm.lku_id, eka.id_mst_clm.lku_bayar,
		       eka.f_lsbs(eka.mst_policy.reg_spaj, eka.mst_product_insured.lsbs_id) lsbs_name, eka.mst_client_new.mcl_first,
		        EKA.ID_LST_JNS_CLAIMDTL.EXPLANATION,eka.id_mst_clm.regspaj
		  FROM eka.id_mst_clm,
		       eka.id_stat_acp,
		       eka.id_trx_clmdtl,
		       eka.mst_policy,
		       eka.mst_client,
		       eka.mst_person,
		       eka.lst_cabang,
		       eka.mst_product_insured,
		       eka.lst_kurs,
		       eka.mst_insured,
		       eka.lst_bisnis,
		       eka.mst_client_new,
               EKA.ID_LST_JNS_CLAIMDTL
		 WHERE (eka.mst_policy.lca_id = eka.lst_cabang.lca_id(+))
		   AND (eka.mst_policy.mspo_policy_holder = eka.mst_client_new.mcl_id)
		   AND (eka.id_stat_acp.st_acp = eka.id_mst_clm.st_acp)
		   AND (eka.id_trx_clmdtl.regclaim = eka.id_mst_clm.regclaim)
		   AND (eka.mst_policy.reg_spaj = eka.id_mst_clm.regspaj)
		   AND (eka.id_mst_clm.mste_insured = eka.mst_client.mcl_id)
		   AND (eka.mst_client.mcl_id = eka.mst_person.mcl_id)
		   AND (eka.mst_policy.reg_spaj = eka.mst_product_insured.reg_spaj)
		   AND (eka.lst_kurs.lku_id = eka.mst_policy.lku_id)
		   AND (eka.mst_insured.reg_spaj = eka.mst_product_insured.reg_spaj)
		   AND (eka.mst_product_insured.lsbs_id = eka.lst_bisnis.lsbs_id)
		   AND EKA.ID_LST_JNS_CLAIMDTL.LJJ_JENIS_ID = EKA.ID_TRX_CLMDTL.LJJ_JENIS_ID
		   AND (    (eka.mst_product_insured.mste_insured_no = 1)
		        AND (eka.id_mst_clm.mste_insured_no = 1)
		        AND (eka.mst_product_insured.lsbs_id <![CDATA[<]]> 300)
		        <!-- AND (eka.id_mst_clm.regspaj = #value#) -->
		        AND (eka.id_mst_clm.regclaim = #reg_claim#)
<!-- 		        AND (EKA.ID_LST_JNS_CLAIMDTL.EXPLANATION = #klaim#) -->
	            )
	 </select>
	 
	 <select id="elions.uw.selectTrackingClaimHealth" parameterClass="string" resultClass="java.util.HashMap">
	 		SELECT   EKA.ID_MST_CLM.REGCLAIM,
			         EKA.ID_MST_CLM.REGSPAJ,
			         EKA.ID_MST_CLM.MSPO_POLICY_NO,
			         EKA.ID_MST_CLM.REGAPLDATE,
			         EKA.ID_MST_CLM.REGDATEINPUT,
			         EKA.ID_MST_CLM.ACCEPTDATE,
			         EKA.ID_MST_CLM.CLM_PAID_DATE,
			         EKA.ID_MST_CLM.TGLFINANCE,
			         EKA.ID_MST_CLM.TGLDOKUMEN,
			         EKA.ID_STAT_ACP.ST_EXPL
			  FROM   EKA.ID_MST_CLM, EKA.ID_STAT_ACP
			 WHERE   (EKA.ID_MST_CLM.ST_ACP = EKA.ID_STAT_ACP.ST_ACP)         
			         AND ( (EKA.ID_MST_CLM.REGCLAIM = #value#))
	 </select>
	 
	 <select id="elions.uw.selectHealthClaimTM" parameterClass="string" resultClass="java.util.HashMap">
	 	SELECT /*+ first_rows */
		       eka.mst_tmms.holder_name,eka.lst_status_accept.status_accept,
		       eka.mst_tmms_det.nama_peserta, eka.mst_tmms_det.bod_peserta,
		       eka.mst_tmms.no_sertifikat, eka.lst_tm_product.product_name,
		       eka.mst_tmms_det.usia, eka.mst_tmms_det.sex,
		       eka.mst_claim_medismart.mcm_tgl_1,
		       eka.mst_claim_medismart.mcm_tgl_input,
		       eka.mst_claim_medismart.mcm_tgl_aksep,
		       eka.mst_claim_medismart.mcm_diagnosa,
		       eka.mst_claim_medismart.mcm_diagnosa2,
		       eka.mst_claim_medismart.mcm_hari, eka.mst_claim_medismart.mcm_pay_date,
		       eka.mst_claim_medismart.mcm_tgl_klaim,
		       decode(eka.mst_claim_medismart.lssa_id,5,eka.mst_det_claim_medismart.mdcm_bayar,0) mdcm_bayar, 
		          eka.mst_det_claim_medismart.product_code
		       || 'X'
		       || TO_CHAR (eka.mst_det_claim_medismart.PLAN) AS bisnis_id,
		       eka.mst_claim_medismart.mcm_no_klaim, eka.mst_claim_medismart.lssa_id,
		       eka.mst_tmms.lump_sum, eka.mst_det_claim_medismart.mdcm_jlh_claim,
		       eka.mst_det_claim_medismart.mdcm_max_claim
		  FROM eka.mst_claim_medismart@eb,
		       eka.mst_det_claim_medismart@eb,
		       eka.mst_tmms@eb,
		       eka.mst_tmms_det@eb,
		       eka.lst_tm_product@eb,
		       eka.lst_status_accept@eb
		 WHERE (eka.mst_tmms_det.ID = eka.mst_tmms.ID)
		   AND (eka.mst_tmms_det.product_code = eka.lst_tm_product.product_code)
		   AND (eka.mst_claim_medismart.ID = eka.mst_tmms_det.ID)
		   AND (eka.lst_status_accept.lssa_id= eka.mst_claim_medismart.lssa_id)
		   AND (eka.mst_claim_medismart.urut = eka.mst_tmms_det.urut)
		   AND (eka.mst_claim_medismart.mcm_no_klaim =
		                                      eka.mst_det_claim_medismart.mcm_no_klaim
		       )
		   AND (eka.mst_claim_medismart.product_code =
		                                      eka.mst_det_claim_medismart.product_code
		       )
		   AND (eka.mst_claim_medismart.product_code = eka.mst_tmms_det.product_code
		       )
		   <!-- AND eka.mst_claim_medismart.ID = #value# -->
		   AND AND eka.mst_claim_medismart.mcm_no_klaim = #value#
	 </select>
	 
	 <select id="elions.uw.selectCekHealthProduct" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT * FROM (		
		    SELECT 
		        A.REG_SPAJ spaj, E.MCL_FIRST nama_pp, NULL bod_pp, B.MSTE_INSURED_NO, C.MCL_FIRST nama_tt, D.MSPE_DATE_BIRTH bod_tt,
		        A.MSPO_POLICY_NO || ' / ' || b.MSTE_NO_REG polis, A.MSPO_BEG_DATE, A.MSPO_END_DATE, '402' lsbs_id, 'EKAMEDICARE' lsbs_name, '3' kode, 'EB' kode_desc, g.reg_spaj klaim
		    FROM
		        eka.mst_policy@eb a,
		        eka.mst_insured@eb b,
		        eka.mst_product_insured@eb f,
		        EKA.MST_CLIENT@eb c,
		        EKA.MST_PERSON@eb d,
		        EKA.MST_CLIENT@eb e,
		        eka.mst_claim_ebn@eb g
		    WHERE
		        a.mspo_policy_no is not null
		        AND a.reg_spaj = b.reg_spaj
		        AND b.reg_spaj = f.reg_spaj
		        AND b.mste_insured_no = f.mste_insured_no
		        AND f.lsbs_id= 402
		        AND a.mspo_policy_holder = e.mcl_id
		        AND b.mste_insured = c.mcl_id
		        AND c.mcl_id = d.mcl_id
		        and a.reg_spaj = g.reg_spaj(+)
		        AND c.mcl_first LIKE UPPER (#nama#  || '%')
		        AND d.mspe_date_birth = #bod#		
		    UNION	
				SELECT distinct   c.reg_spaj spaj,
		         d.mcl_first nama_pp,
		         d.mspe_date_birth bod_pp,
		         f.mste_insured_no,
		         DECODE(a.SEHAT_TTURUT,null,g.mcl_first,DECODE (a.SEHAT_TTURUT, 1, g.mcl_first, b.NAMA)) nama_tt,
		         DECODE(a.SEHAT_TTURUT,null,g.mspe_date_birth,DECODE (a.SEHAT_TTURUT, 1, g.mspe_date_birth, b.TGL_LAHIR)) bod_tt,
		         c.mspo_policy_no polis,
		         c.mspo_beg_date,
		         c.mspo_end_date,
		         '' || h.lsbs_id lsbs_id,
		         DECODE(a.SEHAT_TTURUT,null,eka.f_lsbs(h.reg_spaj, h.lsbs_id), EKA.UTILS.PRODUK(B.LSBS_ID)) lsbs_name,
		         '1' kode,
		         'INDIVIDU' kode_desc,
		         a.regspaj klaim
		  FROM   eka.id_mst_clm a,
		         eka.mst_peserta b,
		         eka.mst_policy c,
		         eka.mst_client_new d,
		         eka.mst_insured f,
		         eka.mst_client_new g,
		         eka.mst_product_insured h,
		         eka.lst_bisnis i
		 WHERE       A.REGSPAJ = B.REG_SPAJ (+)
		         AND A.SEHAT_TTURUT = B.NO_URUT (+) 
		         AND a.regspaj = c.reg_spaj
		         AND c.mspo_policy_holder = d.mcl_id
		         AND c.reg_spaj = f.reg_spaj
		         AND F.MSTE_INSURED = G.MCL_ID
		         AND c.reg_spaj = h.reg_spaj
		         AND h.lsbs_id = i.lsbs_id
		         and h.MSTE_INSURED_NO=1
		         and H.LSBS_ID <![CDATA[<]]> 300
			         AND EXISTS
			               (SELECT   1
			                  FROM   eka.mst_client_new x
			                 WHERE       f.mste_insured = x.mcl_id
			                         AND SUBSTR (x.mcl_id, 1, 2) <![CDATA[<>]]> 'XX'
			                         AND SUBSTR (x.mcl_id, 1, 2) <![CDATA[<>]]> 'WW'
			                         AND x.mcl_first LIKE UPPER (#nama# || '%')
			                         AND x.mspe_date_birth = #bod#)
		    UNION		
		    SELECT
		        a.ID spaj, holder_name nama_pp, bod_holder bod_pp, b.urut mste_insured_no, nama_peserta nama_tt, bod_peserta bod_tt, no_sertifikat polis,
		        a.beg_date beg_date, a.end_date end_date, a.product_code lsbs_id, c.product_name lsbs_name, '2' kode, 'TM' kode_desc, d.id klaim
		    FROM
		        eka.mst_tmms@eb a,
		        eka.mst_tmms_det@eb b,
		        eka.lst_tm_product@eb c,
		        eka.mst_claim_medismart@eb d
		    WHERE
		        a.ID = b.ID
		        AND c.product_code = b.product_code
		        AND c.product_code IN ('004','009','016','025','005','003','028','033')
		        AND a.no_sertifikat is not null
		        and a.id = d.id(+)
		        AND b.nama_peserta LIKE  UPPER (#nama# || '%')
		        AND b.bod_peserta = #bod#					        
		)
	 </select>
	 
	 <select id="elions.uw.selectHealthClaimEBAccept" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	SELECT /*+ FIRST_ROWS */ EKA.MST_INSURED.MSTE_INSURED_NO,   
         EKA.MST_INSURED.MSTE_INSURED,   
         EKA.MST_POLICY.MSPO_POLICY_HOLDER,   
         EKA.MST_CLAIM_EBN.MCE_NO_KLAIM,   
         EKA.MST_CLAIM_EBN.MCE_TGL_KLAIM,   
         EKA.MST_CLAIM_EBN.MCE_NO_AKSEP,   
         EKA.MST_CLAIM_EBN.LGC_GROUP_ID,   
         EKA.MST_DET_CLAIM_EBN.LJJ_JENIS_ID,   
         EKA.MST_DET_CLAIM_EBN.MDC_JLH_CLAIM,   
         EKA.MST_DET_CLAIM_EBN.MDC_MAX_CLAIM,   
         EKA.MST_DET_CLAIM_EBN.MDC_BAYAR,   
         EKA.LST_JN_JAMINAN_EBN.LJJ_JENIS_JAMINAN,   
         EKA.LST_JN_JAMINAN_EBN.LJJ_SINGKATAN,   
         EKA.LST_DIAGNOSIS.LSD_DESC,   
         EKA.MST_CLAIM_EBN.MCE_TGL_1,   
         EKA.MST_CLAIM_EBN.MCE_TGL_2,
         EKA.MST_CLAIM_EBN.MCE_HARI,   
         EKA.MST_INSURED.MSTE_NO_REG,   
         EKA.MST_CLAIM_EBN.REG_SPAJ,   
         EKA.MST_CLAIM_EBN.LSD_ID,   
         EKA.MST_CLAIM_EBN.LSD_ID2,   
         EKA.MST_CLAIM_EBN.LSD_ID3,
         decode(B.LSD_DESC,null,A.LSD_DESC,A.LSD_DESC||'; ')|| decode(C.LSD_DESC,null,B.LSD_DESC,B.LSD_DESC||'; ')|| C.LSD_DESC lsd_desc_all ,  
         EKA.MST_CLAIM_EBN.MCE_NO_PRE,   
         '' as coc_string,   
         EKA.MST_BATCH_CLAIM.MBC_NO,   
         EKA.MST_BATCH_CLAIM.MBC_TGL_BACK,   
         EKA.MST_CLIENT.MCL_FIRST||' / '||EKA.MST_INSURED.MSTE_NO_REG as nama,   
         EKA.MST_CLAIM_EBN.MBC_NO,   
         EKA.MST_BATCH_CLAIM.MBC_TGL_FIN,
         EKA.MST_CLAIM_EBN.MCE_KLAIM_ADMEDIKA,
         EKA.LST_DET_BISNIS.LSDBS_NAME        
    FROM EKA.MST_CLIENT@eb,   
         EKA.MST_INSURED@eb,   
         EKA.MST_POLICY@eb,   
         EKA.MST_CLAIM_EBN@eb,   
         EKA.MST_DET_CLAIM_EBN@eb,   
         EKA.LST_JN_JAMINAN_EBN@eb,   
         EKA.MST_DIAGNOSIS@eb,   
         EKA.LST_DIAGNOSIS@eb,  
         EKA.LST_DIAGNOSIS@eb a,
         EKA.LST_DIAGNOSIS@eb b,
         EKA.LST_DIAGNOSIS@eb c, 
         EKA.MST_BATCH_CLAIM@eb,
         EKA.LST_DET_BISNIS@eb   
   WHERE ( EKA.MST_DET_CLAIM_EBN.REG_SPAJ = EKA.MST_DIAGNOSIS.REG_SPAJ (+)) and  
         ( EKA.MST_DET_CLAIM_EBN.MCE_NO_KLAIM = EKA.MST_DIAGNOSIS.MCE_NO_KLAIM (+)) and  
         ( EKA.LST_DIAGNOSIS.LSD_ID (+) = EKA.MST_DIAGNOSIS.LSD_ID) and  
         ( EKA.MST_INSURED.MSTE_INSURED = EKA.MST_CLIENT.MCL_ID ) and  
         ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_POLICY.REG_SPAJ ) and  
         ( EKA.MST_DET_CLAIM_EBN.REG_SPAJ = EKA.MST_CLAIM_EBN.REG_SPAJ ) and  
         ( EKA.MST_DET_CLAIM_EBN.MCE_NO_KLAIM = EKA.MST_CLAIM_EBN.MCE_NO_KLAIM ) and  
         ( EKA.MST_INSURED.MSTE_INSURED_NO = EKA.MST_CLAIM_EBN.MSTE_INSURED_NO ) and  
         ( EKA.MST_CLAIM_EBN.LGC_GROUP_ID = EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID ) and  
         ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_CLAIM_EBN.REG_SPAJ ) and  
         ( EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID = EKA.LST_JN_JAMINAN_EBN.LGC_GROUP_ID ) and  
         ( EKA.MST_DET_CLAIM_EBN.LJJ_JENIS_ID = EKA.LST_JN_JAMINAN_EBN.LJJ_JENIS_ID ) and  
         ( EKA.MST_BATCH_CLAIM.MBC_NO = EKA.MST_CLAIM_EBN.MBC_NO ) and 
         (  EKA.MST_CLAIM_EBN.LSD_ID = A.LSD_ID (+)) AND 
         (  EKA.MST_CLAIM_EBN.LSD_ID2 = B.LSD_ID (+) ) AND 
         (  EKA.MST_CLAIM_EBN.LSD_ID3 = C.LSD_ID(+) ) AND 
         ( ( EKA.MST_POLICY.LSTB_ID = 3 ) AND  
         (EKA.MST_CLAIM_EBN.MCE_LSBS_ID = EKA.LST_det_BISNIS.LSBS_ID (+) ) AND
         ( EKA.MST_CLAIM_EBN.MCE_LSDBS_NUMBER = EKA.LST_det_BISNIS.LSDBS_NUMBER (+) ) AND
         <!-- ( EKA.MST_INSURED.REG_SPAJ = #spaj# ) AND  
         ( EKA.MST_INSURED.MSTE_INSURED_NO = #insured_no# ) AND -->  
         (EKA.MST_CLAIM_EBN.MCE_NO_KLAIM =#klaim#) AND
         ( EKA.MST_CLAIM_EBN.LSSA_ID = 5 ) AND  
         ( EKA.MST_DET_CLAIM_EBN.MDC_VALID = 1 ) )
	 </select>
	 
	 <select id="elions.uw.selectHealthClaimEBPREAccept" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	SELECT /*+ FIRST_ROWS */ EKA.MST_INSURED.MSTE_INSURED_NO,   
	         EKA.MST_INSURED.MSTE_INSURED,   
	         EKA.MST_POLICY.MSPO_POLICY_HOLDER,   
	         EKA.MST_CLAIM_EBN.MCE_NO_KLAIM,   
	         EKA.MST_CLAIM_EBN.MCE_TGL_KLAIM,   
	         EKA.MST_CLAIM_EBN.MCE_NO_AKSEP,   
	         EKA.MST_CLAIM_EBN.LGC_GROUP_ID,   
	         EKA.MST_DET_CLAIM_EBN.LJJ_JENIS_ID,   
	         EKA.MST_DET_CLAIM_EBN.MDC_JLH_CLAIM,   
		         EKA.MST_DET_CLAIM_EBN.MDC_MAX_CLAIM,   
         EKA.MST_DET_CLAIM_EBN.MDC_BAYAR,   
         EKA.LST_JN_JAMINAN_EBN.LJJ_JENIS_JAMINAN,   
         EKA.LST_JN_JAMINAN_EBN.LJJ_SINGKATAN,   
         EKA.LST_DIAGNOSIS.LSD_DESC,   
         EKA.MST_CLAIM_EBN.MCE_TGL_1,   
         EKA.MST_CLAIM_EBN.MCE_TGL_2, 
         EKA.MST_CLAIM_EBN.MCE_HARI,    
         EKA.MST_INSURED.MSTE_NO_REG,   
         EKA.MST_CLAIM_EBN.REG_SPAJ,   
         EKA.MST_CLAIM_EBN.LSD_ID,   
         EKA.MST_CLAIM_EBN.LSD_ID2,   
         EKA.MST_CLAIM_EBN.LSD_ID3,
         decode(B.LSD_DESC,null,A.LSD_DESC,A.LSD_DESC||'; ')|| decode(C.LSD_DESC,null,B.LSD_DESC,B.LSD_DESC||'; ')|| C.LSD_DESC lsd_desc ,  
         EKA.MST_CLAIM_EBN.MCE_NO_PRE,   
         '' as coc_string,   
         EKA.MST_BATCH_CLAIM.MBC_NO,   
         EKA.MST_BATCH_CLAIM.MBC_TGL_BACK,   
         EKA.MST_CLIENT.MCL_FIRST||' / '||EKA.MST_INSURED.MSTE_NO_REG as nama,   
         EKA.MST_CLAIM_EBN.MBC_NO,   
         EKA.MST_BATCH_CLAIM.MBC_TGL_FIN,
         EKA.MST_CLAIM_EBN.MCE_KLAIM_ADMEDIKA,
         EKA.LST_DET_BISNIS.LSDBS_NAME         
    FROM EKA.MST_CLIENT@eb,   
         EKA.MST_INSURED@eb,   
         EKA.MST_POLICY@eb,   
         EKA.MST_CLAIM_EBN@eb,   
         EKA.MST_DET_CLAIM_EBN@eb,   
         EKA.LST_JN_JAMINAN_EBN@eb,   
         EKA.MST_DIAGNOSIS@eb,   
         EKA.LST_DIAGNOSIS@eb,  
         EKA.LST_DIAGNOSIS@eb a,
         EKA.LST_DIAGNOSIS@eb b,
         EKA.LST_DIAGNOSIS@eb c, 
         EKA.MST_BATCH_CLAIM@eb,
         EKA.LST_DET_BISNIS@eb  
   WHERE ( EKA.MST_DET_CLAIM_EBN.REG_SPAJ = EKA.MST_DIAGNOSIS.REG_SPAJ (+)) and  
         ( EKA.MST_DET_CLAIM_EBN.MCE_NO_KLAIM = EKA.MST_DIAGNOSIS.MCE_NO_KLAIM (+)) and  
         ( EKA.LST_DIAGNOSIS.LSD_ID (+) = EKA.MST_DIAGNOSIS.LSD_ID) and  
         ( EKA.MST_INSURED.MSTE_INSURED = EKA.MST_CLIENT.MCL_ID ) and  
         ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_POLICY.REG_SPAJ ) and  
         ( EKA.MST_DET_CLAIM_EBN.REG_SPAJ = EKA.MST_CLAIM_EBN.REG_SPAJ ) and  
         ( EKA.MST_DET_CLAIM_EBN.MCE_NO_KLAIM = EKA.MST_CLAIM_EBN.MCE_NO_KLAIM ) and  
         ( EKA.MST_INSURED.MSTE_INSURED_NO = EKA.MST_CLAIM_EBN.MSTE_INSURED_NO ) and  
         ( EKA.MST_CLAIM_EBN.LGC_GROUP_ID = EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID ) and  
         ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_CLAIM_EBN.REG_SPAJ ) and  
         ( EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID = EKA.LST_JN_JAMINAN_EBN.LGC_GROUP_ID ) and  
         ( EKA.MST_DET_CLAIM_EBN.LJJ_JENIS_ID = EKA.LST_JN_JAMINAN_EBN.LJJ_JENIS_ID ) and  
         ( EKA.MST_BATCH_CLAIM.MBC_NO = EKA.MST_CLAIM_EBN.MBC_NO ) and 
         (  EKA.MST_CLAIM_EBN.LSD_ID = A.LSD_ID (+)) AND 
         (  EKA.MST_CLAIM_EBN.LSD_ID2 = B.LSD_ID (+) ) AND 
         (  EKA.MST_CLAIM_EBN.LSD_ID3 = C.LSD_ID(+) ) AND 
         ( EKA.MST_CLAIM_EBN.MCE_LSBS_ID = EKA.LST_det_BISNIS.LSBS_ID (+) ) AND
         ( EKA.MST_CLAIM_EBN.MCE_LSDBS_NUMBER = EKA.LST_det_BISNIS.LSDBS_NUMBER (+) ) AND
         ( ( EKA.MST_POLICY.LSTB_ID = 3 ) AND  
         <!-- ( EKA.MST_INSURED.REG_SPAJ = #spaj# ) AND  
         ( EKA.MST_INSURED.MSTE_INSURED_NO = #insured_no# ) AND   -->
         (EKA.MST_CLAIM_EBN.MCE_NO_KLAIM =#klaim#) AND
         ( EKA.MST_CLAIM_EBN.LSSA_ID = 6 ) AND  
         ( EKA.MST_CLAIM_EBN.MCE_LSPD_ID = 111) AND
         ( EKA.MST_DET_CLAIM_EBN.MDC_VALID = 1 ) )
	 </select>
	 
	 <select id="elions.uw.selectHealthClaimEBTolak" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 		SELECT /*+ FIRST_ROWS */ DISTINCT EKA.MST_CLIENT.MCL_FIRST||' '||EKA.MST_CLIENT.MCL_MIDDLE||' '||EKA.MST_CLIENT.MCL_LAST as nama,   
                 EKA.MST_INSURED.MSTE_INSURED_NO,   
                 EKA.MST_INSURED.MSTE_INSURED,   
                 EKA.MST_POLICY.MSPO_POLICY_HOLDER,   
                 EKA.MST_CLAIM_EBN.MCE_NO_KLAIM,   
                 EKA.MST_CLAIM_EBN.MCE_TGL_KLAIM,   
                 EKA.MST_CLAIM_EBN.MCE_NO_AKSEP,   
                 EKA.MST_CLAIM_EBN.LGC_GROUP_ID,   
                 EKA.MST_DET_CLAIM_EBN.LJJ_JENIS_ID,   
                 EKA.MST_DET_CLAIM_EBN.MDC_JLH_CLAIM,   
                 EKA.MST_DET_CLAIM_EBN.MDC_MAX_CLAIM,   
                 EKA.MST_DET_CLAIM_EBN.MDC_BAYAR,   
                 EKA.LST_JN_JAMINAN_EBN.LJJ_JENIS_JAMINAN,   
                 EKA.LST_JN_JAMINAN_EBN.LJJ_SINGKATAN,   
                 EKA.MST_CLAIM_EBN.MCE_TGL_1,   
                 EKA.MST_CLAIM_EBN.MCE_TGL_2,
                 EKA.MST_CLAIM_EBN.MCE_HARI,   
                 EKA.MST_INSURED.MSTE_NO_REG,   
                 EKA.MST_CLAIM_EBN.REG_SPAJ,   
                 EKA.MST_CLAIM_EBN.LSD_ID,   
                 EKA.MST_CLAIM_EBN.LSD_ID2,   
                 EKA.MST_CLAIM_EBN.LSD_ID3,  
                  decode(B.LSD_DESC,null,A.LSD_DESC,A.LSD_DESC||'; ')|| decode(C.LSD_DESC,null,B.LSD_DESC,B.LSD_DESC||'; ')|| C.LSD_DESC lsd_desc_all , 
                 EKA.MST_CLAIM_EBN.PROVIDER,   
                 0 as pilah,   
                 EKA.LST_ALASAN.LA_DESC,   
                 EKA.MST_CLAIM_EBN.MBC_NO,
                 EKA.LST_DET_BISNIS.LSDBS_NAME   
            FROM EKA.MST_CLIENT@eb,   
                 EKA.MST_INSURED@eb,   
                 EKA.MST_POLICY@eb,   
                 EKA.MST_CLAIM_EBN@eb,   
                 EKA.MST_DET_CLAIM_EBN@eb,   
                 EKA.LST_JN_JAMINAN_EBN@eb,   
                 EKA.MST_TOLAK@eb, 
                 EKA.LST_DIAGNOSIS@eb a,
                 EKA.LST_DIAGNOSIS@eb b,
                 EKA.LST_DIAGNOSIS@eb c,  
                 EKA.LST_ALASAN@eb,
                 EKA.LST_DET_BISNIS@eb  
           WHERE ( EKA.MST_INSURED.MSTE_INSURED = EKA.MST_CLIENT.MCL_ID ) and  
                 ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_POLICY.REG_SPAJ ) and  
                 ( EKA.MST_DET_CLAIM_EBN.REG_SPAJ = EKA.MST_CLAIM_EBN.REG_SPAJ ) and  
                 ( EKA.MST_DET_CLAIM_EBN.MCE_NO_KLAIM = EKA.MST_CLAIM_EBN.MCE_NO_KLAIM ) and  
                 ( EKA.MST_INSURED.MSTE_INSURED_NO = EKA.MST_CLAIM_EBN.MSTE_INSURED_NO ) and  
                 ( EKA.MST_CLAIM_EBN.LGC_GROUP_ID = EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID ) and  
                 ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_CLAIM_EBN.REG_SPAJ ) and  
                 ( EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID = EKA.LST_JN_JAMINAN_EBN.LGC_GROUP_ID ) and  
                 ( EKA.MST_DET_CLAIM_EBN.LJJ_JENIS_ID = EKA.LST_JN_JAMINAN_EBN.LJJ_JENIS_ID ) and  
                 ( EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID = EKA.MST_TOLAK.LGC_GROUP_ID ) and  
                 ( EKA.LST_ALASAN.LA_ALS_ID = EKA.MST_TOLAK.LA_ALS_ID ) and  
                 ( EKA.MST_TOLAK.MT_TYPE = EKA.LST_ALASAN.MT_TYPE ) and  
                 (  EKA.MST_CLAIM_EBN.LSD_ID = A.LSD_ID (+)) AND 
                 (  EKA.MST_CLAIM_EBN.LSD_ID2 = B.LSD_ID (+) ) AND 
                 (  EKA.MST_CLAIM_EBN.LSD_ID3 = C.LSD_ID(+) ) AND 
                 ( EKA.MST_DET_CLAIM_EBN.LJJ_JENIS_ID = EKA.MST_TOLAK.LJJ_JENIS_ID ) and  
                 ( EKA.MST_DET_CLAIM_EBN.MCE_NO_KLAIM = EKA.MST_TOLAK.MCE_NO_KLAIM ) and  
                 ( EKA.MST_DET_CLAIM_EBN.REG_SPAJ = EKA.MST_TOLAK.REG_SPAJ ) and 
                 ( EKA.MST_CLAIM_EBN.MCE_LSBS_ID = EKA.LST_det_BISNIS.LSBS_ID (+) ) AND
                 ( EKA.MST_CLAIM_EBN.MCE_LSDBS_NUMBER = EKA.LST_det_BISNIS.LSDBS_NUMBER (+) ) AND 
                 ( 
                    ( EKA.MST_POLICY.LSTB_ID = 3 ) AND  
		            <!-- ( EKA.MST_INSURED.REG_SPAJ = #spaj# ) AND  
		            ( EKA.MST_INSURED.MSTE_INSURED_NO in ( #insured_no# ) ) AND -->  
		            (EKA.MST_CLAIM_EBN.MCE_NO_KLAIM =#klaim#) AND
		            ( EKA.MST_CLAIM_EBN.LSSA_ID = 5 OR ( EKA.MST_CLAIM_EBN.LSSA_ID = 13 AND EKA.MST_CLAIM_EBN.PROVIDER = 1 ) ) AND  
		            ( EKA.MST_TOLAK.MT_TYPE = 0 ) 
		         )
		 </select>
		 
		 <select id="elions.uw.selectHealthClaimEBPU" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 		  SELECT /*+ FIRST_ROWS */ DISTINCT EKA.MST_CLIENT.MCL_FIRST||' '||EKA.MST_CLIENT.MCL_MIDDLE||' '||EKA.MST_CLIENT.MCL_LAST as nama,   
                 EKA.MST_INSURED.MSTE_INSURED_NO,   
                 EKA.MST_INSURED.MSTE_INSURED,   
                 EKA.MST_POLICY.MSPO_POLICY_HOLDER,   
                 EKA.MST_CLAIM_EBN.MCE_NO_KLAIM,   
                 EKA.MST_CLAIM_EBN.MCE_TGL_KLAIM,   
                 EKA.MST_CLAIM_EBN.MCE_NO_AKSEP,   
                 EKA.MST_CLAIM_EBN.LGC_GROUP_ID,   
                 EKA.MST_DET_CLAIM_EBN.LJJ_JENIS_ID,   
                 EKA.MST_DET_CLAIM_EBN.MDC_JLH_CLAIM,   
                 EKA.MST_DET_CLAIM_EBN.MDC_MAX_CLAIM,   
                 EKA.MST_DET_CLAIM_EBN.MDC_BAYAR,   
                 EKA.LST_JN_JAMINAN_EBN.LJJ_JENIS_JAMINAN,   
                 EKA.LST_JN_JAMINAN_EBN.LJJ_SINGKATAN,   
                 EKA.MST_CLAIM_EBN.MCE_TGL_1,   
                 EKA.MST_CLAIM_EBN.MCE_TGL_2,   
                 EKA.MST_INSURED.MSTE_NO_REG,   
                 EKA.MST_CLAIM_EBN.REG_SPAJ,   
                 EKA.MST_CLAIM_EBN.LSD_ID,   
                 EKA.MST_CLAIM_EBN.LSD_ID2,   
                 EKA.MST_CLAIM_EBN.LSD_ID3,   
                 EKA.MST_CLAIM_EBN.PROVIDER,   
                 0 as pilah,   
                 EKA.LST_ALASAN.LA_DESC,   
                 EKA.MST_CLAIM_EBN.MBC_NO,
                 EKA.LST_DET_BISNIS.LSDBS_NAME   
            FROM EKA.MST_CLIENT@eb,   
                 EKA.MST_INSURED@eb,   
                 EKA.MST_POLICY@eb,   
                 EKA.MST_CLAIM_EBN@eb,   
                 EKA.MST_DET_CLAIM_EBN@eb,   
                 EKA.LST_JN_JAMINAN_EBN@eb,   
                 EKA.MST_TOLAK@eb,   
                 EKA.LST_ALASAN@eb  ,
                 EKA.LST_DET_BISNIS@eb
           WHERE ( EKA.MST_INSURED.MSTE_INSURED = EKA.MST_CLIENT.MCL_ID ) and  
                 ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_POLICY.REG_SPAJ ) and  
                 ( EKA.MST_DET_CLAIM_EBN.REG_SPAJ = EKA.MST_CLAIM_EBN.REG_SPAJ ) and  
                 ( EKA.MST_DET_CLAIM_EBN.MCE_NO_KLAIM = EKA.MST_CLAIM_EBN.MCE_NO_KLAIM ) and  
                 ( EKA.MST_INSURED.MSTE_INSURED_NO = EKA.MST_CLAIM_EBN.MSTE_INSURED_NO ) and  
                 ( EKA.MST_CLAIM_EBN.LGC_GROUP_ID = EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID ) and  
                 ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_CLAIM_EBN.REG_SPAJ ) and  
                 ( EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID = EKA.LST_JN_JAMINAN_EBN.LGC_GROUP_ID ) and  
                 ( EKA.MST_DET_CLAIM_EBN.LJJ_JENIS_ID = EKA.LST_JN_JAMINAN_EBN.LJJ_JENIS_ID ) and  
                 ( EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID = EKA.MST_TOLAK.LGC_GROUP_ID ) and  
                 ( EKA.LST_ALASAN.LA_ALS_ID = EKA.MST_TOLAK.LA_ALS_ID ) and  
                 ( EKA.MST_TOLAK.MT_TYPE = EKA.LST_ALASAN.MT_TYPE ) and  
                 ( EKA.MST_DET_CLAIM_EBN.LJJ_JENIS_ID = EKA.MST_TOLAK.LJJ_JENIS_ID ) and  
                 ( EKA.MST_DET_CLAIM_EBN.MCE_NO_KLAIM = EKA.MST_TOLAK.MCE_NO_KLAIM ) and  
                 ( EKA.MST_DET_CLAIM_EBN.REG_SPAJ = EKA.MST_TOLAK.REG_SPAJ ) and
                 (EKA.MST_CLAIM_EBN.MCE_LSBS_ID = EKA.LST_det_BISNIS.LSBS_ID (+) ) AND
                 ( EKA.MST_CLAIM_EBN.MCE_LSDBS_NUMBER = EKA.LST_det_BISNIS.LSDBS_NUMBER (+) ) AND  
                 ( ( EKA.MST_POLICY.LSTB_ID = 3 ) AND  
<!--                  ( EKA.MST_INSURED.REG_SPAJ = #spaj# ) AND   -->
<!--                  ( EKA.MST_INSURED.MSTE_INSURED_NO in ( #insured_no# ) ) AND   -->
               	(EKA.MST_CLAIM_EBN.MCE_NO_KLAIM =#klaim#) AND
                 ( EKA.MST_CLAIM_EBN.LSSA_ID = 5 ) AND  
<!--                  ( EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID in ( :ag_grp ) ) AND   -->
                 ( EKA.MST_TOLAK.MT_TYPE = 2 ) )    
		 </select>
	 	
	 	<select id="elions.uw.selectBlomFlagPrintTopup" resultClass="java.util.HashMap">
 		select b.mspo_policy_no as no_polis, b.reg_spaj,c.mcl_first as nama_pp, 
		   decode(a.msl_posisi, 45, 'INPUT BSM', 73, 'TRANSFER AJS') as posisi_input, a.MSL_TU_KE,
		   a.msl_desc as transaksi, a.msl_bdate as beg_date, a.msl_edate as end_date, a.msl_premi as premi  , A.MSEN_ENDORS_NO
		from eka.mst_slink a, eka.mst_policy b, eka.mst_client_new c
		where a.msl_kode = 5 and a.msl_new is null 
		and a.msl_print_date is null
		and a.msl_proses_bsm in (1,2)
		and a.msl_posisi <![CDATA[<>]]> 78
		and a.reg_spaj = b.reg_spaj
		and b.mspo_policy_holder = c.mcl_id
		order by a.msl_bdate
 	</select>
	
	
	<select id="elions.uw.selectTotalTagih" parameterClass="hashMap" resultClass="hashMap">
		SELECT  g.lku_symbol,b.lku_id,b.msbi_stamp,a.discount,a.premi_std, a.premi_rider, a.premi_extra,
		(a.premi_std + a.premi_rider + a.premi_extra)total_premi,
				(a.premi_std + a.premi_rider + a.premi_extra - a.discount + b.msbi_stamp) total_tagih, 
				a.msbi_tahun_ke, a.msbi_premi_ke,b.MSBI_BEG_DATE, b.MSBI_END_DATE, b.MSBI_DUE_DATE,
	   			nvl(b.msbi_flag_topup,0) msbi_flag_topup,h.LSBS_ID, b.msbi_stamp
		  FROM eka.v_billing a,
		       eka.mst_billing b,
		       eka.mst_payment c,
		       eka.mst_tag_payment d,
		       eka.mst_production e,
		       eka.mst_cancel f,
		       eka.lst_kurs g,
			   eka.mst_det_billing h
		 WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   AND a.reg_spaj = b.reg_spaj
		   AND b.reg_spaj = h.reg_spaj
		   AND a.msbi_tahun_ke = b.msbi_tahun_ke
		   AND b.msbi_premi_ke = h.msbi_premi_ke
		    AND b.msbi_tahun_ke = h.msbi_tahun_ke
		   AND a.msbi_premi_ke = b.msbi_premi_ke
		   AND a.reg_spaj = d.reg_spaj(+)
		   AND a.msbi_tahun_ke = d.msbi_tahun_ke(+)
		   AND a.msbi_premi_ke = d.msbi_premi_ke(+)
		   AND d.mspa_payment_id = c.mspa_payment_id(+)
		   AND b.reg_spaj = e.reg_spaj(+)
		   AND b.msbi_tahun_ke = e.msbi_tahun_ke(+)
		   AND b.msbi_premi_ke = e.msbi_premi_ke(+)
		   AND c.reg_spaj = f.reg_spaj(+)
		   AND b.lku_id = g.lku_id		   
		   AND b.msbi_paid=0
<!--		   <isNotNull property="tahun_ke"> AND b.msbi_tahun_ke =#tahun_ke#</isNotNull>-->
<!--		   <isNotNull property="premi_ke">  AND b.msbi_premi_ke =#premi_ke#</isNotNull>		  -->
		     and h.MSDB_DET_KE=1
		      order by msbi_premi_ke asc
	</select>
	
	<select id="elions.uw.selectCariSukuBunga" parameterClass="hashMap" resultClass="double">
		SELECT eka.lst_bunga.lsbun_bunga
		  FROM eka.lst_bunga
		 WHERE (eka.lst_bunga.lsbun_jenis = 4)
		   AND (eka.lst_bunga.lku_id = #lku_id#)
		   AND (eka.lst_bunga.lsbun_tgl =
		           (SELECT MAX (eka.lst_bunga.lsbun_tgl)
		              FROM eka.lst_bunga
		             WHERE (eka.lst_bunga.lsbun_jenis = 4)
		               AND (eka.lst_bunga.lku_id = #lku_id#)
		               AND (eka.lst_bunga.lsbun_tgl  <![CDATA[<=]]>#tgl_bayar#))
       )
	</select>

 	<select id="elions.uw.selectCekTahapan" parameterClass="string" resultClass="double">
		SELECT SUM(EKA.MST_TAHAPAN.MSTAH_JUMLAH)MSTAH_JUMLAH
					FROM EKA.MST_TAHAPAN
				WHERE ( EKA.MST_TAHAPAN.REG_SPAJ = #value# ) AND
						( EKA.MST_TAHAPAN.MSTAH_TGL_KONFIRMASI IS NULL ) AND
						( TO_CHAR(EKA.MST_TAHAPAN.MSTAH_JT_TEMPO, 'YYYY') >= '2003' )
	</select>
	
	<select id="elions.uw.selectIsEkaLink" parameterClass="string" resultClass="int">
		SELECT count(*)
		  FROM eka.mst_product_insured
		 WHERE reg_spaj = #value#
		   AND lsbs_id IN (SELECT lsbs_id
		                     FROM eka.lst_det_bisnis
		                    WHERE lsdbs_name LIKE '%EKA LINK%')
	</select>
	
	<select id="elions.uw.selectIsUlink" parameterClass="string" resultClass="int">
		select count(*) from eka.mst_ulink where reg_spaj=#value#
	</select>
	
	<select id="elions.uw.selectBillOSBunga" parameterClass="hashMap" resultClass="hashMap">
		SELECT  eka.mst_billing.msbi_tahun_ke, eka.mst_billing.msbi_premi_ke,
				sum( eka.mst_det_billing.msdb_premium) msdb_premium,
				sum(   eka.mst_det_billing.msdb_discount) msdb_discount,		 
				eka.mst_billing.REG_SPAJ,
		         eka.mst_billing.msbi_beg_date, eka.mst_billing.msbi_end_date,
		         eka.mst_det_billing.lsbs_id, eka.mst_billing.msbi_stamp
		    FROM eka.mst_det_billing, eka.mst_billing
		   WHERE (eka.mst_billing.reg_spaj = eka.mst_det_billing.reg_spaj)
		     AND (eka.mst_billing.msbi_tahun_ke = eka.mst_det_billing.msbi_tahun_ke)
		     AND (eka.mst_billing.msbi_premi_ke = eka.mst_det_billing.msbi_premi_ke)
		     AND (  (eka.mst_billing.reg_spaj = #reg_spaj#)
		          AND (eka.mst_billing.msbi_premi_ke=#premi_ke#)
				 AND (eka.mst_billing.msbi_tahun_ke=#tahun_ke#)
				  AND  (eka.mst_billing.msbi_paid = 0)
		         )
		group by eka.mst_billing.msbi_tahun_ke, eka.mst_billing.msbi_premi_ke,
				 eka.mst_billing.REG_SPAJ,
		         eka.mst_billing.msbi_beg_date, eka.mst_billing.msbi_end_date,
				 eka.mst_det_billing.lsbs_id,
		         eka.mst_det_billing.msdb_discount, eka.mst_billing.msbi_stamp 		 
		ORDER BY eka.mst_billing.msbi_tahun_ke ASC, eka.mst_billing.msbi_premi_ke ASC
	</select>
	
	
	<select id="elions.uw.selectProductInsured1" parameterClass="hashMap" resultClass="hashMap">
		SELECT  EKA.MST_PRODUCT_INSURED.REG_SPAJ ,
	           EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO ,
	           EKA.MST_PRODUCT_INSURED.LSBS_ID ,
	           EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER ,
	           EKA.MST_PRODUCT_INSURED.LKU_ID ,
	           EKA.MST_PRODUCT_INSURED.MSPR_TSI ,
	           EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_A ,
	           EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_B ,
	           EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_C ,
	           EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_D ,
	           EKA.MST_PRODUCT_INSURED.MSPR_TSI_PA_M ,
	           EKA.MST_PRODUCT_INSURED.MSPR_CLASS ,
	           EKA.MST_PRODUCT_INSURED.MSPR_UNIT ,
	           EKA.MST_PRODUCT_INSURED.MSPR_PERSEN ,
	           EKA.MST_PRODUCT_INSURED.MSPR_PREMIUM ,
	           EKA.MST_PRODUCT_INSURED.MSPR_DISCOUNT ,
	           EKA.MST_PRODUCT_INSURED.MSPR_REF_NO ,
	           EKA.MST_PRODUCT_INSURED.MSPR_ACTIVE ,
	           TO_CHAR( EKA.MST_PRODUCT_INSURED.LSBS_ID ) || '~X' || TO_CHAR( EKA.MST_PRODUCT_INSURED.LSDBS_NUMBER) as prod_id,
	           EKA.MST_PRODUCT_INSURED.MSPR_RATE ,
	           999.99 as disc,
	           EKA.MST_PRODUCT_INSURED.MSPR_EXTRA ,
	           EKA.MST_PRODUCT_INSURED.MSPR_INS_PERIOD ,
	           EKA.MST_PRODUCT_INSURED.MSPR_BEG_DATE ,
	           EKA.MST_PRODUCT_INSURED.MSPR_END_DATE ,
	           EKA.MST_PRODUCT_INSURED.MSPR_END_PAY ,
	           EKA.MST_PRODUCT_INSURED.MSPR_TT     
	        FROM EKA.MST_PRODUCT_INSURED     
        WHERE ( EKA.MST_PRODUCT_INSURED.REG_SPAJ = #reg_spaj# ) and          ( EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO =#insured_no#  ) and          ( EKA.MST_PRODUCT_INSURED.MSPR_ACTIVE = 1 )  
        ORDER BY EKA.MST_PRODUCT_INSURED.LSBS_ID          ASC
	</select>
	
	<select id="elions.uw.selectDataBilling" parameterClass="string" resultClass="hashMap">
		 SELECT EKA.MST_POLICY.LSCB_ID,   
				 EKA.MST_POLICY.MSPO_PAY_PERIOD,
				 EKA.MST_POLICY.MSPO_NEXT_BILL, 
				 EKA.MST_INSURED.MSTE_BEG_DATE, 
				 EKA.MST_POLICY.MSPO_POLICY_NO, 
				 EKA.MST_POLICY.MSPO_POLICY_HOLDER, 
				 EKA.LST_PAY_MODE.LSCB_TTL_MONTH
		  FROM EKA.MST_POLICY, EKA.MST_INSURED,EKA.LST_PAY_MODE    
		 WHERE EKA.MST_POLICY.REG_SPAJ = EKA.MST_INSURED.REG_SPAJ 
		   AND EKA.LST_PAY_MODE.LSCB_ID=EKA.MST_POLICY.LSCB_ID
		   AND EKA.MST_POLICY.REG_SPAJ =#value#
	</select>
	
	<select id="elions.uw.selectDiskPlan" parameterClass="hashMap" resultClass="double">
		SELECT EKA.LST_DISCOUNT.LSDIS_PERSEN
		  FROM EKA.LST_DISCOUNT  
		 WHERE ( EKA.LST_DISCOUNT.LSBS_ID = #lsbs_id# ) AND  
			 	 ( EKA.LST_DISCOUNT.LSDBS_NUMBER = #lsdbs_number# ) AND  
				 ( EKA.LST_DISCOUNT.LSTHT_TAHUN_KE = #lstht_tahun_ke# )
	</select>
	
	<select id="elions.uw.isUlinkBasedSpajNo" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(*) from eka.mst_ulink where reg_spaj = #regSpaj#
	</select>
 
	<select id="elions.uw.isSlinkBasedSpajNo" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(*) from eka.mst_slink where reg_spaj = #regSpaj#
	</select>
 
	<select id="elions.uw.uLinkDescrAndDetail" parameterClass="java.lang.String" resultMap="elions.uw.result.uLinkDescrAndDetail">
		SELECT b.lt_transksi, a.mu_jlh_premi, a.mu_tahun_ke, a.mu_premi_ke, TO_CHAR(a.mu_tahun_ke) || '@' || TO_CHAR(a.mu_premi_ke) as TAHUN_PREMI_KE
	  	FROM eka.mst_ulink a, eka.lst_transaksi b
	 	WHERE a.reg_spaj = #regSpaj# AND a.lt_id = b.lt_id and b.lt_id in (1, 2, 5)
	</select>
 
	<select id="elions.uw.sLinkDescrAndDetail" parameterClass="java.lang.String" resultMap="elions.uw.result.sLinkDescrAndDetail">
		SELECT msl_desc,msl_premi, msl_tahun_ke, msl_premi_ke , TO_CHAR(msl_tahun_ke) || '@' || TO_CHAR(msl_premi_ke) as TAHUN_PREMI_KE
		FROM eka.mst_slink 
		WHERE reg_spaj = #regSpaj#
	</select>
 
 
	<select id="elions.uw.selectMaxNoUrutMstDrekDet" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT max(no_urut) FROM eka.mst_drek_det 
		WHERE no_trx = #noTrx#
	</select>
 
	<select id="elions.uw.selectMstDrekDet" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.DrekDet">
	 	SELECT no_trx, tahun_ke, premi_ke, jumlah, no_urut, no_spaj, no_pre, payment_id, tgl_trx
		FROM eka.mst_drek_det
		WHERE (flag_active = 1 or flag_active is null)
			AND jenis = 'K'
		<isNotNull property="noTrx" >
			AND no_trx = #noTrx#
		</isNotNull>
		<isNotNull property="regSpaj" >
			AND no_spaj = rpad(replace(#regSpaj#,'.'),11,' ')
		</isNotNull>
		<isNotNull property="paymentId" >
			AND payment_id = #paymentId#
		</isNotNull>
		<isNotNull property="norek_ajs" >
			AND replace(replace(replace(trim(norek_ajs),'.',''),'-',''),' ','') = #norek_ajs#
		</isNotNull>
			AND flag_batal != 1
			and tahun_ke is not null
		order by no_urut asc
	</select>

	<select id="elions.uw.selectMstDrekDet2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT det.no_trx, det.premi_ke, det.jumlah, det.no_urut, det.no_spaj, drek.nilai_trx, drek.lku_id, kurs.lku_symbol
		FROM eka.mst_drek_det det, eka.mst_drek drek, eka.lst_kurs kurs
		WHERE ( det.flag_active = 1 or det.flag_active is null )
		   AND drek.no_trx = det.no_trx
		   AND drek.lku_id = kurs.lku_id
		   AND det.no_trx = #noTrx#
		   AND replace(replace(replace(trim(det.norek_ajs),'.',''),'-',''),' ','') = #norek_ajs#
		ORDER BY no_urut asc
	</select>

	<select id="elions.uw.selectMstDrekBasedNoTrx" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT no_trx, lsbp_id, tgl_trx, jenis, lku_id, nilai_trx, norek_ajs, no_spaj, tgl_input, flag_proses, flag_update, tgl_proses, 
			user_input, user_proses, ket, kode_cab, ket_update, flag_recheck, flag_tunggal_gabungan, no_pre
		FROM eka.mst_drek
		WHERE no_trx = #noTrx#
			AND jenis = 'K'
	</select>
 
 	<select id="elions.uw.selectSumPremiMstDrekAndDet" parameterClass="java.util.HashMap" resultClass="double">
		SELECT( drek.nilai_trx - ( select (case when(sum(drdet.jumlah) is null) then 0 else sum(drdet.jumlah) end) jumlah_total from eka.mst_drek_det drdet where drdet.no_trx = #noTrx# and 
			replace(replace(replace(trim(drdet.norek_ajs),'.',''),'-',''),' ','') = replace(replace(replace(trim(drek.norek_ajs),'.',''),'-',''),' ','') 
			and ( drdet.flag_active is null or drdet.flag_active = 1 ) and drdet.jenis = drek.jenis ) ) temp_jumlah
	    FROM eka.mst_drek drek
	    WHERE drek.no_trx = #noTrx# and drek.jenis = 'K'
	</select>
	
	<select id="elions.uw.selectMonthBetween" parameterClass="hashMap" resultClass="int">
		SELECT ROUND(MONTHS_BETWEEN(#nextdate#, #begDate#))		
			FROM DUAL 
	</select>
 
	<select id="elions.uw.getExtraPremi" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT   
		eka.f_lsdbs(a.reg_spaj, a.lsbs_id, a.lsdbs_number) lsdbs_name, a.mspr_tsi, nvl(a.mspr_extra,0) mspr_extra, a.mspr_rate, 
		a.mspr_premium total5, nvl(a.mspr_discount,0) mspr_discount, 
		(nvl(a.mspr_premium,0) - nvl(a.mspr_discount,0)) total7, 
		a.mspr_persen
		    FROM eka.mst_product_insured a, eka.lst_det_bisnis b
		   WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		     AND a.mste_insured_no = 1
		     AND a.mspr_active = 1
			 AND a.lsbs_id = b.lsbs_id(+)
			 AND a.lsdbs_number = b.lsdbs_number(+)			 
			 AND trim(b.lsdbs_name) = trim(#lsdbs_name#)	
	</select> 
	
	<select id="elions.uw.getLstbId" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select lstb_id from eka.mst_policy where reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectGetPasIdFromFireId" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select msp_id from eka.mst_pas_sms where msp_fire_id = #value#
		and (MSP_FIRE_JENIS is null or MSP_FIRE_JENIS=0)
	</select>
	
	<select id="elions.uw.selectFreePaTmmsList" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Tmms">
	 select * FROM(
		select ROWNUM as row_number, id, sex, status, beg_date, end_date, home_phone, mobile_no, no_sertifikat, holder_name, bod_tempat, bod_holder, no_identitas, address1, city, postal_code, email from eka.mst_tmms@EB
			where application_id = 'MALLINSURANCE_FP'
			<isNotNull property="tmms_id">
		   		and id = #tmms_id#
		   	</isNotNull>
		   	<isNotNull property="msag_id">
		   		and kd_agent = #msag_id#
		   	</isNotNull>
			<isEqual property="tipe" compareValue="1">
				and UPPER(trim(holder_name)) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				and UPPER(trim(no_identitas)) $kata$
			</isEqual>
			)<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   	</isNotEmpty>	
	</select>
	
	<select id="elions.uw.selectTotalFreePaTmmsList" parameterClass="java.util.HashMap" resultClass="string">
		SELECT CEIL( count( * ) / 20 ) as total_pages
		from eka.mst_tmms@EB
			where application_id = 'MALLINSURANCE_FP'
			<isNotNull property="tmms_id">
		   		and id = #tmms_id#
		   	</isNotNull>
		   	<isNotNull property="msag_id">
		   		and kd_agent = #msag_id#
		   	</isNotNull>
			<isEqual property="tipe" compareValue="1">
				and UPPER(trim(holder_name)) $kata$
			</isEqual>
			<isEqual property="tipe" compareValue="2">
				and UPPER(trim(no_identitas)) $kata$
			</isEqual>
	</select>
	
	
	<select id="elions.uw.selectStatusPasList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<isNotNull property="msp_id" >
			select a.msps_date, replace(a.msps_desc,'FURTHER REQUIREMENT : ', '') msps_desc, (select c.lus_login_name from eka.lst_user c where c.lus_id=a.lus_id) akseptor from eka.mst_position_spaj_pas a 
			where a.reg_id = ( select b.msp_fire_id from eka.mst_pas_sms b where b.msp_id = #msp_id# )
			and upper(a.msps_desc) like 'FURTHER REQUIREMENT%'
		</isNotNull>
		<isNotNull property="reg_id" >
			select a.msps_date, replace(a.msps_desc,'FURTHER REQUIREMENT : ', '') msps_desc, (select c.lus_login_name from eka.lst_user c where c.lus_id=a.lus_id) akseptor from eka.mst_position_spaj_pas a 
			where a.reg_id = #reg_id#
			and upper(a.msps_desc) like 'FURTHER REQUIREMENT%'
		</isNotNull>
	</select>
	
	<select id="elions.uw.selectKodeAgentFromMstKusioner" parameterClass="string" resultClass="string">
	select mku_agent from eka.mst_kuesioner 
	where fire_id = #fire_id#
	</select>
	
	<select id="elions.uw.countregbponline" parameterClass="string" resultClass="java.lang.Integer">
		select
		count(*)
		from eka.mst_pas_sms
		where jenis_pas in ('AP/BP ONLINE')
		and lspd_id = 1
		and dist = '05'
		and msag_id_pp is null
		and msag_id is not null
		and msp_fire_id is not null
		and msag_no_reg is null
	</select>
	
	<select id="elions.uw.selectAllPasList" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Pas">
	 SELECT *
	 FROM(
	 	select
	 		ROWNUM as row_number
			, msp_id
			, msp_fire_id
			, msp_kode_sts_sms
			, msp_desc_sts_sms
			, msp_mobile
			, msp_mobile2
			, msp_text
			, msp_message_date
			, msp_receive_date
			, msp_full_name
			, msp_identity_no
			, msp_identity_no_tt
			, msp_date_of_birth
			, msp_address_1
			, msp_address_2
			, msp_city
			, msp_postal_code
			, msp_rek_nama
			, msp_rek_cabang
			, msp_rek_kota
			, msp_age
			, dist
			, pin
			, no_kartu
			, lspd_id
			, lssp_id
			, lssa_id
			, lscb_id
			, lsbp_id
			, msp_pas_accept_date
			, msp_pas_beg_date
			, msp_pas_end_date
			, msp_admin_date
			, msp_fire_accept_date
			, msp_fire_beg_date
			, msp_fire_end_date
			, msp_fire_policy_no
			, msp_fire_code_name
			, msp_fire_name
			, msp_fire_identity
			, msp_fire_occupation
			, msp_fire_type_business
			, msp_fire_source_fund
			, msp_fire_address_1
			, msp_fire_addr_code
			, msp_fire_phone_number
			, msp_fire_email
			, msp_fire_okupasi
			, msp_fire_postal_code
			, msp_fire_mobile
			, msp_fire_insured_addr_code
			, msp_fire_insured_addr
			, msp_fire_insured_postal_code
			, msp_fire_insured_addr_no
			, msp_fire_insured_addr_envir
			, msp_fire_date_of_birth 
			, msp_fire_fail_desc
			, msp_no_rekening
			, msp_no_rekening_autodebet
			, msp_tgl_debet
			, msp_tgl_valid
			, no_va
			, lsbp_id_autodebet
			, msp_rek_nama_autodebet
			, msag_id
			, msag_id_pp
			, kode_ao
			, pribadi
			, p.lus_id
			, mspo_policy_no
			, p.reg_spaj
			, msp_fire_insured_city
			, msp_fire_insured_phone_number
			, msp_pas_phone_number
			, msp_fire_okupasi_else
			, msp_fire_ins_addr_envir_else
			, msp_flag_aksep
			, msp_fire_export_flag
			, msp_flag_cc
			, msp_pas_tmp_lhr_tt
			, msp_pas_dob_pp
			, lsre_id
			, produk
			, product_code
			, msp_pas_nama_pp
			, msp_pas_email
			, msp_pas_tmp_lhr_pp,msp_flag_pas, msp_sex_pp, msp_sex_tt
			, msp_exist_bp
			, msp_status
			, msp_tgl_status
			, msp_ket_status
			, msp_warga
			, msp_warga_else
			, msp_status_nikah
			, msp_agama
			, msp_pendidikan
			, msp_pendidikan_else
			, msp_occupation
			, msp_occupation_else
			, msp_company_name
			, msp_company_usaha
			, msp_company_jabatan
			, msp_company_address
			, msp_company_postal_code
			, msp_company_phone_number
			, msp_cek_ktp
			, msp_cek_kk
			, msp_cek_npwp
			, msp_cek_bukti_bayar
			, msp_cek_srt_keterangan
			, msp_cek_rekening
			, msp_cek_ktp_uw
			, msp_cek_kk_uw
			, msp_cek_npwp_uw
			, msp_cek_bukti_bayar_uw
			, msp_cek_srt_keterangan_uw
			, msp_cek_rekening_uw
			, lsag_id
			, msp_exist_bp_name
			, msp_area_code_rumah
			, lside_id
			, msp_company_area_code
			, lrb_id
			, mspo_plan_provider
			, jenis_pas
			, msp_up
			, msp_premi
			, msp_company_email, msp_company_fax, msp_company_ijin_usaha, msp_rt, msp_rw, msp_kecamatan, msp_propinsi, msp_pas_npwp, lju_id 
			, mcl_id_pp
			, mcl_id_tt
			, flag_val_send
			, msp_cek_akte_kelahiran
			, msp_cek_akte_kelahiran_uw
			, msp_cek_tandatangan
			, msp_cek_tandatangan_uw
			, msp_still_bp, msp_partner_exist_bp, msp_partner_still_bp
			, application_id
			, no_sertifikat
			, reff_id
            , lcb_no
            , lcb_reff
			<isEqual property="jenisQuery" compareValue="pabsm">
			<!--, (select count(*) from eka.mst_reff_bii x where trim(x.reg_spaj) = trim(p.reg_spaj)) reff_bii_flag -->
			, 0 reff_bii_flag
			</isEqual>
			<isNotEqual property="jenisQuery" compareValue="pabsm">
			, 0 reff_bii_flag
			</isNotEqual>
		from eka.mst_pas_sms p
		LEFT JOIN (select reg_spaj, no_sertifikat from eka.mst_cplan@eb z where reg_spaj is not null and no_sertifikat is not null) z
		ON trim(z.reg_spaj) = trim(p.reg_spaj)
		left join eka.lst_user b
		on p.lus_id = b.lus_id
		where 1=1
		<isEqual property="jenisQuery" compareValue="pabsm">
		and jenis_pas = 'PABSM'
		</isEqual>
		<isEqual property="jenisQuery" compareValue="pabsmsy">
		and jenis_pas = 'PABSMSY'
		</isEqual>
		<isEqual property="jenisQuery" compareValue="mall">
		and jenis_pas = 'MALLINSURANCE'
		</isEqual>
		and (MSP_FIRE_JENIS is null or MSP_FIRE_JENIS=0)
		<isEqual property="jenisQuery" compareValue="partner">
			and jenis_pas in ('AP/BP','PAS BPD','BP CARD')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="bp_online">
			and jenis_pas in ('AP/BP ONLINE')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="bpgetbp">
			and jenis_pas in ('BPGETBP')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="dbd_bp">
			and jenis_pas in ('DBD BP')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="dbd">
			and jenis_pas in ('DBD BP','DBD AGENCY','DBD SYARIAH')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="dbd_aksep">
			and jenis_pas in ('DBD BP','DBD AGENCY','DBD SYARIAH','DBD MALL')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="dbd mall">
			and jenis_pas in ('DBD MALL')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="simple_business">
			and dist = '05' and product_code is not null
		</isEqual>
		<isEqual property="jenisQuery" compareValue="pas">
			and jenis_pas in ('INDIVIDU','AP/BP', 'BPGETBP','PAS BPD')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="pas_aksep">
			and jenis_pas in ('INDIVIDU','MALLINSURANCE','AP/BP','AP/BP ONLINE', 'BPGETBP','PAS BPD','BP SMS','BP CARD','PAS SYARIAH','SMART ACCIDENT CARE','NISSAN PA','NISSAN DBD')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="hcp">
			and jenis_pas = 'HCP'
		</isEqual>
		<isEqual property="jenisQuery" compareValue="individu">
			and jenis_pas = 'INDIVIDU'
		</isEqual>
		<isEqual property="jenisQuery" compareValue="bp_sms">
			and jenis_pas = 'BP SMS'
		</isEqual>
		<isEqual property="jenisQuery" compareValue="other">
			and no_kartu is not null
			and pin is not null
			and msag_id_pp is null
		</isEqual>
		<isEqual property="jenisQuery" compareValue="othernospaj">
			and reg_spaj is null
			and lspd_id <![CDATA[<>]]> 95					
		</isEqual>
		<isEqual property="jenisQuery" compareValue="bponline">
			and jenis_pas = 'AP/BP ONLINE'
		</isEqual>
		<isEqual property="jenisDist" compareValue="individu">
			and dist = '05'
		</isEqual>
		<isEqual property="jenisDist" compareValue="dmtm">
			and (dist = '01' or dist is null)
		</isEqual>
		<isEqual property="jenisDist" compareValue="fire_individu">
			and dist = '05'
			and MSP_KODE_STS_SMS = '00'
		</isEqual>
		<isEqual property="jenisDist" compareValue="fire_dmtm">
			and (dist = '01' or dist is null)
		</isEqual>
		<isEqual property="jenisDist" compareValue="fire">
			and ((dist = '05' and MSP_KODE_STS_SMS = '00') or (dist = '01' or dist is null))
		</isEqual>
		<isNotNull property="msp_id" >
			and msp_id = #msp_id#
		</isNotNull>
		<isEqual property="tipe" compareValue="1">
			and UPPER(trim(msp_full_name)) $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="5">
			and UPPER(trim(msp_fire_name)) $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="2">
			and UPPER(trim(msp_identity_no)) $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="6">
			and UPPER(trim(msp_fire_identity)) $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="7">
			and UPPER(trim(msp_mobile)) $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="8">
			and UPPER(trim(msp_fire_mobile)) $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="3">
				and UPPER(trim(msp_fire_id)) $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="4">
				and UPPER(trim(no_kartu)) $kata$
		</isEqual>		
		<isEqual property="jenis" compareValue="dbd">
				and jenis_pas in ('DBD BP','DBD AGENCY','DBD SYARIAH')
		</isEqual>	
		<isEqual property="jenis" compareValue="pas">
			<isNotEqual property="lus_admin" compareValue="1">
				<isNotNull property="lspd_id" >
					and lspd_id = #lspd_id#
				</isNotNull>
			</isNotEqual>			
			and msp_kode_sts_sms = '00'
			and msp_flag_pas = 1 and dist = '05'
		</isEqual>
		<isEqual property="jenis" compareValue="hcp">
			<isNotEqual property="lus_admin" compareValue="1">
				<isNotNull property="lspd_id" >
					and lspd_id = #lspd_id#
				</isNotNull>
			</isNotEqual>			
			and msp_kode_sts_sms = '00'
			and msp_flag_pas = 0 and dist = '05'
		</isEqual>
		<isEqual property="jenis" compareValue="fire">
			and (msp_fire_export_flag is null or msp_fire_export_flag = 4)
			and msp_fire_id is not null and msp_fire_name is not null
		</isEqual>
		<isEqual property="jenis" compareValue="pabsm">
			<isNotNull property="lspd_id" >
				and lspd_id = #lspd_id#
			</isNotNull>
			<isNotNull property="lus_id" >
				and p.lus_id = #lus_id#
			</isNotNull>
	        <isNotNull property="jn_bank">
	            and b.jn_bank = #jn_bank#
	        </isNotNull>
	        <isNotNull property="cab_bank">
	            and trim(b.cab_bank) = trim(#cab_bank#)
	        </isNotNull>
			and dist = '05'
			and lssp_id in (1,10)
		</isEqual>
		<isEqual property="jenis" compareValue="bponline">
			<isNotEqual property="lus_admin" compareValue="1">
				<isNotNull property="lspd_id" >
					and lspd_id = #lspd_id#
				</isNotNull>
			</isNotEqual>			
			and msp_kode_sts_sms = '00'
			and msp_flag_pas = 1 and dist = '05'
		</isEqual>
		<isEqual property="jenis" compareValue="pasfireviewer">
			
		</isEqual>
		<isNotEmpty property="tgl_lahir" prepend=" and "> msp_date_of_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
		<isNotNull property="order_by">
		    <isEqual property="order_by" compareValue="create_date_desc">
		        order by msp_pas_create_date desc
		    </isEqual>
		</isNotNull>
		<isNull property="order_by">
		    order by msp_receive_date asc
		</isNull>
		)
		<isNotEmpty property="noPage">
		   	<isNotNull property="noRow">
		   		WHERE ( row_number <![CDATA[>]]> ( ( #noPage# - 1 ) * #noRow# ) ) 
		   		AND ( row_number <![CDATA[<=]]> ( #noPage# * #noRow# )  )
		   	</isNotNull>
	   	</isNotEmpty>		
	</select>
	
	<select id="elions.uw.selectPasBySpaj" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Pas">
		select * from eka.mst_pas_sms where reg_spaj = #reg_spaj#
	</select>
		
	<select id="elions.uw.selectTotalAllPasList" parameterClass="java.util.HashMap" resultClass="string">
		SELECT CEIL( count( * ) / #noRow# ) as total_pages
		from eka.mst_pas_sms p
		left join eka.lst_user b
		on p.lus_id = b.lus_id
		where 1=1
		<isEqual property="jenisQuery" compareValue="pabsm">
		and jenis_pas = 'PABSM'
		</isEqual>
		<isEqual property="jenisQuery" compareValue="pabsmsy">
		and jenis_pas = 'PABSMSY'
		</isEqual>
		<isEqual property="jenisQuery" compareValue="mall">
		and jenis_pas = 'MALLINSURANCE'
		</isEqual>
		and (MSP_FIRE_JENIS is null or MSP_FIRE_JENIS=0)
		<isEqual property="jenisQuery" compareValue="partner">
			and jenis_pas in ('AP/BP','PAS BPD','BP CARD')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="bp_online">
			and jenis_pas in ('AP/BP ONLINE')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="bpgetbp">
			and jenis_pas in ('BPGETBP')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="dbd_bp">
			and jenis_pas in ('DBD BP')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="dbd">
			and jenis_pas in ('DBD BP','DBD AGENCY','DBD SYARIAH')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="dbd_aksep">
			and jenis_pas in ('DBD BP','DBD AGENCY','DBD SYARIAH','DBD MALL')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="dbd mall">
			and jenis_pas in ('DBD MALL')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="simple_business">
			and dist = '05' and product_code is not null
		</isEqual>
		<isEqual property="jenisQuery" compareValue="pas">
			and jenis_pas in ('INDIVIDU','AP/BP', 'BPGETBP','PAS BPD')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="pas_aksep">
			and jenis_pas in ('INDIVIDU','MALLINSURANCE','AP/BP','AP/BP ONLINE', 'BPGETBP','PAS BPD','BP SMS','BP CARD','PAS SYARIAH','SMART ACCIDENT CARE','NISSAN PA','NISSAN DBD')
		</isEqual>
		<isEqual property="jenisQuery" compareValue="hcp">
			and jenis_pas = 'HCP'
		</isEqual>
		<isEqual property="jenisQuery" compareValue="individu">
			and jenis_pas = 'INDIVIDU'
		</isEqual>
		<isEqual property="jenisQuery" compareValue="bp_sms">
			and jenis_pas = 'BP SMS'
		</isEqual>
		<isEqual property="jenisQuery" compareValue="other">
			and no_kartu is not null
			and pin is not null
			and msag_id_pp is null
		</isEqual>
		<isEqual property="jenisQuery" compareValue="othernospaj">
			and reg_spaj is null
			and lspd_id <![CDATA[<>]]> 95					
		</isEqual>
		<isEqual property="jenisQuery" compareValue="bponline">
			and jenis_pas = 'AP/BP ONLINE'
		</isEqual>
		<isEqual property="jenisDist" compareValue="individu">
			and dist = '05'
		</isEqual>
		<isEqual property="jenisDist" compareValue="dmtm">
			and (dist = '01' or dist is null)
		</isEqual>
		<isEqual property="jenisDist" compareValue="fire_individu">
			and dist = '05'
			and MSP_KODE_STS_SMS = '00'
		</isEqual>
		<isEqual property="jenisDist" compareValue="fire_dmtm">
			and (dist = '01' or dist is null)
		</isEqual>
		<isEqual property="jenisDist" compareValue="fire">
			and ((dist = '05' and MSP_KODE_STS_SMS = '00') or (dist = '01' or dist is null))
		</isEqual>
		<isNotNull property="msp_id" >
			and msp_id = #msp_id#
		</isNotNull>
		<isEqual property="tipe" compareValue="1">
			and UPPER(trim(msp_full_name)) $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="5">
			and UPPER(trim(msp_fire_name)) $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="2">
			and UPPER(trim(msp_identity_no)) $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="6">
			and UPPER(trim(msp_fire_identity)) $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="7">
			and UPPER(trim(msp_mobile)) $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="8">
			and UPPER(trim(msp_fire_mobile)) $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="3">
				and UPPER(trim(msp_fire_id)) $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="4">
				and UPPER(trim(no_kartu)) $kata$
		</isEqual>		
		<isEqual property="jenis" compareValue="dbd">
				and jenis_pas in ('DBD BP','DBD AGENCY','DBD SYARIAH')
		</isEqual>	
		<isEqual property="jenis" compareValue="pas">
			<isNotEqual property="lus_admin" compareValue="1">
				<isNotNull property="lspd_id" >
					and lspd_id = #lspd_id#
				</isNotNull>
			</isNotEqual>			
			and msp_kode_sts_sms = '00'
			and msp_flag_pas = 1 and dist = '05'
		</isEqual>
		<isEqual property="jenis" compareValue="hcp">
			<isNotEqual property="lus_admin" compareValue="1">
				<isNotNull property="lspd_id" >
					and lspd_id = #lspd_id#
				</isNotNull>
			</isNotEqual>			
			and msp_kode_sts_sms = '00'
			and msp_flag_pas = 0 and dist = '05'
		</isEqual>
		<isEqual property="jenis" compareValue="fire">
			and (msp_fire_export_flag is null or msp_fire_export_flag = 4)
			and msp_fire_id is not null and msp_fire_name is not null
		</isEqual>
		<isEqual property="jenis" compareValue="pabsm">
			<isNotNull property="lspd_id" >
				and lspd_id = #lspd_id#
			</isNotNull>
			<isNotNull property="lus_id" >
				and p.lus_id = #lus_id#
			</isNotNull>
			<isNotNull property="jn_bank">
			    and b.jn_bank = #jn_bank#
			</isNotNull>
			<isNotNull property="cab_bank">
			    and trim(b.cab_bank) = trim(#cab_bank#)
			</isNotNull>
			and dist = '05'
            and lssp_id in (1,10)
		</isEqual>
		<isEqual property="jenis" compareValue="bponline">
			<isNotEqual property="lus_admin" compareValue="1">
				<isNotNull property="lspd_id" >
					and lspd_id = #lspd_id#
				</isNotNull>
			</isNotEqual>			
			and msp_kode_sts_sms = '00'
			and msp_flag_pas = 1 and dist = '05'
		</isEqual>
		<isEqual property="jenis" compareValue="pasfireviewer">
			
		</isEqual>
		<isNotEmpty property="tgl_lahir" prepend=" and "> msp_date_of_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>		
	</select>
	
<select id="elions.uw.selectTotalListSPAJ" parameterClass="java.util.HashMap" resultClass="string">
		 
		<!--  
		  SELECT CEIL( count( * ) / #noRow# ) as total_pages
		  from (
		    select rownum as row_number, B.* 
		         from (   
		                select rownum, a.*
		                from(                    
		                     SELECT DISTINCT
						       P.REG_SPAJ,
						       D.MCL_FIRST AS PEMEGANG_POLIS,
						       P.LSPD_ID AS STATUS_POLIS,
						       STATUS,
						       MSPO_POLICY_NO,
						       (SELECT LSDBS_NAME
						          FROM EKA.LST_DET_BISNIS
						         WHERE LSBS_ID = PI.LSBS_ID AND LSDBS_NUMBER = PI.LSDBS_NUMBER)
						          AS NAMA_PRODUK,
						       PI.MSPR_PREMIUM AS PREMI,
						       PI.MSPR_TSI AS UP,
						       (SELECT LSCB_PAY_MODE
						          FROM EKA.LST_PAY_MODE
						         WHERE LSCB_ID = P.LSCB_ID)
						          AS CARA_BAYAR,
						       (SELECT MCL_FIRST
						          FROM EKA.MST_CLIENT_NEW
						         WHERE MCL_ID = MI.MSTE_INSURED)
						          AS TERTANGGUNG,
						       1 TYPE_DATA
						  FROM (  SELECT TRIM (MST_OFAC_SCREENING.REG_SPAJ) REG_SPAJ,
						                 MCL_FIRST,
						                 (SELECT CASE JUMLAH_STATUS
						                            WHEN 2 THEN 10
						                            WHEN 1 THEN MOFS_STATUS
						                         END
						                            STATUS
						                    FROM (SELECT REG_SPAJ,
						                                 MOFS_STATUS,
						                                 (SELECT COUNT (*) JUMLAH_STATUS
						                                    FROM (  SELECT MOFS_STATUS
						                                              FROM EKA.MST_OFAC_SCREENING MST
						                                             WHERE     MST.REG_SPAJ =
						                                                          SCR.REG_SPAJ
						                                                   AND MOFS_STATUS IN (2, 3)
						                                          GROUP BY MOFS_STATUS) JUMLAH_STATUS)
						                                    JUMLAH_STATUS
						                            FROM EKA.MST_OFAC_SCREENING SCR
						                           WHERE     ROWNUM <![CDATA[<=]]> 1
						                                 AND SCR.REG_SPAJ = MST_OFAC_SCREENING.REG_SPAJ
						                                 AND MOFS_STATUS IN (2, 3)) A)
						                    STATUS
						            FROM EKA.MST_OFAC_SCREENING MST_OFAC_SCREENING
						                 INNER JOIN EKA.MST_POLICY MST_POLICY
						                    ON MST_OFAC_SCREENING.REG_SPAJ = MST_POLICY.REG_SPAJ
						                 INNER JOIN EKA.MST_CLIENT_NEW
						                    ON MST_POLICY.MSPO_POLICY_HOLDER = MCL_ID
						                 INNER JOIN
						                 (SELECT DISTINCT REG_SPAJ
						                    FROM EKA.MST_OFAC_SCREENING_PROCESSED
						                   WHERE     LUS_ID IS NULL
						                         AND LSPD_ID IS NULL
						                         AND UPDATE_DATE IS NULL) PCS
						                    ON PCS.REG_SPAJ = MST_OFAC_SCREENING.REG_SPAJ
						           WHERE     MST_OFAC_SCREENING.REG_SPAJ IN
						                        (SELECT REG_SPAJ
						                           FROM (  SELECT COUNT (REG_SPAJ) AS TOTAL,
						                                          REG_SPAJ,
						                                          (SELECT COUNT (*) AS TOTAL_MATCH
						                                             FROM EKA.MST_OFAC_SCREENING
						                                            WHERE REG_SPAJ = SR.REG_SPAJ
						                                                  AND MOFS_STATUS = 3)
						                                             TOTAL_MATCH
						                                     FROM EKA.MST_OFAC_SCREENING SR
						                                 GROUP BY REG_SPAJ
						                                 ORDER BY REG_SPAJ) B
						                          WHERE TOTAL_MATCH <![CDATA[<>]]> TOTAL)
						                 AND MOFS_STATUS IN (2, 3)
						        GROUP BY MST_OFAC_SCREENING.REG_SPAJ, MCL_FIRST
						        ORDER BY MST_OFAC_SCREENING.REG_SPAJ) D,
						       EKA.MST_POLICY P,
						       EKA.MST_PRODUCT_INSURED PI,
						       EKA.MST_INSURED MI
						 WHERE     P.REG_SPAJ = D.REG_SPAJ
						       AND MI.REG_SPAJ = D.REG_SPAJ
						       AND PI.REG_SPAJ = D.REG_SPAJ
						       AND PI.LSBS_ID <![CDATA[<]]>300
						       AND P.LSPD_ID = 200
						       AND MI.LSPD_ID = 200
						UNION
						  SELECT X.REG_SPAJ, X.PEMEGANG_POLIS, X.STATUS_POLIS, X.STATUS, X.MSPO_POLICY_NO, (SELECT LSDBS_NAME
						                                                                                      FROM EKA.LST_DET_BISNIS
						                                                                                     WHERE LSBS_ID = Y.LSBS_ID AND LSDBS_NUMBER = Y.LSDBS_NUMBER)
						                                                                                      AS NAMA_PRODUK, X.PREMI, X.UP, X.CARA_BAYAR, X.TERTANGGUNG, X.TYPE_DATA
						  FROM (  SELECT DISTINCT
						                 (REG_SPAJ),
						                 (SELECT MOFS_NAME
						                    FROM EKA.MST_OFAC_SCREENING PP
						                   WHERE     PP.REG_SPAJ = CERTIFICATE.REG_SPAJ
						                         AND MOFS_TYPE = 'PEMEGANG')
						                    PEMEGANG_POLIS,
						                 2 AS STATUS_POLIS,
						                 (SELECT CASE JUMLAH_STATUS
						                            WHEN 2 THEN 10
						                            WHEN 1 THEN MOFS_STATUS
						                         END
						                            STATUS
						                    FROM (SELECT REG_SPAJ,
						                                 MOFS_STATUS,
						                                 (SELECT COUNT (*) JUMLAH_STATUS
						                                    FROM (  SELECT MOFS_STATUS
						                                              FROM EKA.MST_OFAC_SCREENING MST
						                                             WHERE     MST.REG_SPAJ =
						                                                          SCR.REG_SPAJ
						                                                   AND MOFS_STATUS IN (2, 3)
						                                          GROUP BY MOFS_STATUS) JUMLAH_STATUS)
						                                    JUMLAH_STATUS
						                            FROM EKA.MST_OFAC_SCREENING SCR
						                           WHERE     ROWNUM <![CDATA[<=]]> 1
						                                 AND SCR.REG_SPAJ = CERTIFICATE.REG_SPAJ
						                                 AND MOFS_STATUS IN (2, 3)) A)
						                    STATUS,
						                 'SERTITIKAT' MSPO_POLICY_NO,
						                 0 AS PREMI,
						                 0 AS UP,
						                 '' AS CARA_BAYAR,
						                 'SERTIFIKAT' AS TERTANGGUNG,
						                 2 TYPE_DATA
						            FROM (SELECT *
						                    FROM EKA.MST_OFAC_SCREENING T
						                   WHERE REG_SPAJ IN
						                            (SELECT DISTINCT REG_SPAJ
						                               FROM EKA.MST_OFAC_SCREENING_PROCESSED
						                              WHERE     LUS_ID IS NULL
						                                    AND LSPD_ID IS NULL
						                                    AND UPDATE_DATE IS NULL)) CERTIFICATE
						           WHERE     REG_SPAJ IN
						                        (SELECT REG_SPAJ
						                           FROM (  SELECT COUNT (REG_SPAJ) AS TOTAL,
						                                          REG_SPAJ,
						                                          (SELECT COUNT (*) AS TOTAL_MATCH
						                                             FROM EKA.MST_OFAC_SCREENING
						                                            WHERE     REG_SPAJ = SR.REG_SPAJ
						                                                  AND MOFS_STATUS = 3)
						                                             TOTAL_MATCH
						                                     FROM EKA.MST_OFAC_SCREENING SR
						                                 GROUP BY REG_SPAJ
						                                 ORDER BY REG_SPAJ) B
						                          WHERE TOTAL_MATCH <![CDATA[<>]]>TOTAL)
						                 AND MOFS_STATUS IN (2, 3)
						        GROUP BY REG_SPAJ, MOFS_NAME, MOFS_STATUS) X,
						        EKA.MST_SPAJ_CRT Y
						 WHERE X.REG_SPAJ = Y.NO_POLICY
						 ORDER BY REG_SPAJ
		                ) a       
		                order by rownum
		            ) b
		        WHERE 1=1
				<isNotNull property="spaj">
							and trim(reg_spaj) like '%'||#spaj#||'%'
							and type_data = 1
							<isNotNull property="possible">
								and (status = 2 or status = 10)
							</isNotNull>
							<isNotNull property="matched">
								and (status = 3 or status = 10)
							</isNotNull>
				</isNotNull>
				<isNotNull property="nopol">
							and trim(mspo_policy_no)  like '%'||#nopol#||'%'
							<isNotNull property="possible">
								and (status = 2 or status = 10)
							</isNotNull>
							<isNotNull property="matched">
								and (status = 3 or status = 10)
							</isNotNull>
				</isNotNull>
				<isNotNull property="sertifikat">
							and trim(reg_spaj) like '%'||#sertifikat#||'%'
							and type_data = 2 
							<isNotNull property="possible">
								and (status = 2 or status = 10)
							</isNotNull>
							<isNotNull property="matched">
								and (status = 3 or status = 10)
							</isNotNull>
				</isNotNull>
				order by row_number
		) a
		 order by rownum  -->
		 
		SELECT CEIL( count( * ) / #noRow# ) as total_pages
		  from (
		    select rownum as row_number, B.* 
		         from (   
		                select rownum, a.*
		                from(SELECT DISTINCT P.REG_SPAJ,D.MCL_FIRST AS PEMEGANG_POLIS,P.LSPD_ID AS STATUS_POLIS,STATUS,MSPO_POLICY_NO,
										(SELECT LSDBS_NAME
										 FROM EKA.LST_DET_BISNIS
										 WHERE LSBS_ID = PI.LSBS_ID AND LSDBS_NUMBER = PI.LSDBS_NUMBER)AS NAMA_PRODUK,
										PI.MSPR_PREMIUM AS PREMI,PI.MSPR_TSI AS UP,
										(SELECT LSCB_PAY_MODE
										FROM EKA.LST_PAY_MODE
										 WHERE LSCB_ID = P.LSCB_ID) AS CARA_BAYAR,
										(SELECT MCL_FIRST
										 FROM EKA.MST_CLIENT_NEW
										WHERE MCL_ID = MI.MSTE_INSURED)AS TERTANGGUNG,
												1 TYPE_DATA
								FROM (SELECT TRIM (MST_OFAC_SCREENING.REG_SPAJ) REG_SPAJ,MCL_FIRST,PCS.STATUS
									  FROM EKA.MST_OFAC_SCREENING MST_OFAC_SCREENING
								      INNER JOIN EKA.MST_POLICY MST_POLICY
										ON MST_OFAC_SCREENING.REG_SPAJ = MST_POLICY.REG_SPAJ
									  INNER JOIN EKA.MST_CLIENT_NEW
										ON MST_POLICY.MSPO_POLICY_HOLDER = MCL_ID
									  INNER JOIN(SELECT REG_SPAJ, STATUS
												 FROM EKA.MST_OFAC_SCREENING_PROCESSED
												 WHERE LUS_ID IS NULL
												 AND LSPD_ID IS NULL
												 AND UPDATE_DATE IS NULL
												 AND STATUS = 2) PCS
										ON PCS.REG_SPAJ = MST_OFAC_SCREENING.REG_SPAJ
									  GROUP BY MST_OFAC_SCREENING.REG_SPAJ, MCL_FIRST, PCS.STATUS
									  ORDER BY MST_OFAC_SCREENING.REG_SPAJ) D,
								    EKA.MST_POLICY P,
								    EKA.MST_PRODUCT_INSURED PI,
								    EKA.MST_INSURED MI
								WHERE P.REG_SPAJ = D.REG_SPAJ
								  AND MI.REG_SPAJ = D.REG_SPAJ
								  AND PI.REG_SPAJ = D.REG_SPAJ
								  AND PI.LSBS_ID <![CDATA[<]]> 300
								  AND P.LSPD_ID = 200
								  AND MI.LSPD_ID = 200
								UNION
								SELECT DISTINCT T.REG_SPAJ ,MOFS_NAME PEMEGANG_POLIS,2 AS STATUS_POLIS,STATUS,'SERTITIKAT' MSPO_POLICY_NO, 
								       (SELECT LSDBS_NAME
										FROM EKA.LST_DET_BISNIS
										WHERE LSBS_ID = CRT.LSBS_ID AND LSDBS_NUMBER = CRT.LSDBS_NUMBER) AS NAMA_PRODUK,
								        0 AS PREMI,0 AS UP, '' AS CARA_BAYAR,'SERTIFIKAT' AS TERTANGGUNG,2 TYPE_DATA
								FROM (SELECT REG_SPAJ, MOFS_NAME
								      FROM EKA.MST_OFAC_SCREENING 
								      WHERE MOFS_TYPE = 'PEMEGANG') T
								INNER JOIN(SELECT DISTINCT REG_SPAJ, STATUS
								           FROM EKA.MST_OFAC_SCREENING_PROCESSED
								           WHERE LUS_ID IS NULL
								            AND LSPD_ID IS NULL
								            AND UPDATE_DATE IS NULL
								            AND STATUS = 2) CERTIFICATE
								    ON CERTIFICATE.REG_SPAJ = T.REG_SPAJ
								INNER JOIN EKA.MST_SPAJ_CRT CRT
								    ON CRT.NO_POLICY = T.REG_SPAJ
								GROUP BY T.REG_SPAJ, MOFS_NAME, CERTIFICATE.STATUS, CRT.LSDBS_NUMBER, CRT.LSBS_ID	
		                ) a       
		                order by rownum
		            ) b
		        WHERE 1=1
				<isNotNull property="spaj">
							and trim(reg_spaj) like '%'||#spaj#||'%'
							and type_data = 1
							<isNotNull property="possible">
								and (status = 2 or status = 10)
							</isNotNull>
							<isNotNull property="matched">
								and (status = 3 or status = 10)
							</isNotNull>
				</isNotNull>
				<isNotNull property="nopol">
							and trim(mspo_policy_no)  like '%'||#nopol#||'%'
							<isNotNull property="possible">
								and (status = 2 or status = 10)
							</isNotNull>
							<isNotNull property="matched">
								and (status = 3 or status = 10)
							</isNotNull>
				</isNotNull>
				<isNotNull property="sertifikat">
							and trim(reg_spaj) like '%'||#sertifikat#||'%'
							and type_data = 2 
							<isNotNull property="possible">
								and (status = 2 or status = 10)
							</isNotNull>
							<isNotNull property="matched">
								and (status = 3 or status = 10)
							</isNotNull>
				</isNotNull>
				order by row_number
		) a
		 order by rownum
	</select>

<select id="elions.uw.selectHolderSertifikat" parameterClass="string" resultClass="com.ekalife.elions.model.Pemegang">

		select mofs_name mcl_first, '' alamat_rumah, type_data
		from eka.mst_ofac_screening 
		where reg_spaj = #spaj#
		and mofs_type = 'PEMEGANG'
		and mofs_status in (2,3,4)
		and type_data = 2
		
</select>
		
<select id="elions.uw.selectHolder" parameterClass="string" resultClass="com.ekalife.elions.model.Pemegang">
		<!-- select a.reg_spaj, mcl_first, alamat_rumah
		from eka.mst_policy a
		right join eka.mst_client_new b
			on mspo_policy_holder = b.mcl_id
		right join EKA.MST_ADDRESS_NEW c
		    on c.mcl_id = b.mcl_id
		right join eka.mst_ofac_screening d
		   on d.reg_spaj = a.reg_spaj
		where a.reg_spaj = #spaj#
		AND mofs_type = 'PEMEGANG'
		and mofs_status in (2,3) -->
		
		select *
		from(         select mcl_first, spaj_polis as reg_spaj, alamat_tpt_tinggal AS alamat_rumah , 1 type_data    
		          from(      select distinct  eka.mst_policy.mspo_nasabah_dcif,eka.mst_client_new.mcl_first, eka.mst_client_new.lti_id, eka.mst_client_new.mcl_id,
		                        nvl(eka.mst_client_new.mkl_kerja,'LAINNYA')mkl_kerja ,eka.mst_policy.mspo_input_date, eka.mst_policy.mspo_no_pengiriman,
		                        decode(mst_client_new.mkl_kerja,'KARYAWAN SWASTA', eka.mst_client_new.mpn_job_desc,decode(eka.lst_jabatan.ljb_note,'','-',eka.lst_jabatan.ljb_note)) KERJAB,
		                        eka.mst_client_new.mkl_tujuan,
		                        eka.mst_client_new.mcl_jenis,
		                        eka.mst_client_new.mkl_tujuan tujuana,
		                        eka.mst_client_new.mcl_agama,
		                        eka.mst_client_new.mcl_green_card,
		                        eka.mst_policy.mspo_korespondensi,
		                        eka.mst_client_new.mcl_npwp,
		                         eka.mst_client_new.mkl_penghasilan , eka.mst_client_new.mkl_pendanaan ,
		                         eka.mst_client_new.mkl_smbr_penghasilan,
		                         eka.mst_client_new.mkl_smbr_penghasilan shasil,
		                         eka.mst_client_new.mkl_pendanaan danaa,
		                         eka.mst_client_new.mkl_pendanaan danaa2,
		                         eka.mst_client_new.mkl_industri , eka.mst_client_new.mkl_industri industria,
		                           eka.mst_client_new.mspe_no_identity, eka.mst_client_new.mspe_no_identity_expired, eka.mst_client_new.lside_id,
		                           eka.mst_client_new.mspe_place_birth,
		                            eka.mst_client_new.mspe_sex, decode(eka.mst_client_new.mspe_sex,1,'PRIA','WANITA') mspe_sex2,
		                                eka.mst_client_new.mkl_dana_from, decode(eka.mst_client_new.mkl_dana_from,1,'DIRI SENDIRI','BUKAN DIRI SENDIRI') mkl_dana_from2,
		                               eka.mst_client_new.mkl_hasil_from, decode(eka.mst_client_new.mkl_hasil_from,1,'DIRI SENDIRI','BUKAN DIRI SENDIRI') mkl_hasil_from2,
		                               eka.mst_client_new.mkl_smbr_hasil_from, decode(eka.mst_client_new.mkl_smbr_hasil_from,1,'DIRI SENDIRI','BUKAN DIRI SENDIRI') mkl_smbr_hasil_from2,
		                            eka.mst_client_new.mkl_sumber_premi, decode(eka.mst_client_new.mkl_sumber_premi,1,'PERORANGAN','BADAN HUKUM/USAHA') mkl_sumber_premi2,
		                            eka.mst_client_new.lsre_id_premi,
		                           eka.mst_client_new.mspe_date_birth, eka.mst_client_new.mspe_sex, decode(eka.mst_client_new.mspe_sex,1,'PRIA','WANITA') mspe_sex2,
		                           eka.mst_client_new.mspe_sts_mrt, eka.mst_policy.mspo_umur_beasiswa,
		                           eka.lst_grp_job.lgj_note,eka.lst_grp_job.lgj_id, eka.mst_client_new.mspe_lama_kerja,
		                           eka.lst_identity.lside_name, eka.lst_negara.lsne_note,eka.lst_negara.lsne_id,
		                           eka.mst_client_new.mcl_gelar, eka.mst_client_new.mpn_job_desc,
		                           eka.mst_client_new.mspe_mother, eka.mst_address_new.alamat_rumah,
		                           eka.mst_address_new.kd_pos_rumah, eka.mst_address_new.kota_rumah,
		                           eka.mst_address_new.kota_rumah kota_rumaha,
		                           eka.mst_address_new.area_code_rumah, eka.mst_address_new.telpon_rumah,
		                           eka.mst_address_new.alamat_kantor, eka.mst_address_new.kd_pos_kantor,
		                           eka.mst_address_new.kota_kantor,
		                           eka.mst_address_new.kota_kantor kota_kantora,
		                            eka.mst_address_new.no_hp2,
		                           eka.mst_address_new.no_hp, eka.mst_address_new.email,
		                           eka.mst_address_new.area_code_kantor,
		                           eka.mst_address_new.telpon_kantor, 
		                           eka.mst_address_new.alamat_tpt_tinggal,
		                           eka.mst_address_new.kota_tpt_tinggal,
		                           eka.mst_address_new.kd_pos_tpt_tinggal,
		                           eka.mst_policy.reg_spaj spaj_polis,
		                           eka.mst_insured.mste_insured_no,
		                           eka.mst_insured.mste_spaj_asli,
		                           eka.mst_insured.mste_standard, eka.mst_policy.mspo_age mste_age,
		                           eka.lst_agama.lsag_name,lst_agama.lsag_id, eka.lst_education.lsed_name,eka.lst_education.lsed_id,
		                           eka.lst_jabatan.ljb_id, eka.lst_relation.lsre_id,eka.lst_relation.lsre_relation,
		                           eka.mst_agent.msag_id, eka.mst_agent.lca_id, eka.mst_agent.lwk_id,
		                           eka.mst_agent.lsrg_id,eka.mst_policy.lscb_id,eka.mst_policy.mspo_policy_no,eka.mst_policy.mspo_policy_holder,
		                           eka.mst_policy.mspo_no_blanko,
		                           eka.mst_insured.mste_tgl_recur,
		                           eka.mst_policy.mspo_under_table,
		                           eka.mst_policy.mspo_under_table bonus_tahapan,
		                           eka.mst_policy.mspo_pribadi,
		                            eka.mst_policy.lus_id,
		                           eka.mst_policy.mspo_follow_up,
		                           eka.mst_policy.mspo_ao,
		                           eka.mst_policy.mspo_age,
		                           eka.mst_policy.lssp_id,
		                           eka.mst_policy.mspo_nasabah_acc,
		                           b.mcl_first nama_ao,
		                           eka.mst_policy.mspo_ref_bii,
		                           eka.mst_policy.mspo_spaj_date,
		                           eka.mst_policy.mspo_komisi_bii,
		                            eka.mst_address_new.area_code_rumah2,
		                            eka.mst_address_new.telpon_rumah2,
		                            eka.mst_address_new.area_code_kantor2,
		                            eka.mst_address_new.telpon_kantor2,
		                            eka.mst_address_new.no_fax,
		                             eka.mst_address_new.area_code_fax,
		                            eka.mst_policy.mspo_customer,
		                            eka.mst_worksite_flag.nik,
		                            eka.mst_insured.mste_pct_dplk,
		                            eka.mst_policy.mspo_jenis_terbit,
		                            eka.mst_client_new.mspe_email,
		                            (select count(*) from eka.mst_kyc
		                                where kyc_id = 1
		                                AND (no_urut != 10 AND kyc_pp = 0)
		                                AND reg_spaj=#spaj#) jmlkyc,
		                            (select count(*) from eka.mst_kyc
		                                where kyc_id = 2
		                                AND (no_urut != 20 AND kyc_pp = 0)
		                                AND reg_spaj=#spaj#) jmlkyc2,
		                            eka.mst_insured.mste_flag_guthrie,
		                             t1.*,t2.*,
		                            eka.mst_policy.mspo_customer sumber_id,
		                            c.mcl_first nama_sumber,
		                            eka.mst_policy.mspo_leader,
		                            eka.mst_policy.mspo_plan_provider,
		                            eka.mst_policy.msag_asnew,
		                            nvl(eka.mst_policy.mspo_flag_spaj,0)mspo_flag_spaj,
		                            eka.mst_client_new.mcl_first_alias,
		                            eka.mst_client_new.mcl_company_name,
		                            eka.mst_client_new.mkl_kerja_ket,
		                            (select kyc_desc from eka.mst_kyc where reg_spaj=#spaj# and  kyc_pp=2 and kyc_desc='GAJI')  bulan_gaji,
		                            (select kyc_desc from eka.mst_kyc where reg_spaj=#spaj# and  kyc_pp=2 and kyc_desc='TABUNGAN/DEPOSITO')  bulan_penghasilan,
		                            (select kyc_desc from eka.mst_kyc where reg_spaj=#spaj# and  kyc_pp=2 and kyc_desc='WARISAN')  bulan_orangtua,
		                            (select kyc_desc from eka.mst_kyc where reg_spaj=#spaj# and  kyc_pp=2 and kyc_desc='HIBAH')  bulan_usaha,
		                            (select kyc_desc from eka.mst_kyc where reg_spaj=#spaj# and  kyc_pp=2 and kyc_desc='LAINNYA')  bulan_lainnya,
		                            (select substr(kyc_desc,9) from eka.mst_kyc where reg_spaj=#spaj# and  kyc_pp=2 and kyc_desc LIKE 'LAINNYA%')  bulan_lainnya_note,
		                            (select kyc_desc from eka.mst_kyc where reg_spaj=#spaj# and  kyc_pp=2 and kyc_desc='INVESTASI')  tujuan_investasi,
		                            (select kyc_desc from eka.mst_kyc where reg_spaj=#spaj# and kyc_pp=2 and kyc_desc='PROTEKSI')  tujuan_proteksi,
		                            (select kyc_desc from eka.mst_kyc where reg_spaj=#spaj# and kyc_pp=2 and kyc_desc like'LAINNYA%')  tujuan_lainnya,
		                            eka.mst_policy.cf_job_code, eka.mst_policy.cf_customer_id, eka.mst_policy.cf_campaign_code,
		                            eka.mst_policy.mspo_id_sponsor, eka.mst_policy.mspo_id_place, eka.mst_policy.pega_case_id
		                      from eka.mst_address_new,
		                           eka.mst_client_new,
		                           eka.mst_insured,
		                           eka.mst_policy,
		                           eka.lst_negara,
		                           eka.lst_grp_job,
		                           eka.lst_identity,
		                           eka.lst_jabatan,
		                           eka.lst_agama,
		                           eka.lst_education,
		                           eka.lst_relation,
		                           eka.mst_agent,
		                           eka.lst_pekerjaan,
		                           eka.mst_agent_prod,
		                           eka.mst_agent a,
		                           eka.mst_client_new b,
		                           eka.mst_client_new c,
		                           eka.mst_worksite_flag,
		                        (select si.reg_spaj,si.nama "nama_si",si.lsre_id "hubungan_si",si.tanggal_lahir "tgllhr_si",
		                        anak_1.nama "nama_anak1",anak_1.lsre_id "hubungan_anak1", anak_1.tanggal_lahir "tgllhr_anak1",
		                        anak_2.nama "nama_anak2",anak_2.lsre_id "hubungan_anak2", anak_2.tanggal_lahir "tgllhr_anak2",
		                        anak_3.nama "nama_anak3",anak_3.lsre_id "hubungan_anak3", anak_3.tanggal_lahir "tgllhr_anak3"
		                        from                
		                        (select reg_spaj ,nama,lsre_id,tanggal_lahir 
		                        from eka.mst_keluarga 
		                        where lsre_id = 5 and no = 0 and insured = 1)si,
		                        (select reg_spaj,nama,lsre_id,tanggal_lahir 
		                        from eka.mst_keluarga 
		                        where lsre_id = 4 and no = 1 and insured = 1)anak_1,
		                        (select reg_spaj,nama,lsre_id,tanggal_lahir 
		                        from eka.mst_keluarga 
		                        where lsre_id = 4 and no = 2 and insured = 1)anak_2,
		                        (select reg_spaj,nama,lsre_id,tanggal_lahir 
		                        from eka.mst_keluarga 
		                        where lsre_id = 4 and no = 3 and insured = 1)anak_3
		                        where si.reg_spaj = anak_1.reg_spaj (+) and
		                        si.reg_spaj = anak_2.reg_spaj (+)and
		                        si.reg_spaj = anak_3.reg_spaj (+)    ) t1,(SELECT   a.reg_spaj no_spaj_insured
		                    ,suami.nama nama_suami,
		                     suami.tanggal_lahir tgl_suami,
		                     suami.USIA usia_suami,
		                     suami.KERJA pekerjaan_suami,
		                     suami.LJB_ID jabatan_suami,
		                     suami.NAMA_PERUSAHAAN perusahaan_suami,
		                     suami.BIDANG_USAHA bidang_suami,
		                     suami.NPWP npwp_suami,
		                     suami.PENGHASILAN penghasilan_suami,
		                     ayah.nama nama_ayah,
		                     ayah.tanggal_lahir tgl_ayah,
		                     ayah.USIA usia_ayah,
		                     ayah.KERJA pekerjaan_ayah,
		                     ayah.LJB_ID jabatan_ayah,
		                     ayah.NAMA_PERUSAHAAN perusahaan_ayah,
		                     ayah.BIDANG_USAHA bidang_ayah,
		                     ayah.NPWP npwp_ayah,
		                     ayah.PENGHASILAN penghasilan_ayah,
		                     ibu.nama nama_ibu,
		                     ibu.tanggal_lahir tgl_ibu,
		                     ibu.USIA usia_ibu,
		                     ibu.KERJA pekerjaan_ibu,
		                     ibu.LJB_ID jabatan_ibu,
		                     ibu.NAMA_PERUSAHAAN perusahaan_ibu,
		                     ibu.BIDANG_USAHA bidang_ibu,
		                     ibu.NPWP npwp_ibu,
		                     ibu.PENGHASILAN penghasilan_ibu
		              FROM   (SELECT   reg_spaj,
		                               nama,
		                               tanggal_lahir,
		                               USIA,
		                               KERJA,
		                               LJB_ID,
		                               NAMA_PERUSAHAAN,
		                               BIDANG_USAHA,
		                               NPWP,
		                               PENGHASILAN
		                        FROM   eka.mst_keluarga
		                       WHERE   lsre_id = 5 AND no = 0 AND insured = 0) suami,
		                     (SELECT   reg_spaj,
		                               nama,
		                               tanggal_lahir,
		                               USIA,
		                               KERJA,
		                               LJB_ID,
		                               NAMA_PERUSAHAAN,
		                               BIDANG_USAHA,
		                               NPWP,
		                               PENGHASILAN
		                        FROM   eka.mst_keluarga
		                       WHERE   lsre_id = 2 AND no = 1 AND insured = 0) ayah,
		                     (SELECT   reg_spaj,
		                               nama,
		                               tanggal_lahir,
		                               USIA,
		                               KERJA,
		                               LJB_ID,
		                               NAMA_PERUSAHAAN,
		                               BIDANG_USAHA,
		                               NPWP,
		                               PENGHASILAN
		                        FROM   eka.mst_keluarga
		                       WHERE   lsre_id = 2 AND no = 2 AND insured = 0) ibu,
		                       eka.mst_insured a
		             WHERE   
		                 a.reg_spaj = suami.reg_spaj(+) 
		                AND a.reg_spaj = ayah.reg_spaj(+)
		                AND a.reg_spaj = ibu.reg_spaj(+))t2
		                     where (eka.mst_client_new.mcl_id = eka.mst_address_new.mcl_id)
		                       and (eka.mst_policy.reg_spaj = eka.mst_insured.reg_spaj)
		                       and (eka.lst_negara.lsne_id(+) = eka.mst_client_new.lsne_id)
		                       and (eka.lst_grp_job.lgj_id(+) = eka.mst_client_new.lgj_id)
		                       and (eka.lst_identity.lside_id(+) = eka.mst_client_new.lside_id)
		                       and (eka.mst_policy.mspo_policy_holder = eka.mst_client_new.mcl_id)
		                       and (eka.mst_client_new.lsag_id = eka.lst_agama.lsag_id(+))
		                       and (eka.mst_client_new.lsed_id = eka.lst_education.lsed_id(+))
		                       and (eka.mst_policy.lsre_id = eka.lst_relation.lsre_id(+))
		                       and (eka.mst_client_new.ljb_id = eka.lst_jabatan.ljb_id(+))
		                       and eka.mst_agent.msag_id = eka.mst_agent_prod.msag_id
		                       and eka.mst_policy.reg_spaj = eka.mst_agent_prod.reg_spaj
		                       and eka.mst_policy.mspo_customer = c.mcl_id(+)
		                       and eka.mst_agent_prod.lsle_id = 4
		                       and ((eka.mst_policy.reg_spaj = #spaj#))
		                       and  (eka.mst_policy.mspo_ao = a.msag_id (+))
		                       and (a.mcl_id = b.mcl_id(+)) 
		                       and (eka.mst_worksite_flag.reg_spaj(+) = eka.mst_policy.reg_spaj)
		                       and t1.reg_spaj (+)=  EKA.MST_POLICY.REG_SPAJ
		                       and t2.no_spaj_insured (+) = eka.mst_policy.reg_spaj
		                ) polis        
		            union     
		            select distinct mofs_name mcl_first, reg_spaj, '' alamat_rumah, 2 type_data
		                from EKA.MST_OFAC_SCREENING   
		                where REG_SPAJ = #spaj#
		                     AND type_data = 2 
		                     and mofs_status = 2  
		                     and mofs_type = 'PEMEGANG' 
		                group by mofs_name, reg_spaj
		) b
		where rownum <![CDATA[<=]]>1
		                               
	</select>
	
<select id="elions.uw.selectTertanggungDetailSertifikat" parameterClass="string" resultClass="com.ekalife.elions.model.Tertanggung">

		select mofs_name mcl_first, '' alamat_rumah , type_data
		from eka.mst_ofac_screening 
		where reg_spaj = #spaj#
		and mofs_type = 'TERTANGGUNG'
		and mofs_status in (2,3,4)
		and type_data = 2
		
</select>
	
<select id="elions.uw.selectTertanggungDetail" parameterClass="string" resultClass="com.ekalife.elions.model.Tertanggung">
		<!-- select a.reg_spaj, mcl_first, alamat_rumah
		from eka.mst_insured a			    
		right join eka.mst_client_new b
		    on b.mcl_id = a.mste_insured
		right join EKA.MST_ADDRESS_NEW c
		    on c.mcl_id = b.mcl_id
		right join eka.mst_ofac_screening d
   			on d.reg_spaj = a.reg_spaj
		where a.reg_spaj = #spaj#
		AND mofs_type = 'TERTANGGUNG'
		and mofs_status in (2,3) -->
		
		select *
		from(        
		        select mcl_first, spaj_polis as reg_spaj, alamat_rumah , 1 type_data
		        from (
		            SELECT e.mcl_first, e.mcl_id, e.mkl_kerja, e.mkl_kerja kerjaa, e.lti_id,  b.mste_no_vacc,
		                       DECODE (e.mkl_kerja,
		                               'KARYAWAN SWASTA', e.mpn_job_desc,
		                               DECODE (j.ljb_note, '', '-', j.ljb_note)
		                              ) kerjab,
		                       e.mkl_tujuan, e.mkl_tujuan tujuana, e.mkl_penghasilan, e.mkl_pendanaan,e.mcl_agama,
		                       e.mkl_pendanaan danaa, e.mkl_pendanaan danaa2,
		                       e.mkl_smbr_penghasilan, e.mkl_smbr_penghasilan shasil, e.mkl_industri,
		                       e.mkl_dana_from, e.mkl_hasil_from, e.mkl_smbr_hasil_from,
		                       e.mkl_sumber_premi, DECODE (e.mkl_sumber_premi, 1, 'PERORANGAN', 'BADAN HUKUM/USAHA') mkl_sumber_premi2,
		                       e.lsre_id_premi,e.mcl_green_card,
		                       e.mkl_industri industria, e.mspe_no_identity, e.mspe_no_identity_expired, e.lside_id,
		                       e.mspe_place_birth, e.mspe_date_birth, e.mspe_sex, b.mste_age, e.mcl_company_name, e.mkl_kerja_ket,
		                       DECODE (e.mspe_sex, 1, 'PRIA', 'WANITA') mspe_sex2, e.mspe_sts_mrt,
		                       a.mspo_umur_beasiswa, h.lgj_note, h.lgj_id, e.mspe_lama_kerja,
		                       i.lside_name, g.lsne_note, g.lsne_id, e.mcl_gelar, e.mpn_job_desc,
		                       e.mspe_mother, f.alamat_rumah, f.kd_pos_rumah, f.kota_rumah,
		                       f.kota_rumah kota_rumaha, f.area_code_rumah, f.telpon_rumah,
		                       f.alamat_kantor, f.kd_pos_kantor, f.kota_kantor,
		                       f.kota_kantor kota_kantora, f.no_hp2, f.no_hp, f.email,
		                       f.area_code_kantor, f.telpon_kantor, a.reg_spaj spaj_polis, b.mste_insured_no,
		                       a.lspd_id, b.mste_standard, b.mste_age, k.lsag_name, k.lsag_id,
		                       l.lsed_name, l.lsed_id, j.ljb_id, m.lsre_relation, m.lsre_id,
		                       d.msag_id, d.lca_id, d.lwk_id, d.lsrg_id, a.lscb_id, a.mspo_policy_no,
		                       f.area_code_rumah2, f.telpon_rumah2, f.area_code_kantor2,
		                       f.telpon_kantor2, f.no_fax, f.area_code_fax, e.mspe_email,b.mste_kyc_date, t1.*,
		                       b.mste_flag_special_offer,b.mste_flag_cc,b.mste_flag_hadiah,b.mste_dth,b.mste_no_vacc,
		                       (select kyc_desc from eka.mst_kyc where reg_spaj=#spaj#  and  kyc_id=3 and  kyc_pp=1 and kyc_desc='GAJI')  bulan_gaji,
		                        (select kyc_desc from eka.mst_kyc where reg_spaj=#spaj# and  kyc_id=3 and  kyc_pp=1 and kyc_desc='TABUNGAN/DEPOSITO')  bulan_penghasilan,
		                        (select kyc_desc from eka.mst_kyc where reg_spaj=#spaj# and  kyc_id=3 and  kyc_pp=1 and kyc_desc='WARISAN')  bulan_orangtua,
		                        (select kyc_desc from eka.mst_kyc where reg_spaj=#spaj# and  kyc_id=3 and  kyc_pp=1 and kyc_desc='HIBAH')  bulan_usaha,
		                        (select kyc_desc from eka.mst_kyc where reg_spaj=#spaj# and  kyc_id=3 and  kyc_pp=1 and kyc_desc='LAINNYA')  bulan_lainnya,
		                        (select substr(kyc_desc,9) from eka.mst_kyc where reg_spaj=#spaj# and  kyc_id=3 and  kyc_pp=1 and kyc_desc LIKE 'LAINNYA%')  bulan_lainnya_note,
		                        (select kyc_desc from eka.mst_kyc where reg_spaj=#spaj# and  kyc_id=5 and  kyc_pp=1 and kyc_desc='INVESTASI')  tujuan_investasi,
		                        (select kyc_desc from eka.mst_kyc where reg_spaj=#spaj# and  kyc_id=5 and kyc_pp=1 and kyc_desc='PROTEKSI')  tujuan_proteksi,
		                        (select kyc_desc from eka.mst_kyc where reg_spaj=#spaj# and  kyc_id=5 and kyc_pp=1 and kyc_desc like'LAINNYA%')  tujuan_proteksi
		                  FROM eka.mst_policy a,
		                       eka.mst_insured b,
		                       (
		                        select a.reg_spaj, a.msag_id, b.mcl_id, b.lca_id, b.lwk_id, b.lsrg_id from eka.mst_agent_prod a, eka.mst_agent b 
		                        where a.lsle_id=4
		                        and a.msag_id = b.msag_id
		                       ) d,
		                       eka.mst_client_new e,
		                       eka.mst_address_new f,
		                       eka.lst_negara g,
		                       eka.lst_grp_job h,
		                       eka.lst_identity i,
		                       eka.lst_jabatan j,
		                       eka.lst_agama k,
		                       eka.lst_education l,
		                       eka.lst_relation m,
		                       (SELECT si.reg_spaj, si.nama "nama_si", si.lsre_id "hubungan_si",
		                               si.tanggal_lahir "tgllhr_si", anak_1.nama "nama_anak1",
		                               anak_1.lsre_id "hubungan_anak1",
		                               anak_1.tanggal_lahir "tgllhr_anak1", anak_2.nama "nama_anak2",
		                               anak_2.lsre_id "hubungan_anak2",
		                               anak_2.tanggal_lahir "tgllhr_anak2", anak_3.nama "nama_anak3",
		                               anak_3.lsre_id "hubungan_anak3",
		                               anak_3.tanggal_lahir "tgllhr_anak3"
		                          FROM (SELECT reg_spaj, nama, lsre_id, tanggal_lahir
		                                  FROM eka.mst_keluarga
		                                 WHERE lsre_id = 5 AND NO = 0 AND insured = 0) si,
		                               (SELECT reg_spaj, nama, lsre_id, tanggal_lahir
		                                  FROM eka.mst_keluarga
		                                 WHERE lsre_id = 4 AND NO = 1 AND insured = 0) anak_1,
		                               (SELECT reg_spaj, nama, lsre_id, tanggal_lahir
		                                  FROM eka.mst_keluarga
		                                 WHERE lsre_id = 4 AND NO = 2 AND insured = 0) anak_2,
		                               (SELECT reg_spaj, nama, lsre_id, tanggal_lahir
		                                  FROM eka.mst_keluarga
		                                 WHERE lsre_id = 4 AND NO = 3 AND insured = 0) anak_3
		                         WHERE si.reg_spaj = anak_1.reg_spaj (+)
		                           AND si.reg_spaj = anak_2.reg_spaj(+)
		                           AND si.reg_spaj = anak_3.reg_spaj(+)) t1
		                 WHERE a.reg_spaj = RPAD (REPLACE (#spaj#, '.'), 11, ' ')
		                   AND a.reg_spaj = b.reg_spaj
		                   AND a.reg_spaj = d.reg_spaj
		                   AND b.mste_insured = e.mcl_id
		                   AND e.mcl_id = f.mcl_id
		                   AND e.lsne_id = g.lsne_id(+)
		                   AND e.lgj_id = h.lgj_id(+)
		                   AND e.lside_id = i.lside_id(+)
		                   AND e.lsag_id = k.lsag_id(+)
		                   AND e.lsed_id = l.lsed_id(+)
		                   AND a.lsre_id = m.lsre_id(+)
		                   AND e.ljb_id = j.ljb_id(+)
		                   AND a.reg_spaj = t1.reg_spaj(+)
		            ) polis 
		            union     
		            select distinct mofs_name mcl_first, reg_spaj, '' alamat_rumah, 2 type_data
		                from EKA.MST_OFAC_SCREENING   
		                where REG_SPAJ = #spaj#
		                     AND type_data = 2 
		                     and mofs_status = 2  
		                     and mofs_type = 'TERTANGGUNG' 
		                group by mofs_name, reg_spaj
		) b
		where rownum <![CDATA[<=]]>1
	</select>
	<select id="elions.uw.selectComment" parameterClass="string" resultClass="com.ekalife.elions.model.Comment">
	
		SELECT *
		FROM EKA.OFAC_COMMENT
		WHERE COMM_SPAJ = #spaj#
		
	</select>
	<select id="elions.uw.selectSertifikat" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.OfacSertifikat">
	
		select mofs_id, mofs_status, mofs_type, mofs_status_message
		from eka.mst_ofac_screening
		where trim(reg_spaj) = trim(#spaj#)
		and type_data = 2
		
	</select>
	
	<select id="elions.uw.selectCheckMstTransUlink" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.MstTransUlink">
	
		SELECT REG_SPAJ, 
    		MU_KE, 
    		MTU_KE
  		FROM EKA.MST_TRANS_ULINK
 		WHERE REG_SPAJ = trim(#spaj#)
 			AND MTU_TGL_NAB IS NULL 
 			AND LSPD_ID = 42
		
	</select>
	
	<select id="elions.uw.selectBenefeciarySertifikat" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Benefeciary">
		
		select mofs_name msaw_first, '' alamat_rumah
		from eka.mst_ofac_screening 
		where reg_spaj = #spaj#
		and mofs_type = 'BENEFICIARY'
		and mofs_status in (2,3,4)
		and type_data = 2
		
	</select>
	
	<select id="elions.uw.selectBenefeciary" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Benefeciary">
		
		<!-- select TRIM(UPPER((a.msaw_first ||  ' ' || a.msaw_middle || ' ' || a.msaw_last))) nama, TRIM(UPPER(msaw_first)) msaw_first
		from EKA.MST_BENEFECIARY a
		right join eka.mst_ofac_screening b
		   on b.reg_spaj = a.reg_spaj
		where a.reg_spaj = #spaj#
		AND mofs_type = 'BENEFICIARY'
		and TRIM(UPPER(b.MOFS_NAME)) = TRIM(UPPER((a.msaw_first || ' ' || a.msaw_middle || ' ' || a.msaw_last)))
		and mofs_status in (2,3) -->
		
		select *
		from (
		        select MSAW_FIRST,  reg_spaj
		        from ( SELECT EKA.MST_BENEFECIARY.REG_SPAJ, EKA.MST_BENEFECIARY.MSTE_INSURED_NO,EKA.MST_BENEFECIARY.MSAW_NUMBER, EKA.MST_BENEFECIARY.MSAW_FIRST ,                
		                    EKA.MST_BENEFECIARY.MSAW_MIDDLE, EKA.MST_BENEFECIARY.MSAW_LAST, EKA.MST_BENEFECIARY.MSAW_BIRTH,             
		                    to_char(EKA.MST_BENEFECIARY.MSAW_BIRTH,'dd/MM/yyyy') SMSAW_BIRTH,EKA.MST_BENEFECIARY.LSRE_ID LSRE_ID,                
		                    EKA.MST_BENEFECIARY.MSAW_PERSEN,EKA.MST_BENEFECIARY.MSAW_SEX, EKA.MST_BENEFECIARY.MSAW_KET, 
		                    decode(EKA.MST_BENEFECIARY.MSAW_SEX,1,'LAKI-LAKI' ,0,'WANITA')MSAW_SEX_DETAIL,EKA.LST_RELATION.LSRE_RELATION          
		                FROM EKA.MST_BENEFECIARY,                
		                EKA.LST_RELATION         
		                WHERE  (EKA.MST_BENEFECIARY.LSRE_ID = EKA.LST_RELATION.LSRE_ID (+)) 
		                and( ( EKA.MST_BENEFECIARY.REG_SPAJ = #spaj#) ) 
		                order by  EKA.MST_BENEFECIARY.MSAW_NUMBER 
		        )polis
		        union     
		            select distinct mofs_name MSAW_FIRST, reg_spaj
		                from EKA.MST_OFAC_SCREENING   
		                where REG_SPAJ = #spaj#
		                     AND type_data = 2 
		                     and mofs_status = 2  
		                     and mofs_type = 'BENEFICIARY' 
		                group by mofs_name, reg_spaj
		    ) beneficiary   
	</select>
	
	<select id="elions.uw.selectPesertaSertifikat" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.PesertaPlus">
		
		select mofs_name nama, '' alamat_rumah
		from eka.mst_ofac_screening 
		where reg_spaj = #spaj#
		and mofs_type = 'PESERTA'
		and mofs_status in (2,3,4)
		and type_data = 2
	
	</select>
	
	<select id="elions.uw.selectPeserta" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.PesertaPlus">
		<!-- select TRIM(UPPER(nama)) nama, a.reg_spaj 
		from EKA.mst_peserta a
		right join eka.mst_ofac_screening b
		   on b.reg_spaj = a.reg_spaj
		where a.reg_spaj = #spaj#
		AND mofs_type = 'PENERIMAMANFAAT'
		and TRIM(UPPER(MOFS_NAME)) = TRIM(UPPER(nama))
		and mofs_status in (2,3) -->
		
		select reg_spaj, nama
		from eka.mst_peserta
		where reg_spaj = #spaj#
		union 
		select distinct reg_spaj, mofs_name nama 
                from EKA.MST_OFAC_SCREENING   
                where REG_SPAJ = #spaj#
                     AND type_data = 2 
                     and mofs_status = 2  
                     and mofs_type = 'PESERTA' 
                group by mofs_name, reg_spaj
	</select>
	<select id="elions.uw.selectViewerPasList" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Pas">
		select
			msp_id
			, msp_fire_id
			, msp_kode_sts_sms
			, msp_desc_sts_sms
			, msp_mobile
			, msp_mobile2
			, msp_text
			, msp_message_date
			, msp_receive_date
			, msp_full_name
			, msp_identity_no
			, msp_identity_no_tt
			, msp_date_of_birth
			, msp_address_1
			, msp_address_2
			, msp_city
			, msp_postal_code
			, msp_rek_nama
			, msp_rek_cabang
			, msp_rek_kota
			, msp_age
			, dist
			, jenis_pas
			, pin
			, no_kartu
			, lspd_id
			, lssp_id
			, lscb_id
			, lsbp_id
			, msp_pas_accept_date
			, msp_pas_beg_date
			, msp_pas_end_date
			, msp_fire_accept_date
			, msp_fire_beg_date
			, msp_fire_end_date
			, msp_fire_policy_no
			, msp_fire_code_name
			, msp_fire_name
			, msp_fire_id
			, msp_fire_identity
			, msp_fire_occupation
			, msp_fire_type_business
			, msp_fire_source_fund
			, msp_fire_address_1
			, msp_fire_addr_code
			, msp_fire_phone_number
			, msp_fire_email
			, msp_fire_okupasi
			, msp_fire_postal_code
			, msp_fire_mobile
			, msp_fire_insured_addr_code
			, msp_fire_insured_addr
			, msp_fire_insured_postal_code
			, msp_fire_insured_addr_no
			, msp_fire_insured_addr_envir
			, msp_fire_date_of_birth 
			, msp_fire_fail_desc
			, msp_no_rekening
			, msp_no_rekening_autodebet
			, msp_tgl_debet
			, msp_tgl_valid
			, lsbp_id_autodebet
			, msp_rek_nama_autodebet
			, msag_id
			, msag_id_pp
			, kode_ao
			, pribadi
			, lus_id
			, mspo_policy_no
			, reg_spaj
			, msp_fire_insured_city
			, msp_fire_insured_phone_number
			, msp_pas_phone_number
			, msp_fire_okupasi_else
			, msp_fire_ins_addr_envir_else
			, msp_flag_aksep
			, msp_fire_export_flag
			, msp_flag_cc
			, msp_pas_tmp_lhr_tt
			, msp_pas_dob_pp
			, lsre_id
			, produk
			, msp_pas_nama_pp
			, msp_pas_email
			, msp_pas_tmp_lhr_pp
			, msp_sex_pp
			, msp_ket_status
			, msp_status
			, msp_tgl_status
		from eka.mst_pas_sms
		where 1=1
		and (MSP_FIRE_JENIS is null or MSP_FIRE_JENIS=0)
		<isEqual property="jenis" compareValue="inputfireviewer">
			and msp_fire_name is null
			and msag_id_pp is null
		</isEqual>
		<isNotNull property="msp_id" >
			and msp_id = #msp_id#
		</isNotNull>
		<isEqual property="tipe" compareValue="1">
			and (UPPER(trim(msp_full_name)) $kata$ or UPPER(trim(msp_fire_name)) $kata$)
		</isEqual>
		<isEqual property="tipe" compareValue="2">
			and (UPPER(trim(msp_identity_no)) $kata$ or UPPER(trim(msp_fire_identity)) $kata$)
		</isEqual>
		<isEqual property="tipe" compareValue="7">
			and (UPPER(trim(msp_mobile)) $kata$ or UPPER(trim(msp_fire_mobile)) $kata$)
		</isEqual>
		<isEqual property="tipe" compareValue="3">
			and UPPER(trim(msp_fire_id)) $kata$
		</isEqual>
		<isEqual property="tipe" compareValue="4">
			and UPPER(trim(no_kartu)) $kata$
		</isEqual>
		<isNotEmpty property="tgl_lahir" prepend=" and "> msp_date_of_birth = to_date(#tgl_lahir#, 'dd/mm/yyyy')</isNotEmpty>
		order by msp_receive_date asc
	</select>
	
	<select id="elions.uw.selectReportFire" resultMap="elions.uw.selectReportPas.result" resultClass="java.util.HashMap">
		select
			msp_id
			, msp_fire_id
			, msp_kode_sts_sms
			, msp_desc_sts_sms
			, msp_mobile
			, msp_mobile2
			, msp_text
			, msp_message_date
			, msp_receive_date
			, msp_full_name
			, msp_identity_no
			, msp_date_of_birth
			, msp_address_1
			, msp_address_2
			, msp_city
			, msp_postal_code
			, msp_rek_nama
			, msp_rek_cabang
			, msp_rek_kota
			, msp_age
			, dist
			, pin
			, no_kartu
			, lspd_id
			, lssp_id
			, lscb_id
			, lsbp_id
			, msp_pas_accept_date
			, msp_pas_beg_date
			, msp_pas_end_date
			, msp_fire_accept_date
			, msp_fire_beg_date
			, msp_fire_end_date
			, msp_fire_policy_no
			, msp_fire_code_name
			, msp_fire_name
			, msp_fire_identity
			, msp_fire_id
			, msp_fire_occupation
			, msp_fire_type_business
			, msp_fire_source_fund
			, msp_fire_address_1
			, msp_fire_addr_code
			, msp_fire_phone_number
			, msp_fire_email
			, msp_fire_okupasi
			, msp_fire_postal_code
			, msp_fire_mobile
			, msp_fire_insured_addr_code
			, msp_fire_insured_addr
			, msp_fire_insured_postal_code
			, msp_fire_insured_addr_no
			, msp_fire_insured_addr_envir
			, msp_fire_date_of_birth 
			, msp_no_rekening
			, msp_no_rekening_autodebet
			, msp_tgl_debet
			, msp_tgl_valid
			, lsbp_id_autodebet
			, msp_rek_nama_autodebet
			, msag_id
			, lus_id
			, mspo_policy_no
			, reg_spaj
			, msp_fire_insured_city
			, msp_fire_insured_phone_number
			, msp_pas_phone_number
			, msp_fire_okupasi_else
			, msp_fire_ins_addr_envir_else
			, msp_flag_aksep
			, msp_fire_export_flag
			, msp_flag_cc
			, msp_pas_tmp_lhr_tt
			, msp_pas_dob_pp
			, lsre_id
			, produk
			, msp_pas_nama_pp
			, msp_pas_email
			, msp_pas_tmp_lhr_pp
		from eka.mst_pas_sms
		WHERE msp_pas_accept_date is not null
		and (MSP_FIRE_JENIS is null or MSP_FIRE_JENIS=0)
		and msp_fire_export_flag in (0, 2)
		and msp_fire_id is not null
		order by msp_receive_date asc
	</select>
	
	<select id="elions.uw.selectReportPenerimaanDanamasPrimaList" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.DanamasPrima">
		SELECT   a.reg_spaj,
         a.mspo_policy_no,
         eka.utils.pemegang (a.reg_spaj) pemegang,
         eka.utils.kurs_simbol (d.lku_id) kurs,
         d.mspa_payment uang_masuk,
         d.mspa_date_book tgl_rk,
         d.mspa_no_voucher no_voucher,
         d.mspa_no_pre no_pre,
         b.mste_tgl_aksep tgl_aksep,
         c.mspr_premium premi,
         e.no_jm
		  FROM   eka.mst_policy a,
		         eka.mst_insured b,
		         eka.mst_product_insured c,
		         eka.mst_payment d,
		         eka.mst_ptc_tm e
		 WHERE       a.lstb_id = 1
		         AND a.lspd_id <![CDATA[<>]]> 95
		         AND a.reg_spaj = b.reg_spaj
		         AND b.mste_insured_no = c.mste_insured_no
		         AND b.reg_spaj = c.reg_spaj
		         AND ((c.lsbs_id = 142 AND c.lsdbs_number = 9) OR (c.lsbs_id = 158 AND c.lsdbs_number = 14))
		         AND a.reg_spaj = d.reg_spaj
		         AND d.mspa_no_pre = e.no_pre(+)
		         AND d.mspa_date_book between add_months(to_date('01/' || to_char(sysdate, 'mm/yyyy'), 'dd/mm/yy'), -1) and to_date('01/' || to_char(sysdate, 'mm/yyyy'), 'dd/mm/yy')-1
		ORDER BY TGL_RK  
	</select>
	
	<select id="elions.uw.selectReportKlaimDanamasPrimaList" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.DanamasPrima">
		SELECT   a.reg_spaj,
         a.mspo_policy_no,
         eka.utils.pemegang (a.reg_spaj) pemegang,
         eka.utils.kurs_simbol (a.lku_id) kurs,
         d.mpr_deposit pokok, d.mpr_interest bunga, e.total, e.tgl_byr tgl_bayar, e.no_reg
		  FROM   eka.mst_policy a,
		         eka.mst_insured b,
		         eka.mst_product_insured c,
		         eka.mst_powersave_ro d, 
		           (
		            SELECT   a.reg_spaj, a.mspin_tgl_bayar tgl_byr, a.mspin_jlh_nt total, a.mspin_no_pinjaman no_reg
		                      FROM   eka.mst_pinjaman a
		                     WHERE   a.flag_ps = 1 AND (a.mspin_tgl_keluar BETWEEN add_months(to_date('01/' || to_char(sysdate, 'mm/yyyy'), 'dd/mm/yy'), -1) and to_date('01/' || to_char(sysdate, 'mm/yyyy'), 'dd/mm/yy')-1) 
		                    UNION
		                    SELECT   a.reg_spaj, a.mssur_tgl_klaim tgl_byr, a.mssur_jml_nt total, a.mssur_no_surr no_reg
		                      FROM   eka.mst_surrender a
		                     WHERE   a.flag_ps = 1 AND (a.mssur_tgl_klaim BETWEEN add_months(to_date('01/' || to_char(sysdate, 'mm/yyyy'), 'dd/mm/yy'), -1) and to_date('01/' || to_char(sysdate, 'mm/yyyy'), 'dd/mm/yy')-1 ) 
		                    UNION
		                    SELECT   a.reg_spaj, a.tgl_klaim tgl_byr, a.nilai_klaim total, a.no_klaim no_reg
		                      FROM   eka.mst_maturity a
		                     WHERE   a.flag_ps = 1 AND (a.tgl_klaim BETWEEN add_months(to_date('01/' || to_char(sysdate, 'mm/yyyy'), 'dd/mm/yy'), -1) and to_date('01/' || to_char(sysdate, 'mm/yyyy'), 'dd/mm/yy')-1 )
		            ) e
		 WHERE       a.lstb_id = 1
		         AND a.lspd_id <![CDATA[<>]]> 95
		         AND a.reg_spaj = b.reg_spaj
		         AND b.mste_insured_no = c.mste_insured_no
		         AND b.reg_spaj = c.reg_spaj
		         AND ((c.lsbs_id = 142 AND c.lsdbs_number = 9) OR (c.lsbs_id = 158 AND c.lsdbs_number = 14))
		         AND a.reg_spaj = d.reg_spaj
		         AND d.mps_kode in (2,3,5,7)
		         AND d.mps_deposit_date = (select max(mps_deposit_date) from eka.mst_powersave_ro where mps_kode in (2,3,5,7) and reg_spaj = d.reg_spaj)
		         AND d.reg_spaj = e.reg_spaj
		ORDER BY tgl_byr 
	</select>
	
	<select id="elions.uw.selectReportManfDanamasPrimaList" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.DanamasPrima">
        SELECT   a.reg_spaj,
         a.mspo_policy_no,
         eka.utils.pemegang (a.reg_spaj) pemegang,
         eka.utils.kurs_simbol (a.lku_id) kurs,
         e.bunga, e.tgl_byr tgl_bayar, e.no_reg
          FROM   eka.mst_policy a,
                 eka.mst_insured b,
                 eka.mst_product_insured c,
                 eka.mst_powersave_ro d, 
                   (
                    SELECT reg_spaj, mpb_paid_date tgl_byr, (nvl(mpb_jum_bayar, 0) + nvl(mpb_tambah, 0) - nvl(mpb_kurang, 0)) bunga, mpb_bayar_id no_reg
                    FROM EKA.MST_PROSAVE_BAYAR WHERE (mpb_paid_date BETWEEN add_months(to_date('01/' || to_char(sysdate, 'mm/yyyy'), 'dd/mm/yy'), -1) and to_date('01/' || to_char(sysdate, 'mm/yyyy'), 'dd/mm/yy')-1)
                    ) e
         WHERE       a.lstb_id = 1
                 AND a.lspd_id <![CDATA[<>]]> 95
                 AND a.reg_spaj = b.reg_spaj
                 AND b.mste_insured_no = c.mste_insured_no
                 AND b.reg_spaj = c.reg_spaj
                 AND ((c.lsbs_id = 142 AND c.lsdbs_number = 9) OR (c.lsbs_id = 158 AND c.lsdbs_number = 14))
                 AND a.reg_spaj = d.reg_spaj
                 AND d.mps_kode in (2,3,5,7)
                 AND d.mps_deposit_date = (select max(mps_deposit_date) from eka.mst_powersave_ro where mps_kode in (2,3,5,7) and reg_spaj = d.reg_spaj)
                 AND d.reg_spaj = e.reg_spaj
        ORDER BY tgl_byr	
	</select>
	
	<select id="elions.uw.selectReportEmailStatusPabsm" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct d.nama_cabang,a.reg_spaj,b.no_sertifikat,a.msp_full_name,a.msp_pas_email,c.me_status,c.me_sent_date from eka.mst_pas_sms a, eka.mst_cplan@eb b, 
        (select * from eka.mst_email 
        where (upper(me_subject) like '%' || upper('Softcopy Polis Asuransi atas nama') || '%')
        and (upper(dbms_lob.substr(me_message)) like '%' || upper('personal accident') || '%')
        and (upper(dbms_lob.substr(me_message)) like '%' || upper('bsim') || '%')
        ) c, eka.lst_cabang_bii d, eka.lst_user e
        where a.reg_spaj=b.reg_spaj
        and a.lus_id = e.lus_id
        and e.cab_bank = d.lcb_no(+)
        and upper(a.msp_pas_email)=upper(replace(c.me_to(+),';',''))
        and a.jenis_pas = 'PABSM'
        order by c.me_sent_date
	</select>
	
	<select id="elions.uw.selectReportPasList" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Pas">
		SELECT a.msp_mobile,
         a.pin,
         a.msp_full_name,
         a.msp_date_of_birth,
         a.msp_identity_no,
         (select lsdbs_name from eka.lst_det_bisnis where lsbs_id = 187 and lsdbs_number = B.PRODUK and lsdbs_aktif = 1) nama_produk,
         B.premi, (select n.lus_full_name from eka.lst_user n where n.lus_id = e.lus_id) branch_admin_name,
         A.no_kartu, EKA.UTILS.AGEN(D.MSAG_ID) nama_agent, D.MSAG_ID,e.LUS_ID lus_id,
         A.msp_message_date, EKA.UTILS.CABANG(e.LCA_ID) cabang
          FROM   eka.mst_pas_sms a, EKA.MST_BUKU_PAS b, eka.mst_spaj_det c, eka.mst_agent_branch d, eka.mst_form e
         WHERE  b.pin = A.PIN
         and a.msag_id_pp is null
         AND C.NO_BLANKO = A.NO_KARTU
         AND D.MSAB_ID = C.MSAB_ID
         and e.msf_id=c.msf_id
         AND a.msp_kode_sts_sms = '00'
         AND a.lspd_id = 1
         AND a.lssp_id = 10
         and (a.MSP_FIRE_JENIS is null or a.MSP_FIRE_JENIS=0)
          AND TRUNC (a.msp_message_date) BETWEEN trunc(to_date('1 august 2010', 'dd/mm/yyyy'))
                                            AND  trunc(sysdate)
          group by e.lus_id, e.lca_id, 
           a.msp_mobile,
         a.msp_full_name,
         a.msp_date_of_birth,
         a.msp_identity_no,
         b.produk,
         b.premi,
         a.no_kartu, a.pin, d.msag_id,
         a.msp_message_date
         order by e.lus_id
	</select>
	
	<select id="elions.uw.selectReportBatalPasList" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Pas">
		SELECT a.msp_id, a.msp_mobile,
         a.pin,
         a.msp_full_name,
         a.msp_date_of_birth,
         a.msp_identity_no,
         (select lsdbs_name from eka.lst_det_bisnis where lsbs_id = 187 and lsdbs_number = B.PRODUK and lsdbs_aktif = 1) nama_produk,
         B.premi, (select n.lus_full_name from eka.lst_user n where n.lus_id = e.lus_id) branch_admin_name,
         A.no_kartu, EKA.UTILS.AGEN(D.MSAG_ID) nama_agent, D.MSAG_ID,e.LUS_ID lus_id,
         A.msp_message_date, EKA.UTILS.CABANG(e.LCA_ID) cabang
          FROM   eka.mst_pas_sms a, EKA.MST_BUKU_PAS b, eka.mst_spaj_det c, eka.mst_agent_branch d, eka.mst_form e
         WHERE  b.pin = A.PIN
         and a.msag_id_pp is null
         AND C.NO_BLANKO = A.NO_KARTU
         AND D.MSAB_ID = C.MSAB_ID
         and e.msf_id=c.msf_id
         AND a.msp_kode_sts_sms = '00'
         AND a.lspd_id = 1
         AND a.lssp_id = 10
         and (a.MSP_FIRE_JENIS is null or a.MSP_FIRE_JENIS=0)
         and a.msp_fire_id is null
         and add_months(a.msp_pas_beg_date, 3) <![CDATA[<]]> sysdate+1
          AND TRUNC (a.msp_message_date) BETWEEN trunc(to_date('1 august 2010', 'dd/mm/yyyy'))
                                            AND  trunc(sysdate)
          group by e.lus_id, e.lca_id, 
           a.msp_mobile,
         a.msp_full_name,
         a.msp_date_of_birth,
         a.msp_identity_no,
         b.produk,
         b.premi,
         a.no_kartu, a.pin, d.msag_id,
         a.msp_message_date,
         a.msp_id
         order by e.lus_id
	</select>
	
	<select id="elions.uw.selectFurtherRequirementPas" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
			lwk_nama,
			msp_fire_id,
			nama_cabang,
			nama_cabang lca_nama,
			nama_penutup,
			nama_reff,
			lus_id,
			nama_tt,
			nama_pp,
			user_kurang_data,
			reg_spaj,
			mspo_policy_no,
			lsdbs_name,
			lscb_pay_mode,
			tahun2008,
            bulan1, bulan2, bulan3, bulan4, bulan5, bulan6,
            bulan7, bulan8, bulan9, bulan10, bulan11, bulan12,
			(
			case
			when (lscb_id = '03') then premi*10
			when(lscb_id = '01') then premi*2.7
			when(lscb_id = '02') then premi*5.25
			else premi
			end) mspr_premium,
			mste_beg_date,
			mste_tgl_terima_spaj,
			mste_tgl_aksep, 
			lssp_status,
			kurang_data,
			user_kurang_data
			from
			(
			select (select v.lus_login_name from eka.lst_user v where v.lus_id = d.mssd_lus_id) lwk_nama, lscb_id, d.mssd_lus_id lus_id,
			EKA.UTILS.CABANG((select q.lca_id from eka.lst_user q where q.lus_id = d.mssd_lus_id)) nama_cabang,
			c.mcl_first nama_penutup, 
			(case when to_char(a.msp_pas_beg_date,'yyyy')=#yearbefore# then 1 else 0 end) as tahun2008,
                 (case when to_char(a.msp_pas_beg_date,'mmyyyy')=#month1# then 1 else 0 end) as bulan1,
                 (case when to_char(a.msp_pas_beg_date,'mmyyyy')=#month2# then 1 else 0 end) as bulan2,
                 (case when to_char(a.msp_pas_beg_date,'mmyyyy')=#month3# then 1 else 0 end) as bulan3,
                 (case when to_char(a.msp_pas_beg_date,'mmyyyy')=#month4# then 1 else 0 end) as bulan4,
                 (case when to_char(a.msp_pas_beg_date,'mmyyyy')=#month5# then 1 else 0 end) as bulan5,
                 (case when to_char(a.msp_pas_beg_date,'mmyyyy')=#month6# then 1 else 0 end) as bulan6,
                 (case when to_char(a.msp_pas_beg_date,'mmyyyy')=#month7# then 1 else 0 end) as bulan7,
                 (case when to_char(a.msp_pas_beg_date,'mmyyyy')=#month8# then 1 else 0 end) as bulan8,
                 (case when to_char(a.msp_pas_beg_date,'mmyyyy')=#month9# then 1 else 0 end) as bulan9,
                 (case when to_char(a.msp_pas_beg_date,'mmyyyy')=#month10# then 1 else 0 end) as bulan10,
                 (case when to_char(a.msp_pas_beg_date,'mmyyyy')=#month11# then 1 else 0 end) as bulan11,
                 (case when to_char(a.msp_pas_beg_date,'mmyyyy')=#month12# then 1 else 0 end) as bulan12,
			'-' nama_reff, msp_pas_nama_pp nama_pp, msp_full_name nama_tt, '-' reg_spaj, '-' mspo_policy_no, a.msp_fire_id,
			(select lsdbs_name from eka.lst_det_bisnis where lsbs_id = 187 and lsdbs_number = a.produk) lsdbs_name, 
			(select lscb_pay_mode from eka.lst_pay_mode where lscb_id = a.lscb_id) lscb_pay_mode,
			(select premi from eka.mst_kartu_pas where no_kartu = a.no_kartu) premi, 
			msp_pas_beg_date mste_beg_date, '' mste_tgl_terima_spaj, msp_pas_accept_date mste_tgl_aksep, 
			(select lspd_position from eka.lst_document_position where lspd_id = a.lspd_id) lssp_status, 
			msp_ket_status kurang_data, 
			(select lus_login_name from eka.lst_user where lus_id = a.lus_id_uw_pas) user_kurang_data from eka.mst_pas_sms a, eka.mst_agent b, eka.mst_client_new c, eka.mst_spaj_det d
			where a.msag_id = b.msag_id and b.mcl_id = c.mcl_id and d.no_blanko = a.no_kartu and a.msag_id_pp is null
			and a.msp_status = 1 and a.reg_spaj is null and (a.MSP_FIRE_JENIS is null or a.MSP_FIRE_JENIS=0)
			)order by lus_id
	</select>
	
	<select id="elions.uw.selectPasFromMspId" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Pas">
		SELECT a.msp_mobile,
			a.msp_mobile2,
		 a.pin,
         a.msp_full_name,
         a.msp_date_of_birth,
         a.msp_identity_no,
         (select lsdbs_name from eka.lst_det_bisnis where lsbs_id = 187 and lsdbs_number = B.PRODUK and lsdbs_aktif = 1) nama_produk,
         B.premi,
         A.no_kartu, EKA.UTILS.AGEN(D.MSAG_ID) nama_agent, D.MSAG_ID,C.MSSD_LUS_ID lus_id,
         A.msp_message_date, EKA.UTILS.CABANG(C.LCA_ID) cabang
  		FROM   eka.mst_pas_sms a, EKA.MST_BUKU_PAS b, eka.mst_spaj_det c, eka.mst_agent_branch d
 		WHERE  
 		 a.msp_id = #msp_id#
 		 AND b.pin = A.PIN
         AND C.NO_BLANKO = A.NO_KARTU
         AND D.MSAB_ID = C.MSAB_ID
         AND a.msp_kode_sts_sms = '00'
         and (a.MSP_FIRE_JENIS is null or a.MSP_FIRE_JENIS=0)
          group by c.mssd_lus_id, c.lca_id, 
  		 a.msp_mobile,
  		 a.msp_mobile2,
         a.msp_full_name,
         a.msp_date_of_birth,
         a.msp_identity_no,
         b.produk,
         b.premi,
         a.no_kartu, a.pin, d.msag_id,
         a.msp_message_date
         order by c.mssd_lus_id
	</select>
	
	<select id="elions.uw.selectBpFromMspId" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Pas">
		SELECT a.msp_mobile,
		a.msp_mobile2,
         a.msp_full_name,
         a.msp_date_of_birth,
         a.msp_identity_no,
         'BUSINESS PARTNER' nama_produk,
         a.LUS_ID,
         A.msp_message_date, 
         (
            select distinct EKA.UTILS.CABANG(c.LCA_ID) from eka.lst_user c where
            c.lus_active = 1 and c.lus_id = a.lus_id
         ) cabang
          FROM   eka.mst_pas_sms a
         WHERE  
          a.msp_id = #msp_id#
         AND a.msp_kode_sts_sms = '00'
         and (a.MSP_FIRE_JENIS is null or a.MSP_FIRE_JENIS=0)
          group by a.lus_id,
           a.msp_mobile,
           a.msp_mobile2,
         a.msp_full_name,
         a.msp_date_of_birth,
         a.msp_identity_no,
         a.msp_message_date
         order by a.msp_full_name
	</select>
	
	<select id="elions.uw.selectReportPesertaPasList" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Pas">
		select 
        a.no_kartu,
        (select lsdbs_name from eka.lst_det_bisnis where lsbs_id = 187 and lsdbs_number = b.produk and lsdbs_aktif = 1) nama_produk,
        a.msp_fire_policy_no,
        a.msp_full_name,
         a.msp_date_of_birth,
         a.msp_pas_nama_pp,
         a.msp_pas_dob_pp,
         a.msp_identity_no,
         a.msp_address_1,
         a.msp_pas_phone_number,
         a.msp_pas_beg_date,
         a.msp_message_date,
         a.lspd_id,
         a.lssp_id,
         a.msp_fire_export_flag,
         a.msp_kode_sts_sms,
         (select x.lssp_status from eka.LST_POLICY_STATUS x, eka.MST_POLICY y where y.reg_spaj=a.reg_spaj and x.lssp_id = y.lssp_id) status_polis
          from   eka.mst_pas_sms a, eka.mst_kartu_pas b
         where  b.no_kartu = a.no_kartu
         and (a.jenis_pas in('INDIVIDU','MALLINSURANCE') or a.dist = '01')
         and (a.MSP_FIRE_JENIS is null or a.MSP_FIRE_JENIS=0)
          and trunc (a.msp_pas_create_date) between trunc(to_date('1 august 2010', 'dd/mm/yyyy'))
                                            and  trunc(sysdate)
         order by a.msp_pas_create_date
	</select>
	
	<select id="elions.uw.selectReportAksepPasList" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Pas">
		SELECT a.msp_mobile,
		a.msp_mobile2,
         a.pin,
         a.msp_pas_nama_pp,
         a.msp_pas_dob_pp,
         a.msp_full_name,
         a.msp_date_of_birth,
         (select lsdbs_name from eka.lst_det_bisnis where lsbs_id = 187 and lsdbs_number = B.PRODUK and lsdbs_aktif = 1) nama_produk,
         B.premi,
         A.msp_message_date,
         A.msp_pas_accept_date,
         A.no_kartu, EKA.UTILS.AGEN(D.MSAG_ID) nama_agent, D.MSAG_ID,e.LUS_ID lus_id, EKA.UTILS.CABANG(e.LCA_ID) cabang
          FROM   eka.mst_pas_sms a, EKA.MST_BUKU_PAS b, eka.mst_spaj_det c, eka.mst_agent_branch d, eka.mst_form e
         WHERE  b.pin = A.PIN
         and a.msag_id_pp is null
         AND C.NO_BLANKO = A.NO_KARTU
         AND D.MSAB_ID = C.MSAB_ID
         and e.msf_id=c.msf_id
         AND a.msp_kode_sts_sms = '00'
         AND a.lspd_id = 99
         and a.lssa_id = 5
         AND a.msp_flag_aksep = 1
         and (a.MSP_FIRE_JENIS is null or a.MSP_FIRE_JENIS=0)
          AND TRUNC (a.msp_message_date) BETWEEN trunc(sysdate-1)
                                            AND  trunc(sysdate)
         group by e.lus_id, e.lca_id,  
          a.msp_mobile,
          a.msp_mobile2,
          a.msp_pas_nama_pp,
          a.msp_pas_dob_pp,
          a.msp_full_name,
          a.msp_date_of_birth,
          a.msp_identity_no,
          b.produk,
          b.premi,
          a.no_kartu, a.pin, d.msag_id,
          a.msp_pas_accept_date,
          a.msp_message_date
          order by e.lus_id
	</select>
	
	<select id="elions.uw.selectReportPasEmailList" parameterClass="int" resultClass="string">
		select DISTINCT lus_email from eka.lst_user where lus_id = #value#
	</select>
	
	<select id="elions.uw.selectPasEmailAdminCabang" parameterClass="string" resultClass="string">
		select b.LUS_EMAIL from eka.mst_pas_sms a, eka.lst_user b, eka.mst_spaj_det c
			where c.NO_BLANKO = a.NO_KARTU and c.MSSD_LUS_ID = b.LUS_ID
			and (a.MSP_FIRE_JENIS is null or a.MSP_FIRE_JENIS=0)
			and a.NO_KARTU = #value#
	</select>
	
	<select id="elions.uw.selectLusFullName" parameterClass="java.math.BigDecimal" resultClass="java.lang.String">
  		select lus_full_name from eka.lst_user where lus_id = #lusId#
    </select>
	
	<select id="elions.uw.selectReportFireList" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Pas">
		select
			msp_id
			, msp_fire_id
			, msp_kode_sts_sms
			, msp_desc_sts_sms
			, msp_mobile
			, msp_mobile2
			, msp_text
			, msp_message_date
			, msp_receive_date
			, msp_full_name
			, msp_identity_no
			, msp_date_of_birth
			, msp_address_1
			, msp_address_2
			, msp_city
			, msp_postal_code
			, msp_rek_nama
			, msp_rek_cabang
			, msp_rek_kota
			, msp_age
			, dist
			, pin
			, no_kartu
			, lspd_id
			, lssp_id
			, lscb_id
			, lsbp_id
			, msp_pas_accept_date
			, msp_pas_beg_date
			, msp_pas_end_date
			, msp_fire_accept_date
			, msp_fire_beg_date
			, msp_fire_end_date
			, msp_fire_policy_no
			, msp_fire_code_name
			, msp_fire_name
			, msp_fire_identity
			, msp_fire_id
			, msp_fire_occupation
			, msp_fire_type_business
			, msp_fire_source_fund
			, msp_fire_address_1
			, msp_fire_addr_code
			, msp_fire_phone_number
			, msp_fire_email
			, msp_fire_okupasi
			, msp_fire_postal_code
			, msp_fire_mobile
			, msp_fire_insured_addr_code
			, msp_fire_insured_addr
			, msp_fire_insured_postal_code
			, msp_fire_insured_addr_no
			, msp_fire_insured_addr_envir
			, msp_fire_date_of_birth 
			, msp_no_rekening
			, msp_no_rekening_autodebet
			, msp_tgl_debet
			, msp_tgl_valid
			, lsbp_id_autodebet
			, msp_rek_nama_autodebet
			, msag_id
			, lus_id
			, mspo_policy_no
			, reg_spaj
			, msp_fire_insured_city
			, msp_fire_insured_phone_number
			, msp_pas_phone_number
			, msp_fire_okupasi_else
			, msp_fire_ins_addr_envir_else
			, msp_flag_aksep
			, msp_fire_export_flag
			, msp_flag_cc
			, msp_pas_tmp_lhr_tt
			, msp_pas_dob_pp
			, lsre_id
			, produk
			, msp_pas_nama_pp
			, msp_pas_email
			, msp_pas_tmp_lhr_pp
			, msp_sex_pp
		from eka.mst_pas_sms
		WHERE msp_fire_accept_date is not null
		and msag_id_pp is null
		and (MSP_FIRE_JENIS is null or MSP_FIRE_JENIS=0)
		and msp_fire_export_flag in (0, 2)
		and msp_fire_id is not null
		order by msp_receive_date asc
	</select>
	
	<select id="elions.uw.selectReportBlackList" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.BlackList">
		select  eka.lst_black_list.lbl_id ,   
                     eka.lst_black_list.lbl_nama ,   
                     eka.lst_black_list.lbl_tempat ,   
                     eka.lst_black_list.lbl_tgl_lahir ,   
                     eka.lst_black_list.lbl_alamat ,   
                     (select telpon_rumah from eka.mst_address_new where mcl_id = eka.lst_black_list.mcl_id) telepon,
                     eka.lst_black_list.lbl_asuransi ,   
                     eka.lst_black_list.lbl_alasan ,   
                     eka.lst_black_list.lbl_tgl_input ,   
                     eka.lst_black_list.lus_id,
                     pol.mspo_policy_no no_policy,
                     pol.reg_spaj reg_spaj
		from eka.lst_black_list,eka.lst_user,eka.mst_policy pol
		where eka.lst_black_list.lus_id = eka.lst_user.lus_id 
		              and eka.lst_black_list.reg_spaj= pol.reg_spaj(+) 
		order by eka.lst_black_list.lbl_nama asc
	</select>
	
	<select id="elions.uw.selectFrPasBp" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Pas">
		select 
		(
		    SELECT x.LSRG_NAMA lca_nama
	         FROM EKA.MST_AGENT y, 
	              EKA.LST_REGION x 
	        WHERE ( y.LCA_ID = x.LCA_ID AND  y.LWK_ID = x.LWK_ID AND y.LSRG_ID = x.LSRG_ID ) 
	          AND ( y.LSTB_ID = 1 
	          AND y.MSAG_ACTIVE = 1 and
          		y.MSAG_ID=c.msag_id_pp)
		) cabang, 
		(
            select distinct upper(e.lus_full_name) from eka.lst_user e where
            e.lus_active = 1 and e.lus_id = c.lus_id_uw_status
        ) mcl_first, 
		    c.msp_pas_nama_pp, c.msp_fire_id, c.MSP_PAS_CREATE_DATE, 'FURTHER REQUIREMENT' status_polis, c.MSP_TGL_STATUS, c.msp_ket_status from eka.mst_pas_sms c
		    where c.msag_id_pp is not null and c.msp_ket_status is not null and c.reg_spaj is null
		    and c.lspd_id <![CDATA[<>]]> 95
		    order by c.msp_pas_nama_pp asc
	</select>
	
	<select id="elions.uw.selectreportProduksiCair" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			select jenis, jalur, kat, 
		    sum(January) January, 
		    sum(February) February, 
		    sum(March) March, 
		    sum(April) April, 
		    sum(May) May, 
		    sum(June) June, 
		    sum(July) July, 
		    sum(August) August, 
		    sum(September) September, 
		    sum(October) October, 
		    sum(November) November,
		    sum(December) December,
		    sum(Polis_January) Polis_January, 
		    sum(Polis_February) Polis_February, 
		    sum(Polis_March) Polis_March, 
		    sum(Polis_April) Polis_April, 
		    sum(Polis_May) Polis_May, 
		    sum(Polis_June) Polis_June, 
		    sum(Polis_July) Polis_July, 
		    sum(Polis_August) Polis_August, 
		    sum(Polis_September) Polis_September, 
		    sum(Polis_October) Polis_October, 
		    sum(Polis_November) Polis_November,
		    sum(Polis_December) Polis_December
			from ( 
			    select jenis, jalur, kat, 
			        sum(January) January, 
			        sum(February) February, 
			        sum(March) March, 
			        sum(April) April, 
			        sum(May) May, 
			        sum(June) June, 
			        sum(July) July, 
			        sum(August) August, 
			        sum(September) September, 
			        sum(October) October, 
			        sum(November) November,
			        sum(December) December,
			        case when trim(bulan) = 'January' then count(reg_spaj) else 0 end as Polis_January,
			        case when trim(bulan) = 'February' then count(reg_spaj) else 0 end as Polis_February,
			        case when trim(bulan) = 'March' then count(reg_spaj) else 0 end as Polis_March,
			        case when trim(bulan) = 'April' then count(reg_spaj) else 0 end as Polis_April,
			        case when trim(bulan) = 'May' then count(reg_spaj) else 0 end as Polis_May,
			        case when trim(bulan) = 'June' then count(reg_spaj) else 0 end as Polis_June,
			        case when trim(bulan) = 'July' then count(reg_spaj) else 0 end as Polis_July,
			        case when trim(bulan) = 'August' then count(reg_spaj) else 0 end as Polis_August,
			        case when trim(bulan) = 'September' then count(reg_spaj) else 0 end as Polis_September,
			        case when trim(bulan) = 'October' then count(reg_spaj) else 0 end as Polis_October,
			        case when trim(bulan) = 'November' then count(reg_spaj) else 0 end as Polis_November,
			        case when trim(bulan) = 'December' then count(reg_spaj) else 0 end as Polis_December
			    from ( 
			        select jenis, '' jalur, reg_spaj,
			               (case when prod_rp  <![CDATA[<=]]> 100000000  then '01.  <![CDATA[<=]]> 100jt'
			                     when prod_rp between  100000001 and  500000000  then '02. 100jt - 500jt'
			                     when prod_rp between  500000001 and  1000000000 then '03. 500jt - 1M'
			                     when prod_rp  <![CDATA[>]]> 1000000000 then '04.  <![CDATA[>]]> 1M'
			                     end) kat, bulan, 
			                case when trim(bulan) = 'January' then prod_rp else 0 end as January,
			                case when trim(bulan) = 'February' then prod_rp else 0 end as February,
			                case when trim(bulan) = 'March' then prod_rp else 0 end as March,
			                case when trim(bulan) = 'April' then prod_rp else 0 end as April,
			                case when trim(bulan) = 'May' then prod_rp else 0 end as May,
			                case when trim(bulan) = 'June' then prod_rp else 0 end as June,
			                case when trim(bulan) = 'July' then prod_rp else 0 end as July,
			                case when trim(bulan) = 'August' then prod_rp else 0 end as August,
			                case when trim(bulan) = 'September' then prod_rp else 0 end as September,
			                case when trim(bulan) = 'October' then prod_rp else 0 end as October,
			                case when trim(bulan) = 'November' then prod_rp else 0 end as November,
			                case when trim(bulan) = 'December' then prod_rp else 0 end as December
			        from ( 
			            select 'CAIR' jenis, b.lca_id, b.reg_spaj, to_char(a.msl_paid_date, 'Month') bulan, nvl(sum(f.msdpr_premium * e.mspro_nilai_kurs * 1), 0) prod_rp
			            from   eka.mst_slink a,
			                   eka.mst_policy b, 
			                   eka.mst_production e, 
			                   eka.mst_det_production f
			            where ( a.reg_spaj           = b.reg_spaj                  ) 
			            and   ( a.reg_spaj           = e.reg_spaj                  )
			            and   ( a.msl_tahun_ke       = e.msbi_tahun_ke             )
			            and   ( a.msl_premi_ke       = e.msbi_premi_ke             )
			            and   ( e.lstb_id            = f.lstb_id                   )
			            and   ( e.reg_spaj           = f.reg_spaj                  )
			            and   ( e.mspro_prod_date    = f.mspro_prod_date           )
			            and   ( e.mspro_prod_ke      = f.mspro_prod_ke             )
			            and   ( a.msl_paid_date    between #bdate# and #edate# )
			            and   ( a.msl_kode         = 8                           )
			            and   ( b.lspd_id          <![CDATA[<>]]> 95                          )
			            and   ( f.lsbs_id          <![CDATA[<=]]> 299                         )  
			            group by b.lca_id, b.reg_spaj, to_char(a.msl_paid_date, 'Month')
			         union all     
			            select 'CAIR' jenis, b.lca_id, b.reg_spaj, to_char(cair.tglk, 'Month') bulan, nvl(sum(f.msdpr_premium * e.mspro_nilai_kurs * 1 ), 0) prod_rp
			            from   eka.mst_policy b, 
			                   eka.mst_production e, 
			                   eka.mst_det_production f,
			                   ( select reg_spaj, 2 as type, flag_ps as ps, mssur_tgl_klaim tglk
			                        from eka.mst_surrender a 
			                     where flag_ps in (1,3)
			                     and mssur_tgl_klaim between #bdate# and #edate#
			                     union all
			                        select reg_spaj, 2 as type, flag_ps as ps, mspin_tgl_keluar tglk
			                        from eka.mst_pinjaman a 
			                     where flag_ps in (1,3)
			                     and mspin_tgl_keluar between #bdate# and #edate#
			                     union all
			                        select reg_spaj, 2 as type, flag_ps as ps, tgl_klaim tglk
			                        from eka.mst_maturity a 
			                     where flag_ps in (1,2,3)
			                     and tgl_klaim between #bdate# and #edate#
			                   ) cair         
			            where  cair.reg_spaj        = b.reg_spaj 
			            and    b.reg_spaj           = e.reg_spaj
			            and    b.lspd_id          <![CDATA[<>]]> 95
			            and    e.lstb_id            = f.lstb_id                  
			            and    e.reg_spaj           = f.reg_spaj                 
			            and    e.mspro_prod_date    = f.mspro_prod_date          
			            and    e.mspro_prod_ke      = f.mspro_prod_ke            
			            and    f.lsbs_id          <![CDATA[<=]]> 299                        
			            and    e.msbi_tahun_ke    = 1 
			            and    e.msbi_premi_ke    = 1 
			            and    e.mspro_prod_ke    = 1                          
			            and    e.lstb_id = 1
			            group by b.lca_id, b.reg_spaj, to_char(cair.tglk, 'Month')    
			            union all
			            select 'PROD' jenis, b.lca_id, b.reg_spaj, to_char(e.mspro_prod_date, 'Month') bulan, nvl(sum(f.msdpr_premium * e.mspro_nilai_kurs * 1 ), 0) prod_rp
			            from   eka.mst_policy b, 
			                   eka.mst_production e, 
			                   eka.mst_det_production f
			            where  b.reg_spaj           = e.reg_spaj
			            and    b.lspd_id          <![CDATA[<>]]> 95
			            and    e.lstb_id            = f.lstb_id                  
			            and    e.reg_spaj           = f.reg_spaj                 
			            and    e.mspro_prod_date    = f.mspro_prod_date          
			            and    e.mspro_prod_ke      = f.mspro_prod_ke            
			            and    f.lsbs_id          <![CDATA[<=]]> 299                                 
			            and    e.lstb_id = 1
			            and   ( e.mspro_prod_date    between #bdate# and #edate# )
			            and    (e.reg_spaj, e.msbi_tahun_ke, e.msbi_premi_ke) in (
			                                            select reg_spaj, msbi_tahun_ke, msbi_premi_ke from eka.mst_powersave_ro where mps_kode = 5
			                                            union all 
			                                            select reg_spaj, msl_tahun_ke, msl_premi_ke from eka.mst_slink where msl_kode = 5
			                                            )                                        
			            group by b.lca_id, b.reg_spaj, to_char(e.mspro_prod_date, 'Month')   
			        )
			     )
			    group by jenis, jalur, kat, trim(bulan)
			)
			group by jenis, jalur, kat
			order by 1,2,3
	</select>
	
	<select id="elions.uw.selectreportProduksiCairMGI" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			select jenis, kat, 
			    sum(mgi_1) mgi_1, 
			    sum(mgi_3) mgi_3, 
			    sum(mgi_6) mgi_6, 
			    sum(mgi_12) mgi_12, 
			    sum(mgi_36) mgi_36, 
			    sum(polis_mgi_1) polis_mgi_1, 
			    sum(polis_mgi_3) polis_mgi_3, 
			    sum(polis_mgi_6) polis_mgi_6, 
			    sum(polis_mgi_12) polis_mgi_12, 
			    sum(polis_mgi_36) polis_mgi_36
			from ( 
			    select jenis, /*decode(lca_id, '09', 'BANCASS', 'NON-BANCASS')*/ '' jalur, reg_spaj,
			           (case when prod_rp <![CDATA[<]]> 100000000  then '01. <![CDATA[<]]> 100jt'
			                 when prod_rp between  100000000 and  249999999  then '02. 100jt - 249.999.999'
			                 when prod_rp between  250000000 and  499999999  then '03. 250jt - 499.999.999'
			                 when prod_rp between  500000000 and  999999999 then '04. 500jt - 999.999.999'
			                 when prod_rp <![CDATA[>=]]> 1000000000 then '05. <![CDATA[>=]]> 1M'
			                 end) kat, bulan, prod_rp, mgi,
			                case when mgi = 1 then prod_rp else 0 end mgi_1,
			                case when mgi = 3 then prod_rp else 0 end mgi_3,
			                case when mgi = 6 then prod_rp else 0 end mgi_6,
			                case when mgi = 12 then prod_rp else 0 end mgi_12,
			                case when mgi = 36 then prod_rp else 0 end mgi_36, 
			                case when mgi = 1 then 1 else 0 end polis_mgi_1,
			                case when mgi = 3 then 1 else 0 end polis_mgi_3,
			                case when mgi = 6 then 1 else 0 end polis_mgi_6,
			                case when mgi = 12 then 1 else 0 end polis_mgi_12,
			                case when mgi = 36 then 1 else 0 end polis_mgi_36
			    from ( 
			        select 'CAIR' jenis, b.lca_id, b.reg_spaj, to_char(a.msl_paid_date, 'Month') bulan, nvl(sum(f.msdpr_premium * e.mspro_nilai_kurs * 1), 0) prod_rp, a.msl_mgi mgi
			        from   eka.mst_slink a,
			               eka.mst_policy b, 
			               eka.mst_production e, 
			               eka.mst_det_production f
			        where ( a.reg_spaj           = b.reg_spaj                  ) 
			        and   ( a.reg_spaj           = e.reg_spaj                  )
			        and   ( a.msl_tahun_ke       = e.msbi_tahun_ke             )
			        and   ( a.msl_premi_ke       = e.msbi_premi_ke             )
			        and   ( e.lstb_id            = f.lstb_id                   )
			        and   ( e.reg_spaj           = f.reg_spaj                  )
			        and   ( e.mspro_prod_date    = f.mspro_prod_date           )
			        and   ( e.mspro_prod_ke      = f.mspro_prod_ke             )
			        and   ( a.msl_paid_date    between #bdate# and #edate# )
			        and   ( a.msl_kode         = 8                           )
			        and   ( b.lspd_id         <![CDATA[<>]]> 95                          )
			        and   ( f.lsbs_id         <![CDATA[<=]]> 299                         )  
			        and  ( e.lku_id = '01' )
			        group by b.lca_id, b.reg_spaj, to_char(a.msl_paid_date, 'Month'), a.msl_mgi
			     union all     
			        select 'CAIR' jenis, b.lca_id, b.reg_spaj, to_char(cair.tglk, 'Month') bulan, nvl(sum(f.msdpr_premium * e.mspro_nilai_kurs * 1 ), 0) prod_rp, g.mpr_jangka_invest mgi
			        from   eka.mst_policy b, 
			               eka.mst_production e, 
			               eka.mst_det_production f,
			               eka.mst_powersave_ro g,
			               ( select reg_spaj, 2 as type, flag_ps as ps, mssur_tgl_klaim tglk
			                    from eka.mst_surrender a 
			                 where flag_ps in (1,3)
			                 and mssur_tgl_klaim between #bdate# and #edate#
			                 union all
			                    select reg_spaj, 2 as type, flag_ps as ps, mspin_tgl_keluar tglk
			                    from eka.mst_pinjaman a 
			                 where flag_ps in (1,3)
			                 and mspin_tgl_keluar between #bdate# and #edate#
			                 union all
			                    select reg_spaj, 2 as type, flag_ps as ps, tgl_klaim tglk
			                    from eka.mst_maturity a 
			                 where flag_ps in (1,2,3)
			                 and tgl_klaim between #bdate# and #edate#
			               ) cair         
			        where  cair.reg_spaj        = b.reg_spaj 
			        and    b.reg_spaj           = e.reg_spaj
			        and    b.lspd_id         <![CDATA[<>]]> 95
			        and    e.lstb_id            = f.lstb_id                  
			        and    e.reg_spaj           = f.reg_spaj                 
			        and    e.mspro_prod_date    = f.mspro_prod_date          
			        and    e.mspro_prod_ke      = f.mspro_prod_ke         
			        and    b.reg_spaj = g.reg_spaj   
			        and    f.lsbs_id         <![CDATA[<=]]> 299                        
			        and    e.msbi_tahun_ke    = 1 
			        and    e.msbi_premi_ke    = 1 
			        and    e.mspro_prod_ke    = 1                          
			        and    e.lstb_id = 1
			        and    g.mps_kode = 5
			        and    e.lku_id = '01'
			        group by b.lca_id, b.reg_spaj, to_char(cair.tglk, 'Month'), g.mpr_jangka_invest  
			        union all
			        select 'PROD' jenis, b.lca_id, b.reg_spaj, to_char(e.mspro_prod_date, 'Month') bulan, nvl(sum(f.msdpr_premium * e.mspro_nilai_kurs * 1 ), 0) prod_rp, g.mpr_jangka_invest mgi
			        from   eka.mst_policy b, 
			               eka.mst_production e, 
			               eka.mst_det_production f,
			               eka.mst_powersave_ro g
			        where  b.reg_spaj           = e.reg_spaj
			        and    b.lspd_id         <![CDATA[<>]]> 95
			        and    e.lstb_id            = f.lstb_id                  
			        and    e.reg_spaj           = f.reg_spaj                 
			        and    e.mspro_prod_date    = f.mspro_prod_date          
			        and    e.mspro_prod_ke      = f.mspro_prod_ke            
			        and    b.reg_spaj = g.reg_spaj        
			        and    f.lsbs_id         <![CDATA[<=]]> 299                                 
			        and    e.lstb_id = 1
			        and    g.mps_kode = 5
			        and    e.lku_id = '01'
			        and   ( e.mspro_prod_date    between #bdate# and #edate# )
			        and    (e.reg_spaj, e.msbi_tahun_ke, e.msbi_premi_ke) in (
			                                        select reg_spaj, msbi_tahun_ke, msbi_premi_ke from eka.mst_powersave_ro where mps_kode = 5 
			                                        union all 
			                                        select reg_spaj, msl_tahun_ke, msl_premi_ke from eka.mst_slink where msl_kode = 5 
			                                        )                                        
			        group by b.lca_id, b.reg_spaj, to_char(e.mspro_prod_date, 'Month'), g.mpr_jangka_invest      
			    )
			)
			group by jenis, kat
			order by 1,2
	</select>
	
	<select id="elions.uw.selectFrDbd" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Pas">
		select 
        (
            SELECT x.LSRG_NAMA lca_nama
             FROM EKA.MST_AGENT y, 
                  EKA.LST_REGION x 
            WHERE ( y.LCA_ID = x.LCA_ID AND  y.LWK_ID = x.LWK_ID AND y.LSRG_ID = x.LSRG_ID ) 
              AND ( y.LSTB_ID = 1 
              AND y.MSAG_ACTIVE = 1 and
                  y.MSAG_ID=c.msag_id)
        ) cabang,        
            c.msp_pas_nama_pp, c.msp_fire_id,c.jenis_pas, c.MSP_PAS_CREATE_DATE, 'FURTHER REQUIREMENT' status_polis, c.MSP_TGL_STATUS, c.msp_ket_status,
             (
            select distinct upper(e.lus_full_name) from eka.lst_user e where
            e.lus_active = 1 and e.lus_id = c.lus_id_uw_status
           ) mcl_first
            from eka.mst_pas_sms c
            where c.jenis_pas = #jenis_pas#  and c.msp_ket_status is not null and c.reg_spaj is null
            and c.lspd_id <![CDATA[<>]]> 95
            order by c.msp_pas_nama_pp asc
	</select>
	
		<select id="elions.uw.selectFrMallAssurance" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Pas">
	  select 
         c.NO_KARTU,    
            c.msp_pas_nama_pp, 
            (decode(c.msp_flag_cc, 0, 'TUNAI', decode(c.msp_flag_cc, 1, 'KARTU KREDIT', 'TABUNGAN')))  msp_up,
            (decode(c.lscb_id, 1, 'TRIWULANAN', decode(c.lscb_id, 2, 'SEMESTERAN',decode(c.lscb_id, 3, 'TAHUNAN', 'BULANAN'))))  msp_text,           
            c.jenis_pas, c.MSP_PAS_CREATE_DATE, 'FURTHER REQUIREMENT' status_polis, c.MSP_TGL_STATUS, c.msp_ket_status,
             (
            select distinct upper(e.lus_full_name) from eka.lst_user e where
            e.lus_active = 1 and e.lus_id = c.lus_id_uw_status
           ) mcl_first
            from eka.mst_pas_sms c
            where c.jenis_pas = 'MALLINSURANCE'  and c.msp_ket_status is not null and c.reg_spaj is null
            and c.lspd_id <![CDATA[<>]]> 95
            order by c.msp_pas_nama_pp asc		
	</select>
			
			
	<select id="elions.uw.selectCountMstKuesionerPelayanan" resultClass="int" parameterClass="string">
	SELECT count(*) FROM eka.mst_kuesioner_pelayanan
	</select>
	
	<select id="elions.uw.selectCekPin" parameterClass="java.util.HashMap" resultClass="string">
		select produk from eka.mst_buku_pas where pin = #pin# and flag_active = #flag_active#
	</select>
	
	<select id="elions.uw.selectCekKartuPas" parameterClass="java.util.HashMap" resultClass="string">
		select produk from eka.mst_kartu_pas where no_kartu = #no# 
		<isEqual property="flag_active" compareValue="0">
			and flag_active = 0
		</isEqual>
		<isEqual property="flag_active" compareValue="1">
			and flag_active in (1,2)
		</isEqual>
		<isEqual property="flag_active" compareValue="2">
			and flag_active = 2
		</isEqual>
	</select>
	
	<!-- 20190227 Mark Valentino Simascard -->
	<select id="elions.uw.selectCekStockSimCardRds" parameterClass="java.util.HashMap" resultClass="string">
		select count(*) from eka.mst_kartu_pas where reg_spaj is null 
		and keterangan = #keterangan#
		and flag_active = 0
	</select>	
	
	<select id="elions.uw.selectAmbilSatuNoKartuSimascard" parameterClass="java.util.HashMap" resultClass="string">
		select no_kartu from eka.mst_kartu_pas where upper(keterangan) = #keterangan# 
		and reg_spaj is null and rownum = 1 order by TGL_INPUT DESC			
	</select>		
	
	<select id="elions.uw.selectCekNoKartu" parameterClass="java.util.HashMap" resultClass="string">
		select produk from eka.mst_kartu_pas where no_kartu = #no_kartu# 
		<isEqual property="flag_active" compareValue="0">
			and flag_active = 0
		</isEqual>
		<isEqual property="flag_active" compareValue="1">
			and flag_active in (1,2)
		</isEqual>
		<isEqual property="flag_active" compareValue="2">
			and flag_active = 2
		</isEqual>
		<isEqual property="produk" compareValue="PAS">
			and produk in ('01','02','03','04')
		</isEqual>
		<isEqual property="produk" compareValue="PAS_SYARIAH">
			and produk in ('11','12','13','14')
		</isEqual>
		<isEqual property="produk" compareValue="SAC">
			and produk in ('01','02','03','04')
		</isEqual>
		<isEqual property="produk" compareValue="CARD">
			and produk in ('05')
		</isEqual>
		<isEqual property="produk" compareValue="HCP">
			and produk in ('07')
		</isEqual>
	</select>
	
	<select id="elions.uw.selectPercentageQuestionnaireByQuestion" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.KuesionerPelayananByQuestion">
	select 
	(sum((case when(sikap = 1) THEN 1 ELSE 0 END))/count(*) * 100) as sikap1,
	(sum((case when(sikap = 2) THEN 1 ELSE 0 END))/count(*) * 100) as sikap2,
	(sum((case when(sikap = 3) THEN 1 ELSE 0 END))/count(*) * 100) as sikap3,
	(sum((case when(sikap = 4) THEN 1 ELSE 0 END))/count(*) * 100) as sikap4,
	(sum((case when(sikap = 5) THEN 1 ELSE 0 END))/count(*) * 100) as sikap5,
	(sum((case when(inisiatif = 1) THEN 1 ELSE 0 END))/count(*) * 100) as inisiatif1,  
	(sum((case when(inisiatif = 2) THEN 1 ELSE 0 END))/count(*) * 100) as inisiatif2,
	(sum((case when(inisiatif = 3) THEN 1 ELSE 0 END))/count(*) * 100) as inisiatif3,
	(sum((case when(inisiatif = 4) THEN 1 ELSE 0 END))/count(*) * 100) as inisiatif4,
	(sum((case when(inisiatif = 5) THEN 1 ELSE 0 END))/count(*) * 100) as inisiatif5,
	(sum((case when(kejelasan_dlm_info = 1) THEN 1 ELSE 0 END))/count(*) * 100) as kejelasan_dlm_info1,  
	(sum((case when(kejelasan_dlm_info = 2) THEN 1 ELSE 0 END))/count(*) * 100) as kejelasan_dlm_info2,
	(sum((case when(kejelasan_dlm_info = 3) THEN 1 ELSE 0 END))/count(*) * 100) as kejelasan_dlm_info3,
	(sum((case when(kejelasan_dlm_info = 4) THEN 1 ELSE 0 END))/count(*) * 100) as kejelasan_dlm_info4,
	(sum((case when(kejelasan_dlm_info = 5) THEN 1 ELSE 0 END))/count(*) * 100) as kejelasan_dlm_info5,
	(sum((case when(solusi = 1) THEN 1 ELSE 0 END))/count(*) * 100) as solusi1,  
	(sum((case when(solusi = 2) THEN 1 ELSE 0 END))/count(*) * 100) as solusi2,
	(sum((case when(solusi = 3) THEN 1 ELSE 0 END))/count(*) * 100) as solusi3,
	(sum((case when(solusi = 4) THEN 1 ELSE 0 END))/count(*) * 100) as solusi4,
	(sum((case when(solusi = 5) THEN 1 ELSE 0 END))/count(*) * 100) as solusi5,
	(sum((case when(penguasaan_produk = 1) THEN 1 ELSE 0 END))/count(*) * 100) as penguasaan_produk1,  
	(sum((case when(penguasaan_produk = 2) THEN 1 ELSE 0 END))/count(*) * 100) as penguasaan_produk2,
	(sum((case when(penguasaan_produk = 3) THEN 1 ELSE 0 END))/count(*) * 100) as penguasaan_produk3,
	(sum((case when(penguasaan_produk = 4) THEN 1 ELSE 0 END))/count(*) * 100) as penguasaan_produk4,
	(sum((case when(penguasaan_produk = 5) THEN 1 ELSE 0 END))/count(*) * 100) as penguasaan_produk5,
	(sum((case when(ketepatan_waktu = 1) THEN 1 ELSE 0 END))/count(*) * 100) as ketepatan_waktu1,  
	(sum((case when(ketepatan_waktu = 2) THEN 1 ELSE 0 END))/count(*) * 100) as ketepatan_waktu2,
	(sum((case when(ketepatan_waktu = 3) THEN 1 ELSE 0 END))/count(*) * 100) as ketepatan_waktu3,
	(sum((case when(ketepatan_waktu = 4) THEN 1 ELSE 0 END))/count(*) * 100) as ketepatan_waktu4,
	(sum((case when(ketepatan_waktu = 5) THEN 1 ELSE 0 END))/count(*) * 100) as ketepatan_waktu5,
	(sum((case when(manfaat_produk = 1) THEN 1 ELSE 0 END))/count(*) * 100) as manfaat_produk1,  
	(sum((case when(manfaat_produk = 2) THEN 1 ELSE 0 END))/count(*) * 100) as manfaat_produk2,
	(sum((case when(manfaat_produk = 3) THEN 1 ELSE 0 END))/count(*) * 100) as manfaat_produk3,
	(sum((case when(manfaat_produk = 4) THEN 1 ELSE 0 END))/count(*) * 100) as manfaat_produk4,
	(sum((case when(manfaat_produk = 5) THEN 1 ELSE 0 END))/count(*) * 100) as manfaat_produk5,
	(sum((case when(pemahaman_resiko = 1) THEN 1 ELSE 0 END))/count(*) * 100) as pemahaman_resiko1,  
	(sum((case when(pemahaman_resiko = 2) THEN 1 ELSE 0 END))/count(*) * 100) as pemahaman_resiko2,
	(sum((case when(pemahaman_resiko = 3) THEN 1 ELSE 0 END))/count(*) * 100) as pemahaman_resiko3,
	(sum((case when(pemahaman_resiko = 4) THEN 1 ELSE 0 END))/count(*) * 100) as pemahaman_resiko4,
	(sum((case when(pemahaman_resiko = 5) THEN 1 ELSE 0 END))/count(*) * 100) as pemahaman_resiko5,
	(sum((case when(perlindungan_asuransi = 1) THEN 1 ELSE 0 END))/count(*) * 100) as perlindungan_asuransi1,  
	(sum((case when(perlindungan_asuransi = 2) THEN 1 ELSE 0 END))/count(*) * 100) as perlindungan_asuransi2,
	(sum((case when(perlindungan_asuransi = 3) THEN 1 ELSE 0 END))/count(*) * 100) as perlindungan_asuransi3,
	(sum((case when(perlindungan_asuransi = 4) THEN 1 ELSE 0 END))/count(*) * 100) as perlindungan_asuransi4,
	(sum((case when(perlindungan_asuransi = 5) THEN 1 ELSE 0 END))/count(*) * 100) as perlindungan_asuransi5,
	(sum((case when(tarif_premi = 1) THEN 1 ELSE 0 END))/count(*) * 100) as tarif_premi1,  
	(sum((case when(tarif_premi = 2) THEN 1 ELSE 0 END))/count(*) * 100) as tarif_premi2,
	(sum((case when(tarif_premi = 3) THEN 1 ELSE 0 END))/count(*) * 100) as tarif_premi3,
	(sum((case when(tarif_premi = 4) THEN 1 ELSE 0 END))/count(*) * 100) as tarif_premi4,
	(sum((case when(tarif_premi = 5) THEN 1 ELSE 0 END))/count(*) * 100) as tarif_premi5,
	(sum((case when(kelayakan_beban_biaya = 1) THEN 1 ELSE 0 END))/count(*) * 100) as kelayakan_beban_biaya1,  
	(sum((case when(kelayakan_beban_biaya = 2) THEN 1 ELSE 0 END))/count(*) * 100) as kelayakan_beban_biaya2,
	(sum((case when(kelayakan_beban_biaya = 3) THEN 1 ELSE 0 END))/count(*) * 100) as kelayakan_beban_biaya3,
	(sum((case when(kelayakan_beban_biaya = 4) THEN 1 ELSE 0 END))/count(*) * 100) as kelayakan_beban_biaya4,
	(sum((case when(kelayakan_beban_biaya = 5) THEN 1 ELSE 0 END))/count(*) * 100) as kelayakan_beban_biaya5,
	(sum((case when(penggunaan_policy = 1) THEN 1 ELSE 0 END))/count(*) * 100) as penggunaan_policy1,  
	(sum((case when(penggunaan_policy = 2) THEN 1 ELSE 0 END))/count(*) * 100) as penggunaan_policy2,
	(sum((case when(penggunaan_policy = 3) THEN 1 ELSE 0 END))/count(*) * 100) as penggunaan_policy3,
	(sum((case when(penggunaan_policy = 4) THEN 1 ELSE 0 END))/count(*) * 100) as penggunaan_policy4,
	(sum((case when(penggunaan_policy = 5) THEN 1 ELSE 0 END))/count(*) * 100) as penggunaan_policy5,
	(sum((case when(ketepatan_waktu_mail_sms = 1) THEN 1 ELSE 0 END))/count(*) * 100) as ketepatan_waktu_mail_sms1,  
	(sum((case when(ketepatan_waktu_mail_sms = 2) THEN 1 ELSE 0 END))/count(*) * 100) as ketepatan_waktu_mail_sms2,
	(sum((case when(ketepatan_waktu_mail_sms = 3) THEN 1 ELSE 0 END))/count(*) * 100) as ketepatan_waktu_mail_sms3,
	(sum((case when(ketepatan_waktu_mail_sms = 4) THEN 1 ELSE 0 END))/count(*) * 100) as ketepatan_waktu_mail_sms4,
	(sum((case when(ketepatan_waktu_mail_sms = 5) THEN 1 ELSE 0 END))/count(*) * 100) as ketepatan_waktu_mail_sms5,
	(sum((case when(kemudahan_call_center = 1) THEN 1 ELSE 0 END))/count(*) * 100) as kemudahan_call_center1,  
	(sum((case when(kemudahan_call_center = 2) THEN 1 ELSE 0 END))/count(*) * 100) as kemudahan_call_center2,
	(sum((case when(kemudahan_call_center = 3) THEN 1 ELSE 0 END))/count(*) * 100) as kemudahan_call_center3,
	(sum((case when(kemudahan_call_center = 4) THEN 1 ELSE 0 END))/count(*) * 100) as kemudahan_call_center4,
	(sum((case when(kemudahan_call_center = 5) THEN 1 ELSE 0 END))/count(*) * 100) as kemudahan_call_center5
	from eka.mst_kuesioner_pelayanan
	</select>
		
	<select id="elions.uw.selectPercentageQuestionnaireByGroup" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.KuesionerPelayananByGroup">
	select 
	((sikap1 + inisiatif1 + kejelasan_dlm_info1 +  solusi1 + penguasaan_produk1 + ketepatan_waktu1)/(jmh_row * 6)) * 100 as group_a1,
	((sikap2 + inisiatif2 + kejelasan_dlm_info2 +  solusi2 + penguasaan_produk2 + ketepatan_waktu2)/(jmh_row * 6)) * 100 as group_a2,
	((sikap3 + inisiatif3 + kejelasan_dlm_info3 +  solusi3 + penguasaan_produk3 + ketepatan_waktu3)/(jmh_row * 6)) * 100 as group_a3,
	((sikap4 + inisiatif4 + kejelasan_dlm_info4 +  solusi4 + penguasaan_produk4 + ketepatan_waktu4)/(jmh_row * 6)) * 100 as group_a4,
	((sikap5 + inisiatif5 + kejelasan_dlm_info5 +  solusi5 + penguasaan_produk5 + ketepatan_waktu5)/(jmh_row * 6)) * 100 as group_a5,
	((manfaat_produk1 + pemahaman_resiko1 + perlindungan_asuransi1 + tarif_premi1 + kelayakan_beban_biaya1)/(jmh_row * 5)) * 100 as group_b1,
	((manfaat_produk2 + pemahaman_resiko2 + perlindungan_asuransi2 + tarif_premi2 + kelayakan_beban_biaya2)/(jmh_row * 5)) * 100 as group_b2,
	((manfaat_produk3 + pemahaman_resiko3 + perlindungan_asuransi3 + tarif_premi3 + kelayakan_beban_biaya3)/(jmh_row * 5)) * 100 as group_b3,
	((manfaat_produk4 + pemahaman_resiko4 + perlindungan_asuransi4 + tarif_premi4 + kelayakan_beban_biaya4)/(jmh_row * 5)) * 100 as group_b4,
	((manfaat_produk5 + pemahaman_resiko5 + perlindungan_asuransi5 + tarif_premi5 + kelayakan_beban_biaya5)/(jmh_row * 5)) * 100 as group_b5,
	((penggunaan_policy1 + ketepatan_waktu_mail_sms1 + kemudahan_call_center1)/(jmh_row * 3)) * 100 as group_c1,
	((penggunaan_policy2 + ketepatan_waktu_mail_sms2 + kemudahan_call_center2)/(jmh_row * 3)) * 100 as group_c2,
	((penggunaan_policy3 + ketepatan_waktu_mail_sms3 + kemudahan_call_center3)/(jmh_row * 3)) * 100 as group_c3,
	((penggunaan_policy4 + ketepatan_waktu_mail_sms4 + kemudahan_call_center4)/(jmh_row * 3)) * 100 as group_c4,
	((penggunaan_policy5 + ketepatan_waktu_mail_sms5 + kemudahan_call_center5)/(jmh_row * 3)) * 100 as group_c5
	 from (
	select count(*) jmh_row,
	(sum((case when(sikap = 1) THEN 1 ELSE 0 END))) as sikap1,
	(sum((case when(sikap = 2) THEN 1 ELSE 0 END))) as sikap2,
	(sum((case when(sikap = 3) THEN 1 ELSE 0 END))) as sikap3,
	(sum((case when(sikap = 4) THEN 1 ELSE 0 END))) as sikap4,
	(sum((case when(sikap = 5) THEN 1 ELSE 0 END))) as sikap5,
	(sum((case when(inisiatif = 1) THEN 1 ELSE 0 END))) as inisiatif1,  
	(sum((case when(inisiatif = 2) THEN 1 ELSE 0 END))) as inisiatif2,
	(sum((case when(inisiatif = 3) THEN 1 ELSE 0 END))) as inisiatif3,
	(sum((case when(inisiatif = 4) THEN 1 ELSE 0 END))) as inisiatif4,
	(sum((case when(inisiatif = 5) THEN 1 ELSE 0 END))) as inisiatif5,
	(sum((case when(kejelasan_dlm_info = 1) THEN 1 ELSE 0 END))) as kejelasan_dlm_info1,  
	(sum((case when(kejelasan_dlm_info = 2) THEN 1 ELSE 0 END))) as kejelasan_dlm_info2,
	(sum((case when(kejelasan_dlm_info = 3) THEN 1 ELSE 0 END))) as kejelasan_dlm_info3,
	(sum((case when(kejelasan_dlm_info = 4) THEN 1 ELSE 0 END))) as kejelasan_dlm_info4,
	(sum((case when(kejelasan_dlm_info = 5) THEN 1 ELSE 0 END))) as kejelasan_dlm_info5,
	(sum((case when(solusi = 1) THEN 1 ELSE 0 END))) as solusi1,  
	(sum((case when(solusi = 2) THEN 1 ELSE 0 END))) as solusi2,
	(sum((case when(solusi = 3) THEN 1 ELSE 0 END))) as solusi3,
	(sum((case when(solusi = 4) THEN 1 ELSE 0 END))) as solusi4,
	(sum((case when(solusi = 5) THEN 1 ELSE 0 END))) as solusi5,
	(sum((case when(penguasaan_produk = 1) THEN 1 ELSE 0 END))) as penguasaan_produk1,  
	(sum((case when(penguasaan_produk = 2) THEN 1 ELSE 0 END))) as penguasaan_produk2,
	(sum((case when(penguasaan_produk = 3) THEN 1 ELSE 0 END))) as penguasaan_produk3,
	(sum((case when(penguasaan_produk = 4) THEN 1 ELSE 0 END))) as penguasaan_produk4,
	(sum((case when(penguasaan_produk = 5) THEN 1 ELSE 0 END))) as penguasaan_produk5,
	(sum((case when(ketepatan_waktu = 1) THEN 1 ELSE 0 END))) as ketepatan_waktu1,  
	(sum((case when(ketepatan_waktu = 2) THEN 1 ELSE 0 END))) as ketepatan_waktu2,
	(sum((case when(ketepatan_waktu = 3) THEN 1 ELSE 0 END))) as ketepatan_waktu3,
	(sum((case when(ketepatan_waktu = 4) THEN 1 ELSE 0 END))) as ketepatan_waktu4,
	(sum((case when(ketepatan_waktu = 5) THEN 1 ELSE 0 END))) as ketepatan_waktu5,
	(sum((case when(manfaat_produk = 1) THEN 1 ELSE 0 END))) as manfaat_produk1,  
	(sum((case when(manfaat_produk = 2) THEN 1 ELSE 0 END))) as manfaat_produk2,
	(sum((case when(manfaat_produk = 3) THEN 1 ELSE 0 END))) as manfaat_produk3,
	(sum((case when(manfaat_produk = 4) THEN 1 ELSE 0 END))) as manfaat_produk4,
	(sum((case when(manfaat_produk = 5) THEN 1 ELSE 0 END))) as manfaat_produk5,
	(sum((case when(pemahaman_resiko = 1) THEN 1 ELSE 0 END))) as pemahaman_resiko1,  
	(sum((case when(pemahaman_resiko = 2) THEN 1 ELSE 0 END))) as pemahaman_resiko2,
	(sum((case when(pemahaman_resiko = 3) THEN 1 ELSE 0 END))) as pemahaman_resiko3,
	(sum((case when(pemahaman_resiko = 4) THEN 1 ELSE 0 END))) as pemahaman_resiko4,
	(sum((case when(pemahaman_resiko = 5) THEN 1 ELSE 0 END))) as pemahaman_resiko5,
	(sum((case when(perlindungan_asuransi = 1) THEN 1 ELSE 0 END))) as perlindungan_asuransi1,  
	(sum((case when(perlindungan_asuransi = 2) THEN 1 ELSE 0 END))) as perlindungan_asuransi2,
	(sum((case when(perlindungan_asuransi = 3) THEN 1 ELSE 0 END))) as perlindungan_asuransi3,
	(sum((case when(perlindungan_asuransi = 4) THEN 1 ELSE 0 END))) as perlindungan_asuransi4,
	(sum((case when(perlindungan_asuransi = 5) THEN 1 ELSE 0 END))) as perlindungan_asuransi5,
	(sum((case when(tarif_premi = 1) THEN 1 ELSE 0 END))) as tarif_premi1,  
	(sum((case when(tarif_premi = 2) THEN 1 ELSE 0 END))) as tarif_premi2,
	(sum((case when(tarif_premi = 3) THEN 1 ELSE 0 END))) as tarif_premi3,
	(sum((case when(tarif_premi = 4) THEN 1 ELSE 0 END))) as tarif_premi4,
	(sum((case when(tarif_premi = 5) THEN 1 ELSE 0 END))) as tarif_premi5,
	(sum((case when(kelayakan_beban_biaya = 1) THEN 1 ELSE 0 END))) as kelayakan_beban_biaya1,  
	(sum((case when(kelayakan_beban_biaya = 2) THEN 1 ELSE 0 END))) as kelayakan_beban_biaya2,
	(sum((case when(kelayakan_beban_biaya = 3) THEN 1 ELSE 0 END))) as kelayakan_beban_biaya3,
	(sum((case when(kelayakan_beban_biaya = 4) THEN 1 ELSE 0 END))) as kelayakan_beban_biaya4,
	(sum((case when(kelayakan_beban_biaya = 5) THEN 1 ELSE 0 END))) as kelayakan_beban_biaya5,
	(sum((case when(penggunaan_policy = 1) THEN 1 ELSE 0 END))) as penggunaan_policy1,  
	(sum((case when(penggunaan_policy = 2) THEN 1 ELSE 0 END))) as penggunaan_policy2,
	(sum((case when(penggunaan_policy = 3) THEN 1 ELSE 0 END))) as penggunaan_policy3,
	(sum((case when(penggunaan_policy = 4) THEN 1 ELSE 0 END))) as penggunaan_policy4,
	(sum((case when(penggunaan_policy = 5) THEN 1 ELSE 0 END))) as penggunaan_policy5,
	(sum((case when(ketepatan_waktu_mail_sms = 1) THEN 1 ELSE 0 END))) as ketepatan_waktu_mail_sms1,  
	(sum((case when(ketepatan_waktu_mail_sms = 2) THEN 1 ELSE 0 END))) as ketepatan_waktu_mail_sms2,
	(sum((case when(ketepatan_waktu_mail_sms = 3) THEN 1 ELSE 0 END))) as ketepatan_waktu_mail_sms3,
	(sum((case when(ketepatan_waktu_mail_sms = 4) THEN 1 ELSE 0 END))) as ketepatan_waktu_mail_sms4,
	(sum((case when(ketepatan_waktu_mail_sms = 5) THEN 1 ELSE 0 END))) as ketepatan_waktu_mail_sms5,
	(sum((case when(kemudahan_call_center = 1) THEN 1 ELSE 0 END))) as kemudahan_call_center1,  
	(sum((case when(kemudahan_call_center = 2) THEN 1 ELSE 0 END))) as kemudahan_call_center2,
	(sum((case when(kemudahan_call_center = 3) THEN 1 ELSE 0 END))) as kemudahan_call_center3,
	(sum((case when(kemudahan_call_center = 4) THEN 1 ELSE 0 END))) as kemudahan_call_center4,
	(sum((case when(kemudahan_call_center = 5) THEN 1 ELSE 0 END))) as kemudahan_call_center5
	from eka.mst_kuesioner_pelayanan
	)
	</select>
	
	<select id="elions.uw.selectPercentageQuestionnaireAll" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.KuesionerPelayananAll">
	select 
	((sikap1 + inisiatif1 + kejelasan_dlm_info1 +  solusi1 + penguasaan_produk1 + ketepatan_waktu1 + manfaat_produk1 + pemahaman_resiko1 + perlindungan_asuransi1 + tarif_premi1 + kelayakan_beban_biaya1 + penggunaan_policy1 + ketepatan_waktu_mail_sms1 + kemudahan_call_center1)/(jmh_row * 14)) * 100 as sangat_baik,
	((sikap2 + inisiatif2 + kejelasan_dlm_info2 +  solusi2 + penguasaan_produk2 + ketepatan_waktu2 + manfaat_produk2 + pemahaman_resiko2 + perlindungan_asuransi2 + tarif_premi2 + kelayakan_beban_biaya2 + penggunaan_policy2 + ketepatan_waktu_mail_sms2 + kemudahan_call_center2)/(jmh_row * 14)) * 100 as baik,
	((sikap3 + inisiatif3 + kejelasan_dlm_info3 +  solusi3 + penguasaan_produk3 + ketepatan_waktu3 + manfaat_produk3 + pemahaman_resiko3 + perlindungan_asuransi3 + tarif_premi3 + kelayakan_beban_biaya3 + penggunaan_policy3 + ketepatan_waktu_mail_sms3 + kemudahan_call_center3)/(jmh_row * 14)) * 100 as kurang_baik,
	((sikap4 + inisiatif4 + kejelasan_dlm_info4 +  solusi4 + penguasaan_produk4 + ketepatan_waktu4 + manfaat_produk4 + pemahaman_resiko4 + perlindungan_asuransi4 + tarif_premi4 + kelayakan_beban_biaya4 + penggunaan_policy4 + ketepatan_waktu_mail_sms4 + kemudahan_call_center4)/(jmh_row * 14)) * 100 as buruk,
	((sikap5 + inisiatif5 + kejelasan_dlm_info5 +  solusi5 + penguasaan_produk5 + ketepatan_waktu5 + manfaat_produk5 + pemahaman_resiko5 + perlindungan_asuransi5 + tarif_premi5 + kelayakan_beban_biaya5 + penggunaan_policy5 + ketepatan_waktu_mail_sms5 + kemudahan_call_center5)/(jmh_row * 14)) * 100 as buruk_sekali
	 from (
	select count(*) jmh_row,
	(sum((case when(sikap = 1) THEN 1 ELSE 0 END))) as sikap1,
	(sum((case when(sikap = 2) THEN 1 ELSE 0 END))) as sikap2,
	(sum((case when(sikap = 3) THEN 1 ELSE 0 END))) as sikap3,
	(sum((case when(sikap = 4) THEN 1 ELSE 0 END))) as sikap4,
	(sum((case when(sikap = 5) THEN 1 ELSE 0 END))) as sikap5,
	(sum((case when(inisiatif = 1) THEN 1 ELSE 0 END))) as inisiatif1,  
	(sum((case when(inisiatif = 2) THEN 1 ELSE 0 END))) as inisiatif2,
	(sum((case when(inisiatif = 3) THEN 1 ELSE 0 END))) as inisiatif3,
	(sum((case when(inisiatif = 4) THEN 1 ELSE 0 END))) as inisiatif4,
	(sum((case when(inisiatif = 5) THEN 1 ELSE 0 END))) as inisiatif5,
	(sum((case when(kejelasan_dlm_info = 1) THEN 1 ELSE 0 END))) as kejelasan_dlm_info1,  
	(sum((case when(kejelasan_dlm_info = 2) THEN 1 ELSE 0 END))) as kejelasan_dlm_info2,
	(sum((case when(kejelasan_dlm_info = 3) THEN 1 ELSE 0 END))) as kejelasan_dlm_info3,
	(sum((case when(kejelasan_dlm_info = 4) THEN 1 ELSE 0 END))) as kejelasan_dlm_info4,
	(sum((case when(kejelasan_dlm_info = 5) THEN 1 ELSE 0 END))) as kejelasan_dlm_info5,
	(sum((case when(solusi = 1) THEN 1 ELSE 0 END))) as solusi1,  
	(sum((case when(solusi = 2) THEN 1 ELSE 0 END))) as solusi2,
	(sum((case when(solusi = 3) THEN 1 ELSE 0 END))) as solusi3,
	(sum((case when(solusi = 4) THEN 1 ELSE 0 END))) as solusi4,
	(sum((case when(solusi = 5) THEN 1 ELSE 0 END))) as solusi5,
	(sum((case when(penguasaan_produk = 1) THEN 1 ELSE 0 END))) as penguasaan_produk1,  
	(sum((case when(penguasaan_produk = 2) THEN 1 ELSE 0 END))) as penguasaan_produk2,
	(sum((case when(penguasaan_produk = 3) THEN 1 ELSE 0 END))) as penguasaan_produk3,
	(sum((case when(penguasaan_produk = 4) THEN 1 ELSE 0 END))) as penguasaan_produk4,
	(sum((case when(penguasaan_produk = 5) THEN 1 ELSE 0 END))) as penguasaan_produk5,
	(sum((case when(ketepatan_waktu = 1) THEN 1 ELSE 0 END))) as ketepatan_waktu1,  
	(sum((case when(ketepatan_waktu = 2) THEN 1 ELSE 0 END))) as ketepatan_waktu2,
	(sum((case when(ketepatan_waktu = 3) THEN 1 ELSE 0 END))) as ketepatan_waktu3,
	(sum((case when(ketepatan_waktu = 4) THEN 1 ELSE 0 END))) as ketepatan_waktu4,
	(sum((case when(ketepatan_waktu = 5) THEN 1 ELSE 0 END))) as ketepatan_waktu5,
	(sum((case when(manfaat_produk = 1) THEN 1 ELSE 0 END))) as manfaat_produk1,  
	(sum((case when(manfaat_produk = 2) THEN 1 ELSE 0 END))) as manfaat_produk2,
	(sum((case when(manfaat_produk = 3) THEN 1 ELSE 0 END))) as manfaat_produk3,
	(sum((case when(manfaat_produk = 4) THEN 1 ELSE 0 END))) as manfaat_produk4,
	(sum((case when(manfaat_produk = 5) THEN 1 ELSE 0 END))) as manfaat_produk5,
	(sum((case when(pemahaman_resiko = 1) THEN 1 ELSE 0 END))) as pemahaman_resiko1,  
	(sum((case when(pemahaman_resiko = 2) THEN 1 ELSE 0 END))) as pemahaman_resiko2,
	(sum((case when(pemahaman_resiko = 3) THEN 1 ELSE 0 END))) as pemahaman_resiko3,
	(sum((case when(pemahaman_resiko = 4) THEN 1 ELSE 0 END))) as pemahaman_resiko4,
	(sum((case when(pemahaman_resiko = 5) THEN 1 ELSE 0 END))) as pemahaman_resiko5,
	(sum((case when(perlindungan_asuransi = 1) THEN 1 ELSE 0 END))) as perlindungan_asuransi1,  
	(sum((case when(perlindungan_asuransi = 2) THEN 1 ELSE 0 END))) as perlindungan_asuransi2,
	(sum((case when(perlindungan_asuransi = 3) THEN 1 ELSE 0 END))) as perlindungan_asuransi3,
	(sum((case when(perlindungan_asuransi = 4) THEN 1 ELSE 0 END))) as perlindungan_asuransi4,
	(sum((case when(perlindungan_asuransi = 5) THEN 1 ELSE 0 END))) as perlindungan_asuransi5,
	(sum((case when(tarif_premi = 1) THEN 1 ELSE 0 END))) as tarif_premi1,  
	(sum((case when(tarif_premi = 2) THEN 1 ELSE 0 END))) as tarif_premi2,
	(sum((case when(tarif_premi = 3) THEN 1 ELSE 0 END))) as tarif_premi3,
	(sum((case when(tarif_premi = 4) THEN 1 ELSE 0 END))) as tarif_premi4,
	(sum((case when(tarif_premi = 5) THEN 1 ELSE 0 END))) as tarif_premi5,
	(sum((case when(kelayakan_beban_biaya = 1) THEN 1 ELSE 0 END))) as kelayakan_beban_biaya1,  
	(sum((case when(kelayakan_beban_biaya = 2) THEN 1 ELSE 0 END))) as kelayakan_beban_biaya2,
	(sum((case when(kelayakan_beban_biaya = 3) THEN 1 ELSE 0 END))) as kelayakan_beban_biaya3,
	(sum((case when(kelayakan_beban_biaya = 4) THEN 1 ELSE 0 END))) as kelayakan_beban_biaya4,
	(sum((case when(kelayakan_beban_biaya = 5) THEN 1 ELSE 0 END))) as kelayakan_beban_biaya5,
	(sum((case when(penggunaan_policy = 1) THEN 1 ELSE 0 END))) as penggunaan_policy1,  
	(sum((case when(penggunaan_policy = 2) THEN 1 ELSE 0 END))) as penggunaan_policy2,
	(sum((case when(penggunaan_policy = 3) THEN 1 ELSE 0 END))) as penggunaan_policy3,
	(sum((case when(penggunaan_policy = 4) THEN 1 ELSE 0 END))) as penggunaan_policy4,
	(sum((case when(penggunaan_policy = 5) THEN 1 ELSE 0 END))) as penggunaan_policy5,
	(sum((case when(ketepatan_waktu_mail_sms = 1) THEN 1 ELSE 0 END))) as ketepatan_waktu_mail_sms1,  
	(sum((case when(ketepatan_waktu_mail_sms = 2) THEN 1 ELSE 0 END))) as ketepatan_waktu_mail_sms2,
	(sum((case when(ketepatan_waktu_mail_sms = 3) THEN 1 ELSE 0 END))) as ketepatan_waktu_mail_sms3,
	(sum((case when(ketepatan_waktu_mail_sms = 4) THEN 1 ELSE 0 END))) as ketepatan_waktu_mail_sms4,
	(sum((case when(ketepatan_waktu_mail_sms = 5) THEN 1 ELSE 0 END))) as ketepatan_waktu_mail_sms5,
	(sum((case when(kemudahan_call_center = 1) THEN 1 ELSE 0 END))) as kemudahan_call_center1,  
	(sum((case when(kemudahan_call_center = 2) THEN 1 ELSE 0 END))) as kemudahan_call_center2,
	(sum((case when(kemudahan_call_center = 3) THEN 1 ELSE 0 END))) as kemudahan_call_center3,
	(sum((case when(kemudahan_call_center = 4) THEN 1 ELSE 0 END))) as kemudahan_call_center4,
	(sum((case when(kemudahan_call_center = 5) THEN 1 ELSE 0 END))) as kemudahan_call_center5
	from eka.mst_kuesioner_pelayanan
	)
	</select>

	<select id="elions.uw.getDataReinsurer" parameterClass="java.lang.Integer" resultClass="com.ekalife.elions.model.Reinsurer" >
        select lsrei_id, lsre_nama, lsre_alamat, lsre_telpon, 
               lsre_fax, lsre_contact, lsre_account_gl, lsre_email 
          from eka.lst_reinsurer
		 where lsrei_id = #value#			
	</select>
	
	<select id="elions.uw.selectDetailAgen" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		select a.msag_id, b.mcl_first, b.MSPE_PLACE_BIRTH, b.MSPE_DATE_BIRTH, b.MSPE_SEX, b.MSPE_NO_IDENTITY, c.ALAMAT_RUMAH, c.KOTA_RUMAH,
		c.KD_POS_RUMAH, c.TELPON_RUMAH, c.NO_HP, b.mspe_email EMAIL, a.msag_tabungan, a.LBN_ID, (select x.lsbp_id from eka.lst_bank x where x.lbn_id=a.lbn_id) lsbp_id,
		b.LSNE_ID, b.MSPE_STS_MRT, b.LSAG_ID, b.LSED_ID, b.MKL_KERJA
		from eka.mst_agent a, eka.mst_client_new b, eka.mst_address_new c
		where a.mcl_id = b.mcl_id and b.mcl_id = c.mcl_id
		and a.msag_id = #value#
	</select>
	
	<select id="elions.uw.selectLcChecklistWoMedis" resultClass="string" parameterClass="string">
		select lc_id from eka.lst_checklist where lc_parent_id !=39 order by lc_id
	</select>
	
	<select id="elions.uw.selectHealthChecklist" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select a.reg_spaj, a.mste_insured_no, a.hc_id, b.hc_name, a.hc_value
			from eka.mst_health_checklist a,
			     eka.lst_health_checklist b
			where a.hc_id = b.hc_id
			and a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
			<isNotNull property="insured_no">and a.mste_insured_no = #insured_no#</isNotNull>
		order by a.mste_insured_no
	</select>
	
	<select id="elions.uw.selectListHealth" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select a.hc_id, a.hc_name
		from eka.lst_health_checklist a
		order by a.hc_id
	</select>
	
	<select id="elions.uw.selectMedQuest" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.MedQuest">
		  SELECT a.*, b.lsre_id,
			  	 case
	                when (c.lsbs_id = 163 and (c.lsdbs_number between 21 and 25)) or <!-- helpdesk [148055] produk DMTM Dana Sejaterah 163 26-30 & Smile Sarjana 173 7-9, untuk UP > 200jt SIO ada tambah questionare ## helpdesk [150296] DMTM BSIM 163 21-25 tambah simple questionare SIO+ -->
	                     (c.lsbs_id = 173 and (c.lsdbs_number between 7 and 9)) then 'SIMPLE_SIO'
	                else 'NORMAL'
	             end as jenis_quest
            FROM eka.mst_additional_desc_insured a
                 left join eka.mst_policy b on (a.reg_spaj = b.reg_spaj)
                 left join eka.mst_product_insured c on (a.reg_spaj = c.reg_spaj)
		   WHERE a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		   <isNotNull property="insured_no">AND a.mste_insured_no = #insured_no#</isNotNull>
		ORDER BY a.mste_insured_no		
	</select>
	
	<select id="elions.uw.selectNonClearCaseAllMedQuest" parameterClass="string" resultClass="int">
		select count(msadm_clear_case)
			from EKA.MST_ADDITIONAL_DESC_INSURED
			where reg_spaj =rpad(replace(#spaj#,'.'),11,' ')
			and msadm_clear_case not in (1)
		
	</select>
	
	<!--<select id="elions.uw.selectCounterTmms" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT nvl(msco_value,0) msco_value
		  FROM eka.mst_counter@EB
		 WHERE msco_number =#aplikasi# AND lca_id = #cabang#
		 FOR UPDATE
	</select>-->
	
	<select id="elions.uw.selectCounterTmms" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT nvl(msco_value,0) msco_value
		  FROM eka.mst_counter@EB
		 WHERE msco_number =#aplikasi# AND lca_id = #cabang#
	</select>
	
	<select id="elions.uw.selectTMProduct" parameterClass="string" resultClass="java.util.HashMap">
		select * from eka.lst_tm_product@EB where product_code=#value#
	</select>
	
	<select id="elions.uw.selectCetakPolisMaKemarin" resultClass="java.util.HashMap">
		select agent.mcl_first agent, pp.mcl_first pp, ttg.mcl_first ttg, a.reg_spaj, e.msp_fire_id, 
		       a.mspo_policy_no, f.no_kartu no_simas_card, e.no_kartu no_kartu_pas, h.lsdbs_name, i.lscb_pay_mode,
		       g.mspr_premium, m.mu_jlh_tu, g.mspr_beg_date, b.mste_tgl_terima_spaj, b.mste_input_date, a.mspo_date_print, 
		       j.lssp_status, k.lus_full_name, b.mste_tgl_aksep, l.msps_date, l.msps_desc, to_char(sysdate-1,'dd/mm/yyyy') periode,
		       n.status_accept, uw.lus_full_name uw_aksep, g.mspr_tsi, g.lsbs_id
		  from eka.mst_policy a,
		       eka.mst_insured b,
		       eka.mst_client_new pp,
		       eka.mst_client_new ttg,
		       eka.lst_user uw,
		       eka.mst_agent_prod c,
		       eka.mst_agent d,
		       eka.mst_client_new agent,
		       eka.mst_pas_sms e,
		       eka.mst_simcard f,
		       eka.mst_product_insured g,
		       eka.lst_det_bisnis h,
		       eka.lst_pay_mode i,
		       eka.lst_policy_status j,
		       eka.lst_user k,
		       (select * 
		          from eka.mst_position_spaj 
		         where (msps_date,reg_spaj) in (select min(msps_date) msps_date,reg_spaj 
		                                          from eka.mst_position_spaj 
		                                         where lssa_id = 10
		                                      group by reg_spaj)) l,
		       eka.mst_ulink m,
		       eka.lst_status_accept n
		 where a.reg_spaj = b.reg_spaj
		   and a.mspo_policy_holder = pp.mcl_id
		   and b.mste_insured = ttg.mcl_id
		   and a.reg_spaj = c.reg_spaj
		   and c.lsle_id = 4 
		   and c.msag_id = d.msag_id
		   and d.mcl_id = agent.mcl_id
		   and a.reg_spaj = e.reg_spaj(+)
		   and a.reg_spaj = f.reg_spaj(+)
		   and a.reg_spaj = g.reg_spaj
		   and g.lsbs_id = h.lsbs_id
		   and g.lsdbs_number = h.lsdbs_number
		   and a.lscb_id = i.lscb_id
		   and a.lssp_id = j.lssp_id
		   and a.lus_id = k.lus_id (+)
		   and a.reg_spaj = l.reg_spaj(+)
		   and a.reg_spaj = m.reg_spaj(+)
		   and m.mu_ke(+) = 1
		   and a.lca_id = 58
		   and b.lssa_id = n.lssa_id
		   and trunc(mste_input_date) = trunc(sysdate)-1
		   and n.lssa_id != 5
		   and b.lus_id = uw.lus_id
		   and a.lssp_id !=14
	</select>
	
	<select id="elions.uw.selectPolisMaBlmAcp" resultClass="java.util.HashMap">
		select agent.mcl_first agent, pp.mcl_first pp, ttg.mcl_first ttg, a.reg_spaj, e.msp_fire_id, 
		       a.mspo_policy_no, f.no_kartu no_simas_card, e.no_kartu no_kartu_pas, h.lsdbs_name, i.lscb_pay_mode,
		       g.mspr_premium, m.mu_jlh_tu, g.mspr_beg_date, b.mste_tgl_terima_spaj, b.mste_input_date, a.mspo_date_print, 
		       j.lssp_status, k.lus_full_name, b.mste_tgl_aksep, l.msps_date, l.msps_desc, to_char(sysdate-1,'dd/mm/yyyy') periode,
		       n.status_accept, uw.lus_full_name uw_aksep, g.mspr_tsi, g.lsbs_id
		  from eka.mst_policy a,
		       eka.mst_insured b,
		       eka.mst_client_new pp,
		       eka.mst_client_new ttg,
		       eka.lst_user uw,
		       eka.mst_agent_prod c,
		       eka.mst_agent d,
		       eka.mst_client_new agent,
		       eka.mst_pas_sms e,
		       eka.mst_simcard f,
		       eka.mst_product_insured g,
		       eka.lst_det_bisnis h,
		       eka.lst_pay_mode i,
		       eka.lst_policy_status j,
		       eka.lst_user k,
		       (select * 
		          from eka.mst_position_spaj 
		         where (msps_date,reg_spaj) in (select min(msps_date) msps_date,reg_spaj 
		                                          from eka.mst_position_spaj 
		                                         where lssa_id in(3,4,10)
		                                      group by reg_spaj)) l,
		       eka.mst_ulink m,
		       eka.lst_status_accept n
		 where a.reg_spaj = b.reg_spaj
		   and a.mspo_policy_holder = pp.mcl_id
		   and b.mste_insured = ttg.mcl_id
		   and a.reg_spaj = c.reg_spaj
		   and c.lsle_id = 4 
		   and c.msag_id = d.msag_id
		   and d.mcl_id = agent.mcl_id
		   and a.reg_spaj = e.reg_spaj(+)
		   and a.reg_spaj = f.reg_spaj(+)
		   and a.reg_spaj = g.reg_spaj
		   and g.lsbs_id = h.lsbs_id
		   and g.lsdbs_number = h.lsdbs_number
		   and a.lscb_id = i.lscb_id
		   and a.lssp_id = j.lssp_id
		   and a.lus_id = k.lus_id (+)
		   and a.reg_spaj = l.reg_spaj(+)
		   and a.reg_spaj = m.reg_spaj(+)
		   and m.mu_ke(+) = 1
		   and a.lca_id = 58
		   and b.lssa_id = n.lssa_id
		   and a.lspd_id in(1,2,4,6)
		   and b.lus_id = uw.lus_id
		   and a.lssp_id !=14
		   order by a.reg_spaj, g.lsbs_id
	</select>
	
	<select id="elions.uw.selectAksepAgen" parameterClass="string" resultClass="string">
		select c.mspe_email
		from eka.mst_agent_prod a, eka.mst_agent b, eka.mst_client_new c
		where a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
			and a.lsle_id = 4
			and a.msag_id = b.msag_id
			and b.mcl_id = c.mcl_id
    </select>
    
    <select id="elions.uw.selectAksepAdmin" parameterClass="string" resultClass="string">
		select b.lus_email
		from eka.mst_policy a, eka.lst_user b
		where a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
			and b.lus_id = a.lus_id
    </select>
	
	<select id="elions.uw.selectAksepUserUW" resultClass="java.util.HashMap">
		select distinct b.lus_email
		from eka.mst_position_spaj a, eka.lst_user b
		where a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
			and a.lus_id = b.lus_id
			and b.lde_id = 11
			and a.lssa_id in (5,10)
	</select>

	<select id="elions.uw.selectBackupReas" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select 
		(select a.LSTB_NAME from eka.lst_type_business a where a.lstb_id=x.lstb_id) lini_bisnis,
        (select b.mcl_first from eka.mst_client_new b where b.mcl_id=x.mspo_policy_holder ) nama_pemegang,
        (select c.mcl_first from eka.mst_client_new c, eka.mst_insured d where d.reg_spaj=x.reg_spaj and 
        c.mcl_id=d.mste_insured ) nama_tertanggung,
        x.reg_spaj,
        (select distinct g.lku_id from eka.mst_product_insured g where g.reg_spaj=x.reg_spaj) lku_id,
        (select sum(h.mspr_tsi) from eka.mst_product_insured h where h.reg_spaj=x.reg_spaj) mspr_tsi,
        (select distinct e.id_simultan from eka.mst_simultaneous e where e.reg_spaj=x.reg_spaj) simultan_polis,
        (select f.mste_medical from eka.mst_insured f where f.reg_spaj=x.reg_spaj) medis,
        (select sum(i.mspr_extra) from eka.mst_product_insured i where i.reg_spaj=x.reg_spaj and i.mspr_extra is not null) mspr_extra
		from eka.mst_policy x where x.reg_spaj = #value#
	</select>
	
	<select id="elions.uw.selectLstScan" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.Scan">
		SELECT   id, dept, ket, nmfile, tgl, wajib
		  FROM   EKA.LST_SCAN
		 WHERE   dept = rpad(replace(#dept#,'.'),2,' ')
		 <isNotNull property="wajib">
		 <isEqual property="wajib" compareValue="1">
	             and wajib='1'
	     </isEqual>        
	     </isNotNull>
	</select>
	
	<select id="elions.uw.selectMaxMiIdMstInbox" parameterClass="string" resultClass="string">
	select ( case when(mi_id is null) then '000001' else mi_id end) mi_id
	from(
		select lpad(replace(max(substr(mi_id, 5, length(mi_id))) + 1,''),6,'0') mi_id from eka.mst_inbox where 
		substr(mi_id, 1, 4) = #year#
		)
	</select>
	
	<select id="elions.uw.selectKodeProductUtama" parameterClass="string" resultClass="string">
        SELECT lsbs_id
          FROM eka.mst_product_insured
         WHERE reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
         AND lsbs_id <![CDATA[<]]> 300
    </select>
    
    <select id="elions.uw.flagUpdateMste_Upload_Scan" parameterClass="string" resultClass="int">
        SELECT mste_flag_upload_scan
          FROM eka.mst_insured
         WHERE reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
    </select>
    
     <select id="elions.uw.selectRedFlag" parameterClass="string" resultClass="int">
        SELECT mkl_red_flag
          FROM eka.mst_client_new
         WHERE mcl_id =#mcl_id#
    </select>
    
    <select id="elions.uw.select_title" resultClass="java.util.HashMap">
    select lti_id, lti_jn_title, lti_note from eka.lst_title 
    </select>
	
	<select id="elions.uw.selectMstScan" parameterClass="string" resultClass="com.ekalife.elions.model.Scan">
		SELECT * 
		  FROM eka.mst_scan
		  WHERE no_indek = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectCountKdScan" parameterClass="string" resultClass="int">
		SELECT count(substr(kd_scan,0,2))
		  FROM eka.mst_scan
		 WHERE substr(kd_scan,0,2) = #value#
	</select> 
		<select id="elions.uw.selectNamaRiderNya" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT a.lsdbs_name
		  FROM eka.lst_det_bisnis a
		 WHERE a.lsbs_id = #lsbs_id#
		   AND a.lsdbs_number = #lsdbs_number#
	</select>
	
	<select id="elions.uw.lc_id_value" resultClass="int" parameterClass="int">
    	SELECT lc_id 
    	  FROM eka.lst_checklist
		 WHERE id_scan in (
			SELECT id 
			  FROM eka.lst_scan 
			 WHERE dept = 'UW'
			   AND id =#value#
			)
    </select>
    
    <select id="elions.uw.selectMstInbox" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
    	select *
    	from eka.mst_inbox
    	where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
    	<isEqual property="tipe" compareValue="1">
			and ljj_id = 21
		</isEqual>
		<isEqual property="tipe" compareValue="2">
			and ljj_id = 29
		</isEqual>
		<isEqual property="tipe" compareValue="3">
			and ljj_id = 25
		</isEqual>
		<isEqual property="tipe" compareValue="4">
			and ljj_id = 1
			and lspd_id = 202
		</isEqual> 
		<isEqual property="tipe" compareValue="5">
			and ljj_id = 22
			and lspd_id = 202
		</isEqual>
		<isEqual property="tipe" compareValue="6">
			and ljj_id = 4
		</isEqual>            	
    </select>
    
    <select id="elions.uw.selectMstJobList" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
    	SELECT *
    	  FROM eka.mst_joblist
    	 WHERE ljj_id= #ljj_id#
		   AND lc_id = #lc_id#
    </select>
    
    <select id="elions.uw.selectMst_reas" parameterClass="string" resultClass="int">
        SELECT mste_reas
          FROM eka.mst_insured
         WHERE reg_spaj =#spaj#
    </select>
    
    <select id="elions.uw.selectreportUWIndividu_Agency" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
  		select distinct
		    a.reg_spaj, eka.utils.pemegang(a.reg_spaj)pemegang, eka.utils.tertanggung(a.reg_spaj)tertanggung,
		    a.mspo_input_date tgl_input_spaj, b.lssp_status status_polis, eka.f_lsdbs(a.reg_spaj, d.lsbs_id, d.lsdbs_number) produk, f.lca_nama cabang, j.lsrg_nama,
		    agent.mcl_first nama_penutup, user_cabang.lus_login_name user_cabang,
		    to_char(c.mste_tgl_spaj_doc,'dd/MM/yyyy HH24:mi:ss') tgl_upload_scan,
		    (select msp_fire_id from eka.mst_pas_sms where reg_spaj = a.reg_spaj)fire_id,
		    (case
		        when e.lsdbs_name like '%POWER SAVE%' 
		            then (case when e.lsbs_id = 142 or e.lsbs_id = 158 then (select distinct to_char(mpr_jangka_invest) from eka.mst_powersave_ro where reg_spaj = a.reg_spaj)||' bln MIP'
		                       when e.lsbs_id = 188 then ((case when (select flag_bulanan from eka.mst_psave where reg_spaj = a.reg_spaj)=1 then (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj)|| ' bln MIP' else (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj)||' bln' end))
		                       else '' end)
		        when e.lsdbs_name like '%STABLE LINK%' then((case when (select distinct flag_bulanan from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')=1 then (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')|| ' bln MIP' else (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')||' bln' end))
		        when e.lsdbs_name like '%STABLE SAVE%' then((case when (select distinct flag_bulanan from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')=1 then (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')|| ' bln MIP' else (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')||' bln' end))
		        else '' end)mgi,
		    (select x.msps_desc
		    from eka.mst_position_spaj x, eka.lst_user z
		    where x.reg_spaj = a.reg_spaj
		        and x.lus_id = z.lus_id
		        and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id))keterangan_data,
		    (select z.lus_login_name
		    from eka.mst_position_spaj x, eka.lst_user z
		    where x.reg_spaj = a.reg_spaj
		        and x.lus_id = z.lus_id
		        and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id)
		        and z.lde_id = 11)user_uw,
		        (SELECT mu_jlh_premi FROM eka.mst_ulink where lt_id in (2,5) AND reg_spaj = a.reg_spaj and mu_ke =2) premi_top_up,
		        (SELECT mu_jlh_premi FROM eka.mst_ulink WHERE mu_ke = 1 AND reg_spaj = a.reg_spaj)premi_pokok,
		        K.LSCB_PAY_MODE cara_bayar,l.lku_symbol
		from
		    eka.mst_policy a,
		    eka.lst_policy_status b,
		    eka.mst_insured c,
		    eka.mst_product_insured d,
		    eka.lst_det_bisnis e,
		    eka.lst_cabang f,
		    eka.mst_agent_prod g,
		    eka.mst_agent h,
		    eka.mst_position_spaj i,
		    eka.mst_client_new agent,
		    eka.lst_user user_cabang,
		    eka.lst_region j,
		    eka.lst_pay_mode k,
		    eka.lst_kurs l
		where
		    a.lssp_id = b.lssp_id
		    and a.reg_spaj = c.reg_spaj
		    and a.reg_spaj = d.reg_spaj
		    and d.lsbs_id = e.lsbs_id
		    and d.lsdbs_number = e.lsdbs_number
		    and a.lca_id = f.lca_id
		    and a.reg_spaj = g.reg_spaj
		    and g.msag_id = h.msag_id
		    and h.mcl_id = agent.mcl_id
		    and a.lus_id = user_cabang.lus_id
		    and a.reg_spaj = i.reg_spaj
		    and a.lca_id = j.lca_id
		    and A.LSCB_ID = K.LSCB_ID
		    and a.lku_id = l.lku_id
		    and a.lwk_id = j.lwk_id
		    and a.lsrg_id = j.lsrg_id
		    <isEqual property="status" compareValue="All">
		    and c.lssa_id in (1,3,10,17)
		    and ((select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER KE U/W%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
            or (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 3) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
            or (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 10) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1)
			</isEqual>
			<isEqual property="status" compareValue="New SPAJ">
			and c.lssa_id in (1,17)
			and ((select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER KE U/W%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			or(select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER KE SPEEDY%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1)
			</isEqual>
			<isEqual property="status" compareValue="Further Requirement">
			and c.lssa_id in (3)
			and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 3) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			</isEqual>
			<isEqual property="status" compareValue="Akseptasi Khusus">
			and c.lssa_id in (10)
			and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 10) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			</isEqual>
		    and g.lsle_id = '4'
		    and d.lsbs_id <![CDATA[<]]>300
		    <isEqual property="produk" compareValue="Link">
			and d.lsbs_id in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,190,191,199,200)
			</isEqual>
			<isEqual property="produk" compareValue="Non Link">
			and d.lsbs_id not in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,190,191,199,200)
			</isEqual>
		    <!-- and a.lca_id in (37,42) -->
		    and a.lca_id not in (09,40,44,45,58,59,42,62,65,67)<!-- 42,62,65 dipisah dari agency -->
		    and a.lspd_id != 95
		    <!-- and c.mste_tgl_spaj_doc between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy') -->
		    and a.reg_spaj not in (select
                                        x.reg_spaj
                                    from
                                        eka.mst_policy x,
                                        eka.mst_insured y
                                    where
                                        x.reg_spaj = y.reg_spaj
                                        and x.lca_id in (42,62,01,67)
                                        and y.mste_flag_cc = 3
                                        and x.reg_spaj = a.reg_spaj)
		    order by tgl_upload_scan desc
	</select>
	    
	<select id="elions.uw.selectreportUWIndividu" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 select distinct
            a.reg_spaj, eka.utils.pemegang(a.reg_spaj)pemegang, eka.utils.tertanggung(a.reg_spaj)tertanggung,d.mspr_tsi UP,
            a.mspo_input_date tgl_input_spaj, b.lssp_status status_polis, eka.f_lsdbs(a.reg_spaj, d.lsbs_id, d.lsdbs_number) produk, f.lca_nama cabang, j.lsrg_nama,
            agent.mcl_first nama_penutup, user_cabang.lus_login_name user_cabang,
            to_char(c.mste_tgl_spaj_doc,'dd/MM/yyyy HH24:mi:ss') tgl_upload_scan,
            i.msp_fire_id fire_id,            
            (select x.msps_desc
            from eka.mst_position_spaj x, eka.lst_user z
            where x.reg_spaj = a.reg_spaj
                and x.lus_id = z.lus_id
                and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id))keterangan_data,
            (select z.lus_login_name
            from eka.mst_position_spaj x, eka.lst_user z
            where x.reg_spaj = a.reg_spaj
                and x.lus_id = z.lus_id
                and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id)
                and z.lde_id = 11)user_uw,
                (SELECT mu_jlh_premi FROM eka.mst_ulink where lt_id in (2,5) AND reg_spaj = a.reg_spaj and mu_ke =2) premi_top_up,
                (SELECT mu_jlh_premi FROM eka.mst_ulink WHERE mu_ke = 1 AND reg_spaj = a.reg_spaj)premi_pokok,
                K.LSCB_PAY_MODE cara_bayar,l.lku_symbol
        from
            eka.mst_policy a,
            eka.lst_policy_status b,
            eka.mst_insured c,
            eka.mst_product_insured d,
            eka.lst_det_bisnis e,
            eka.lst_cabang f,
            eka.mst_agent_prod g,
            eka.mst_agent h,
            eka.mst_pas_sms i,
            eka.mst_client_new agent,
            eka.lst_user user_cabang,
            eka.lst_region j,
            eka.lst_pay_mode k,
            eka.lst_kurs l,
            eka.mst_trans_history m
        where
            a.lssp_id = b.lssp_id
            and a.reg_spaj = c.reg_spaj
            and a.reg_spaj = d.reg_spaj
            and d.lsbs_id = e.lsbs_id
            and d.lsdbs_number = e.lsdbs_number
            and a.lca_id = f.lca_id
            and a.reg_spaj = g.reg_spaj
            and a.reg_spaj=m.reg_spaj
            and g.msag_id = h.msag_id
            and h.mcl_id = agent.mcl_id
            and a.lus_id = user_cabang.lus_id
            and a.reg_spaj = i.reg_spaj(+)
            and a.lca_id = j.lca_id
            and A.LSCB_ID = K.LSCB_ID
            and a.lku_id = l.lku_id
            and a.lwk_id = j.lwk_id
            and a.lsrg_id = j.lsrg_id
            <isEqual property="jenis" compareValue="All">
            	and c.lssa_id in (1,3,10,17)          
            </isEqual>
           <isEqual property="jenis" compareValue="1">
	            and c.lssa_id in (1,17)
	           	and a.lspd_id in (2,27)           	
            </isEqual>
            <isEqual property="jenis" compareValue="2">
            	and c.lssa_id in (3,10)          
            </isEqual>            
            and m.jenis = 23
            and a.lspd_id != 95 
            and g.lsle_id = '4'
            and d.lsbs_id <![CDATA[<]]>300  
            and not ((d.lsbs_id=142 and d.lsdbs_number in(2,9)) or (d.lsbs_id=175 and d.lsdbs_number=2))
            and((m.tgl_transfer_uw between #tanggalAwal# and #tanggalAkhir#+1) or((m.tgl_transfer_uw_speedy between #tanggalAwal# and #tanggalAkhir#+1)))	          		   
	</select>
	
	<select id="elions.uw.selectreportUWIndividu_Bancass1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct
		    a.reg_spaj, eka.utils.pemegang(a.reg_spaj)pemegang, eka.utils.tertanggung(a.reg_spaj)tertanggung,
		    a.mspo_input_date tgl_input_spaj, b.lssp_status status_polis, eka.f_lsdbs(a.reg_spaj, d.lsbs_id, d.lsdbs_number) produk, f.lca_nama cabang,
		    agent.mcl_first nama_penutup, user_cabang.lus_login_name user_cabang,
		    to_char(c.mste_tgl_spaj_doc,'dd/MM/yyyy HH24:mi:ss') tgl_upload_scan,
		    (select msp_fire_id from eka.mst_pas_sms where reg_spaj = a.reg_spaj)fire_id,
		    (case
		        when e.lsdbs_name like '%POWER SAVE%' 
		            then (case when e.lsbs_id = 142 or e.lsbs_id = 158 then (select distinct to_char(mpr_jangka_invest) from eka.mst_powersave_ro where reg_spaj = a.reg_spaj)||' bln MIP'
		                       when e.lsbs_id = 188 then ((case when (select flag_bulanan from eka.mst_psave where reg_spaj = a.reg_spaj)=1 then (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj)|| ' bln MIP' else (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj)||' bln' end))
		                       else '' end)
		        when e.lsdbs_name like '%STABLE LINK%' then((case when (select distinct flag_bulanan from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')=1 then (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')|| ' bln MIP' else (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')||' bln' end))
		        when e.lsdbs_name like '%STABLE SAVE%' then((case when (select distinct flag_bulanan from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')=1 then (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')|| ' bln MIP' else (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')||' bln' end))
		        else '' end)mgi,
		    (select x.msps_desc
		    from eka.mst_position_spaj x, eka.lst_user z
		    where x.reg_spaj = a.reg_spaj
		        and x.lus_id = z.lus_id
		        and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id))keterangan_data,
		    (select z.lus_login_name
		    from eka.mst_position_spaj x, eka.lst_user z
		    where x.reg_spaj = a.reg_spaj
		        and x.lus_id = z.lus_id
		        and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id)
		        and z.lde_id = 11)user_uw
		from
		    eka.mst_policy a,
		    eka.lst_policy_status b,
		    eka.mst_insured c,
		    eka.mst_product_insured d,
		    eka.lst_det_bisnis e,
		    eka.lst_cabang f,
		    eka.mst_agent_prod g,
		    eka.mst_agent h,
		    eka.mst_position_spaj i,
		    eka.mst_reff_bii j,
		    eka.lst_cabang_bii k,
		    eka.mst_client_new agent,
		    eka.lst_user user_cabang
		where
		    a.lssp_id = b.lssp_id
		    and a.reg_spaj = c.reg_spaj
		    and a.reg_spaj = d.reg_spaj
		    and d.lsbs_id = e.lsbs_id
		    and d.lsdbs_number = e.lsdbs_number
		    and a.lca_id = f.lca_id
		    and a.reg_spaj = g.reg_spaj
		    and g.msag_id = h.msag_id
		    and h.mcl_id = agent.mcl_id
		    and a.lus_id = user_cabang.lus_id
		    and a.reg_spaj = i.reg_spaj
		    and a.reg_spaj = j.reg_spaj(+)
		    and j.lcb_no = k.lcb_no(+)
		    <isEqual property="status" compareValue="All">
		    and c.lssa_id in (1,3,10,17)
		    and ((select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER KE U/W%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
            or (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 3) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
            or (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 10) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1)
			</isEqual>
			<isEqual property="status" compareValue="New SPAJ">
			and c.lssa_id in (1)
			and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER KE U/W%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			</isEqual>
			<isEqual property="status" compareValue="Further Requirement">
			and c.lssa_id in (3)
			and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 3) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			</isEqual>
			<isEqual property="status" compareValue="Akseptasi Khusus">
			and c.lssa_id in (10)
			and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 10) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			</isEqual>
		    and g.lsle_id = '4'
		    and d.lsbs_id <![CDATA[<]]>300
		    <isEqual property="produk" compareValue="Link">
			and d.lsbs_id in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,190,191,199)
			</isEqual>
			<isEqual property="produk" compareValue="Non Link">
			and d.lsbs_id not in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,190,191,199)
			</isEqual>
		    and a.lca_id = '09'
		    and UPPER(k.team_name) like '%YANTI SUMIRKAN%'
		    <!-- and c.mste_tgl_spaj_doc between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy') -->
		    and a.lspd_id != 95
		    order by tgl_upload_scan desc
	</select>
	
	<select id="elions.uw.selectreportUWIndividu_Bancass2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct
		    a.reg_spaj, eka.utils.pemegang(a.reg_spaj)pemegang, eka.utils.tertanggung(a.reg_spaj)tertanggung,
		    a.mspo_input_date tgl_input_spaj, b.lssp_status status_polis, eka.f_lsdbs(a.reg_spaj, d.lsbs_id, d.lsdbs_number) produk, f.lca_nama cabang, <!-- bancass2.nama_cabang, -->
		    m.nama_reff nama_penutup, user_cabang.lus_login_name user_cabang,
		    to_char(c.mste_tgl_spaj_doc,'dd/MM/yyyy HH24:mi:ss') tgl_upload_scan,
		    (select msp_fire_id from eka.mst_pas_sms where reg_spaj = a.reg_spaj)fire_id,
		    (case
		        when e.lsdbs_name like '%POWER SAVE%' 
		            then (case when e.lsbs_id = 142 or e.lsbs_id = 158 then (select distinct to_char(mpr_jangka_invest) from eka.mst_powersave_ro where reg_spaj = a.reg_spaj)||' bln MIP'
		                       when e.lsbs_id = 188 then ((case when (select flag_bulanan from eka.mst_psave where reg_spaj = a.reg_spaj)=1 then (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj)|| ' bln MIP' else (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj)||' bln' end))
		                       else '' end)
		        when e.lsdbs_name like '%STABLE LINK%' then((case when (select distinct flag_bulanan from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')=1 then (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')|| ' bln MIP' else (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')||' bln' end))
		        when e.lsdbs_name like '%STABLE SAVE%' then((case when (select distinct flag_bulanan from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')=1 then (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')|| ' bln MIP' else (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')||' bln' end))
		        else '' end)mgi,
		    (select x.msps_desc
		    from eka.mst_position_spaj x, eka.lst_user z
		    where x.reg_spaj = a.reg_spaj
		        and x.lus_id = z.lus_id
		        and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id))keterangan_data,
		    (select z.lus_login_name
		    from eka.mst_position_spaj x, eka.lst_user z
		    where x.reg_spaj = a.reg_spaj
		        and x.lus_id = z.lus_id
		        and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id)
		        and z.lde_id = 11)user_uw
		from
		    eka.mst_policy a,
		    eka.lst_policy_status b,
		    eka.mst_insured c,
		    eka.mst_product_insured d,
		    eka.lst_det_bisnis e,
		    eka.lst_cabang f,
		    eka.mst_agent_prod g,
		    eka.mst_agent h,
		    eka.mst_position_spaj i,
		    eka.mst_reff_bii j,
		    eka.lst_cabang_bii k,
		    eka.lst_wakil l,
		    eka.lst_reff_bii m,
		    eka.mst_client_new agent,
		    eka.lst_user user_cabang
		    <!-- (select a.reg_spaj, b.nama_cabang
		        from eka.mst_reff_bii a,
		             eka.lst_cabang_bii b
		        where a.lcb_penutup = b.lcb_no
		              and b.jenis = 2)bancass2 -->
		where
		    a.lssp_id = b.lssp_id
		    and a.reg_spaj = c.reg_spaj
		    and a.reg_spaj = d.reg_spaj
		    and d.lsbs_id = e.lsbs_id
		    and d.lsdbs_number = e.lsdbs_number
		    and a.lca_id = f.lca_id
		    and a.reg_spaj = g.reg_spaj
		    and g.msag_id = h.msag_id
		    and h.mcl_id = agent.mcl_id
		    and a.lus_id = user_cabang.lus_id
		    and a.reg_spaj = i.reg_spaj
		    and a.reg_spaj = j.reg_spaj(+)
		    and j.lcb_no = k.lcb_no(+)
		    and a.lca_id = l.lca_id
		    and a.lwk_id = l.lwk_id
		    and j.lrb_id = m.lrb_id
		    <!-- and l.flag_print_cabang = 0 -->
		    <isEqual property="status" compareValue="All">
		    and c.lssa_id in (1,3,10,17)
		    and ((select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER KE U/W%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
            or (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 3) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
            or (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 10) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1)
			</isEqual>
			<isEqual property="status" compareValue="New SPAJ">
			and c.lssa_id in (1,17)
			and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER KE U/W%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			</isEqual>
			<isEqual property="status" compareValue="Further Requirement">
			and c.lssa_id in (3)
			and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 3) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			</isEqual>
			<isEqual property="status" compareValue="Akseptasi Khusus">
			and c.lssa_id in (10)
			and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 10) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			</isEqual>
		    and g.lsle_id = '4'
		    and d.lsbs_id <![CDATA[<]]>300
		    <isEqual property="produk" compareValue="Link">
			and d.lsbs_id in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,190,191,199)
			</isEqual>
			<isEqual property="produk" compareValue="Non Link">
			and d.lsbs_id not in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,190,191,199,188,164)<!-- simas prima(188) dan new stable link tdk termasuk(164) -->
			</isEqual>
		    and a.lca_id = '09'
		    and UPPER(k.team_name) not like '%YANTI SUMIRKAN%'
		    and a.reg_spaj not in (select reg_spaj
                                    from eka.mst_product_insured
                                    where ((lsbs_id = 175 and lsdbs_number = 2)  or (lsbs_id = 142 and lsdbs_number = 9) or (lsbs_id = 164 and lsdbs_number = 11)))
		    <!-- and a.reg_spaj = bancass2.reg_spaj -->
		    and a.lspd_id != 95
		    <!-- and c.mste_tgl_spaj_doc between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy') -->
		    order by tgl_upload_scan desc
	</select>
	
	<select id="elions.uw.selectreportUWIndividu_Sekuritas" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct
		    a.reg_spaj, eka.utils.pemegang(a.reg_spaj)pemegang, eka.utils.tertanggung(a.reg_spaj)tertanggung,
		    a.mspo_input_date tgl_input_spaj, b.lssp_status status_polis, eka.f_lsdbs(a.reg_spaj, d.lsbs_id, d.lsdbs_number) produk, f.lca_nama cabang, sekuritas.nama_cabang,
		    agent.mcl_first nama_penutup, user_cabang.lus_login_name user_cabang,
		    to_char(c.mste_tgl_spaj_doc, 'dd/MM/yyyy HH24:mi:ss') tgl_upload_scan,
		    (select msp_fire_id from eka.mst_pas_sms where reg_spaj = a.reg_spaj)fire_id,
		    (case
		        when e.lsdbs_name like '%POWER SAVE%' 
		            then (case when e.lsbs_id = 142 or e.lsbs_id = 158 then (select distinct to_char(mpr_jangka_invest) from eka.mst_powersave_ro where reg_spaj = a.reg_spaj)||' bln MIP'
		                       when e.lsbs_id = 188 then ((case when (select flag_bulanan from eka.mst_psave where reg_spaj = a.reg_spaj)=1 then (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj)|| ' bln MIP' else (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj)||' bln' end))
		                       else '' end)
		        when e.lsdbs_name like '%STABLE LINK%' then((case when (select distinct flag_bulanan from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')=1 then (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')|| ' bln MIP' else (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')||' bln' end))
		        when e.lsdbs_name like '%STABLE SAVE%' then((case when (select distinct flag_bulanan from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')=1 then (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')|| ' bln MIP' else (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')||' bln' end))
		        else '' end)mgi,
		    (select x.msps_desc
		    from eka.mst_position_spaj x, eka.lst_user z
		    where x.reg_spaj = a.reg_spaj
		        and x.lus_id = z.lus_id
		        and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id))keterangan_data,
		    (select z.lus_login_name
		    from eka.mst_position_spaj x, eka.lst_user z
		    where x.reg_spaj = a.reg_spaj
		        and x.lus_id = z.lus_id
		        and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id)
		        and z.lde_id = 11)user_uw
		from
		    eka.mst_policy a,
		    eka.lst_policy_status b,
		    eka.mst_insured c,
		    eka.mst_product_insured d,
		    eka.lst_det_bisnis e,
		    eka.lst_cabang f,
		    eka.mst_agent_prod g,
		    eka.mst_agent h,
		    eka.mst_position_spaj i,
		    eka.mst_client_new agent,
		    eka.lst_user user_cabang,
		    (select a.reg_spaj, b.nama_cabang
		        from eka.mst_reff_bii a,
		             eka.lst_cabang_bii b
		        where a.lcb_penutup = b.lcb_no
		              and b.jenis = 3)sekuritas
		where
		    a.lssp_id = b.lssp_id
		    and a.reg_spaj = c.reg_spaj
		    and a.reg_spaj = d.reg_spaj
		    and d.lsbs_id = e.lsbs_id
		    and d.lsdbs_number = e.lsdbs_number
		    and a.lca_id = f.lca_id
		    and a.reg_spaj = g.reg_spaj
		    and g.msag_id = h.msag_id
		    and h.mcl_id = agent.mcl_id
		    and a.lus_id = user_cabang.lus_id
		    and a.reg_spaj = i.reg_spaj
		    <isEqual property="status" compareValue="All">
		    and c.lssa_id in (1,3,10,17)
		    and ((select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER KE U/W%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
            or (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 3) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
            or (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 10) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1)
			</isEqual>
			<isEqual property="status" compareValue="New SPAJ">
			and c.lssa_id in (1,17)
			and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER KE U/W%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			</isEqual>
			<isEqual property="status" compareValue="Further Requirement">
			and c.lssa_id in (3)
			and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 3) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			</isEqual>
			<isEqual property="status" compareValue="Akseptasi Khusus">
			and c.lssa_id in (10)
			and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 10) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			</isEqual>
		    and g.lsle_id = '4'
		    and d.lsbs_id <![CDATA[<]]>300
		    <isEqual property="produk" compareValue="Link">
			and d.lsbs_id in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,190,191,199)
			</isEqual>
			<isEqual property="produk" compareValue="Non Link">
			and d.lsbs_id not in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,190,191,199)
			</isEqual>
		    and a.lca_id = '09'
		    and a.reg_spaj = sekuritas.reg_spaj
		    and a.lspd_id != 95
		    <!-- and c.mste_tgl_spaj_doc between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy') -->
		    order by tgl_upload_scan desc
	</select>
	
	<select id="elions.uw.selectreportUWIndividu_ws_payroll" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct
		    a.reg_spaj, eka.utils.pemegang(a.reg_spaj)pemegang, eka.utils.tertanggung(a.reg_spaj)tertanggung,
		    a.mspo_input_date tgl_input_spaj, b.lssp_status status_polis, eka.f_lsdbs(a.reg_spaj, d.lsbs_id, d.lsdbs_number) produk, f.lca_nama cabang, j.lsrg_nama,
		    agent.mcl_first nama_penutup, user_cabang.lus_login_name user_cabang,
		    to_char(c.mste_tgl_spaj_doc,'dd/MM/yyyy HH24:mi:ss') tgl_upload_scan,
		    (select msp_fire_id from eka.mst_pas_sms where reg_spaj = a.reg_spaj)fire_id,
		    (case
		        when e.lsdbs_name like '%POWER SAVE%' 
		            then (case when e.lsbs_id = 142 or e.lsbs_id = 158 then (select distinct to_char(mpr_jangka_invest) from eka.mst_powersave_ro where reg_spaj = a.reg_spaj)||' bln MIP'
		                       when e.lsbs_id = 188 then ((case when (select flag_bulanan from eka.mst_psave where reg_spaj = a.reg_spaj)=1 then (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj)|| ' bln MIP' else (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj)||' bln' end))
		                       else '' end)
		        when e.lsdbs_name like '%STABLE LINK%' then((case when (select distinct flag_bulanan from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')=1 then (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')|| ' bln MIP' else (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')||' bln' end))
		        when e.lsdbs_name like '%STABLE SAVE%' then((case when (select distinct flag_bulanan from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')=1 then (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')|| ' bln MIP' else (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')||' bln' end))
		        else '' end)mgi,
		    (select x.msps_desc
		    from eka.mst_position_spaj x, eka.lst_user z
		    where x.reg_spaj = a.reg_spaj
		        and x.lus_id = z.lus_id
		        and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id))keterangan_data,
		    (select z.lus_login_name
		    from eka.mst_position_spaj x, eka.lst_user z
		    where x.reg_spaj = a.reg_spaj
		        and x.lus_id = z.lus_id
		        <!-- and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id) -->
		        and z.lde_id = 11
		        and rownum = 1)user_uw, pr.mcl_first nm_perusahaan, k.nik 
		from
		    eka.mst_policy a,
		    eka.lst_policy_status b,
		    eka.mst_insured c,
		    eka.mst_product_insured d,
		    eka.lst_det_bisnis e,
		    eka.lst_cabang f,
		    eka.mst_agent_prod g,
		    eka.mst_agent h,
		    eka.mst_position_spaj i,
		    eka.mst_client_new agent,
		    eka.lst_user user_cabang,
		    eka.lst_region j,
		    eka.mst_client_new pr,
		    eka.mst_worksite_flag k
		where
		    a.lssp_id = b.lssp_id
		    and a.reg_spaj = c.reg_spaj
		    and a.reg_spaj = d.reg_spaj
		    and d.lsbs_id = e.lsbs_id
		    and d.lsdbs_number = e.lsdbs_number
		    and a.lca_id = f.lca_id
		    and a.reg_spaj = g.reg_spaj
		    and g.msag_id = h.msag_id
		    and h.mcl_id = agent.mcl_id
		    and a.lus_id = user_cabang.lus_id
		    and a.reg_spaj = i.reg_spaj
		    and a.lca_id = j.lca_id
		    and a.lwk_id = j.lwk_id
		    and a.lsrg_id = j.lsrg_id
		    and a.mspo_customer = pr.mcl_id(+) 
    		and a.reg_spaj = k.reg_spaj(+) 
		    <isEqual property="status" compareValue="All">
		    and c.lssa_id in (1,3,10,17)
		    and ((select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER KE U/W%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
            or (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 3) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
            or (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 10) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1)
			</isEqual>
			<isEqual property="status" compareValue="New SPAJ">
			and c.lssa_id in (1,17)
			and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER KE U/W%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			</isEqual>
			<isEqual property="status" compareValue="Further Requirement">
			and c.lssa_id in (3)
			and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 3) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			</isEqual>
			<isEqual property="status" compareValue="Akseptasi Khusus">
			and c.lssa_id in (10)
			and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 10) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
			</isEqual>
		    and g.lsle_id = '4'
		    and d.lsbs_id <![CDATA[<]]>300
		    <isEqual property="produk" compareValue="Link">
			and d.lsbs_id in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,190,191,199)
			</isEqual>
			<isEqual property="produk" compareValue="Non Link">
			and d.lsbs_id not in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,190,191,199)
			</isEqual>
		    and a.lca_id in (42,62,65)
		    and a.lspd_id not in (1,95)<!-- posisi Input SPAJ(1) tidak diikutsertakan -->
		    and c.mste_flag_cc = 3
		    <!-- and c.mste_tgl_spaj_doc between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy') -->
		    order by tgl_upload_scan desc
	</select>
	
	<select id="elions.uw.selectreportUWIndividu_WS_MNC_FCD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select * from(
			select distinct
			    a.reg_spaj, eka.utils.pemegang(a.reg_spaj)pemegang, eka.utils.tertanggung(a.reg_spaj)tertanggung,
			    a.mspo_input_date tgl_input_spaj, b.lssp_status status_polis, eka.f_lsdbs(a.reg_spaj, d.lsbs_id, d.lsdbs_number) produk, f.lca_nama cabang, <!-- j.lsrg_nama, -->
			    agent.mcl_first nama_penutup, user_cabang.lus_login_name user_cabang,
			    to_char(c.mste_tgl_spaj_doc,'dd/MM/yyyy HH24:mi:ss') tgl_upload_scan,
			    (select msp_fire_id from eka.mst_pas_sms where reg_spaj = a.reg_spaj)fire_id,
			    (case
			        when e.lsdbs_name like '%POWER SAVE%' 
			            then (case when e.lsbs_id = 142 or e.lsbs_id = 158 then (select distinct to_char(mpr_jangka_invest) from eka.mst_powersave_ro where reg_spaj = a.reg_spaj)||' bln MIP'
			                       when e.lsbs_id = 188 then ((case when (select flag_bulanan from eka.mst_psave where reg_spaj = a.reg_spaj)=1 then (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj)|| ' bln MIP' else (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj)||' bln' end))
			                       else '' end)
			        when e.lsdbs_name like '%STABLE LINK%' then((case when (select distinct flag_bulanan from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')=1 then (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')|| ' bln MIP' else (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')||' bln' end))
			        when e.lsdbs_name like '%STABLE SAVE%' then((case when (select distinct flag_bulanan from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')=1 then (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')|| ' bln MIP' else (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')||' bln' end))
			        else '' end)mgi,
			    (select x.msps_desc
			    from eka.mst_position_spaj x, eka.lst_user z
			    where x.reg_spaj = a.reg_spaj
			        and x.lus_id = z.lus_id
			        and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id))keterangan_data,
			    (select z.lus_login_name
			    from eka.mst_position_spaj x, eka.lst_user z
			    where x.reg_spaj = a.reg_spaj
			        and x.lus_id = z.lus_id
			        and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id)
			        and z.lde_id = 11)user_uw
			from
			    eka.mst_policy a,
			    eka.lst_policy_status b,
			    eka.mst_insured c,
			    eka.mst_product_insured d,
			    eka.lst_det_bisnis e,
			    eka.lst_cabang f,
			    eka.mst_agent_prod g,
			    eka.mst_agent h,
			    eka.mst_position_spaj i,
			    eka.mst_client_new agent,
			    eka.lst_user user_cabang,
			    eka.lst_region j
			where
			    a.lssp_id = b.lssp_id
			    and a.reg_spaj = c.reg_spaj
			    and a.reg_spaj = d.reg_spaj
			    and d.lsbs_id = e.lsbs_id
			    and d.lsdbs_number = e.lsdbs_number
			    and a.lca_id = f.lca_id
			    and a.reg_spaj = g.reg_spaj
			    and g.msag_id = h.msag_id
			    and h.mcl_id = agent.mcl_id
			    and a.lus_id = user_cabang.lus_id
			    and a.reg_spaj = i.reg_spaj
			    and a.lca_id = j.lca_id
			    and a.lwk_id = j.lwk_id
			    and a.lsrg_id = j.lsrg_id
			    <isEqual property="status" compareValue="All">
			    and c.lssa_id in (1,3,10,17)
			    and ((select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER % U/W%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
	            or (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 3) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
	            or (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 10) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1)
				</isEqual>
				<isEqual property="status" compareValue="New SPAJ">
				and c.lssa_id in (1,17)
				and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER % U/W%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
				</isEqual>
				<isEqual property="status" compareValue="Further Requirement">
				and c.lssa_id in (3)
				and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 3) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
				</isEqual>
				<isEqual property="status" compareValue="Akseptasi Khusus">
				and c.lssa_id in (10)
				and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 10) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
				</isEqual>
			    and g.lsle_id = '4'
			    and d.lsbs_id <![CDATA[<]]>300
			    <isEqual property="produk" compareValue="Link">
				and d.lsbs_id in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,190,191,199)
				</isEqual>
				<isEqual property="produk" compareValue="Non Link">
				and d.lsbs_id not in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,190,191,199)
				</isEqual>
			    and a.lca_id in (42,62,65,67)
			    <!-- and a.lca_id not in (09,40,44,45,58,59) -->
			    and a.lspd_id != 95
			    <!-- and c.mste_tgl_spaj_doc between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy') -->
			    and a.reg_spaj not in (select
	                                        x.reg_spaj
	                                    from
	                                        eka.mst_policy x,
	                                        eka.mst_insured y
	                                    where
	                                        x.reg_spaj = y.reg_spaj
	                                        and x.lca_id in (42,62,01)
	                                        and y.mste_flag_cc = 3
	                                        and x.reg_spaj = a.reg_spaj)
		    <!-- order by tgl_upload_scan desc -->
		    UNION<!-- di gabung sama bancass1 -->
		    select distinct
			    a.reg_spaj, eka.utils.pemegang(a.reg_spaj)pemegang, eka.utils.tertanggung(a.reg_spaj)tertanggung,
			    a.mspo_input_date tgl_input_spaj, b.lssp_status status_polis, eka.f_lsdbs(a.reg_spaj, d.lsbs_id, d.lsdbs_number) produk, f.lca_nama cabang,
			    agent.mcl_first nama_penutup, user_cabang.lus_login_name user_cabang,
			    to_char(c.mste_tgl_spaj_doc,'dd/MM/yyyy HH24:mi:ss') tgl_upload_scan,
			    (select msp_fire_id from eka.mst_pas_sms where reg_spaj = a.reg_spaj)fire_id,
			    (case
			        when e.lsdbs_name like '%POWER SAVE%' 
			            then (case when e.lsbs_id = 142 or e.lsbs_id = 158 then (select distinct to_char(mpr_jangka_invest) from eka.mst_powersave_ro where reg_spaj = a.reg_spaj)||' bln MIP'
			                       when e.lsbs_id = 188 then ((case when (select flag_bulanan from eka.mst_psave where reg_spaj = a.reg_spaj)=1 then (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj)|| ' bln MIP' else (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj)||' bln' end))
			                       else '' end)
			        when e.lsdbs_name like '%STABLE LINK%' then((case when (select distinct flag_bulanan from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')=1 then (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')|| ' bln MIP' else (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')||' bln' end))
			        when e.lsdbs_name like '%STABLE SAVE%' then((case when (select distinct flag_bulanan from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')=1 then (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')|| ' bln MIP' else (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')||' bln' end))
			        else '' end)mgi,
			    (select x.msps_desc
			    from eka.mst_position_spaj x, eka.lst_user z
			    where x.reg_spaj = a.reg_spaj
			        and x.lus_id = z.lus_id
			        and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id))keterangan_data,
			    (select z.lus_login_name
			    from eka.mst_position_spaj x, eka.lst_user z
			    where x.reg_spaj = a.reg_spaj
			        and x.lus_id = z.lus_id
			        and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id)
			        and z.lde_id = 11)user_uw
			from
			    eka.mst_policy a,
			    eka.lst_policy_status b,
			    eka.mst_insured c,
			    eka.mst_product_insured d,
			    eka.lst_det_bisnis e,
			    eka.lst_cabang f,
			    eka.mst_agent_prod g,
			    eka.mst_agent h,
			    eka.mst_position_spaj i,
			    eka.mst_reff_bii j,
			    eka.lst_cabang_bii k,
			    eka.mst_client_new agent,
			    eka.lst_user user_cabang
			where
			    a.lssp_id = b.lssp_id
			    and a.reg_spaj = c.reg_spaj
			    and a.reg_spaj = d.reg_spaj
			    and d.lsbs_id = e.lsbs_id
			    and d.lsdbs_number = e.lsdbs_number
			    and a.lca_id = f.lca_id
			    and a.reg_spaj = g.reg_spaj
			    and g.msag_id = h.msag_id
			    and h.mcl_id = agent.mcl_id
			    and a.lus_id = user_cabang.lus_id
			    and a.reg_spaj = i.reg_spaj
			    and a.reg_spaj = j.reg_spaj(+)
			    and j.lcb_no = k.lcb_no(+)
			    <isEqual property="status" compareValue="All">
			    and c.lssa_id in (1,3,10,17)
			    and ((select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER % U/W%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
	            or (select max(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 3) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
	            or (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 10) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1)
				</isEqual>
				<isEqual property="status" compareValue="New SPAJ">
				and c.lssa_id in (1,17)
				and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER % U/W%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
				</isEqual>
				<isEqual property="status" compareValue="Further Requirement">
				and c.lssa_id in (3)
				and (select max(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 3) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
				</isEqual>
				<isEqual property="status" compareValue="Akseptasi Khusus">
				and c.lssa_id in (10)
				and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 10) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
				</isEqual>
			    and g.lsle_id = '4'
			    and d.lsbs_id <![CDATA[<]]>300
			    <isEqual property="produk" compareValue="Link">
				and d.lsbs_id in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,190,191,199)
				</isEqual>
				<isEqual property="produk" compareValue="Non Link">
				and d.lsbs_id not in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,190,191,199)
				</isEqual>
			    and a.lca_id = '09'
			    and UPPER(k.team_name) like '%YANTI SUMIRKAN%'
			    <!-- and c.mste_tgl_spaj_doc between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy') -->
			    and a.lspd_id != 95
		    <!-- order by tgl_upload_scan desc -->
		    UNION<!-- di gabung sama bancass1 -->
		    select distinct
			    a.reg_spaj, eka.utils.pemegang(a.reg_spaj)pemegang, eka.utils.tertanggung(a.reg_spaj)tertanggung,
			    a.mspo_input_date tgl_input_spaj, b.lssp_status status_polis, eka.f_lsdbs(a.reg_spaj, d.lsbs_id, d.lsdbs_number) produk, f.lca_nama cabang,
			    agent.mcl_first nama_penutup, user_cabang.lus_login_name user_cabang,
			    to_char(c.mste_tgl_spaj_doc,'dd/MM/yyyy HH24:mi:ss') tgl_upload_scan,
			    (select msp_fire_id from eka.mst_pas_sms where reg_spaj = a.reg_spaj)fire_id,
			    (case
			        when e.lsdbs_name like '%POWER SAVE%' 
			            then (case when e.lsbs_id = 142 or e.lsbs_id = 158 then (select distinct to_char(mpr_jangka_invest) from eka.mst_powersave_ro where reg_spaj = a.reg_spaj)||' bln MIP'
			                       when e.lsbs_id = 188 then ((case when (select flag_bulanan from eka.mst_psave where reg_spaj = a.reg_spaj)=1 then (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj)|| ' bln MIP' else (select distinct to_char(mps_mgi) from eka.mst_psave where reg_spaj = a.reg_spaj)||' bln' end))
			                       else '' end)
			        when e.lsdbs_name like '%STABLE LINK%' then((case when (select distinct flag_bulanan from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')=1 then (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')|| ' bln MIP' else (select distinct to_char(msl_mgi) from eka.mst_slink where reg_spaj = a.reg_spaj and msl_no = '1')||' bln' end))
			        when e.lsdbs_name like '%STABLE SAVE%' then((case when (select distinct flag_bulanan from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')=1 then (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')|| ' bln MIP' else (select distinct to_char(mss_mgi) from eka.mst_ssave where reg_spaj = a.reg_spaj and mss_no = '1')||' bln' end))
			        else '' end)mgi,
			    (select x.msps_desc
			    from eka.mst_position_spaj x, eka.lst_user z
			    where x.reg_spaj = a.reg_spaj
			        and x.lus_id = z.lus_id
			        and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id))keterangan_data,
			    (select z.lus_login_name
			    from eka.mst_position_spaj x, eka.lst_user z
			    where x.reg_spaj = a.reg_spaj
			        and x.lus_id = z.lus_id
			        and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = c.lssa_id)
			        and z.lde_id = 11)user_uw
			from
			    eka.mst_policy a,
			    eka.lst_policy_status b,
			    eka.mst_insured c,
			    eka.mst_product_insured d,
			    eka.lst_det_bisnis e,
			    eka.lst_cabang f,
			    eka.mst_agent_prod g,
			    eka.mst_agent h,
			    eka.mst_position_spaj i,
			    eka.mst_nasabah j,
			    eka.mst_client_new agent,
			    eka.lst_user user_cabang
			where
			    a.lssp_id = b.lssp_id
			    and a.reg_spaj = c.reg_spaj
			    and a.reg_spaj = d.reg_spaj
			    and d.lsbs_id = e.lsbs_id
			    and d.lsdbs_number = e.lsdbs_number
			    and a.lca_id = f.lca_id
			    and a.reg_spaj = g.reg_spaj
			    and g.msag_id = h.msag_id
			    and h.mcl_id = agent.mcl_id
			    and a.lus_id = user_cabang.lus_id
			    and a.reg_spaj = i.reg_spaj
			    and a.mspo_plan_provider = j.mns_kd_nasabah
			    <isEqual property="status" compareValue="All">
			    and c.lssa_id in (1,3,10,17)
			    and ((select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER % U/W%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
	            or (select max(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 3) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
	            or (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 10) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1)
				</isEqual>
				<isEqual property="status" compareValue="New SPAJ">
				and c.lssa_id in (1,17)
				and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%TRANSFER % U/W%') between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
				</isEqual>
				<isEqual property="status" compareValue="Further Requirement">
				and c.lssa_id in (3)
				and (select max(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 3) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
				</isEqual>
				<isEqual property="status" compareValue="Akseptasi Khusus">
				and c.lssa_id in (10)
				and (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = 10) between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
				</isEqual>
			    and g.lsle_id = '4'
			    and d.lsbs_id <![CDATA[<]]>300
			    <isEqual property="produk" compareValue="Link">
				and d.lsbs_id in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,190,191,199)
				</isEqual>
				<isEqual property="produk" compareValue="Non Link">
				and d.lsbs_id not in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,190,191,199)
				</isEqual>
			    and a.lca_id = '09'
			    and a.lspd_id != 95
		    <!-- order by tgl_upload_scan desc -->
		)
		order by tgl_upload_scan desc
	</select>
	
	<select id="elions.uw.selectFlagQuestionare" parameterClass="string" resultClass="int">
         SELECT count(mste_insured_no) 
         FROM eka.mst_additional_desc_insured
         WHERE reg_spaj =#spaj#
    </select>
    
    <select id="elions.uw.selectCallDate" parameterClass="string" resultClass="int">
         SELECT count(mspo_call_date) 
         FROM eka.mst_policy
         WHERE reg_spaj =#spaj#
    </select>
    
    <!-- Patar Timotius For QR Only -->
  
      <select id="elions.uw.selectPolisBySpaj" parameterClass="string" resultClass="string">
         SELECT mspo_policy_no 
         FROM eka.mst_policy
         WHERE reg_spaj =#spaj#
    </select>
    
    
    <select id="elions.uw.selectquestionareDMTM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select * from eka.mst_additional_desc_insured where reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
	</select>
    
    <select id="elions.uw.selectreportDetailSPAJRefundBatal" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct
		    b.lsrg_nama cabang,
		    agent.mcl_first agent,
		    a.reg_spaj no_spaj,
		    a.mspo_policy_no no_polis,
		    a.mspo_spaj_date tgl_terima_spaj,
		    e.mste_beg_date tgl_terima_premi,
		    eka.utils.pemegang(a.reg_spaj)pemegang_polis,
		    eka.f_lsdbs(a.reg_spaj, f.lsbs_id, f.lsdbs_number) plan,
		    (select eka.namabisnis(a.reg_spaj,2) from dual)rider,
		    f.mspr_tsi UP,
		    f.mspr_premium Premi_pokok,
		    h.lscb_pay_mode cara_bayar,
		    (case
		        when i.alasan_cd = 1 then 'Substandart'
		        when i.alasan_cd = 2 then 'Ditolak'
		        when i.alasan_cd = 3 then 'Menolak Medis'
		        when i.alasan_cd = 4 then 'Ganti Plan'
		        when i.alasan_cd = 5 then 'Double Input'
		        when i.alasan_cd = 6 then 'Kelebihan setoran premi pertama'
		        when i.alasan_cd = 7 then 'Salah Input'
		        when i.alasan_cd = 8 then 'Ganti Tertanggung'
		        when i.alasan_cd = 9 then 'Tambah atau ganti rider'
		        when i.alasan_cd = 10 then 'Atas permintaan nasabah karena tidak setuju dengan isi polis'
		        when i.alasan_cd = 11 then 'SPAJ kadaluarsa'
		        when i.alasan_cd = 12 then 'Tidak bayar premi'
		        when i.alasan_cd = 13 then 'Dokumen tidak dilengkapi'
		        when i.alasan_cd = 99 then 'Alasan Lain'
		        else '' end)keputusa_uw,
		    i.cancel_when tanggal_proses_refund,
		    i.premi_refund jumlah_refund,
		    (case when a.lku_id='01' then i.premi_refund else null end)refund_rupiah,
		    (case when a.lku_id='02' then i.premi_refund else null end)refund_dollar,
		    i.alasan_lain alasan_lain,
		    (case 
		        when f.lsbs_id in (077,084,087,097,100,101,102,107,113,115,116,117,118,119,120,121,122,127,128,129,138,139,140,141,134,152,153,154,159,160,162,165,166,174,190,191,199)
		            then (select sum(mu_jlh_premi) from eka.mst_ulink where reg_spaj = a.reg_spaj and lt_id in(2,5))
		        when f.lsbs_id = 164
		            then (select sum(msl_premi) from eka.mst_slink where msl_new in(1,2) and msl_tu_ke !=0 and reg_spaj = a.reg_spaj)
		        else null end)top_up,
		    k.lku_symbol
		from
		    eka.mst_policy a,
		    eka.lst_region b,
		    eka.mst_agent_prod c,
		    eka.mst_agent d,
		    eka.mst_insured e,
		    eka.mst_product_insured f,
		    eka.lst_det_bisnis g,
		    eka.lst_pay_mode h,
		    eka.mst_refund i,
		    eka.mst_batal j,
		    eka.lst_kurs k,
		    eka.mst_reff_bii l,
		    eka.lst_cabang_bii m,
		    eka.mst_client_new agent
		where
		    a.lca_id = b.lca_id
		    and a.lwk_id = b.lwk_id
		    and a.lsrg_id = b.lsrg_id
		    and a.reg_spaj = c.reg_spaj(+)
		    and c.msag_id = d.msag_id
		    and a.reg_spaj = e.reg_spaj(+)
		    and d.mcl_id = agent.mcl_id
		    and e.reg_spaj = f.reg_spaj
		    and e.mste_insured_no = f.mste_insured_no
		    and f.lsbs_id = g.lsbs_id
		    and f.lsdbs_number = g.lsdbs_number
		    and a.lscb_id = h.lscb_id
		    and a.reg_spaj = i.reg_spaj
		    and i.reg_spaj = j.reg_spaj
		    and a.lku_id = k.lku_id
		    and a.reg_spaj = l.reg_spaj(+)
		    and l.lcb_no = m.lcb_no(+)
		    and c.lsle_id = '4'
		    and a.lstb_id = 1
		    and f.lsbs_id <![CDATA[<]]> 300
		    and i.cancel_when between trunc(to_date(#bdate#,'dd/MM/yyyy')) and last_day(to_date(#bdate#,'dd/MM/yyyy'))
		    order by tanggal_proses_refund asc
	</select>
	
	<select id="elions.uw.selectreportSummarySPAJRefundBatal" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
		    to_char(i.cancel_when,'MONTH') tanggal_proses_refund,to_char(i.cancel_when,'MM') tgl,
		    sum(case when a.lca_id='37' and a.lku_id='01' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_RP_Agency,
		    sum(case when a.lca_id='37' and a.lku_id='02' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_USD_Agency,
		    sum(case when a.lca_id='37' and a.lku_id='01' then i.premi_refund else 0 end)Premi_rp_Agency,
		    sum(case when a.lca_id='37' and a.lku_id='02' then i.premi_refund else 0 end)Premi_usd_Agency,
		    sum(case when a.lca_id='46' and a.lku_id='01' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_RP_Hybrid,
		    sum(case when a.lca_id='46' and a.lku_id='02' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_USD_Hybrid,
		    sum(case when a.lca_id='46' and a.lku_id='01' then i.premi_refund else 0 end)Premi_rp_Hybrid,
		    sum(case when a.lca_id='46' and a.lku_id='02' then i.premi_refund else 0 end)Premi_usd_Hybrid,
		    sum(case when a.lca_id='42' and a.lku_id='01' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_RP_Worksite,
		    sum(case when a.lca_id='42' and a.lku_id='02' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_USD_Worksite,
		    sum(case when a.lca_id='42' and a.lku_id='01' then i.premi_refund else 0 end)Premi_rp_Worksite,
		    sum(case when a.lca_id='42' and a.lku_id='02' then i.premi_refund else 0 end)Premi_usd_Worksite,
		    sum(case when a.lca_id='58' and a.lku_id='01' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_RP_MA,
		    sum(case when a.lca_id='58' and a.lku_id='02' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_USD_MA,
		    sum(case when a.lca_id='58' and a.lku_id='01' then i.premi_refund else 0 end)Premi_rp_MA,
		    sum(case when a.lca_id='58' and a.lku_id='02' then i.premi_refund else 0 end)Premi_usd_MA,
		    sum(case when a.lca_id='40' and a.lku_id='01' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_RP_DMTM,
		    sum(case when a.lca_id='40' and a.lku_id='02' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_USD_DMTM,
		    sum(case when a.lca_id='40' and a.lku_id='01' then i.premi_refund else 0 end)Premi_rp_DMTM,
		    sum(case when a.lca_id='40' and a.lku_id='02' then i.premi_refund else 0 end)Premi_usd_DMTM,
		    sum(case when a.lca_id not in (09,37,40,42,58,59,60,61) and a.lku_id='01' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_RP_Regional,
		    sum(case when a.lca_id not in (09,37,40,42,58,59,60,61) and a.lku_id='02' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_USD_Regional,
		    sum(case when a.lca_id not in (09,37,40,42,58,59,60,61) and a.lku_id='01' then i.premi_refund else 0 end)Premi_rp_Regional,
		    sum(case when a.lca_id not in (09,37,40,42,58,59,60,61) and a.lku_id='02' then i.premi_refund else 0 end)Premi_usd_Regional,
		    sum(case when a.lca_id='09' and upper(m.team_name) like '%YANTI SUMIRKAN%' and a.lku_id='01' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_RP_Bancass1,
		    sum(case when a.lca_id='09' and upper(m.team_name) like '%YANTI SUMIRKAN%' and a.lku_id='02' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_USD_Bancass1,
		    sum(case when a.lca_id='09' and upper(m.team_name) like '%YANTI SUMIRKAN%' and a.lku_id='01' then i.premi_refund else 0 end)Premi_rp_Bancass1,
		    sum(case when a.lca_id='09' and upper(m.team_name) like '%YANTI SUMIRKAN%' and a.lku_id='02' then i.premi_refund else 0 end)Premi_usd_Bancass1,
		    sum(case when a.lca_id='09' and upper(m.team_name) like '%JAN ROSADI%' and a.lku_id='01' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_RP_Bancass2,
		    sum(case when a.lca_id='09' and upper(m.team_name) like '%JAN ROSADI%' and a.lku_id='02' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_USD_Bancass2,
		    sum(case when a.lca_id='09' and upper(m.team_name) like '%JAN ROSADI%' and a.lku_id='01' then i.premi_refund else 0 end)Premi_rp_Bancass2,
		    sum(case when a.lca_id='09' and upper(m.team_name) like '%JAN ROSADI%' and a.lku_id='02' then i.premi_refund else 0 end)Premi_usd_Bancass2,
		    sum(case when a.lca_id='09' and upper(m.team_name) like '%DEWI%' and a.lku_id='01' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_RP_Bancass3,
		    sum(case when a.lca_id='09' and upper(m.team_name) like '%DEWI%' and a.lku_id='02' then (select count(z.mste_insured_no) from eka.mst_insured z where z.reg_spaj = a.reg_spaj) else 0 end)TTG_USD_Bancass3,
		    sum(case when a.lca_id='09' and upper(m.team_name) like '%DEWI%' and a.lku_id='01' then i.premi_refund else 0 end)Premi_rp_Bancass3,
		    sum(case when a.lca_id='09' and upper(m.team_name) like '%DEWI%' and a.lku_id='02' then i.premi_refund else 0 end)Premi_usd_Bancass3
		from
		    eka.mst_policy a,
		    eka.lst_region b,
		    eka.mst_agent_prod c,
		    eka.mst_agent d,
		    eka.mst_insured e,
		    eka.mst_product_insured f,
		    eka.lst_det_bisnis g,
		    eka.lst_pay_mode h,
		    eka.mst_refund i,
		    eka.mst_batal j,
		    eka.lst_kurs k,
		    eka.mst_reff_bii l,
		    eka.lst_cabang_bii m,
		    eka.mst_client_new agent
		where
		    a.lca_id = b.lca_id
		    and a.lwk_id = b.lwk_id
		    and a.lsrg_id = b.lsrg_id
		    and a.reg_spaj = c.reg_spaj(+)
		    and c.msag_id = d.msag_id
		    and a.reg_spaj = e.reg_spaj(+)
		    and d.mcl_id = agent.mcl_id
		    and e.reg_spaj = f.reg_spaj
		    and e.mste_insured_no = f.mste_insured_no
		    and f.lsbs_id = g.lsbs_id
		    and f.lsdbs_number = g.lsdbs_number
		    and a.lscb_id = h.lscb_id
		    and a.reg_spaj = i.reg_spaj
		    and i.reg_spaj = j.reg_spaj
		    and a.lku_id = k.lku_id
		    and a.reg_spaj = l.reg_spaj(+)
		    and l.lcb_no = m.lcb_no(+)
		    and c.lsle_id = '4'
		    and a.lstb_id = 1
		    and f.lsbs_id <![CDATA[<]]> 300
		    and i.cancel_when between trunc(to_date(#bdate#,'dd/MM/yyyy'), 'YEAR') and last_day(to_date(#bdate#,'dd/MM/yyyy'))
		    group by to_char(i.cancel_when,'MONTH'),to_char(i.cancel_when,'MM')
		    order by tgl asc
	</select>
	
	<select id="elions.uw.selectHealthClaimEBAcceptSum" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 	 SELECT distinct/*+ FIRST_ROWS */ EKA.MST_INSURED.MSTE_INSURED_NO,   
                 EKA.MST_INSURED.MSTE_INSURED,   
                 EKA.MST_POLICY.MSPO_POLICY_HOLDER,   
                 EKA.MST_CLAIM_EBN.MCE_NO_KLAIM,   
                 EKA.MST_CLAIM_EBN.MCE_TGL_KLAIM,   
                 EKA.MST_CLAIM_EBN.MCE_NO_AKSEP,    
                 EKA.MST_CLAIM_EBN.LGC_GROUP_ID,  
                 EKA.MST_CLAIM_EBN.MCE_TGL_1,   
                 EKA.MST_CLAIM_EBN.MCE_TGL_2,   
                 EKA.MST_CLAIM_EBN.MCE_HARI,
                 EKA.MST_INSURED.MSTE_NO_REG,   
                 EKA.MST_CLAIM_EBN.REG_SPAJ,   
                 decode(B.LSD_DESC,null,A.LSD_DESC,A.LSD_DESC||'; ')|| decode(C.LSD_DESC,null,B.LSD_DESC,B.LSD_DESC||'; ')|| C.LSD_DESC lsd_desc_all ,  
                 EKA.MST_BATCH_CLAIM.MBC_TGL_BACK,   
                 EKA.MST_CLIENT.MCL_FIRST||' / '||EKA.MST_INSURED.MSTE_NO_REG as nama,           
                 sum( EKA.MST_DET_CLAIM_EBN.MDC_JLH_CLAIM) MDC_JLH_CLAIM ,   
                 sum( EKA.MST_DET_CLAIM_EBN.MDC_BAYAR)   MDC_BAYAR,
                 sum(EKA.MST_DET_CLAIM_EBN.MDC_MAX_CLAIM) MDC_MAX_CLAIM,
                 EKA.LST_DET_BISNIS.LSDBS_NAME
            FROM EKA.MST_CLIENT@eb,   
                 EKA.MST_INSURED@eb,       
                 EKA.MST_POLICY@eb,   
                 EKA.MST_CLAIM_EBN@eb,   
                 EKA.MST_DET_CLAIM_EBN@eb,   
                 EKA.LST_JN_JAMINAN_EBN@eb,   
                 EKA.MST_DIAGNOSIS@eb,   
                 EKA.LST_DIAGNOSIS@eb,  
                 EKA.LST_DIAGNOSIS@eb a,
                 EKA.LST_DIAGNOSIS@eb b,
                 EKA.LST_DIAGNOSIS@eb c, 
                 EKA.MST_BATCH_CLAIM@eb    ,
                 EKA.LST_DET_BISNIS@eb
           WHERE ( EKA.MST_DET_CLAIM_EBN.REG_SPAJ = EKA.MST_DIAGNOSIS.REG_SPAJ (+)) and  
                 ( EKA.MST_DET_CLAIM_EBN.MCE_NO_KLAIM = EKA.MST_DIAGNOSIS.MCE_NO_KLAIM (+)) and  
                 ( EKA.LST_DIAGNOSIS.LSD_ID (+) = EKA.MST_DIAGNOSIS.LSD_ID) and  
                 ( EKA.MST_INSURED.MSTE_INSURED = EKA.MST_CLIENT.MCL_ID ) and  
                 ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_POLICY.REG_SPAJ ) and  
                 ( EKA.MST_DET_CLAIM_EBN.REG_SPAJ = EKA.MST_CLAIM_EBN.REG_SPAJ ) and  
                 ( EKA.MST_DET_CLAIM_EBN.MCE_NO_KLAIM = EKA.MST_CLAIM_EBN.MCE_NO_KLAIM ) and  
                 ( EKA.MST_INSURED.MSTE_INSURED_NO = EKA.MST_CLAIM_EBN.MSTE_INSURED_NO ) and  
                 ( EKA.MST_CLAIM_EBN.LGC_GROUP_ID = EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID ) and  
                 ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_CLAIM_EBN.REG_SPAJ ) and  
                 ( EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID = EKA.LST_JN_JAMINAN_EBN.LGC_GROUP_ID ) and  
                 ( EKA.MST_DET_CLAIM_EBN.LJJ_JENIS_ID = EKA.LST_JN_JAMINAN_EBN.LJJ_JENIS_ID ) and  
                 ( EKA.MST_BATCH_CLAIM.MBC_NO = EKA.MST_CLAIM_EBN.MBC_NO ) and 
                 (EKA.MST_CLAIM_EBN.MCE_LSBS_ID = EKA.LST_det_BISNIS.LSBS_ID (+) ) AND
                 ( EKA.MST_CLAIM_EBN.MCE_LSDBS_NUMBER = EKA.LST_det_BISNIS.LSDBS_NUMBER (+) ) AND  
                 (  EKA.MST_CLAIM_EBN.LSD_ID = A.LSD_ID (+)) AND 
                 (  EKA.MST_CLAIM_EBN.LSD_ID2 = B.LSD_ID (+) ) AND 
                 (  EKA.MST_CLAIM_EBN.LSD_ID3 = C.LSD_ID(+) ) AND 
                 ( ( EKA.MST_POLICY.LSTB_ID = 3 ) AND  
                   ( EKA.MST_INSURED.REG_SPAJ = #spaj# ) AND  
                 ( EKA.MST_INSURED.MSTE_INSURED_NO = #insured_no# ) AND  
                 ( EKA.MST_CLAIM_EBN.LSSA_ID = 5 ) AND  
                 ( EKA.MST_DET_CLAIM_EBN.MDC_VALID = 1 ) )
                 group by EKA.MST_INSURED.MSTE_INSURED_NO,   
                 EKA.MST_INSURED.MSTE_INSURED,   
                 EKA.MST_POLICY.MSPO_POLICY_HOLDER,   
                 EKA.MST_CLAIM_EBN.MCE_NO_KLAIM,   
                 EKA.MST_CLAIM_EBN.MCE_TGL_KLAIM,   
                 EKA.MST_CLAIM_EBN.MCE_NO_AKSEP,    
                 EKA.MST_CLAIM_EBN.LGC_GROUP_ID,     
                 EKA.MST_CLAIM_EBN.MCE_TGL_1,   
                 EKA.MST_CLAIM_EBN.MCE_TGL_2,   
                 EKA.MST_INSURED.MSTE_NO_REG,   
                 EKA.MST_CLAIM_EBN.REG_SPAJ,   
                 EKA.MST_CLAIM_EBN.LSD_ID,   
                 EKA.MST_CLAIM_EBN.LSD_ID2,   
                 EKA.MST_CLAIM_EBN.LSD_ID3,
                 EKA.MST_CLAIM_EBN.MCE_NO_PRE, 
                 EKA.MST_BATCH_CLAIM.MBC_NO,   
                 EKA.MST_BATCH_CLAIM.MBC_TGL_BACK,     
                 EKA.MST_CLAIM_EBN.MBC_NO,   
                 EKA.MST_CLIENT.MCL_FIRST,
                 EKA.MST_BATCH_CLAIM.MBC_TGL_FIN,
                 A.LSD_DESC,B.LSD_DESC,C.LSD_DESC,
                 EKA.MST_CLAIM_EBN.MCE_KLAIM_ADMEDIKA,
                 EKA.LST_DET_BISNIS.LSDBS_NAME,
                 EKA.MST_CLAIM_EBN.MCE_HARI 
	 </select>
	 
	 <select id="elions.uw.selectHealthClaimEBPREAcceptSum" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	 SELECT /*+ FIRST_ROWS */ EKA.MST_INSURED.MSTE_INSURED_NO,   
                     EKA.MST_INSURED.MSTE_INSURED,   
                     EKA.MST_POLICY.MSPO_POLICY_HOLDER,   
                     EKA.MST_CLAIM_EBN.MCE_NO_KLAIM,   
                     EKA.MST_CLAIM_EBN.MCE_TGL_KLAIM,   
                     EKA.MST_CLAIM_EBN.MCE_NO_AKSEP,   
                         EKA.MST_CLAIM_EBN.LGC_GROUP_ID,   
                   SUM( EKA.MST_DET_CLAIM_EBN.MDC_JLH_CLAIM) MDC_JLH_CLAIM, 
                   sum(EKA.MST_DET_CLAIM_EBN.MDC_MAX_CLAIM) MDC_MAX_CLAIM,
                 SUM(EKA.MST_DET_CLAIM_EBN.MDC_BAYAR) MDC_BAYAR,   
                 EKA.LST_DIAGNOSIS.LSD_DESC,   
                 EKA.MST_CLAIM_EBN.MCE_TGL_1,   
                 EKA.MST_CLAIM_EBN.MCE_TGL_2, 
                 EKA.MST_CLAIM_EBN.MCE_HARI,  
                 EKA.MST_INSURED.MSTE_NO_REG,   
                 EKA.MST_CLAIM_EBN.REG_SPAJ,   
                 decode(B.LSD_DESC,null,A.LSD_DESC,A.LSD_DESC||'; ')|| decode(C.LSD_DESC,null,B.LSD_DESC,B.LSD_DESC||'; ')|| C.LSD_DESC lsd_desc ,  
                  EKA.MST_BATCH_CLAIM.MBC_TGL_BACK,   
                 EKA.MST_CLIENT.MCL_FIRST||' / '||EKA.MST_INSURED.MSTE_NO_REG as nama,   
                 EKA.MST_BATCH_CLAIM.MBC_TGL_FIN,
                 EKA.LST_DET_BISNIS.LSDBS_NAME 
            FROM EKA.MST_CLIENT@eb,   
                 EKA.MST_INSURED@eb,   
                 EKA.MST_POLICY@eb,   
                 EKA.MST_CLAIM_EBN@eb,   
                 EKA.MST_DET_CLAIM_EBN@eb,   
                 EKA.LST_JN_JAMINAN_EBN@eb,   
                 EKA.MST_DIAGNOSIS@eb,   
                 EKA.LST_DIAGNOSIS@eb,  
                 EKA.LST_DIAGNOSIS@eb a,
                 EKA.LST_DIAGNOSIS@eb b,
                 EKA.LST_DIAGNOSIS@eb c, 
                 EKA.MST_BATCH_CLAIM@eb    ,
                 EKA.LST_DET_BISNIS@eb  
           WHERE ( EKA.MST_DET_CLAIM_EBN.REG_SPAJ = EKA.MST_DIAGNOSIS.REG_SPAJ (+)) and  
                 ( EKA.MST_DET_CLAIM_EBN.MCE_NO_KLAIM = EKA.MST_DIAGNOSIS.MCE_NO_KLAIM (+)) and  
                 ( EKA.LST_DIAGNOSIS.LSD_ID (+) = EKA.MST_DIAGNOSIS.LSD_ID) and  
                 ( EKA.MST_INSURED.MSTE_INSURED = EKA.MST_CLIENT.MCL_ID ) and  
                 ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_POLICY.REG_SPAJ ) and  
                 ( EKA.MST_DET_CLAIM_EBN.REG_SPAJ = EKA.MST_CLAIM_EBN.REG_SPAJ ) and  
                 ( EKA.MST_DET_CLAIM_EBN.MCE_NO_KLAIM = EKA.MST_CLAIM_EBN.MCE_NO_KLAIM ) and  
                 ( EKA.MST_INSURED.MSTE_INSURED_NO = EKA.MST_CLAIM_EBN.MSTE_INSURED_NO ) and  
                 ( EKA.MST_CLAIM_EBN.LGC_GROUP_ID = EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID ) and  
                 ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_CLAIM_EBN.REG_SPAJ ) and  
                 ( EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID = EKA.LST_JN_JAMINAN_EBN.LGC_GROUP_ID ) and  
                 ( EKA.MST_DET_CLAIM_EBN.LJJ_JENIS_ID = EKA.LST_JN_JAMINAN_EBN.LJJ_JENIS_ID ) and  
                 ( EKA.MST_BATCH_CLAIM.MBC_NO = EKA.MST_CLAIM_EBN.MBC_NO ) and 
                 (  EKA.MST_CLAIM_EBN.LSD_ID = A.LSD_ID (+)) AND 
                 (  EKA.MST_CLAIM_EBN.LSD_ID2 = B.LSD_ID (+) ) AND 
                 (  EKA.MST_CLAIM_EBN.LSD_ID3 = C.LSD_ID(+) ) AND 
                 (EKA.MST_CLAIM_EBN.MCE_LSBS_ID = EKA.LST_det_BISNIS.LSBS_ID (+) ) AND
                 ( EKA.MST_CLAIM_EBN.MCE_LSDBS_NUMBER = EKA.LST_det_BISNIS.LSDBS_NUMBER (+) ) AND  
                 ( ( EKA.MST_POLICY.LSTB_ID = 3 ) AND  
                 ( EKA.MST_INSURED.REG_SPAJ = #spaj# ) AND  
                 ( EKA.MST_INSURED.MSTE_INSURED_NO = #insured_no# ) AND  
                 ( EKA.MST_CLAIM_EBN.LSSA_ID = 6 ) AND  
                 ( EKA.MST_CLAIM_EBN.MCE_LSPD_ID = 111) AND
                 ( EKA.MST_DET_CLAIM_EBN.MDC_VALID = 1 ) )         
              group by EKA.MST_INSURED.MSTE_INSURED_NO,   
                     EKA.MST_INSURED.MSTE_INSURED,   
                     EKA.MST_POLICY.MSPO_POLICY_HOLDER,   
                     EKA.MST_CLAIM_EBN.MCE_NO_KLAIM,   
                     EKA.MST_CLAIM_EBN.MCE_TGL_KLAIM,   
                     EKA.MST_CLAIM_EBN.MCE_NO_AKSEP,   
                         EKA.MST_CLAIM_EBN.LGC_GROUP_ID,       
                     EKA.LST_DIAGNOSIS.LSD_DESC,   
                     EKA.MST_CLAIM_EBN.MCE_TGL_1,   
                     EKA.MST_CLAIM_EBN.MCE_TGL_2,   
                     EKA.MST_INSURED.MSTE_NO_REG,   
                     EKA.MST_CLAIM_EBN.REG_SPAJ,   
                     B.LSD_DESC,A.LSD_DESC,C.LSD_DESC, 
                      EKA.MST_BATCH_CLAIM.MBC_TGL_BACK,   
                     EKA.MST_CLIENT.MCL_FIRST,EKA.MST_INSURED.MSTE_NO_REG,   
                     EKA.MST_BATCH_CLAIM.MBC_TGL_FIN,
                 EKA.LST_DET_BISNIS.LSDBS_NAME,
                 EKA.MST_CLAIM_EBN.MCE_HARI
	 </select>
	 
	 <select id="elions.uw.selectHealthClaimEBTolakSum" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 		 SELECT /*+ FIRST_ROWS */ DISTINCT EKA.MST_CLIENT.MCL_FIRST||' '||EKA.MST_CLIENT.MCL_MIDDLE||' '||EKA.MST_CLIENT.MCL_LAST as nama,   
                     EKA.MST_INSURED.MSTE_INSURED_NO,   
                     EKA.MST_INSURED.MSTE_INSURED,   
                     EKA.MST_POLICY.MSPO_POLICY_HOLDER,   
                     EKA.MST_CLAIM_EBN.MCE_NO_KLAIM,   
                     EKA.MST_CLAIM_EBN.MCE_TGL_KLAIM,   
                     EKA.MST_CLAIM_EBN.MCE_NO_AKSEP,     
                     EKA.MST_CLAIM_EBN.LGC_GROUP_ID, 
                     sum( EKA.MST_DET_CLAIM_EBN.MDC_JLH_CLAIM) MDC_JLH_CLAIM,   
                     sum(EKA.MST_DET_CLAIM_EBN.MDC_MAX_CLAIM) MDC_MAX_CLAIM,   
                     sum(EKA.MST_DET_CLAIM_EBN.MDC_BAYAR) MDC_BAYAR,   
                     EKA.MST_CLAIM_EBN.MCE_TGL_1,   
                     EKA.MST_CLAIM_EBN.MCE_TGL_2,   
                     EKA.MST_CLAIM_EBN.MCE_HARI,
                     EKA.MST_INSURED.MSTE_NO_REG,   
                     EKA.MST_CLAIM_EBN.REG_SPAJ,  
                      decode(B.LSD_DESC,null,A.LSD_DESC,A.LSD_DESC||'; ')|| decode(C.LSD_DESC,null,B.LSD_DESC,B.LSD_DESC||'; ')|| C.LSD_DESC lsd_desc_all , 
                     EKA.MST_CLAIM_EBN.PROVIDER,
                     EKA.LST_DET_BISNIS.LSDBS_NAME
                FROM EKA.MST_CLIENT@eb,   
                     EKA.MST_INSURED@eb,   
                     EKA.MST_POLICY@eb,   
                     EKA.MST_CLAIM_EBN@eb,   
                     EKA.MST_DET_CLAIM_EBN@eb,   
                     EKA.LST_JN_JAMINAN_EBN@eb,   
                     EKA.MST_TOLAK@eb, 
                     EKA.LST_DIAGNOSIS@eb a,
                     EKA.LST_DIAGNOSIS@eb b,
                     EKA.LST_DIAGNOSIS@eb c,  
                     EKA.LST_ALASAN@eb,
                     EKA.LST_DET_BISNIS@eb   
                WHERE ( EKA.MST_INSURED.MSTE_INSURED = EKA.MST_CLIENT.MCL_ID ) and  
                     ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_POLICY.REG_SPAJ ) and  
                     ( EKA.MST_DET_CLAIM_EBN.REG_SPAJ = EKA.MST_CLAIM_EBN.REG_SPAJ ) and  
                     ( EKA.MST_DET_CLAIM_EBN.MCE_NO_KLAIM = EKA.MST_CLAIM_EBN.MCE_NO_KLAIM ) and  
                     ( EKA.MST_INSURED.MSTE_INSURED_NO = EKA.MST_CLAIM_EBN.MSTE_INSURED_NO ) and  
                     ( EKA.MST_CLAIM_EBN.LGC_GROUP_ID = EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID ) and  
                     ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_CLAIM_EBN.REG_SPAJ ) and  
                     ( EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID = EKA.LST_JN_JAMINAN_EBN.LGC_GROUP_ID ) and  
                     ( EKA.MST_DET_CLAIM_EBN.LJJ_JENIS_ID = EKA.LST_JN_JAMINAN_EBN.LJJ_JENIS_ID ) and  
                     ( EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID = EKA.MST_TOLAK.LGC_GROUP_ID ) and  
                     ( EKA.LST_ALASAN.LA_ALS_ID = EKA.MST_TOLAK.LA_ALS_ID ) and  
                     ( EKA.MST_TOLAK.MT_TYPE = EKA.LST_ALASAN.MT_TYPE ) and  
                     (  EKA.MST_CLAIM_EBN.LSD_ID = A.LSD_ID (+)) AND 
                     (  EKA.MST_CLAIM_EBN.LSD_ID2 = B.LSD_ID (+) ) AND 
                     (  EKA.MST_CLAIM_EBN.LSD_ID3 = C.LSD_ID(+) ) AND 
                     ( EKA.MST_DET_CLAIM_EBN.LJJ_JENIS_ID = EKA.MST_TOLAK.LJJ_JENIS_ID ) and  
                     ( EKA.MST_DET_CLAIM_EBN.MCE_NO_KLAIM = EKA.MST_TOLAK.MCE_NO_KLAIM ) and  
                     ( EKA.MST_DET_CLAIM_EBN.REG_SPAJ = EKA.MST_TOLAK.REG_SPAJ ) and  
                     (EKA.MST_CLAIM_EBN.MCE_LSBS_ID = EKA.LST_det_BISNIS.LSBS_ID (+) ) AND
                     ( EKA.MST_CLAIM_EBN.MCE_LSDBS_NUMBER = EKA.LST_det_BISNIS.LSDBS_NUMBER (+) ) AND
                     ( 
                        ( EKA.MST_POLICY.LSTB_ID = 3 ) AND  
                        ( EKA.MST_INSURED.REG_SPAJ = #spaj#) AND  
                        ( EKA.MST_INSURED.MSTE_INSURED_NO in (#insured_no# ) ) AND  
                        ( EKA.MST_CLAIM_EBN.LSSA_ID in (5,2) OR ( EKA.MST_CLAIM_EBN.LSSA_ID = 13 AND EKA.MST_CLAIM_EBN.PROVIDER = 1 ) ) AND  
                        ( EKA.MST_TOLAK.MT_TYPE = 0 ) 
                     )
                     group by 
                     EKA.MST_CLIENT.MCL_FIRST,EKA.MST_CLIENT.MCL_MIDDLE,EKA.MST_CLIENT.MCL_LAST ,   
                     EKA.MST_INSURED.MSTE_INSURED_NO,   
                     EKA.MST_INSURED.MSTE_INSURED,   
                     EKA.MST_POLICY.MSPO_POLICY_HOLDER,   
                     EKA.MST_CLAIM_EBN.MCE_NO_KLAIM,   
                     EKA.MST_CLAIM_EBN.MCE_TGL_KLAIM,   
                     EKA.MST_CLAIM_EBN.MCE_NO_AKSEP,    
                 EKA.MST_CLAIM_EBN.LGC_GROUP_ID, 
                     EKA.MST_CLAIM_EBN.MCE_TGL_1,   
                     EKA.MST_CLAIM_EBN.MCE_TGL_2,   
                     EKA.MST_INSURED.MSTE_NO_REG,   
                     EKA.MST_CLAIM_EBN.REG_SPAJ,  
                     B.LSD_DESC,A.LSD_DESC,C.LSD_DESC,
                     EKA.MST_CLAIM_EBN.PROVIDER,
                     EKA.LST_DET_BISNIS.LSDBS_NAME,
                     EKA.MST_CLAIM_EBN.MCE_HARI  
		 </select>
		 
		 <select id="elions.uw.selectHealthClaimEBPUSum" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 		SELECT /*+ FIRST_ROWS */ DISTINCT EKA.MST_CLIENT.MCL_FIRST||' '||EKA.MST_CLIENT.MCL_MIDDLE||' '||EKA.MST_CLIENT.MCL_LAST as nama,   
                         EKA.MST_INSURED.MSTE_INSURED_NO,   
                         EKA.MST_INSURED.MSTE_INSURED,   
                         EKA.MST_POLICY.MSPO_POLICY_HOLDER,   
                         EKA.MST_CLAIM_EBN.MCE_NO_KLAIM,   
                         EKA.MST_CLAIM_EBN.MCE_TGL_KLAIM,   
                         EKA.MST_CLAIM_EBN.MCE_NO_AKSEP,    
                         EKA.MST_CLAIM_EBN.LGC_GROUP_ID,  
                         sum(EKA.MST_DET_CLAIM_EBN.MDC_JLH_CLAIM) MDC_JLH_CLAIM,   
                         sum(EKA.MST_DET_CLAIM_EBN.MDC_MAX_CLAIM) MDC_MAX_CLAIM,   
                         sum(EKA.MST_DET_CLAIM_EBN.MDC_BAYAR) MDC_BAYAR,   
                         EKA.MST_CLAIM_EBN.MCE_TGL_1,   
                         EKA.MST_CLAIM_EBN.MCE_TGL_2,  
                         EKA.MST_CLAIM_EBN.MCE_HARI, 
                         EKA.MST_INSURED.MSTE_NO_REG,   
                         EKA.MST_CLAIM_EBN.REG_SPAJ,
                         EKA.LST_DET_BISNIS.LSDBS_NAME
                    FROM EKA.MST_CLIENT@eb,   
                         EKA.MST_INSURED@eb,   
                         EKA.MST_POLICY@eb,   
                         EKA.MST_CLAIM_EBN@eb,   
                         EKA.MST_DET_CLAIM_EBN@eb,   
                         EKA.LST_JN_JAMINAN_EBN@eb,   
                         EKA.MST_TOLAK@eb,   
                         EKA.LST_ALASAN@eb,
                         EKA.LST_DET_BISNIS@eb  
                   WHERE ( EKA.MST_INSURED.MSTE_INSURED = EKA.MST_CLIENT.MCL_ID ) and  
                         ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_POLICY.REG_SPAJ ) and  
                         ( EKA.MST_DET_CLAIM_EBN.REG_SPAJ = EKA.MST_CLAIM_EBN.REG_SPAJ ) and  
                         ( EKA.MST_DET_CLAIM_EBN.MCE_NO_KLAIM = EKA.MST_CLAIM_EBN.MCE_NO_KLAIM ) and  
                         ( EKA.MST_INSURED.MSTE_INSURED_NO = EKA.MST_CLAIM_EBN.MSTE_INSURED_NO ) and  
                         ( EKA.MST_CLAIM_EBN.LGC_GROUP_ID = EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID ) and  
                         ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_CLAIM_EBN.REG_SPAJ ) and  
                         ( EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID = EKA.LST_JN_JAMINAN_EBN.LGC_GROUP_ID ) and  
                         ( EKA.MST_DET_CLAIM_EBN.LJJ_JENIS_ID = EKA.LST_JN_JAMINAN_EBN.LJJ_JENIS_ID ) and  
                         ( EKA.MST_DET_CLAIM_EBN.LGC_GROUP_ID = EKA.MST_TOLAK.LGC_GROUP_ID ) and  
                         ( EKA.LST_ALASAN.LA_ALS_ID = EKA.MST_TOLAK.LA_ALS_ID ) and  
                         ( EKA.MST_TOLAK.MT_TYPE = EKA.LST_ALASAN.MT_TYPE ) and  
                         ( EKA.MST_DET_CLAIM_EBN.LJJ_JENIS_ID = EKA.MST_TOLAK.LJJ_JENIS_ID ) and  
                         ( EKA.MST_DET_CLAIM_EBN.MCE_NO_KLAIM = EKA.MST_TOLAK.MCE_NO_KLAIM ) and  
                         ( EKA.MST_DET_CLAIM_EBN.REG_SPAJ = EKA.MST_TOLAK.REG_SPAJ ) and
                         (EKA.MST_CLAIM_EBN.MCE_LSBS_ID = EKA.LST_det_BISNIS.LSBS_ID (+) ) AND
                         ( EKA.MST_CLAIM_EBN.MCE_LSDBS_NUMBER = EKA.LST_det_BISNIS.LSDBS_NUMBER (+) ) AND  
                         ( ( EKA.MST_POLICY.LSTB_ID = 3 ) AND  
                         ( EKA.MST_INSURED.REG_SPAJ = #spaj#) AND  
                         ( EKA.MST_INSURED.MSTE_INSURED_NO in ( #insured_no# ) ) AND  
                         ( EKA.MST_CLAIM_EBN.LSSA_ID = 5 ) AND  
                         ( EKA.MST_TOLAK.MT_TYPE = 2 ) ) 
                       group by
                       EKA.MST_CLIENT.MCL_FIRST,EKA.MST_CLIENT.MCL_MIDDLE,EKA.MST_CLIENT.MCL_LAST,   
                         EKA.MST_INSURED.MSTE_INSURED_NO,   
                         EKA.MST_INSURED.MSTE_INSURED,   
                         EKA.MST_POLICY.MSPO_POLICY_HOLDER,   
                         EKA.MST_CLAIM_EBN.MCE_NO_KLAIM,   
                         EKA.MST_CLAIM_EBN.MCE_TGL_KLAIM,   
                         EKA.MST_CLAIM_EBN.MCE_NO_AKSEP,   
                         EKA.MST_CLAIM_EBN.LGC_GROUP_ID,      
                         EKA.MST_CLAIM_EBN.MCE_TGL_1,   
                         EKA.MST_CLAIM_EBN.MCE_TGL_2,   
                         EKA.MST_INSURED.MSTE_NO_REG,   
                         EKA.MST_CLAIM_EBN.REG_SPAJ,
                         EKA.LST_DET_BISNIS.LSDBS_NAME,
                         EKA.MST_CLAIM_EBN.MCE_HARI   
		 </select>
		 
		 <select id="elions.uw.selectHealthClaimSum" parameterClass="string" resultClass="java.util.HashMap">
		 		SELECT 
			         sum(decode(eka.id_mst_clm.st_acp,5, eka.id_trx_clmdtl.pay_claim, 10, eka.id_trx_clmdtl.pay_claim,0))  pay_claim,
			         sum(eka.id_trx_clmdtl.amt_claim) amt_claim, 
			         sum(eka.id_trx_clmdtl.max_claim) max_claim,
			         EKA.ID_STAT_ACP.ST_EXPL,   
			         EKA.UTILS.PEMEGANG(EKA.MST_PRODUCT_INSURED.REG_SPAJ) MCL_FIRST,
			         EKA.ID_MST_CLM.AMOUNT_RI,
			         EKA.ID_MST_CLM.REGCLAIM,   
			         EKA.ID_MST_CLM.ST_ACP,   
			         EKA.ID_MST_CLM.MSPO_POLICY_NO,   
			         EKA.ID_MST_CLM.REGAPLDATE,   
			         EKA.ID_MST_CLM.ACCEPTDATE,     
			         EKA.ID_MST_CLM.CLM_PAID_DATE,   
			         EKA.ID_MST_CLM.NM_DIAGNOS,   
			         EKA.ID_MST_CLM.DATE_RI_1,   
			         EKA.ID_MST_CLM.DATE_RI_2,   
			         EKA.MST_POLICY.MSPO_INS_PERIOD,   
			         EKA.MST_PERSON.MSPE_SEX,   
			         EKA.LST_CABANG.LCA_NAMA,   
			         EKA.MST_PRODUCT_INSURED.MSPR_TSI,   
			         EKA.LST_KURS.LKU_SYMBOL,   
			         EKA.MST_INSURED.MSTE_AGE,   
			         EKA.MST_INSURED.MSTE_MEDICAL,   
			         EKA.MST_PRODUCT_INSURED.REG_SPAJ,   
			         trim(EKA.MST_CLIENT.MCL_FIRST) || '  ' || trim(EKA.MST_CLIENT.MCL_MIDDLE) || '  ' || trim(EKA.MST_CLIENT.MCL_LAST) as c_nama,   
			         EKA.ID_MST_CLM.LKU_ID,   
			         EKA.ID_MST_CLM.LKU_BAYAR,   
			         EKA.LST_BISNIS.LSBS_NAME,   
			         eka.f_lsbs( EKA.MST_POLICY.REG_SPAJ, EKA.LST_BISNIS.LSBS_ID) as lst_bisnis_lsbs_name,   
			         EKA.MST_PESERTA.NAMA,   
			         EKA.MST_PESERTA.TGL_LAHIR,   
			         EKA.MST_PESERTA.KELAMIN,   
			         EKA.MST_PESERTA.UMUR,   
			         EKA.ID_MST_CLM.SEHAT_TTURUT  
			    FROM EKA.ID_MST_CLM,   
			         EKA.ID_STAT_ACP,   
			         EKA.ID_TRX_CLMDTL,   
			         EKA.MST_POLICY,   
			         EKA.MST_CLIENT,   
			         EKA.MST_PERSON,   
			         EKA.LST_CABANG,   
			         EKA.MST_PRODUCT_INSURED,   
			         EKA.LST_KURS,   
			         EKA.MST_INSURED,   
			         EKA.LST_BISNIS,   
			         EKA.MST_PESERTA,
			         EKA.ID_LST_JNS_CLAIMDTL  
			   WHERE ( EKA.mst_policy.lca_id = EKA.lst_cabang.lca_id (+)) and  
			         ( EKA.id_mst_clm.regspaj = eka.mst_peserta.reg_spaj (+)) and  
			         ( EKA.id_mst_clm.sehat_tturut = eka.mst_peserta.no_urut (+)) and  
			         ( EKA.ID_STAT_ACP.ST_ACP = EKA.ID_MST_CLM.ST_ACP ) and  
			         ( EKA.ID_TRX_CLMDTL.REGCLAIM = EKA.ID_MST_CLM.REGCLAIM ) and  
			         ( EKA.MST_POLICY.REG_SPAJ = EKA.ID_MST_CLM.REGSPAJ ) and  
			         ( EKA.ID_MST_CLM.MSTE_INSURED = EKA.MST_CLIENT.MCL_ID ) and  
			         ( EKA.MST_CLIENT.MCL_ID = EKA.MST_PERSON.MCL_ID ) and  
			         ( EKA.MST_POLICY.REG_SPAJ = EKA.MST_PRODUCT_INSURED.REG_SPAJ ) and  
			         ( EKA.LST_KURS.LKU_ID = EKA.MST_POLICY.LKU_ID ) and  
			         ( EKA.MST_INSURED.REG_SPAJ = EKA.MST_PRODUCT_INSURED.REG_SPAJ ) and  
			         ( EKA.MST_PRODUCT_INSURED.LSBS_ID = EKA.LST_BISNIS.LSBS_ID ) and  
			         ( EKA.ID_LST_JNS_CLAIMDTL.LJJ_JENIS_ID = EKA.ID_TRX_CLMDTL.LJJ_JENIS_ID) and
			         ( ( EKA.MST_PRODUCT_INSURED.MSTE_INSURED_NO = 1 ) AND  
			         ( EKA.ID_MST_CLM.MSTE_INSURED_NO = 1 ) AND  
			         ( EKA.MST_PRODUCT_INSURED.LSBS_ID <![CDATA[<]]> 300 ) AND  
			         ( EKA.ID_MST_CLM.REGSPAJ = #value# ) ) 
			        group by
			         EKA.ID_STAT_ACP.ST_EXPL,
			         EKA.ID_MST_CLM.AMOUNT_RI,
			         EKA.ID_MST_CLM.REGCLAIM,   
			         EKA.ID_MST_CLM.ST_ACP,   
			         EKA.ID_MST_CLM.MSPO_POLICY_NO,   
			         EKA.ID_MST_CLM.REGAPLDATE,   
			         EKA.ID_MST_CLM.ACCEPTDATE,     
			         EKA.ID_MST_CLM.CLM_PAID_DATE,   
			         EKA.ID_MST_CLM.NM_DIAGNOS,   
			         EKA.ID_MST_CLM.DATE_RI_1,   
			         EKA.ID_MST_CLM.DATE_RI_2,   
			         EKA.MST_POLICY.MSPO_INS_PERIOD,   
			         EKA.MST_PERSON.MSPE_SEX,   
			         EKA.LST_CABANG.LCA_NAMA,   
			         EKA.MST_PRODUCT_INSURED.MSPR_TSI,   
			         EKA.LST_KURS.LKU_SYMBOL,   
			         EKA.MST_INSURED.MSTE_AGE,   
			         EKA.MST_INSURED.MSTE_MEDICAL,   
			         EKA.MST_PRODUCT_INSURED.REG_SPAJ,   
			         EKA.MST_CLIENT.MCL_FIRST,EKA.MST_CLIENT.MCL_MIDDLE,EKA.MST_CLIENT.MCL_LAST,   
			         EKA.ID_MST_CLM.LKU_ID,   
			         EKA.ID_MST_CLM.LKU_BAYAR,   
			         EKA.LST_BISNIS.LSBS_NAME,   
			         EKA.MST_POLICY.REG_SPAJ, EKA.LST_BISNIS.LSBS_ID,   
			         EKA.MST_PESERTA.NAMA,   
			         EKA.MST_PESERTA.TGL_LAHIR,   
			         EKA.MST_PESERTA.KELAMIN,   
			         EKA.MST_PESERTA.UMUR,   
			         EKA.ID_MST_CLM.SEHAT_TTURUT
			         ORDER BY  EKA.ID_MST_CLM.DATE_RI_1
		 </select>
		 
		 <select id="elions.uw.selectHealthClaimTMSum" parameterClass="string" resultClass="java.util.HashMap">
		 	SELECT distinct
			    eka.mst_tmms.holder_name,eka.lst_status_accept.status_accept,
			    eka.mst_tmms_det.nama_peserta, eka.mst_tmms_det.bod_peserta,
			    eka.mst_tmms.no_sertifikat, eka.lst_tm_product.product_name,
			    eka.mst_tmms_det.usia, eka.mst_tmms_det.sex,
			    eka.mst_claim_medismart.mcm_tgl_1,
			    eka.mst_claim_medismart.mcm_tgl_input,
			    eka.mst_claim_medismart.mcm_tgl_aksep,
			    eka.mst_claim_medismart.mcm_diagnosa,
			    eka.mst_claim_medismart.mcm_diagnosa2,
			    eka.mst_claim_medismart.mcm_hari, eka.mst_claim_medismart.mcm_pay_date,
			    eka.mst_claim_medismart.mcm_tgl_klaim,
			    sum(decode(eka.mst_claim_medismart.lssa_id,5,eka.mst_det_claim_medismart.mdcm_bayar,0)) mdcm_bayar, 
			    eka.mst_det_claim_medismart.product_code
			    || 'X'
			    || TO_CHAR (eka.mst_det_claim_medismart.PLAN) AS bisnis_id,
			    eka.mst_claim_medismart.mcm_no_klaim, eka.mst_claim_medismart.lssa_id,
			    sum(eka.mst_tmms.lump_sum)lump_sum, 
			    sum(eka.mst_det_claim_medismart.mdcm_jlh_claim)mdcm_jlh_claim,
			    sum(eka.mst_det_claim_medismart.mdcm_max_claim)mdcm_max_claim
			FROM 
			    eka.mst_claim_medismart@eb,
			    eka.mst_det_claim_medismart@eb,
			    eka.mst_tmms@eb,
			    eka.mst_tmms_det@eb,
			    eka.lst_tm_product@eb,
			    eka.lst_status_accept@eb
			WHERE 
			    (eka.mst_tmms_det.ID = eka.mst_tmms.ID)
			    AND (eka.mst_tmms_det.product_code = eka.lst_tm_product.product_code)
			    AND (eka.mst_claim_medismart.ID = eka.mst_tmms_det.ID)
			    AND (eka.lst_status_accept.lssa_id= eka.mst_claim_medismart.lssa_id)
			    AND (eka.mst_claim_medismart.urut = eka.mst_tmms_det.urut)
			    AND (eka.mst_claim_medismart.mcm_no_klaim = eka.mst_det_claim_medismart.mcm_no_klaim)
			    AND (eka.mst_claim_medismart.product_code = eka.mst_det_claim_medismart.product_code)
			    AND (eka.mst_claim_medismart.product_code = eka.mst_tmms_det.product_code)
			    AND eka.mst_claim_medismart.ID = #value#
			group by
			    eka.mst_tmms.holder_name,eka.lst_status_accept.status_accept,
			    eka.mst_tmms_det.nama_peserta, eka.mst_tmms_det.bod_peserta,
			    eka.mst_tmms.no_sertifikat, eka.lst_tm_product.product_name,
			    eka.mst_tmms_det.usia, eka.mst_tmms_det.sex,
			    eka.mst_claim_medismart.mcm_tgl_1,
			    eka.mst_claim_medismart.mcm_tgl_input,
			    eka.mst_claim_medismart.mcm_tgl_aksep,
			    eka.mst_claim_medismart.mcm_diagnosa,
			    eka.mst_claim_medismart.mcm_diagnosa2,
			    eka.mst_claim_medismart.mcm_hari, eka.mst_claim_medismart.mcm_pay_date,
			    eka.mst_claim_medismart.mcm_tgl_klaim,eka.mst_det_claim_medismart.product_code,
			    eka.mst_det_claim_medismart.PLAN,
			    eka.mst_claim_medismart.mcm_no_klaim, eka.mst_claim_medismart.lssa_id
		 </select>
		 
	<select id="elions.uw.selectSimpolExpired" resultClass="java.util.HashMap">
	SELECT distinct a.reg_spaj ,a.lssp_id,
	       a.mspo_spaj_date,temp2.msps_date tgl_kurang_data,temp2.msps_date tglTERIMA,
	       c.lca_nama,
	       c1.mcl_first nama_pp,
	       c2.mcl_first nama_tt,
	       c3.mcl_first  nama_penutup,sysdate,
	       deposit.msdp_pay_date,keket.msps_desc kurang_data,
	       b.mste_tgl_terima_spaj,
	       nvl(trunc(sysdate) - trunc(temp2.msps_date), 0) lama_proses,
	       a.LSPD_ID, LSSP_STATUS, eka.f_lsbs(pi.reg_spaj, pi.lsbs_id) lsbs_name, eka.f_lsdbs(pi.reg_spaj, pi.lsbs_id, pi.lsdbs_number) lsdbs_name,ps.lus_id, lu.lus_login_name user_kurang_data
	 FROM eka.mst_policy a, 
	      eka.mst_insured b,
	      eka.lst_cabang c,
	      eka.mst_client_new c1,
	      eka.mst_client_new c2,eka.mst_client_new c3,
	      eka.mst_deposit_premium deposit,
	      (select * from (
	               select  * from eka.mst_position_spaj ps1
	             where  ps1.lspd_id=2 and ps1.lssp_id=10 and ps1.lssa_id=3
	                    and upper(msps_desc) not like upper('TGL SPAJ%') 
	                     and upper(msps_desc) not like upper('NM%') 
	                     and  upper(msps_desc) not like upper('NON MED%') 
	                     and  upper(msps_desc) not like upper('MEDICAL SUB STD%')
	                     and  upper(msps_desc) not like upper('TRANSFER DARI U/W')
	                     and  upper(msps_desc) not like upper('Fund Alocation')
	                     and  upper(msps_desc) not like upper('EDIT%')))keket,
	      (select s.msps_date ,cy.reg_spaj 
	       from eka.mst_position_spaj s, eka.mst_policy cy
	       where s.reg_spaj= cy.reg_spaj
	        AND  upper(msps_desc) like ('TGL TERIMA%')) temp2,
	      EKA.LST_DOCUMENT_POSITION dp,
	      eka.mst_product_insured pi, 
	      eka.lst_bisnis lb,
	      eka.lst_det_bisnis ldb,
	      eka.mst_position_spaj ps,
	      eka.lst_user lu,
	      EKA.LST_POLICY_STATUS pst,
	      EKA.MST_AGENT_PROD ap, 
	      EKA.MST_AGENT agen
	WHERE a.reg_spaj=b.reg_spaj 
	      and a.reg_spaj=pi.reg_spaj
	      and a.reg_spaj=temp2.reg_spaj
	      and a.reg_spaj=deposit.reg_spaj
	      and a.reg_spaj=ps.reg_spaj
	      and a.reg_spaj=ap.reg_spaj
	      and  a.lca_id= c.lca_id
	      and a.mspo_policy_holder=c1.mcl_id
	      and b.mste_insured=c2.mcl_id
	      and ap.lev_comm=4
	      and ap.msag_id=agen.msag_id
	      and agen.mcl_id=c3.mcl_id
	      AND a.reg_spaj= keket.reg_spaj(+)
	      and keket.msps_date=(select max(msps_date) from eka.mst_position_spaj s where a.reg_spaj=s.reg_spaj)
	      and deposit.msdp_pay_date=(select max(msdp_pay_date)from eka.mst_deposit_premium d where a.reg_spaj=d.reg_spaj)
	      and pi.lsbs_id = lb.lsbs_id 
	      and ldb.lsbs_id = lb.lsbs_id
	      and pi.lsdbs_number = ldb.lsdbs_number
	      AND a.lssp_id=pst.lssp_id
	      and ps.lus_id = lu.lus_id
	      and a.lssp_id=10 
	      and b.lssa_id =3 
	      and a.LSPD_ID <![CDATA[<>]]>99
	      and lb.lsbs_id <![CDATA[<]]> 300 
	      and pi.lsbs_id = 120
	      and pi.lsdbs_number in (10,11,12)
	      and ps.msps_date=(select max(msps_date) from eka.mst_position_spaj where reg_spaj=a.reg_spaj)
	      and nvl(trunc(sysdate) - trunc(b.mste_tgl_terima_spaj), 0)<![CDATA[>]]>90
	      and nvl(trunc(sysdate) - trunc(b.mste_tgl_terima_spaj), 0)<![CDATA[<]]>730
	      and a.lspd_id=dp.lspd_id
	</select>
	
	<select id="elions.uw.selectPendingAdmedika" resultClass="java.util.HashMap" parameterClass="string">
		select distinct
		  to_char( sysdate,'Day')now,
         to_char(a.mspo_beg_date,'dd/MM/yyyy')begdate,
                a.reg_spaj,
             a.mspo_policy_no,
              (to_char(f.msps_date, 'Day') || ', ' || f.msps_date)hari_h,
             EKA.UTILS.PEMEGANG(a.reg_spaj)pemegang,
            (to_char(b.mste_tgl_kirim_admedika, 'Day') || ', ' || b.mste_tgl_kirim_admedika)hari_3,
             to_char(f.msps_date, 'Day') hari,            
               f.msps_date tgl_kirim,
             b.mste_tgl_terima_admedika tgl_terima,
              to_char(b.mste_tgl_aksep,'dd/MM/yyyy')tgl_akseptasi,
    		(CASE 
        		when d.lsbs_id = 823  then  SUBSTR (d.lsdbs_name, 1, 16) 
         		when d.lsbs_id = 825 then  SUBSTR (d.lsdbs_name, 1, 20) 
         		 when d.lsbs_id=826 then SUBSTR (d.lsdbs_name, 1, 19)
         		else
                	d.lsdbs_name
     		END)NAMA_PLAN,
      		c.lsbs_id KODE_PLAN,
      		   a.lca_id,a.lwk_id,a.lsrg_id ,
              (select g.lsrg_nama from eka.lst_region g where a.lca_id=g.lca_id and a.lwk_id =g.lwk_id and a.lsrg_id=g.lsrg_id)cabang,
      		<isEqual compareValue="yes">
      			  (select ( rtrim (xmlagg (xmlelement (e, e.nama || ',')).extract ('//text()'), ',')) ttg from eka.mst_peserta e where e.reg_spaj=a.reg_spaj and e.flag_admedika='1')TERTANGGUNG,
                (select(rtrim (xmlagg (xmlelement (e, (case when e.flag_jenis_peserta = 0 then 'Tertanggung  I'
                                            when e.flag_jenis_peserta = 1 then 'Tertanggung II'
                                           when e.flag_jenis_peserta = 2 then 'Tertanggung III'
                                            when e.flag_jenis_peserta = 3 then 'Tertanggung IV'
                                            when e.flag_jenis_peserta = 4 then 'Tertanggung V' else 'Tertanggung  I' end) || ',')).extract ('//text()'), ',') )STATUS from eka.mst_peserta e where e.reg_spaj=a.reg_spaj )STATUS                                                     
            </isEqual>
      		<isEqual compareValue="no">
      			  (select ( rtrim (xmlagg (xmlelement (e, e.nama || chr(10))).extract ('//text()'), ',')) ttg from eka.mst_peserta e where e.reg_spaj=a.reg_spaj and e.flag_admedika='1')TERTANGGUNG,
                (select(rtrim (xmlagg (xmlelement (e, (case when e.flag_jenis_peserta = 0 then 'Tertanggung  I'
                                            when e.flag_jenis_peserta = 1 then 'Tertanggung II'
                                           when e.flag_jenis_peserta = 2 then 'Tertanggung III'
                                            when e.flag_jenis_peserta = 3 then 'Tertanggung IV'
                                            when e.flag_jenis_peserta = 4 then 'Tertanggung V' else 'Tertanggung  I' end) || chr(10))).extract ('//text()'), ',') )STATUS from eka.mst_peserta e where e.reg_spaj=a.reg_spaj )STATUS          
      		</isEqual>    
			from
   				 eka.mst_policy a,
    			 eka.mst_insured b,
                 eka.mst_product_insured c,
                 eka.lst_det_bisnis d,                 
                 eka.mst_position_spaj f
			where
			    a.reg_spaj = b.reg_spaj
			    and b.reg_spaj = c.reg_spaj
			    and a.reg_spaj=f.reg_spaj
			    and b.mste_insured_no = c.mste_insured_no
			    and c.lsbs_id = d.lsbs_id
			    and c.lsdbs_number = d.lsdbs_number			    
			    and b.mste_tgl_kirim_admedika is not null
			    and b.mste_tgl_terima_admedika is null
			    and a.lspd_id <![CDATA[<>]]>95
			    and a.lspd_id <![CDATA[<]]>99
			    and a.mspo_beg_date <![CDATA[>=]]>to_date('01/10/2012', 'dd/MM/yyyy')
			    and c.lsbs_id in(823,204,195,826,193,825)			 
			    and f.msps_desc ='KIRIM ENROLLMENT DAN PESAN KARTU ADMEDIKA'
			group by
			    b.mste_tgl_aksep,a.lca_id ,a.lwk_id ,a.lsrg_id, f.msps_date,a.mspo_beg_date, a.reg_spaj, a.mspo_policy_no, b.mste_tgl_kirim_admedika, c.lsbs_id, d.lsbs_id, b.mste_tgl_terima_admedika, d.lsdbs_name
			    order by tgl_kirim desc
	</select>
	
	<select id="elions.uw.selectAksepSmsEmail" resultClass="java.util.HashMap">
        select b.reg_spaj, a.mste_tgl_aksep, a.lssa_id
        from eka.mst_insured a, eka.mst_policy b
        where a.reg_spaj = b.reg_spaj
            and b.mspo_jenis_terbit = 0
            and b.lspd_id != 95
            and b.lca_id in (37, 52, 63)
            and a.lssa_id = 5
            and trunc(a.mste_tgl_aksep) = trunc(sysdate-1)
	</select>
		
	<select id="elions.uw.selectQuotRm" resultClass="java.util.HashMap">
		select 
			activity.ACT_NAME as "activity name",
            nvl(activity.ACT_DETAIL,'-') as "activity remark",
            nvl(act_type.SNAT_NAME,'-') as "activity type",
            activity.ACT_SDATE as "start date",
            activity.ACT_EDATE as "end date",
            activity.ACT_REMINDER as "activity reminder status",
            activity.ACT_INTERVAL as "activity reminder interval",
            activity.ACT_REPEAT as "activity repeat status",
            account.ACC_NAME as "account name",
            nvl(account.ACC_CURR_INSURANCE,'-') as "current insurance",
            nvl(to_char(account.ACC_CURR_EXP_DATE),'-') as "expired insurance date",
            nvl(account.ACC_REMARKS,'-') as "company remark",
            account.ACC_AGENT_PIC as "japanese pic",
            list_japanese.lus_email as "japanese pic email",
            account.ACC_AGENT_ID as "agent",
            list_agent.lus_email as "agent email",
            account.ACC_PRO_ID as "proposal id"
        from crm.simas_account account
        join crm.simas_link_act_to_acc link_a2a
              on account.acc_id = link_a2a.ata_acc_id
        join crm.simas_activity activity
              on link_a2a.ata_act_id = activity.act_id
        left join crm.simas_name_act_type act_type
              on activity.ACT_TYPE = act_type.SNAT_ID
        left join eka.lst_user@eb list_japanese
              on account.ACC_AGENT_PIC = list_japanese.lus_login_name
        left join eka.lst_user@eb list_agent
              on account.ACC_AGENT_ID = list_agent.lus_login_name
		where activity.ACT_SDATE <![CDATA[>=]]> to_date(SYSDATE,'dd/mm/yyyy')
        order by activity.ACT_SDATE
	</select>
	
	<select id="elions.uw.selectHistQuotRm" resultClass="java.util.HashMap">
		select 
		  activity.act_id as "activity_id",
		  nvl(account.JPN_PIC, '-') as "japanese_pic",
		  nvl(account.LOCAL_PIC, '-') as "local_pic",
		  nvl(account.WS_PIC, '-') as "ws_pic",
		  activity.act_sdate as "start_date",
		  activity.act_edate as "end_date",
		  activity.act_name as "activity_name",
		  nvl(decode(actType.snat_name, 
		    'actType1', 'To do', 
		    'actType2', 'Meeting',
		    'actType3', 'Call',
		    'actType4', 'Socialization',
		    'actType5', 'Seminar',
		    'actType6', 'Quotation Request',
		    'actType7', 'Quotation Submission',
		    'actType8', 'Menemukan Prospek (Bank Nama)',
		    'actType9', 'Pendekatan (Kontak Telepon)',
		    'actType10', 'Dapat Janji Bertemu',
		    'actType11', 'Bertemu Prospek',
		    'actType12', 'Presentasi Proposal',
		    'actType13', 'Isi SPAJ / Closing',
		    'actType14', 'Layanan Purna Jual (Antar Polis)',
		    'actType15', 'Mendapatkan Referensi'
		  ),'-') as "activity_type",
		  account.ACC_NAME as "company_name",
		  nvl(activity.ACT_DETAIL,'-') as "activity_detail"
		from 
		    crm.simas_activity activity
		left join crm.simas_name_act_type actType
		    on activity.act_type = actType.snat_id
		left join crm.SIMAS_LINK_ACT_TO_ACC accLink
		    on activity.act_id = accLink.ATA_ACT_ID
		right join crm.SIMAS_ACCOUNT_REPORT account
		    on account.INST_ID = accLink.ATA_ACC_ID
		where 
		  activity.ACT_EDATE between to_date((to_char(SYSDATE-7,'dd/mm/yyyy')) || ' 16:00:01','dd/MM/yyyy hh24:mi:ss') and to_date((to_char(SYSDATE,'dd/mm/yyyy')) || ' 16:00:00','dd/MM/yyyy hh24:mi:ss')
		order by account.LOCAL_PIC, activity.ACT_SDATE, activity.ACT_EDATE
	</select>
	
	<select id="elions.uw.selectJpnQuotRm" resultClass="java.util.HashMap">
		select distinct
		  nvl(account.JPN_EMAIL, '-') as "jap_email"
		from 
		    crm.simas_activity activity
		left join crm.simas_name_act_type actType
		    on activity.act_type = actType.snat_id
		left join crm.SIMAS_LINK_ACT_TO_ACC accLink
		    on activity.act_id = accLink.ATA_ACT_ID
		right join crm.SIMAS_ACCOUNT_REPORT account
		    on account.INST_ID = accLink.ATA_ACC_ID
		where 
		  activity.ACT_EDATE between to_date((to_char(SYSDATE-7,'dd/mm/yyyy')) || ' 16:00:01','dd/MM/yyyy hh24:mi:ss') and to_date((to_char(SYSDATE,'dd/mm/yyyy')) || ' 16:00:00','dd/MM/yyyy hh24:mi:ss')
	</select>
	
	<select id="elions.uw.selectAgentQuotRm" resultClass="java.util.HashMap">
		select distinct
		  nvl(account.LOCAL_EMAIL, '-') as "loc_email"
		from 
		    crm.simas_activity activity
		left join crm.simas_name_act_type actType
		    on activity.act_type = actType.snat_id
		left join crm.SIMAS_LINK_ACT_TO_ACC accLink
		    on activity.act_id = accLink.ATA_ACT_ID
		right join crm.SIMAS_ACCOUNT_REPORT account
		    on account.INST_ID = accLink.ATA_ACC_ID
		where 
		  activity.ACT_EDATE between to_date((to_char(SYSDATE-7,'dd/mm/yyyy')) || ' 16:00:01','dd/MM/yyyy hh24:mi:ss') and to_date((to_char(SYSDATE,'dd/mm/yyyy')) || ' 16:00:00','dd/MM/yyyy hh24:mi:ss')
	</select>
	
	<select id="elions.uw.selectWsQuotRm" resultClass="java.util.HashMap">
		select distinct
		  nvl(account.WS_EMAIL, '-') as "ws_email"
		from 
		    crm.simas_activity activity
		left join crm.simas_name_act_type actType
		    on activity.act_type = actType.snat_id
		left join crm.SIMAS_LINK_ACT_TO_ACC accLink
		    on activity.act_id = accLink.ATA_ACT_ID
		right join crm.SIMAS_ACCOUNT_REPORT account
		    on account.INST_ID = accLink.ATA_ACC_ID
		where 
		  activity.ACT_EDATE between to_date((to_char(SYSDATE-7,'dd/mm/yyyy')) || ' 16:00:01','dd/MM/yyyy hh24:mi:ss') and to_date((to_char(SYSDATE,'dd/mm/yyyy')) || ' 16:00:00','dd/MM/yyyy hh24:mi:ss')
	</select>	
	
	<select id="elions.uw.selectTargetList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		    DECODE(GROUP_NAME, 
		        'Group Health 2', 1, 
		        'Pensiun Fund', 2, 
		        'WorkSite', 3
		    ) as GROUP_TYPE,
		    INST_ID,
		    GROUP_NAME,
		    ACC_NAME,
		    INTERMEDIARY,
		    JPN_PIC,
		    LOCAL_PIC,
		    WS_PIC,
		    INSURANCE,
		    EXP_DATE,
		    PREMIUM,
		    CLOSE_DATE,
		    REMARKS,
		    LAST_ACT_REMARKS,
		    FIRST_VISIT,
		    LAST_VISIT,
		    QUOT_SUBMISSION
		FROM crm.simas_account_report
		ORDER BY GROUP_TYPE, LOCAL_PIC, INST_ID
	</select>
	
	<select id="elions.uw.selectJumTop_x" resultClass="double" parameterClass="string">
		SELECT
    (CASE
        WHEN (g.lsbs_id = 164)
        THEN (SELECT msl_premi premi_topup FROM eka.mst_slink WHERE reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') AND msl_kode = 5 AND msl_new = 1 AND msl_tu_ke != 0)
        WHEN (g.lsbs_id = 191)
        THEN (SELECT nvl(sum(mu_jlh_premi),0) premi_topup FROM eka.mst_ulink where lt_id in (2,5) AND reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' '))
    END)premi_topup
FROM eka.mst_policy a,
     eka.mst_product_insured e,
     eka.lst_det_bisnis g
WHERE a.reg_spaj = e.reg_spaj
AND e.lsbs_id= g.lsbs_id
AND e.lsdbs_number = g.lsdbs_number
AND <![CDATA[ e.lsbs_id < 300 ]]> 
AND a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
<!-- 	<select id="elions.uw.selectTop_u" resultClass="double" parameterClass="string"> -->
<!-- 		SELECT -->
<!-- 	</select> -->
	
<!-- 	<select id="elions.uw.selectTop_s" resultClass="double" parameterClass="string"> -->
		
<!-- 	</select> -->
	
	<select id="elions.uw.selectInboxChecklistExist" resultClass="int" parameterClass="java.util.HashMap" >
		select count(*)
		from eka.mst_inbox_checklist
		where mi_id = #mi_id#
		and ljj_id = #ljj_id#
		and lc_id = #lc_id#
	</select>
	
	<select id="elions.uw.seleckCekRef" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">		
		select 
		    count(a.nomor_key)
		from 
		    eka.prw_trx a,
		    eka.prw_seller b
		where 
		    substr(a.nomor_key,1,11) = #spaj#
		    and a.id_seller = b.id_seller
			<isEqual property="jenis" compareValue="1">
				and kode_program = 1
			</isEqual>
			<isEqual property="jenis" compareValue="2">
				and kode_program = 2
			</isEqual>
	</select>
	
	<select id="elions.uw.selectLtId" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">		
		select
		    lt_id
		from
		    eka.mst_ulink
		where
		    mu_tgl_trans = (select mu_tgl_trans from eka.mst_ulink where mu_premi_ke = 1 and reg_spaj = #spaj#)
		    and reg_spaj = #spaj#
		    and mu_jlh_premi = #top_up#
	</select>
	
	<select id="elions.uw.selectRatePoint" resultClass="java.lang.Double" parameterClass="java.lang.String">		
		select nilai_poin from eka.lst_table_poin where lsbs_id = #value# and flag_aktif = 1
	</select>
	
    <select id="elions.uw.selectInboxCheckingLspdId" resultClass="int" parameterClass="java.util.HashMap">
    	SELECT count(*)
    	from eka.mst_inbox
    	where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
    	and lspd_id = #lspd_id#
    </select>
    
    <select id="elions.uw.selectMstInboxExisting" resultClass="java.util.HashMap" parameterClass="string">
		select * 
		from eka.mst_inbox 
		where tgl_berkas_masuk  = (select min(tgl_berkas_masuk) from eka.mst_inbox where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')) 
		and reg_spaj =rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>    
	
	<select id="elions.uw.selectDaftarCabangBsm" resultClass="java.util.HashMap">
		select lcb_no, nama_cabang, email_cab
		from eka.lst_cabang_bii
		where lcb_no in ('S33','S36','S159','S184','S198','S259','S263')
	</select>
	
	<select id="elions.uw.selectListReportOutstandingBsm" resultClass="com.ekalife.elions.model.OutstandingBSM" parameterClass="java.util.HashMap">
		<isEqual property="jenis_produk" compareValue="SP">
			select 
				a.reg_spaj,
				eka.utils.det_produk(d.lsbs_id, d.lsdbs_number) produk,
				eka.utils.kurs_simbol(a.lku_id) kurs,
				eka.utils.pemegang(a.reg_spaj) pemegang,
				a.mspo_policy_no_format polis,
				f.premi, d.mspr_tsi up, decode(f.ro, 1, 'ALL', 2, 'PREMI', 3, 'AUTOBREAK', '-') rollover, f.mgi, f.bunga, f.persen, 
				a.mspo_date_print print_polis, c.mste_beg_date tgl_mulai, c.mste_tgl_aksep tgl_aksep, 
				eka.utils.agen_bancass(b.lrb_id) agen_penutup,
				eka.utils.agen_bancass(b.reff_id) agen_referral,
				e.mrc_cabang rek_cabang, e.mrc_nama rek_nama, e.mrc_no_ac rek_no
			from eka.mst_policy a, eka.mst_reff_bii b, eka.mst_insured c, eka.mst_producT_insured d, eka.mst_rek_client e,
				(
				    SELECT   reg_spaj, mpr_deposit premi, mpr_jangka_invest mgi, mpr_interest bunga, mpr_rate persen, mpr_jns_ro ro
				      FROM   eka.mst_powersave_ro a
				     WHERE   a.mps_kode IN (2, 3, 5, 7)
				             AND mps_deposit_date =
				                   (SELECT   MAX (mps_deposit_date) FROM   eka.mst_powersave_ro WHERE   mps_kode IN (2, 3, 5, 7) AND reg_spaj = a.reg_spaj)
				) f
			where a.reg_spaj = b.reg_spaj
			and b.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = b.reg_spaj)
			and a.lspd_id <![CDATA[<>]]> 95 and a.lssp_id = 1
			and b.lcb_penutup = #lcb_no#
			and a.reg_spaj = c.reg_spaj
			and c.mste_beg_date <![CDATA[<=]]> #process_date#
			and c.mste_tgl_aksep is not null
			and c.reg_spaj = d.reg_spaj
			and c.mste_insured_no = d.mste_insured_no
			and d.lsbs_id <![CDATA[<]]> 300
			and a.reg_spaj = e.reg_spaj
			and a.reg_spaj = f.reg_spaj
			order by 
			eka.utils.det_produk(d.lsbs_id, d.lsdbs_number), eka.utils.kurs_simbol(a.lku_id)
		</isEqual>
		<isEqual property="jenis_produk" compareValue="SSL">
			select 
				a.reg_spaj,
				eka.utils.det_produk(d.lsbs_id, d.lsdbs_number) produk,
				eka.utils.kurs_simbol(a.lku_id) kurs,
				eka.utils.pemegang(a.reg_spaj) pemegang,
				a.mspo_policy_no_format polis, msl_desc transaksi,
				f.premi, d.mspr_tsi up, decode(f.ro, 1, 'ALL', 2, 'PREMI', 3, 'AUTOBREAK', '-') rollover, f.mgi, f.bunga, f.persen, 
				a.mspo_date_print print_polis, c.mste_beg_date tgl_mulai, c.mste_tgl_aksep tgl_aksep, 
				eka.utils.agen_bancass(b.lrb_id) agen_penutup,
				eka.utils.agen_bancass(b.reff_id) agen_referral,
				e.mrc_cabang rek_cabang, e.mrc_nama rek_nama, e.mrc_no_ac rek_no
			from eka.mst_policy a, eka.mst_reff_bii b, eka.mst_insured c, eka.mst_producT_insured d, eka.mst_rek_client e,
				(
				    SELECT   reg_spaj, msl_desc, msl_premi premi, msl_mgi mgi, msl_bunga bunga, msl_rate persen, msl_ro ro
				      FROM   eka.mst_slink WHERE msl_aktif = 1 and msl_kode in (2,3,5)
				) f
			where a.reg_spaj = b.reg_spaj
			and b.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = b.reg_spaj)
			and a.lspd_id <![CDATA[<>]]> 95 and a.lssp_id = 1
			and b.lcb_penutup = #lcb_no#
			and a.reg_spaj = c.reg_spaj
			and c.mste_beg_date <![CDATA[<=]]> #process_date#
			and c.mste_tgl_aksep is not null
			and c.reg_spaj = d.reg_spaj
			and c.mste_insured_no = d.mste_insured_no
			and d.lsbs_id <![CDATA[<]]> 300
			and a.reg_spaj = e.reg_spaj
			and a.reg_spaj = f.reg_spaj
			order by 
			eka.utils.det_produk(d.lsbs_id, d.lsdbs_number), eka.utils.kurs_simbol(a.lku_id)
		</isEqual>
		<isEqual property="jenis_produk" compareValue="SPL">
			select 
				a.reg_spaj,
				eka.utils.det_produk(d.lsbs_id, d.lsdbs_number) produk,
				eka.utils.kurs_simbol(a.lku_id) kurs,
				eka.utils.pemegang(a.reg_spaj) pemegang,
				a.mspo_policy_no_format polis, 
				d.mspr_premium premi, d.mspr_tsi up, 
				f.tgl, f.lji_invest, f.lnu_tgl, f.total_unit, f.harga_unit, f.nilai_polis, f.lji_id,
				a.mspo_date_print print_polis, c.mste_beg_date tgl_mulai, c.mste_tgl_aksep tgl_aksep, 
				eka.utils.agen_bancass(b.lrb_id) agen_penutup,
				eka.utils.agen_bancass(b.reff_id) agen_referral,
				e.mrc_cabang rek_cabang, e.mrc_nama rek_nama, e.mrc_no_ac rek_no
			from eka.mst_policy a, eka.mst_reff_bii b, eka.mst_insured c, eka.mst_producT_insured d, eka.mst_rek_client e,
				(
				    SELECT 
				        a.reg_spaj, TO_CHAR (e.lnu_tgl, 'dd/mm/yy') tgl, d.lji_invest, e.lnu_tgl, SUM (b.mtu_unit) total_unit, e.lnu_nilai harga_unit, (SUM (b.mtu_unit) * e.lnu_nilai) nilai_polis, b.lji_id
				    FROM
				        eka.mst_ulink a, eka.mst_trans_ulink b, eka.lst_jenis_invest d,
				        (SELECT a.lnu_tgl, a.lji_id, a.lnu_nilai FROM 
				            eka.lst_nab_ulink a, (SELECT lji_id, MAX (lnu_tgl) lnu_tgl FROM eka.lst_nab_ulink GROUP BY lji_id) b
				        WHERE a.lji_id = b.lji_id AND a.lnu_tgl = b.lnu_tgl) e
				    WHERE 
				        b.lji_id = d.lji_id
				        and a.reg_spaj = b.reg_spaj
				        and a.mu_ke = b.mu_ke
				        AND b.lji_id = e.lji_id
				        AND b.MTU_UNIT is not null    
				    GROUP BY 
				        a.reg_spaj, d.lji_invest, b.lji_id, e.lnu_tgl, e.lnu_nilai
				) f
			where a.reg_spaj = b.reg_spaj
			and b.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = b.reg_spaj)
			and a.lspd_id <![CDATA[<>]]> 95 and a.lssp_id = 1
			and b.lcb_penutup = #lcb_no#
			and a.reg_spaj = c.reg_spaj
			and c.mste_beg_date <![CDATA[<=]]> #process_date#
			and c.mste_tgl_aksep is not null
			and c.reg_spaj = d.reg_spaj
			and c.mste_insured_no = d.mste_insured_no
			and d.lsbs_id <![CDATA[<]]> 300
			and a.reg_spaj = e.reg_spaj
			and a.reg_spaj = f.reg_spaj
			order by 
			eka.utils.det_produk(d.lsbs_id, d.lsdbs_number), eka.utils.kurs_simbol(a.lku_id)
		</isEqual>
	</select>
	
	<select id="elions.uw.selectProdukTE" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		select
			a.id_item,
		    a.nama_item,
		    a.nilai_point
		from
		    eka.prw_item a
		where
		    a.aktif = 1
		    and a.jn_dept = 2
	</select>
	
	<select id="elions.uw.cekRef" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">
		select
		    count(a.mcl_first)
		from
		    eka.mst_client_new a,
		    eka.mst_agent b
		where
		    a.mcl_id = b.mcl_id
		    and a.mcl_first like upper('%'|| #nama# ||'%')
		    and a.mspe_date_birth = to_date(#tgl_lahir#,'dd/MM/yyyy')
	</select>
	
	<select id="elions.uw.selectReportRef" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select
		    a.*, b.nama nama_ref
		from
		    eka.mst_referensi a,
		    eka.prw_seller b
		where
		    a.id_seller = b.id_seller
		    and a.create_date between to_date(#bdate# || ' 00:00:00','dd/MM/yyyy hh24:mi:ss') and to_date(#edate# || ' 23:59:59','dd/MM/yyyy hh24:mi:ss') 
	</select>
	
	<select id="elions.uw.selectMspIdFromMspFireId" parameterClass="string" resultClass="string">
	  SELECT msp_id FROM eka.mst_pas_sms WHERE msp_fire_id= #msp_fire_id# AND rownum = 1  		
	</select>
	
	<select id="elions.uw.selectLifeRating_ggtsgptsgot" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	  SELECT a.value_1, a.value_2 FROM eka.lst_ggt_sgpt_sgot a, eka.lst_ggt b, eka.lst_sgpt_sgot c 
	  	WHERE a.lgg_id=b.lgg_id and a.lss_id=c.lss_id
	  		and #ggt# between b.min_value_x and b.max_value_x
	  		and #sgot_sgpt# between c.min_value_x and c.max_value_x
	</select>
	
	<select id="elions.uw.selectLifeRating" parameterClass="string" resultClass="java.util.HashMap">
	  SELECT t_value, adb, tpd, wop FROM eka.lst_life_rating WHERE value_1 = #value# or value_2 = #value#
	</select>
	  
	  <select id="elions.uw.selectDataPasForFix" resultClass="java.util.HashMap" parameterClass="string">
		select p.msp_fire_id, p.reg_spaj, p.lspd_id, p.msp_pas_beg_date, p.msp_pas_end_date,
		(select x.lspd_position from eka.lst_document_position x where x.lspd_id=p.lspd_id) nama_posisi
		from(
			select a.msp_fire_id, a.reg_spaj, a.msp_pas_beg_date, a.msp_pas_end_date,
			nvl(b.lspd_id, a.lspd_id) lspd_id
			from eka.mst_pas_sms a, eka.mst_policy b where 
			a.msp_fire_id is not null
			and jenis_pas in ('INDIVIDU','AP/BP')
			and a.reg_spaj=b.reg_spaj(+)
			and a.msp_fire_id = #value#
		) p 
	</select>
	
	<select id="elions.uw.selectDataPolicyForFix" resultClass="java.util.HashMap" parameterClass="string">
		select a.reg_spaj, a.lscb_id, a.mspo_beg_date, a.mspo_end_date, a.mspo_next_bill, b.msbi_beg_date, b.msbi_end_date, b.msbi_due_date
		from eka.mst_policy a, eka.mst_billing b
		where a.reg_spaj=b.reg_spaj
		and a.reg_spaj = #value#
	</select>
<!-- TOP UP -->

	<select id="elions.uw.selectKYCtopup_main" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.kyc.TopUpCase">
		SELECT c.lsbs_id,b.mste_kyc_result kycResult, 
	           eka.utils.jml_trans_link(a.reg_spaj) jmlh_tu,
		       eka.utils.nominal_trans_link(a.reg_spaj) total_tu,
		       a.reg_spaj, a.mspo_policy_no_format, i.ljb_note jabatan,
		       d.mcl_first pemegang, e.mcl_first tertanggung, b.mste_beg_date,
		       f.lsdbs_name, g.lku_symbol,(c.mspr_premium - nvl(c.mspr_discount,0)) premi_pokok, '' topup,
		       DECODE (a.lscb_id, 6, 'M', 1, 'Q', 2, 'SA', 3, 'A', 'SP') frek,
		       d.mpn_job_desc, d.mkl_kerja, d.mkl_industri, d.mkl_penghasilan,
		       d.mkl_pendanaan, d.mkl_tujuan,a.mspo_policy_holder, b.mste_kyc_date,b.mste_flag_uw,
		       (case when ((select k.jenis
                				from eka.mst_reff_bii  j,
                 	    		eka.lst_reff_bii k
                				where j.lrb_id = k.lrb_id
                				and j.reg_spaj = a.reg_spaj and no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = j.reg_spaj))=2 
                			AND
                			(SELECT m.flag_print_cabang
                  				FROM eka.mst_policy l, eka.lst_wakil m
                 				WHERE l.lca_id = m.lca_id
                   				AND l.lwk_id = m.lwk_id
                   				AND l.reg_spaj = a.reg_spaj)=1)
           		 	then 'SPAJ belum diterima'
            		else ''
            	end) status_spaj
		  FROM eka.mst_policy a,
		       eka.mst_insured b,
		       eka.mst_product_insured c,
		       eka.mst_client_new d,
		       eka.mst_client_new e,
		       eka.lst_det_bisnis f,
		       eka.lst_kurs g,
		       eka.lst_jabatan i
		 WHERE a.lstb_id = 1
		   and trunc(b.mste_kyc_date) <![CDATA[ >= ]]>  to_date(#dariTanggal#,'dd/MM/yyyy')
		   and trunc(b.mste_kyc_date) <![CDATA[ <= ]]>  to_date(#sampaiTanggal#,'dd/MM/yyyy')
		   AND a.reg_spaj = b.reg_spaj
		   AND a.reg_spaj = c.reg_spaj
		   AND a.mspo_policy_holder = d.mcl_id
		   AND b.mste_insured = e.mcl_id
		   AND c.lsbs_id = f.lsbs_id
		   AND c.lsdbs_number = f.lsdbs_number
		   AND a.lku_id = g.lku_id
		   And d.ljb_id= i.ljb_id(+)
		   and <![CDATA[ c.lsbs_id < 300 ]]> 
	</select>

	<select id="elions.uw.selectKe" resultClass="int">
		select rownum mu_ke from eka.mst_ulink u where reg_spaj = rpad(replace(#value#,'.'),11,' ') and mu_ke > 1 and lt_id in (2,5)
		union
		select msl_tu_ke mu_ke from eka.mst_slink where reg_spaj = rpad(replace(#value#,'.'),11,' ') and msl_no > 1 and msl_kode = 5
	</select>
	
	<select id="elions.uw.selectPremiTop" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
    	select mu_ke, mu_jlh_premi top_up_jumlah
			from eka.mst_ulink
			where mu_ke > 1 and lt_id in (2,5) and reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
			and mu_ke = #kee#
		union
		select msl_tu_ke mu_ke, msl_premi top_up_jumlah
			from eka.mst_slink
			where msl_no > 1 and msl_kode = 5 and reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
			and msl_tu_ke = #kee#
    </select>
    
<!--     <select id="elions.uw.selectPremiTop" resultClass="java.util.HashMap" parameterClass="string"> -->
<!--     	select mu_ke -1 mu_ke, mu_jlh_premi -->
<!-- 			from eka.mst_ulink -->
<!-- 			where mu_ke > 1 and lt_id in (2,5) and reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') -->
<!-- 		union -->
<!-- 		select msl_tu_ke mu_ke, msl_premi -->
<!-- 			from eka.mst_slink -->
<!-- 			where msl_no > 1 and msl_kode = 5 and reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') -->
<!--     </select> -->
<!-- endTOP UP -->
<!-- VIPcard -->
	<select id="elions.uw.selectVipCard" parameterClass="string" resultClass="java.util.HashMap">
		select * from eka.mst_simcard where replace(nama,'.','') like ( 
        	select '%' ||replace(decode(instr(mcl_first,'QQ'),0,mcl_first,TRIM(SUBSTR(mcl_first, 0, INSTR(mcl_first,'QQ')-1))) ,'.','')|| '%'
        	from eka.mst_policy a, eka.mst_client_new b
        	where a.mspo_policy_holder = b.mcl_id
        	and a.reg_spaj = rpad(replace(#value#,'.'),11,' '))
        	and tgl_lahir = (
           	 	select b.mspe_date_birth
            	from eka.mst_policy a, eka.mst_client_new b
            	where a.mspo_policy_holder = b.mcl_id
            	and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
        	)
        and flag_aktif=1 and msc_jenis = 9
	</select>
		
 	<select id="elions.uw.selectPaymentMode" resultClass="java.lang.Double" parameterClass="java.lang.String">
        select sum(mspa_payment)
             from eka.mst_payment
             where reg_spaj = rpad(replace(#value#,'.'),11,' ')
     </select>
	
	<select id="elions.uw.selectNoPolisFormat" parameterClass="string" resultClass="string">
		SELECT mspo_policy_no_format
		  FROM eka.mst_policy
		 	WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	  
	   <select id="elions.uw.selectSymbol" resultClass="string" parameterClass="string">
    	SELECT lku_symbol
    	from eka.lst_kurs
    	where lku_id=#value#
    </select>
    
	<select id="elions.uw.selectBancassTeam" parameterClass="string" resultClass="string">
		SELECT distinct b.team_name
		FROM eka.mst_reff_bii  a, eka.lst_cabang_bii b
		WHERE a.lcb_no = b.lcb_no
		    AND a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
		    AND a.level_id = 4
	</select>
	
	<select id="elions.uw.selectCountMstDrekDet" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		 SELECT count(*) FROM eka.mst_drek_det 
		 WHERE no_trx = #noTrx#
 	 </select>
 	 
 	 <select id="elions.uw.selectCountNotSentMstEmail" resultClass="int">
 	 	select count(*)
		from eka.mst_email
		where me_status = 0
 	 </select>
 	 
 	 <select id="elions.uw.selectAppointmentProgramHadiah" parameterClass="string" resultClass="com.ekalife.elions.model.Hadiah">
		select 
			a.reg_spaj, a.mh_no, a.lhc_id, a.lh_id, a.lspd_id, a.mh_alamat, a.mh_kota,
			a.mh_kodepos, a.mh_telepon, a.mh_keterangan, a.mh_tgl_input, a.mh_tgl_aksep,
			a.mh_tgl_terima_nsbh, a.create_id, a.create_dt, a.mh_tgl_kirim_uw, a.mh_tgl_order_purchasing,
			a.mh_tgl_barang_ready, a.mh_tgl_kirim_ga, a.mh_sn, a.mh_tgl_kirim_hadiah
		from
			eka.mst_hadiah a
		where
			a.lspd_id = '93'
			and a.program_hadiah = '1'
			and a.mh_tgl_kirim_hadiah between to_date(#value#,'dd/MM/yyyy') and to_date(#value#,'dd/MM/yyyy')+1
			<!-- and a.mh_tgl_kirim_hadiah between to_date(#value# || ' 00:00:00','dd/MM/yyyy hh24:mi:ss') and to_date(#value# || ' 23:59:59','dd/MM/yyyy hh24:mi:ss') -->
	</select>
		
	<resultMap id="elions.uw.select_detilprodukutama1" class="java.util.HashMap">
		<result property="lsdbs_number" column="lsdbs_number" javaType="int" jdbcType="NUMBER" />                                                                                                                                                       
		<result property="lsdbs_name" column="lsdbs_name" javaType="string" jdbcType="VARCHAR2" nullValue=""/>                                                                                                                                          
		<result property="lsbs_id" column="lsbs_id" javaType="int" jdbcType="NUMBER" /> 
		<result property="plan" column="plan" javaType="string" jdbcType="VARCHAR2" nullValue=""/>       
	</resultMap>
	
	<select id="elions.uw.select_detilprodukutama_viewer" resultMap="elions.uw.select_detilprodukutama1" parameterClass="java.util.HashMap">
		SELECT LSBS_ID, LSDBS_NUMBER, 
			(CASE WHEN (SELECT MSPO_FLAG_NEW FROM EKA.MST_POLICY WHERE REG_SPAJ = RPAD (REPLACE (#spaj#, '.'), 11, ' ') ) != 1 THEN 
				LSDBS_NAME0
			ELSE
	        	LSDBS_NAME0||' ~ '||LSDBS_NAME
			END)
			LSDBS_NAME, 
			LSBS_ID||'~X'||LSDBS_NUMBER PLAN
		FROM EKA.LST_DET_BISNIS
		WHERE LSBS_ID = #kode#
	</select>	
 	 
 	<select id="elions.uw.selectTransPolToUw" resultClass="java.util.HashMap">
		select a.reg_spaj, c.lsbs_id, a.mspo_date_print, b.mste_beg_date
		from eka.mst_policy a, eka.mst_insured b, eka.mst_product_insured c,
		    eka.mst_trans_history d, eka.mst_reff_bii e, eka.lst_cabang_bii f
		where a.reg_spaj = b.reg_spaj
		    and a.reg_spaj = c.reg_spaj
		    and a.reg_spaj = d.reg_spaj
		    and a.reg_spaj = e.reg_spaj
		    and a.lspd_id = 6
		    and a.mspo_date_print is not null
		    and d.jenis = 23
		    and d.tgl_transfer_uw is null
		    and d.tgl_transfer_uw_speedy is null
		    and not exists (select 1 from eka.mst_position_spaj where lspd_id in (2,27) and reg_spaj = a.reg_spaj)
		    and e.lcb_penutup = f.lcb_no
		    and f.jenis in (2,3,16)
	</select>
	
	<select id="elions.uw.selectCountKoefisienUpp" resultClass="int" parameterClass="java.util.HashMap">
		select count(*)
		from eka.lst_production_coef
		where lsbs_id = #lsbs_id#
			and lsdbs_number = #lsdbs_number#
	</select>	 
	
	<select id="elions.uw.selectjumlahAdmedika" parameterClass="string" resultClass="int">
		 select count (*) JUMLAH from eka.mst_position_spaj where reg_spaj = RPAD (#value#, 11, ' ')  and msps_desc='KIRIM ENROLLMENT DAN PESAN KARTU ADMEDIKA'
	</select>
	
	<select id="elions.uw.selectSyariah" parameterClass="string" resultClass="java.lang.Integer">
		 select mspo_syahriah from eka.mst_policy where reg_spaj = RPAD (REPLACE (#spaj#, '.'), 11, ' ')
	</select>
	
	<select id="elions.uw.selectInfoTabaru" resultMap="elions.uw.selectInfoTabaru.result" parameterClass="java.util.HashMap">
		SELECT SUM(CASE WHEN B.LSBS_ID = 899 
                THEN 0 ELSE B.PREMI * EKA.PKG_SYARIAH.GET_PERSEN_SYARIAH(B.LSBS_ID, B.LSDBS_NUMBER, 1) 
           END) AS TABARRU,
       SUM(CASE WHEN B.LSBS_ID = 899 
                THEN B.PREMI ELSE B.PREMI * EKA.PKG_SYARIAH.GET_PERSEN_SYARIAH(B.LSBS_ID, B.LSDBS_NUMBER, 2) 
           END) AS UJRAH
                FROM EKA.MST_ULINK_BILL A, EKA.MST_ULINK_DET_BILL B
                WHERE A.REG_SPAJ = B.REG_SPAJ
                  AND A.TAHUN = B.TAHUN
                  AND A.POT_KE = B.POT_KE
                  AND A.REG_SPAJ = rpad(replace(#spaj#,'.'),11,' ')
                  AND A.TAHUN = #tahun#
                  AND A.POT_KE = #pot_ke# 
	</select>
	
		<select id="elions.uw.selectMst_Ulink_Bill" resultMap="elions.uw.selectMst_Ulink_Bill.result" parameterClass="java.util.HashMap">
			select reg_spaj, tahun, pot_ke, total_premi
			from eka.mst_ulink_bill
			where reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
	</select>	
	
	<select id="elions.uw.selectBankData" parameterClass="integer" resultClass="java.util.HashMap">
		select lbd_name , lbd_id
		from eka.lst_bank_data
		where lbd_jenis=#value#
		and   flag_aktif=1
	 </select>
	 
	 <select id="elions.uw.selectBankDataSub" parameterClass="integer" resultClass="java.util.HashMap">
		select lbd_name , lbd_id
		from eka.lst_bank_data
		where lbd_parent_id=#value#
		and   flag_aktif=1
	 </select>
		
	<!-- Select cabang from user -->
	<select id="elions.uw.selectCabangForUserInput" resultClass="java.util.HashMap" parameterClass="string">
		select 
			    b.lca_id,a.lus_id
		from
				eka.mst_policy a,
				eka.lst_user b
		where 
			a.lus_id=b.lus_id and reg_spaj=rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectUserCSsms" parameterClass="string" resultClass="java.util.HashMap">
		select a.lus_id key, upper(a.lus_full_name) value 
		from eka.lst_user a
		where a.lus_id $value$
		order by a.lus_full_name asc
	</select>
	
	<select id="elions.uw.selectReportSMSHarian" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct
		    to_char(a.process_date,'dd/MM/yyyy')tgl, a.lus_id,b.lus_login_name, 
		    sum(case when a.process=3 then 1 else 0 end)not_fu,
            sum(case when a.process=1 then 1 else 0 end)phone,
            sum(case when a.process=2 then 1 else 0 end)sms,          
            sum(case when a.process=4 then 1 else 0 end)perlu_fu
		from
		    eka.smsserver_in a,
		    eka.lst_user b
		where
		    a.process_date between to_date(#bdate# || ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') AND TO_DATE (#edate# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)')
		    and a.lus_id=b.lus_id
		 <isNotEqual property="lus_id" compareValue="ALL">
        	and ( b.lus_id = #lus_id#)
        </isNotEqual>
		group by
		     to_char(a.process_date,'dd/MM/yyyy'),a.lus_id,b.lus_login_name
		order by
		    lus_id,tgl asc
	</select>
	
	<select id="elions.uw.selectReportSMSBulanan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct
		      a.lus_id,b.lus_login_name, 
            sum(case when a.process=3 then 1 else 0 end)not_fu,
            sum(case when a.process=1 then 1 else 0 end)phone,
            sum(case when a.process=2 then 1 else 0 end)sms,          
            sum(case when a.process=4 then 1 else 0 end)perlu_fu
		from
		    eka.smsserver_in a,
		    eka.lst_user b
		where
		    a.process_date between TO_DATE  (#bdate# || ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') AND TO_DATE (#edate# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)')
		    and a.lus_id=b.lus_id
		 <isNotEqual property="lus_id" compareValue="ALL">
        	and ( b.lus_id = #lus_id#)
        </isNotEqual>
		group by
		    a.lus_id,b.lus_login_name
		order by
		    lus_id asc
	</select>
	
	<select id="elions.uw.selectValidasiInputPasBp" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	   SELECT * 
	   FROM eka.mst_pas_sms 
	   WHERE jenis_pas = 'AP/BP' AND 
	       msag_id_pp = #msag_id_pp# AND 
	       msp_pas_nama_pp = #msp_pas_nama_pp# AND 
	       msp_full_name = #msp_full_name# AND 
	       msp_pas_beg_date = #msp_pas_beg_date#
	</select>
	
	<select id="elions.uw.selectValidasiInputDbd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
       SELECT * 
       FROM eka.mst_pas_sms 
       WHERE jenis_pas = 'DBD AGENCY' AND 
           msp_pas_nama_pp = #msp_pas_nama_pp# AND 
           msp_full_name = #msp_full_name# AND 
           msp_pas_beg_date = #msp_pas_beg_date#
    </select>
	
	<select id="elions.uw.selectNamaCabang" parameterClass="java.lang.String" resultClass="java.lang.String">
	   SELECT nama_cabang from eka.lst_cabang_bii where lcb_no =#value#
	</select>
	
	<select id="elions.uw.selectPolisCoverLetter" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.CoverLetter">
        SELECT a.reg_spaj, a.mspo_policy_no_format as no_polis, mst_client_a.mcl_first as pemegangpolis, mst_client_b.mcl_first as tertanggung, 
			e.lar_nama as admininput, eka.f_lsbs(a.reg_spaj,h.lsbs_id) as produk, to_char(a.mspo_date_print,'dd/MM/yyyy') as tgl_printpolis,
			decode((select count(reg_spaj) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%(ADA SIMASCARD%'),0,'TIDAK ADA','ADA') as simascard,
			decode((select count(reg_spaj) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%DAN ADA KARTU%'),0,'TIDAK ADA','ADA') as admedika,
			(select substr(msps_desc, instr(msps_desc, ' PO ')+4, (instr(msps_desc, ')')-(instr(msps_desc, ' PO ')+4))) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%(NO. PO %') as no_resi,
			e.lar_id as cabanginput
		FROM (SELECT * FROM eka.mst_policy WHERE lstb_id = 1) a,
			eka.mst_agent b,
            (SELECT * FROM eka.mst_agent_prod WHERE lsle_id = 4) c,
            eka.mst_client_new mst_client_a,
            eka.mst_insured d,
            eka.mst_client_new mst_client_b,
            eka.lst_addr_region e,
            eka.lst_region f,
            eka.lst_user g,
            eka.mst_product_insured h,
            eka.lst_bisnis i
            <isNotNull property="lusid">
				, (select lar_id from eka.lst_user_admin where lus_id = 690) j
            </isNotNull>
		WHERE a.mspo_policy_holder = mst_client_a.mcl_id
	        AND a.reg_spaj = d.reg_spaj
	        AND d.mste_insured = mst_client_b.mcl_id
	        AND a.reg_spaj = c.reg_spaj
	        AND a.reg_spaj = h.reg_spaj
	        AND c.msag_id = b.msag_id
	        AND b.lca_id = f.lca_id
	        AND b.lwk_id = f.lwk_id
	        AND b.lsrg_id = f.lsrg_id
	        AND f.lar_id = e.lar_id
	        AND a.lus_id = g.lus_id
	        AND h.lsbs_id = i.lsbs_id
	        AND h.lsbs_id <![CDATA[<]]> 300
	        AND d.lspd_id <![CDATA[>=]]> 6
	        AND d.lspd_id != 95
	        AND d.lssa_id in (5,10)
	        AND a.mspo_date_print BETWEEN TO_DATE(#bdate#|| ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') AND TO_DATE(#edate# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)')
	        <isNotNull property="lusid">
	        	AND f.lar_id = j.lar_id
	        </isNotNull>
	        <isNotNull property="larid">
				AND f.lar_id = #larid#
	        </isNotNull>
	        <isEqual property="stpolis" compareValue="0">
				AND d.mste_tgl_kirim_polis IS NULL
	        </isEqual>
	        <isEqual property="stpolis" compareValue="1">
				AND d.mste_tgl_kirim_polis IS NOT NULL
				AND d.mste_tgl_terima_ga_from_uw IS NULL
	        </isEqual>
	        <isEqual property="stpolis" compareValue="2">
				AND d.mste_tgl_terima_ga_from_uw IS NOT NULL
				AND d.mste_tgl_kirim_ga_to_admin IS NULL
	        </isEqual>
	        <isEqual property="stpolis" compareValue="3">
				AND d.mste_tgl_kirim_ga_to_admin IS NOT NULL
				AND d.mste_tgl_terima_admin_from_ga IS NULL
	        </isEqual>
	        <isEqual property="stpolis" compareValue="4">
				AND d.mste_tgl_terima_admin_from_ga IS NOT NULL
				AND d.mste_tgl_kirim_admin_to_agent IS NULL
	        </isEqual>
	        <isEqual property="stpolis" compareValue="5">
				AND d.mste_tgl_kirim_admin_to_agent IS NOT NULL
	        </isEqual>
	        <isEqual property="jalur_dist" compareValue="0">
				AND a.lca_id != '40'
	        </isEqual>
	        <isEqual property="jalur_dist" compareValue="1">
				AND a.lca_id = '40'
	        </isEqual>
		ORDER BY tgl_printpolis, no_polis, admininput
	</select>
	
	<select id="elions.uw.selectReportCoverLetter" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT (substr(a.mspo_policy_no,1,2)||'.'||substr(a.mspo_policy_no,3,3)||'.'||substr(a.mspo_policy_no,6,4)||'.'||substr(a.mspo_policy_no,10)) mspo_policy_no, a.lus_id, a.mspo_date_print,
            mst_client_a.mcl_first nm_pp, mst_client_b.mcl_first nm_tt, eka.f_lsbs(a.reg_spaj,h.lsbs_id) as lsbs_name, e.lar_nama,
            nvl(e.lar_alamat,'-') lar_alamat, e.lar_admin, b.lca_id, g.lus_login_name,
			decode((select count(reg_spaj) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%(ADA SIMASCARD%'),0,'TIDAK ADA','ADA') as "SIMCARD",
            decode((select count(reg_spaj) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%DAN ADA KARTU%'),0,'TIDAK ADA','ADA') as "ADMED",
            (select substr(msps_desc, instr(msps_desc, ' PO ')+4, (instr(msps_desc, ')')-(instr(msps_desc, ' PO ')+4))) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%(NO. PO %') as "NOPO"
		FROM (SELECT * FROM eka.mst_policy WHERE lstb_id = 1) a,
            eka.mst_agent b,
            (SELECT * FROM eka.mst_agent_prod WHERE lsle_id = 4) c,
            eka.mst_client_new mst_client_a,
            eka.mst_insured d,
            eka.mst_client_new mst_client_b,
            eka.lst_addr_region e,
            eka.lst_region f,
            eka.lst_user g,
            eka.mst_product_insured h,
            eka.lst_bisnis i
		WHERE a.mspo_policy_holder = mst_client_a.mcl_id
            AND a.reg_spaj = d.reg_spaj
            AND d.mste_insured = mst_client_b.mcl_id
            AND a.reg_spaj = c.reg_spaj
            AND a.reg_spaj = h.reg_spaj
            AND c.msag_id = b.msag_id
            AND b.lca_id = f.lca_id
            AND b.lwk_id = f.lwk_id
            AND b.lsrg_id = f.lsrg_id
            AND f.lar_id = e.lar_id
            AND a.lus_id = g.lus_id
            AND h.lsbs_id = i.lsbs_id
            AND h.lsbs_id <![CDATA[<]]> 300
            AND d.lspd_id <![CDATA[>=]]> 6
            AND d.lspd_id != 95
            AND d.lssa_id in (5,10)
            AND a.mspo_date_print is not null
            AND d.mste_tgl_kirim_polis BETWEEN to_date(#tanggalAwal#|| ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') and to_date(#tanggalAkhir# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)')
			<isNotNull property="lar_id" >
				AND f.lar_id = #lar_id#
			</isNotNull>
	        <isEqual property="jalur_dist" compareValue="0">
				AND a.lca_id != '40'
	        </isEqual>
	        <isEqual property="jalur_dist" compareValue="1">
				AND a.lca_id = '40'
	        </isEqual>
		ORDER BY e.lar_nama
	</select>
	
	<select id="elions.uw.selectReportCoverLetterJne" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<isEqual property="dist" compareValue="0">
			select a.reg_spaj as spaj, a.mspo_policy_no as polis, substr(c.lar_nama,1,22) as penerima,
				substr(c.lar_alamat,1,22) as alamat1, substr(c.lar_alamat,23,22) as alamat2,
				substr(c.lar_alamat,45,22) as alamat3, substr(c.lar_alamat,67,22) as alamat4,
				c.lar_telpon as telp
			from eka.mst_policy a, eka.lst_region b, eka.lst_addr_region c
			where a.lca_id = b.lca_id
			    and a.lwk_id = b.lwk_id
			    and a.lsrg_id = b.lsrg_id
			    and b.lar_id = c.lar_id
			    and a.lstb_id = 1
				and a.lspd_id <![CDATA[>=]]> 6
				and a.lspd_id != 95
				and a.reg_spaj in ($spaj$)
			order by c.lar_nama
		</isEqual>
		<isEqual property="dist" compareValue="1">			
		    SELECT f.nama_cabang penerima, f.nama_cabang alamat1, substr(f.alamat,1,32) as alamat2, substr(f.alamat,34,22) as alamat3, substr(f.alamat,57,22) as alamat4, a.mspo_policy_no polis
	        FROM (SELECT * FROM eka.mst_policy WHERE lstb_id = 1) a,
	               eka.mst_insured b,
	               eka.mst_product_insured c,
	               eka.mst_reff_bii d,
	               eka.lst_reff_bii e,
	               eka.lst_cabang_bii f,
	               (select reg_spaj, max(no_urut) as no_urut
	               from eka.mst_reff_bii group by reg_spaj) g,
	               eka.lst_user h,
	               eka.lst_bisnis i,
	               eka.mst_client_new mst_client_a,
	               eka.mst_client_new mst_client_b
	        WHERE a.reg_spaj = b.reg_spaj
	               AND a.reg_spaj = c.reg_spaj
	               AND a.reg_spaj = d.reg_spaj
	               AND a.reg_spaj = g.reg_spaj
	               AND a.lus_id = h.lus_id
	               AND a.mspo_policy_holder = mst_client_a.mcl_id
	               AND b.mste_insured = mst_client_b.mcl_id
	               AND b.lspd_id <![CDATA[>=]]> 6
	               AND b.lspd_id <![CDATA[!=]]> 95
	               AND b.lssa_id  <![CDATA[>=]]>5
	               AND c.lsbs_id = i.lsbs_id
	               AND c.lsbs_id <![CDATA[<]]> 300
	               AND d.no_urut = g.no_urut
	               AND d.level_id = 4
	               AND d.reff_id = e.lrb_id
	               AND e.lcb_no = f.lcb_no
	               AND f.jenis = 2
	               AND to_char(b.mste_tgl_kirim_polis,'dd/MM/yyyy') = to_char(sysdate,'dd/MM/yyyy')
	               AND a.reg_spaj in ($spaj$)
	            ORDER BY nama_cabang			
		</isEqual>
	</select>
	
	<select id="elions.uw.selectCabCoverLetter" parameterClass="string" resultClass="java.util.HashMap">
        SELECT a.mspo_policy_no_format as "NOPOL", mst_client_a.mcl_first as "PP", mst_client_b.mcl_first as "TT", 
               e.lar_nama as "ADPUT",  eka.f_lsbs(a.reg_spaj,h.lsbs_id) as "PROD", a.mspo_date_print as "DATPRINT",
               decode((select count(reg_spaj) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%(ADA SIMASCARD%'),0,'TIDAK ADA','ADA') as "SIMCARD",
               decode((select count(reg_spaj) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%DAN ADA KARTU%'),0,'TIDAK ADA','ADA') as "ADMED",
               nvl((select substr(msps_desc, instr(msps_desc, ' PO ')+4, (instr(msps_desc, ')')-(instr(msps_desc, ' PO ')+4))) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%(NO. PO %'),'-') as "NOPO",
               e.lar_id as "LARPUT"
        FROM (SELECT * FROM eka.mst_policy WHERE lstb_id = 1) a,
                    eka.mst_agent b,
                    (SELECT * FROM eka.mst_agent_prod WHERE lsle_id = 4) c,
                    eka.mst_client_new mst_client_a,
                    eka.mst_insured d,
                    eka.mst_client_new mst_client_b,
                    eka.lst_addr_region e,
                    eka.lst_region f,
                    eka.lst_user g,
                    eka.mst_product_insured h,
                    eka.lst_bisnis i
        WHERE a.mspo_policy_holder = mst_client_a.mcl_id
                    AND a.reg_spaj = #spaj#
                    AND a.reg_spaj = d.reg_spaj
                    AND d.mste_insured = mst_client_b.mcl_id
                    AND a.reg_spaj = c.reg_spaj
                    AND a.reg_spaj = h.reg_spaj
                    AND c.msag_id = b.msag_id
                    AND b.lca_id = f.lca_id
                    AND b.lwk_id = f.lwk_id
                    AND b.lsrg_id = f.lsrg_id
                    AND f.lar_id = e.lar_id
                    AND a.lus_id = g.lus_id
                    AND h.lsbs_id = i.lsbs_id
		            AND h.lsbs_id <![CDATA[<]]> 300
		            AND d.lspd_id <![CDATA[>=]]> 6
                    AND d.lspd_id != 95
                    AND d.lssa_id in (5,10)
	</select>

	<select id="elions.uw.selectAddrRegion"  resultClass="java.util.HashMap" parameterClass="string">
        SELECT lar_id as "LARID", lar_nama as "ADMIN", lar_admin as "CABANG", lar_email as "EMAIL", lar_alamat as "ALAMAT"
        FROM eka.lst_addr_region
        WHERE lar_id = #lar#
	</select>
	
	<select id="elions.uw.selectTglCoverLetter" parameterClass="java.util.HashMap" resultClass="string">
		SELECT
			<isEqual property="stpolis" compareValue="0">
				(case when mste_tgl_kirim_polis is null then 'kosong' else 'isi' end)tgl
			</isEqual>
			<isEqual property="stpolis" compareValue="1">
				(case when mste_tgl_terima_ga_from_uw is null then 'kosong' else 'isi' end)tgl
			</isEqual>
			<isEqual property="stpolis" compareValue="2">
				(case when mste_tgl_kirim_ga_to_admin is null then 'kosong' else 'isi' end)tgl
			</isEqual>
			<isEqual property="stpolis" compareValue="3">
				(case when mste_tgl_terima_admin_from_ga is null then 'kosong' else 'isi' end)tgl
			</isEqual>
			<isEqual property="stpolis" compareValue="4">
				(case when mste_tgl_kirim_admin_to_agent is null then 'kosong' else 'isi' end)tgl
			</isEqual>
		FROM eka.mst_insured where reg_spaj =
			(select reg_spaj from eka.mst_policy where mspo_policy_no_format = #nopol#)
	</select>
	
	<select id="elions.uw.selectDetailDTH" parameterClass="string" resultClass="com.ekalife.elions.model.DTH">
		SELECT rownum, tgl_penarikan, jumlah, keterangan
		FROM eka.mst_rencana_penarikan
		WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		ORDER BY tgl_penarikan ASC
	</select>
	
	<select id="elions.uw.selectFlagDTH" parameterClass="string" resultClass="int">
		SELECT nvl(mste_dth,0) as mste_dth
		FROM eka.mst_insured
		WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectListJabodetabekBSM" resultClass="java.util.HashMap">
		select lcb_no 
		from eka.lst_cabang_bii where jenis = 2
		and lcb_no in (
			select lcb_no from eka.lst_cabang_bii 
			where upper(nama_cabang) like '%JAKARTA%' 
			or upper(nama_cabang) like '%BOGOR%'
			or upper(nama_cabang) like '%DEPOK%'
			or upper(nama_cabang) like '%TANGERANG%' 
			or upper(nama_cabang) like '%BEKASI%'  
		)
	</select>
	
	<select id="elions.uw.select_hadiah_ps" parameterClass="double" resultClass="java.util.HashMap">
		select
		    a.lh_id, a.lh_nama, a.lh_harga
		from
		    eka.lst_hadiah a
		where
		    a.lhc_id = 8
		    and a.lh_harga <![CDATA[<=]]> #value#
		    and a.flag_active = 1
		    and a.flag_standard <![CDATA[<>]]> 2
	</select>
	
	<select id="elions.uw.select_hadiah_ps_spesial" parameterClass="double" resultClass="java.util.HashMap">
		select
		    a.lh_id, a.lh_nama, a.lh_harga
		from
		    eka.lst_hadiah a
		where
		    a.lhc_id = 8
		    and a.lh_harga <![CDATA[<=]]> #value#
		    and a.flag_active = 1
	</select>
	
	<select id="elions.uw.selectReportSuratReins" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT SYSDATE tanggal,a.reg_spaj,d.msrt_reinstate_no,d.msrt_tanggal_aju,a.mspo_policy_no,a.mspo_policy_no_format,
		e.msur_tanggal_acc,e.msur_akhir_prm_bayar,e.msur_awal_prm_bayar,e.msur_awal_prm_upaid,e.msur_akhir_prm_upaid, h.lku_symbol,d.msrt_tsi,
		c1.mcl_first nama_pp, d.msrt_umur_policy_hld umur_pp,c2.mcl_first nama_tt,d.msrt_umur_insured umur_tt,e.msur_accept,e.msur_accept_note,
		e.msur_kondisi_note,e.msur_kondisi_polis ,e.msur_total_unbayar,e.msur_tgl_batas_paid,e.msur_total_bunga_unbayar,
		(1 + e.msur_tgl_batas_paid -e.msur_awal_prm_upaid) lama_tunggak,f.msap_address,f.msap_zip_code,g.lska_note,
			(                SELECT nvl(msbi_stamp, 0) stamp
			                  FROM eka.mst_billing
			                 WHERE eka.mst_billing.reg_spaj = rpad(replace(a.reg_spaj,'.'),11,' ') 
			                   AND eka.mst_billing.msbi_tahun_ke =
			                                             (SELECT MAX (eka.mst_billing.msbi_tahun_ke)
			                                                FROM eka.mst_billing
			                                               WHERE eka.mst_billing.reg_spaj = rpad(replace(a.reg_spaj,'.'),11,' ') )
			                   AND eka.mst_billing.msbi_premi_ke =
			                           (SELECT MAX (eka.mst_billing.msbi_premi_ke)
			                              FROM eka.mst_billing
			                             WHERE (eka.mst_billing.reg_spaj = rpad(replace(a.reg_spaj,'.'),11,' ') )
			                               AND (eka.mst_billing.msbi_tahun_ke =
			                                             (SELECT MAX (eka.mst_billing.msbi_tahun_ke)
			                                                FROM eka.mst_billing
			                                               WHERE eka.mst_billing.reg_spaj = rpad(replace(a.reg_spaj,'.'),11,' ') )
			                                   ))
			                   AND eka.mst_billing.msbi_paid = 0
			                   AND eka.mst_billing.msbi_active = 1     
			) stamp,e.msrt_stamp_tunggak 
			FROM eka.mst_policy a,
              eka.mst_insured b,
              eka.mst_client_new c1,
              eka.mst_client_new c2,
              eka.mst_reinstate d,
              eka.mst_uw_reinstate e,
              eka.mst_address_billing f,
              eka.lst_kabupaten g,
              eka.lst_kurs h
			WHERE a.reg_spaj=b.reg_spaj AND
                    a.mspo_policy_holder=c1.mcl_id AND
                    b.mste_insured=c2.mcl_id AND
	                  a.reg_spaj=d.reg_spaj AND
	                  a.reg_spaj=e.reg_spaj AND
	                  a.reg_spaj=f.reg_spaj AND 
	                  d.msrt_reinstate_no=e.msrt_reinstate_no AND
	                  f.lska_id=g.lska_id  (+) AND
	                  d.lku_id=h.lku_id AND
	                  a.reg_spaj=RPAD(REPLACE(#nospaj#,'.'),11,' ')  AND
	                  a.lstb_id=1 AND
	                  b.mste_insured_no=1
	                  AND d.msrt_reinstate_no = RPAD(REPLACE(#reinsno#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectDaftarSPAJ_aksepEndors" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		<isNull property="lssaId" >
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
			 FROM eka.mst_policy a
			 WHERE (a.lspd_id = #posisi#)
			   <isEqual property="tipe" compareValue="3">
				   AND (a.lstb_id in(1,2)) 
			   </isEqual>
			   <isNotEqual property="tipe" compareValue="3">
			   	   AND (a.lstb_id = #tipe#)
			   </isNotEqual>
			   <isNotNull property="jenisTerbit" >
				   AND a.mspo_jenis_terbit=#jenisTerbit#
			   </isNotNull>
			   <isGreaterEqual prepend=" AND " property="posisi" compareValue="3">
			   		a.mspo_policy_no is not null
			   </isGreaterEqual>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
		</isNull>
		<isNotNull property="lssaId" >
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
			  FROM eka.mst_policy a,
			  	   eka.mst_insured b,
			  	   eka.mst_endors c
			 WHERE a.reg_spaj=b.reg_spaj
			   AND a.reg_spaj=c.reg_spaj
			   AND a.lspd_id $posisi$ 
			   AND a.lstb_id = #tipe#
			   AND c.msen_input_date = (SELECT MAX (msen_input_date) from eka.mst_endors where reg_spaj = a.reg_spaj)
			   AND c.msen_aksep_uw=1
			   <isNotNull property="jenisTerbit" >
				   AND a.mspo_jenis_terbit=#jenisTerbit#
			   </isNotNull>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
		
		</isNotNull>	
	</select>
	
	<select id="elions.uw.selectMsen_aksep_uw" parameterClass="string" resultClass="int">
        SELECT msen_aksep_uw
          FROM eka.mst_endors
         	WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
         	 AND msen_input_date = (SELECT MAX (msen_input_date) from eka.mst_endors where reg_spaj = rpad(replace(#spaj#,'.'),11,' '))
    </select>
    
    	<select id="elions.uw.selectMsen_aksep_uw_new" parameterClass="string" resultClass="java.util.HashMap">
       		SELECT msen_aksep_uw, 
       				(case when msen_aksep_uw = 0 then 'Non Aksep' 
       					  when msen_aksep_uw = 1 then 'Waiting for UW Aksep'
       					  when msen_aksep_uw = 2 then 'Approved by UW'
       					else 'Denied by UW' end)ket_aksep_uw
          		FROM eka.mst_endors
         		WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
         	 		AND msen_input_date = (SELECT MAX (msen_input_date) from eka.mst_endors where reg_spaj = rpad(replace(#spaj#,'.'),11,' '))
    	</select>
    
    <select id="elions.uw.selectKete" parameterClass="string" resultClass="string">
         SELECT keterangan 
         	FROM eka.lst_ulangan 
         		WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ') 
         		AND tanggal = (select max(tanggal) from eka.lst_ulangan where reg_spaj = rpad(replace(#spaj#,'.'),11,' '))
    </select>

	<select id="elions.uw.selectEndorsNew" resultClass="com.ekalife.elions.model.Endors" parameterClass="string">
		SELECT * FROM eka.mst_endors 
		WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
		AND msen_input_date = (select max(msen_input_date) from eka.mst_endors where reg_spaj = rpad(replace(#spaj#,'.'),11,' '))
	</select>

	 <select id="elions.uw.selectFilterSpajEndorsment" parameterClass="java.util.HashMap" resultMap="elions.uw.result.filterSpaj2">
	 	<isNull property="lssaId">
			<isEqual property="tipe" compareValue="0">
				SELECT a.reg_spaj FROM eka.mst_policy a, eka.mst_endors b 
				WHERE a.reg_spaj = b.reg_spaj 
				AND b.msen_aksep_uw = 1 and a.lstb_id in(1,2) and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				a.reg_spaj $kata$
				order by reg_spaj
			</isEqual>
			<isEqual property="tipe" compareValue="1">
				SELECT a.reg_spaj FROM eka.mst_policy a, eka.mst_endors b 
				WHERE a.reg_spaj = b.reg_spaj 
				AND b.msen_aksep_uw = 1 and a.lstb_id in(1,2) and 
				<isNotEqual property="posisi" compareValue="-1">
					lspd_id = #posisi# and 
				</isNotEqual>
				<isNotNull property="lssp_id" >
					lssp_id=#lssp_id# and
				</isNotNull>
				a.mspo_policy_no $kata$
				order by reg_spaj
			</isEqual>
		</isNull>
	 </select>
	
	<select id="elions.uw.selectKYCpencairan_main" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.kyc.PencairanCase">
		SELECT c.lsbs_id,b.mste_kyc_result kycResult, x.tgl_cair, x.nominal_cair,
               eka.utils.nominal_trans_link(a.reg_spaj) total_tu,
		       a.reg_spaj, a.mspo_policy_no_format, i.ljb_note jabatan,
		       d.mcl_first pemegang, e.mcl_first tertanggung, b.mste_beg_date,
		       f.lsdbs_name, g.lku_symbol,(c.mspr_premium - nvl(c.mspr_discount,0)) premi_pokok, '' topup,
		       DECODE (a.lscb_id, 6, 'M', 1, 'Q', 2, 'SA', 3, 'A', 'SP') frek,
		       d.mpn_job_desc, d.mkl_kerja, d.mkl_industri, d.mkl_penghasilan,
		       d.mkl_pendanaan, d.mkl_tujuan,a.mspo_policy_holder, b.mste_kyc_date,b.mste_flag_uw,
		       (case when ((select k.jenis
                				from eka.mst_reff_bii  j,
                 	    		eka.lst_reff_bii k
                				where j.lrb_id = k.lrb_id
                				and j.reg_spaj = a.reg_spaj and no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = j.reg_spaj))=2 
                			AND
                			(SELECT m.flag_print_cabang
                  				FROM eka.mst_policy l, eka.lst_wakil m
                 				WHERE l.lca_id = m.lca_id
                   				AND l.lwk_id = m.lwk_id
                   				AND l.reg_spaj = a.reg_spaj)=1)
           		 	then 'SPAJ belum diterima'
            		else ''
            	end) status_spaj
		  FROM eka.mst_policy a,
		       eka.mst_insured b,
		       eka.mst_product_insured c,
		       eka.mst_client_new d,
		       eka.mst_client_new e,
		       eka.lst_det_bisnis f,
		       eka.lst_kurs g,
		       eka.lst_jabatan i,
		       (
                    SELECT   a.reg_spaj, a.mspin_tgl_keluar tgl_cair, b.mpr_deposit nominal_cair
                    FROM   eka.mst_pinjaman a, eka.mst_powersave_ro b
                    WHERE   a.flag_ps = 1 and a.reg_spaj = b.reg_spaj and b.mps_kode = 5
                         AND (a.mspin_tgl_keluar BETWEEN to_date(#dariTanggal#,'dd/MM/yyyy') AND to_date(#sampaiTanggal#,'dd/MM/yyyy'))
                UNION
                    SELECT   a.reg_spaj, a.mssur_tgl_klaim tgl_cair, b.mpr_deposit nominal_cair
                    FROM   eka.mst_surrender a, eka.mst_powersave_ro b
                    WHERE   a.flag_ps = 1 and a.reg_spaj = b.reg_spaj and b.mps_kode = 5
                         AND (a.mssur_tgl_klaim BETWEEN  to_date(#dariTanggal#,'dd/MM/yyyy') AND to_date(#sampaiTanggal#,'dd/MM/yyyy'))
                UNION
                    SELECT   a.reg_spaj, a.tgl_klaim tgl_cair, b.mpr_deposit nominal_cair
                    FROM   eka.mst_maturity a, eka.mst_powersave_ro b
                    WHERE   a.flag_ps = 1 and a.reg_spaj = b.reg_spaj and b.mps_kode = 5
                         AND (a.tgl_klaim BETWEEN to_date(#dariTanggal#,'dd/MM/yyyy') AND to_date(#sampaiTanggal#,'dd/MM/yyyy'))
                ) x
		 WHERE a.lstb_id = 1
		   and trunc(b.mste_kyc_date) <![CDATA[ >= ]]>  to_date(#dariTanggal#,'dd/MM/yyyy')
		   and trunc(b.mste_kyc_date) <![CDATA[ <= ]]>  to_date(#sampaiTanggal#,'dd/MM/yyyy')
		   AND a.reg_spaj = b.reg_spaj
		   AND a.reg_spaj = c.reg_spaj
		   AND a.reg_spaj = x.reg_spaj
		   AND x.nominal_cair <![CDATA[ >= ]]> 100000000
		   AND a.mspo_policy_holder = d.mcl_id
		   AND b.mste_insured = e.mcl_id
		   AND c.lsbs_id = f.lsbs_id
		   AND c.lsdbs_number = f.lsdbs_number
		   AND a.lku_id = g.lku_id
		   And d.ljb_id= i.ljb_id(+)
		   and <![CDATA[ c.lsbs_id < 300 ]]> 
	</select>
	
	<select id="elions.uw.selectReportProsesAksepPendingSP" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT * FROM (
			SELECT b.lku_id, k.lku_symbol, nvl(b.mspo_nasabah_dcif,'-') mspo_nasabah_dcif, f.mcl_first pemegang, g.mcl_first tertanggung,
			       b.mspo_policy_no_format, b.reg_spaj, a.lus_login_name, e.nama_cabang,
			       h.lsbs_name, 
			      (case 
			               when i.lsbs_id = 142 and i.lsdbs_number = 2 then 'SIMAS PRIMA'
			               when i.lsbs_id = 142 and i.lsdbs_number = 9 then 'DANAMAS PRIMA'
			               when i.lsbs_id = 158 and i.lsdbs_number = 6 then 'SIMAS PRIMA BULANAN' 
			               when i.lsbs_id = 158 and i.lsdbs_number = 14 then 'DANAMAS PRIMA BULANAN'
			               else i.lsdbs_name end) lsdbs_name,
			       d.mspr_premium, d.mspr_tsi,
			       j.mpr_jangka_invest, j.mpr_rate, j.mpr_deposit, j.mpr_interest,
			       (j.mpr_deposit + j.mpr_interest) hasil_mgi, b.mspo_ins_period,
			       b.mspo_date_print, d.mspr_beg_date, c.mste_tgl_aksep, l.nama_cabang cabang_induk, m.nama_cabang wilayah
			  FROM eka.lst_user a,
			       eka.mst_policy b,
			       eka.mst_insured c,
			       eka.mst_product_insured d,
			        (select a.reg_spaj ,a.lcb_penutup lcb_no
			                             from eka.mst_reff_bii a,
			                                 eka.lst_reff_bii b
			                             where      a.level_id=4
			                             and a.lrb_id = b.lrb_id
			                             and      no_urut=(select max(no_urut) from eka.mst_reff_bii where reg_spaj=a.reg_spaj)) reff,
			       eka.lst_cabang_bii e,
			       eka.mst_client_new f,
			       eka.mst_client_new g,
			       eka.lst_bisnis h,
			       eka.lst_det_bisnis i,
			       eka.mst_powersave_ro j, eka.lst_kurs k,
			eka.lst_cabang_bii l, eka.lst_cabang_bii m
			 WHERE a.cab_bank is not null
			   AND a.lus_id = b.lus_id
		and b.lspd_id <![CDATA[<>]]> 95
		and b.lspd_id = 6
		   AND b.reg_spaj = c.reg_spaj
		   AND b.reg_spaj = d.reg_spaj
		   AND d.lsbs_id <![CDATA[<]]> 300
		and b.reg_spaj = reff.reg_spaj
		   AND reff.lcb_no = e.lcb_no
		   AND e.jenis = 2
		   AND b.mspo_policy_holder = f.mcl_id
		   AND c.mste_insured = g.mcl_id
		   AND d.lsbs_id = h.lsbs_id
		   AND d.lsbs_id = i.lsbs_id
		   AND d.lsdbs_number = i.lsdbs_number
		   AND b.reg_spaj = j.reg_spaj
		   AND j.mps_kode = 5
		   AND c.lssa_id =1
		   and b.lku_id = k.lku_id
		and e.head_no = l.lcb_no(+)
		and e.wil_no = m.lcb_no(+)
		   AND trunc(b.mspo_input_date) BETWEEN TO_DATE ( TO_CHAR (#tglAwal#, 'dd/mm/yyyy') || ' 00:00:00', 'dd/mm/yyyy hh24:mi:ss') 
           AND TO_DATE ( TO_CHAR (#tglAkhir#, 'dd/mm/yyyy') || ' 23:59:59', 'dd/mm/yyyy hh24:mi:ss') 
		) ORDER BY wilayah, cabang_induk, NAMA_CABANG, LUS_LOGIN_NAME, MSPO_DATE_PRINT
	</select>
	
	<select id="elions.uw.selectReportProsesAksepPendingSL" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT * FROM (
			SELECT b.lku_id, k.lku_symbol, nvl(b.mspo_nasabah_dcif,'-') mspo_nasabah_dcif, f.mcl_first pemegang, g.mcl_first tertanggung,
			       b.mspo_policy_no_format, b.reg_spaj, a.lus_login_name, e.nama_cabang,
			       h.lsbs_name, 
			      (case 
			               when i.lsbs_id = 142 and i.lsdbs_number = 2 then 'SIMAS PRIMA'
			               when i.lsbs_id = 142 and i.lsdbs_number = 9 then 'DANAMAS PRIMA'
			               when i.lsbs_id = 158 and i.lsdbs_number = 6 then 'SIMAS PRIMA BULANAN' 
			               when i.lsbs_id = 158 and i.lsdbs_number = 14 then 'DANAMAS PRIMA BULANAN'
			               else i.lsdbs_name end) lsdbs_name,
			       d.mspr_premium, d.mspr_tsi,
			       j.mpr_jangka_invest, j.mpr_rate, j.mpr_deposit, j.mpr_interest,
			       (j.mpr_deposit + j.mpr_interest) hasil_mgi, b.mspo_ins_period,
			       b.mspo_date_print, d.mspr_beg_date, c.mste_tgl_aksep, l.nama_cabang cabang_induk, m.nama_cabang wilayah
			  FROM eka.lst_user a,
			       eka.mst_policy b,
			       eka.mst_insured c,
			       eka.mst_product_insured d,
			        (select a.reg_spaj ,a.lcb_penutup lcb_no
			                             from eka.mst_reff_bii a,
			                                 eka.lst_reff_bii b
			                             where      a.level_id=4
			                             and a.lrb_id = b.lrb_id
			                             and      no_urut=(select max(no_urut) from eka.mst_reff_bii where reg_spaj=a.reg_spaj)) reff,
			       eka.lst_cabang_bii e,
			       eka.mst_client_new f,
			       eka.mst_client_new g,
			       eka.lst_bisnis h,
			       eka.lst_det_bisnis i,
			       eka.mst_powersave_ro j, eka.lst_kurs k,
			eka.lst_cabang_bii l, eka.lst_cabang_bii m
			 WHERE a.cab_bank is not null
			   AND a.lus_id = b.lus_id
		and b.lspd_id <![CDATA[<>]]> 95
		and b.lspd_id = 6
		   AND b.reg_spaj = c.reg_spaj
		   AND b.reg_spaj = d.reg_spaj
		   AND d.lsbs_id <![CDATA[<]]> 300
		and b.reg_spaj = reff.reg_spaj
		   AND reff.lcb_no = e.lcb_no
		   AND e.jenis = 2
		   AND b.mspo_policy_holder = f.mcl_id
		   AND c.mste_insured = g.mcl_id
		   AND d.lsbs_id = h.lsbs_id
		   AND d.lsbs_id = i.lsbs_id
		   AND d.lsdbs_number = i.lsdbs_number
		   AND b.reg_spaj = j.reg_spaj
		   AND j.mps_kode = 5
		   AND c.lssa_id =1
		   and b.lku_id = k.lku_id
		and e.head_no = l.lcb_no(+)
		and e.wil_no = m.lcb_no(+)
		   AND trunc(b.mspo_input_date) BETWEEN TO_DATE ( TO_CHAR (#tglAwal#, 'dd/mm/yyyy') || ' 00:00:00', 'dd/mm/yyyy hh24:mi:ss') 
           AND TO_DATE ( TO_CHAR (#tglAkhir#, 'dd/mm/yyyy') || ' 23:59:59', 'dd/mm/yyyy hh24:mi:ss') 
		) ORDER BY wilayah, cabang_induk, NAMA_CABANG, LUS_LOGIN_NAME, MSPO_DATE_PRINT
	</select>
	
	<select id="elions.uw.selectIDinbox" parameterClass="string" resultClass="string">
		SELECT MI_ID 
			FROM EKA.MST_INBOX 
		WHERE REG_SPAJ =#spaj# AND LJJ_ID=1  
			AND TGL_BERKAS_MASUK =(SELECT MAX(TGL_BERKAS_MASUK) FROM EKA.MST_INBOX WHERE REG_SPAJ =#spaj#)
	</select>
	
	<select id="elions.uw.selectCplan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT NO_ID, NO_SERTIFIKAT FROM eka.mst_cplan@EB WHERE REG_SPAJ =#reg_spaj#
	</select>
	
	<select id="elions.uw.selectFollowUpPolis" resultClass="java.util.HashMap">
        select rownum no, a.reg_spaj, a.mspo_policy_no_format, c.mcl_first nama_agent, d.mcl_first nama_pp, to_char(x.mste_tgl_valid_print,'dd/MM/yyyy')tanggal_valid, g.nama_cabang, h.email
            from eka.mst_policy a,
                 eka.mst_insured x,
                 eka.mst_agent b, 
                 eka.mst_client_new c, 
                 eka.mst_client_new d, 
                 (select * from eka.mst_product_insured where lsbs_id <![CDATA[<]]> 300) e,
                 eka.lst_user f,
                 eka.lst_cabang_bii g,
                 (select reg_spaj, SUBSTR (MSPS_DESC, 17, 30) email
                    from eka.mst_position_spaj 
                    where msps_desc like '%VALID FOR PRINT%') h
            where a.reg_spaj = x.reg_spaj
            and   a.reg_spaj = e.reg_spaj
            and   a.reg_spaj = h.reg_spaj
            and   a.mspo_ao = b.msag_id
            and   b.mcl_id = c.mcl_id
            and   a.lus_id = f.lus_id
            and   f.cab_bank = g.lcb_no
            and   a.mspo_policy_holder = d.mcl_id
            and   a.lspd_id <![CDATA[<>]]> 99
            and   e.lsbs_id = 164
            and   e.lsdbs_number = 11
            and   a.mspo_date_print is null
            and   x.mste_tgl_valid_print is not null
	</select>
	
	<select id="elions.uw.selectSpajFurther" resultClass="java.util.HashMap">
		select a.reg_spaj from eka.mst_insured a, eka.mst_product_insured b, eka.mst_policy c
		where a.reg_spaj = b.reg_spaj
		and a.reg_spaj = c.reg_spaj
		and a.lssa_id in (3,10)
		and c.lspd_id != 95
		and ((b.lsbs_id = 120 and b.lsdbs_number in (10,11,12,22,23,24))  or (b.lsbs_id = 164 and b.lsdbs_number in (11)))
	</select>
	
	<select id="elions.uw.selectFurther" parameterClass="string" resultClass="java.util.HashMap">
		SELECT rownum no, c.nama_cabang, g.mcl_first nama_penutup, e.mcl_first nama_pemegang, b.reg_spaj, i.lsdbs_name, h.mspr_premium premi, a.msps_date tgl_further, a.msps_desc keterangan_data, j.team_name, h.lsbs_id, h.lsdbs_number
		FROM (SELECT a.REG_SPAJ, a.MSPS_DATE, a.LSPD_ID, a.LSSP_ID, a.LSSA_ID, a.LUS_ID, a.MSPS_DESC 
    			FROM eka.mst_position_spaj a, eka.mst_insured b WHERE a.reg_Spaj = #spajFurther# AND a.reg_spaj = b.reg_spaj AND a.lssa_id = b.lssa_id AND 
      			msps_date = (SELECT min(msps_date) FROM eka.mst_position_spaj WHERE reg_spaj = #spajFurther# AND lssa_id = b.lssa_id)) a, 
			eka.mst_reff_bii b,
			eka.lst_cabang_bii c,
			eka.mst_policy d,
			eka.mst_client_new e,
			eka.mst_agent f,
			eka.mst_client_new g,
			eka.mst_product_insured h,
			eka.lst_det_bisnis i,
			(SELECT a.reg_spaj, b.nama_reff, b.jenis, c.nama_cabang, c.team_name
                    FROM (select * 
                            from eka.mst_reff_bii a
                            where level_id=4
                            and   no_urut=(select max(no_urut) from eka.mst_reff_bii where reg_spaj=a.reg_spaj)) a, 
                         eka.lst_reff_bii b, 
                         eka.lst_cabang_bii c
                    WHERE a.lrb_id = b.lrb_id AND a.lcb_no = c.lcb_no) j
		WHERE a.reg_spaj = #spajFurther#
		AND a.reg_spaj = b.reg_spaj
		AND a.reg_spaj = d.reg_spaj
		AND a.reg_spaj = h.reg_spaj
		AND a.reg_spaj = j.reg_spaj
		AND h.lsbs_id = i.lsbs_id
		AND h.lsdbs_number = i.lsdbs_number
		AND h.lsbs_id <![CDATA[<]]> 300
		AND b.lcb_no = c.lcb_no
		AND d.mspo_ao = f.msag_id
		AND f.mcl_id = g.mcl_id
		AND d.mspo_policy_holder = e.mcl_id
	</select>	
	
	<select id="elions.uw.selectNpwIndividu" resultClass="java.util.HashMap">
SELECT distinct c.nama_cabang cabang_1, 'a' bagian, EKA.UTILS.CABANG(d.LCA_ID) cabang_2, EKA.UTILS.REGION(d.LCA_ID, d.LWK_ID, d.LSRG_ID) region,
                CH.NAMA_DIST channel, EKA.UTILS.AGEN_BANCASS(RF.LRB_ID) nama_reff,
                C2.NAMA_CABANG cabang_reff, g.mcl_first nama_penutup, e.mcl_first nama_pemegang, b.reg_spaj no_spaj, 
                i.lsdbs_name nama_produk, EKA.UTILS.det_produk(h.lsbs_id, h.lsdbs_number) plan,  h.mspr_premium premi,  
                to_char(th.tgl_further, 'dd/mm/yyyy') tgl_further, 
                to_char((th.tgl_transfer_uw_speedy + 30),'dd/mm/yyyy') date_line,
                to_char((th.tgl_transfer_uw_speedy + 31),'dd/mm/yyyy') tgl_npw,
                to_char(d.MSPO_INPUT_DATE,'dd/mm/yyyy') tgl_input, z.lspd_position posisi,
                trunc(sysdate - th.tgl_transfer_uw_speedy) hari_telat, 
                C.wil_no, a.msps_desc keterangan
        FROM (SELECT a.REG_SPAJ, a.MSPS_DATE, a.LSPD_ID, a.LSSP_ID, a.LSSA_ID, a.LUS_ID, a.MSPS_DESC 
                FROM eka.mst_position_spaj a, eka.mst_insured b 
                    WHERE a.reg_Spaj = b.reg_spaj 
                    AND a.reg_spaj = b.reg_spaj AND a.lssa_id = b.lssa_id 
                    AND msps_date = (SELECT max(msps_date) FROM eka.mst_position_spaj pos WHERE pos.reg_spaj = a.reg_spaj AND lssa_id = b.lssa_id)) a, 
            eka.mst_reff_bii b, eka.lst_cabang_bii c, eka.lst_cabang_bii c2,
            eka.mst_policy d, eka.mst_client_new e, eka.mst_agent f, eka.mst_client_new g,
            eka.mst_product_insured h, eka.lst_det_bisnis i, eka.mst_trans_history th, eka.mst_position_spaj ps,
            eka.lst_document_position z, EKA.LST_JALUR_DIST ch, EKA.LST_CABANG cb, EKA.MST_REFF_BII rf, EKA.LST_REFF_BII rfc,
            (SELECT a.reg_spaj, b.nama_reff, b.jenis, c.nama_cabang, c.team_name
                    FROM (select * from eka.mst_reff_bii a where level_id=4
                            and   no_urut=(select max(no_urut) from eka.mst_reff_bii where reg_spaj=a.reg_spaj)) a, 
                            eka.lst_reff_bii b, 
                            eka.lst_cabang_bii c
                    WHERE a.lrb_id = b.lrb_id AND a.lcb_no = c.lcb_no) j
        WHERE a.reg_spaj = b.reg_spaj
        AND a.reg_spaj = d.reg_spaj
        AND a.reg_spaj = h.reg_spaj
        AND a.reg_spaj = j.reg_spaj
        AND a.reg_spaj = th.reg_spaj
        AND h.lsbs_id = i.lsbs_id
        AND h.lsdbs_number = i.lsdbs_number
        AND h.lsbs_id <![CDATA[<]]> 300
        AND b.lcb_no = c.lcb_no
        AND d.mspo_ao = f.msag_id
        AND f.mcl_id = g.mcl_id
        AND d.mspo_policy_holder = e.mcl_id
        AND th.reg_spaj = ps.reg_spaj
        AND th.tgl_further = ps.msps_date
        AND d.LCA_ID = CB.LCA_ID
        AND CB.JALURDIS = CH.ID_DIST
        AND a.REG_SPAJ = RF.REG_SPAJ
        AND RF.LRB_ID = RFC.LRB_ID
        AND RFC.LCB_NO = C2.LCB_NO
        AND a.lspd_id = z.lspd_id
        AND th.tgl_further is not null
        AND th.tgl_transfer_uw_speedy is not null
        AND a.lssa_id in (3,10)
        <isEqual property="status" compareValue="1">
        AND a.lspd_id not in (999,95)
        </isEqual>
        <isEqual property="status" compareValue="2">
        AND a.lspd_id = 999
        and a.lssp_id = 29
        </isEqual>
        and C.JENIS = 2 
        and A.LSSP_ID not in 1
 UNION    
          select distinct eka.utils.cabang(p.LCA_ID) cabang_1, 'b' bagian, 
                          ' ' cabang_2,
                          EKA.UTILS.region(p.LCA_ID, p.lwk_id, p.lsrg_id) region,
                          eka.utils.cabang(p.LCA_ID) Channel,
                          ' ' nama_reff,
                          ' ' cabang_reff,
                          EKA.UTILS.AGEN(P.MSPO_AO) nama_penutup,
                          EKA.UTILS.PEMEGANG(p.reg_spaj) nama_pemegang,
                          p.REG_SPAJ no_spaj,
                          EKA.UTILS.produk(pi.lsbs_id) nama_produk, 
                          EKA.UTILS.det_produk(pi.lsbs_id, pi.lsdbs_number) plan,
                          EKA.PACPOLIS.GET_PREMI_TOTAL (p.REG_SPAJ) premi,
                          to_char(th.tgl_further,'dd/mm/yyyy')tgl_further,
                          to_char((th.tgl_transfer_uw_speedy + 30),'dd/mm/yyyy') date_line,
                          to_char((th.tgl_transfer_uw_speedy + 31),'dd/mm/yyyy') tgl_npw,
                          to_char(p.MSPO_INPUT_DATE,'dd/mm/yyyy')tgl_input, 
                          dp.lspd_position posisi,
                          trunc(sysdate - th.tgl_transfer_uw_speedy) hari_telat,  ' ' wil_no,                  
                          ps.msps_desc keterangan
                from  eka.mst_policy p, 
                      eka.mst_trans_history th, 
                      eka.mst_position_spaj ps, 
                      eka.mst_insured i, 
                      eka.mst_product_insured pi, 
                      eka.lst_document_position dp
                    where p.REG_SPAJ = th.REG_SPAJ 
                      and P.REG_SPAJ = PS.REG_SPAJ
                      and P.REG_SPAJ = i.REG_SPAJ
                      and p.Reg_spaj = pi.reg_spaj
                      and ps.reg_spaj = th.reg_spaj                  
                      and ps.msps_date = th.tgl_further 
                      and th.tgl_further is not null
                      and th.tgl_transfer_uw_speedy is not null
                      and TH.JENIS = 23 
                      <isEqual property="status" compareValue="1">
				      AND p.lspd_id not in (999,95)
				      </isEqual>
				      <isEqual property="status" compareValue="2">
				      AND p.lspd_id = 999
				      and ps.lssp_id = 29
				      </isEqual>        
                      and p.lstb_id = 1                       
                      and i.lssa_id = ps.lssa_id
                      and i.lssa_id in (3,10)
                      and p.lca_id not in (40,09)                     
                      and p.lspd_id = dp.lspd_id                    
                      and pi.lsbs_id <![CDATA[<]]> 300 
                      and pi.lsbs_id not in 120
                      and ps.LSSP_ID not in 1
                      order by no_spaj
	</select>
	
	<select id="elions.uw.selectPolisKlaimKesehatan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT * FROM (		
		    SELECT 
		        A.REG_SPAJ spaj, E.MCL_FIRST nama_pp, NULL bod_pp, B.MSTE_INSURED_NO, C.MCL_FIRST nama_tt, D.MSPE_DATE_BIRTH bod_tt,
		        A.MSPO_POLICY_NO || ' / ' || b.MSTE_NO_REG polis, A.MSPO_BEG_DATE, A.MSPO_END_DATE, '402' lsbs_id, 'EKAMEDICARE' lsbs_name, '3' kode, 'EB' kode_desc, g.reg_spaj klaim
		    FROM
		        eka.mst_policy@eb a,
		        eka.mst_insured@eb b,
		        eka.mst_product_insured@eb f,
		        EKA.MST_CLIENT@eb c,
		        EKA.MST_PERSON@eb d,
		        EKA.MST_CLIENT@eb e,
		        eka.mst_claim_ebn@eb g
		    WHERE
		        a.mspo_policy_no is not null
		        AND a.reg_spaj = b.reg_spaj
		        AND b.reg_spaj = f.reg_spaj
		        AND b.mste_insured_no = f.mste_insured_no
		        AND f.lsbs_id= 402
		        AND a.mspo_policy_holder = e.mcl_id
		        AND b.mste_insured = c.mcl_id
		        AND c.mcl_id = d.mcl_id
		        and a.reg_spaj = g.reg_spaj(+)
		        AND c.mcl_first $nama$
		        <isNotEmpty property="tglLahir">
		        	<isNotNull property="tglLahir">AND d.mspe_date_birth = to_date(#tglLahir#,'yyyymmdd')</isNotNull>
		        </isNotEmpty>
		    UNION	
				SELECT distinct   
					c.reg_spaj spaj,
					d.mcl_first nama_pp,
					d.mspe_date_birth bod_pp,
					f.mste_insured_no,
					DECODE(a.SEHAT_TTURUT,null,g.mcl_first,DECODE (a.SEHAT_TTURUT, 1, g.mcl_first, b.NAMA)) nama_tt,
					DECODE(a.SEHAT_TTURUT,null,g.mspe_date_birth,DECODE (a.SEHAT_TTURUT, 1, g.mspe_date_birth, b.TGL_LAHIR)) bod_tt,
					c.mspo_policy_no polis,
					c.mspo_beg_date,
					c.mspo_end_date,
					'' || h.lsbs_id lsbs_id,
					DECODE(a.SEHAT_TTURUT,null,eka.f_lsbs(h.reg_spaj, h.lsbs_id), EKA.UTILS.PRODUK(B.LSBS_ID)) lsbs_name,
					'1' kode,
					'INDIVIDU' kode_desc,
					a.regspaj klaim
		  		FROM   
		  			eka.id_mst_clm a,
						eka.mst_peserta b,
						eka.mst_policy c,
						eka.mst_client_new d,
						eka.mst_insured f,
						eka.mst_client_new g,
						eka.mst_product_insured h,
						eka.lst_bisnis i
		 WHERE       A.REGSPAJ = B.REG_SPAJ (+)
		         AND A.SEHAT_TTURUT = B.NO_URUT (+) 
		         AND a.regspaj = c.reg_spaj
		         AND c.mspo_policy_holder = d.mcl_id
		         AND c.reg_spaj = f.reg_spaj
		         AND F.MSTE_INSURED = G.MCL_ID
		         AND c.reg_spaj = h.reg_spaj
		         AND h.lsbs_id = i.lsbs_id
		         and h.MSTE_INSURED_NO=1
		         and H.LSBS_ID <![CDATA[<]]> 300
			         AND EXISTS
			               (SELECT   1
			                  FROM   eka.mst_client_new x
			                 WHERE       f.mste_insured = x.mcl_id
			                         AND SUBSTR (x.mcl_id, 1, 2) <![CDATA[<>]]> 'XX'
			                         AND SUBSTR (x.mcl_id, 1, 2) <![CDATA[<>]]> 'WW'
			                         AND x.mcl_first $nama$
			                         <isNotEmpty property="tglLahir">
							        	<isNotNull property="tglLahir">AND x.mspe_date_birth = to_date(#tglLahir#,'yyyymmdd')</isNotNull>
							         </isNotEmpty>
			                         )
		    UNION		
		    SELECT
		        a.ID spaj, holder_name nama_pp, bod_holder bod_pp, b.urut mste_insured_no, nama_peserta nama_tt, bod_peserta bod_tt, no_sertifikat polis,
		        a.beg_date beg_date, a.end_date end_date, a.product_code lsbs_id, c.product_name lsbs_name, '2' kode, 'TM' kode_desc, d.id klaim
		    FROM
		        eka.mst_tmms@eb a,
		        eka.mst_tmms_det@eb b,
		        eka.lst_tm_product@eb c,
		        eka.mst_claim_medismart@eb d
		    WHERE
		        a.ID = b.ID
		        AND c.product_code = b.product_code
		        AND c.product_code IN ('004','009','016','025','005','003','028','033')
		        AND a.no_sertifikat is not null
		        and a.id = d.id(+)
		        AND b.nama_peserta $nama$
		        <isNotEmpty property="tglLahir">
					<isNotNull property="tglLahir">AND b.bod_peserta = to_date(#tglLahir#,'yyyymmdd')</isNotNull>
				</isNotEmpty>
		)
	 </select>
	 
	 <select id="elions.uw.selectAttentionList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select distinct  
		    a.mspo_policy_no polis, d.mcl_first
		from 
		    eka.mst_policy a,
		    eka.lst_black_list b,
		    eka.mst_insured c,
		    eka.mst_client_new d
		where 
		    a.reg_spaj = b.reg_spaj
		    and a.reg_spaj = c.reg_spaj
		    <isEqual property="tipe" compareValue="6">
		    	and a.mspo_policy_holder = d.mcl_id
		    	and d.mcl_first $nama$
		    	<isNotEmpty property="tglLahir">
		    		<isNotNull>and d.mspe_date_birth = to_date(#tglLahir#,'yyyymmdd')</isNotNull>
		    	</isNotEmpty>
		    </isEqual>
		    <isEqual property="tipe" compareValue="7">	
		    	and c.mste_insured = d.mcl_id
		    	and d.mcl_first $nama$
		    	<isNotEmpty property="tglLahir">
		   			<isNotNull>and d.mspe_date_birth = to_date(#tglLahir#,'yyyymmdd')</isNotNull>
	   			</isNotEmpty>
		    </isEqual>
		    and c.mste_insured_no = 1
		    and a.mspo_policy_no is not null
	 </select>
	
    <select id="elions.uw.selectMstInboxNoReff" resultClass="string" parameterClass="string">
		SELECT reg_spaj FROM eka.mst_inbox WHERE trim(no_reff) = trim(#value#)
	</select> 
	
	<select id="elions.uw.selectMstInboxMiUrl" resultClass="string" parameterClass="string">
		select mi_url
			from eka.mst_inbox
			where eka.mst_inbox.mi_id = trim(#value#)
	</select> 
	
	<!-- report claim Kesehatan -->
	<select id="elions.uw.selectreportDetailHealthClaim" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select distinct
            a.reg_spaj, a.mspo_policy_no, c.mcl_first tertanggung, (case when j.reg_spaj is null then EKA.UTILS.Pemegang(a.reg_spaj) else j.pemegang end) pemegang, eka.f_lsdbs(f.reg_spaj, f.lsbs_id, f.lsdbs_number) lsdbs_name,
            (case when j.tgl_lahir is null 
                  then (case when d.mste_insured = b.mste_insured then b.mste_age else a.mspo_age end)
                  else (trunc(months_between(b.mste_beg_date,j.tgl_lahir)/12) + (case when trunc(mod(months_between(b.mste_beg_date,j.tgl_lahir),12)) >= 6 then 1 else 0 end))
                  end)umur,
            (case when j.sex is null
                  then (case when d.mste_insured = b.mste_insured 
                             then (case when c.mspe_sex = 0 then 'P'                     
                                    when c.mspe_sex = 1 then 'L' else 'UNDIFINED' end)  
                             else (select (case when mspe_sex = 0 then 'P'                     
                                                when mspe_sex = 1 then 'L' else 'UNDIFINED' end) from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end)
                  else j.sex end)sex,
            d.accidentdate tgl_kecelakan,
            (case when j.tgl_lahir is null then (case when d.mste_insured = b.mste_insured then c.mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = a.mspo_policy_holder) end) else j.tgl_lahir end)mspe_date_birth,
            d.REGAPLDATE tgl_claim,b.MSTE_BEG_DATE, d.clm_paid_date tgl_bayar,
            d.place_acd, f.mspr_tsi UP,
            (case when d.lsdp_id is null then 'Tidak isi' else trim(d.lsdp_id ||'-'|| m.lsd_desc) end)EXPLANATION,
            a.mspo_ins_period masa_asuransi,
            (case when j.extra_premi is null then (select mspr_rate from eka.mst_product_insured where reg_spaj = a.reg_spaj and lsbs_id between 900 and 999) else to_number(j.extra_premi) end) extra_premi,
            a.mspo_age umur_pi,
            (case 
                when b.mste_medical = 0 then 'NM'
                when b.mste_medical = 1 then 'M'
                else 'UNDIFINED'
              end) MN, 
            k.lku_symbol, g.st_expl status_claim,
            (case when a.lku_id = '01' then (case when d.st_acp = 10 or d.st_acp = 5 then (select sum(pay_claim) from eka.id_trx_clmdtl where regclaim = d.regclaim) else 0 end) else 0 end)byr_rupiah,
            (case when a.lku_id = '02' then (case when d.st_acp = 10 or d.st_acp = 5 then (select sum(pay_claim) from eka.id_trx_clmdtl where regclaim = d.regclaim) else 0 end) else 0 end)byr_dollar,
            replace(upper(d.expl),'UMUR POLIS : ','') umur_polis,
            (trunc(months_between(d.regdateinput,b.MSTE_BEG_DATE)))umur_polis2,
            (case when a.lca_id='09' and a.lwk_id='21' and a.lsrg_id='01'
                then 'BANK SINARMAS '||upper((select distinct z.nama_cabang
                    from eka.mst_reff_bii y,
                        eka.lst_cabang_bii z
                    where y.lcb_penutup = z.lcb_no and y.reg_spaj = a.reg_spaj))
                else cabang_ind.lsrg_nama
                end)cabang,
            (case when (select s.lgj_note
                      from  eka.mst_policy o,
                              eka.mst_insured p, eka.mst_client_new q,
                              eka.mst_person r, eka.lst_grp_job s
                      where o.reg_spaj = p.reg_spaj
                              and p.mste_insured = q.mcl_id
                              and r.mcl_id = q.mcl_id
                              and r.lgj_id = s.lgj_id
                              and o.reg_spaj = a.reg_spaj) is null then c.mkl_kerja 
                else (select s.lgj_note
                      from  eka.mst_policy o,
                              eka.mst_insured p, eka.mst_client_new q,
                              eka.mst_person r, eka.lst_grp_job s
                      where o.reg_spaj = p.reg_spaj
                                              and p.mste_insured = q.mcl_id
                                              and r.mcl_id = q.mcl_id
                                              and r.lgj_id = s.lgj_id
                                              and o.reg_spaj = a.reg_spaj) end)mkl_kerja,
            (case when a.lstb_id = 1 then i.non_med_tb
                  else (select msadm_tinggi from EKA.MST_ADD_DESC_MRI where reg_spaj = a.reg_spaj) end)tinggi_badan,
            (case when a.lstb_id = 1 then i.non_med_bb
                  else (select msadm_berat from EKA.MST_ADD_DESC_MRI where reg_spaj = a.reg_spaj) end)berat_badan,
            m.lst_lsd_id icd_code, m.lsd_desc icd_desc,
            d.date_ri_1 tgl_masuk_rwt, d.date_ri_2 tgl_selesai_rwt, d.nm_diagnos,
      		eka.namabisnis(a.reg_spaj,2) rider
        from 
            eka.mst_policy a, 
            eka.mst_insured b, 
            eka.mst_client_new c, 
            eka.id_mst_clm d,
            eka.id_trx_clmdtl e,
            eka.mst_product_insured f,
            eka.id_stat_acp g,
            eka.lst_det_bisnis h,
            (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
                x.lca_id = y.lca_id
                and x.lwk_id = y.lwk_id
                and x.lsrg_id = y.lsrg_id)cabang_ind,
            (select * from eka.mst_worksheet where insured_no=1) i,
            (select distinct
                    x.reg_spaj, y.msde_old2 pemegang,
                    (select msde_old5 from eka.mst_det_endors where lsje_id in (30,37) and msen_endors_no = x.msen_endors_no)extra_premi,
                    (select decode(msde_old1,'Wanita','P','Pria','L','') from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex,
                    (select decode(msde_old1,'Wanita',0,'Pria',1,2) from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex2,
                    (select to_date(msde_old2,'dd/MM/yyyy') from eka.mst_det_endors where lsje_id = 11 and msen_endors_no = x.msen_endors_no)tgl_lahir
                from
                    eka.mst_endors x,
                    eka.mst_det_endors y
                where
                    x.msen_endors_no = y.msen_endors_no
                    and y.lsje_id in (2,20)
                    and x.msen_alasan like '%KLAIM%')j,
            eka.lst_kurs k,
            eka.lst_diagnosis m,
            EKA.mst_peserta n
        where
            a.reg_spaj = b.reg_spaj
            and b.mste_insured = c.mcl_id
            and b.reg_spaj = d.regspaj
            and b.mste_insured_no = d.mste_insured_no
            and e.regclaim = d.regclaim
            and b.reg_spaj = f.reg_spaj
            and b.mste_insured_no = f.mste_insured_no
            and d.st_acp = g.st_acp
            and f.lsbs_id = h.lsbs_id
            and f.lsdbs_number = h.lsdbs_number
            and a.reg_spaj = cabang_ind.reg_spaj(+)
            and a.reg_spaj = i.reg_spaj(+)
            and a.reg_spaj = j.reg_spaj(+)
            and d.lku_id = k.lku_id
            and d.lsdp_id = m.lst_lsd_id(+)
            and d.regspaj = n.reg_spaj(+)
            and d.sehat_tturut = n.no_urut(+) 
            and b.MSTE_INSURED_NO = 1 
            and d.MSTE_INSURED_NO = 1 
            and f.LSBS_ID <![CDATA[<]]> 300    
			<isNotEmpty property="jenis_periode">
				<isEqual property="jenis_periode" compareValue="1">
					and d.REGAPLDATE between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
				</isEqual>
				<isEqual property="jenis_periode" compareValue="2">
					and d.accidentdate between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
				</isEqual>
				<isEqual property="jenis_periode" compareValue="3">
			 		and d.clm_paid_date between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			</isNotEmpty>
		group by
		    a.lku_id,d.st_acp ,d.regclaim,
		    a.reg_spaj, a.mspo_policy_no, c.mcl_first, (case when j.reg_spaj is null then EKA.UTILS.Pemegang(a.reg_spaj) else j.pemegang end), eka.f_lsdbs(f.reg_spaj, f.lsbs_id, f.lsdbs_number),
		    (case when j.tgl_lahir is null 
		          then (case when d.mste_insured = b.mste_insured then b.mste_age else a.mspo_age end)
		          else (trunc(months_between(b.mste_beg_date,j.tgl_lahir)/12) + (case when trunc(mod(months_between(b.mste_beg_date,j.tgl_lahir),12)) >= 6 then 1 else 0 end))
		          end),
		    j.sex, d.mste_insured, b.mste_insured , c.mspe_sex, a.mspo_policy_holder,
		    d.accidentdate,
		    j.tgl_lahir, c.mspe_date_birth,
		    d.REGAPLDATE,b.MSTE_BEG_DATE, d.clm_paid_date,
		    d.place_acd, f.mspr_tsi,
		    (case when d.lsdp_id is null then 'Tidak isi' else trim(d.lsdp_id ||'-'|| m.lsd_desc) end),
		    a.mspo_ins_period,
		    j.extra_premi,
		    a.mspo_age,
		    (case 
		        when b.mste_medical = 0 then 'NM'
		        when b.mste_medical = 1 then 'M'
		        else 'UNDIFINED'
		      end), k.lku_symbol, g.st_expl,
		    replace(upper(d.expl),'UMUR POLIS : ',''),
		    (trunc(months_between(d.regdateinput,b.MSTE_BEG_DATE))),
		    a.lca_id, a.lwk_id, a.lsrg_id, cabang_ind.lsrg_nama,
		    c.mkl_kerja,
		    a.lstb_id, i.non_med_tb, i.non_med_bb,
		    m.lst_lsd_id, m.lsd_desc,
		    d.date_ri_1, d.date_ri_2, d.nm_diagnos
	</select>
	
	<select id="elions.uw.selectreportHealthClaimBasedEntryAge" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
			(case when mste_age <![CDATA[>=]]> 0 and mste_age <![CDATA[<=]]>5 then '0 - 5'
                  when mste_age <![CDATA[>]]> 5 and mste_age <![CDATA[<=]]>10 then '6 - 10'
                  when mste_age <![CDATA[>]]> 10 and mste_age <![CDATA[<=]]>15 then '11 - 15'
                  when mste_age <![CDATA[>]]> 15 and mste_age <![CDATA[<=]]>20 then '16 - 20'
                  when mste_age <![CDATA[>]]> 20 and mste_age <![CDATA[<=]]>25 then '21 - 25'
                  when mste_age <![CDATA[>]]> 25 and mste_age <![CDATA[<=]]>30 then '26 - 30'
                  when mste_age <![CDATA[>]]> 30 and mste_age <![CDATA[<=]]>35 then '31 - 35'
                  when mste_age <![CDATA[>]]> 35 and mste_age <![CDATA[<=]]>40 then '36 - 40'
                  when mste_age <![CDATA[>]]> 40 and mste_age <![CDATA[<=]]>45 then '41 - 45'
                  when mste_age <![CDATA[>]]> 45 and mste_age <![CDATA[<=]]>50 then '46 - 50'
                  when mste_age <![CDATA[>]]> 50 and mste_age <![CDATA[<=]]>55 then '51 - 55'
                  when mste_age <![CDATA[>]]> 55 and mste_age <![CDATA[<=]]>60 then '56 - 60'
                  else '61 >'
            end)umur,
            sum(case when ((trunc(months_between(REGAPLDATE,MSTE_BEG_DATE)))+(case when (trunc(REGAPLDATE-add_months(MSTE_BEG_DATE,trunc(months_between(REGAPLDATE,MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(REGAPLDATE,MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 0 and 6 then 1 else 0 end) usia_0_6,
            sum(case when ((trunc(months_between(REGAPLDATE,MSTE_BEG_DATE)))+(case when (trunc(REGAPLDATE-add_months(MSTE_BEG_DATE,trunc(months_between(REGAPLDATE,MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(REGAPLDATE,MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 7 and 12 then 1 else 0 end) usia_7_12,
            sum(case when ((trunc(months_between(REGAPLDATE,MSTE_BEG_DATE)))+(case when (trunc(REGAPLDATE-add_months(MSTE_BEG_DATE,trunc(months_between(REGAPLDATE,MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(REGAPLDATE,MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 13 and 24 then 1 else 0 end) usia_2_yr,
            sum(case when ((trunc(months_between(REGAPLDATE,MSTE_BEG_DATE)))+(case when (trunc(REGAPLDATE-add_months(MSTE_BEG_DATE,trunc(months_between(REGAPLDATE,MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(REGAPLDATE,MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 25 and 36 then 1 else 0 end) usia_3_yr,
            sum(case when ((trunc(months_between(REGAPLDATE,MSTE_BEG_DATE)))+(case when (trunc(REGAPLDATE-add_months(MSTE_BEG_DATE,trunc(months_between(REGAPLDATE,MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(REGAPLDATE,MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 37 and 48 then 1 else 0 end) usia_4_yr,
            sum(case when ((trunc(months_between(REGAPLDATE,MSTE_BEG_DATE)))+(case when (trunc(REGAPLDATE-add_months(MSTE_BEG_DATE,trunc(months_between(REGAPLDATE,MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(REGAPLDATE,MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) between 49 and 60 then 1 else 0 end) usia_5_yr,
            sum(case when ((trunc(months_between(REGAPLDATE,MSTE_BEG_DATE)))+(case when (trunc(REGAPLDATE-add_months(MSTE_BEG_DATE,trunc(months_between(REGAPLDATE,MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(REGAPLDATE,MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) <![CDATA[>]]> 60 then 1 else 0 end) usia_6_yr,
            sum(case when ((trunc(months_between(REGAPLDATE,MSTE_BEG_DATE)))+(case when (trunc(REGAPLDATE-add_months(MSTE_BEG_DATE,trunc(months_between(REGAPLDATE,MSTE_BEG_DATE)/12)*12+trunc(mod(months_between(REGAPLDATE,MSTE_BEG_DATE),12)))))>0 then 1 else 0 end)) <![CDATA[>=]]>0 then 1 else 0 end) usia_all
		from
			(select distinct
				m.lst_lsd_id,m.lsd_desc,       
			    j.sex2, d.mste_insured, b.mste_insured mste_insured_2, c.mspe_sex, b.mste_beg_date,
			    a.mspo_policy_holder,d.regdateinput,j.tgl_lahir, c.mspe_date_birth, b.mste_age, d.REGAPLDATE
			from 
				eka.mst_policy a, 
	            eka.mst_insured b, 
	            eka.mst_client_new c, 
	            eka.id_mst_clm d,
	            eka.id_trx_clmdtl e,
	            eka.mst_product_insured f,
	            eka.id_stat_acp g,
	            eka.lst_det_bisnis h,
	            (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
	                x.lca_id = y.lca_id
	                and x.lwk_id = y.lwk_id
	                and x.lsrg_id = y.lsrg_id)cabang_ind,
	            (select * from eka.mst_worksheet where insured_no=1) i,
	            (select distinct
	                    x.reg_spaj, y.msde_old2 pemegang,
	                    (select msde_old5 from eka.mst_det_endors where lsje_id in (30,37) and msen_endors_no = x.msen_endors_no)extra_premi,
	                    (select decode(msde_old1,'Wanita','P','Pria','L','') from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex,
	                    (select decode(msde_old1,'Wanita',0,'Pria',1,2) from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex2,
	                    (select to_date(msde_old2,'dd/MM/yyyy') from eka.mst_det_endors where lsje_id = 11 and msen_endors_no = x.msen_endors_no)tgl_lahir
	                from
	                    eka.mst_endors x,
	                    eka.mst_det_endors y
	                where
	                    x.msen_endors_no = y.msen_endors_no
	                    and y.lsje_id in (2,20)
	                    and x.msen_alasan like '%KLAIM%')j,
	            eka.lst_kurs k,
	            eka.lst_diagnosis m,
	            EKA.mst_peserta n
	        where
	            a.reg_spaj = b.reg_spaj
	            and b.mste_insured = c.mcl_id
	            and b.reg_spaj = d.regspaj
	            and b.mste_insured_no = d.mste_insured_no
	            and e.regclaim = d.regclaim
	            and b.reg_spaj = f.reg_spaj
	            and b.mste_insured_no = f.mste_insured_no
	            and d.st_acp = g.st_acp
	            and f.lsbs_id = h.lsbs_id
	            and f.lsdbs_number = h.lsdbs_number
	            and a.reg_spaj = cabang_ind.reg_spaj(+)
	            and a.reg_spaj = i.reg_spaj(+)
	            and a.reg_spaj = j.reg_spaj(+)
	            and d.lku_id = k.lku_id
	            and d.lsdp_id = m.lst_lsd_id(+)
	            and d.regspaj = n.reg_spaj(+)
	            and d.sehat_tturut = n.no_urut(+) 
	            and b.MSTE_INSURED_NO = 1 
	            and d.MSTE_INSURED_NO = 1 
	            and f.LSBS_ID <![CDATA[<]]> 300    
				<isNotEmpty property="jenis_periode">
					<isEqual property="jenis_periode" compareValue="1">
						and d.REGAPLDATE between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="2">
						and d.accidentdate between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="3">
				 		and d.clm_paid_date between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
				 	</isEqual>
				</isNotEmpty>)
			  group  by 
	            (case when mste_age <![CDATA[>=]]> 0 and mste_age <![CDATA[<=]]>5 then '0 - 5'
	                  when mste_age <![CDATA[>]]> 5 and mste_age <![CDATA[<=]]>10 then '6 - 10'
	                  when mste_age <![CDATA[>]]> 10 and mste_age <![CDATA[<=]]>15 then '11 - 15'
	                  when mste_age <![CDATA[>]]> 15 and mste_age <![CDATA[<=]]>20 then '16 - 20'
	                  when mste_age <![CDATA[>]]> 20 and mste_age <![CDATA[<=]]>25 then '21 - 25'
	                  when mste_age <![CDATA[>]]> 25 and mste_age <![CDATA[<=]]>30 then '26 - 30'
	                  when mste_age <![CDATA[>]]> 30 and mste_age <![CDATA[<=]]>35 then '31 - 35'
	                  when mste_age <![CDATA[>]]> 35 and mste_age <![CDATA[<=]]>40 then '36 - 40'
	                  when mste_age <![CDATA[>]]> 40 and mste_age <![CDATA[<=]]>45 then '41 - 45'
	                  when mste_age <![CDATA[>]]> 45 and mste_age <![CDATA[<=]]>50 then '46 - 50'
	                  when mste_age <![CDATA[>]]> 50 and mste_age <![CDATA[<=]]>55 then '51 - 55'
	                  when mste_age <![CDATA[>]]> 55 and mste_age <![CDATA[<=]]>60 then '56 - 60'
	                  else '61 >'
	            end)
	            order by umur asc
	</select>
	
	<select id="elions.uw.selectreportHealthClaimByMedis" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
			(case 
                when mste_medical = 0 then 'Non Medis'
                when mste_medical = 1 then 'Medis'
                else 'UNDIFINED'
              end)Medical,
            nvl((case 
                when mste_medical = 0 then 0
                when mste_medical = 1 then 1
                else 2
              end),0)Medical_nmbr,        
            count(reg_spaj) total_polis,
            '' total_polis2,
            '' extra_premi2,
            count(extra_premi)extra_premi,
            icd,
            sebab,  
            <!-- (case when a.lku_id = '01' then sum((select sum(pay_claim) from eka.id_trx_clmdtl where regclaim = d.regclaim)) else 0 end)sum_rupiah,
            (case when a.lku_id = '02' then sum((select sum(pay_claim) from eka.id_trx_clmdtl where regclaim = d.regclaim)) else 0 end)sum_dollar -->
            sum(byr_rupiah)sum_rupiah,
            sum(byr_dollar)sum_dollar
            <!-- (case when a.lku_id = '01' then sum(e.pay_claim) else 0 end)sum_rupiah,
            (case when a.lku_id = '02' then sum(e.pay_claim) else 0 end)sum_dollar -->
		from
			(select distinct
			    m.lst_lsd_id,m.lsd_desc,j.sex2, d.mste_insured, b.mste_insured mste_insured_2, c.mspe_sex, a.mspo_policy_holder,
			    b.mste_medical, m.lst_lsd_id icd, d.nm_diagnos sebab, a.reg_spaj,
			    (select mspr_extra from eka.mst_product_insured where reg_spaj = a.reg_spaj and lsbs_id between 900 and 999)extra_premi,
			    (case when a.lku_id = '01' then (case when d.st_acp = 10 or d.st_acp = 5 then (select sum(pay_claim) from eka.id_trx_clmdtl where regclaim = d.regclaim) else 0 end) else 0 end)byr_rupiah,
			    (case when a.lku_id = '02' then (case when d.st_acp = 10 or d.st_acp = 5 then (select sum(pay_claim) from eka.id_trx_clmdtl where regclaim = d.regclaim) else 0 end) else 0 end)byr_dollar
			from 
				eka.mst_policy a, 
	            eka.mst_insured b, 
	            eka.mst_client_new c, 
	            eka.id_mst_clm d,
	            eka.id_trx_clmdtl e,
	            eka.mst_product_insured f,
	            eka.id_stat_acp g,
	            eka.lst_det_bisnis h,
	            (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
	                x.lca_id = y.lca_id
	                and x.lwk_id = y.lwk_id
	                and x.lsrg_id = y.lsrg_id)cabang_ind,
	            (select * from eka.mst_worksheet where insured_no=1) i,
	            (select distinct
	                    x.reg_spaj, y.msde_old2 pemegang,
	                    (select msde_old5 from eka.mst_det_endors where lsje_id in (30,37) and msen_endors_no = x.msen_endors_no)extra_premi,
	                    (select decode(msde_old1,'Wanita','P','Pria','L','') from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex,
	                    (select decode(msde_old1,'Wanita',0,'Pria',1,2) from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex2,
	                    (select to_date(msde_old2,'dd/MM/yyyy') from eka.mst_det_endors where lsje_id = 11 and msen_endors_no = x.msen_endors_no)tgl_lahir
	                from
	                    eka.mst_endors x,
	                    eka.mst_det_endors y
	                where
	                    x.msen_endors_no = y.msen_endors_no
	                    and y.lsje_id in (2,20)
	                    and x.msen_alasan like '%KLAIM%')j,
	            eka.lst_kurs k,
	            eka.lst_diagnosis m,
	            EKA.mst_peserta n
	        where
	            a.reg_spaj = b.reg_spaj
	            and b.mste_insured = c.mcl_id
	            and b.reg_spaj = d.regspaj
	            and b.mste_insured_no = d.mste_insured_no
	            and e.regclaim = d.regclaim
	            and b.reg_spaj = f.reg_spaj
	            and b.mste_insured_no = f.mste_insured_no
	            and d.st_acp = g.st_acp
	            and f.lsbs_id = h.lsbs_id
	            and f.lsdbs_number = h.lsdbs_number
	            and a.reg_spaj = cabang_ind.reg_spaj(+)
	            and a.reg_spaj = i.reg_spaj(+)
	            and a.reg_spaj = j.reg_spaj(+)
	            and d.lku_id = k.lku_id
	            and d.lsdp_id = m.lst_lsd_id(+)
	            and d.regspaj = n.reg_spaj(+)
	            and d.sehat_tturut = n.no_urut(+) 
	            and b.MSTE_INSURED_NO = 1 
	            and d.MSTE_INSURED_NO = 1 
	            and f.LSBS_ID <![CDATA[<]]> 300    
				<isNotEmpty property="jenis_periode">
					<isEqual property="jenis_periode" compareValue="1">
						and d.REGAPLDATE between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="2">
						and d.accidentdate between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="3">
				 		and d.clm_paid_date between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
				 	</isEqual>
				</isNotEmpty>)
			  group by icd, sebab,
			      (case 
			        when mste_medical = 0 then 'Non Medis'
			        when mste_medical = 1 then 'Medis'
			        else 'UNDIFINED'
			      end),
			      (case 
			        when mste_medical = 0 then 0
			        when mste_medical = 1 then 1
			        else 2
			      end)
			      order by medical_nmbr asc
	</select>
	
	<select id="elions.uw.selectGetTotalHealthClaimByMedis" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
			count(reg_spaj) total_polis,
	    		count(extra_premi)extra_premi
		from
			(select distinct
				a.reg_spaj,
	    		(select mspr_extra from eka.mst_product_insured where reg_spaj = a.reg_spaj and lsbs_id between 900 and 999)extra_premi
			from 
				eka.mst_policy a, 
	            eka.mst_insured b, 
	            eka.mst_client_new c, 
	            eka.id_mst_clm d,
	            eka.id_trx_clmdtl e,
	            eka.mst_product_insured f,
	            eka.id_stat_acp g,
	            eka.lst_det_bisnis h,
	            (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
	                x.lca_id = y.lca_id
	                and x.lwk_id = y.lwk_id
	                and x.lsrg_id = y.lsrg_id)cabang_ind,
	            (select * from eka.mst_worksheet where insured_no=1) i,
	            (select distinct
	                    x.reg_spaj, y.msde_old2 pemegang,
	                    (select msde_old5 from eka.mst_det_endors where lsje_id in (30,37) and msen_endors_no = x.msen_endors_no)extra_premi,
	                    (select decode(msde_old1,'Wanita','P','Pria','L','') from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex,
	                    (select decode(msde_old1,'Wanita',0,'Pria',1,2) from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex2,
	                    (select to_date(msde_old2,'dd/MM/yyyy') from eka.mst_det_endors where lsje_id = 11 and msen_endors_no = x.msen_endors_no)tgl_lahir
	                from
	                    eka.mst_endors x,
	                    eka.mst_det_endors y
	                where
	                    x.msen_endors_no = y.msen_endors_no
	                    and y.lsje_id in (2,20)
	                    and x.msen_alasan like '%KLAIM%')j,
	            eka.lst_kurs k,
	            eka.lst_diagnosis m,
	            EKA.mst_peserta n
	        where
	            a.reg_spaj = b.reg_spaj
	            and b.mste_insured = c.mcl_id
	            and b.reg_spaj = d.regspaj
	            and b.mste_insured_no = d.mste_insured_no
	            and e.regclaim = d.regclaim
	            and b.reg_spaj = f.reg_spaj
	            and b.mste_insured_no = f.mste_insured_no
	            and d.st_acp = g.st_acp
	            and f.lsbs_id = h.lsbs_id
	            and f.lsdbs_number = h.lsdbs_number
	            and a.reg_spaj = cabang_ind.reg_spaj(+)
	            and a.reg_spaj = i.reg_spaj(+)
	            and a.reg_spaj = j.reg_spaj(+)
	            and d.lku_id = k.lku_id
	            and d.lsdp_id = m.lst_lsd_id(+)
	            and d.regspaj = n.reg_spaj(+)
	            and d.sehat_tturut = n.no_urut(+) 
	            and b.MSTE_INSURED_NO = 1 
	            and d.MSTE_INSURED_NO = 1 
	            and f.LSBS_ID <![CDATA[<]]> 300    
	            and b.mste_medical = #medis#
				<isNotEmpty property="jenis_periode">
					<isEqual property="jenis_periode" compareValue="1">
						and d.REGAPLDATE between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="2">
						and d.accidentdate between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="3">
				 		and d.clm_paid_date between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
				 	</isEqual>
				</isNotEmpty>)
	</select>
	
	<select id="elions.uw.selectreportHealthClaimBasedDurationPolicy" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
			lst_lsd_id, lsd_desc, 
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) between -1 and 1 then 1 else 0 end) bln_1,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) = 2 then 1 else 0 end) bln_2,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) = 3 then 1 else 0 end) bln_3,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) = 4 then 1 else 0 end) bln_4,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) = 5 then 1 else 0 end) bln_5,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) = 6 then 1 else 0 end) bln_6,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) = 7 then 1 else 0 end) bln_7,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) = 8 then 1 else 0 end) bln_8,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) = 9 then 1 else 0 end) bln_9,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) = 10 then 1 else 0 end) bln_10,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) = 11 then 1 else 0 end) bln_11,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) = 12 then 1 else 0 end) year_1,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) between 13 and 24 then 1 else 0 end) year_2,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) between 25 and 36 then 1 else 0 end) year_3,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) between 37 and 48 then 1 else 0 end) year_4,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) between 49 and 60 then 1 else 0 end) year_5,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) between 61 and 120 then 1 else 0 end) year_6_10,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) <![CDATA[>]]>121 then 1 else 0 end) year_10up,
			sum(case when trunc( months_between( LAST_DAY(ADD_MONTHS(REGAPLDATE,0)), LAST_DAY(ADD_MONTHS(MSTE_BEG_DATE,0)) ) ) <![CDATA[>=]]>-1 then 1 else 0 end) sum_all
		from
			(select distinct
				m.lst_lsd_id,m.lsd_desc,j.sex2, d.mste_insured, b.mste_insured mste_insured_2, c.mspe_sex, a.mspo_policy_holder,d.REGAPLDATE,
				j.tgl_lahir,c.mspe_date_birth, b.mste_beg_date
			from 
				eka.mst_policy a, 
	            eka.mst_insured b, 
	            eka.mst_client_new c, 
	            eka.id_mst_clm d,
	            eka.id_trx_clmdtl e,
	            eka.mst_product_insured f,
	            eka.id_stat_acp g,
	            eka.lst_det_bisnis h,
	            (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
	                x.lca_id = y.lca_id
	                and x.lwk_id = y.lwk_id
	                and x.lsrg_id = y.lsrg_id)cabang_ind,
	            (select * from eka.mst_worksheet where insured_no=1) i,
	            (select distinct
	                    x.reg_spaj, y.msde_old2 pemegang,
	                    (select msde_old5 from eka.mst_det_endors where lsje_id in (30,37) and msen_endors_no = x.msen_endors_no)extra_premi,
	                    (select decode(msde_old1,'Wanita','P','Pria','L','') from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex,
	                    (select decode(msde_old1,'Wanita',0,'Pria',1,2) from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex2,
	                    (select to_date(msde_old2,'dd/MM/yyyy') from eka.mst_det_endors where lsje_id = 11 and msen_endors_no = x.msen_endors_no)tgl_lahir
	                from
	                    eka.mst_endors x,
	                    eka.mst_det_endors y
	                where
	                    x.msen_endors_no = y.msen_endors_no
	                    and y.lsje_id in (2,20)
	                    and x.msen_alasan like '%KLAIM%')j,
	            eka.lst_kurs k,
	            eka.lst_diagnosis m,
	            EKA.mst_peserta n
	        where
	            a.reg_spaj = b.reg_spaj
	            and b.mste_insured = c.mcl_id
	            and b.reg_spaj = d.regspaj
	            and b.mste_insured_no = d.mste_insured_no
	            and e.regclaim = d.regclaim
	            and b.reg_spaj = f.reg_spaj
	            and b.mste_insured_no = f.mste_insured_no
	            and d.st_acp = g.st_acp
	            and f.lsbs_id = h.lsbs_id
	            and f.lsdbs_number = h.lsdbs_number
	            and a.reg_spaj = cabang_ind.reg_spaj(+)
	            and a.reg_spaj = i.reg_spaj(+)
	            and a.reg_spaj = j.reg_spaj(+)
	            and d.lku_id = k.lku_id
	            and d.lsdp_id = m.lst_lsd_id(+)
	            and d.regspaj = n.reg_spaj(+)
	            and d.sehat_tturut = n.no_urut(+) 
	            and b.MSTE_INSURED_NO = 1 
	            and d.MSTE_INSURED_NO = 1 
	            and f.LSBS_ID <![CDATA[<]]> 300    
				<isNotEmpty property="jenis_periode">
					<isEqual property="jenis_periode" compareValue="1">
						and d.REGAPLDATE between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="2">
						and d.accidentdate between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="3">
				 		and d.clm_paid_date between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
				 	</isEqual>
				</isNotEmpty>)
		group by lst_lsd_id, lsd_desc
        order by lst_lsd_id asc
	</select>
	
	<select id="elions.uw.selectreportHealthClaimByBranch" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
			(case when lca_id='09' and lwk_id='21' and lsrg_id='01'
			    then 'BANK SINARMAS '||upper((select distinct z.nama_cabang
			        from eka.mst_reff_bii y,
			            eka.lst_cabang_bii z
			        where y.lcb_penutup = z.lcb_no and y.reg_spaj = reg_spaj))
			    else lsrg_nama
			    end)cabang,
		    sum(case when mspe_sex=0 or mspe_sex=1 then 1 else 0 end) total_case,
		    sum(byr_rupiah)byr_rupiah,
		    sum(byr_dollar)byr_dollar,
		    rtrim (xmlagg (xmlelement (e,(
			      case when st_acp = 15
			      then nm_diagnos || ','
			      else ''
			      end) )).extract ('//text()'), ',')sebab,
		    sum(case when st_acp = 15 then 1 else 0 end) tolak
		from
			(select distinct
			    m.lst_lsd_id,m.lsd_desc,j.sex2, d.mste_insured, b.mste_insured mste_insured_2, c.mspe_sex, a.mspo_policy_holder,d.REGAPLDATE,
				j.tgl_lahir,c.mspe_date_birth, b.mste_beg_date, a.reg_spaj,
			    a.lca_id, a.lwk_id, a.lsrg_id, cabang_ind.lsrg_nama, g.st_acp,
			    d.nm_diagnos,
			    (case when a.lku_id = '01' then (case when d.st_acp = 10 or d.st_acp = 5 then (select sum(pay_claim) from eka.id_trx_clmdtl where regclaim = d.regclaim) else 0 end) else 0 end)byr_rupiah,
			    (case when a.lku_id = '02' then (case when d.st_acp = 10 or d.st_acp = 5 then (select sum(pay_claim) from eka.id_trx_clmdtl where regclaim = d.regclaim) else 0 end) else 0 end)byr_dollar
			from 
				eka.mst_policy a, 
	            eka.mst_insured b, 
	            eka.mst_client_new c, 
	            eka.id_mst_clm d,
	            eka.id_trx_clmdtl e,
	            eka.mst_product_insured f,
	            eka.id_stat_acp g,
	            eka.lst_det_bisnis h,
	            (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
	                x.lca_id = y.lca_id
	                and x.lwk_id = y.lwk_id
	                and x.lsrg_id = y.lsrg_id)cabang_ind,
	            (select * from eka.mst_worksheet where insured_no=1) i,
	            (select distinct
	                    x.reg_spaj, y.msde_old2 pemegang,
	                    (select msde_old5 from eka.mst_det_endors where lsje_id in (30,37) and msen_endors_no = x.msen_endors_no)extra_premi,
	                    (select decode(msde_old1,'Wanita','P','Pria','L','') from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex,
	                    (select decode(msde_old1,'Wanita',0,'Pria',1,2) from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex2,
	                    (select to_date(msde_old2,'dd/MM/yyyy') from eka.mst_det_endors where lsje_id = 11 and msen_endors_no = x.msen_endors_no)tgl_lahir
	                from
	                    eka.mst_endors x,
	                    eka.mst_det_endors y
	                where
	                    x.msen_endors_no = y.msen_endors_no
	                    and y.lsje_id in (2,20)
	                    and x.msen_alasan like '%KLAIM%')j,
	            eka.lst_kurs k,
	            eka.lst_diagnosis m,
	            EKA.mst_peserta n
	        where
	            a.reg_spaj = b.reg_spaj
	            and b.mste_insured = c.mcl_id
	            and b.reg_spaj = d.regspaj
	            and b.mste_insured_no = d.mste_insured_no
	            and e.regclaim = d.regclaim
	            and b.reg_spaj = f.reg_spaj
	            and b.mste_insured_no = f.mste_insured_no
	            and d.st_acp = g.st_acp
	            and f.lsbs_id = h.lsbs_id
	            and f.lsdbs_number = h.lsdbs_number
	            and a.reg_spaj = cabang_ind.reg_spaj(+)
	            and a.reg_spaj = i.reg_spaj(+)
	            and a.reg_spaj = j.reg_spaj(+)
	            and d.lku_id = k.lku_id
	            and d.lsdp_id = m.lst_lsd_id(+)
	            and d.regspaj = n.reg_spaj(+)
	            and d.sehat_tturut = n.no_urut(+) 
	            and b.MSTE_INSURED_NO = 1 
	            and d.MSTE_INSURED_NO = 1 
	            and f.LSBS_ID <![CDATA[<]]> 300    
				<isNotEmpty property="jenis_periode">
					<isEqual property="jenis_periode" compareValue="1">
						and d.REGAPLDATE between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="2">
						and d.accidentdate between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="3">
				 		and d.clm_paid_date between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
				 	</isEqual>
				</isNotEmpty>)
		group by 
		  	lca_id, lwk_id, lsrg_id, lsrg_nama
	</select>
	
	<select id="elions.uw.selectreportHealthClaimByCOD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
		    lst_lsd_id, lsd_desc, 
		    sum(case when (case when sex2 is null
		                                      then (case when mste_insured = mste_insured_2 
		                                                 then mspe_sex  
		                                                 else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
		                                      else sex2 end)=1 then 1 else 0 end) MALE,
		    sum(case when (case when sex2 is null
		                                      then (case when mste_insured = mste_insured_2 
		                                                 then mspe_sex  
		                                                 else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
		                                      else sex2 end)=0 then 1 else 0 end) FEMALE,
		    sum(byr_rupiah)byr_rupiah, sum(byr_dollar)byr_dollar
		from
			(select distinct
				m.lst_lsd_id,m.lsd_desc,j.sex2, d.mste_insured, b.mste_insured mste_insured_2, c.mspe_sex, a.mspo_policy_holder,
			    (case when a.lku_id = '01' then (case when d.st_acp = 10 or d.st_acp = 5 then (select sum(pay_claim) from eka.id_trx_clmdtl where regclaim = d.regclaim) else 0 end) else 0 end)byr_rupiah,
			    (case when a.lku_id = '02' then (case when d.st_acp = 10 or d.st_acp = 5 then (select sum(pay_claim) from eka.id_trx_clmdtl where regclaim = d.regclaim) else 0 end) else 0 end)byr_dollar
			from 
				eka.mst_policy a, 
	            eka.mst_insured b, 
	            eka.mst_client_new c, 
	            eka.id_mst_clm d,
	            eka.id_trx_clmdtl e,
	            eka.mst_product_insured f,
	            eka.id_stat_acp g,
	            eka.lst_det_bisnis h,
	            (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
	                x.lca_id = y.lca_id
	                and x.lwk_id = y.lwk_id
	                and x.lsrg_id = y.lsrg_id)cabang_ind,
	            (select * from eka.mst_worksheet where insured_no=1) i,
	            (select distinct
	                    x.reg_spaj, y.msde_old2 pemegang,
	                    (select msde_old5 from eka.mst_det_endors where lsje_id in (30,37) and msen_endors_no = x.msen_endors_no)extra_premi,
	                    (select decode(msde_old1,'Wanita','P','Pria','L','') from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex,
	                    (select decode(msde_old1,'Wanita',0,'Pria',1,2) from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex2,
	                    (select to_date(msde_old2,'dd/MM/yyyy') from eka.mst_det_endors where lsje_id = 11 and msen_endors_no = x.msen_endors_no)tgl_lahir
	                from
	                    eka.mst_endors x,
	                    eka.mst_det_endors y
	                where
	                    x.msen_endors_no = y.msen_endors_no
	                    and y.lsje_id in (2,20)
	                    and x.msen_alasan like '%KLAIM%')j,
	            eka.lst_kurs k,
	            eka.lst_diagnosis m,
	            EKA.mst_peserta n
	        where
	            a.reg_spaj = b.reg_spaj
	            and b.mste_insured = c.mcl_id
	            and b.reg_spaj = d.regspaj
	            and b.mste_insured_no = d.mste_insured_no
	            and e.regclaim = d.regclaim
	            and b.reg_spaj = f.reg_spaj
	            and b.mste_insured_no = f.mste_insured_no
	            and d.st_acp = g.st_acp
	            and f.lsbs_id = h.lsbs_id
	            and f.lsdbs_number = h.lsdbs_number
	            and a.reg_spaj = cabang_ind.reg_spaj(+)
	            and a.reg_spaj = i.reg_spaj(+)
	            and a.reg_spaj = j.reg_spaj(+)
	            and d.lku_id = k.lku_id
	            and d.lsdp_id = m.lst_lsd_id(+)
	            and d.regspaj = n.reg_spaj(+)
	            and d.sehat_tturut = n.no_urut(+) 
	            and b.MSTE_INSURED_NO = 1 
	            and d.MSTE_INSURED_NO = 1 
	            and f.LSBS_ID <![CDATA[<]]> 300    
				<isNotEmpty property="jenis_periode">
					<isEqual property="jenis_periode" compareValue="1">
						and d.REGAPLDATE between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="2">
						and d.accidentdate between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="3">
				 		and d.clm_paid_date between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
				 	</isEqual>
				</isNotEmpty>)
		group by
			lst_lsd_id,lsd_desc
		order by 1
	</select>
	
	<select id="elions.uw.selectreportHealthClaimByCOD_TotalCase" parameterClass="java.util.HashMap" resultClass="int">
		select
			sum(case when mspe_sex=1 or mspe_sex=0 then 1 else 0 end) TOTAL
		from
			(select distinct
				m.lst_lsd_id,m.lsd_desc,       
			    j.sex2, d.mste_insured, b.mste_insured mste_insured_2, c.mspe_sex,
			    a.mspo_policy_holder,d.regdateinput,j.tgl_lahir, c.mspe_date_birth
			from 
				eka.mst_policy a, 
	            eka.mst_insured b, 
	            eka.mst_client_new c, 
	            eka.id_mst_clm d,
	            eka.id_trx_clmdtl e,
	            eka.mst_product_insured f,
	            eka.id_stat_acp g,
	            eka.lst_det_bisnis h,
	            (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
	                x.lca_id = y.lca_id
	                and x.lwk_id = y.lwk_id
	                and x.lsrg_id = y.lsrg_id)cabang_ind,
	            (select * from eka.mst_worksheet where insured_no=1) i,
	            (select distinct
	                    x.reg_spaj, y.msde_old2 pemegang,
	                    (select msde_old5 from eka.mst_det_endors where lsje_id in (30,37) and msen_endors_no = x.msen_endors_no)extra_premi,
	                    (select decode(msde_old1,'Wanita','P','Pria','L','') from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex,
	                    (select decode(msde_old1,'Wanita',0,'Pria',1,2) from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex2,
	                    (select to_date(msde_old2,'dd/MM/yyyy') from eka.mst_det_endors where lsje_id = 11 and msen_endors_no = x.msen_endors_no)tgl_lahir
	                from
	                    eka.mst_endors x,
	                    eka.mst_det_endors y
	                where
	                    x.msen_endors_no = y.msen_endors_no
	                    and y.lsje_id in (2,20)
	                    and x.msen_alasan like '%KLAIM%')j,
	            eka.lst_kurs k,
	            eka.lst_diagnosis m,
	            EKA.mst_peserta n
	        where
	            a.reg_spaj = b.reg_spaj
	            and b.mste_insured = c.mcl_id
	            and b.reg_spaj = d.regspaj
	            and b.mste_insured_no = d.mste_insured_no
	            and e.regclaim = d.regclaim
	            and b.reg_spaj = f.reg_spaj
	            and b.mste_insured_no = f.mste_insured_no
	            and d.st_acp = g.st_acp
	            and f.lsbs_id = h.lsbs_id
	            and f.lsdbs_number = h.lsdbs_number
	            and a.reg_spaj = cabang_ind.reg_spaj(+)
	            and a.reg_spaj = i.reg_spaj(+)
	            and a.reg_spaj = j.reg_spaj(+)
	            and d.lku_id = k.lku_id
	            and d.lsdp_id = m.lst_lsd_id(+)
	            and d.regspaj = n.reg_spaj(+)
	            and d.sehat_tturut = n.no_urut(+) 
	            and b.MSTE_INSURED_NO = 1 
	            and d.MSTE_INSURED_NO = 1 
	            and f.LSBS_ID <![CDATA[<]]> 300    
				<isNotEmpty property="jenis_periode">
					<isEqual property="jenis_periode" compareValue="1">
						and d.REGAPLDATE between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="2">
						and d.accidentdate between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="3">
				 		and d.clm_paid_date between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
				 	</isEqual>
				</isNotEmpty>)
	</select>
	
	<select id="elions.uw.selectreportHealthClaimBasedAge" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
			lst_lsd_id,lsd_desc,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 0 and 1 then 1 else 0 end) usia_0_1_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 0 and 1 then 1 else 0 end) usia_0_1_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 2 and 5 then 1 else 0 end) usia_2_5_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 2 and 5 then 1 else 0 end) usia_2_5_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 6 and 10 then 1 else 0 end) usia_6_10_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 6 and 10 then 1 else 0 end) usia_6_10_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 11 and 15 then 1 else 0 end) usia_11_15_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 11 and 15 then 1 else 0 end) usia_11_15_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 16 and 20 then 1 else 0 end) usia_16_20_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 16 and 20 then 1 else 0 end) usia_16_20_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 21 and 25 then 1 else 0 end) usia_21_25_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 21 and 25 then 1 else 0 end) usia_21_25_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 26 and 30 then 1 else 0 end) usia_26_30_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 26 and 30 then 1 else 0 end) usia_26_30_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 31 and 35 then 1 else 0 end) usia_31_35_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 31 and 35 then 1 else 0 end) usia_31_35_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 36 and 40 then 1 else 0 end) usia_36_40_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 36 and 40 then 1 else 0 end) usia_36_40_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 41 and 45 then 1 else 0 end) usia_41_45_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 41 and 45 then 1 else 0 end) usia_41_45_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 46 and 50 then 1 else 0 end) usia_46_50_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 46 and 50 then 1 else 0 end) usia_46_50_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 51 and 55 then 1 else 0 end) usia_51_55_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 51 and 55 then 1 else 0 end) usia_51_55_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 56 and 60 then 1 else 0 end) usia_56_60_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 56 and 60 then 1 else 0 end) usia_56_60_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 61 and 65 then 1 else 0 end) usia_61_65_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 61 and 65 then 1 else 0 end) usia_61_65_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 66 and 70 then 1 else 0 end) usia_66_70_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 66 and 70 then 1 else 0 end) usia_66_70_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 71 and 75 then 1 else 0 end) usia_71_75_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) between 71 and 75 then 1 else 0 end) usia_71_75_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) <![CDATA[>]]>75 then 1 else 0 end) usia_75up_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 and (trunc(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end))/12)+(case when trunc(mod(months_between(REGAPLDATE,(case when tgl_lahir is null then (case when mste_insured = mste_insured_2 then mspe_date_birth else (select mspe_date_birth from eka.mst_client_new where mcl_id = mspo_policy_holder) end) else tgl_lahir end)),12))<![CDATA[>=]]>6 then 1 else 0 end)) <![CDATA[>]]>75 then 1 else 0 end) usia_75up_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=1 then 1 else 0 end) sum_M,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 then 1 else 0 end) sum_F,
            sum(case when (case when sex2 is null 
                                  then (case when mste_insured = mste_insured_2 then mspe_sex  
                                             else (select mspe_sex from eka.mst_client_new where mcl_id = mspo_policy_holder) end)
                                  else sex2 end)=0 or mspe_sex=1 then 1 else 0 end) sum_all
		from
			(select distinct
				m.lst_lsd_id,m.lsd_desc,j.sex2, d.mste_insured, b.mste_insured mste_insured_2, c.mspe_sex, a.mspo_policy_holder,d.REGAPLDATE,
				j.tgl_lahir,c.mspe_date_birth
			from 
				eka.mst_policy a, 
	            eka.mst_insured b, 
	            eka.mst_client_new c, 
	            eka.id_mst_clm d,
	            eka.id_trx_clmdtl e,
	            eka.mst_product_insured f,
	            eka.id_stat_acp g,
	            eka.lst_det_bisnis h,
	            (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
	                x.lca_id = y.lca_id
	                and x.lwk_id = y.lwk_id
	                and x.lsrg_id = y.lsrg_id)cabang_ind,
	            (select * from eka.mst_worksheet where insured_no=1) i,
	            (select distinct
	                    x.reg_spaj, y.msde_old2 pemegang,
	                    (select msde_old5 from eka.mst_det_endors where lsje_id in (30,37) and msen_endors_no = x.msen_endors_no)extra_premi,
	                    (select decode(msde_old1,'Wanita','P','Pria','L','') from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex,
	                    (select decode(msde_old1,'Wanita',0,'Pria',1,2) from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex2,
	                    (select to_date(msde_old2,'dd/MM/yyyy') from eka.mst_det_endors where lsje_id = 11 and msen_endors_no = x.msen_endors_no)tgl_lahir
	                from
	                    eka.mst_endors x,
	                    eka.mst_det_endors y
	                where
	                    x.msen_endors_no = y.msen_endors_no
	                    and y.lsje_id in (2,20)
	                    and x.msen_alasan like '%KLAIM%')j,
	            eka.lst_kurs k,
	            eka.lst_diagnosis m,
	            EKA.mst_peserta n
	        where
	            a.reg_spaj = b.reg_spaj
	            and b.mste_insured = c.mcl_id
	            and b.reg_spaj = d.regspaj
	            and b.mste_insured_no = d.mste_insured_no
	            and e.regclaim = d.regclaim
	            and b.reg_spaj = f.reg_spaj
	            and b.mste_insured_no = f.mste_insured_no
	            and d.st_acp = g.st_acp
	            and f.lsbs_id = h.lsbs_id
	            and f.lsdbs_number = h.lsdbs_number
	            and a.reg_spaj = cabang_ind.reg_spaj(+)
	            and a.reg_spaj = i.reg_spaj(+)
	            and a.reg_spaj = j.reg_spaj(+)
	            and d.lku_id = k.lku_id
	            and d.lsdp_id = m.lst_lsd_id(+)
	            and d.regspaj = n.reg_spaj(+)
	            and d.sehat_tturut = n.no_urut(+) 
	            and b.MSTE_INSURED_NO = 1 
	            and d.MSTE_INSURED_NO = 1 
	            and f.LSBS_ID <![CDATA[<]]> 300    
				<isNotEmpty property="jenis_periode">
					<isEqual property="jenis_periode" compareValue="1">
						and d.REGAPLDATE between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="2">
						and d.accidentdate between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="3">
				 		and d.clm_paid_date between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
				 	</isEqual>
				</isNotEmpty>)
		group by lst_lsd_id,lsd_desc
        order by lst_lsd_id asc
	</select>
	
	<select id="elions.uw.selectreportExGratiaHealthClaim" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
			to_char(REGAPLDATE,'yyyy')tgl_claim,
		    eka.utils.pemegang(reg_spaj)pemegang,
		    eka.utils.tertanggung(reg_spaj)tertanggung,
		    lst_lsd_id icd,
		    nm_diagnos sebab,
		    sum(byr_rupiah)sum_rupiah,
		    sum(byr_dollar)sum_dollar,
		    lsdbs_name
		from
			(select distinct
			    m.lst_lsd_id,m.lsd_desc,j.sex2, d.mste_insured, b.mste_insured mste_insured_2, c.mspe_sex, a.mspo_policy_holder,
			    d.REGAPLDATE, a.reg_spaj, d.nm_diagnos,
			    eka.f_lsdbs(a.reg_spaj, f.lsbs_id, f.lsdbs_number) lsdbs_name,
			    (case when a.lku_id = '01' then (case when d.st_acp = 10 or d.st_acp = 5 then (select sum(pay_claim) from eka.id_trx_clmdtl where regclaim = d.regclaim) else 0 end) else 0 end)byr_rupiah,
			    (case when a.lku_id = '02' then (case when d.st_acp = 10 or d.st_acp = 5 then (select sum(pay_claim) from eka.id_trx_clmdtl where regclaim = d.regclaim) else 0 end) else 0 end)byr_dollar
			from 
				eka.mst_policy a, 
	            eka.mst_insured b, 
	            eka.mst_client_new c, 
	            eka.id_mst_clm d,
	            eka.id_trx_clmdtl e,
	            eka.mst_product_insured f,
	            eka.id_stat_acp g,
	            eka.lst_det_bisnis h,
	            (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
	                x.lca_id = y.lca_id
	                and x.lwk_id = y.lwk_id
	                and x.lsrg_id = y.lsrg_id)cabang_ind,
	            (select * from eka.mst_worksheet where insured_no=1) i,
	            (select distinct
	                    x.reg_spaj, y.msde_old2 pemegang,
	                    (select msde_old5 from eka.mst_det_endors where lsje_id in (30,37) and msen_endors_no = x.msen_endors_no)extra_premi,
	                    (select decode(msde_old1,'Wanita','P','Pria','L','') from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex,
	                    (select decode(msde_old1,'Wanita',0,'Pria',1,2) from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex2,
	                    (select to_date(msde_old2,'dd/MM/yyyy') from eka.mst_det_endors where lsje_id = 11 and msen_endors_no = x.msen_endors_no)tgl_lahir
	                from
	                    eka.mst_endors x,
	                    eka.mst_det_endors y
	                where
	                    x.msen_endors_no = y.msen_endors_no
	                    and y.lsje_id in (2,20)
	                    and x.msen_alasan like '%KLAIM%')j,
	            eka.lst_kurs k,
	            eka.lst_diagnosis m,
	            EKA.mst_peserta n
	        where
	            a.reg_spaj = b.reg_spaj
	            and b.mste_insured = c.mcl_id
	            and b.reg_spaj = d.regspaj
	            and b.mste_insured_no = d.mste_insured_no
	            and e.regclaim = d.regclaim
	            and b.reg_spaj = f.reg_spaj
	            and b.mste_insured_no = f.mste_insured_no
	            and d.st_acp = g.st_acp
	            and f.lsbs_id = h.lsbs_id
	            and f.lsdbs_number = h.lsdbs_number
	            and a.reg_spaj = cabang_ind.reg_spaj(+)
	            and a.reg_spaj = i.reg_spaj(+)
	            and a.reg_spaj = j.reg_spaj(+)
	            and d.lku_id = k.lku_id
	            and d.lsdp_id = m.lst_lsd_id(+)
	            and d.regspaj = n.reg_spaj(+)
	            and d.sehat_tturut = n.no_urut(+) 
	            and b.MSTE_INSURED_NO = 1 
	            and d.MSTE_INSURED_NO = 1 
	            and g.st_acp = 5
	            and f.LSBS_ID <![CDATA[<]]> 300    
				<isNotEmpty property="jenis_periode">
					<isEqual property="jenis_periode" compareValue="1">
						and d.REGAPLDATE between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="2">
						and d.accidentdate between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="3">
				 		and d.clm_paid_date between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
				 	</isEqual>
				</isNotEmpty>)
			  group by to_char(REGAPLDATE,'yyyy'), eka.utils.pemegang(reg_spaj), eka.utils.tertanggung(reg_spaj),
		               lst_lsd_id, nm_diagnos, reg_spaj, lsdbs_name
		      order by tgl_claim asc
	</select>
	
	<select id="elions.uw.selectreportClaimBySAKesehatan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
			(case when f.mspr_tsi <![CDATA[<=]]> 10000000 then 1
                    when f.mspr_tsi <![CDATA[>]]> 10000000 and f.mspr_tsi <![CDATA[<]]> 26000000 then 2
                    when f.mspr_tsi <![CDATA[>=]]> 26000000 and f.mspr_tsi <![CDATA[<]]> 51000000 then 3
                    when f.mspr_tsi <![CDATA[>=]]> 51000000 and f.mspr_tsi <![CDATA[<]]> 101000000 then 4
                    when f.mspr_tsi <![CDATA[>=]]> 101000000 and f.mspr_tsi <![CDATA[<]]> 126000000 then 5
                    when f.mspr_tsi <![CDATA[>=]]> 126000000 and f.mspr_tsi <![CDATA[<]]> 151000000 then 6
                    when f.mspr_tsi <![CDATA[>=]]> 151000000 and f.mspr_tsi <![CDATA[<]]> 201000000 then 7
                    when f.mspr_tsi <![CDATA[>=]]> 201000000 and f.mspr_tsi <![CDATA[<]]> 251000000 then 8
                    when f.mspr_tsi <![CDATA[>=]]> 251000000 and f.mspr_tsi <![CDATA[<]]> 301000000 then 9
                    when f.mspr_tsi <![CDATA[>=]]> 301000000 and f.mspr_tsi <![CDATA[<]]> 351000000 then 10
                    when f.mspr_tsi <![CDATA[>=]]> 351000000 and f.mspr_tsi <![CDATA[<]]> 401000000 then 11
                    when f.mspr_tsi <![CDATA[>=]]> 401000000 and f.mspr_tsi <![CDATA[<]]> 451000000 then 12
                    when f.mspr_tsi <![CDATA[>=]]> 451000000 and f.mspr_tsi <![CDATA[<]]> 501000000 then 13
                    when f.mspr_tsi <![CDATA[>=]]> 501000000 and f.mspr_tsi <![CDATA[<]]> 601000000 then 14
                    when f.mspr_tsi <![CDATA[>=]]> 601000000 and f.mspr_tsi <![CDATA[<]]> 701000000 then 15
                    when f.mspr_tsi <![CDATA[>=]]> 701000000 and f.mspr_tsi <![CDATA[<]]> 801000000 then 16
                    when f.mspr_tsi <![CDATA[>=]]> 801000000 and f.mspr_tsi <![CDATA[<]]> 901000000 then 17
                    when f.mspr_tsi <![CDATA[>=]]> 901000000 and f.mspr_tsi <![CDATA[<]]> 1001000000 then 18
                    when f.mspr_tsi <![CDATA[>=]]> 1001000000 and f.mspr_tsi <![CDATA[<]]> 1251000000 then 19
                    when f.mspr_tsi <![CDATA[>=]]> 1251000000 and f.mspr_tsi <![CDATA[<]]> 1501000000 then 20
                    when f.mspr_tsi <![CDATA[>=]]> 1501000000 and f.mspr_tsi <![CDATA[<]]> 1751000000 then 21
                    when f.mspr_tsi <![CDATA[>=]]> 1751000000 and f.mspr_tsi <![CDATA[<]]> 2001000000 then 22
                    when f.mspr_tsi <![CDATA[>=]]> 2001000000 and f.mspr_tsi <![CDATA[<]]> 2501000000 then 23
                    when f.mspr_tsi <![CDATA[>=]]> 2501000000 and f.mspr_tsi <![CDATA[<]]> 3001000000 then 24
                    when f.mspr_tsi <![CDATA[>=]]> 3001000000 and f.mspr_tsi <![CDATA[<]]> 3501000000 then 25
                    when f.mspr_tsi <![CDATA[>=]]> 3501000000 and f.mspr_tsi <![CDATA[<]]> 4001000000 then 26
                    when f.mspr_tsi <![CDATA[>=]]> 4001000000 and f.mspr_tsi <![CDATA[<]]> 4501000000 then 27
                    when f.mspr_tsi <![CDATA[>=]]> 4501000000 and f.mspr_tsi <![CDATA[<]]> 5001000000 then 28
                    when f.mspr_tsi <![CDATA[>=]]> 5001000000 and f.mspr_tsi <![CDATA[<]]> 6001000000 then 29
                    when f.mspr_tsi <![CDATA[>=]]> 6001000000 and f.mspr_tsi <![CDATA[<]]> 7001000000 then 30
                    when f.mspr_tsi <![CDATA[>=]]> 7001000000 and f.mspr_tsi <![CDATA[<]]> 8001000000 then 31
                    when f.mspr_tsi <![CDATA[>=]]> 8001000000 and f.mspr_tsi <![CDATA[<]]> 9001000000 then 32
                    when f.mspr_tsi <![CDATA[>=]]> 9001000000 and f.mspr_tsi <![CDATA[<=]]> 10000000000 then 33
                  else 34 end)urut,
            (case when f.mspr_tsi <![CDATA[<=]]> 10000000 then 'up to 10'
                    when f.mspr_tsi <![CDATA[>]]> 10000000 and f.mspr_tsi <![CDATA[<]]> 26000000 then '>10 - 25'
                    when f.mspr_tsi <![CDATA[>=]]> 26000000 and f.mspr_tsi <![CDATA[<]]> 51000000 then '>26 - 50'
                    when f.mspr_tsi <![CDATA[>=]]> 51000000 and f.mspr_tsi <![CDATA[<]]> 101000000 then '>51 - 100'
                    when f.mspr_tsi <![CDATA[>=]]> 101000000 and f.mspr_tsi <![CDATA[<]]> 126000000 then '>101 - 125'
                    when f.mspr_tsi <![CDATA[>=]]> 126000000 and f.mspr_tsi <![CDATA[<]]> 151000000 then '>126 - 150'
                    when f.mspr_tsi <![CDATA[>=]]> 151000000 and f.mspr_tsi <![CDATA[<]]> 201000000 then '>151 - 200'
                    when f.mspr_tsi <![CDATA[>=]]> 201000000 and f.mspr_tsi <![CDATA[<]]> 251000000 then '>201 - 250'
                    when f.mspr_tsi <![CDATA[>=]]> 251000000 and f.mspr_tsi <![CDATA[<]]> 301000000 then '>251 - 300'
                    when f.mspr_tsi <![CDATA[>=]]> 301000000 and f.mspr_tsi <![CDATA[<]]> 351000000 then '>301 - 350'
                    when f.mspr_tsi <![CDATA[>=]]> 351000000 and f.mspr_tsi <![CDATA[<]]> 401000000 then '>351 - 400'
                    when f.mspr_tsi <![CDATA[>=]]> 401000000 and f.mspr_tsi <![CDATA[<]]> 451000000 then '>401 - 450'
                    when f.mspr_tsi <![CDATA[>=]]> 451000000 and f.mspr_tsi <![CDATA[<]]> 501000000 then '>451 - 500'
                    when f.mspr_tsi <![CDATA[>=]]> 501000000 and f.mspr_tsi <![CDATA[<]]> 601000000 then '>501 - 600'
                    when f.mspr_tsi <![CDATA[>=]]> 601000000 and f.mspr_tsi <![CDATA[<]]> 701000000 then '>601 - 700'
                    when f.mspr_tsi <![CDATA[>=]]> 701000000 and f.mspr_tsi <![CDATA[<]]> 801000000 then '>701 - 800'
                    when f.mspr_tsi <![CDATA[>=]]> 801000000 and f.mspr_tsi <![CDATA[<]]> 901000000 then '>801 - 900'
                    when f.mspr_tsi <![CDATA[>=]]> 901000000 and f.mspr_tsi <![CDATA[<]]> 1001000000 then '>901 - 1.000'
                    when f.mspr_tsi <![CDATA[>=]]> 1001000000 and f.mspr_tsi <![CDATA[<]]> 1251000000 then '>1.001 - 1.250'
                    when f.mspr_tsi <![CDATA[>=]]> 1251000000 and f.mspr_tsi <![CDATA[<]]> 1501000000 then '>1.251 - 1.500'
                    when f.mspr_tsi <![CDATA[>=]]> 1501000000 and f.mspr_tsi <![CDATA[<]]> 1751000000 then '>1.501 - 1.750'
                    when f.mspr_tsi <![CDATA[>=]]> 1751000000 and f.mspr_tsi <![CDATA[<]]> 2001000000 then '>1.751 - 2.000'
                    when f.mspr_tsi <![CDATA[>=]]> 2001000000 and f.mspr_tsi <![CDATA[<]]> 2501000000 then '>2.001 - 2.500'
                    when f.mspr_tsi <![CDATA[>=]]> 2501000000 and f.mspr_tsi <![CDATA[<]]> 3001000000 then '>2.501 - 3.000'
                    when f.mspr_tsi <![CDATA[>=]]> 3001000000 and f.mspr_tsi <![CDATA[<]]> 3501000000 then '>3.001 - 3.500'
                    when f.mspr_tsi <![CDATA[>=]]> 3501000000 and f.mspr_tsi <![CDATA[<]]> 4001000000 then '>3.501 - 4.000'
                    when f.mspr_tsi <![CDATA[>=]]> 4001000000 and f.mspr_tsi <![CDATA[<]]> 4501000000 then '>4.001 - 4.500'
                    when f.mspr_tsi <![CDATA[>=]]> 4501000000 and f.mspr_tsi <![CDATA[<]]> 5001000000 then '>4.501 - 5.000'
                    when f.mspr_tsi <![CDATA[>=]]> 5001000000 and f.mspr_tsi <![CDATA[<]]> 6001000000 then '>5.001 - 6.000'
                    when f.mspr_tsi <![CDATA[>=]]> 6001000000 and f.mspr_tsi <![CDATA[<]]> 7001000000 then '>6.001 - 7.000'
                    when f.mspr_tsi <![CDATA[>=]]> 7001000000 and f.mspr_tsi <![CDATA[<]]> 8001000000 then '>7.001 - 8.000'
                    when f.mspr_tsi <![CDATA[>=]]> 8001000000 and f.mspr_tsi <![CDATA[<]]> 9001000000 then '>8.001 - 9.000'
                    when f.mspr_tsi <![CDATA[>=]]> 9001000000 and f.mspr_tsi <![CDATA[<=]]> 10000000000 then '>9.001 - 10.000'
                  else '>10.000' end)assured,
            sum(case when b.mste_age <![CDATA[<=]]>1 then 1 else 0 end)yr0_1,
            sum(case when b.mste_age <![CDATA[>=]]>2 and b.mste_age <![CDATA[<=]]>5 then 1 else 0 end)yr2_5,
            sum(case when b.mste_age <![CDATA[>=]]>6 and b.mste_age <![CDATA[<=]]>10 then 1 else 0 end)yr6_10,
            sum(case when b.mste_age <![CDATA[>=]]>11 and b.mste_age <![CDATA[<=]]>15 then 1 else 0 end)yr11_15,
            sum(case when b.mste_age <![CDATA[>=]]>16 and b.mste_age <![CDATA[<=]]>20 then 1 else 0 end)yr16_20,
            sum(case when b.mste_age <![CDATA[>=]]>21 and b.mste_age <![CDATA[<=]]>25 then 1 else 0 end)yr21_25,
            sum(case when b.mste_age <![CDATA[>=]]>26 and b.mste_age <![CDATA[<=]]>30 then 1 else 0 end)yr26_30,
            sum(case when b.mste_age <![CDATA[>=]]>31 and b.mste_age <![CDATA[<=]]>35 then 1 else 0 end)yr31_35,
            sum(case when b.mste_age <![CDATA[>=]]>36 and b.mste_age <![CDATA[<=]]>40 then 1 else 0 end)yr36_40,
            sum(case when b.mste_age <![CDATA[>=]]>41 and b.mste_age <![CDATA[<=]]>45 then 1 else 0 end)yr41_45,
            sum(case when b.mste_age <![CDATA[>=]]>46 and b.mste_age <![CDATA[<=]]>50 then 1 else 0 end)yr46_50,
            sum(case when b.mste_age <![CDATA[>=]]>51 and b.mste_age <![CDATA[<=]]>55 then 1 else 0 end)yr51_55,
            sum(case when b.mste_age <![CDATA[>=]]>56 and b.mste_age <![CDATA[<=]]>60 then 1 else 0 end)yr56_60,
            sum(case when b.mste_age <![CDATA[>=]]>61 and b.mste_age <![CDATA[<=]]>65 then 1 else 0 end)yr61_65,
            sum(case when b.mste_age <![CDATA[>=]]>66 and b.mste_age <![CDATA[<=]]>70 then 1 else 0 end)yr66_70,
            sum(case when b.mste_age <![CDATA[>=]]>71 then 1 else 0 end)yr71_up,
            sum(case when b.mste_age <![CDATA[>=]]>0 then 1 else 0 end)yr_all
		from 
			eka.mst_policy a, 
            eka.mst_insured b, 
            eka.mst_client_new c, 
            eka.id_mst_clm d,
            eka.id_trx_clmdtl e,
            eka.mst_product_insured f,
            eka.id_stat_acp g,
            eka.lst_det_bisnis h,
            (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
                x.lca_id = y.lca_id
                and x.lwk_id = y.lwk_id
                and x.lsrg_id = y.lsrg_id)cabang_ind,
            (select * from eka.mst_worksheet where insured_no=1) i,
            (select distinct
                    x.reg_spaj, y.msde_old2 pemegang,
                    (select msde_old5 from eka.mst_det_endors where lsje_id in (30,37) and msen_endors_no = x.msen_endors_no)extra_premi,
                    (select decode(msde_old1,'Wanita','P','Pria','L','') from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex,
                    (select decode(msde_old1,'Wanita',0,'Pria',1,2) from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex2,
                    (select to_date(msde_old2,'dd/MM/yyyy') from eka.mst_det_endors where lsje_id = 11 and msen_endors_no = x.msen_endors_no)tgl_lahir
                from
                    eka.mst_endors x,
                    eka.mst_det_endors y
                where
                    x.msen_endors_no = y.msen_endors_no
                    and y.lsje_id in (2,20)
                    and x.msen_alasan like '%KLAIM%')j,
            eka.lst_kurs k,
            eka.lst_diagnosis m,
            EKA.mst_peserta n
        where
            a.reg_spaj = b.reg_spaj
            and b.mste_insured = c.mcl_id
            and b.reg_spaj = d.regspaj
            and b.mste_insured_no = d.mste_insured_no
            and e.regclaim = d.regclaim
            and b.reg_spaj = f.reg_spaj
            and b.mste_insured_no = f.mste_insured_no
            and d.st_acp = g.st_acp
            and f.lsbs_id = h.lsbs_id
            and f.lsdbs_number = h.lsdbs_number
            and a.reg_spaj = cabang_ind.reg_spaj(+)
            and a.reg_spaj = i.reg_spaj(+)
            and a.reg_spaj = j.reg_spaj(+)
            and d.lku_id = k.lku_id
            and d.lsdp_id = m.lst_lsd_id(+)
            and d.regspaj = n.reg_spaj(+)
            and d.sehat_tturut = n.no_urut(+) 
            and b.MSTE_INSURED_NO = 1 
            and d.MSTE_INSURED_NO = 1 
            and f.LSBS_ID <![CDATA[<]]> 300    
			<isNotEmpty property="jenis_periode">
				<isEqual property="jenis_periode" compareValue="1">
					and d.REGAPLDATE between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
				</isEqual>
				<isEqual property="jenis_periode" compareValue="2">
					and d.accidentdate between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
				</isEqual>
				<isEqual property="jenis_periode" compareValue="3">
			 		and d.clm_paid_date between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
			 	</isEqual>
			</isNotEmpty>
			  group  by 
	            (case when f.mspr_tsi <![CDATA[<=]]> 10000000 then 1
                    when f.mspr_tsi <![CDATA[>]]> 10000000 and f.mspr_tsi <![CDATA[<]]> 26000000 then 2
                    when f.mspr_tsi <![CDATA[>=]]> 26000000 and f.mspr_tsi <![CDATA[<]]> 51000000 then 3
                    when f.mspr_tsi <![CDATA[>=]]> 51000000 and f.mspr_tsi <![CDATA[<]]> 101000000 then 4
                    when f.mspr_tsi <![CDATA[>=]]> 101000000 and f.mspr_tsi <![CDATA[<]]> 126000000 then 5
                    when f.mspr_tsi <![CDATA[>=]]> 126000000 and f.mspr_tsi <![CDATA[<]]> 151000000 then 6
                    when f.mspr_tsi <![CDATA[>=]]> 151000000 and f.mspr_tsi <![CDATA[<]]> 201000000 then 7
                    when f.mspr_tsi <![CDATA[>=]]> 201000000 and f.mspr_tsi <![CDATA[<]]> 251000000 then 8
                    when f.mspr_tsi <![CDATA[>=]]> 251000000 and f.mspr_tsi <![CDATA[<]]> 301000000 then 9
                    when f.mspr_tsi <![CDATA[>=]]> 301000000 and f.mspr_tsi <![CDATA[<]]> 351000000 then 10
                    when f.mspr_tsi <![CDATA[>=]]> 351000000 and f.mspr_tsi <![CDATA[<]]> 401000000 then 11
                    when f.mspr_tsi <![CDATA[>=]]> 401000000 and f.mspr_tsi <![CDATA[<]]> 451000000 then 12
                    when f.mspr_tsi <![CDATA[>=]]> 451000000 and f.mspr_tsi <![CDATA[<]]> 501000000 then 13
                    when f.mspr_tsi <![CDATA[>=]]> 501000000 and f.mspr_tsi <![CDATA[<]]> 601000000 then 14
                    when f.mspr_tsi <![CDATA[>=]]> 601000000 and f.mspr_tsi <![CDATA[<]]> 701000000 then 15
                    when f.mspr_tsi <![CDATA[>=]]> 701000000 and f.mspr_tsi <![CDATA[<]]> 801000000 then 16
                    when f.mspr_tsi <![CDATA[>=]]> 801000000 and f.mspr_tsi <![CDATA[<]]> 901000000 then 17
                    when f.mspr_tsi <![CDATA[>=]]> 901000000 and f.mspr_tsi <![CDATA[<]]> 1001000000 then 18
                    when f.mspr_tsi <![CDATA[>=]]> 1001000000 and f.mspr_tsi <![CDATA[<]]> 1251000000 then 19
                    when f.mspr_tsi <![CDATA[>=]]> 1251000000 and f.mspr_tsi <![CDATA[<]]> 1501000000 then 20
                    when f.mspr_tsi <![CDATA[>=]]> 1501000000 and f.mspr_tsi <![CDATA[<]]> 1751000000 then 21
                    when f.mspr_tsi <![CDATA[>=]]> 1751000000 and f.mspr_tsi <![CDATA[<]]> 2001000000 then 22
                    when f.mspr_tsi <![CDATA[>=]]> 2001000000 and f.mspr_tsi <![CDATA[<]]> 2501000000 then 23
                    when f.mspr_tsi <![CDATA[>=]]> 2501000000 and f.mspr_tsi <![CDATA[<]]> 3001000000 then 24
                    when f.mspr_tsi <![CDATA[>=]]> 3001000000 and f.mspr_tsi <![CDATA[<]]> 3501000000 then 25
                    when f.mspr_tsi <![CDATA[>=]]> 3501000000 and f.mspr_tsi <![CDATA[<]]> 4001000000 then 26
                    when f.mspr_tsi <![CDATA[>=]]> 4001000000 and f.mspr_tsi <![CDATA[<]]> 4501000000 then 27
                    when f.mspr_tsi <![CDATA[>=]]> 4501000000 and f.mspr_tsi <![CDATA[<]]> 5001000000 then 28
                    when f.mspr_tsi <![CDATA[>=]]> 5001000000 and f.mspr_tsi <![CDATA[<]]> 6001000000 then 29
                    when f.mspr_tsi <![CDATA[>=]]> 6001000000 and f.mspr_tsi <![CDATA[<]]> 7001000000 then 30
                    when f.mspr_tsi <![CDATA[>=]]> 7001000000 and f.mspr_tsi <![CDATA[<]]> 8001000000 then 31
                    when f.mspr_tsi <![CDATA[>=]]> 8001000000 and f.mspr_tsi <![CDATA[<]]> 9001000000 then 32
                    when f.mspr_tsi <![CDATA[>=]]> 9001000000 and f.mspr_tsi <![CDATA[<=]]> 10000000000 then 33
                  else 34 end),
            (case when f.mspr_tsi <![CDATA[<=]]> 10000000 then 'up to 10'
                    when f.mspr_tsi <![CDATA[>]]> 10000000 and f.mspr_tsi <![CDATA[<]]> 26000000 then '>10 - 25'
                    when f.mspr_tsi <![CDATA[>=]]> 26000000 and f.mspr_tsi <![CDATA[<]]> 51000000 then '>26 - 50'
                    when f.mspr_tsi <![CDATA[>=]]> 51000000 and f.mspr_tsi <![CDATA[<]]> 101000000 then '>51 - 100'
                    when f.mspr_tsi <![CDATA[>=]]> 101000000 and f.mspr_tsi <![CDATA[<]]> 126000000 then '>101 - 125'
                    when f.mspr_tsi <![CDATA[>=]]> 126000000 and f.mspr_tsi <![CDATA[<]]> 151000000 then '>126 - 150'
                    when f.mspr_tsi <![CDATA[>=]]> 151000000 and f.mspr_tsi <![CDATA[<]]> 201000000 then '>151 - 200'
                    when f.mspr_tsi <![CDATA[>=]]> 201000000 and f.mspr_tsi <![CDATA[<]]> 251000000 then '>201 - 250'
                    when f.mspr_tsi <![CDATA[>=]]> 251000000 and f.mspr_tsi <![CDATA[<]]> 301000000 then '>251 - 300'
                    when f.mspr_tsi <![CDATA[>=]]> 301000000 and f.mspr_tsi <![CDATA[<]]> 351000000 then '>301 - 350'
                    when f.mspr_tsi <![CDATA[>=]]> 351000000 and f.mspr_tsi <![CDATA[<]]> 401000000 then '>351 - 400'
                    when f.mspr_tsi <![CDATA[>=]]> 401000000 and f.mspr_tsi <![CDATA[<]]> 451000000 then '>401 - 450'
                    when f.mspr_tsi <![CDATA[>=]]> 451000000 and f.mspr_tsi <![CDATA[<]]> 501000000 then '>451 - 500'
                    when f.mspr_tsi <![CDATA[>=]]> 501000000 and f.mspr_tsi <![CDATA[<]]> 601000000 then '>501 - 600'
                    when f.mspr_tsi <![CDATA[>=]]> 601000000 and f.mspr_tsi <![CDATA[<]]> 701000000 then '>601 - 700'
                    when f.mspr_tsi <![CDATA[>=]]> 701000000 and f.mspr_tsi <![CDATA[<]]> 801000000 then '>701 - 800'
                    when f.mspr_tsi <![CDATA[>=]]> 801000000 and f.mspr_tsi <![CDATA[<]]> 901000000 then '>801 - 900'
                    when f.mspr_tsi <![CDATA[>=]]> 901000000 and f.mspr_tsi <![CDATA[<]]> 1001000000 then '>901 - 1.000'
                    when f.mspr_tsi <![CDATA[>=]]> 1001000000 and f.mspr_tsi <![CDATA[<]]> 1251000000 then '>1.001 - 1.250'
                    when f.mspr_tsi <![CDATA[>=]]> 1251000000 and f.mspr_tsi <![CDATA[<]]> 1501000000 then '>1.251 - 1.500'
                    when f.mspr_tsi <![CDATA[>=]]> 1501000000 and f.mspr_tsi <![CDATA[<]]> 1751000000 then '>1.501 - 1.750'
                    when f.mspr_tsi <![CDATA[>=]]> 1751000000 and f.mspr_tsi <![CDATA[<]]> 2001000000 then '>1.751 - 2.000'
                    when f.mspr_tsi <![CDATA[>=]]> 2001000000 and f.mspr_tsi <![CDATA[<]]> 2501000000 then '>2.001 - 2.500'
                    when f.mspr_tsi <![CDATA[>=]]> 2501000000 and f.mspr_tsi <![CDATA[<]]> 3001000000 then '>2.501 - 3.000'
                    when f.mspr_tsi <![CDATA[>=]]> 3001000000 and f.mspr_tsi <![CDATA[<]]> 3501000000 then '>3.001 - 3.500'
                    when f.mspr_tsi <![CDATA[>=]]> 3501000000 and f.mspr_tsi <![CDATA[<]]> 4001000000 then '>3.501 - 4.000'
                    when f.mspr_tsi <![CDATA[>=]]> 4001000000 and f.mspr_tsi <![CDATA[<]]> 4501000000 then '>4.001 - 4.500'
                    when f.mspr_tsi <![CDATA[>=]]> 4501000000 and f.mspr_tsi <![CDATA[<]]> 5001000000 then '>4.501 - 5.000'
                    when f.mspr_tsi <![CDATA[>=]]> 5001000000 and f.mspr_tsi <![CDATA[<]]> 6001000000 then '>5.001 - 6.000'
                    when f.mspr_tsi <![CDATA[>=]]> 6001000000 and f.mspr_tsi <![CDATA[<]]> 7001000000 then '>6.001 - 7.000'
                    when f.mspr_tsi <![CDATA[>=]]> 7001000000 and f.mspr_tsi <![CDATA[<]]> 8001000000 then '>7.001 - 8.000'
                    when f.mspr_tsi <![CDATA[>=]]> 8001000000 and f.mspr_tsi <![CDATA[<]]> 9001000000 then '>8.001 - 9.000'
                    when f.mspr_tsi <![CDATA[>=]]> 9001000000 and f.mspr_tsi <![CDATA[<=]]> 10000000000 then '>9.001 - 10.000'
                  else '>10.000' end)
			order by urut asc
	</select>
	
	<select id="elions.uw.selectreportHealthClaimByProduct" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
			(case when (eka.namabisnis(reg_spaj,2)) is null then lsdbs_name else (eka.namabisnis(reg_spaj,2)) end)lsdbs_name,
		    sum(case when mspe_sex=0 or mspe_sex=1 then 1 else 0 end) total_case,
		    sum(byr_rupiah)byr_rupiah,
		    sum(byr_dollar)byr_dollar
		from
			(select distinct
			    m.lst_lsd_id,m.lsd_desc,j.sex2, d.mste_insured, b.mste_insured mste_insured_2, c.mspe_sex, a.mspo_policy_holder,d.REGAPLDATE,
				j.tgl_lahir,c.mspe_date_birth, a.reg_spaj,
				eka.f_lsdbs(f.reg_spaj, f.lsbs_id, f.lsdbs_number) lsdbs_name,
				(case when a.lku_id = '01' then (case when d.st_acp = 10 or d.st_acp = 5 then (select sum(pay_claim) from eka.id_trx_clmdtl where regclaim = d.regclaim) else 0 end) else 0 end)byr_rupiah,
			    (case when a.lku_id = '02' then (case when d.st_acp = 10 or d.st_acp = 5 then (select sum(pay_claim) from eka.id_trx_clmdtl where regclaim = d.regclaim) else 0 end) else 0 end)byr_dollar
			from  
				eka.mst_policy a, 
	            eka.mst_insured b, 
	            eka.mst_client_new c, 
	            eka.id_mst_clm d,
	            eka.id_trx_clmdtl e,
	            eka.mst_product_insured f,
	            eka.id_stat_acp g,
	            eka.lst_det_bisnis h,
	            (select x.reg_spaj,y.lsrg_nama from eka.mst_policy x, eka.lst_region y where 
	                x.lca_id = y.lca_id
	                and x.lwk_id = y.lwk_id
	                and x.lsrg_id = y.lsrg_id)cabang_ind,
	            (select * from eka.mst_worksheet where insured_no=1) i,
	            (select distinct
	                    x.reg_spaj, y.msde_old2 pemegang,
	                    (select msde_old5 from eka.mst_det_endors where lsje_id in (30,37) and msen_endors_no = x.msen_endors_no)extra_premi,
	                    (select decode(msde_old1,'Wanita','P','Pria','L','') from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex,
	                    (select decode(msde_old1,'Wanita',0,'Pria',1,2) from eka.mst_det_endors where lsje_id in (63) and msen_endors_no = x.msen_endors_no)sex2,
	                    (select to_date(msde_old2,'dd/MM/yyyy') from eka.mst_det_endors where lsje_id = 11 and msen_endors_no = x.msen_endors_no)tgl_lahir
	                from
	                    eka.mst_endors x,
	                    eka.mst_det_endors y
	                where
	                    x.msen_endors_no = y.msen_endors_no
	                    and y.lsje_id in (2,20)
	                    and x.msen_alasan like '%KLAIM%')j,
	            eka.lst_kurs k,
	            eka.lst_diagnosis m,
	            EKA.mst_peserta n
	        where
	            a.reg_spaj = b.reg_spaj
	            and b.mste_insured = c.mcl_id
	            and b.reg_spaj = d.regspaj
	            and b.mste_insured_no = d.mste_insured_no
	            and e.regclaim = d.regclaim
	            and b.reg_spaj = f.reg_spaj
	            and b.mste_insured_no = f.mste_insured_no
	            and d.st_acp = g.st_acp
	            and f.lsbs_id = h.lsbs_id
	            and f.lsdbs_number = h.lsdbs_number
	            and a.reg_spaj = cabang_ind.reg_spaj(+)
	            and a.reg_spaj = i.reg_spaj(+)
	            and a.reg_spaj = j.reg_spaj(+)
	            and d.lku_id = k.lku_id
	            and d.lsdp_id = m.lst_lsd_id(+)
	            and d.regspaj = n.reg_spaj(+)
	            and d.sehat_tturut = n.no_urut(+) 
	            and b.MSTE_INSURED_NO = 1 
	            and d.MSTE_INSURED_NO = 1 
	            and f.LSBS_ID <![CDATA[<]]> 300    
				<isNotEmpty property="jenis_periode">
					<isEqual property="jenis_periode" compareValue="1">
						and d.REGAPLDATE between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="2">
						and d.accidentdate between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
					</isEqual>
					<isEqual property="jenis_periode" compareValue="3">
				 		and d.clm_paid_date between to_date(#bdate#,'dd/mm/yyyy') and to_date(#edate#,'dd/mm/yyyy')
				 	</isEqual>
				</isNotEmpty>)
		  	group by 
			  	(case when (eka.namabisnis(reg_spaj,2)) is null then lsdbs_name else (eka.namabisnis(reg_spaj,2)) end)
      		order by 1
	</select>
	
	<select id="elions.uw.selectReportSummaryInputDanaSejahtera" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT distinct        
          a.reg_spaj,a.mspo_policy_no,
          d1.mcl_first PP,        
          b.mspr_premium,          
          b.mspr_tsi,
          A.MSPO_AGE,
          d.lsdbs_name nama_plan, 
          a.mspo_pay_period,        
          f.status_accept,
         e.lspd_position,tabel1.msps_desc,nvl(i.ljhr_keterangan,'No Status')status
      FROM
          eka.mst_policy a,     
          eka.mst_product_insured b ,
          eka.mst_insured c  ,
          eka.lst_det_bisnis d,
          eka.mst_client_new d1,
          eka.mst_client_new d2 ,  
          EKA.LST_DOCUMENT_POSITION e,
          eka.lst_status_accept f, 
          eka.mst_position_spaj tabel1,
          eka.mst_billing g,
          (select * from eka.mst_eka_recur z where z.ket1=1 
            and z.ket2=1 and z.ket3 in(select max(ket3) from eka.mst_eka_recur where ket1=1 and ket2=1 and subs_number=z.subs_number)) recur,
          EKA.LST_JN_HASIL_RECUR i
      WHERE               
          a.reg_spaj=b.reg_spaj    
          and c.reg_spaj=b.reg_spaj 
          and a.reg_spaj=g.reg_spaj
          and a.reg_spaj=tabel1.reg_spaj          
          and b.lsbs_id=d.lsbs_id         
          and b.lsbs_id=163
          AND tabel1.msps_date IN (SELECT MAX (msps_date)
                              FROM eka.mst_position_spaj
                             WHERE reg_spaj = tabel1.reg_spaj )
          and b.lsdbs_number in(6,7,8,9,10,11,12,13,14,15)
          and b.lsdbs_number=d.lsdbs_number
          and a.mspo_policy_holder=d1.mcl_id
          and c.mste_insured=d2.mcl_id
          and a.lspd_id=e.lspd_id
          and c.lssa_id=f.lssa_id
          and a.reg_spaj = recur.subs_number(+)
          and recur.ljhr_id=i.ljhr_id(+)        
          and b.mspr_beg_date between to_date(#bdate#|| ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') AND TO_DATE (#edate# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)')

	</select>
	
	<select id="elions.uw.selectReportFurtherDanaSejahteraBSM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
		       tabel1.msps_desc,tabel1.msps_date,
		       a.reg_spaj, c1.mcl_first nama_pp,c2.mcl_first nama_tt,a.mspo_policy_no,e.lsdbs_name,f.lscb_pay_mode,d.lku_id,d.mspr_premium,d.mspr_beg_date 
 		FROM
	 		eka.mst_position_spaj tabel1,
	       eka.mst_policy a,
	       eka.mst_insured b,
	       eka.mst_client_new c1,
	       eka.mst_client_new c2,      
	       eka.mst_product_insured d,
	       eka.lst_det_bisnis e,
	       eka.lst_pay_mode f,
	       eka.mst_address_new h,
	       eka.mst_address_billing i     
	 WHERE 
	 	   tabel1.reg_spaj=a.reg_spaj
	       and a.lspd_id in(2,4,6) 
	       and b.lssa_id=3
	       and tabel1.lssa_id = 3
	       AND tabel1.msps_date IN (SELECT MIN (msps_date)
	                              FROM eka.mst_position_spaj
	                             WHERE reg_spaj = tabel1.reg_spaj AND lssa_id = 3)
	      and a.reg_spaj=b.reg_spaj
	      AND a.reg_spaj=d.reg_spaj
	      AND a.lscb_id=f.lscb_id 
	      AND d.lsbs_id=163
	      and d.lsdbs_number in(6,7,8,9,10,14,11,12,13,15)
	      AND a.reg_Spaj=i.reg_spaj
	      AND d.lsbs_id=e.lsbs_id
	      AND d.lsdbs_number=e.lsdbs_number
	      AND d.lsbs_id <![CDATA[<]]> 300
	      and a.mspo_policy_holder=c1.MCL_ID
	      and b.mste_insured=c2.mcl_id
	      and a.mspo_policy_holder=h.mcl_id       
	      AND a.lstb_id = 1     
	      and a.lca_id=40     
	      and d.mspr_beg_date between to_date(#bdate#|| ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') AND TO_DATE (#edate#|| ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)')
      ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
	</select>
	
	<select id="elions.uw.selectReportSummaryInfoDanaSejahteraBSM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
				c.reg_spaj,to_char(c.msps_date,'dd/MM/yyyy') tanggal,D.LUS_LOGIN_NAME,c.msps_desc
		from
				eka.mst_policy a,
				eka.mst_product_insured b,
				eka.mst_position_spaj c,
				eka.lst_user d,
				eka.lst_det_bisnis e
		where
				a.reg_spaj=b.reg_spaj
				and a.reg_spaj=c.reg_spaj
				and b.lsbs_id=163
				and b.lsdbs_number in(6,7,8,9,10,11,12,13,14,15)
				and b.lsbs_id=e.lsbs_id
				and b.lsdbs_number=e.lsdbs_number
				and c.lus_id=d.lus_id
				and b.mspr_beg_date between to_date(#bdate#|| ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') AND TO_DATE (#edate# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)')
				order by c.reg_spaj,tanggal

	</select>
	
	<select id="elions.uw.selectCekKonfirmasiSyariah" parameterClass="string" resultClass="int">
		SELECT COUNT(MSPS_DESC)
		FROM EKA.MST_POSITION_SPAJ
		WHERE REG_SPAJ = rpad(replace(#reg_spaj#,'.'),11,' ')
		  AND MSPS_DESC LIKE '%CETAK KONFIRMASI PIHAK SYARIAH%'
	</select>
	
	<select id="elions.uw.selectPositionPolicy" parameterClass="string" resultClass="int">	
		select lspd_id
		from eka.mst_policy
		where reg_spaj = #reg_spaj#		
	</select>
	
	<select id="elions.uw.selectSertifikatYN" parameterClass="string" resultClass="int">	
		<!-- select type_data
		from (
		    select type_data
				from eka.mst_ofac_screening
				where reg_spaj = #reg_spaj#
				and type_data = 2) a
		where rownum <![CDATA[<=]]>1 -->
		
	<!-- select type_data   
	from ( select trim(type_data)  type_data   
            from eka.mst_ofac_screening     
            where trim(reg_spaj) = trim(#reg_spaj#)) a   
    where rownum <![CDATA[<=]]>1 -->
    
    select 1 as type_data
	from eka.mst_policy
	where reg_spaj = #reg_spaj#   
	union 
	select 2 as type_data
	from EKA.MST_SPAJ_CRT
	WHERE NO_POLICY = #reg_spaj# 
	
	</select>
	
	<select id="elions.uw.selectPositionInsured" parameterClass="string" resultClass="int">	
		select lspd_id
		from eka.mst_insured
		where reg_spaj = #reg_spaj#		
	</select>
	<select id="elions.uw.selectLusSpecial" resultClass="int">
		SELECT lus_special
        FROM eka.lst_user
        WHERE lus_id = #lusid#
	</select>	
	
	<select id="elions.uw.selectSaldoPremiSimpol" parameterClass="string" resultClass="int">
		select (jml_awal.mdu_jumlah-jml_biaya.mbu_jumlah) as jml_baru
		from 
		    (
		        select sum(mdu_jumlah) mdu_jumlah
		        from eka.mst_det_ulink
		        where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
                    and mdu_jumlah != 0
                    and lji_id in ('01','02','03','04','05')
                    and mdu_aktif = 1
		    ) jml_awal, 
		    (
		        select sum(a.mbu_jumlah) mbu_jumlah
		        from eka.mst_biaya_ulink a, eka.lst_jenis_biaya b
		        where a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
		            and a.mu_ke = 1
		            and a.ljb_id =  b.ljb_id
		            and b.ljb_id in (539,541,542,543,544,546,547,540,545,925)
		    ) jml_biaya
	</select>
	
	<select id="elions.uw.selectDetailInvestasi" parameterClass="string" resultClass="java.util.HashMap">
		select reg_spaj, mu_ke, lji_id, mdu_persen, mdu_jumlah
		from eka.mst_det_ulink
		where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
            and mdu_aktif = 1
	</select>
	
	<select id="elions.uw.selectTotBiayaMuKe" parameterClass="java.util.HashMap" resultClass="int">
		select nvl(sum(mbu_jumlah), 0) as tot_extr
		from eka.mst_biaya_ulink
		where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
			and ljb_id <![CDATA[<>]]> 99
			and mu_ke = #mu_ke#
	</select>

    <select id="elions.uw.selectFlagcc" resultClass="string" parameterClass="string">
		select mste_flag_cc from eka.mst_insured where reg_spaj=rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectProdSave" resultClass="double" parameterClass="string">
		select mspr_premium from eka.mst_product_insured where reg_spaj=rpad(replace(#value#,'.'),11,' ') and 
		<![CDATA[
		lsbs_id<300
		]]>
	</select>
	
	<select id="elions.uw.selectInformasiSpajExpired" parameterClass="string" resultClass="java.util.HashMap">
		SELECT   a.reg_spaj,
		         b.mcl_first,
		         c.proses_terakhir,
		         d.mrc_no_ac no_rek,
		         d.mrc_nama atas_nama,
		         e.lsbp_nama nama_bank,
		         d.mrc_cabang cabang,
		         d.mrc_kota kota,
		         NVL (b.mspe_email, f.e_mail) mspe_email,
		         DECODE (b.mspe_sex, 1, 'Bpk. ', 'Ibu ') gelar,
		         DECODE (a.reg_spaj, null, 0, 1) jumlah
		  FROM   eka.mst_policy a,
		         eka.mst_client_new b,
		         (  SELECT   a.reg_spaj, MAX (b.msps_date) proses_terakhir
		              FROM   eka.mst_policy a, eka.mst_position_spaj b
		             WHERE   a.reg_spaj = b.reg_spaj
		          GROUP BY   a.reg_spaj) c,
		         eka.mst_rek_client d,
		         eka.lst_bank_pusat e,
		         eka.mst_address_billing f
		 WHERE       a.reg_spaj = c.reg_spaj
		         AND a.reg_spaj = d.reg_spaj
		         AND d.lsbp_id = e.lsbp_id
		         AND a.mspo_policy_holder = b.mcl_id
		         AND a.reg_spaj = f.reg_spaj
		         AND a.reg_spaj = RPAD (REPLACE (#value#, '.'), 11, ' ')
	</select>

	<select id="elions.uw.selectLusIdAkseptasiDoc" resultClass="java.util.HashMap">
		select a.lus_id, c.lus_login_name nama_uw, count(a.lus_id) jml_spaj
                    from eka.mst_position_spaj a, 
                         eka.mst_product_insured b, 
                         eka.lst_user c,
                         eka.mst_insured d
                    where a.reg_spaj = b.reg_spaj
                    and a.reg_spaj = d.reg_spaj
                    and d.lspd_id = 99
                    and b.lsbs_id <![CDATA[<]]> 300
                    and a.lssa_id in (5,10)
                    and a.msps_date = (select min(msps_date) 
                                        from eka.mst_position_spaj 
                                        where reg_spaj = a.reg_spaj 
                                        and lssa_id in (5,10))
                    and ( (b.lsbs_id = 142 and b.lsdbs_number in (2,9) ) or 
                          (b.lsbs_id = 158 and b.lsdbs_number in (6,14)) or 
                          (b.lsbs_id = 175) )
                    and a.lus_id = c.lus_id
                    and c.lus_active = 1
                    group by a.lus_id, c.lus_login_name
          order by c.lus_login_name
	</select>
	
	<select id="elions.uw.selectTanggalFillingScan" resultClass="java.util.HashMap">
		select a.lus_id, a.reg_spaj, a.msps_date tgl_filling, b.tgl_input tgl_scan
		from eka.mst_position_spaj a,
		(select * 
		from eka.mst_scan z 
		where exists (select 1 from eka.mst_scan a where a.no_indek = z.no_indek and tipe_file = 'SPAJ'))b
		where a.reg_spaj = b.no_indek
		and msps_date = (select max(msps_date)
		                   from eka.mst_position_spaj
		                   where reg_spaj = a.reg_spaj
		                   and lspd_id = 99)
		and a.lus_id = #lus_id#
	</select>

	<select id="elions.uw.selectPolisCoverLetterBsm" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.mspo_policy_no_format as "NOPOL", mst_client_a.mcl_first as "PP", mst_client_b.mcl_first as "TT",
			   upper(e.nama_reff) as "NAMAREFF",  eka.f_lsdbs(a.reg_spaj,c.lsbs_id,c.lsdbs_number) as "PROD", a.mspo_date_print as "DATPRINT",
               decode((select count(reg_spaj) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and (msps_desc like '%(ADA SIMASCARD%' or msps_desc like 'SIMAS CARD RECORD NO%') ),0,'TIDAK ADA','ADA') as "SIMCARD",
               decode((select count(reg_spaj) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and (msps_desc like '%DAN ADA KARTU%' or msps_desc like 'CETAK ENDORS_EKASEHAT_ADMEDIKA') ),0,'TIDAK ADA','ADA') as "ADMED",
		       (select substr(msps_desc, instr(msps_desc, ' PO ')+4, (instr(msps_desc, ')')-(instr(msps_desc, ' PO ')+4))) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%(NO. PO %') as "NOPO",
		       f.lcb_no as "IDCAB"
		FROM (SELECT * FROM eka.mst_policy WHERE lstb_id = 1) a,
		       eka.mst_insured b,
		       eka.mst_product_insured c,
		       eka.mst_reff_bii d,
		       eka.lst_reff_bii e,
		       eka.lst_cabang_bii f,
		       (select reg_spaj, max(no_urut) as no_urut
		       from eka.mst_reff_bii group by reg_spaj) g,
		       eka.lst_user h,
		       eka.lst_bisnis i,
		       eka.mst_client_new mst_client_a,
		       eka.mst_client_new mst_client_b
		WHERE a.reg_spaj = b.reg_spaj
		       AND a.reg_spaj = c.reg_spaj
		       AND a.reg_spaj = d.reg_spaj
		       AND a.reg_spaj = g.reg_spaj
		       AND a.lus_id = h.lus_id
		       AND a.mspo_policy_holder = mst_client_a.mcl_id
		       AND b.mste_insured = mst_client_b.mcl_id
		       AND b.lspd_id <![CDATA[>=]]> 6
		       AND b.lspd_id <![CDATA[!=]]> 95
		       AND b.lssa_id <![CDATA[>=]]> 5
		       AND c.lsbs_id = i.lsbs_id
		       AND c.lsbs_id <![CDATA[<]]> 300
		       AND d.no_urut = g.no_urut
		       AND d.level_id = 4
		       AND d.reff_id = e.lrb_id
		       AND e.lcb_no = f.lcb_no
		       AND f.jenis in (2, 16)
		       AND a.mspo_date_print BETWEEN to_date(#bdate#|| ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') and to_date(#edate# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)')
		       <isNotNull property="lcb_no">
		           AND f.lcb_no = #lcb_no#
		       </isNotNull>
		       <isEqual property="stpolis" compareValue="0">
		           AND b.mste_tgl_kirim_polis IS NULL
		       </isEqual>
		       <isEqual property="stpolis" compareValue="1">
		           AND b.mste_tgl_kirim_polis IS NOT NULL
		           AND b.mste_tgl_terima_ga_from_uw IS NULL
		       </isEqual>
		       <isEqual property="stpolis" compareValue="2">
		           AND b.mste_tgl_terima_ga_from_uw IS NOT NULL
		           AND b.mste_tgl_kirim_ga_to_admin IS NULL
		       </isEqual>
		       <isEqual property="stpolis" compareValue="3">
		           AND b.mste_tgl_kirim_ga_to_admin IS NOT NULL
		           AND b.mste_tgl_terima_admin_from_ga IS NULL
		       </isEqual>
		       <isEqual property="stpolis" compareValue="4">
		           AND b.mste_tgl_terima_admin_from_ga IS NOT NULL
		           AND b.mste_tgl_kirim_admin_to_agent IS NULL
		       </isEqual>
		       <isEqual property="stpolis" compareValue="5">
		           AND b.mste_tgl_kirim_admin_to_agent IS NOT NULL
		       </isEqual>
		ORDER BY DATPRINT, NOPOL, NAMAREFF
	</select>
	
	<select id="elions.uw.selectDataCoverBsmAll" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT (substr(a.mspo_policy_no,1,2)||'.'||substr(a.mspo_policy_no,3,3)||'.'||substr(a.mspo_policy_no,6,4)||'.'||substr(a.mspo_policy_no,10)) mspo_policy_no, a.lus_id, hist.msps_date,
		        mst_client_a.mcl_first nm_pp, mst_client_b.mcl_first nm_tt, eka.f_lsdbs(a.reg_spaj,c.lsbs_id,c.lsdbs_number) as lsbs_name, nvl(upper(f.nama_cabang),'-') nama_cabang,
		        nvl(upper(f.alamat),'-') alamat, nvl(upper(f.nama_head),'-') nama_head, upper(e.nama_reff) nama_reff, h.lus_login_name, 
		        decode((select count(reg_spaj) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%(ADA SIMASCARD%'),0,'TIDAK ADA','ADA') as "SIMCARD",
		        decode((select count(reg_spaj) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%DAN ADA KARTU%'),0,'TIDAK ADA','ADA') as "ADMED",
		        (select substr(msps_desc, instr(msps_desc, ' PO ')+4, (instr(msps_desc, ')')-(instr(msps_desc, ' PO ')+4))) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%(NO. PO %') as "NOPO"
		FROM (SELECT * FROM eka.mst_policy WHERE lstb_id = 1) a,
		        eka.mst_insured b,
		        eka.mst_product_insured c,
		        eka.mst_reff_bii d,
		        eka.lst_reff_bii e,
		        eka.lst_cabang_bii f,
		        (select reg_spaj, max(no_urut) as no_urut
		        from eka.mst_reff_bii group by reg_spaj ) g,
		        eka.lst_user h,
		        eka.lst_bisnis i,
		        eka.mst_client_new mst_client_a,
		        eka.mst_client_new mst_client_b,
                (select reg_spaj, msps_date from eka.mst_position_spaj
                where msps_desc like '%POLIS TELAH DIKIRIM KE GA%') hist
		WHERE a.reg_spaj = b.reg_spaj
		        AND a.reg_spaj = c.reg_spaj
		        AND a.reg_spaj = d.reg_spaj
		        AND a.reg_spaj = g.reg_spaj
		        AND a.reg_spaj = hist.reg_spaj
		        AND a.lus_id = h.lus_id
		        AND a.mspo_policy_holder = mst_client_a.mcl_id
		        AND b.mste_insured = mst_client_b.mcl_id
		        AND b.lspd_id <![CDATA[>=]]> 6
		        AND b.lspd_id <![CDATA[!=]]> 95
		        AND b.lssa_id <![CDATA[>=]]> 5
		        AND c.lsbs_id = i.lsbs_id
		        AND c.lsbs_id <![CDATA[<]]> 300
		        AND d.no_urut = g.no_urut
		        AND d.level_id = 4
		        AND d.reff_id = e.lrb_id
		        AND e.lcb_no = f.lcb_no
		        AND f.jenis in (2, 16)
		        AND hist.msps_date BETWEEN to_date(#tanggalAwal#|| ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') and to_date(#tanggalAkhir# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)')
		ORDER BY f.nama_cabang, to_char(a.mspo_date_print,'dd/MM/yyyy'), f.nama_head, e.nama_reff
	</select>
	
	<select id="elions.uw.selectDataCoverBsmCab" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT (substr(a.mspo_policy_no,1,2)||'.'||substr(a.mspo_policy_no,3,3)||'.'||substr(a.mspo_policy_no,6,4)||'.'||substr(a.mspo_policy_no,10)) mspo_policy_no, a.lus_id, hist.msps_date,
		        mst_client_a.mcl_first nm_pp, mst_client_b.mcl_first nm_tt, eka.f_lsdbs(a.reg_spaj,c.lsbs_id,c.lsdbs_number) as lsbs_name, nvl(upper(f.nama_cabang),'-') nama_cabang,
		        nvl(upper(f.alamat),'-') alamat, nvl(upper(f.nama_head),'-') nama_head, upper(e.nama_reff) nama_reff, h.lus_login_name, 
		        decode((select count(reg_spaj) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%(ADA SIMASCARD%'),0,'TIDAK ADA','ADA') as "SIMCARD",
		        decode((select count(reg_spaj) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%DAN ADA KARTU%'),0,'TIDAK ADA','ADA') as "ADMED",
		        (select substr(msps_desc, instr(msps_desc, ' PO ')+4, (instr(msps_desc, ')')-(instr(msps_desc, ' PO ')+4))) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like '%(NO. PO %') as "NOPO"
		FROM (SELECT * FROM eka.mst_policy WHERE lstb_id = 1) a,
		        eka.mst_insured b,
		        eka.mst_product_insured c,
		        eka.mst_reff_bii d,
		        eka.lst_reff_bii e,
		        eka.lst_cabang_bii f,
		        (select reg_spaj, max(no_urut) as no_urut
		        from eka.mst_reff_bii group by reg_spaj ) g,
		        eka.lst_user h,
		        eka.lst_bisnis i,
		        eka.mst_client_new mst_client_a,
		        eka.mst_client_new mst_client_b,
                (select reg_spaj, msps_date from eka.mst_position_spaj
                where msps_desc like '%POLIS TELAH DIKIRIM KE GA%') hist
		WHERE a.reg_spaj = b.reg_spaj
		        AND a.reg_spaj = c.reg_spaj
		        AND a.reg_spaj = d.reg_spaj
		        AND a.reg_spaj = g.reg_spaj
		        AND a.reg_spaj = hist.reg_spaj
		        AND a.lus_id = h.lus_id
		        AND a.mspo_policy_holder = mst_client_a.mcl_id
		        AND b.mste_insured = mst_client_b.mcl_id
		        AND b.lspd_id <![CDATA[>=]]> 6
		        AND b.lspd_id <![CDATA[!=]]> 95
		        AND b.lssa_id <![CDATA[>=]]> 5
		        AND c.lsbs_id = i.lsbs_id
		        AND c.lsbs_id <![CDATA[<]]> 300
		        AND d.no_urut = g.no_urut
		        AND d.level_id = 4
		        AND d.reff_id = e.lrb_id
		        AND e.lcb_no = f.lcb_no
		        AND f.jenis in (2, 16)
		        AND hist.msps_date BETWEEN to_date(#tanggalAwal#|| ' (00:00:00)', 'dd/mm/yyyy (hh24:mi:ss)') and to_date(#tanggalAkhir# || ' (23:59:59)', 'dd/mm/yyyy (hh24:mi:ss)')
		        AND f.lcb_no = #lcb_no#
		ORDER BY f.nama_cabang, to_char(a.mspo_date_print,'dd/MM/yyyy'), f.nama_head, e.nama_reff
	</select>
	
	<select id="elions.uw.selectEmailHybrid" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		SELECT a.*, b.*
			FROM eka.mst_agent a, hrd.hrd_mst@absen b
			WHERE A.MSAG_NIK =b.nik
			AND A.msag_id =#value#
	</select>		
	
	<select id="elions.uw.selectEmailAoHrd" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		SELECT  b.email
			FROM eka.mst_agent a, hrd.hrd_mst@absen b
			WHERE A.MSAG_NIK =b.nik
			AND A.msag_id = (select mspo_ao from eka.mst_policy where reg_spaj = rpad(replace(#value#,'.'),11,' '))
	</select>
	
	<select id="elions.uw.selectReffNonLisensi" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		select c.*,b.email as EMAIL_REFF
		from eka.mst_reff_bii a,
		     eka.lst_reff_bii b,
		     eka.lst_cabang_bii c
		where a.reff_id = b.lrb_id
		and b.lcb_no = c.lcb_no
		and a.no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = a.reg_spaj)
		and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>	
	
	<select id="elions.uw.selectRegionSpaj" resultClass="java.util.HashMap" parameterClass="java.lang.String">
			select lca_id,lwk_id,lsrg_id from eka.mst_policy where reg_spaj=#value#
	</select>
	
	<select id="elions.uw.selectCatatanPolis" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
		    a.reg_spaj, a.mspo_policy_no_format polis, b.mste_no_vacc account_billing,
		    A.MSPO_NEXT_BILL jt_tempo, c.mcl_first pemegang,
		    (select sum(msdb_premium) 
		        from eka.mst_det_billing 
		        where 
		            reg_spaj = a.reg_spaj
		            and msbi_tahun_ke = 1
		            and msbi_premi_ke in (select msbi_premi_ke from eka.mst_billing where msbi_beg_date = tgl.msbi_beg_date and reg_spaj = a.reg_spaj))premi,
		    d.lscb_pay_mode cara_bayar, e.lku_symbol kurs
		from
		    eka.mst_policy a,
		    eka.mst_insured b,
		    eka.mst_client_new c,
		    eka.lst_pay_mode d,
		    eka.lst_kurs e,
		    (select distinct
		        msbi_beg_date, reg_spaj
		    from
		        eka.mst_billing 
		    where 
		        msbi_tahun_ke = 1 
		        and msbi_premi_ke = 1
		        and (msbi_flag_topup is null or msbi_flag_topup = 2))tgl
		where
		    a.reg_spaj = b.reg_spaj
		    and a.mspo_policy_holder = c.mcl_id
		    and a.lscb_id = d.lscb_id
		    and a.lku_id  = e.lku_id
		    and c.mcl_first like upper('%' || #pemegang# || '%')
		    and c.mspe_date_birth = to_date(#bdate#,'dd/MM/yyyy')
		    and a.reg_spaj = tgl.reg_spaj
		    and a.lspd_id = 99
    		and a.lssp_id in (1,11,14,28)
	</select>
	
	<select id="elions.uw.selectNewBussiness" resultClass="int" parameterClass="java.lang.String">
		select count(reg_spaj) from eka.mst_billing where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') and msbi_flag_topup is null
	</select>
	
	<select id="elions.uw.selectMstPolicyAll" parameterClass="java.lang.String" resultClass="com.ekalife.elions.model.Policy">
		select * from eka.mst_policy where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectMstInsuredAll" parameterClass="java.lang.String" resultClass="com.ekalife.elions.model.Insured">
		select * from eka.mst_insured where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectMstProdInsAll" parameterClass="java.lang.String" resultClass="com.ekalife.elions.model.Product">
		select * from eka.mst_product_insured where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') order by lsbs_id
	</select>
	
	<select id="elions.uw.selectMstProductionAll" parameterClass="java.lang.String" resultClass="com.ekalife.elions.model.Production">
		select * from eka.mst_production where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectMstBillingAll" parameterClass="java.lang.String" resultClass="com.ekalife.elions.model.Billing">
		select * from eka.mst_billing where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectMstPasSMSAll" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select * from eka.mst_pas_sms where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectMstUlinkAll" parameterClass="java.lang.String" resultClass="com.ekalife.elions.model.Ulink">
		select * from eka.mst_ulink where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectMstTransUlinkAll" parameterClass="java.lang.String" resultClass="com.ekalife.elions.model.TransUlink">
		select * from eka.mst_trans_ulink where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectMstDetUlinkAll" parameterClass="java.lang.String" resultClass="com.ekalife.elions.model.DetUlink">
		select * from eka.mst_det_ulink where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectMstBiayaUlinkAll" parameterClass="java.lang.String" resultClass="com.ekalife.elions.model.BiayaUlink">
		select * from eka.mst_biaya_ulink where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectMstUlinkBillAll" parameterClass="java.lang.String" resultClass="com.ekalife.elions.model.UlinkBill">
		select * from eka.mst_ulink_bill where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectNoKartuPas" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select b.mspo_nasabah_acc, b.mspo_no_blanko, a.msp_id, a.msp_fire_id, a.produk, a.product_code from eka.mst_pas_sms a, eka.mst_policy b where a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
			and a.reg_spaj = b.reg_spaj
	</select>
	
	<select id="elions.uw.selectKartuPas" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select * from eka.mst_kartu_pas where 1=1
		<isNotNull property="no_kartu">
	        and no_kartu = #no_kartu#
	    </isNotNull>
	</select>
	
	<select id="elions.uw.report.selectSuratUnitLink.AdditionalUnit" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.mu_jlh_premi, (null) ljb_biaya, (0) flag_rider, (0) mbu_jumlah, (0) mbu_persen,
			b.reg_spaj, b.lku_id, c.lscb_pay_mode, a.mu_jlh_tu, a.lt_id, b.lscb_id,
			('Additional Unit') lt_transksi, e.lku_symbol, (null) ljb_id, a.mu_ke, f.lsbs_id
		FROM eka.mst_ulink a,
			eka.mst_policy b,
			eka.lst_pay_mode c,
			eka.lst_transaksi d,
			eka.lst_kurs e,
			(select * from eka.mst_product_insured where lsbs_id <![CDATA[<]]> 300) f
		WHERE a.reg_spaj = b.reg_spaj
			AND b.lscb_id = c.lscb_id
			AND a.lt_id = d.lt_id
			AND a.lt_id = 10
			AND b.lku_id = e.lku_id
			AND a.reg_spaj = f.reg_spaj
			AND a.reg_spaj = rpad(replace(#spaj#,'.'),11,' ')
			AND a.mu_ke IN (SELECT mu_ke
							FROM eka.mst_ulink
							WHERE reg_spaj = rpad(replace(#spaj#,'.'),11,' ') AND mu_tgl_trans = #tanggal#)
	</select>
	
	<select id="elions.uw.selectDropDownDaftarPeserta" resultClass="id.co.sinarmaslife.std.model.vo.DropDown" parameterClass="string">	
		select flag_jenis_peserta key ,(case when flag_jenis_peserta=1 then 'TERTANGGUNG/PESERTA II'
             when flag_jenis_peserta=2 then 'TERTANGGUNG/PESERTA III'
             when flag_jenis_peserta=3 then 'TERTANGGUNG/PESERTA IV'
             when flag_jenis_peserta=4 then 'TERTANGGUNG/PESERTA V'
             else 'TERTANGGUNG/PESERTA UTAMA'end)value
	    from
			eka.mst_peserta
		where 
			 reg_Spaj=#reg_spaj#    
	</select>
	
	<select id="elions.uw.selectJawabanMedicals" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
			msadm_berat bb,msadm_tinggi tb,(case when msadm_sehat=0 then 'TIDAK' else 'YA' end)sehat,msadm_sehat_desc sehat1,msadm_penyakit_desc sakit,
			(case when msadm_medis=0 then 'TIDAK' 
			      when msadm_medis=1 then 'YA' else '' end)medis,
			 msadm_medis_desc medis1,
			(case when msadm_pregnant=0 then 'TIDAK' 
			      when msadm_pregnant=1 then 'YA'  else '' end)hamil,msadm_pregnant_desc hamil1,msadm_clear_case clear,msadm_em_life em
	     from
			EKA.MST_ADDITIONAL_DESC_INSURED
	     where
			reg_spaj=#spa#
			and mste_insured_no=#fjp#
	</select>
	
	<select id="elions.uw.selectJawabanMedicalsSIOtambahan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
	        MAX( DECODE( a.nmr, 81 , a.JWB)) Q1,
        (case when MAX( DECODE( a.nmr, 81 , a.JWB)) = 'TIDAK' then '' else 
            max((select to_char(answer) from eka.MST_QUESTION_ANSWER where key_id = #spaj# and option_group = 0 and question_id = 81)) end) Q1Desc,
        MAX( DECODE( a.nmr, 82 , a.JWB)) Q2,
        (case when MAX( DECODE( a.nmr, 82 , a.JWB)) = 'TIDAK' then '' else 
            max((select to_char(answer) from eka.MST_QUESTION_ANSWER where key_id = #spaj# and option_group = 0 and question_id = 82)) end) Q2Desc,
        MAX( DECODE( a.nmr, 84 , a.JWB)) Q3a,
        MAX( DECODE( a.nmr, 85 , a.JWB)) Q3b,
        MAX( DECODE( a.nmr, 86 , a.JWB)) Q3c,
        MAX( DECODE( a.nmr, 87 , a.JWB)) Q3d,
        MAX( DECODE( a.nmr, 88 , a.JWB)) Q3e,
        MAX( DECODE( a.nmr, 89 , a.JWB)) Q3fa,
        (case when MAX( DECODE( a.nmr, 89 , a.JWB)) = 'TIDAK' then '' else 
            max((select to_char(answer) from eka.MST_QUESTION_ANSWER where key_id = #spaj# and option_group = 0 and question_id = 89)) end) Q3fb,
        MAX( DECODE( a.nmr, 90 , a.JWB)) Q3g,
        MAX( DECODE( a.nmr, 91 , a.JWB)) Q3h,
        MAX( DECODE( a.nmr, 92 , a.JWB)) Q3i,
        MAX( DECODE( a.nmr, 93 , a.JWB)) Q3j,
        MAX( DECODE( a.nmr, 94 , a.JWB)) Q3k,
        MAX( DECODE( a.nmr, 95 , a.JWB)) Q3l,
        MAX( DECODE( a.nmr, 96 , a.JWB)) Q3m,
        MAX( DECODE( a.nmr, 97 , a.JWB)) Q3n,
        MAX( DECODE( a.nmr, 98 , a.JWB)) Q3o,
        MAX( DECODE( a.nmr, 99 , a.JWB)) Q3p,
        (case when MAX( DECODE( a.nmr, 99 , a.JWB)) = 'TIDAK' then '' else 
            max((select to_char(answer) from eka.MST_QUESTION_ANSWER where key_id = #spaj# and option_group = 0 and question_id = 100)) end) Q3q,
        MAX( DECODE( a.nmr, 101 , a.JWB)) Q4a, 
        (case when MAX( DECODE( a.nmr, 101 , a.JWB)) = 'TIDAK' then '' else 
            max((select to_char(answer) from eka.MST_QUESTION_ANSWER where key_id = #spaj# and option_group = 0 and question_id = 101)) end) Q4b,
        MAX( DECODE( a.nmr, 102 , a.JWB)) Q5a, 
        (case when MAX( DECODE( a.nmr, 102 , a.JWB)) = 'TIDAK' then '' else 
            max((select to_char(answer) from eka.MST_QUESTION_ANSWER where key_id = #spaj# and option_group = 0 and question_id = 102)) end) Q5b,
        MAX( DECODE( a.nmr, 103 , a.JWB)) Q6a, 
        (case when MAX( DECODE( a.nmr, 103 , a.JWB)) = 'TIDAK' then '' else 
            max((select to_char(answer) from eka.MST_QUESTION_ANSWER where key_id = #spaj# and option_group = 0 and question_id = 103)) end) Q6b,
        max((select to_char(answer) from eka.MST_QUESTION_ANSWER where key_id = #spaj# and option_group = #fjp# and question_id = 104 and option_order =1)) Q7a, 
        max((select to_char(answer) from eka.MST_QUESTION_ANSWER where key_id = #spaj# and option_group = #fjp# and question_id = 104 and option_order =2)) Q7b
	    from 
	    (   select
	            question_id nmr,  case when option_order=2 then 'TIDAK' else 'YA' end jwb
	         from
	            EKA.MST_QUESTION_ANSWER
	         where
	            KEY_ID = #spaj#
	            AND OPTION_GROUP = #fjp#
	            and to_char(answer) = 1
	     ) a
	</select>
	
	<select id="elions.uw.selectLastIdPermintaanVA" parameterClass="string" resultClass="java.util.HashMap">
		select *
		from
		    (select
		        to_number(replace(a.msv_id,'VA'||#value#,''))counter, a.msv_id
		    from
		        eka.mst_va a
		    where
		        a.msv_id like 'VA'||#value#||'%'
		    order by 1 desc)
		where rownum = 1 	
	</select>
	
	<select id="elions.uw.selectCekVA" parameterClass="string" resultClass="int">
		select count(no_va) from eka.mst_det_va where no_va = #value#
	</select>
	
	<select id="elions.uw.selectPermintaanVA" parameterClass="string" resultClass="java.util.HashMap">
		select
		    a.msv_id, trim(b.no_va) virtual_acc, 
		    (case when a.jenis_va = 0 then 'Kertas' else 'Online/Gadget' end)jenis_va,
		    (case when a.jenis_syariah = 0 then 'Konvensional' else 'Syariah' end)jenis_syariah,
		    (case when a.jenis_link = 0 then 'Link' else 'Non Link' end)jenis_link,
		    c.lus_full_name user_input,
		    b.spaj_temp, b.spaj,
		    (select min(no_va) ||' - ' ||max(no_va) from eka.mst_det_va where msv_id = a.msv_id)min_max
		from
		    eka.mst_va a,
		    eka.mst_det_va b,
		    eka.lst_user c
		where
		    a.msv_id = b.msv_id
		    and a.user_create = c.lus_id
		    and a.msv_id = #value#
		order by
			b.no_va asc
	</select>
	
	<select id="elions.uw.selectJenisBank" parameterClass="string" 	resultClass="java.util.HashMap">
		select LSBP_ID j_bank,LSBP_NAMA from EKA.LST_BANK_PUSAT
		 where LSBP_ID IN (156,161,144,224)
		 order by lsbp_nama
	</select>
	
	<select id="elions.uw.selectDetVaOnline" resultClass="java.util.HashMap">
		select 
		    magnaprime.jml magna_prime, 
		    magnaprimesyh.jml magna_prime_syh,
		    simaskid.jml simas_kid,
		    btn_life_syh.jml btn_life_syh,
		    btn_link_syh.jml btn_link_syh
		from
		    (select count(no_va) jml from eka.mst_det_va 
		        where flag_active = 1 and no_spaj_gadget is null and spaj_temp is null and spaj is null 
		        and jenis_va = 2 and jenis_syariah = 0 and jenis_link = 0
		        and substr(no_va, -8, 2) = '16' and lsbp_id = 156) magnaprime,
		    (select count(no_va) jml from eka.mst_det_va 
		        where flag_active = 1 and no_spaj_gadget is null and spaj_temp is null and spaj is null 
		        and jenis_va = 3 and jenis_syariah = 1 and jenis_link = 0
		        and substr(no_va, -8, 2) = '16' and lsbp_id = 224) magnaprimesyh,
		    (select count(no_va) jml from eka.mst_det_va 
		        where flag_active = 1 and no_spaj_gadget is null and spaj_temp is null and spaj is null 
		        and jenis_va = 2 and jenis_syariah = 0 and jenis_link = 1
		        and substr(no_va, -8, 2) = '02' and lsbp_id = 156) simaskid,
		    (select count(no_va) jml from eka.mst_det_va 
		        where flag_active = 1 and no_spaj_gadget is null and spaj_temp is null and spaj is null 
		        and jenis_va = 3 and jenis_syariah = 1 and jenis_link = 1
		        and substr(no_va, 6, 3) = '223' and lsbp_id = 161) btn_life_syh,
		    (select count(no_va) jml from eka.mst_det_va 
		        where flag_active = 1 and no_spaj_gadget is null and spaj_temp is null and spaj is null 
		        and jenis_va = 3 and jenis_syariah = 1 and jenis_link = 0
		        and substr(no_va, 6, 3) = '224' and lsbp_id = 161) btn_link_syh
	</select>
	
	
	<select id="elions.uw.selectDataUploadAdmedika" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select * from EKA.MST_UPLOAD_ADMEDIKA where mua_flag=0
       </select>
	
	
	<select id="elions.uw.selectCountCleanCaseInsured" parameterClass="string" resultClass="java.lang.Integer">
		select
		   count(reg_Spaj)
		from
		   eka.mst_additional_desc_insured
		where
		   msadm_clear_case=0
		   and reg_Spaj=#value#
	</select>
	
	<select id="elions.uw.selectPemegangExclude"  parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
				a.reg_spaj spaj,a.mspo_policy_no no_polis,d.lsdbs_name nama_plan,to_char(c.mste_beg_date,'dd/MM/yyyy')begdate,e.mcl_first pp
		from
				eka.mst_policy a,
				eka.mst_peserta b,
				eka.mst_insured c,
				eka.lst_det_bisnis d,
				eka.mst_client_new e
	    where
				a.reg_spaj=b.reg_spaj
				and a.reg_spaj=c.reg_spaj
				and b.lsbs_id=d.lsbs_id
				and B.LSDBS_NUMBER=d.lsdbs_number
				and a.mspo_policy_holder=e.mcl_id
				and B.FLAG_JENIS_PESERTA=#dp#
				and a.reg_spaj=#reg_spaj#
	</select>
	
	<select id="elions.uw.selectValidForInput" parameterClass="string" resultClass="int">
		select
			count(a.reg_Spaj)
		from
			eka.mst_policy a,
			eka.lst_user b,
			eka.mst_insured c
		where
		a.reg_spaj=c.reg_Spaj
		and b.lus_id=a.lus_id
		and a.lus_id=#lus_id#
		and c.mste_tgl_valid_print+2<![CDATA[<=]]>sysdate
		and A.MSPO_DATE_PRINT is  null
		and a.lspd_id<![CDATA[<>]]>95
	</select>
	
	<select id="elions.uw.selectNamaBankData" parameterClass="string" resultClass="string">
		select
			trim(lbd_name)
		from
			eka.lst_bank_data
		where
			lbd_id=#value#
	</select>
	
	<select id="elions.uw.selectValidDoc" parameterClass="string" resultClass="java.util.HashMap">
		select
			lsbs_id,flag_valid
		from
			eka.mst_product_insured a,
			(select count(msps_desc)flag_valid from eka.mst_position_spaj where reg_Spaj=#value# and msps_desc ='SCAN OK')b
		where 
			a.reg_spaj=#value#
			and a.lsbs_id<![CDATA[<]]>800
	</select>
	
	<select id="elions.uw.selectSeqPaymentId" resultClass="string">
		SELECT eka.pac_counter.get_payment_id() FROM DUAL
	</select>
	
	<select id="elions.uw.selectSeqCommId" resultClass="string">
		SELECT eka.pac_counter.get_comm_id() FROM DUAL
	</select>
	
	<select id="elions.uw.selectSeqEmailId" resultClass="string">
		SELECT eka.pac_counter.get_email_id() FROM dual
	</select>
	
	<select id="elions.uw.selectSeqScanId" resultClass="string">
		SELECT eka.pac_counter.get_scan_id() FROM dual
	</select>
	
	<select id="elions.uw.selectSeqInboxId" resultClass="string">
		SELECT eka.pac_counter.get_inbox_id() FROM dual
	</select>
	
	<select id="elions.uw.selectSeqUrlSecureId" resultClass="string">
		SELECT eka.pac_counter.get_url_id() FROM dual
	</select>
	
	<select id="elions.uw.selectDataRKCC" parameterClass="string" resultClass="java.util.HashMap">
        select a.reg_spaj, a.mar_holder as pemegang_rek, replace(replace(b.no_kartu, '-'), 'X') as no_kartu, b.amount as jumlah,
               c.lku_id as kurs, b.disc_amount as disc, b.no_trx, d.tgl_trx as tgl_rk, c.lre_acc_no as rek_bank, d.flag_tunggal_gabungan,
               nvl( (select lkh_kurs_jual from eka.lst_daily_currency where lku_id = c.lku_id and lkh_date = to_date(SYSDATE, 'dd/MM/yyyy')) , 1) as nilai_kurs, (b.amount - b.disc_amount) as nett_bayar
        from eka.mst_account_recur a, eka.mst_drek_cc b, eka.lst_rek_ekalife c, eka.mst_drek d, eka.mst_product_insured e
        where (replace(replace(a.mar_acc_no, '-'), 'X') = replace(replace(b.no_kartu, '-'), 'X') or substr(a.mar_acc_no, 1, 6)||substr(a.mar_acc_no, 13) = replace(replace(b.no_kartu, '-'), 'X'))
            and a.mar_jenis = 1
            and a.reg_spaj = e.reg_spaj
            and a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
            and b.lsrek_id = c.lsrek_id
            and b.no_trx = d.no_trx
            and b.flag = 1
            and b.amount = e.mspr_premium
            and d.jenis = 'K'
            and rownum = 1
	</select>
	
	<select id="elions.uw.selectDataRKVA" parameterClass="string" resultClass="java.util.HashMap">
		select c.no_trx, c.tgl_trx, c.norek_ajs, c.lku_id, nvl( (select lkh_kurs_jual from eka.lst_daily_currency where lku_id = c.lku_id and lkh_date = to_date(SYSDATE, 'dd/MM/yyyy')), 1) nilai_kurs,
            b.mspr_premium, c.flag_tunggal_gabungan,
            c.nilai_trx - nvl((select sum(drdet.jumlah) from eka.mst_drek_det drdet where drdet.no_trx = c.no_trx and 
                replace(replace(replace(trim(c.norek_ajs),'.',''),'-',''),' ','') = replace(replace(replace(trim(drdet.norek_ajs),'.',''),'-',''),' ','') and 
                 (drdet.flag_active is null or drdet.flag_active =1)),0) as jumlah,
            d.lsrek_id
        from eka.mst_insured a, eka.mst_product_insured b, eka.mst_drek c, eka.lst_rek_ekalife d
        where a.reg_spaj = b.reg_spaj
            and substr(a.mste_no_vacc, 5) = c.ket
            and c.norek_ajs = replace(replace(replace(d.lre_acc_no,' '),'-'),'.')
            and b.lsbs_id <![CDATA[<]]> 300
            and a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
            and rownum = 1
	</select>
	
	<select id="elions.uw.selectNoJmBySpajNB" parameterClass="string" resultClass="string">
		select no_jm from eka.mst_ptc_jm where key_jurnal = #value# and no_jurnal = 1
	</select>
	
	<select id="elions.uw.selectDropDownProdkes" resultClass="java.util.HashMap" parameterClass="string">	
		select
			(b.lsbs_id || '~X' || b.lsdbs_number)key,c.lsdbs_name value
		from
			eka.mst_policy a,
			eka.mst_product_insured b,
			eka.lst_det_bisnis c
		where 
			a.reg_spaj=b.reg_spaj
			and b.lsbs_id in(820,823,825,193,201,189,183,811,819,826,195,204)
			and b.lsbs_id=c.lsbs_id
			and b.lsdbs_number=c.lsdbs_number
			and a.reg_spaj=rpad(replace(#spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectDataKes"  parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
			a.reg_Spaj spaj,d.mcl_first nama_pp,E.MSAP_ADDRESS alamat,B.NAMA nama_peserta,b.next_send periode_awal, add_months(b.next_send,12)periode_akhir,a.mspo_policy_no_format no_polis,
			c.lsdbs_name nama_produk,sysdate skrg
		from
			eka.mst_policy a,
			eka.mst_peserta b,
			eka.lst_det_bisnis c,
			eka.mst_client_new d,
			eka.mst_address_billing e			
		where
			a.reg_spaj=b.reg_spaj
			and a.reg_Spaj=e.reg_spaj
			and a.mspo_policy_holder=d.mcl_id
			and b.lsbs_id=c.lsbs_id
			and b.lsdbs_number=c.lsdbs_number
			and b.lsbs_id=#kode_prod#
			and b.lsdbs_number=#number_prod#
			and a.reg_spaj=rpad(replace(#spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectExtraPremiSimultan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT DISTINCT p.REG_SPAJ, p.MSPO_POLICY_NO, p.MSPO_POLICY_NO_FORMAT
		FROM 
			EKA.MST_POLICY p,     
		   	EKA.LST_POLICY_STATUS ps,
		   	EKA.MST_INSURED i,
		   	EKA.MST_PRODUCT_INSURED pi    
		WHERE 
			ps.LSSP_ID = p.LSSP_ID  AND   
	 		p.REG_SPAJ = i.REG_SPAJ AND
	 		i.REG_SPAJ = pi.REG_SPAJ AND
	 		i.MSTE_INSURED_NO = pi.MSTE_INSURED_NO AND
			p.LSTB_ID IN (1,2) AND    
			ps.LMS_ID IN (1,2,6) AND
			i.MSTE_INSURED_NO = 1 AND
			p.lssp_id = 1 AND
			p.lspd_id <![CDATA[<>]]> 95 AND
			pi.LSBS_ID <![CDATA[>=]]> 900 AND
			i.MSTE_BEG_DATE BETWEEN trunc(add_months(sysdate, -24)) and sysdate AND
			p.MSPO_POLICY_HOLDER IN (SELECT c.MCL_ID  
								     FROM   EKA.MST_CLIENT_NEW c
									 WHERE SUBSTR(c.MCL_ID,1,2)  <![CDATA[<>]]>   'XX'  AND   
										   SUBSTR(c.MCL_ID,1,2)  <![CDATA[<>]]>   'WW'  AND   
										   UPPER(c.MCL_FIRST) LIKE UPPER( '%'||#nama#||'%' )   AND    
										   c.MSPE_DATE_BIRTH = TO_DATE(#tgl_lhr#,'dd/MM/yyyy') AND
										   UPPER(c.MSPE_MOTHER) LIKE UPPER( '%'||#mspe_mother#||'%' ) )
		UNION  
		SELECT DISTINCT p2.REG_SPAJ, p2.MSPO_POLICY_NO, p2.MSPO_POLICY_NO_FORMAT
 		FROM 
 			EKA.LST_POLICY_STATUS ps2,     
		   	EKA.MST_INSURED i2,     
		   	EKA.MST_POLICY p2,
		   	EKA.MST_PRODUCT_INSURED pi2   
		WHERE 
			p2.REG_SPAJ = i2.REG_SPAJ  AND    
          	p2.LSSP_ID = ps2.LSSP_ID AND
          	i2.REG_SPAJ = pi2.REG_SPAJ AND
          	i2.MSTE_INSURED_NO = pi2.MSTE_INSURED_NO AND    
			p2.LSTB_ID IN (1,2) AND    
			ps2.LMS_ID IN (1,2,6 ) AND
			p2.lssp_id = 1 AND
			p2.lspd_id <![CDATA[<>]]> 95 AND
			pi2.LSBS_ID <![CDATA[>=]]> 900 AND
			i2.MSTE_BEG_DATE BETWEEN trunc(add_months(sysdate, -24)) and sysdate AND
			i2.MSTE_INSURED IN (SELECT c3.MCL_ID  
								FROM   EKA.MST_CLIENT_NEW c3    
								WHERE SUBSTR(c3.MCL_ID,1,2) <![CDATA[<>]]>  'XX'  AND   
								      SUBSTR(c3.MCL_ID,1,2) <![CDATA[<>]]>  'WW'  AND  
									  UPPER(c3.MCL_FIRST) LIKE UPPER( '%'||#nama#||'%' )   AND     
									  c3.MSPE_DATE_BIRTH = TO_DATE(#tgl_lhr#,'dd/MM/yyyy') AND
									  UPPER(c3.MSPE_MOTHER) LIKE UPPER( '%'||#mspe_mother#||'%' ))
	</select>
	
	<select id="elions.uw.selectPostponeDeclineSimultan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT DISTINCT p.REG_SPAJ, p.MSPO_POLICY_NO, p.MSPO_POLICY_NO_FORMAT  
		FROM 
			EKA.MST_POLICY p,     
		   	EKA.LST_POLICY_STATUS ps,
		   	(select distinct reg_spaj from eka.mst_position_spaj where lssa_id in (2,9))c
		WHERE 
			ps.LSSP_ID = p.LSSP_ID  AND   
			p.LSTB_ID IN (1,2) AND    
			ps.LMS_ID IN (1,2,6) AND
			p.REG_SPAJ = c.REG_SPAJ AND
			p.MSPO_POLICY_HOLDER IN (SELECT c.MCL_ID  
								     FROM   EKA.MST_CLIENT_NEW c
									 WHERE SUBSTR(c.MCL_ID,1,2)  <![CDATA[<>]]>   'XX'  AND   
										   SUBSTR(c.MCL_ID,1,2)  <![CDATA[<>]]>   'WW'  AND   
										   UPPER(c.MCL_FIRST) LIKE UPPER( '%'||#nama#||'%' )   AND    
										   c.MSPE_DATE_BIRTH = TO_DATE(#tgl_lhr#,'dd/MM/yyyy') AND
										   UPPER(c.MSPE_MOTHER) LIKE UPPER( '%'||#mspe_mother#||'%' ) )
		UNION  
		SELECT DISTINCT p2.REG_SPAJ, p2.MSPO_POLICY_NO, p2.MSPO_POLICY_NO_FORMAT
 		FROM 
 			EKA.LST_POLICY_STATUS ps2,     
		   	EKA.MST_INSURED i2,     
		   	EKA.MST_POLICY p2,
		   	(select distinct reg_spaj from eka.mst_position_spaj where lssa_id in (2,9))c   
		WHERE 
			p2.REG_SPAJ = i2.REG_SPAJ  AND    
          	p2.LSSP_ID = ps2.LSSP_ID AND    
          	p2.REG_SPAJ = c.REG_SPAJ AND
			p2.LSTB_ID IN (1,2) AND    
			ps2.LMS_ID IN (1,2,6 ) AND
			i2.MSTE_INSURED IN (SELECT c3.MCL_ID  
								FROM   EKA.MST_CLIENT_NEW c3    
								WHERE SUBSTR(c3.MCL_ID,1,2) <![CDATA[<>]]>  'XX'  AND   
								      SUBSTR(c3.MCL_ID,1,2) <![CDATA[<>]]>  'WW'  AND  
									  UPPER(c3.MCL_FIRST) LIKE UPPER( '%'||#nama#||'%' )   AND     
									  c3.MSPE_DATE_BIRTH = TO_DATE(#tgl_lhr#,'dd/MM/yyyy') AND
									  UPPER(c3.MSPE_MOTHER) LIKE UPPER( '%'||#mspe_mother#||'%' ))
	</select>
	
	<select id="elions.uw.selectDataFollowUpFR"  parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select i.email as EMAIL_LEADER, penutup.nama_cabang as CABANG_PENUTUP, penutup.nama_reff as NAMA_PENUTUP,
			upper(reff.nama_cabang) as CABANG_REFF, upper(reff.nama_reff) as NAMA_REFF, d.mcl_first as NAMA_PP,
			a.reg_spaj as SPAJ, eka.f_lsdbs(a.reg_spaj,c.lsbs_id,c.lsdbs_number) as PRODUK, c.mspr_premium as PREMI,
			to_date(e.msps_date,'dd/MM/yyyy') as TGL_FURTHER,
			<isEqual property="warning" compareValue="1">
				to_date(e.msps_date+15,'dd/MM/yyyy') as DATE_LINE,
		   	</isEqual>
		   	<isEqual property="warning" compareValue="2">
				to_date(e.msps_date+30,'dd/MM/yyyy') as DATE_LINE,
		   	</isEqual>
			<isEqual property="warning" compareValue="3">
				to_date(e.msps_date+60,'dd/MM/yyyy') as DATE_LINE,
		   	</isEqual>
			e.msps_desc as KETERANGAN
		from (select * from eka.mst_policy where lstb_id = 1 and lspd_id = 2 and mspo_input_date is not null) a, 
			eka.mst_insured b,
			eka.mst_product_insured c,
			eka.mst_client_new d,
			(select reg_spaj, msps_date, msps_desc from eka.mst_position_spaj
			where msps_desc like 'FR:%') e,
			(select reg_spaj, max(msps_date) as msps_date from eka.mst_position_spaj
			where msps_desc like 'FR:%' group by reg_spaj) f,
			(select reg_spaj, max(no_urut) as no_urut
			from eka.mst_reff_bii group by reg_spaj ) g,
			eka.mst_reff_bii h,
			eka.lst_reff_bii i,
			(select aa.leader_id, aa.lrb_id, aa.nama_reff, bb.lcb_no, bb.nama_cabang
			from eka.lst_reff_bii aa, eka.lst_cabang_bii bb
			where aa.lcb_no = bb.lcb_no) penutup,
			(select cc.lrb_id, cc.nama_reff, dd.lcb_no, dd.nama_cabang
			from eka.lst_reff_bii cc, eka.lst_cabang_bii dd
			where cc.lcb_no = dd.lcb_no) reff
		where a.reg_spaj = b.reg_spaj
			and a.reg_spaj = c.reg_spaj
			and a.reg_spaj = e.reg_spaj
			and a.reg_spaj = f.reg_spaj
			and a.reg_spaj = g.reg_spaj
			and a.reg_spaj = h.reg_spaj
			and a.mspo_policy_holder = d.mcl_id
			and e.msps_date = f.msps_date
			and c.lsbs_id <![CDATA[<]]> 300
			and g.no_urut = h.no_urut
			and h.lrb_id = penutup.lrb_id
			and h.reff_id = reff.lrb_id
			and i.lrb_id = penutup.leader_id
			and not exists (select 1 from eka.mst_position_spaj x where x.reg_spaj = a.reg_spaj and x.msps_desc like 'AC:%')
			<isEqual property="warning" compareValue="1">
				and to_date(a.mspo_input_date,'dd/MM/yyyy') = to_date(SYSDATE-15,'dd/MM/yyyy')
		   	</isEqual>
		   	<isEqual property="warning" compareValue="2">
				and to_date(a.mspo_input_date,'dd/MM/yyyy') = to_date(SYSDATE-30,'dd/MM/yyyy')
		   	</isEqual>
			<isEqual property="warning" compareValue="3">
				and to_date(a.mspo_input_date,'dd/MM/yyyy') = to_date(SYSDATE-60,'dd/MM/yyyy')
		   	</isEqual>
			<isNotNull property="leader" >
				and i.email like #leader#
			</isNotNull>
		order by EMAIL_LEADER
	</select>
	
	<select id="elions.uw.selectDetailStatusBas" resultClass="string" parameterClass="java.util.HashMap">	
		select
		sub_desc
		from
			eka.lst_status_accept_sub
		where 
			lssa_id=#liAksep#
			and sub_id=#subLiAksep#
	</select>
	
	<select id="elions.uw.selectMstPaymentVisa" resultClass="java.util.HashMap" parameterClass="string">
 		select 
	  		to_char(a.mspro_prod_date, 'yyyy-mm') bulan, x.reg_spaj, x.msbi_beg_date, nvl(x.msbi_nb, 0) nb, 
	  		sum(w.msdb_premium) premi, sum(w.msdb_premium * c.lscb_kali) ann
	 	from 
	 		eka.mst_billing x, eka.mst_det_billing w, eka.mst_production a, eka.mst_policy b, eka.lst_pay_mode c
  		where 
  			a.reg_spaj = b.reg_spaj
			and x.reg_spaj = w.reg_spaj
			and x.msbi_tahun_ke = w.msbi_tahun_ke
			and x.msbi_premi_ke = w.msbi_premi_ke
			and x.reg_spaj = a.reg_spaj
			and x.msbi_tahun_ke = a.msbi_tahun_ke
			and x.msbi_premi_ke = a.msbi_premi_ke
			and b.lscb_id = c.lscb_id
			and a.mspro_jn_prod <![CDATA[<>]]> 3
			and b.lspd_id <![CDATA[<>]]> 95
			and b.reg_spaj =rpad(replace(#value#,'.'),11,' ')
			and X.MSBI_NB=1
			and x.msbi_paid = 1
			and exists (select 1 from eka.mst_tag_payment y, eka.mst_payment z 
          					where x.reg_spaj = y.reg_spaj
            					and x.msbi_tahun_ke = y.msbi_tahun_ke
					            and x.msbi_premi_ke = y.msbi_premi_ke
					            and y.mspa_payment_id = z.mspa_payment_id
					            and z.lsjb_id = 3
					            and substr(z.mspa_no_rek, 1, 1) = '4')
		group by to_char(a.mspro_prod_date, 'yyyy-mm'), x.reg_spaj, x.msbi_beg_date, nvl(x.msbi_nb, 0)
		<!-- select count(*)
				from eka.mst_account_recur
		where mar_jenis = 1
				 and substr(mar_acc_no, 1, 1) = '4'
				 and reg_spaj =rpad(replace(#value#,'.'),11,' ') -->
	</select>
	
	<select id="elions.uw.selectMstPaymentVisaTertinggal" resultClass="java.util.HashMap">
  		select to_char(a.mspro_prod_date, 'yyyy-mm') bulan, x.reg_spaj, x.msbi_beg_date, nvl(x.msbi_nb, 0) nb, sum(w.msdb_premium) premi, sum(w.msdb_premium * c.lscb_kali) ann--count( distinct x.reg_spaj) ss
   			 from eka.mst_billing x, eka.mst_det_billing w, eka.mst_production a, eka.mst_policy b, eka.lst_pay_mode c
  		where a.reg_spaj = b.reg_spaj
     		and x.reg_spaj = w.reg_spaj
     		and x.msbi_tahun_ke = w.msbi_tahun_ke
     		and x.msbi_premi_ke = w.msbi_premi_ke
     		and x.reg_spaj = a.reg_spaj
     		and x.msbi_tahun_ke = a.msbi_tahun_ke
     		and x.msbi_premi_ke = a.msbi_premi_ke
     		and b.lscb_id = c.lscb_id
     		and a.mspro_jn_prod <![CDATA[<>]]> 3
     		and b.lspd_id <![CDATA[<>]]> 95
     		and a.mspro_prod_date between '1 mei 2014' and '17 juni 2014'
     		and X.MSBI_NB=1
     		and x.msbi_paid = 1
     		and exists (select 1 from eka.mst_tag_payment y, eka.mst_payment z 
          		where x.reg_spaj = y.reg_spaj
            		and x.msbi_tahun_ke = y.msbi_tahun_ke
            		and x.msbi_premi_ke = y.msbi_premi_ke
            		and y.mspa_payment_id = z.mspa_payment_id
            		and z.lsjb_id = 3
            		and substr(z.mspa_no_rek, 1, 1) = '4')
    		and not exists (select 1 from eka.mst_visa_camp where reg_spaj =x.reg_spaj)
   		group by to_char(a.mspro_prod_date, 'yyyy-mm'), x.reg_spaj, x.msbi_beg_date, nvl(x.msbi_nb, 0)
	</select>
	
	<select id="elions.uw.selectNasabahPernahSubstandart"  parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT DISTINCT p.reg_spaj, p.mspo_policy_no_format
		FROM 
			EKA.MST_POLICY p,     
		   	EKA.LST_POLICY_STATUS ps,
		   	EKA.MST_INSURED i,
		   	EKA.MST_PRODUCT_INSURED pi,
		   	EKA.MST_POSITION_SPAJ pj    
		WHERE 
			ps.LSSP_ID = p.LSSP_ID  AND   
	 		p.REG_SPAJ = i.REG_SPAJ AND
	 		i.REG_SPAJ = pi.REG_SPAJ AND
	 		i.MSTE_INSURED_NO = pi.MSTE_INSURED_NO AND
	 		p.REG_SPAJ = pj.REG_SPAJ AND
	 		upper(pj.MSPS_DESC) like '%SUBS%' AND
			p.LSTB_ID IN (1,2) AND    
			ps.LMS_ID IN (1,2,6) AND
			i.MSTE_INSURED_NO = 1 AND
			p.lssp_id = 1 AND
			p.lspd_id <![CDATA[<>]]> 95 AND
			pi.LSBS_ID <![CDATA[>=]]> 900 AND
			p.MSPO_POLICY_HOLDER IN (SELECT c.MCL_ID  
								     FROM   EKA.MST_CLIENT_NEW c
									 WHERE SUBSTR(c.MCL_ID,1,2)  <![CDATA[<>]]>   'XX'  AND   
										   SUBSTR(c.MCL_ID,1,2)  <![CDATA[<>]]>   'WW'  AND   
										   UPPER(c.MCL_FIRST) LIKE UPPER( '%'||#nama#||'%' )   AND    
										   c.MSPE_DATE_BIRTH = TO_DATE(#tgl_lhr#,'dd/MM/yyyy') AND
										   UPPER(c.MSPE_MOTHER) LIKE UPPER( '%'||#mspe_mother#||'%' ) )
		UNION  
		SELECT DISTINCT p2.reg_spaj, p2.mspo_policy_no_format
 		FROM 
 			EKA.LST_POLICY_STATUS ps2,     
		   	EKA.MST_INSURED i2,     
		   	EKA.MST_POLICY p2,
		   	EKA.MST_PRODUCT_INSURED pi2,
		   	EKA.MST_POSITION_SPAJ pj       
		WHERE 
			p2.REG_SPAJ = i2.REG_SPAJ  AND    
          	p2.LSSP_ID = ps2.LSSP_ID AND
          	i2.REG_SPAJ = pi2.REG_SPAJ AND
          	i2.MSTE_INSURED_NO = pi2.MSTE_INSURED_NO AND    
	 		p2.REG_SPAJ = pj.REG_SPAJ AND
	 		upper(pj.MSPS_DESC) like '%SUBS%' AND
			p2.LSTB_ID IN (1,2) AND    
			ps2.LMS_ID IN (1,2,6 ) AND
			p2.lssp_id = 1 AND
			p2.lspd_id <![CDATA[<>]]> 95 AND
			pi2.LSBS_ID <![CDATA[>=]]> 900 AND
			i2.MSTE_INSURED IN (SELECT c3.MCL_ID  
								FROM   EKA.MST_CLIENT_NEW c3    
								WHERE SUBSTR(c3.MCL_ID,1,2) <![CDATA[<>]]>  'XX'  AND   
								      SUBSTR(c3.MCL_ID,1,2) <![CDATA[<>]]>  'WW'  AND  
									  UPPER(c3.MCL_FIRST) LIKE UPPER( '%'||#nama#||'%' )   AND     
									  c3.MSPE_DATE_BIRTH = TO_DATE(#tgl_lhr#,'dd/MM/yyyy') AND
									  UPPER(c3.MSPE_MOTHER) LIKE UPPER( '%'||#mspe_mother#||'%' ))
	</select>
	
	<select id="elions.uw.selectValidAdminKantorPemasaran" parameterClass="java.util.HashMap" resultClass="int">
		select
		    count(b.lar_id)jml
		from
		    eka.lst_user a,
		    eka.lst_user_admin b
		where
		    a.lus_id = b.lus_id
		    and a.lus_id = #lus_id#
		    and b.lar_id = #lar_id#
	</select>
	
	<select id="elions.uw.selectMedPlusRiderAddon" parameterClass="string" resultClass="int">
		select
		    count(reg_Spaj)
		from
		    eka.mst_peserta
		where
		    reg_Spaj=#spaj#
		    and lsbs_id=839
	</select>
	
	<select id="elions.uw.selectDataSpajDmtmdiPayment" parameterClass="string" resultClass="java.util.HashMap">
		select
			a.reg_Spaj as SPAJ,a.mspo_policy_no as NO_POLIS,f.lsdbs_name as NAMA_PRODUK, b.mcl_first as NAMA_PEMEGANG,E.MAR_ACC_NO as NO_KARTU,
			sum(c.msdb_premium) PREMIUM
		from
			eka.mst_policy a,
			eka.mst_client_new b,
			eka.mst_det_billing c,
			eka.mst_billing d,
			eka.mst_account_recur e,
			eka.lst_det_bisnis f,
			eka.mst_product_insured g
	   where
			a.mspo_policy_holder=b.mcl_id
			and a.reg_Spaj=d.reg_Spaj
			and a.reg_Spaj=c.reg_Spaj
			and d.reg_Spaj=c.reg_Spaj
			and a.reg_Spaj=g.reg_Spaj
			and a.reg_Spaj=e.reg_Spaj(+)
			and g.lsbs_id=f.lsbs_id
			and g.lsdbs_number=f.lsdbs_number
			and a.lca_id='40'
			and a.lspd_id=4
			and d.MSBI_PAID=0
			and E.MAR_JENIS=1
			and g.lsbs_id<![CDATA[<]]>300
			and (select count(mspa_payment) from eka.mst_payment where reg_Spaj=a.reg_Spaj)=0
		group by a.reg_Spaj,a.mspo_policy_no,b.mcl_first,f.lsdbs_name,E.MAR_ACC_NO
	</select>
	
	<select id="elions.uw.selectDataFromDrekCC" parameterClass="string" resultClass="java.util.HashMap">
        select a.reg_spaj, substr (a.mar_acc_no, 1, 6) || substr (a.mar_acc_no, 13) as no_kar, a.mar_acc_no no_kartu_kredit, c.no_trx, c.flag_tunggal_gabungan, b.amount-b.disc_amount net_bayar,
            b.amount jumlah_bayar, nvl ( (select lkh_kurs_jual from eka.lst_daily_currency where lku_id = c.lku_id and lkh_date = to_date(SYSDATE, 'dd/MM/yyyy')), 1) nilai_kurs, b.lsrek_id,
            (select round(sum(msdb_premium-msdb_discount))from eka.mst_det_billing where reg_spaj = a.reg_spaj and msbi_premi_ke=1 and msbi_tahun_ke=1 ) premi_asli, c.tgl_trx         
        from
            eka.mst_account_recur a,
            eka.mst_drek_cc b,
            eka.mst_drek c,
            eka.lst_rek_ekalife e,
            eka.mst_policy f
        where
            substr (a.mar_acc_no, 1, 6) || substr (a.mar_acc_no, 13) = replace (replace (b.no_kartu, '-'), 'X')
            and a.mar_jenis = 1
            and a.reg_spaj = f.reg_spaj
            and b.no_trx = c.no_trx
            and b.lsrek_id = e.lsrek_id
            and b.flag = 1
            and f.lspd_id = 4
            and a.reg_spaj = #reg_spaj#
            and rownum = 1
            and (select round(sum(msdb_premium-msdb_discount)) from eka.mst_det_billing where reg_spaj = a.reg_spaj and msbi_premi_ke = 1 and msbi_tahun_ke = 1 ) = b.amount
        group by a.reg_spaj, a.mar_acc_no, c.no_trx, c.flag_tunggal_gabungan, c.lku_id, b.amount, b.disc_amount, c.tgl_trx, b.lsrek_id
	</select>
	
	<select id="elions.uw.selectLQG" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT C.QUESTION_TYPE_ID, C.QUESTION_ID, QUESTION_VALID_DATE, C.FLAG_ESSAY, C.FLAG_OPTION, C.FLAG_CHECKLIST, C.FLAG_TABLE, C.QUESTION_NUMBER, to_char(B.QUESTION)QUESTION
		FROM EKA.LST_QUESTION_TYPE A,
	     	 EKA.LST_QUESTION B,
	         EKA.LST_QUESTION_GROUP C
	    WHERE C.QUESTION_TYPE_ID = A.QUESTION_TYPE_ID
			AND C.QUESTION_ID = B.QUESTION_ID
			AND C.QUESTION_TYPE_ID = #type#
			<isNotEmpty property="question_valid_date">
				AND C.QUESTION_VALID_DATE = to_date('01/08/2014','dd/mm/yyyy')
			</isNotEmpty>
			<isNotEmpty property="index">
				AND B.QUESTION_ID BETWEEN #index# AND #index2#
			</isNotEmpty>
			<isEmpty property="question_valid_date">
				AND C.QUESTION_VALID_DATE = (SELECT MAX(QUESTION_VALID_DATE) FROM EKA.LST_QUESTION_GROUP Z WHERE Z. QUESTION_TYPE_ID = C.QUESTION_TYPE_ID)
			</isEmpty>
		<!-- AND C.QUESTION_VALID_DATE = (SELECT MAX(QUESTION_VALID_DATE) FROM EKA.LST_QUESTION_GROUP Z WHERE Z. QUESTION_TYPE_ID = C.QUESTION_TYPE_ID AND Z.QUESTION_ID = C.QUESTION_ID AND Z.QUESTION_VALID_DATE =  to_date('01/09/2015','dd/mm/yyyy')) -->
		<!-- AND C.QUESTION_VALID_DATE = (SELECT MAX(QUESTION_VALID_DATE) FROM EKA.LST_QUESTION_GROUP Z WHERE Z. QUESTION_TYPE_ID = C.QUESTION_TYPE_ID AND Z.QUESTION_ID = C.QUESTION_ID AND Z.QUESTION_VALID_DATE <= #BEG_DATE#) -->
		ORDER BY C.QUESTION_ID, C.QUESTION_VALID_DATE, QUESTION_ORDER
    </select>
	
	<select id="elions.uw.selectLQL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select b.QUESTION_TYPE_ID, b.QUESTION_ID, b.QUESTION_VALID_DATE, 
			   b.OPTION_TYPE, b.OPTION_GROUP, b.OPTION_ORDER,
			   to_char(B.OPTION_LABEL)option2
		from eka.lst_question_group a,
		     eka.lst_question_label b
		where a.question_type_id = b.question_type_id
		and a.question_id = b.question_id
		and a.question_valid_date = b.question_valid_date
		and b.question_type_id =  #type#
		<isNotEmpty property="index">
		AND B.QUESTION_ID BETWEEN #index# AND #index2#
		</isNotEmpty>
		<isNotEmpty property="question_valid_date">
		AND b.question_valid_date = to_date('01/08/2014','dd/mm/yyyy')
		</isNotEmpty>
		<isEmpty property="question_valid_date">
		and b.question_valid_date = (SELECT MAX(QUESTION_VALID_DATE) FROM EKA.lst_question_label Z WHERE Z. QUESTION_TYPE_ID = a.QUESTION_TYPE_ID)
		</isEmpty>
		order by b.question_id, option_group, option_order
       </select>
       
       	<select id="elions.uw.selectDataLQLTambahan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select b.QUESTION_TYPE_ID, b.QUESTION_ID, b.QUESTION_VALID_DATE, 
			   b.OPTION_TYPE, b.OPTION_GROUP, b.OPTION_ORDER,
			   to_char(B.OPTION_LABEL)option2
		from eka.lst_question_group a,
		     eka.lst_question_label b
		where a.question_type_id = b.question_type_id
		and a.question_id = b.question_id
		and a.question_valid_date = b.question_valid_date
		and b.question_type_id =  #type#
		<isNotEmpty property="index">
		AND B.QUESTION_ID BETWEEN #index# AND #index2#
		</isNotEmpty>
		<isNotEmpty property="question_valid_date">
		AND b.question_valid_date = to_date('01/08/2014','dd/mm/yyyy')
		</isNotEmpty>
		<isEmpty property="question_valid_date">
		and b.question_valid_date = (SELECT MAX(QUESTION_VALID_DATE) FROM EKA.lst_question_label Z WHERE Z. QUESTION_TYPE_ID = a.QUESTION_TYPE_ID)
		</isEmpty>
		<isNotEmpty property="tambahan">
		and b.option_group not in ($tambahan$)
		</isNotEmpty>
		order by b.question_id, option_group, option_order
       </select>
     
    <select id="elions.uw.selectHasilQuest" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.MedQuest">
		SELECT * FROM EKA.MST_ADDITIONAL_DESC_INSURED where reg_spaj =#spa# and mste_insured_no =#fjp#
	</select>
	
	<select id="elions.uw.selectJawabanMedicalALL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
            msadm_berat bb,msadm_tinggi tb,(case when msadm_sehat=0 then 'TIDAK' else 'YA' end)sehat,msadm_sehat_desc sehat1,msadm_penyakit_desc sakit,
            (case when msadm_medis=0 then 'TIDAK' 
                  when msadm_medis=1 then 'YA' else '' end)medis,
             (case when msadm_berat_berubah=0 then 'TIDAK' 
                  when msadm_berat_berubah=1 then 'YA' else '' end)bb_berubah,
              (case when msadm_penyakit=0 then 'TIDAK' 
                  when msadm_penyakit=1 then 'YA' else '' end)penyakit,
               (case when msadm_clear_case=0 then 'CLEAR' 
                  when msadm_clear_case=1 then 'NON CLEAR' else '' end)clear,
                (case when msadm_medis_alt=0 then 'TIDAK' 
                  when msadm_medis_alt=1 then 'YA' else '' end)medis_alt,
            		 msadm_medis_desc medis1,msadm_berubah_desc bb_berubah_desc,msadm_penyakit_desc penyakit_desc,msadm_medis_alt_desc medis_alt_desc,
            		(case when msadm_pregnant=0 then 'TIDAK' 
                		  when msadm_pregnant=1 then 'YA'  else '' end)hamil,msadm_pregnant_desc hamil1,msadm_em_life em
	     from
			EKA.MST_ADDITIONAL_DESC_INSURED
	     where
			reg_spaj=#spa#
			and mste_insured_no=#fjp#
	</select>
	
	<select id="elions.uw.selectMscoNoByMonth" parameterClass="java.util.HashMap" resultClass="string">
		select msco_no
		from eka.mst_commission
		where msag_id = #msag_id#
		and to_char(msco_pay_date,'mmyyyy')= #month#
		and rownum=1
	</select>

	<select id="elions.uw.selectMedisDesc" parameterClass="int" resultClass="string">
		select
		    rtrim (xmlagg (xmlelement (e, trim(a.jns_prefix) ||'('||b.lsmc_name||')'|| ', ')).extract ('//text()'), ', ')medis
		from
		    eka.lst_jenis_medical a,
		    eka.lst_medical_check_up b
		where
		    a.lsmc_id = b.lsmc_id
		    and a.jns_medis = #value#
		    and a.lstb_id = 1
	</select>
	
	<select id="elions.uw.selectHistorySpeedy" parameterClass="string" resultClass="java.util.HashMap">
		select * from eka.mst_speedy_history where key_id = #value# order by row_num asc
	</select>
	
	<select id="elions.uw.cekFund" parameterClass="string" resultClass="int">
		select
		    count(a.reg_spaj)jml
		from
		    eka.mst_trans_ulink a
		where   
		    a.reg_spaj = #value#
		    and a.lspd_id in (42,43)
		    and a.mtu_tgl_trans = (select mtu_tgl_trans from eka.mst_trans_ulink where mu_ke=1 and mtu_ke=1 and reg_spaj= a.reg_spaj)
	</select>
	
	<select id="elions.uw.selectPengaliCaraBayar" parameterClass="string" resultClass="int">
		select b.lscb_kali
		from eka.mst_policy a, eka.lst_pay_mode b
		where a.lscb_id = b.lscb_id
		    and a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectMstTransHist"  parameterClass="string" resultClass="int">
		select count(*) from eka.mst_trans_history where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectFirstUserUwProses"  parameterClass="string" resultClass="java.util.HashMap">
		select to_char(a.msps_date,'dd/MM/yyyy') as msps_date, a.lus_id
		from eka.mst_position_spaj a, eka.lst_user b
		where a.lspd_id in (2,27)
		    and a.lus_id = b.lus_id
		    and b.lde_id = 11
		    and a.reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
		    and rownum = 1
		order by a.msps_date
	</select>
	
	<select id="elions.uw.selectReportPolisDataRetur" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
            c.mcl_first nama_pp, a.mspo_policy_no no_polis, a.mspo_no_pengiriman,
            d.lsrg_nama site,e.msps_desc alasan,to_char(b.tgl_polis_retur ,'dd/MM/yyyy')tgl_retur, to_char(b.tgl_kirim_ulang_polis_retur,'dd/MM/yyyy')tgl_kirim_ulang,
            BILL.MSAP_ADDRESS Alamat_Korespodensi
        from
            eka.mst_policy a,
            eka.mst_trans_history b,
            eka.mst_client_new c,
            eka.lst_region d,
            eka.mst_position_Spaj e,
            eka.mst_address_billing bill
        where
            a.reg_Spaj=b.reg_Spaj
            and a.reg_Spaj=b.reg_Spaj
            and a.reg_Spaj=e.reg_Spaj
            and a.mspo_policy_holder=c.mcl_id
            and a.lca_id=d.lca_id
            and a.lwk_id=D.lwk_id
            and a.lsrg_id=d.lsrg_id
			and e.msps_desc like '%POLIS RETUR:%'			
			and b.tgl_polis_retur BETWEEN TO_DATE ( #bdate#, 'dd/mm/yyyy hh24:mi:ss') 
                                  AND TO_DATE ( #edate#, 'dd/mm/yyyy hh24:mi:ss')	
             and a.reg_spaj = bill.reg_spaj (+)	
	</select>
	
	<select id="elions.uw.cekSpajTransferToFilling" parameterClass="string" resultClass="int" >
    	select eka.pacpolis.check_thegreat(#reg_spaj#) from dual
    </select>
    
     <select id="elions.uw.selectMstConfig" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	select name, name2, name3
		from eka.mst_config
		where app_id = #app_id#
		and section = #section#
		and sub_section = #sub_section#
    </select>  
    
    <select id="elions.uw.selectEmailBancass" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	select email_cab, email_cab_cc, email_cab_bcc
		from eka.lst_cabang_bii 
		where jenis = 2 
		and lcb_no in (select wil_no from eka.lst_cabang_bii where jenis = 2)
		and trim(lcb_no) = #lcb_no#
    </select>  
      
    <select id="elions.uw.selectReportUwCollection" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 select 
   			k.* ,(case when k.lama <![CDATA[<]]>0 then 0 else k.lama end)lama_proses
		 from
			(select
   				 K.LCA_NAMA distribution,L.LSRG_NAMA cabang_penutup, agent.mcl_first nama_penutup, a.reg_Spaj no_Spaj,eka.f_lsdbs(a.reg_Spaj,c.lsbs_id,c.lsdbs_number)produk,   
    			 EKA.UTILS.PEMEGANG(a.reg_Spaj)pemegang_polis ,eka.utils.tertanggung(a.reg_Spaj)tertanggung,q.msp_fire_id fire_id,
   			     to_char(A.MSPO_INPUT_DATE,'dd/MM/yyyy') tgl_input_Spaj,
                 to_char(e.tgl_transfer_uw_speedy,'dd/MM/yyyy')tgl_trans_uw,
                 to_char((select X.MSDP_INPUT_DATE from eka.mst_deposit_premium x where x.msdp_number=1 and x.reg_Spaj=a.reg_spaj),'dd/MM/yyyy')tgl_input_tp ,
                 to_char((select min(yy.MSpa_INPUT_DATE) from eka.mst_payment yy where  yy.reg_Spaj=a.reg_spaj and (yy.msdp_number=1 or yy.msdp_number is null)),'dd/MM/yyyy')tgl_input_payment_pertama ,    
                 to_char(e.tgl_akseptasi_polis,'dd/MM/yyyy')tgl_aksep,to_char(e.tgl_print_polis,'dd/MM/yyyy')tgl_cetak,to_char(e.tgl_kirim_polis,'dd/MM/yyyy')tgl_kirim_polis,
                 to_char(r.tgl_input,'dd/MM/yyyy')tgl_upload_bsb,
                 (SELECT 
                   eka.workdays (to_date(to_char((select zz.MSDP_INPUT_DATE from eka.mst_deposit_premium zz where zz.msdp_number=1 and zz.reg_Spaj=a.reg_spaj),'dd/MM/yyyy'),'dd/MM/yyyy'), e.tgl_kirim_polis)-1
                   FROM DUAL)lama,
                 F.LSSP_STATUS status_polis,H.STATUS_ACCEPT status_accept,G.LSPD_POSITION posisi_polis,    
                 (select x.msps_desc
			            from eka.mst_position_spaj x, eka.lst_user z
			            where x.reg_spaj = a.reg_spaj
			                and x.lus_id = z.lus_id
			                and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = b.lssa_id))keterangan_data,
			     (select z.lus_login_name
			            from eka.mst_position_spaj x, eka.lst_user z
			            where x.reg_spaj = a.reg_spaj
			                and x.lus_id = z.lus_id
			                and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = b.lssa_id)
			                and z.lde_id = 11)user_uw ,
			    c.mspr_premium premi_pokok,           
			    (SELECT mu_jlh_premi FROM eka.mst_ulink where lt_id in (2,5) AND reg_spaj = a.reg_spaj and mu_ke =2) premi_top_up,
			    n.LSCB_PAY_MODE cara_bayar,o.lku_symbol kurs,c.mspr_tsi up ,P.LUS_LOGIN_NAME user_cabang                     
		from
			    eka.mst_policy a,
			    eka.mst_insured b,
			    eka.mst_product_insured c,
			    eka.lst_Det_bisnis d,
			    eka.mst_trans_history e,
			    EKA.LST_POLICY_STATUS f,
			    EKA.LST_DOCUMENT_POSITION g,
			    EKA.LST_STATUS_ACCEPT h,
			    eka.mst_agent i,
			    eka.mst_agent_prod j,
			    eka.mst_client_new agent,
			    eka.lst_cabang k,
			    eka.lst_region l,   
			    eka.lst_pay_mode n,
			    eka.lst_kurs o,
			    eka.lst_user p,
			    eka.mst_pas_sms q,
			    (select min (tgl_input)tgl_input,no_indek from eka.mst_scan where tipe_file='BSB' group by no_indek)r
		where
			    a.reg_Spaj=b.reg_Spaj
			    and a.reg_Spaj=c.reg_Spaj
			    and a.reg_Spaj=q.reg_Spaj(+)
			    and a.reg_Spaj=e.reg_Spaj(+)  
			    and A.LSSP_ID=F.LSSP_ID
			    and a.reg_Spaj=R.NO_INDEK(+)
			    and A.LSPD_ID=G.LSPD_ID
			    and a.reg_Spaj=J.REG_SPAJ
			    and A.LSCB_ID=N.LSCB_ID
			    and A.LKU_ID=O.LKU_ID
			    and a.lca_id=K.LCA_ID
			    and a.lca_id=l.lca_id
			    and A.LWK_ID=l.lwk_id
			    and a.lsrg_id=l.lsrg_id
			    and A.LSPD_ID in(2,4,6,27,209)
			    and a.lus_id=p.lus_id
			    and B.LSSA_ID=H.LSSA_ID
			    and c.lsbs_id=d.lsbs_id
			    and c.lsdbs_number =d.lsdbs_number
			    and E.JENIS=23
			    and i.mcl_id=AGENT.MCL_ID
			    and i.msag_id=j.msag_id
			    and J.LSLE_ID=4    
			     and((e.tgl_transfer_uw between #tanggalAwal# and #tanggalAkhir#+1) or((e.tgl_transfer_uw_speedy between #tanggalAwal# and #tanggalAkhir#+1)))	          	
			    and A.LSTB_ID=1
			    <isNotEqual property="jenis" compareValue="All">
			    	<isEqual property="jenis" compareValue="1">
			    		and c.lsbs_id = 142
			    		and c.lsdbs_number =2
			    	</isEqual>
			    	<isEqual property="jenis" compareValue="2">
			    		and (c.lsbs_id||c.lsdbs_number) in ('1429','1752')
			    	</isEqual>
			    	<isEqual property="jenis" compareValue="3">
			    		and (c.lsbs_id||c.lsdbs_number) not in ('1429','1752','1422')
			    	</isEqual>			    	
			    </isNotEqual>
			    and c.lsbs_id<![CDATA[<]]>300
			    order by d.lsdbs_name)k
      </select>       
      
    <!-- proses prosedur speedy -->
	<parameterMap id="prosedurSpeedy" class="java.util.Map">         
		<parameter property="spaj" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="lus_id" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />  		
		<parameter property="result" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />  	
	</parameterMap>
	
	<procedure id="elions.uw.prosesSimultanMedis" parameterMap="prosedurSpeedy">      	 
		{ call eka.PROSES_SPEEDY_PHASE2.proses_simultan(?, ?, ?) }
		<!-- { call eka.proses_speedy.proses_simultan(?, ?, ?) }    -->
	</procedure>
	
	<procedure id="elions.uw.prosesValQuest" parameterMap="prosedurSpeedy">  
	    { call eka.PROSES_SPEEDY_PHASE2.proses_kuisioner(?, ?, ?) } 
		<!--{ call eka.proses_speedy.proses_kuisioner(?, ?, ?) } --> 
	</procedure>
	
	<procedure id="elions.uw.prosesAkseptasiSpeedy" parameterMap="prosedurSpeedy">      	 
		  { call eka.PROSES_SPEEDY_PHASE2.proses_akseptasi(?, ?, ?) }
		<!--  { call eka.proses_speedy.proses_akseptasi(?, ?, ?) }  -->
	</procedure>
	<!-- end proses prosedur speedy-->
	
	<!--  ofac engine store  -->
	
	
	<parameterMap id="prosesofacscreening" class="java.util.Map">         
		<parameter property="spaj" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="lus_id" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN" />  	
		<parameter property="type" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN" />  			
		<parameter property="result" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />  	
	</parameterMap>
	
	<procedure id="elions.uw.prosesofacscreening" parameterMap="prosesofacscreening">      	 
		  { call eka.PKG_PEGA.PROSES_OFACSCREENING(?, ?, ?,?) }
	</procedure>
	
	<select id="elions.uw.selectLockIdInbox" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<isEqual property="tipe" compareValue="0">
				SELECT DISTINCT *
				FROM EKA.MST_INBOX
				WHERE reg_spaj $kata$
				AND lock_id is not null
				<!-- AND lspd_id <![CDATA[<>]]>201 -->
		</isEqual>
		<isEqual property="tipe" compareValue="1">
				SELECT DISTINCT A.*
				FROM EKA.MST_INBOX A , EKA.MST_POLICY B
				WHERE A.REG_SPAJ =B.REG_SPAJ
				AND B.MSPO_POLICY_NO $kata$
				AND lock_id is not null
				<!-- AND A.lspd_id <![CDATA[<>]]>201 -->
		</isEqual>
	</select> 
	
	<select id="elions.uw.schedulerNotProceedWith" resultClass="java.util.HashMap">
		select x.reg_spaj, z.lsbs_id, x.mspo_date_print, X.MSPO_INPUT_DATE, EKA.WORKDAYS( trunc(X.MSPO_INPUT_DATE), trunc(sysdate))-1 telat
         from eka.mst_policy x, eka.mst_insured y, eka.mst_product_insured z,
             (select distinct reg_spaj 
               from eka.mst_position_spaj 
               where reg_spaj not in (select distinct reg_spaj from eka.mst_position_spaj where lspd_id = 2)) f,
              eka.mst_reff_bii a, eka.lst_cabang_bii b
         where x.reg_spaj = y.reg_spaj
            and x.reg_spaj = z.reg_spaj
            and x.reg_spaj = f.reg_spaj
            and x.reg_spaj = a.reg_spaj
            and a.lcb_penutup = b.lcb_no
            and b.jenis in (2,3,16)
            and x.mspo_date_print is null
            and Z.LSBS_ID =142
            and Z.lsdbs_number=2
            and x.lspd_id not in (999, 95)
       union
       select x.reg_spaj, z.lsbs_id, x.mspo_date_print, X.MSPO_INPUT_DATE, EKA.WORKDAYS( trunc(X.MSPO_INPUT_DATE), trunc(sysdate))-1 telat
         from eka.mst_policy x, eka.mst_insured y, eka.mst_product_insured z
         where x.reg_spaj = y.reg_spaj
            and x.reg_spaj = z.reg_spaj
            and Z.LSBS_ID =142
            and Z.lsdbs_number=2
            and x.lspd_id =1
            and not exists (select 1 from eka.mst_reff_bii where reg_spaj =x.reg_spaj)
	</select>
	
	<select id="elions.uw.schedulerNotProceedWithNonBsim" resultClass="java.util.HashMap">
	       select x.reg_spaj,x.lspd_id, z.lsbs_id, x.mspo_date_print, X.MSPO_INPUT_DATE, EKA.WORKDAYS( trunc(y.MSTE_BEG_DATE), trunc(sysdate))-1 telat
         from eka.mst_policy x, eka.mst_insured y, eka.mst_product_insured z
         where x.reg_spaj = y.reg_spaj
            and x.reg_spaj = z.reg_spaj   
            and x.mspo_date_print is null
            and x.lspd_id =209
            and y.lssa_id =3
	</select>
	
	<select id="elions.uw.selectLspin" resultClass="java.util.HashMap" parameterClass="string">
 		select NOMOR, NOMOR2, NO_POLIS from eka.lst_tm_product@EB where product_code=#value#
 	</select>
	
	 <select id="elions.uw.selectKesalahanUW" parameterClass="string" resultClass="java.util.HashMap">
	 	select a.*, d.mcl_first nama_req
			from eka.lst_ulangan a, hrd.hd_tickets@absen b, hrd.hrd_mst@absen c, hrd.mst_client@absen d 
			where a.jenis in ('EDIT DATA','EDIT BEG DATE', 'EDIT RATE', 'EDIT BEG DATE [BY SYSTEM]', 'EDIT MGI', 'EDIT ROLL OVER', 'EDIT PREMI') and upper(a.keterangan) like '%REQ%'
			and a.id_ticket is not null
			and a.id_ticket = b.id_ticket
			and b.nik_req = c.nik
			and c.mcl_id = d.mcl_id
			and reg_spaj = #reg_spaj#
	 </select>
	
	<select id="elions.uw.selectCountUserUW" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		select (case when c.total_spaj is null then 0 else c.total_spaj end) total_spaj, a.lus_id, b.lus_full_name 
		from eka.lst_job_pic a, eka.lst_user b,
		(
		    select count(reg_spaj) total_spaj, a.ljj_id, a.lspd_id, a.lock_id 
		    from eka.mst_inbox a, eka.lst_job_pic b
		    where a.lock_id is not null
		        and a.ljj_id = b.ljj_id
		        and a.lspd_id = b.lspd_id
		        and a.lock_id = b.lus_id
		        <isEqual property="product" compareValue="0">
		        	and a.ljj_id = 21
	        	</isEqual>
	        	<isEqual property="product" compareValue="1">
		        	and a.ljj_id = 25
	        	</isEqual>
		        <isEqual property="lspd_id" compareValue="202">
		        	and a.lspd_id = 202
	        	</isEqual>  
	        	<isEqual property="lspd_id" compareValue="209">
		        	and a.lspd_id = 209
	        	</isEqual>
	        	<isEqual property="lspd_id" compareValue="210">
		        	and a.lspd_id = 210
	        	</isEqual>
	        	<isEqual property="lspd_id" compareValue="211">
		        	and a.lspd_id = 211
	        	</isEqual>
    	        <isEqual property="lspd_id" compareValue="218">
		        	and a.lspd_id = 218
	        	</isEqual>
	        	<isEqual property="lspd_id" compareValue="219">
		        	and a.lspd_id = 219
	        	</isEqual>
	        	and b.active = 1 
	        	and b.flag_work = 1   
	        	and b.flag_viewer = 0
	        	and a.mi_pos = 1
	        	and a.batal not in(1) 
		        group by a.ljj_id, a.lspd_id, a.lock_id       
		) c
		<isEqual property="product" compareValue="0">
        	where a.ljj_id = 21
       	</isEqual>
       	<isEqual property="product" compareValue="1">
        	where a.ljj_id = 25
       	</isEqual>
		<isEqual property="lspd_id" compareValue="202">
        	and a.lspd_id = 202
       	</isEqual>  
       	<isEqual property="lspd_id" compareValue="209">
        	and a.lspd_id = 209
        	and a.flag_viewer <![CDATA[<>]]> 1
       	</isEqual>
       	<isEqual property="lspd_id" compareValue="210">
        	and a.lspd_id = 210
       	</isEqual>
       	<isEqual property="lspd_id" compareValue="211">
        	and a.lspd_id = 211
       	</isEqual>  
       	<isEqual property="lspd_id" compareValue="218">
        	and a.lspd_id = 218
       	</isEqual>
    	<isEqual property="lspd_id" compareValue="219">
        	and a.lspd_id = 219
       	</isEqual>          
		and a.lus_id = b.lus_id
		and a.lus_id = c.lock_id(+)
		and a.ljj_id = c.ljj_id (+)
		and a.lspd_id = c.lspd_id (+)
		and a.active = 1
		and a.flag_work = 1
		and a.flag_viewer = 0
		order by total_spaj, b.lus_full_name
	</select>
	
	<select id="elions.uw.selectPemegangPolis2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	 
		select mcl_first, mspe_date_birth, mspe_no_identity, mspe_mother, reg_spaj
		from eka.mst_policy a, eka.mst_client_new b
		where mspo_policy_holder = mcl_id			
		<isEqual property="tipe" compareValue="0">
			and reg_spaj = #reg_spaj#
		</isEqual>
		<isEqual property="tipe" compareValue="1">
			and mcl_first = #mcl_first#
			and mspe_date_birth = #mspe_date_birth#
			and mspe_no_identity = #mspe_no_identity#
			and mspe_mother = #mspe_mother#
			and reg_spaj not in(#reg_spaj#)
		</isEqual>				
	</select>
	
	<select id="elions.uw.selectLockID" parameterClass="java.util.HashMap" resultClass="integer">
 	 	select distinct lock_id 
		from eka.mst_inbox
		where lock_id is not null
		and reg_spaj = #reg_spaj#
		and ljj_id = 21
		<isEqual property="lspd_id" compareValue="202">	
			and lspd_id = 202
		</isEqual>
		<isEqual property="lspd_id" compareValue="209">	
			and lspd_id = 209
		</isEqual>
		<isEqual property="lspd_id" compareValue="210">	
			and lspd_id = 210
		</isEqual>
		<isEqual property="lspd_id" compareValue="211">	
			and lspd_id = 211
		</isEqual>
		<isEqual property="lspd_id" compareValue="218">	
			and lspd_id = 218
		</isEqual>
		<isEqual property="lspd_id" compareValue="219">	
			and lspd_id = 219
		</isEqual>
		and (lspd_id not in(212) or lspd_id_from in (212))
		and lstb_id = 1
 	</select>	
 	 
	<select id="elions.uw.selectMedisDescNew" parameterClass="string" resultClass="string">
		select
		    '('||b.tipe_medis||') ' || rtrim (xmlagg (xmlelement (e, d.nama_medis || ', ')).extract ('//text()'), ', ') medis
		from
		    eka.mst_insured a,
		    eka.lst_tipemedis b,
		    eka.lst_tipemedis_det c,
		    eka.lst_detmedis d
		where
		    a.jns_medis = b.ltm_id
		    and b.ltm_id = c.ltm_id
		    and c.ldm_id = d.ldm_id
		    and b.ljp_id = 1
		    and b.flag_aktif = 1
		    and c.flag_aktif = 1
		    and d.flag_aktif = 1
		    and c.mstm_tgl_periode is not null             
		    and a.mste_beg_date <![CDATA[>]]> c.mstm_tgl_periode             
		    and a.reg_spaj = #value#
		    and c.mstm_tgl_periode = (select max(y.mstm_tgl_periode) 
		                                from eka.lst_tipemedis x, eka.lst_tipemedis_det y, eka.lst_detmedis z
		                                where x.ltm_id = y.ltm_id
		                                    and y.ldm_id = z.LDM_ID
		                                    and x.ljp_id = 1
		                                    and x.flag_aktif = 1
		                                    and y.flag_aktif = 1
		                                    and z.flag_aktif = 1
		                                    and x.ltm_id = b.ltm_id)
		group by b.tipe_medis
	</select>
	
	<select id="elions.uw.selectKomisiForPtcjm" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		
		<isEqual property="flag" compareValue="1">
			 select
                    utama.*,             
                    round(utama.komisi_dpp/12,0) as komisi_actual
               from(
                     select
                        a.reg_spaj,b.msag_id,
                        eka.utils.pemegang(a.reg_spaj)as nama_pemegang,
                        a.mspo_policy_no_format no_pol,                                      
                        d.mcl_first as nama_agent,                    
                        round(eka.f_hitung_dpp(a.reg_spaj,(premium.premi*12*rate_comm.rate),1),0)komisi_dpp
                    from
                        eka.mst_policy a,
                        eka.mst_agent_prod b,
                        eka.mst_agent c,
                        eka.mst_client_new d ,                   
                        (select 
                            sum(a.msdb_premium)premi,a.reg_spaj
                         from 
                            eka.mst_det_billing a
                         where 
                            a.reg_Spaj = #no_spaj#
                            and A.MSBI_PREMI_KE = 1 group by a.reg_spaj)premium ,                     
                         (select
                             C.LSCO_COMM/100 rate,a.reg_spaj
                          from
                             eka.mst_policy a,
                             eka.mst_product_insured b,
                             eka.lst_comm_new c
                          where
                             a.reg_Spaj = b.reg_Spaj
                             and b.lsbs_id <![CDATA[<]]> 300
                             and b.lsbs_id = c.lsbs_id
                             and b.lsdbs_number = c.lsdbs_number
                             and C.LSCO_DATE =(select max(lsco_date)lsco_date
                                                   from eka.lst_comm_new 
                                                   where lsbs_id=b.lsbs_id
                                                   and lsco_jenis=8
                                                   and lsdbs_number=b.lsdbs_number)
                              and a.reg_spaj = #no_spaj#
                              and C.LSCO_YEAR = 1
                              and C.LSCB_ID = 3
                              and C.LEV_COMM =4
                              and c.lsco_jenis = 8)rate_comm
                         where
                            a.reg_spaj = b.reg_spaj
                            and a.reg_spaj = premium.reg_spaj
                            and a.reg_spaj = rate_comm.reg_spaj
                            and b.msag_id  = c.msag_id
                            and c.mcl_id   = d.mcl_id
                            and b. lsle_id = 4
                            and a.reg_Spaj = #no_spaj#)utama
      </isEqual>
      <isEqual property="flag" compareValue="2">       
	      select 
                d.reg_spaj,eka.utils.pemegang(d.reg_spaj)as nama_pemegang,d.mspo_policy_no no_pol,
                '' as total_premi,A.jlh_komisi as komisi_dpp,a.jlh_komisi as komisi_actual,
                b.msag_id as kode_agent,
                c.mcl_first as nama_agent
           from
                eka.mst_comm_reff_bii a,
                eka.mst_agent b,
                eka.mst_client_new c,
                eka.mst_policy d,
                eka.mst_agent_prod e
           where
                a.reg_Spaj=#no_spaj#
                and a.reg_spaj=d.reg_spaj
                and a.reg_Spaj=e.reg_Spaj                
                and e.msag_id=b.msag_id
                and E.LSLE_ID=4
                and B.MCL_ID= c.mcl_id
                and a.mcr_flag=1
      </isEqual> 
      <isEqual property="flag" compareValue="3">       
	      select 
	            d.reg_spaj,eka.utils.pemegang(d.reg_spaj)as nama_pemegang,d.mspo_policy_no no_pol,
	            '' as total_premi,A.MSCO_COMM as komisi_dpp,a.msco_comm as komisi_actual,
	            a.msag_id as kode_agent,
	            c.mcl_first as nama_agent
	       from
	            eka.mst_commission a,
	            eka.mst_agent b,
	            eka.mst_client_new c,
	            eka.mst_policy d
	       where
	            a.reg_Spaj=#no_spaj#
	            and a.reg_spaj=d.reg_spaj
	            and a.msag_id=b.msag_id
	            and B.MCL_ID= c.mcl_id
      </isEqual>      
      <isEqual property="flag" compareValue="4">       
	      select 
	            d.reg_spaj,eka.utils.pemegang(d.reg_spaj)as nama_pemegang,d.mspo_policy_no no_pol,
	            '' as total_premi,A.MSCO_COMM as komisi_dpp,a.msco_comm as komisi_actual,
	            a.msag_id as kode_agent,
	            c.mcl_first as nama_agent
	       from
	            eka.mst_commission a,
	            eka.mst_agent b,
	            eka.mst_client_new c,
	            eka.mst_policy d
	       where
	            a.reg_Spaj=#no_spaj#
	            and a.reg_spaj=d.reg_spaj
	            and a.msag_id=b.msag_id
	            and B.MCL_ID= c.mcl_id
      </isEqual>           
	</select>
	
	<select id="elions.uw.selectCommBonusForPtcjm" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		select
			a.reg_Spaj ,A.MSPO_POLICY_NO_FORMAT as nopol, EKA.UTILS.PEMEGANG(a.reg_Spaj) as nama_pemegang,
			b.msag_id as kode_agent, d.mcl_first as nama_agent,b.msco_comm as bonus
		from
			eka.mst_policy a,
			eka.mst_comm_bonus b,
			eka.mst_agent c,
			eka.mst_client_new d
		where
			a.reg_Spaj=#no_spaj#
			and a.reg_Spaj=b.reg_Spaj
			and b.msag_id=c.msag_id
			and c.mcl_id=d.mcl_id
		
	</select>
	
	<select id="elions.uw.selectCommRewardForPtcjm" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		select
			a.reg_Spaj ,A.MSPO_POLICY_NO_FORMAT as nopol, EKA.UTILS.PEMEGANG(a.reg_Spaj) as nama_pemegang,
			b.msrk_id as kode_agent, d.mcl_first as nama_agent,b.msco_comm as reward
		from
			eka.mst_policy a,
			eka.mst_reward b,
			eka.mst_agent c,
			eka.mst_client_new d
		where
			a.reg_Spaj=#no_spaj#
			and a.reg_Spaj=b.reg_Spaj
			and b.msrk_id=c.msag_id
			and c.mcl_id=d.mcl_id
		
	</select>
	
	<select id="elions.uw.selectDataPendingSmilePrioritas" resultClass="java.util.HashMap">
		SELECT distinct  to_char(a.mspo_input_date  ,'dd/MM/yyyy')mspo_input_date,  a.reg_spaj spaj ,B.MSTE_BEG_DATE, a.mspo_policy_no polis, pp.mcl_first nama_pp, tt.mcl_first nama_tt,
				(select sum(mu_jlh_premi) from eka.mst_ulink where reg_spaj =a.reg_spaj and lt_id in (1,5,7))total_premi,
				(select to_char(jj.mspro_prod_date,'dd/MM/yyyy')mspro_prod_date from eka.mst_production jj where  jj.msbi_tahun_ke=1 and jj.msbi_premi_ke=1 and jj.mspro_jn_prod=1 and jj.reg_spaj=a.reg_spaj)tgl_prod,
				 (select yy.ape_prod from eka.mst_production yy where  yy.msbi_tahun_ke=1 and yy.msbi_premi_ke=1 and yy.mspro_jn_prod=1 and yy.reg_spaj=a.reg_spaj)ape_prod,
				 detBisnis.lsdbs_name nama_produk , dp.lspd_position posisi_document , stat.status_accept , nama_agent.mcl_first nama_agent_penutup,b.lssa_id,
				 (select to_char(pay.mspa_pay_date,'dd/MM/yyyy') from eka.mst_payment pay where pay.reg_Spaj=a.reg_Spaj and pay.msdp_number=1)pay_Date,to_char(sysdate,'dd/MM/yyyy')tgl_now,
				 (select x.msps_desc
         		  from eka.mst_position_spaj x, eka.lst_user z
           		  where x.reg_spaj = a.reg_spaj
                	and x.lus_id = z.lus_id
                	and x.msps_date = (select min(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and lssa_id = b.lssa_id))keterangan_data  
		FROM eka.mst_policy a, eka.mst_insured b, eka.mst_client_new pp, eka.mst_client_new tt, eka.mst_agent_Prod aprod, eka.mst_product_insured prodins,
		     eka.lst_det_bisnis detBisnis, eka.lst_document_position dp , EKA.LST_STATUS_ACCEPT stat , eka.mst_agent agent, eka.mst_client_new nama_agent  
		WHERE a.reg_spaj =b.reg_spaj
			AND   a.mspo_policy_holder = pp.mcl_id
			AND  b.mste_insured = tt.mcl_id
			and  aprod.reg_spaj = a.reg_spaj
			AND  aprod.lsle_id =4
			AND  a.reg_spaj =prodins.reg_spaj
			AND  prodins.lsbs_id <![CDATA[<]]>300
			AND  prodins.lsbs_id =detBisnis.lsbs_id
			AND  prodins.lsdbs_number =detBisnis.lsdbs_number
			AND  a.lspd_id =dp.lspd_id
			AND  B.LSSA_ID = stat.lssa_id
			AND  AGENT.MSAG_ID=aprod.msag_id
			AND  nama_agent.mcl_id =AGENT.MCL_ID
			and a.lca_id='37'
			and a.lwk_id='M1'
			and a.lsrg_id='03'
			AND a.lspd_id <![CDATA[<>]]> 95
		and b.lssa_id in(1,3,10,17)
		order by b.lssa_id,mspo_input_date
	</select>
	
	<select id="elions.uw.selectLcbNo" resultClass="string" parameterClass="int">
        select lcb_no from eka.lst_reff_bii where lrb_id = #value#
    </select>
    
    <select id="elions.uw.selectDetailKartuPas" resultClass="java.util.HashMap" parameterClass="string">
        <!-- select 
            * 
        from 
            eka.mst_kartu_pas a, 
            eka.lst_tm_proddet@eb b
        where 
            a.product_code = b.product_code
            and a.product_sub_code = b.plan
            and produk = '15' 
            and no_kartu like '%' || #value# -->
        select
		    a.*,
		    (case when a.jenis = 0 then b.lsdbs_number else c.plan end) plan,
		    (case when a.jenis = 0 then b.lsdbs_name else c.nama_plan end) nama_plan,
		    (case when a.jenis = 0 then b.mpi_mou else d.no_polis end) no_polis_induk
		from
		    eka.mst_kartu_pas a,
		    eka.lst_det_bisnis b,
		    eka.lst_tm_proddet@eb c,
		    eka.lst_tm_product@eb d
		where
		    a.product_code = b.lsbs_id(+)
		    and a.product_sub_code = b.lsdbs_number(+)
		    and a.product_code = c.product_code(+)
		    and a.product_sub_code = c.plan(+)
		    and a.product_code = d.product_code(+)
		    and a.produk in ('15','16')
		    and a.no_kartu like '%' || #value#
    </select>
    
    <select id="elions.uw.selectKotaBank" resultClass="java.util.HashMap" parameterClass="string">
        select lbn_nama cabang, lbn_kota kota from eka.lst_bank where lbn_id = #value#
    </select>
    
    <select id="elions.uw.selectReportFollowUpCsfCall" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        select a.lca_id, (case when a.lca_id = '09' then d.cabang else e.cabang end) cabang,
                (case when a.lca_id = '09' then d.agen_penutup else e.agen_penutup end) agen_penutup, a.reg_spaj spaj,
                nvl(a.mspo_policy_no_format,'-') polis, pp.mcl_first pp, tt.mcl_first tt, eka.f_lsbs(a.reg_spaj,c.lsbs_id) produk,
                f.msps_desc kategori, f.msps_date tgl_validasi, g.lssp_status status,
                (select count(*) from eka.mst_position_spaj where reg_spaj = a.reg_spaj and msps_desc like 'GAGAL VALIDASI%') frekuensi
        from eka.mst_policy a, eka.mst_insured b, eka.mst_product_insured c,
            eka.mst_client_new pp, eka.mst_client_new tt, 
            (select x.reg_spaj, upper(y.nama_cabang) cabang, upper(z.nama_reff) agen_penutup
             from eka.mst_reff_bii x, eka.lst_cabang_bii y, eka.lst_reff_bii z
             where x.lcb_no = y.lcb_no
                 and x.lrb_id = z.lrb_id
                 and x.level_id = 4) d,
            (select x.reg_spaj, upper(z.lar_admin) cabang, upper(zz.mcl_first) agen_penutup
             from eka.mst_policy x, eka.lst_region y, eka.lst_addr_region z, 
                     eka.mst_agent_prod xx, eka.mst_agent yy, eka.mst_client_new zz
             where x.reg_spaj = xx.reg_spaj
                 and x.lca_id = y.lca_id
                 and x.lwk_id = y.lwk_id
                 and x.lsrg_id = y.lsrg_id
                 and y.lar_id = z.lar_id
                 and xx.lsle_id = 4
                 and xx.msag_id = yy.msag_id
                 and yy.mcl_id = zz.mcl_id) e,
            (select reg_spaj, max(msps_date) msps_date, msps_desc
             from eka.mst_position_spaj where msps_desc like 'GAGAL VALIDASI%' group by reg_spaj, msps_desc) f,
            eka.lst_policy_status g
        where a.reg_spaj = b.reg_spaj
            and a.reg_spaj = c.reg_spaj
            and a.reg_spaj = d.reg_spaj (+)
            and a.reg_spaj = e.reg_spaj (+)
            and a.reg_spaj = f.reg_spaj
            and a.lssp_id = g.lssp_id
            and a.lstb_id = 1
            and a.lspd_id != 95
            and a.mspo_policy_holder = pp.mcl_id
            and b.mste_insured = tt.mcl_id
		    and c.lsbs_id <![CDATA[<]]> 300
		    and f.msps_date between to_date(#tanggalAwal#,'dd/MM/yyyy') and to_date(#tanggalAkhir#,'dd/MM/yyyy')
	</select>
    
	<select id="elions.uw.selectDataProdDanCaseSizeBSIM"  parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT nomor, kanwil, MAX(DECODE ( rn , 1, periode )) PERIODE1, MAX(DECODE ( rn , 1, polis )) POLIS1, MAX(DECODE ( rn , 1, premi )) PREMI1, MAX(DECODE ( rn , 1, ape_prod )) APE1, MAX(DECODE ( rn , 1, reff_aktif )) REFF1,
            MAX(DECODE ( rn , 2, periode )) PERIODE2, MAX(DECODE ( rn , 2, polis )) POLIS2, MAX(DECODE ( rn , 2, premi )) PREMI2, MAX(DECODE ( rn , 2, ape_prod )) APE2, MAX(DECODE ( rn , 2, reff_aktif )) REFF2,
            MAX(DECODE ( rn , 3, periode )) PERIODE3, MAX(DECODE ( rn , 3, polis )) POLIS3, MAX(DECODE ( rn , 3, premi )) PREMI3, MAX(DECODE ( rn , 3, ape_prod )) APE3, MAX(DECODE ( rn , 3, reff_aktif )) REFF3,
            MAX(DECODE ( rn , 4, periode )) PERIODE4, MAX(DECODE ( rn , 4, polis )) POLIS4, MAX(DECODE ( rn , 4, premi )) PREMI4, MAX(DECODE ( rn , 4, ape_prod )) APE4, MAX(DECODE ( rn , 4, reff_aktif )) REFF4,
            MAX(DECODE ( rn , 5, periode )) PERIODE5, MAX(DECODE ( rn , 5, polis )) POLIS5, MAX(DECODE ( rn , 5, premi )) PREMI5, MAX(DECODE ( rn , 5, ape_prod )) APE5, MAX(DECODE ( rn , 5, reff_aktif )) REFF5,
            MAX(DECODE ( rn , 6, periode )) PERIODE6, MAX(DECODE ( rn , 6, polis )) POLIS6, MAX(DECODE ( rn , 6, premi )) PREMI6, MAX(DECODE ( rn , 6, ape_prod )) APE6, MAX(DECODE ( rn , 6, reff_aktif )) REFF6,
            MAX(DECODE ( rn , 7, periode )) PERIODE7, MAX(DECODE ( rn , 7, polis )) POLIS7, MAX(DECODE ( rn , 7, premi )) PREMI7, MAX(DECODE ( rn , 7, ape_prod )) APE7, MAX(DECODE ( rn , 7, reff_aktif )) REFF7,
            MAX(DECODE ( rn , 8, periode )) PERIODE8, MAX(DECODE ( rn , 8, polis )) POLIS8, MAX(DECODE ( rn , 8, premi )) PREMI8, MAX(DECODE ( rn , 8, ape_prod )) APE8, MAX(DECODE ( rn , 8, reff_aktif )) REFF8,
            MAX(DECODE ( rn , 9, periode )) PERIODE9, MAX(DECODE ( rn , 9, polis )) POLIS9, MAX(DECODE ( rn , 9, premi )) PREMI9, MAX(DECODE ( rn , 9, ape_prod )) APE9, MAX(DECODE ( rn , 9, reff_aktif )) REFF9,
            MAX(DECODE ( rn , 10, periode )) PERIODE10, MAX(DECODE ( rn , 10, polis )) POLIS10, MAX(DECODE ( rn , 10, premi )) PREMI10, MAX(DECODE ( rn , 10, ape_prod )) APE10, MAX(DECODE ( rn , 10, reff_aktif )) REFF10,
            MAX(DECODE ( rn , 11, periode )) PERIODE11, MAX(DECODE ( rn , 11, polis )) POLIS11, MAX(DECODE ( rn , 11, premi )) PREMI11, MAX(DECODE ( rn , 11, ape_prod )) APE11, MAX(DECODE ( rn , 11, reff_aktif )) REFF11,
            MAX(DECODE ( rn , 12, periode )) PERIODE12, MAX(DECODE ( rn , 12, polis )) POLIS12, MAX(DECODE ( rn , 12, premi )) PREMI12, MAX(DECODE ( rn , 12, ape_prod )) APE12, MAX(DECODE ( rn , 12, reff_aktif )) REFF12
		FROM 
			(SELECT nomor, kanwil, periode, polis, premi, ape_prod, reff_aktif, row_number() OVER ( partition by nomor order by rownum) rn
			FROM 
			(
			        select nomor, kanwil, periode, count(distinct mspo_policy_no) polis, sum(premi) premi, sum(ape_prod) ape_prod, sum(reff_aktif) reff_aktif
			        from 
			        (
			            select (case when e.wil_no = 'S78' then 1 when e.wil_no = 'S77' then 2 when e.wil_no = 'S81' then 3 when e.wil_no = 'S123' then 4
			                    when e.wil_no = 'S79' then 5 when e.wil_no = 'S80' then 6 when e.wil_no = 'S161' then 7 when e.wil_no = 'S162' then 8
			                    when e.wil_no = 'S163' then 9 when e.wil_no = 'S164' then 10 when e.wil_no = 'S279' then 11 when e.wil_no = 'S280' then 12
			                    else 0 end) nomor,
			                    (case when e.wil_no = 'S78' then 'SUMUT' when e.wil_no = 'S77' then 'SUMSEL' when e.wil_no = 'S81' then 'DKI 1' when e.wil_no = 'S123' then 'THAMRIN'
			                    when e.wil_no = 'S79' then 'DKI 2' when e.wil_no = 'S80' then 'JAWA BARAT' when e.wil_no = 'S161' then 'JAWA TENGAH' when e.wil_no = 'S162' then 'JAWA TIMUR'
			                    when e.wil_no = 'S163' then 'BALI, NTB, NTT' when e.wil_no = 'S164' then 'SULAWESI' when e.wil_no = 'S279' then 'KALIMANTAN' when e.wil_no = 'S280' then 'MALUKU,PAPUA'
			                    else '-' end) kanwil,
			                    to_char(b.mspro_prod_date,'MM/yyyy') periode, e.nama_cabang, a.mspo_policy_no, (b.mspro_nilai_kurs*f.mspr_premium) premi, (b.mspro_nilai_kurs*b.ape_prod) ape_prod, d.lrb_id,
			                    (case when d.tgl_non_aktif is null then 
			                        (case when d.tgl_aktif <![CDATA[<=]]> b.mspro_prod_date then 1 else 0 end) else
			                        (case when d.tgl_aktif <![CDATA[<=]]> b.mspro_prod_date and d.tgl_non_aktif <![CDATA[>]]> b.mspro_prod_date then 1 else 0 end)
			                    end) reff_aktif
			            from eka.mst_policy a, eka.mst_production b, eka.mst_reff_bii c, eka.lst_reff_bii d, eka.lst_cabang_bii e, eka.mst_product_insured f
			            where a.reg_spaj = b.reg_spaj
			                and a.reg_spaj = c.reg_spaj
			                and a.reg_spaj = f.reg_spaj
			                and c.reff_id = d.lrb_id
			                and d.lcb_no = e.lcb_no
			                and a.lspd_id != 95
			                <isEqual property="jenis" compareValue="0">
			   					and a.lscb_id in (1,2,3,4,5,6)
			   				</isEqual>
							<isEqual property="jenis" compareValue="1">
					   			and a.lscb_id = 0
					   		</isEqual>
					   		<isEqual property="jenis" compareValue="2">
					   			and a.lscb_id in (0,1,2,3,4,5,6)
					   		</isEqual>
			                and b.ape_prod is not null
			                and f.lsbs_id <![CDATA[<]]> 300
							and to_date(to_char(b.mspro_prod_date,'MM/yyyy'), 'MM/yyyy') between to_date(#bdate#, 'MM/yyyy') and to_date(#edate#, 'MM/yyyy') 
			                and c.tgl_input = (select max(z.tgl_input) from eka.mst_reff_bii z where z.reg_spaj = a.reg_spaj)
			                and e.wil_no in ('S77', 'S78', 'S79', 'S80', 'S81', 'S123', 'S161', 'S162', 'S163', 'S164', 'S279', 'S280')
			            order by b.mspro_prod_date, e.nama_cabang, a.mspo_policy_no
			        )  
			        group by periode, nomor, kanwil
			        order by nomor
			))
		GROUP BY nomor, kanwil
		ORDER BY nomor
	</select>
	
	<select id="elions.uw.selectTransferImaging"  parameterClass="string" resultClass="java.util.HashMap">
		select * from eka.mst_inbox 
		where create_date <![CDATA[<]]> to_date('09/03/2015', 'dd/MM/yyyy')
		and mi_id = #mi_id#
	</select>
	
	<select id="elions.uw.selectProdukNonKuesioner" resultClass="int" parameterClass="string">
		select count(*) from eka.mst_product_insured where lsbs_id in (142,143,144,158,42,130,73,198,187,205)
                   and reg_spaj = #value#
	</select>
	
	<select id="elions.uw.selectKartuPasbyTglInput" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select a.*,
		    (case
		        when a.flag_active = 0 then 'Belum Aktif'
		        when a.flag_active = 1 then 'Aktif'
		        else 'Batal'
		        end ) flag,
		        replace(a.no_kartu,'<![CDATA[<]]>','') kartu,
		        b.lsdbs_name product,
		        c.lus_full_name nama
		from eka.mst_kartu_pas a,
		    eka.lst_det_bisnis b,
		    eka.lst_user c
		where
		    1=1
		    and a.product_code = b.lsbs_id
		    and a.product_sub_code = B.LSDBS_NUMBER
		    and a.lus_id_input = c.lus_id
		    and trunc(a.tgl_input) = trunc(to_date(#tgl_input#,'yyyy-MM-dd'))
		    order by a.tgl_input asc
	</select>
	
	<select id="elions.uw.selectMstBenefeciary"  parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select * from eka.mst_benefeciary
		where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectLusId"  parameterClass="string" resultClass="string">
		select * 
		from (select lus_id from eka.mst_position_spaj where reg_spaj = #reg_spaj# order by msps_date desc) 
		where rownum = 1
		and lus_id not in(0,1)
	</select> 	
	
	<select id="elions.uw.selectReportQc"  parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select z.mspo_policy_no, x.reg_spaj, x.msps_desc msps_desc_qc1, to_char(x.msps_date, 'dd/MM/yyyy') msps_date_qc1, y.lus_full_name lus_full_name_qc1, d.msps_desc msps_desc_qc1, to_char(d.msps_date, 'dd/MM/yyyy') msps_date_qc2, d.lus_full_name lus_full_name_qc2
		from eka.mst_position_spaj x, eka.lst_user y, eka.mst_policy z, (select a.reg_spaj, a.msps_desc, a.msps_date, b.lus_full_name from eka.mst_position_spaj a, eka.lst_user b where a.lus_id = b.lus_id and a.msps_desc like 'QC2_%') d  
		where x.lus_id = y.lus_id and x.reg_spaj = z.reg_spaj and x.msps_desc like 'QC1_%'
			and x.reg_spaj = d.reg_spaj(+)
			and x.msps_date between to_date(#bdate#, 'dd/MM/yyyy') and to_date(#edate#, 'dd/MM/yyyy')+1
			order by x.msps_date
	</select>
	
	<select id="elions.uw.selectMstPositionQc"  parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select * from eka.mst_position_spaj
		<isEqual property="jenis" compareValue="0">
			where msps_desc like 'QC1_%'
		</isEqual>
		<isEqual property="jenis" compareValue="1">
			where msps_desc like 'QC2_%'
		</isEqual>
		and reg_spaj = #reg_spaj#
	</select>
	<select id="elions.uw.selectDataIcdExclude" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		select
    			a.reg_Spaj SPAJ,b.lic_id KODE, C.LIC_DESC NAMA_ICD,
   				C.LIC_CATEGORY KATEGORI,
    			(case 
      			  	 when b.mste_insured_no=1 then 'TERTANGGUNG 2'
       				 when b.mste_insured_no=2 then 'TERTANGGUNG 3'
       				 when b.mste_insured_no=3 then 'TERTANGGUNG 4'
       				 when b.mste_insured_no=4 then 'TERTANGGUNG 5' else 'TERTANGGUNG UTAMA' end)JENIS
		from
    			eka.mst_policy a,
   			    eka.mst_det_icd b,
    			eka.lst_icd c
		where
   				 a.reg_Spaj = #no_spaj#
   				 and a.reg_Spaj = b.reg_Spaj
   				 and B.LIC_ID = c.lic_id
		
	</select>
	
	<parameterMap id="prosedurEndorsment" class="java.util.Map">         
		<parameter property="spaj" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="lsbs" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN" />	
	</parameterMap>
	
	<procedure id="elions.uw.prosesEndorsmentKetinggalanNew" parameterMap="prosedurEndorsment">      	 
		   { call eka.PROSES_SPEEDY_PHASE2.proses_endorsment(?, ?) } 
		 <!--  { call eka.proses_speedy.proses_endorsment(?, ?) }   -->
	</procedure>
	
	<select id="elions.uw.selectPunyaEndorsEkaSehatAdmedika" parameterClass="string" resultClass="int">
		SELECT count(*)
		  FROM eka.mst_endors
		 WHERE reg_spaj = rpad(replace(#value#,'.'),11,' ')
		   AND msen_auto_rider = 5
	</select>
	
	<select id="elions.uw.selectMstTransHistoryNewBussines" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select * from eka.mst_trans_history where jenis = 23 and reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectSnowsError" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select b.*
		from eka.mst_policy a, eka.mst_inbox b
		where a.reg_spaj = b.reg_spaj 
			and b.lspd_id is null
			and b.lspd_id_from = 202
			and mi_pos = 2
			and mi_desc = 'FILLING'
			and ljj_id = 21
			and b.lstb_id = 1
			and create_date > '9 maret 2015'
			and lock_id is not null
			and a.lspd_id = #lspd_id#
	</select>
	
	<select id="elions.uw.selectMstInboxHist" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select b.lock_id
        from eka.mst_inbox a, eka.mst_inbox_hist b
        where a.mi_id = b.mi_id
	        and a.mi_id = #mi_id#
	         <isEqual property="flag" compareValue="0">
	        	and b.lspd_after = a.lspd_id_from
        	</isEqual>
        	<isEqual property="flag" compareValue="1">
	        	and b.lspd_after = #lspd_after#
        	</isEqual>
	        and rownum = 1
        order by b.create_date desc
	</select>
	
	<select id="elions.uw.selectMstInboxNewProduct" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
        select distinct a.mi_id, (case when a.no_reff is null then  b.no_blanko else a.no_reff end) no_reff, reg_spaj, lspd_id, lspd_id_from
	    from eka.mst_inbox a, eka.mst_inbox_det b
	    where a.mi_id = b.mi_id(+)
		    and a.ljj_id = 25
		    and a.no_reff != '0'
		    and REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(no_reff,'.'),'-'),' '),CHR(13)),CHR(10)) = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(#no_blanko#,'.'),'-'),' '),CHR(13)),CHR(10))
    </select>
	
   	<select id="elions.uw.selectAutomatedUw"  parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select 
		    '1' no_urut,'Jumlah SPAJ yang diterima di bulan tersebut' ket, count(reg_spaj) total
		from 
		    eka.mst_policy a
		where
		    a.lstb_id = 1
		    and a.mspo_input_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
		union
		select 
		    '2' no_urut,'Jumlah SPAJ yang diproses di bulan tersebut' ket, sum((a.total+b.total)-c.total) total
		from
		    (select 
		        count(a.reg_spaj) total
		    from
		        eka.mst_policy a,
		        eka.mst_trans_history b,
		        (select distinct reg_spaj, min(msps_date)msps_date
		        from eka.mst_position_spaj where lspd_id = 27
		        group by reg_spaj)c
		    where
		        a.reg_spaj = b.reg_spaj
		        and a.reg_spaj = c.reg_spaj
		        AND a.lspd_id not in (1,95)
		        AND c.msps_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
		        and a.lstb_id = 1
		        and b.jenis = 23)a,
		    (select count(a.reg_spaj) total 
		    from eka.mst_policy a, eka.mst_trans_history b
		    where a.reg_spaj = b.reg_spaj  
		    and b.jenis = 23
		    and a.lstb_id = 1
		    and b.tgl_transfer_uw between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1)b, 
		    (select count(a.reg_spaj) total
		    from
		        eka.mst_policy a,
		        eka.mst_trans_history b,
		        (select reg_spaj, min(msps_date)msps_date
		        from eka.mst_position_spaj where lspd_id = 27
		        group by reg_spaj)c
		    where
		        a.reg_spaj = b.reg_spaj
		        and a.reg_spaj = c.reg_spaj
		        AND a.lspd_id not in (1,95)
		        AND c.msps_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
		        and b.jenis = 23
		        and a.lstb_id = 1
		        AND a.reg_spaj in
		        (
		            select reg_spaj from eka.mst_trans_history
		            where reg_spaj = a.reg_spaj
		            and tgl_transfer_uw between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
		        ))c       
		union
		select '3' no_urut,'Jumlah SPAJ yang diterima dan diproses di bulan tersebut' ket,  sum((a.total+c.total)-b.total) total
		from
		(select 
		        count(a.reg_spaj) total
		    from
		        eka.mst_policy a,
		        eka.mst_trans_history b,
		        (select distinct reg_spaj, min(msps_date)msps_date
		        from eka.mst_position_spaj where lspd_id = 27
		        group by reg_spaj)c
		    where
		        a.reg_spaj = b.reg_spaj
		        and a.reg_spaj = c.reg_spaj
		        AND a.lspd_id not in (1,95)
		        AND c.msps_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
		        and B.TGL_TRANSFER_UW_SPEEDY between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
		        and a.lstb_id= 1
		        and b.jenis = 23)a,
		(select 
		        count(a.reg_spaj) total
		    from
		        eka.mst_policy a,
		        eka.mst_trans_history b,
		        (select distinct reg_spaj, min(msps_date)msps_date
		        from eka.mst_position_spaj where lspd_id = 27
		        group by reg_spaj)c
		    where
		        a.reg_spaj = b.reg_spaj
		        and a.reg_spaj = c.reg_spaj
		        AND a.lspd_id not in (1,95)
		        AND c.msps_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
		        and B.TGL_TRANSFER_UW_SPEEDY between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
		        and a.lstb_id= 1
		        and b.jenis = 23
		        and a.reg_spaj in
		        (   
		            select a.reg_spaj
		            from
		                eka.mst_policy a,
		                eka.mst_trans_history b,
		                (select distinct reg_spaj, min(msps_date)msps_date
		                from eka.mst_position_spaj where lspd_id = 2
		                group by reg_spaj)c
		            where
		                a.reg_spaj = b.reg_spaj
		                and a.reg_spaj = c.reg_spaj
		                AND a.lspd_id not in (1,27,95)
		                AND c.msps_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
		                and B.TGL_TRANSFER_UW between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
		                and a.lstb_id= 1
		                and b.jenis = 23))b,
		(select 
		        count(a.reg_spaj) total
		    from
		        eka.mst_policy a,
		        eka.mst_trans_history b,
		        (select distinct reg_spaj, min(msps_date)msps_date
		        from eka.mst_position_spaj where lspd_id = 2
		        group by reg_spaj)c
		    where
		        a.reg_spaj = b.reg_spaj
		        and a.reg_spaj = c.reg_spaj
		        AND a.lspd_id not in (1,27,95)
		        AND c.msps_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
		        and B.TGL_TRANSFER_UW between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
		        and a.lstb_id= 1
		        and b.jenis = 23)c              
		union    
		select
		    '4' no_urut, 'Jumlah SPAJ yang diproses menggunakan Automatic UW (clean case)' ket, count(a.reg_spaj) total
		from 
		    eka.mst_position_Spaj a, eka.mst_policy b, eka.mst_insured c
		where 
		    a.reg_spaj = b.reg_spaj
		    and b.reg_spaj = c.reg_spaj
		    and c.flag_speedy = 1
		    and a.lspd_id = 27
		    and a.msps_date = (select min(msps_date) from eka.mst_position_spaj x where x.reg_spaj = a.reg_spaj and x.lspd_id = 27 )
		    and b.lstb_id = 1
		    and a.msps_date between to_date(#bdate#,'dd/MM/yyyy') and to_date(#edate#,'dd/MM/yyyy')+1
	</select>
	
	<select id="elions.uw.selectMstPaymentAll" parameterClass="java.lang.String" resultClass="com.ekalife.elions.model.Payment">
		select * from eka.mst_payment where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectSpajPAPosisiPayment" parameterClass="string" resultClass="java.util.HashMap">
		select a.reg_spaj spaj, a.mspo_policy_no no_polis, d.lsdbs_name nama_produk, f.mcl_first nama_pemegang,
			sum(e.msdb_premium) premium
		from eka.mst_policy a, eka.mst_insured b, eka.mst_product_insured c,
			eka.lst_det_bisnis d, eka.mst_det_billing e, eka.mst_client_new f
		where a.reg_spaj = b.reg_spaj
		    and a.reg_spaj = c.reg_spaj
		    and a.reg_spaj = e.reg_spaj
		    and a.mspo_policy_holder = f.mcl_id
		    and a.lspd_id = 4
		    and b.mste_no_vacc is not null
		    and c.lsbs_id = d.lsbs_id
		    and c.lsdbs_number = d.lsdbs_number
		    and c.lsbs_id = 73
		    and c.lsdbs_number in (13,14)
		    and not exists (select 1 from eka.mst_payment where reg_spaj = a.reg_spaj)
		group by a.reg_spaj, a.mspo_policy_no, d.lsdbs_name, f.mcl_first
	</select>
	
	<select id="elions.uw.selectDataPolisNpw"  resultClass="java.util.HashMap" parameterClass="string">
         select
                a.reg_Spaj as SPAJ,
                (EKA.UTILS.PEMEGANG(a.reg_Spaj) ||'/'|| eka.utils.tertanggung(a.reg_spaj))PPTG,
                b.lspd_id as LSPID_BEFORE,
                C.LSPD_POSITION as NAMA_POSITION,
                D.STATUS_ACCEPT as STATUS
            from
                eka.mst_policy a,
                eka.mst_insured b,
                EKA.LST_DOCUMENT_POSITION c,
                EKA.LST_STATUS_ACCEPT d
            where
                a.reg_Spaj=b.reg_Spaj
                and b.lspd_id=C.LSPD_ID
                and b.lssa_id=D.LSSA_ID
                and a.lspd_id <![CDATA[<>]]> 95
              <!--   and a.lspd_id=999 
                and a.lssp_id=29  -->              
                and a.reg_Spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectDataKuisionerCerdas" parameterClass="string" resultClass="java.util.HashMap">
		select
		*
		from
		(select to_char (answer)delapan1desc from eka.mst_question_answer  where question_id=81 and option_type=0 and option_group =0 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)delapan1pp from eka.mst_question_answer  where question_id=81 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)delapan1tt from eka.mst_question_answer  where question_id=81 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select to_char (answer)delapan2desc from eka.mst_question_answer  where question_id=82 and option_type=0 and option_group =0 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)delapan2pp from eka.mst_question_answer  where question_id=82 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)delapan2tt from eka.mst_question_answer  where question_id=82 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)delapan4pp from eka.mst_question_answer  where question_id=84 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)delapan4tt from eka.mst_question_answer  where question_id=84 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)delapan5pp from eka.mst_question_answer  where question_id=85 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)delapan5tt from eka.mst_question_answer  where question_id=85 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)delapan6pp from eka.mst_question_answer  where question_id=86 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)delapan6tt from eka.mst_question_answer  where question_id=86 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)delapan7pp from eka.mst_question_answer  where question_id=87 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)delapan7tt from eka.mst_question_answer  where question_id=87 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)delapan8pp from eka.mst_question_answer  where question_id=88 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)delapan8tt from eka.mst_question_answer  where question_id=88 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select to_char (answer)delapan9desc from eka.mst_question_answer  where question_id=89 and option_type=0 and option_group =0 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)delapan9pp from eka.mst_question_answer  where question_id=89 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)delapan9tt from eka.mst_question_answer  where question_id=89 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilanpuluhpp from eka.mst_question_answer  where question_id=90 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilanpuluhtt from eka.mst_question_answer  where question_id=90 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan1pp from eka.mst_question_answer  where question_id=91 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan1tt from eka.mst_question_answer  where question_id=91 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan2pp from eka.mst_question_answer  where question_id=92 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan2tt from eka.mst_question_answer  where question_id=92 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan3pp from eka.mst_question_answer  where question_id=93 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan3tt from eka.mst_question_answer  where question_id=93 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan4pp from eka.mst_question_answer  where question_id=94 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan4tt from eka.mst_question_answer  where question_id=94 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan5pp from eka.mst_question_answer  where question_id=95 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan5tt from eka.mst_question_answer  where question_id=95 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan6pp from eka.mst_question_answer  where question_id=96 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan6tt from eka.mst_question_answer  where question_id=96 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan7pp from eka.mst_question_answer  where question_id=97 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan7tt from eka.mst_question_answer  where question_id=97 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan8pp from eka.mst_question_answer  where question_id=98 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan8tt from eka.mst_question_answer  where question_id=98 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan9pp from eka.mst_question_answer  where question_id=99 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)sembilan9tt from eka.mst_question_answer  where question_id=99 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select to_char (answer)seratusdesc from eka.mst_question_answer  where question_id=100 and option_type=0 and option_group =0 and key_id=#value#),
		(select to_char (answer)seratus1desc from eka.mst_question_answer  where question_id=101 and option_type=0 and option_group =0 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)seratus1pp from eka.mst_question_answer  where question_id=101 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)seratus1tt from eka.mst_question_answer  where question_id=101 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select to_char (answer)seratus2desc from eka.mst_question_answer  where question_id=101 and option_type=0 and option_group =0 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)seratus2pp from eka.mst_question_answer  where question_id=102 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)seratus2tt from eka.mst_question_answer  where question_id=102 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select to_char (answer)seratus3desc from eka.mst_question_answer  where question_id=103 and option_type=0 and option_group =0 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)seratus3pp from eka.mst_question_answer  where question_id=103 and option_type=1 and option_group =1 and option_order=1 and key_id=#value#),
		(select (case when to_char(answer)='1'then 'YA' else 'TIDAK' end)seratus3tt from eka.mst_question_answer  where question_id=103 and option_type=1 and option_group =2 and option_order=1 and key_id=#value#),
		(select to_char (answer)seratus4pptg from eka.mst_question_answer  where question_id=104 and option_type=4 and option_group =1 and option_order=1 and key_id=#value#),
		(select to_char (answer)seratus4ppbb from eka.mst_question_answer  where question_id=104 and option_type=4 and option_group =1 and option_order=2 and key_id=#value#),
		(select to_char (answer)seratus4tttg from eka.mst_question_answer  where question_id=104 and option_type=4 and option_group =2 and option_order=1 and key_id=#value#),
		(select to_char (answer)seratus4ttbb from eka.mst_question_answer  where question_id=104 and option_type=4 and option_group =2 and option_order=2 and key_id=#value#),
		(select tgl_verification_date verified from eka.mst_spaj_temp where reg_spaj=#value#)
	</select>
	
	<select id="elions.uw.selectTransToFillingBSM" resultClass="java.util.HashMap">
        select a.reg_spaj 
        from eka.mst_policy a, eka.mst_reff_bii b, eka.mst_trans_history c, eka.lst_user d
        where a.reg_spaj = b.reg_spaj
            and a.reg_spaj = c.reg_spaj
            and b.lus_id = d.lus_id
            and a.lspd_id = 6
            and a.mspo_date_print is not null
            and b.level_id = 4
            and b.no_urut = (select max(no_urut) from eka.mst_reff_bii where level_id = 4 and reg_spaj = a.reg_spaj)
            and c.jenis = 23
            and c.tgl_transfer_uw_speedy is not null
            and d.jn_bank = 2
            and (select nvl(sum(decode(tgl_print, null, 0, 1)), 0) from eka.mst_checklist where reg_spaj = a.reg_spaj) > 0
        order by a.mspo_date_print desc
	</select>
	
	<select id="elions.uw.selectReportSLPolicyIssued" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	    SELECT   *
		    FROM   (SELECT   dist,
		                     reg_spaj,
		                     lsdbs_name,
		                     mste_tgl_terima_spaj,
		                     mste_tgl_spaj_doc,
		                     mste_tgl_aksep,
		                     mste_tgl_valid_print,
		                     mspo_date_print,
		                     mste_tgl_kirim_polis,
		                     lsrg_nama,
		                     (CASE
		                         WHEN lama_proses_nab <![CDATA[<=]]> 0 THEN 0
		                         ELSE lama_proses_nab
		                      END)
		                        lama_proses_nab,
		                     jn_bank,
		                     NVL (lama_nab_harian, 0) lama_nab_harian,
		                     NVL (
		                        (CASE
		                            WHEN TO_NUMBER (SUBSTR (lama_nab_harian, 1, 2)) <![CDATA[<]]> 0
		                            THEN
		                               0
		                            ELSE
		                               TO_NUMBER (SUBSTR (lama_nab_harian, 1, 2))
		                         END),
		                        0
		                     )
		                        jam_nab_harian,
		                     NVL (mspo_provider, 0) mspo_provider,
		                     lama_proses_nab1,
		                     lama_pending,
		                     SYSDATE,
		                     lsbs_id,
		                     lsdbs_number,
		                     lca_id,
		                     flag_ws
		              FROM   (SELECT   DECODE (
		                                  b.lca_id,
		                                  '09',
		                                  'Bancassurance',
		                                  '08',
		                                  'Worksite',
		                                  '42',
		                                  'Worksite',
		                                  '58',
		                                  'MallAssurance',
		                                  '62',
		                                  'MNC',
		                                  '65',
		                                  'FCD',
		                                  DECODE (g.lsgb_id,
		                                          17, 'Agency (UNIT LINK)',
		                                          'Agency')
		                               )
		                                  dist,
		                               b.reg_spaj,
		                               (CASE
		                                   WHEN     h.jn_bank = 2
		                                        AND c.lsbs_id = 142
		                                        AND c.lsdbs_number = 2
		                                   THEN
		                                      'SIMAS PRIMA'
		                                   WHEN     h.jn_bank = 2
		                                        AND c.lsbs_id = 158
		                                        AND c.lsdbs_number = 6
		                                   THEN
		                                      'SIMAS PRIMA MANFAAT BULANAN'
		                                   WHEN     h.jn_bank = 2
		                                        AND c.lsbs_id = 175
		                                        AND c.lsdbs_number = 2
		                                   THEN
		                                      'SIMAS PRIMA SYARIAH'
		                                   ELSE
		                                      d.lsdbs_name
		                                END)
		                                  lsdbs_name,
		                               a.mste_tgl_terima_spaj,
		                               a.mste_tgl_valid_print,
		                               a.mste_tgl_spaj_doc,
		                               a.mste_tgl_aksep,
		                               b.mspo_date_print,
		                               a.mste_tgl_kirim_polis,
		                               e.lsrg_nama,
		                               (SELECT   eka.workdays (
		                                            (CASE
		                                                WHEN a.mste_tgl_terima_spaj IS NULL
		                                                THEN
		                                                   a.mste_tgl_spaj_doc
		                                                WHEN a.mste_tgl_spaj_doc IS NULL
		                                                THEN
		                                                   a.mste_tgl_spaj_doc
		                                                WHEN (a.mste_tgl_terima_spaj <![CDATA[>=]]>
		                                                         TO_DATE (
		                                                            TO_CHAR (
		                                                               mste_tgl_terima_spaj,
		                                                               'dd/mm/yyyy'
		                                                            )
		                                                            || ' 12:00:00',
		                                                            'dd/mm/yyyy hh24:mi:ss'
		                                                         )
		                                                      AND TO_CHAR (
		                                                            a.mste_tgl_terima_spaj,
		                                                            'dd/mm/yyyy'
		                                                         ) =
		                                                            TO_CHAR (
		                                                               a.mste_tgl_kirim_polis
		                                                               + 1,
		                                                               'dd/mm/yyyy'
		                                                            )
		                                                      AND TO_CHAR (
		                                                            a.mste_tgl_terima_spaj,
		                                                            'dd/mm/yyyy'
		                                                         ) =
		                                                            TO_CHAR (
		                                                               a.mste_tgl_spaj_doc,
		                                                               'dd/mm/yyyy'
		                                                            ))
		                                                     OR (a.mste_tgl_terima_spaj <![CDATA[>=]]>
		                                                            TO_DATE (
		                                                               TO_CHAR (
		                                                                  mste_tgl_terima_spaj,
		                                                                  'dd/mm/yyyy'
		                                                               )
		                                                               || ' 12:00:00',
		                                                               'dd/mm/yyyy hh24:mi:ss'
		                                                            )
		                                                         AND TO_CHAR (
		                                                               a.mste_tgl_terima_spaj,
		                                                               'dd/mm/yyyy'
		                                                            ) =
		                                                               TO_CHAR (
		                                                                  a.mste_tgl_kirim_polis
		                                                                  + 1,
		                                                                  'dd/mm/yyyy'
		                                                               )
		                                                         AND TO_CHAR (
		                                                               a.mste_tgl_terima_spaj,
		                                                               'dd/mm/yyyy'
		                                                            ) =
		                                                               TO_CHAR (
		                                                                  a.mste_tgl_spaj_doc
		                                                                  + 1,
		                                                                  'dd/mm/yyyy'
		                                                               ))
		                                                     OR (a.mste_tgl_terima_spaj <![CDATA[<=]]>
		                                                            TO_DATE (
		                                                               TO_CHAR (
		                                                                  mste_tgl_terima_spaj,
		                                                                  'dd/mm/yyyy'
		                                                               )
		                                                               || ' 12:00:00',
		                                                               'dd/mm/yyyy hh24:mi:ss'
		                                                            )
		                                                         AND TO_CHAR (
		                                                               a.mste_tgl_terima_spaj,
		                                                               'dd/mm/yyyy'
		                                                            ) =
		                                                               TO_CHAR (
		                                                                  a.mste_tgl_kirim_polis,
		                                                                  'dd/mm/yyyy'
		                                                               )
		                                                         AND TO_CHAR (
		                                                               a.mste_tgl_terima_spaj,
		                                                               'dd/mm/yyyy'
		                                                            ) =
		                                                               TO_CHAR (
		                                                                  a.mste_tgl_spaj_doc,
		                                                                  'dd/mm/yyyy'
		                                                               ))
		                                                     OR (a.mste_tgl_terima_spaj <![CDATA[>=]]>
		                                                            TO_DATE (
		                                                               TO_CHAR (
		                                                                  mste_tgl_terima_spaj,
		                                                                  'dd/mm/yyyy'
		                                                               )
		                                                               || ' 12:00:00',
		                                                               'dd/mm/yyyy hh24:mi:ss'
		                                                            ))
		                                                THEN
		                                                   a.mste_tgl_spaj_doc + 1
		                                                ELSE
		                                                   a.mste_tgl_spaj_doc
		                                             END),
		                                            (CASE
		                                                WHEN h.jn_bank = 2
		                                                THEN
		                                                   (SELECT   MIN (msps_date)
		                                                                msps_date
		                                                      FROM   eka.mst_position_spaj
		                                                     WHERE   reg_spaj =
		                                                                a.reg_spaj
		                                                             AND lssa_id IN
		                                                                      ('5',
		                                                                       '10'))
		                                                ELSE
		                                                   NVL (a.mste_tgl_valid_print,
		                                                        a.mste_tgl_kirim_polis)
		                                             END)
		                                         )
		                                         - 1
		                                  FROM   DUAL)
		                                  lama_proses_nab,
		                               i.lama_proses_terbit lama_nab_harian,
		                               b.mspo_provider,
		                               (SELECT   eka.workdays (
		                                            b.mspo_next_bill,
		                                            (CASE
		                                                WHEN h.jn_bank = 2
		                                                THEN
		                                                   (SELECT   MIN (msps_date)
		                                                                msps_date
		                                                      FROM   eka.mst_position_spaj
		                                                     WHERE   reg_spaj =
		                                                                a.reg_spaj
		                                                             AND lssa_id IN
		                                                                      ('5',
		                                                                       '10'))
		                                                ELSE
		                                                   NVL (a.mste_tgl_valid_print,
		                                                        a.mste_tgl_kirim_polis)
		                                             END)
		                                         )
		                                  FROM   DUAL)
		                                  lama_proses_nab1,
		                               (SELECT   eka.workdays (a.mste_tgl_terima_spaj,
		                                                       SYSDATE)
		                                  FROM   DUAL)
		                                  lama_pending,
		                               SYSDATE,
		                               d.lsbs_id,
		                               d.lsdbs_number,
		                               h.jn_bank,
		                               b.lca_id,
		                               DECODE (b.lca_id, '42', 1, 0) flag_ws
		                        FROM   eka.mst_insured a,
		                               eka.mst_policy b,
		                               eka.mst_product_insured c,
		                               eka.lst_det_bisnis d,
		                               eka.lst_region e,
		                               eka.lst_bisnis g,
		                               eka.lst_user h,
		                               eka.mst_trans_history i
		                       WHERE       b.reg_spaj = a.reg_spaj
		                               AND a.reg_spaj = c.reg_spaj
		                               AND a.mste_insured_no = c.mste_insured_no
		                               AND d.lsbs_id = c.lsbs_id
		                               AND d.lsdbs_number = c.lsdbs_number
		                               AND e.lca_id = b.lca_id
		                               AND e.lwk_id = b.lwk_id
		                               AND e.lsrg_id = b.lsrg_id
		                               AND a.reg_spaj = i.reg_spaj
		                               AND i.jenis = 23
		                               AND c.lsbs_id <![CDATA[<]]> 300
		                               AND (a.mste_tgl_kirim_polis BETWEEN #tanggalAwal# AND #tanggalAkhir#)
		                               AND b.lstb_id = 1
		                               AND c.lsbs_id = g.lsbs_id
		                               AND b.lus_id = h.lus_id)
		            UNION ALL
		            SELECT   dist,
		                     reg_spaj,
		                     lsdbs_name,
		                     mste_tgl_terima_spaj,
		                     mste_tgl_spaj_doc,
		                     mste_tgl_aksep,
		                     mste_tgl_valid_print,
		                     mspo_date_print,
		                     mste_tgl_kirim_polis,
		                     lsrg_nama,
		                     (CASE
		                         WHEN lama_proses_nab <![CDATA[<=]]> 0 THEN 0
		                         ELSE lama_proses_nab
		                      END)
		                        lama_proses_nab,
		                     jn_bank,
		                     NVL (lama_nab_harian, 0) lama_nab_harian,
		                     NVL (
		                        (CASE
		                            WHEN TO_NUMBER (SUBSTR (lama_nab_harian, 1, 2)) <![CDATA[<]]> 0
		                            THEN
		                               0
		                            ELSE
		                               TO_NUMBER (SUBSTR (lama_nab_harian, 1, 2))
		                         END),
		                        0
		                     )
		                        jam_nab_harian,
		                     NVL (mspo_provider, 0) mspo_provider,
		                     lama_proses_nab1,
		                     lama_pending,
		                     SYSDATE,
		                     lsbs_id,
		                     lsdbs_number,
		                     lca_id,
		                     flag_ws
		              FROM   (SELECT   DECODE (
		                                  b.lca_id,
		                                  '09',
		                                  'Bancassurance',
		                                  '08',
		                                  'Worksite',
		                                  '42',
		                                  'Worksite',
		                                  '58',
		                                  'MallAssurance',
		                                  '62',
		                                  'MNC',
		                                  '65',
		                                  'FCD',
		                                  DECODE (g.lsgb_id,
		                                          17, 'Agency (UNIT LINK)',
		                                          'Agency')
		                               )
		                                  dist,
		                               b.reg_spaj,
		                               (CASE
		                                   WHEN     h.jn_bank = 2
		                                        AND c.lsbs_id = 142
		                                        AND c.lsdbs_number = 2
		                                   THEN
		                                      'SIMAS PRIMA'
		                                   WHEN     h.jn_bank = 2
		                                        AND c.lsbs_id = 158
		                                        AND c.lsdbs_number = 6
		                                   THEN
		                                      'SIMAS PRIMA MANFAAT BULANAN'
		                                   WHEN     h.jn_bank = 2
		                                        AND c.lsbs_id = 175
		                                        AND c.lsdbs_number = 2
		                                   THEN
		                                      'SIMAS PRIMA SYARIAH'
		                                   ELSE
		                                      d.lsdbs_name
		                                END)
		                                  lsdbs_name,
		                               a.mste_tgl_terima_spaj,
		                               a.mste_tgl_valid_print,
		                               a.mste_tgl_spaj_doc,
		                               a.mste_tgl_aksep,
		                               b.mspo_date_print,
		                               a.mste_tgl_kirim_polis,
		                               e.lsrg_nama,
		                               (SELECT   eka.workdays (
		                                            (CASE
		                                                WHEN a.mste_tgl_terima_spaj IS NULL
		                                                THEN
		                                                   a.mste_tgl_spaj_doc
		                                                WHEN a.mste_tgl_spaj_doc IS NULL
		                                                THEN
		                                                   a.mste_tgl_spaj_doc
		                                                WHEN (a.mste_tgl_terima_spaj <![CDATA[>=]]>
		                                                         TO_DATE (
		                                                            TO_CHAR (
		                                                               mste_tgl_terima_spaj,
		                                                               'dd/mm/yyyy'
		                                                            )
		                                                            || ' 12:00:00',
		                                                            'dd/mm/yyyy hh24:mi:ss'
		                                                         )
		                                                      AND TO_CHAR (
		                                                            a.mste_tgl_terima_spaj,
		                                                            'dd/mm/yyyy'
		                                                         ) =
		                                                            TO_CHAR (
		                                                               a.mste_tgl_kirim_polis
		                                                               + 1,
		                                                               'dd/mm/yyyy'
		                                                            )
		                                                      AND TO_CHAR (
		                                                            a.mste_tgl_terima_spaj,
		                                                            'dd/mm/yyyy'
		                                                         ) =
		                                                            TO_CHAR (
		                                                               a.mste_tgl_spaj_doc,
		                                                               'dd/mm/yyyy'
		                                                            ))
		                                                     OR (a.mste_tgl_terima_spaj <![CDATA[>=]]>
		                                                            TO_DATE (
		                                                               TO_CHAR (
		                                                                  mste_tgl_terima_spaj,
		                                                                  'dd/mm/yyyy'
		                                                               )
		                                                               || ' 12:00:00',
		                                                               'dd/mm/yyyy hh24:mi:ss'
		                                                            )
		                                                         AND TO_CHAR (
		                                                               a.mste_tgl_terima_spaj,
		                                                               'dd/mm/yyyy'
		                                                            ) =
		                                                               TO_CHAR (
		                                                                  a.mste_tgl_kirim_polis
		                                                                  + 1,
		                                                                  'dd/mm/yyyy'
		                                                               )
		                                                         AND TO_CHAR (
		                                                               a.mste_tgl_terima_spaj,
		                                                               'dd/mm/yyyy'
		                                                            ) =
		                                                               TO_CHAR (
		                                                                  a.mste_tgl_spaj_doc
		                                                                  + 1,
		                                                                  'dd/mm/yyyy'
		                                                               ))
		                                                     OR (a.mste_tgl_terima_spaj <![CDATA[<=]]>
		                                                            TO_DATE (
		                                                               TO_CHAR (
		                                                                  mste_tgl_terima_spaj,
		                                                                  'dd/mm/yyyy'
		                                                               )
		                                                               || ' 12:00:00',
		                                                               'dd/mm/yyyy hh24:mi:ss'
		                                                            )
		                                                         AND TO_CHAR (
		                                                               a.mste_tgl_terima_spaj,
		                                                               'dd/mm/yyyy'
		                                                            ) =
		                                                               TO_CHAR (
		                                                                  a.mste_tgl_kirim_polis,
		                                                                  'dd/mm/yyyy'
		                                                               )
		                                                         AND TO_CHAR (
		                                                               a.mste_tgl_terima_spaj,
		                                                               'dd/mm/yyyy'
		                                                            ) =
		                                                               TO_CHAR (
		                                                                  a.mste_tgl_spaj_doc,
		                                                                  'dd/mm/yyyy'
		                                                               ))
		                                                     OR (a.mste_tgl_terima_spaj <![CDATA[>=]]>
		                                                            TO_DATE (
		                                                               TO_CHAR (
		                                                                  mste_tgl_terima_spaj,
		                                                                  'dd/mm/yyyy'
		                                                               )
		                                                               || ' 12:00:00',
		                                                               'dd/mm/yyyy hh24:mi:ss'
		                                                            ))
		                                                THEN
		                                                   a.mste_tgl_spaj_doc + 1
		                                                ELSE
		                                                   a.mste_tgl_spaj_doc
		                                             END),
		                                            (CASE
		                                                WHEN h.jn_bank = 2
		                                                THEN
		                                                   (SELECT   MIN (msps_date)
		                                                                msps_date
		                                                      FROM   eka.mst_position_spaj
		                                                     WHERE   reg_spaj =
		                                                                a.reg_spaj
		                                                             AND lssa_id IN
		                                                                      ('5',
		                                                                       '10'))
		                                                ELSE
		                                                   NVL (a.mste_tgl_valid_print,
		                                                        a.mste_tgl_kirim_polis)
		                                             END)
		                                         )
		                                         - 1
		                                  FROM   DUAL)
		                                  lama_proses_nab,
		                               i.lama_proses_terbit lama_nab_harian,
		                               b.mspo_provider,
		                               (SELECT   eka.workdays (
		                                            b.mspo_next_bill,
		                                            (CASE
		                                                WHEN h.jn_bank = 2
		                                                THEN
		                                                   (SELECT   MIN (msps_date)
		                                                                msps_date
		                                                      FROM   eka.mst_position_spaj
		                                                     WHERE   reg_spaj =
		                                                                a.reg_spaj
		                                                             AND lssa_id IN
		                                                                      ('5',
		                                                                       '10'))
		                                                ELSE
		                                                   NVL (a.mste_tgl_valid_print,
		                                                        a.mste_tgl_kirim_polis)
		                                             END)
		                                         )
		                                  FROM   DUAL)
		                                  lama_proses_nab1,
		                               (SELECT   eka.workdays (a.mste_tgl_terima_spaj,
		                                                       SYSDATE)
		                                  FROM   DUAL)
		                                  lama_pending,
		                               SYSDATE,
		                               d.lsbs_id,
		                               d.lsdbs_number,
		                               h.jn_bank,
		                               b.lca_id,
		                               DECODE (b.lca_id, '42', 1, 0) flag_ws
		                        FROM   eka.mst_insured a,
		                               eka.mst_policy b,
		                               eka.mst_product_insured c,
		                               eka.lst_det_bisnis d,
		                               eka.lst_region e,
		                               eka.lst_bisnis g,
		                               eka.lst_user h,
		                               eka.mst_trans_history i
		                       WHERE       b.reg_spaj = a.reg_spaj
		                               AND a.reg_spaj = c.reg_spaj
		                               AND a.mste_insured_no = c.mste_insured_no
		                               AND d.lsbs_id = c.lsbs_id
		                               AND d.lsdbs_number = c.lsdbs_number
		                               AND e.lca_id = b.lca_id
		                               AND e.lwk_id = b.lwk_id
		                               AND e.lsrg_id = b.lsrg_id
		                               AND a.reg_spaj = i.reg_spaj
		                               AND i.jenis = 23
		                               AND c.lsbs_id <![CDATA[<]]> 300
		                               AND (a.mste_tgl_kirim_polis BETWEEN #tanggalAwal# AND #tanggalAkhir#)
		                               AND b.lstb_id = 1
		                               AND c.lsbs_id = g.lsbs_id
		                               AND b.lus_id = h.lus_id
		                               AND A.REG_SPAJ NOT IN
		                                        (SELECT   reg_spaj
		                                           FROM   (SELECT   b.reg_spaj
		                                                     FROM   eka.mst_insured a,
		                                                            eka.mst_policy b,
		                                                            eka.mst_product_insured c,
		                                                            eka.lst_det_bisnis d,
		                                                            eka.lst_region e,
		                                                            eka.lst_bisnis g,
		                                                            eka.lst_user h
		                                                    WHERE   b.reg_spaj =
		                                                               a.reg_spaj
		                                                            AND a.reg_spaj =
		                                                                  c.reg_spaj
		                                                            AND a.mste_insured_no =
		                                                                  c.mste_insured_no
		                                                            AND d.lsbs_id =
		                                                                  c.lsbs_id
		                                                            AND d.lsdbs_number =
		                                                                  c.lsdbs_number
		                                                            AND e.lca_id =
		                                                                  b.lca_id
		                                                            AND e.lwk_id =
		                                                                  b.lwk_id
		                                                            AND e.lsrg_id =
		                                                                  b.lsrg_id
		                                                            AND c.lsbs_id <![CDATA[<]]> 300
		                                                            AND (a.mste_tgl_kirim_polis BETWEEN #tanggalAwal# AND #tanggalAkhir#)
		                                                            AND b.lstb_id = 1
		                                                            AND c.lsbs_id =
		                                                                  g.lsbs_id
		                                                            AND b.lus_id =
		                                                                  h.lus_id))))
		ORDER BY   DECODE (lca_id,
		                   '09', 'Bancassurance',
		                   '08', 'Worksite',
		                   '42', 'Worksite',
		                   '58', 'MallAssurance',
		                   '62', 'MNC',
		                   '65', 'FCD',
		                   'Agency-Regional'),
		           (CASE
		               WHEN jn_bank = 2 AND lsbs_id = 142 AND lsdbs_number = 2
		               THEN
		                  'SIMAS PRIMA'
		               WHEN jn_bank = 2 AND lsbs_id = 158 AND lsdbs_number = 6
		               THEN
		                  'SIMAS PRIMA MANFAAT BULANAN'
		               WHEN jn_bank = 2 AND lsbs_id = 175 AND lsdbs_number = 2
		               THEN
		                  'SIMAS PRIMA SYARIAH'
		               ELSE
		                  lsdbs_name
		            END),
		           reg_spaj,
		           mspo_provider
	</select>
	
	<select id="elions.uw.selectReportSnowsNB" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 	select        
			    a.reg_spaj,         
			    to_char((select msps_date from eka.mst_position_spaj         
        				where         
			            reg_spaj = a.reg_spaj         
			            and (msps_desc like 'TRANSFER KE SPEEDY' or msps_desc like 'AUTOTRANSFER KE UW SPEEDY')        
			            and msps_date = (select max(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj         
			                                    and (msps_desc like 'TRANSFER KE SPEEDY' or msps_desc like 'AUTOTRANSFER KE UW SPEEDY'))),'dd/MM/yyyy') tgl_transfer_speedy,        
			    b.lca_nama,        
			    (select distinct x.lus_full_name         
			        from         
			            eka.lst_user x,        
			            eka.mst_inbox y        
			         where        
			            x.lus_id = y.lock_id        
			            and y.reg_spaj = a.reg_spaj
			            and ljj_id = 21 		          
			    )user_uw_berdasarkan_snow,        
			    eka.utils.pemegang(a.reg_spaj)pemegang,        
			    eka.utils.tertanggung(a.reg_spaj)tertanggung,        
			    d.lspd_position posisi_spaj, g.lsdbs_name produk,        
			    to_char((select msps_date from eka.mst_position_spaj         
			        where         
			            reg_spaj = a.reg_spaj         
			            and msps_desc like 'BACK TRANSFER KE BAS%'        
			            and msps_date = (select max(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj         
			                                    and msps_desc like 'BACK TRANSFER KE BAS%')),'dd/MM/yyyy')tgl_back_to_bas,        
			    (select msps_desc from eka.mst_position_spaj         
			        where         
			            reg_spaj = a.reg_spaj         
			            and msps_desc like 'BACK TRANSFER KE BAS%'        
			            and msps_date = (select max(msps_date) from eka.mst_position_spaj where reg_spaj = a.reg_spaj         
			                                    and msps_desc like 'BACK TRANSFER KE BAS%'))keterangan,        
			    h.status_accept,        
			    i.lssp_status status_polis,        
		 	    f.mspr_tsi UP, e.mste_age usia_tertanggung,
		 	    j.mkl_kerja pekerjaan,
		 	    j.mkl_penghasilan penghasilan,
		 	    j.mkl_pendanaan sumber_dana,
		 	    f.mspr_premium premi_pokok,
		 	    (select x.mu_jlh_premi from eka.mst_ulink x where x.lt_id=5 and x.mu_ke<![CDATA[<=]]>3 and x.reg_spaj =a.reg_spaj)as tub,
    			(select z.mu_jlh_premi from eka.mst_ulink z where z.lt_id=2 and z.mu_ke<![CDATA[<=]]>3 and z.reg_spaj =a.reg_spaj)as tus ,
    			(case 
                   when k.lsbs_linkkon = 2 then 
                        (select sum(y.mu_jlh_premi) from eka.mst_ulink y where y.reg_spaj =a.reg_spaj and y.lt_id in (1,5,2))
                        else f.mspr_premium end)total_premi ,
    			 l.lscb_pay_mode car_bayar          
		   from        
			    eka.mst_policy a,        
			    eka.lst_cabang b,        
			    eka.mst_trans_history c,        
			    eka.lst_document_position d,        
			    eka.mst_insured e,        
			    eka.mst_product_insured  f,        
			    eka.lst_det_bisnis g,        
			    eka.lst_status_accept h,        
			    eka.lst_policy_status i,
			    eka.mst_client_new j,
			    eka.lst_bisnis k,
			    eka.lst_pay_mode l         
		   where        
			    a.lca_id = b.lca_id        
			    and a.reg_spaj = c.reg_spaj        
			    and a.lspd_id = d.lspd_id        
			    and a.reg_spaj = e.reg_spaj        
			    and e.reg_spaj = f.reg_spaj        
			    and e.mste_insured_no = f.mste_insured_no        
			    and f.lsbs_id = g.lsbs_id        
			    and f.lsdbs_number = g.lsdbs_number        
			    and e.lssa_id = h.lssa_id        
			    and a.lssp_id = i.lssp_id        
			    and f.mste_insured_no = 1        
			    and a.lspd_id = 27        
			    and c.jenis = 23 
			    and a.mspo_policy_holder = j.mcl_id 
			    and f.lsbs_id = k.lsbs_id
			    and a.lscb_id = l.lscb_id
			     <isNotEqual property="jenis" compareValue="All">
			    	<isEqual property="jenis" compareValue="1">
			    		and (f.lsbs_id||f.lsdbs_number) in('1429','1752','1422')
			    	</isEqual>
			    	<isEqual property="jenis" compareValue="2">
			    		and (f.lsbs_id||f.lsdbs_number) not in('1429','1752','1422')
			    	</isEqual>			    	
			    </isNotEqual>      
			    and f.lsbs_id <![CDATA[<]]> 300        
		  order by 2      
	</select>
	
	<select id="elions.uw.selectPeriodQHealth" parameterClass="string" resultClass="string">
	    select distinct (case when question_valid_date = to_date('1/9/2015','dd/mm/yyyy') then 'SEP2015' else 'AUG2014' end)
                from eka.mst_question_answer
                where key_id = #value#
                and question_type_id = 3
	</select>
	
	<select id="elions.uw.selectListAttFileFurtherSpeedy" parameterClass="string" resultClass="string">
	    select distinct att_file_further from eka.mst_speedy_history where key_id = #value#
	</select>
	
	<select id="elions.uw.selectReportSlaUwIndividu" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        SELECT x.cabang, x.spaj, x.produk, x.user_uw_individu,
            to_char(x.tgl_transfer_uw, 'dd/MM/yyyy') as tgl_transfer_ke_uw,
            to_char(x.tgl_transfer_uw, 'hh24:mi:ss') as jam_transfer_ke_uw,
            to_char(x.tgl_fund_allocation, 'dd/MM/yyyy') as tgl_fund_allocation,
            to_char(x.tgl_fund_allocation, 'hh24:mi:ss') as jam_fund_allocation,
            to_char(x.tgl_akseptasi_polis, 'dd/MM/yyyy') as tgl_akseptasi_polis, 
            to_char(x.tgl_akseptasi_polis, 'hh24:mi:ss') as jam_akseptasi_polis,
            to_char(x.tgl_transfer_uw_print, 'dd/MM/yyyy') as tgl_transfer_ke_print_polis,
            to_char(x.tgl_transfer_uw_print, 'hh24:mi:ss') as jam_transfer_ke_print_polis,
            to_char(x.tgl_further, 'dd/MM/yyyy') as tgl_further,
            to_char(x.tgl_further, 'hh24:mi:ss') as jam_further,
            eka.hitung_sla_uw_individu(to_date(x.tgl_transfer_uw, 'dd/MM/yyyy hh24:mi:ss'), to_date(x.tgl_transfer_uw_print, 'dd/MM/yyyy hh24:mi:ss'), 1) lama_proses ,
            nvl(eka.hitung_sla_uw_individu(to_date(x.tgl_transfer_uw, 'dd/MM/yyyy hh24:mi:ss'), to_date(x.tgl_transfer_uw_print, 'dd/MM/yyyy hh24:mi:ss'), 2), 0) lama_hari,
            x.keterangan
        FROM (
            select d.lca_nama cabang, a.reg_spaj spaj, eka.f_lsdbs(a.reg_spaj, b.lsbs_id, b.lsdbs_number) produk, upper(e.lus_full_name) user_uw_individu,
                c.tgl_transfer_uw, c.tgl_fund_allocation, c.tgl_akseptasi_polis, c.tgl_transfer_uw_print, c.tgl_further, g.status_accept keterangan
            from eka.mst_policy a, eka.mst_product_insured b, eka.mst_trans_history c, eka.lst_cabang d, eka.lst_user e,
                eka.mst_insured f, eka.lst_status_accept g, eka.mst_position_spaj h
            where a.reg_spaj = b.reg_spaj
                and a.reg_spaj = c.reg_spaj
                and a.reg_spaj = f.reg_spaj
                and a.reg_spaj = h.reg_spaj
                and a.lca_id = d.lca_id
                and a.lspd_id != 95
                and b.lsbs_id <![CDATA[<]]> 300
                and c.jenis = 23
                and c.tgl_transfer_uw between #tanggalAwal# and #tanggalAkhir#
                and e.lus_id = h.lus_id
                <isEqual property="jenis" compareValue="All">
                    and e.lus_id in (717,519,1562)
                </isEqual>
                <isEqual property="jenis" compareValue="1">
                    and e.lus_id = 717
                </isEqual>
                <isEqual property="jenis" compareValue="2">
                    and e.lus_id = 519
                </isEqual>
                <isEqual property="jenis" compareValue="3">
                    and e.lus_id = 1562
                </isEqual>
                and f.lssa_id = g.lssa_id
                and h.msps_date = (case when c.tgl_akseptasi_polis is not null then ( SELECT  MAX(msps_date)  FROM eka.mst_position_spaj WHERE msps_desc like 'AC:%'  AND REG_SPAJ = a.reg_spaj )
                                        else ( SELECT  MAX(msps_date)  FROM eka.mst_position_spaj WHERE msps_desc like 'FR:%'  AND REG_SPAJ = a.reg_spaj ) end) 
        ) x
        ORDER BY x.tgl_akseptasi_polis, x.cabang, x.produk, x.user_uw_individu
	</select>
	
	<select id="elions.uw.selectCabangSinarmasAll" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select * from eka.lst_cabang_bii where jenis=#jenis# and flag_aktif=1 <isNotNull property="lcb_no">and trim(lcb_no) =trim(#lcb_no#) </isNotNull> order by nama_cabang
	</select>
	
	<select id="elions.uw.selectDataNasabahBerdasarkanNoHp" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
        a.*
        from(
        select
        a.reg_Spaj no_register,a.mspo_policy_no no_polis,c.mcl_first nama,D.LUS_FULL_NAME user_input,'0' flag,to_char(a.mspo_input_date,'dd/MM/yyyy')tgl_input,to_char(c.mspe_date_birth,'dd/MM/yyyy')tgl_lahir
        from
        eka.mst_Policy a,
        eka.mst_address_new b,
        eka.mst_client_new c,
        eka.lst_user d
        where a.mspo_Policy_holder=b.mcl_id 
        and a.mspo_Policy_holder = c.mcl_id
        and a.lus_id = d.lus_id
        and not (c.mcl_first like upper('%'||#namaPP#||'%') and C.MSPE_DATE_BIRTH = to_date(#bdate#,'dd/MM/yyyy'))         
        and (replace(replace(b.no_hp,'-',''),'.','')=#no_hp# or replace(replace(b.no_hp2,'-',''),'.','') =#no_hp#)
        and rownum =1
        union
        select
        a.reg_Spaj no_register,a.mspo_policy_no no_polis,c.mcl_first nama,D.LUS_FULL_NAME user_input,'0' flag,to_char(mspo_input_date,'dd/MM/yyyy')tgl_input,to_char(c.mspe_date_birth,'dd/MM/yyyy')tgl_lahir
        from
        eka.mst_Policy a,
        eka.mst_address_billing b,
        eka.mst_client_new c,
        eka.lst_user d
        where a.reg_spaj=b.reg_spaj
        and a.mspo_Policy_holder = c.mcl_id
        and a.lus_id = d.lus_id
        and not (c.mcl_first like upper('%'||#namaPP#||'%') and C.MSPE_DATE_BIRTH = to_date(#bdate#,'dd/MM/yyyy'))         
        and (replace(replace(b.no_hp,'-',''),'.','')=#no_hp#or replace(replace(b.no_hp2,'-',''),'.','') =#no_hp#)
        and rownum =1
        )a
        where
        rownum=1
	</select>
	
	<select id="elions.uw.selectDataAgenBerdasarkanNoHp" parameterClass="string" resultClass="java.util.HashMap">
		select
        a.msag_id no_register,a.msag_id no_polis,c.mcl_first nama,'' user_input,'1' flag,'1'tgl_input
        from
        eka.mst_agent a,
        eka.mst_telfax b,
        eka.mst_client_new c
        where 
        a.mcl_id=b.mcl_id
        and a.mcl_id = c.mcl_id
        and ((b.mste_area_code= substr(#value#,1,4) and B.MSTE_PHONE_NO =substr(#value#,5))or B.MSTE_PHONE_NO=#value#)        
        and rownum=1
	</select>
	
		<select id="elions.uw.selectDaftarSPAJQa"
		resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		<isNull property="lssaId" >
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
			 FROM eka.mst_policy a, eka.mst_inbox b
			 WHERE (a.lspd_id = #posisi#)
			 	AND a.reg_spaj = b.reg_spaj(+)
			   <isEqual property="tipe" compareValue="3">
				   <!-- AND (a.lstb_id in(1,2))  -->
				   AND (a.lstb_id in(1))
			   </isEqual>
			   <isNotEqual property="tipe" compareValue="3">
			   	   AND (a.lstb_id = #tipe#)
			   </isNotEqual>
			   <isNotNull property="jenisTerbit" >
				   AND a.mspo_jenis_terbit=#jenisTerbit#
			   </isNotNull>
			   <isGreaterEqual prepend=" AND " property="posisi" compareValue="3">
			   		a.mspo_policy_no is not null
			   </isGreaterEqual>
			   <isNotNull property="lspdId_Snows" >
                    AND b.lspd_id = #lspdId_Snows#
			   </isNotNull>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
		</isNull>
		<isNotNull property="lssaId" >
			SELECT    a.lca_id,SUBSTR (a.reg_spaj, 1, 2)
			       || '.'
			       || SUBSTR (a.reg_spaj, 3, 4)
			       || '.'
			       || SUBSTR (a.reg_spaj, 7) spaj_formatted,
			       a.reg_spaj, a.mspo_policy_no_format policy_formatted,
			       a.mspo_policy_no, a.lspd_id, a.lstb_id,
			       DECODE (a.mspo_date_print, null, 'rgb(255,255,255)','rgb(255,255,128)') bg,
			       DECODE ( (select msps_desc from eka.mst_position_spaj where a.reg_spaj = reg_spaj and msps_desc = 'OTORISASI INPUT SPAJ' and rownum = 1) , null, 'rgb(255,255,255)','rgb(255,255,128)') otorisasi_bg
			  FROM eka.mst_policy a,
			  	   eka.mst_insured b,
			  	   eka.mst_inbox c
			 WHERE a.reg_spaj=b.reg_spaj
			   AND a.lspd_id $posisi$ 
			   AND a.lstb_id = #tipe#
			   AND b.lssa_id=#lssaId#
			   AND a.reg_spaj = c.reg_spaj(+)
			   <isNotNull property="jenisTerbit" >
				   AND a.mspo_jenis_terbit=#jenisTerbit#
			   </isNotNull>
			   <isNotNull property="lspdId_Snows" >
                    AND c.lspd_id = #lspdId_Snows#
			   </isNotNull>
			   ORDER BY SUBSTR (a.reg_spaj, 1, 2), SUBSTR (a.reg_spaj, 3, 4), SUBSTR (a.reg_spaj, 7)
		
		</isNotNull>		
	</select>
	
	<select id="elions.uw.selectUserQa" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		
	   		select *
	        from (select b.lock_id, lus_full_name, b.mi_desc, lus_email from eka.mst_inbox a, eka.mst_inbox_hist b, eka.lst_user c 
	        where a.mi_id = b.mi_id and ljj_id in (21,25) 
	            and reg_spaj = #reg_spaj# and lspd_after = '218'
	            and b.lock_id = c.lus_id order by b.create_date desc) 
	        where rownum = 1 and lock_id is not null
     	
     	
	</select>
	
	<select id="elions.uw.selectUserQa1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		
	   		select *
	        from (select b.mi_desc, b.flag_kategori from eka.mst_inbox a, eka.mst_inbox_hist b
	        where a.mi_id = b.mi_id and ljj_id in (21,25) 
	            and reg_spaj = #reg_spaj# and lspd_before = #lspd_after#
	           	order by b.create_date desc) 
	        where rownum = 1
     	
     	
	</select>
	
	<select id="elions.uw.selectDetailPod" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
			mspo_no_pengiriman,
			reg_spaj,
			mstj_tujuan,
			mstj_consignee,
		    to_char(mstj_tgl_terima,'dd/MM/yyyy') as mstj_tgl_terima,
		   	mstj_receiver
		 from
		 	eka.mst_jne_pod
		 where
		    reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ')
		    and mspo_no_pengiriman =#mspo_no_pengiriman#			
	</select>
		
	<select id="elions.uw.selectCountSpajMstRefund" parameterClass="string" resultClass="int">
		select count(reg_spaj) from eka.mst_refund where reg_spaj=rpad(replace(#spaj#,'.'),11,' ')
	</select>
	
	<select id="elions.uw.selectCountDataCekPhone" resultClass="int" parameterClass="java.util.HashMap">
		select 
			count(mcpn_hp) 
		from
			 eka.mst_check_pn 
	    where 
	    	mcpn_hp in($hp$)
	     <isEqual property="flag" compareValue="1">
	        and mcpn_nama_pemegang like upper('%'||#nama_pp#||'%')
	        and mcpn_tgl_lahir_pp = to_date(#bdate#,'dd/MM/yyyy')
	        and mcpn_tgl_lahir_pp_lama = to_date(#tgl_lahir_pp_sebelumnya#,'dd/MM/yyyy')
	        and mcpn_nama_pemegang_lama like upper('%'||#namaPpSebelumnya#||'%')
	     </isEqual>		
	</select>
	
	<select id="elions.uw.selectLstMerchantFee" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select id_merchant, nama, persentase
		from eka.lst_merchant_fee
		<isNotNull property="flag_merchant">
			where id_merchant = #flag_merchant#
		</isNotNull>
		order by id_merchant
	</select>
	
	

	<select id="elions.uw.selectDataSiteDMTM" resultClass="java.util.HashMap">
		SELECT lca_id,lwk_id,lsrg_id, LSRG_NAMA FROM eka.lst_region WHERE lca_id = 40
	</select>
	
	<select id="elions.uw.schedulerNotProceedWithDMTMProcesRecuiring" parameterClass="java.util.HashMap"  resultClass="java.util.HashMap">
		select distinct eka.utils.cabang(p.LCA_ID) Channel,EKA.UTILS.region(p.LCA_ID, p.lwk_id, p.lsrg_id) Site,p.LCA_ID, p.lwk_id, p.lsrg_id,
		EKA.UTILS.PEMEGANG(p.reg_spaj) Pemegang_Polis,
		p.REG_SPAJ,EKA.UTILS.produk(pi.lsbs_id) Produk_Utama, EKA.UTILS.det_produk(pi.lsbs_id, pi.lsdbs_number) Nama_Produk,EKA.PACPOLIS.GET_PREMI_TOTAL (p.REG_SPAJ) Premi,
		to_char(p.MSPO_INPUT_DATE,'mm/dd/yyyy')Tgl_Input, to_char(th.tgl_further,'mm/dd/yyyy')Tgl_Further,
		to_char((th.tgl_further + 30),'mm/dd/yyyy') Date_Line,
		trunc(sysdate - th.tgl_further) Hari_Telat ,to_char((th.tgl_further + 46),'mm/dd/yyyy') Date_NPW, ps.msps_desc, er.vat Stat_Recur, dp.lspd_position
		from eka.mst_policy p, eka.mst_trans_history th, eka.mst_position_spaj ps, eka.mst_insured i, 
		eka.mst_product_insured pi, 
		(select er1.subs_number, er1.vat from eka.mst_eka_recur er1 where er1.tgl_tagihan = (select max (er2.tgl_tagihan) from eka.mst_eka_recur er2 where er2.subs_number = er1.subs_number)) er,
		eka.lst_document_position dp
		where p.REG_SPAJ = th.REG_SPAJ 
		        and P.REG_SPAJ = PS.REG_SPAJ
		        and p.lspd_id not in (999,95) 
		        and ps.reg_spaj = th.reg_spaj
                and ps.msps_date = th.tgl_further 
		        and th.tgl_further is not null
		        and TH.JENIS = 23 
		        and p.lstb_id = 1 
		        and P.REG_SPAJ = i.REG_SPAJ
		        and i.lssa_id = ps.lssa_id
		        <isEqual property="status_FR" compareValue="3">
		        and (i.lssa_id = #status_FR#)
		        </isEqual>
		        <isEqual property="status_FR" compareValue="5">
		        and (i.lssa_id <![CDATA[<>]]> #status_FR#)
		        </isEqual>
		        and p.lca_id = 40 
		        and p.Reg_spaj = pi.reg_spaj
		        and pi.lsbs_id <![CDATA[<]]>  300 
		        and p.reg_spaj = er.subs_number
				<isEqual property="stat_Rec" compareValue="0">
		        and (er.vat = #stat_Rec#)
		        </isEqual>
		        <isEqual property="stat_Rec" compareValue="2">
		        and (er.vat = #stat_Rec#)
		        </isEqual>		        
		        and p.lspd_id = dp.lspd_id
		order by p.reg_spaj       
        
	</select>
	
	<select id="elions.uw.selectHasMerchantFee" parameterClass="java.util.HashMap" resultClass="int">
		select a.mspa_flag_merchant
		from eka.mst_payment a, eka.mst_tag_payment b
		where a.reg_spaj = b.reg_spaj
		    and a.mspa_payment_id = b.mspa_payment_id
		    and a.mspa_flag_merchant is not null
		    and a.reg_spaj = #reg_spaj#
		    and b.msbi_tahun_ke = #tahun_ke#
		    and b.msbi_premi_ke = #premi_ke#
		    and rownum = 1
	</select>
	
	<select id="elions.uw.selectListPaymentVA" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.AutoPaymentVA">
		select *
		from
		(
		    select a.reg_spaj, b.mste_no_vacc no_va, eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) nama_produk, c.lsbs_id, c.lsdbs_number, d.lsgb_id,
		        ( select sum(mspr_premium - nvl(mspr_discount, 0)) from eka.mst_product_insured where reg_spaj = a.reg_spaj ) premi_pokok,
		        ( nvl((select mu_jlh_premi from eka.mst_ulink where reg_spaj = a.reg_spaj and lt_id = 5), 0) ) premi_topup_berkala,
		        ( nvl((select mu_jlh_premi from eka.mst_ulink where reg_spaj = a.reg_spaj and lt_id = 2), 0) ) premi_topup_tunggal,
		        e.no_trx, to_char(e.tgl_trx,'dd/MM/yyyy') tgl_trx, e.nilai_trx, e.norek_ajs, e.jenis jenis_trx, e.lku_id, e.no_pre, e.flag_tunggal_gabungan,
		        nvl( (select lkh_kurs_jual from eka.lst_daily_currency where lku_id = e.lku_id and lkh_date = to_date(e.tgl_trx, 'dd/MM/yyyy')), 1) nilai_kurs,
		        ( nvl((select sum(jumlah) from eka.mst_drek_det where no_trx = e.no_trx), 0)  ) nilai_trx_terpakai
		    from eka.mst_policy a, eka.mst_insured b, eka.mst_product_insured c, eka.lst_bisnis d, eka.mst_drek e
		    where a.reg_spaj = b.reg_spaj
		        and a.reg_spaj = c.reg_spaj
		        and a.lstb_id = 1
		        and A.PEGA_CASE_ID is null
		        and a.lspd_id in (2, 27, 251)
		        and b.mste_no_vacc is not null
		        and substr(b.mste_no_vacc, -12) = e.ket
		        and c.lsbs_id = d.lsbs_id
		        and c.lsbs_id <![CDATA[<]]> 300
		        and not exists (select 1 from eka.mst_deposit_premium where reg_spaj = a.reg_spaj)
		        and not exists (select 1 from eka.mst_payment where reg_spaj = a.reg_spaj)
		        and 1 = (select count(*) from eka.mst_drek where ket = substr(b.mste_no_vacc, -12))
                and 1 = (select count(*) from eka.mst_insured where lspd_id != 95 and mste_no_vacc = b.mste_no_vacc)
		    order by e.tgl_trx
		)
		where nilai_trx_terpakai = 0
		    and (premi_pokok + premi_topup_berkala + premi_topup_tunggal) = nilai_trx
	</select>
	
	<select id="elions.uw.selectDetailPermintaanVa" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	    select
		    a.msv_id,
		    min(b.no_va) || ' - ' || max(b.no_va) no_va,
		    a.msv_amount_req,
		    decode(a.jenis_va,0,'Kertas',1,'Online','Unknown') jenis_va,
		    decode(a.jenis_syariah,0,'Konvensional',1,'Syariah','Unknown') jenis_syariah,
		    decode(a.jenis_link,0,'Link',1,'Non Link','Unknown') jenis_link,
		    nvl(c.lus_full_name,c.lus_login_name) user_create,
		    to_char(a.create_date,'dd/mm/yyyy') create_date
		from
		    eka.mst_va a,
		    eka.mst_det_va b,
		    eka.lst_user c
		where
		    a.msv_id = b.msv_id
		    and a.user_create = c.lus_id
		    <isNotEmpty property="no_va">
		        and b.no_va = trim(#no_va#)
		    </isNotEmpty>
		    <isNotEmpty property="begDate">
		        <isNotEmpty property="endDate">
		            and a.create_date between to_date(#begDate#,'dd/mm/yyyy') and to_date(#endDate#,'dd/mm/yyyy') + 1
		        </isNotEmpty>
		    </isNotEmpty>
		group by
		    a.msv_id,
		    a.msv_amount_req,
		    a.jenis_va,
		    a.jenis_syariah,
		    a.jenis_link,
		    c.lus_full_name,
		    c.lus_login_name,
		    a.create_date
		order by a.create_date asc
	</select>
	
	<select id="elions.uw.selectRedeemBlock" resultClass="string" parameterClass="string">
		select reg_spaj from eka.mst_refund where ulink_flag = 1 and has_unit_flag = 1 and tindakan_cd in (2,3,4) and posisi_no <![CDATA[>]]> 1 and reg_spaj = #value#
	</select>
	
	<select id="elions.uw.selectSpajProses" resultClass="java.util.HashMap">
		 select distinct to_char((sysdate),'dd/mm/yyyy') tgl_cutoff,
                to_char((sysdate),'HH24') jam_cutoff,
                p.REG_SPAJ,
                to_char((th.tgl_transfer_uw_speedy),'dd/mm/yyyy') tgl_transfer_ke_speedy,
                EKA.UTILS.cabang(p.LCA_ID) nama_cabang,
                us.lus_full_name user_akseptasi,
                EKA.UTILS.PEMEGANG(P.REG_SPAJ) pemegang,
                EKA.UTILS.TERTANGGUNG(P.REG_SPAJ) tertanggung,
                EKA.UTILS.PRODUK(PI.LSBS_ID) produk,
                to_char((th.tgl_approve_uw),'dd/mm/yyyy') tgl_approve_nb,
                to_char((th.tgl_approve_collection),'dd/mm/yyyy') tgl_approve_collection,
                (case when ps.msps_desc  like '[GAGAL PROSES ]%' then 'GAGAL PROSES' else 'WAITING PROSES NEW BUSINESS' end ) status,
                PS.MSPS_DESC keterangan
           from eka.mst_policy p, 
                eka.mst_trans_history th, 
                eka.mst_position_spaj ps, 
                eka.lst_document_position dp,
                eka.mst_product_insured pi, 
                EKA.LST_USER us
          where P.REG_SPAJ = TH.REG_SPAJ 
            and P.REG_SPAJ = PS.REG_SPAJ
            and P.REG_SPAJ = PI.REG_SPAJ
            and PS.REG_SPAJ = TH.REG_SPAJ   
            and th.tgl_transfer_uw_speedy is not null               
            and p.lspd_id = dp.lspd_id                    
            and (DP.LSPD_ID = 251 or ps.msps_desc like '[GAGAL PROSES ]%')
            and ps.lus_id = us.lus_id
            and PS.MSPS_DATE = (select max(msps_date) from EKA.MST_POSITION_SPAJ where reg_spaj = P.REG_SPAJ)
            order by reg_spaj	
	</select>
	
	<select id="elions.uw.selectReminderSmileBaby" resultClass="java.util.HashMap">
		select * from (
		    select a.reg_spaj, a.mspo_policy_no, EKA.UTILS.PEMEGANG(a.reg_spaj) pemegang, 
	            EKA.UTILS.TERTANGGUNG(a.reg_spaj) tertanggung, to_char(b.tgl_perkiraan_lahir,'dd/mm/yyyy') hpl, round((b.tgl_perkiraan_lahir+14)-sysdate) hitung
	        from eka.mst_policy a, eka.mst_trans_history b
	        where b.tgl_perkiraan_lahir is not null
	        and a.reg_spaj = b.reg_spaj
        ) where hitung between -1 and 1
	</select>
	
	<select id="elions.uw.selectFlagValidasi" parameterClass="string" resultClass="int">
		select * 
	    from (select b.flag_validasi from eka.mst_inbox a, eka.mst_inbox_hist b 
	          where a.mi_id = b.mi_id and a.reg_spaj = #reg_spaj#
	          and b.flag_validasi not in(0,1) 
	          order by b.create_date desc) 
	    where rownum = 1
	</select>
	
	<select id="elions.uw.selectStatusFurtherColection" parameterClass="string" resultClass="int">
		
        select distinct data.lssa_id_bas
		From
		    (select a.reg_spaj , a.lssa_id_bas,a.msps_date PendingDate, b.lssa_id_bas approved, b.msps_date ApprovedDate
		        from
		            (select reg_spaj , lssa_id_bas, msps_date  from eka.mst_position_spaj where lssa_id_bas = 18) a,
		            (select reg_spaj , lssa_id_bas,  msps_date  from eka.mst_position_spaj where lssa_id_bas = 19) b
		        where a.reg_spaj = b.reg_spaj (+)              
		     )data  
		where (data.approved is null or data.PendingDate > data.ApprovedDate ) and data.reg_spaj = RPAD (#value#, 11, ' ')
		order by data.reg_spaj

	</select>
	
	<select id="elions.uw.selectTotalPremiUlink" parameterClass="string" resultClass="double">		
		select nvl(sum(mu_jlh_premi), 0)
		from(
		    select (case when lku_id = '02' then mu_jlh_premi * 10000 else mu_jlh_premi end) mu_jlh_premi
		    from eka.mst_policy a, eka.mst_ulink b
		    where a.reg_spaj = b.reg_spaj
		        and mu_ke in(1,2,3)
		        and a.reg_spaj = #reg_spaj#)
	</select>
	
	<select id="elions.uw.selectEmailBCAM" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		select a.reg_spaj, a.mspo_ao , 
		        b.mcl_id MCL_IDAO, 
		        C.MCL_FIRST AO_NAME , c.mspe_email AO_EMAIL , 
		        b.mst_leader, 
		        LMA.MCL_ID MCL_IDLEADER, 
		        LMB.MCL_FIRST LEADER_NAME,LMB.MSPE_EMAIL LEADER_EMAIL
		from eka.mst_policy a , eka.mst_agent b, eka.mst_client_new c, eka.mst_agent lma, eka.mst_client_new lmb 
		where a.mspo_ao = b.msag_id
			     and b.mcl_id = c.mcl_id
			     and b.mst_leader = lma.msag_id(+)
			     and lma.mcl_id = lmb.mcl_id (+)
			     and a.reg_spaj = rpad(replace(#value#,'.'),11,' ')		
	</select>	
	
	 <select id="elions.uw.selectUsiaTT" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
    	select mste_age from EKA.MST_INSURED where reg_spaj = #reg_spaj# and (mste_age between #umur1# and #umur2#)
		union
		select umur from EKA.MST_PESERTA where reg_spaj = #reg_spaj# and (umur between #umur1# and #umur2#)        	
    </select>
    
    <select id="elions.uw.selectPlanProvestara" parameterClass="java.util.HashMap" resultMap="elions.uw.result.selectPlanProvestara">
		
		select DISTINCT (case when a.lsdbs_number in (1,3,5,7,9) then 'GOLD' else 'PLATINUM' end) jenis  
	    from eka.mst_product_insured a, eka.mst_peserta  b, eka.mst_insured c
	    where   A.REG_SPAJ = b.reg_spaj(+) 
	        and a.lsdbs_number = b.lsdbs_number(+) 
	        AND A.REG_SPAJ = C.reg_spaj        
	        <isEqual property="lsbs_id" compareValue="840">
	        AND a.lsbs_id in (#lsbs_id#, 214) 
	        AND ( C.MSTE_AGE <![CDATA[<=]]> 60 OR b.umur  <![CDATA[<=]]> 60)
	        </isEqual>
	        <isNotEqual property="lsbs_id" compareValue="840">
	        AND a.lsbs_id = #lsbs_id#
	        </isNotEqual>
	        and a.reg_spaj = rpad(#spaj#,11,' ')
	</select>
	
<!-- 	<select id="elions.uw.selectInforceToWelcomeCall" resultClass="java.util.HashMap">
      select * from (select reg_spaj, lspd_id, nvl(sum(mu_jlh_premi), 0) mu_jlh_premi, tgl_transfer_uw_print ,tgl_approve_uw,  flag_validasi,lsbs_id,LSDBS_NUMBER, LSDBS_NAME,lku_id,
       		 (select  (case when mb.lku_id = '02' then nvl(sum(mpr.ape_prod * 10000), 0) else nvl(sum(mpr.ape_prod), 0) end) ape_prod
              from eka.mst_billing mb, eka.mst_production mpr
              where
		              mb.reg_spaj = mpr.reg_spaj
		              and mb.msbi_premi_ke = mpr.msbi_premi_ke
		              and mb.msbi_tahun_ke = mpr.msbi_tahun_ke
		              and mb.reg_spaj = bigdata.reg_spaj
		              and mb.msbi_nb = 1
		              and mb.MSBI_TAHUN_KE = 1
		              group by mb.lku_id
              ) APE               
        from(
            select (case when a.lku_id = '02' then b.mu_jlh_premi * 10000 else b.mu_jlh_premi end) mu_jlh_premi , a.reg_spaj ,  
            a.lspd_id ,  d.tgl_transfer_uw_print , d.tgl_approve_uw ,c.flag_validasi ,LDB.lsbs_id,LDB.LSDBS_NUMBER, LDB.LSDBS_NAME , MPI.LKU_ID
            from eka.mst_policy a, eka.mst_ulink b, EKA.MST_TRANS_HISTORY d, EKA.MST_INBOX c , eka.lst_det_bisnis ldb , EKA.MST_PRODUCT_INSURED mpi
            where a.reg_spaj = b.reg_spaj
                   and a.reg_spaj = d.reg_spaj
                    and a.reg_spaj = mpi.reg_spaj
                    and MPI.LSBS_ID = LDB.LSBS_ID
                    and MPI.LSDBS_NUMBER = LDB.LSDBS_NUMBER
                    and MPI.LSBS_ID <![CDATA[<=]]> 300
                 and a.reg_spaj = c.reg_spaj (+)
               and (c.flag_validasi = 0 or  c.flag_validasi is null )
                and b.mu_ke in(1,2,3)
                and a.lssp_id = 1
              and a.lspd_id in (6,7)
             and (LDB.JN_BANK not in (44,51)  or LDB.JN_BANK is null )
			  and to_date(d.tgl_approve_uw ,'dd/mm/yyyy') between to_date(sysdate-30 ,'dd/mm/yyyy')  and  to_date(sysdate-1 ,'dd/mm/yyyy')
			  and a.mspo_beg_date <![CDATA[>=]]>  to_date('2019-12-08','yyyy-dd-MM')        
              ) bigdata           
       group by reg_spaj , lspd_id , tgl_transfer_uw_print,tgl_approve_uw,  flag_validasi,lsbs_id,LSDBS_NUMBER, LSDBS_NAME, lku_id
       order by reg_spaj
	   ) t              
	</select> -->
	
	<select id="elions.uw.selectInforceToWelcomeCall" resultClass="java.util.HashMap">
        select * from (select reg_spaj, lspd_id, nvl(sum(mu_jlh_premi), 0) mu_jlh_premi,mspro_prod_date,  flag_validasi,lsbs_id,LSDBS_NUMBER, LSDBS_NAME,lku_id,
       		 (select  (case when mb.lku_id = '02' then nvl(sum(mpr.ape_prod * 10000), 0) else nvl(sum(mpr.ape_prod), 0) end) ape_prod
              from eka.mst_billing mb, eka.mst_production mpr
              where
		              mb.reg_spaj = mpr.reg_spaj
		              and mb.msbi_premi_ke = mpr.msbi_premi_ke
		              and mb.msbi_tahun_ke = mpr.msbi_tahun_ke
		              and mb.reg_spaj = bigdata.reg_spaj
		              and mb.msbi_nb = 1
		              and mb.MSBI_TAHUN_KE = 1
		              group by mb.lku_id
              ) APE               
        from(
            select (case when a.lku_id = '02' then b.mu_jlh_premi * 10000 else b.mu_jlh_premi end) mu_jlh_premi , a.reg_spaj ,  
            a.lspd_id , d.mspro_prod_date ,c.flag_validasi ,LDB.lsbs_id,LDB.LSDBS_NUMBER, LDB.LSDBS_NAME , MPI.LKU_ID
            from eka.mst_policy a, eka.mst_ulink b, EKA.mst_production d, EKA.MST_INBOX c , eka.lst_det_bisnis ldb , EKA.MST_PRODUCT_INSURED mpi
            where a.reg_spaj = b.reg_spaj
                   and a.reg_spaj = d.reg_spaj
                    and a.reg_spaj = mpi.reg_spaj
                    and MPI.LSBS_ID = LDB.LSBS_ID
                    and MPI.LSDBS_NUMBER = LDB.LSDBS_NUMBER
                    and MPI.LSBS_ID <![CDATA[<=]]> 300
                 and a.reg_spaj = c.reg_spaj (+)
               and (c.flag_validasi = 0 or  c.flag_validasi is null )
                and b.mu_ke in(1,2,3)
                and a.lssp_id = 1
              and a.lspd_id in (6,7)
             and (LDB.JN_BANK not in (44,51)  or LDB.JN_BANK is null )
          	 and d.reg_spaj = a.reg_spaj and d.mspro_prod_ke=1 and   d.mspro_prod_date <![CDATA[>=]]> to_date('01/09/2019','dd/MM/yyyy') + 1
 		     and (a.covid_flag is null or a.covid_flag = 0)			  
              ) bigdata           
       group by reg_spaj , lspd_id,mspro_prod_date,  flag_validasi,lsbs_id,LSDBS_NUMBER, LSDBS_NAME, lku_id
       order by reg_spaj
	   ) t  where 1=1 and not exists( select 1 from eka.lst_welcome_call_status wcs where wcs.reg_spaj = t.reg_spaj)       
	 </select>
	
	
	<select id="elions.uw.selectInforceToWelcomeCallBankAs" resultClass="java.util.HashMap">
         select * from (select reg_spaj, lspd_id, nvl(sum(mu_jlh_premi), 0) mu_jlh_premi, tgl_transfer_uw_print ,tgl_approve_uw,  flag_validasi,lsbs_id,LSDBS_NUMBER, LSDBS_NAME,lku_id,lscb_id, 
       		 (select  (case when mb.lku_id = '02' then nvl(sum(mpr.ape_prod * 10000), 0) else nvl(sum(mpr.ape_prod), 0) end) ape_prod
              from eka.mst_billing mb, eka.mst_production mpr
              where
		              mb.reg_spaj = mpr.reg_spaj
		              and mb.msbi_premi_ke = mpr.msbi_premi_ke
		              and mb.msbi_tahun_ke = mpr.msbi_tahun_ke
		              and mb.reg_spaj = bigdata.reg_spaj
		              and mb.msbi_nb = 1
		              and mb.MSBI_TAHUN_KE = 1
		              group by mb.lku_id
              ) APE               
        from(
            select (case when a.lku_id = '02' then b.mu_jlh_premi * 10000 else b.mu_jlh_premi end) mu_jlh_premi , a.reg_spaj ,  
            a.lspd_id ,  d.tgl_transfer_uw_print , d.tgl_approve_uw ,c.flag_validasi ,LDB.lsbs_id,LDB.LSDBS_NUMBER, LDB.LSDBS_NAME , MPI.LKU_ID,a.lscb_id
            from eka.mst_policy a, eka.mst_ulink b, EKA.MST_TRANS_HISTORY d, EKA.MST_INBOX c , eka.lst_det_bisnis ldb , EKA.MST_PRODUCT_INSURED mpi
            where a.reg_spaj = b.reg_spaj
                   and a.reg_spaj = d.reg_spaj
                    and a.reg_spaj = mpi.reg_spaj
                    and MPI.LSBS_ID = LDB.LSBS_ID
                    and MPI.LSDBS_NUMBER = LDB.LSDBS_NUMBER
                    and MPI.LSBS_ID <![CDATA[<=]]>  300
                 and a.reg_spaj = c.reg_spaj (+)
				and (c.flag_validasi = 0 or  c.flag_validasi is null )
                and b.mu_ke in(1,2,3)
                and a.lssp_id = 1
              and a.lspd_id in (6,7)
             and (LDB.JN_BANK in(43,44,50,51,56,58,60))
			 and to_date(d.tgl_approve_uw ,'dd/mm/yyyy') between to_date(sysdate-30 ,'dd/mm/yyyy')  and  to_date(sysdate-1 ,'dd/mm/yyyy')
			 and (a.covid_flag is null or a.covid_flag = 0)			  
              ) bigdata           
       group by reg_spaj , lspd_id , tgl_transfer_uw_print,tgl_approve_uw,  flag_validasi,lsbs_id,LSDBS_NUMBER, LSDBS_NAME, lku_id,lscb_id
       order by reg_spaj
	   ) t where 1=1 and not exists( select 1 from eka.lst_welcome_call_status wcs where wcs.reg_spaj = t.reg_spaj)	         
	</select>
	
	<select id="elions.uw.selectInforceToWelcomeCallCorona" resultClass="java.util.HashMap">
	select reg_spaj,covid_flag,kurs,premi,flag_validasi,LSDBS_NAME,tgl_transfer_uw_print,lscb_id,lsbs_id,lsdbs_number,product_label,tgl_approve_uw,production_date,is_already_welcome_call from (
	select p.reg_spaj,nvl(p.covid_flag, 0) as covid_flag,
	 (case when p.lku_id = '02' then nvl(mpi.mspr_premium * 10000, 0) else nvl(mpi.mspr_premium, 0) end) premi,kurs.lku_symbol kurs
	,p.lku_id,ib.flag_validasi,ldb.LSDBS_NAME,th.tgl_transfer_uw_print,p.lscb_id,ldb.lsbs_id, ldb.lsdbs_number,trim(ldb.lsbs_id || '-' || ldb.lsdbs_number) as product_label,th.tgl_approve_uw,(select mspro_prod_date from eka.mst_production where reg_spaj = p.reg_spaj and mspro_prod_ke = 1) production_date,
	(select nvl(count(*),0) as total from eka.mst_inbox b  where b.ljj_id = 63 and b.batal = 0 and rownum = 1 and b.reg_spaj =  p.reg_spaj) is_already_welcome_call
	from eka.mst_policy p, eka.MST_TRANS_HISTORY th, eka.MST_INBOX ib,eka.lst_det_bisnis ldb, eka.mst_product_insured mpi, eka.lst_kurs kurs,
	eka.mst_production prod
	where
	 p.reg_spaj = th.reg_spaj and p.reg_spaj = mpi.reg_spaj 
	 and
	 prod.reg_spaj = p.reg_spaj 
	 and
 	prod.mspro_prod_ke = 1
 	and
 	kurs.lku_id = p.lku_id
 	and MPI.LSBS_ID = LDB.LSBS_ID
    and MPI.LSDBS_NUMBER = LDB.LSDBS_NUMBER
    and MPI.LSBS_ID <![CDATA[<=]]> 300
    and p.reg_spaj = ib.reg_spaj
    and (ib.flag_validasi = 0 or  ib.flag_validasi is null )
    and p.lssp_id = 1
    and not exists (select 1 from eka.mst_ulink ul where ul.reg_spaj = p.reg_spaj) 
    and exists (select 1 from EKA.LST_WELCOME_CALL_PRODUCT wc ,EKA.LST_TYPE_WELCOME_CALL_PRODUCT tpwc where (wc.lsbs_id = ldb.lsbs_id and wc.lsdbs_number = ldb.lsdbs_number) and tpwc.TIPE_PRODUK = wc.TIPE_PRODUK and trim(lower(tpwc.TIPE_NAME)) = lower('WELCOMECALLNONUL') and wc.flag_active = 1)
    and to_date(prod.mspro_prod_date,'dd/mm/yyyy') between to_date(sysdate-30 ,'dd/mm/yyyy')  and  to_date(sysdate-1 ,'dd/mm/yyyy')
    and p.lspd_id in (6,7,99)
    and not exists( select 1 from eka.lst_welcome_call_status wcs where wcs.reg_spaj = p.reg_spaj)
    ) b where b.premi <![CDATA[>=]]> 50000000 and b.covid_flag = 1
    and not exists (select 1 from eka.mst_inbox i  where i.ljj_id = 63 and i.batal = 0 and rownum = 1 and i.reg_spaj =  b.reg_spaj)
     group by reg_spaj,covid_flag,kurs,premi,flag_validasi,LSDBS_NAME,tgl_transfer_uw_print,lscb_id,lsbs_id,lsdbs_number,product_label,tgl_approve_uw,production_date,is_already_welcome_call
	</select>
	
	<select id="elions.uw.selectDuplicateSnows" resultClass="java.util.HashMap">
	select distinct(a.reg_spaj) from(
		select count(reg_spaj) tot,reg_spaj,status_insert from eka.lst_welcome_call_status where 1=1 group by reg_spaj,status_insert
		having count(reg_spaj) <![CDATA[>]]> 1 and status_insert in(0,8)
		) a ,eka.lst_welcome_call_status s where s.reg_spaj = a.reg_spaj group by a.reg_spaj 
    </select>
	
	
	<select id="elions.uw.selectCountMstInboxSnows" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select count(reg_spaj) as total,lspd_id,lspd_id_from,ljj_id,mi_pos from eka.mst_inbox where reg_spaj = #spaj# and ljj_id = 63
		group by lspd_id,ljj_id,lspd_id_from,mi_pos	
    </select>
    
    <select id="elions.uw.selectListSnowsDuplicate" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select * from eka.mst_inbox where reg_spaj =  #spaj# and ljj_id = #ljj_id# and lspd_id = #lspd_id# and lspd_id_from = #lspd_id_from# and mi_pos = #mi_pos# 
		order by tgl_berkas_masuk desc
    </select>
    
	<select id="elions.uw.cekTotalSpajLockUserCollection" resultClass="int" parameterClass="int">
		select count(*) total_spaj from eka.mst_policy a, eka.mst_inbox b
		where   A.REG_SPAJ = b.reg_spaj
		        and b.ljj_id = 29 
		        and b.lspd_id = 212 
		        and b.lock_id  = #lus_id# 
		        and a.lspd_id in (2,27,4)
		        and a.lca_id not in (40) 
		        		
	</select>
	
	<select id="elions.uw.selectEmailBCAM2" resultClass="java.util.HashMap" parameterClass="java.lang.String">
		select a.reg_spaj, b.lrb_id lrb_id_bc, b.agent_code agen_id_bc, d.mcl_first nama_bc, d.mspe_email email_bc,
		    b.leader_id lrb_id_am, e.msag_id agent_id_am, f.mcl_first nama_am, f.mspe_email email_am
		from eka.mst_reff_bii a, eka.lst_reff_bii b, eka.mst_agent c, eka.mst_client_new d,
		    eka.mst_agent e, eka.mst_client_new f
		where a.lrb_id = b.lrb_id
		    and b.agent_code = c.msag_id
		    and b.flag_aktif = 1
		    and c.mcl_id = d.mcl_id
		    and c.mst_leader = e.msag_id (+)
		    and e.mcl_id = f.mcl_id (+)
		    and a.reg_spaj = #spaj#
		    and no_urut = (select max(no_urut) from eka.mst_reff_bii where reg_spaj = a.reg_spaj)
	</select>
	
	<select id="elions.uw.selectListPaymentBSM" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.AutoPaymentVA">
		select *
		from
		(
		    select a.reg_spaj, c.cif, c.account_name nama_rek, c.no_kartu no_rek, eka.f_lsdbs(a.reg_spaj, b.lsbs_id, b.lsdbs_number) nama_produk,
		        ( select sum(mspr_premium - nvl(mspr_discount, 0)) from eka.mst_product_insured where reg_spaj = a.reg_spaj ) premi_pokok,
		        d.no_trx, to_char(d.tgl_trx,'dd/MM/yyyy') tgl_trx, d.nilai_trx, d.norek_ajs, d.jenis jenis_trx, d.lku_id, d.no_pre, d.flag_tunggal_gabungan,
		        nvl( (select lkh_kurs_jual from eka.lst_daily_currency where lku_id = d.lku_id and lkh_date = to_date(d.tgl_trx, 'dd/MM/yyyy')), 1) nilai_kurs,
		        ( nvl((select sum(jumlah) from eka.mst_drek_det where no_trx = d.no_trx), 0)  ) nilai_trx_terpakai, b.lsbs_id, b.lsdbs_number
		    from eka.mst_policy a, eka.mst_product_insured b, eka.mst_drek_cc c, eka.mst_drek d
		    where a.reg_spaj = b.reg_spaj
		        and a.mspo_nasabah_dcif = c.cif
		        and a.lstb_id = 1
		        and A.PEGA_CASE_ID is null
		        and a.lspd_id = 4
		        and b.lsbs_id = 163
		        and ((b.lsdbs_number <![CDATA[>=]]> 6 and b.lsdbs_number <![CDATA[<=]]> 10) or
		        		(b.lsdbs_number <![CDATA[>=]]> 21 and b.lsdbs_number <![CDATA[<=]]> 25))
		        and c.no_trx = d.no_trx
		        and c.tgl = d.tgl_trx
		        and c.flag = 1
		        and d.jenis = 'K'
		        <!-- aktifkan untuk production -->
                and not exists (select 1 from eka.mst_payment where reg_spaj = a.reg_spaj)
		)
		where (nilai_trx-nilai_trx_terpakai) <![CDATA[>=]]> premi_pokok
		order by tgl_trx
	</select>
	
	<select id="elions.uw.selectMstSpajFree" resultClass="java.math.BigDecimal" parameterClass="java.lang.String">
		select d.lsprss_value
		from eka.mst_policy a, eka.mst_insured b, eka.mst_product_insured c,
		    eka.lst_premi_ss d, eka.mst_free_spaj e
		where a.reg_spaj = b.reg_spaj
		    and a.reg_spaj = c.reg_spaj
		    and a.reg_spaj = e.reg_spaj_free
		    and a.reg_spaj = #reg_spaj#
		    and a.lku_id = d.lku_id
		    and b.mste_age = d.lsprss_age
		    and c.lsbs_id = d.lsbs_id
		    and c.lsbs_id = 183
		    and c.lsdbs_number between 50 and 60
		    and d.lsprss_plan = 50
		    and e.process_type = 1
    </select>
    
    <!-- sysdate dengan pengecekan pada tabel mst_inbox_hist, karena create_date merupakan primary Key tabel mst_inbox_hist -->
	<select id="elions.uw.selectSysdateByInboxHist" resultClass="date" parameterClass="string">
		select (case when sysdate <![CDATA[<=]]>max(create_date)  then max(create_date) + 1/86400
      	 else sysdate end ) sisdate  
		from eka.mst_inbox_hist where mi_id = #mi_id# 
	</select>
	
    <select id="elions.uw.selectSeqNoEndors" resultClass="string"> 		 
		SELECT EKA.PAC_COUNTER.GET_NO_ENDORS_SEQ() FROM DUAL 	
	</select>
	
	<select id="elions.uw.selectListPaymentBancass" parameterClass="java.util.HashMap" resultClass="com.ekalife.elions.model.AutoPaymentVA">
		select data.*, (data.premi_pokok + data.premi_topup_berkala + data.premi_topup_tunggal) total_premi
		from (
		    select a.reg_spaj,
		        a.mspo_no_blanko no_khusus,
		        pp.mcl_first nama_pp,
		        eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) nama_produk,
		        c.lsbs_id,
		        c.lsdbs_number,
		        d.lsgb_id,
		        a.lspd_id,
		        ( select sum(mspr_premium - nvl(mspr_discount, 0)) from eka.mst_product_insured where reg_spaj = a.reg_spaj ) premi_pokok,
		        ( nvl((select mu_jlh_premi from eka.mst_ulink where reg_spaj = a.reg_spaj and lt_id = 5), 0) ) premi_topup_berkala,
		        ( nvl((select mu_jlh_premi from eka.mst_ulink where reg_spaj = a.reg_spaj and lt_id = 2), 0) ) premi_topup_tunggal,
		        e.no_trx,
		        to_char(e.tgl_trx,'dd/MM/yyyy') tgl_trx,
		        e.nilai_trx,
		        e.norek_ajs,
		        e.jenis jenis_trx,
		        e.lku_id,
		        e.no_pre,
		        e.flag_tunggal_gabungan,
		        e.lsbp_id,
		        nvl( (select lkh_kurs_jual from eka.lst_daily_currency where lku_id = e.lku_id and lkh_date = to_date(e.tgl_trx, 'dd/MM/yyyy')), 1) nilai_kurs,
		        ( nvl((select sum(jumlah) from eka.mst_drek_det where no_trx = e.no_trx), 0)  ) nilai_trx_terpakai
		    from eka.mst_policy a,
		        eka.mst_insured b,
		        eka.mst_product_insured c,
		        eka.lst_bisnis d,
		        eka.mst_drek e,
		        eka.mst_client_new pp
		    where a.reg_spaj = b.reg_spaj
		        and a.reg_spaj = c.reg_spaj
		        and a.mspo_policy_holder = pp.mcl_id
		        and a.lstb_id = 1
		        and A.PEGA_CASE_ID is null
		        and a.lspd_id in (2, 4, 27, 251)
		        and replace(replace(replace(a.mspo_no_blanko, '-', ''), '.', ''), ' ', '') = replace(replace(replace(e.ket, '-', ''), '.', ''), ' ', '')
		        and b.mste_no_vacc is null
		        and c.lsbs_id = d.lsbs_id
		        and c.lsbs_id <![CDATA[<]]> 300
		        and not exists (select 1 from eka.mst_deposit_premium where reg_spaj = a.reg_spaj)
		        and not exists (select 1 from eka.mst_payment where reg_spaj = a.reg_spaj)
		    union
		    select a.reg_spaj,
		        f.sertifikat no_khusus,
		        pp.mcl_first nama_pp,
		        eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) nama_produk,
		        c.lsbs_id,
		        c.lsdbs_number,
		        d.lsgb_id,
		        a.lspd_id,
		        ( select sum(mspr_premium - nvl(mspr_discount, 0)) from eka.mst_product_insured where reg_spaj = a.reg_spaj ) premi_pokok,
		        ( nvl((select mu_jlh_premi from eka.mst_ulink where reg_spaj = a.reg_spaj and lt_id = 5), 0) ) premi_topup_berkala,
		        ( nvl((select mu_jlh_premi from eka.mst_ulink where reg_spaj = a.reg_spaj and lt_id = 2), 0) ) premi_topup_tunggal,
		        e.no_trx,
		        to_char(e.tgl_trx,'dd/MM/yyyy') tgl_trx,
		        e.nilai_trx,
		        e.norek_ajs,
		        e.jenis jenis_trx,
		        e.lku_id,
		        e.no_pre,
		        e.flag_tunggal_gabungan,
		        e.lsbp_id,
		        nvl( (select lkh_kurs_jual from eka.lst_daily_currency where lku_id = e.lku_id and lkh_date = to_date(e.tgl_trx, 'dd/MM/yyyy')), 1) nilai_kurs,
		        ( nvl((select sum(jumlah) from eka.mst_drek_det where no_trx = e.no_trx), 0)  ) nilai_trx_terpakai
		    from eka.mst_policy a,
		        eka.mst_insured b,
		        eka.mst_product_insured c,
		        eka.lst_bisnis d,
		        eka.mst_drek e,
		        eka.mst_spaj_temp f,
		        eka.mst_client_new pp
		    where a.reg_spaj = b.reg_spaj
		        and a.reg_spaj = c.reg_spaj
		        and a.reg_spaj = f.reg_spaj
		        and a.mspo_policy_holder = pp.mcl_id
		        and a.lstb_id = 1
		        and a.lspd_id in (2, 4, 27, 251)
		        and c.lsbs_id = d.lsbs_id
		        and c.lsbs_id <![CDATA[<]]> 300
		        and f.campaign_id = 4
		        and f.sertifikat is not null
		        and f.sertifikat = replace(translate(lower(e.ket), 'abcdefghijklmnopqrstuvwxyz +-_/.,', ' '), ' ', '')
		        and not exists (select 1 from eka.mst_deposit_premium where reg_spaj = a.reg_spaj)
		        and not exists (select 1 from eka.mst_payment where reg_spaj = a.reg_spaj)
		    union
		    select a.reg_spaj,
		        f.no_spaj_gadget no_khusus,
		        pp.mcl_first nama_pp,
		        eka.f_lsdbs(a.reg_spaj, c.lsbs_id, c.lsdbs_number) nama_produk,
		        c.lsbs_id,
		        c.lsdbs_number,
		        d.lsgb_id,
		        a.lspd_id,
		        ( select sum(mspr_premium - nvl(mspr_discount, 0)) from eka.mst_product_insured where reg_spaj = a.reg_spaj ) premi_pokok,
		        ( nvl((select mu_jlh_premi from eka.mst_ulink where reg_spaj = a.reg_spaj and lt_id = 5), 0) ) premi_topup_berkala,
		        ( nvl((select mu_jlh_premi from eka.mst_ulink where reg_spaj = a.reg_spaj and lt_id = 2), 0) ) premi_topup_tunggal,
		        e.no_trx,
		        to_char(e.tgl_trx,'dd/MM/yyyy') tgl_trx,
		        e.nilai_trx,
		        e.norek_ajs,
		        e.jenis jenis_trx,
		        e.lku_id,
		        e.no_pre,
		        e.flag_tunggal_gabungan,
		        e.lsbp_id,
		        nvl( (select lkh_kurs_jual from eka.lst_daily_currency where lku_id = e.lku_id and lkh_date = to_date(e.tgl_trx, 'dd/MM/yyyy')), 1) nilai_kurs,
		        ( nvl((select sum(jumlah) from eka.mst_drek_det where no_trx = e.no_trx), 0)  ) nilai_trx_terpakai
		    from eka.mst_policy a,
		        eka.mst_insured b,
		        eka.mst_product_insured c,
		        eka.lst_bisnis d,
		        eka.mst_drek e,
		        eka.mst_spaj_temp f,
		        eka.mst_client_new pp
		    where a.reg_spaj = b.reg_spaj
		        and a.reg_spaj = c.reg_spaj
		        and a.reg_spaj = f.reg_spaj
		        and a.mspo_policy_holder = pp.mcl_id
		        and a.lstb_id = 1
		        and a.lspd_id in (2, 4, 27, 251)
		        and c.lsbs_id = d.lsbs_id
		        and c.lsbs_id <![CDATA[<]]> 300
		        and f.campaign_id = 4
		        and replace(translate(lower(f.no_spaj_gadget), 'abcdefghijklmnopqrstuvwxyz +-_/.,', ' '), ' ', '') =
		        	replace(translate(lower(e.ket), 'abcdefghijklmnopqrstuvwxyz +-_/.,', ' '), ' ', '')
		        and not exists (select 1 from eka.mst_deposit_premium where reg_spaj = a.reg_spaj)
		        and not exists (select 1 from eka.mst_payment where reg_spaj = a.reg_spaj)
		) data
		where nilai_trx_terpakai = 0
		    and (premi_pokok + premi_topup_berkala + premi_topup_tunggal) = nilai_trx
		order by data.tgl_trx
	</select>
	
	<select id="elions.uw.selectMstUlink" parameterClass="java.lang.String" resultClass="java.util.HashMap"> <!-- Chandra A - 20180521: batching simas prime link (rider save) -->
		select mu_tgl_input
        from   EKA.MST_ULINK 
        where  reg_spaj = #reg_spaj#
        and rownum = 1
	</select>
	
	<select id="elions.uw.selectMstBatchSwitching" parameterClass="java.lang.String" resultClass="java.util.HashMap"> <!-- Chandra A - 20180521: batching simas prime link (rider save) -->
		select no_batch, beg_date_periode, end_date_periode 
        from eka.MST_BATCH_SWITCHING 
        where flag_aktif = 1 
        and rownum = 1 
        order by end_date_periode asc
	</select>
	
	<select id="elions.uw.selectMstProductInsured" parameterClass="java.lang.String" resultClass="java.util.HashMap"> <!-- Chandra A - 20180702: batching simas prime link (rider save) -->
		select a.lsbs_id, a.lsdbs_number, b.flag_batch, b.no_batch
        from   EKA.MST_PRODUCT_INSURED a
        	   left join eka.mst_policy b on (a.reg_spaj = b.reg_spaj)
        where  a.reg_spaj = #reg_spaj#
        and    a.lsbs_id <![CDATA[<]]> 800 
        and    rownum = 1
	</select>
	 
	 <select id="elions.uw.selectSequenceClientID" resultClass="string"> 		 
		SELECT EKA.PAC_COUNTER.GET_CLIENT_ID () FROM DUAL 	
	</select>
	
	<select id="elions.uw.selectMspIdFromSpaj" parameterClass="string" resultClass="string">
	  SELECT msp_id FROM eka.mst_pas_sms WHERE reg_spaj=#spaj#  		
	</select>		
	
	<select id="elions.uw.selectMstPasSmsFromNoKartu" parameterClass="java.lang.String" resultClass="java.util.HashMap">
        select * from eka.mst_pas_sms where no_kartu = #value#
    </select>		
	
	
     <select id="elions.uw.selectPendingPrintPolis" resultClass="java.util.HashMap">
		select distinct e.akseptor, a.reg_spaj spaj, d.lsdbs_name produk, x.mcl_first pp, y.mcl_first tt, (case when a.mspo_provider = 2 then 'PROVIDER' else 'NON PROVIDER' end) prov, to_char(e.msps_date,'dd/MM/yyyy') tgl_aksep,
		        nvl((select to_char(dd.msps_date,'dd/MM/yyyy') tgl_cek from eka.mst_position_spaj dd where dd.reg_spaj = a.reg_spaj and dd.msps_desc like 'CETAK ALOKASI_DANA'
		         and dd.msps_date = (select max(ee.msps_date) from eka.mst_position_spaj ee where ee.reg_spaj = a.reg_spaj and ee.msps_desc like 'CETAK ALOKASI_DANA')),'-') tgl_cek,
		         g.lar_admin, eka.workdays(e.msps_date,SYSDATE) pending_print, nvl(to_char(nvl(h.tgl_fund_allocation,l.msps_date),'dd/mm/yyyy hh24:mi:ss'),'-') tgl_fund, nvl(j.nama_cabang,'-') cabang_bsm,e.msps_date
		from eka.mst_policy a, eka.mst_insured b, eka.mst_product_insured c, eka.lst_det_bisnis d,
		        eka.mst_client_new x, eka.mst_client_new y, eka.lst_region f, eka.lst_addr_region g, eka.mst_insured o,
		        eka.mst_trans_history h, eka.mst_reff_bii i, eka.lst_cabang_bii j,
		        (select distinct aa.reg_spaj, trunc(aa.msps_date) msps_date, upper(bb.lus_full_name) akseptor,
		                (select count(cc.msps_desc)
		                 from eka.mst_position_spaj cc
		                 where (cc.msps_desc like 'VALID FOR PRINT%' or cc.msps_desc like 'PRINT POLIS%' or cc.msps_desc like 'CETAK POLIS%' or cc.msps_desc like 'KIRIM SOFTCOPY POLIS%' or upper(cc.msps_desc) like 'KIRIM SOFTCOPY OTOMATIS KE%' or upper(cc.msps_desc) like 'GENERATE OUTSOURCE%')
		                         and cc.reg_spaj = aa.reg_spaj) valid
		         from eka.mst_position_spaj aa, eka.lst_user bb
		         where (aa.msps_desc like 'AC:%' or aa.msps_desc like 'AK:%'
		                        or (aa.msps_desc like 'TRANSFER KE PRINT POLIS'
		                            and not exists (select reg_spaj from eka.mst_position_spaj where reg_spaj = aa.reg_spaj and (msps_desc like 'AC:%' or msps_desc like 'AK:%'))
		                        )
		                    )
		                 and aa.lus_id = bb.lus_id
		                 and aa.msps_date between (trunc(sysdate-1)) and (trunc(sysdate) + 15/24)) e,
		        (select reg_spaj,max(no_urut) as no_urut from eka.mst_reff_bii group by reg_spaj) k,
		        eka.mst_position_spaj l
		where a.reg_spaj = b.reg_spaj
		        and a.reg_spaj = c.reg_spaj
		        and a.reg_spaj = e.reg_spaj
		        and a.reg_spaj = o.reg_spaj
		        and a.lca_id = f.lca_id
		        and a.lwk_id = f.lwk_id
		        and a.lsrg_id = f.lsrg_id
		        and f.lar_id = g.lar_id (+)
		        /*and a.lca_id in ('37','52')*/
		        /*and a.lspd_id != 95*/
		        /*and a.lspd_id not in (7,95)*/
		        AND a.lspd_id in (6,8)
		        and a.mspo_policy_holder = x.mcl_id
		        and b.mste_insured = y.mcl_id
		        and c.lsbs_id = d.lsbs_id
		        and c.lsdbs_number = d.lsdbs_number
		        and a.reg_spaj = h.reg_spaj
		        and a.reg_spaj = i.reg_spaj(+)
		        and i.reg_spaj = k.reg_spaj(+)
		        and i.no_urut = k.no_urut(+)
		        and i.lcb_reff = j.lcb_no(+)
		        and d.lsbs_id <![CDATA[<]]> 300
		        and e.valid = 0
		        and o.lssa_id not in (2,9)
		        and (c.lsbs_id || '-' ||c.lsdbs_number) not in ('142-2','158-6','188-2','164-11','175-2','73-12','73-13','73-14')
		        and a.reg_spaj = l.reg_spaj(+)
		        and l.lssa_id(+) = 8
		        and l.msps_desc(+) like 'FA%'
		        and not exists (select 1 from 
		eka.mst_spaj_temp aa, eka.mst_product_temp bb 
		where aa.no_temp = bb.no_temp and bb.lsbs_id = 212 and bb.lsdbs_number = 6 and bb.reg_Spaj = a.reg_Spaj)
		order by e.msps_date
    </select>
    
     <select id="elions.uw.selectPendingPrintPolis2" resultClass="java.util.HashMap">
		select distinct e.akseptor, a.reg_spaj spaj, a.mspo_date_print date_print, d.lsdbs_name produk, x.mcl_first pp, y.mcl_first tt, (case when a.mspo_provider = 2 then 'PROVIDER' else 'NON PROVIDER' end) prov, to_char(e.msps_date,'dd/MM/yyyy') tgl_aksep,
		        nvl((select to_char(dd.msps_date,'dd/MM/yyyy') tgl_cek from eka.mst_position_spaj dd where dd.reg_spaj = a.reg_spaj and dd.msps_desc like 'CETAK ALOKASI_DANA'
		         and dd.msps_date = (select max(ee.msps_date) from eka.mst_position_spaj ee where ee.reg_spaj = a.reg_spaj and ee.msps_desc like 'CETAK ALOKASI_DANA')),'-') tgl_cek,
		         g.lar_admin, eka.workdays(e.msps_date,SYSDATE) pending_print, nvl(to_char(nvl(h.tgl_fund_allocation,l.msps_date),'dd/mm/yyyy hh24:mi:ss'),'-') tgl_fund, nvl(j.nama_cabang,'-') cabang_bsm,e.msps_date
		from eka.mst_policy a, eka.mst_insured b, eka.mst_product_insured c, eka.lst_det_bisnis d,
		        eka.mst_client_new x, eka.mst_client_new y, eka.lst_region f, eka.lst_addr_region g, eka.mst_insured o,
		        eka.mst_trans_history h, eka.mst_reff_bii i, eka.lst_cabang_bii j,
		        (select distinct aa.reg_spaj, trunc(aa.msps_date) msps_date, upper(bb.lus_full_name) akseptor,
		                (select count(cc.msps_desc)
		                 from eka.mst_position_spaj cc
		                 where (cc.msps_desc like 'VALID FOR PRINT%' or cc.msps_desc like 'PRINT POLIS%' or cc.msps_desc like 'CETAK POLIS%' 
		                 /* or cc.msps_desc like 'KIRIM SOFTCOPY POLIS%' */
		                 /* or upper(cc.msps_desc) like 'KIRIM SOFTCOPY OTOMATIS KE%' */
		                 or upper(cc.msps_desc) like 'GENERATE OUTSOURCE%' or upper(cc.msps_desc) like 'CETAK SERTIFIKAT%')
		                         and cc.reg_spaj = aa.reg_spaj) valid
		         from eka.mst_position_spaj aa, eka.lst_user bb
		         where (aa.msps_desc like 'AC:%' or aa.msps_desc like 'AK:%'
		                        or (aa.msps_desc like 'TRANSFER KE PRINT POLIS'
		                            and not exists (select reg_spaj from eka.mst_position_spaj where reg_spaj = aa.reg_spaj and (msps_desc like 'AC:%' or msps_desc like 'AK:%'))
		                        )
		                    )
		                 and aa.lus_id = bb.lus_id
		                 and trunc(aa.msps_date) <![CDATA[>=]]> (sysdate-30)) e,
		        (select reg_spaj,max(no_urut) as no_urut from eka.mst_reff_bii group by reg_spaj) k,
		        eka.mst_position_spaj l
		where a.reg_spaj = b.reg_spaj
		        and a.reg_spaj = c.reg_spaj
		        and a.reg_spaj = e.reg_spaj
		        and a.reg_spaj = o.reg_spaj
		        and a.lca_id = f.lca_id
		        and a.lwk_id = f.lwk_id
		        and a.lsrg_id = f.lsrg_id
		        and f.lar_id = g.lar_id (+)
		        /*and a.lca_id in ('37','52')*/
		        /*and a.lspd_id != 95*/
		        /*and a.lspd_id not in (7,95)*/
		        AND a.lspd_id in (6,8)
		        and a.mspo_policy_holder = x.mcl_id
		        and b.mste_insured = y.mcl_id
		        and c.lsbs_id = d.lsbs_id
		        and c.lsdbs_number = d.lsdbs_number
		        and a.reg_spaj = h.reg_spaj
		        and a.reg_spaj = i.reg_spaj(+)
		        and i.reg_spaj = k.reg_spaj(+)
		        and i.no_urut = k.no_urut(+)
		        and i.lcb_reff = j.lcb_no(+)
		        and d.lsbs_id <![CDATA[<]]> 300
		        and e.valid = 0
		        and o.lssa_id not in (2,9)
		        and (c.lsbs_id || '-' ||c.lsdbs_number) not in ('142-2','158-6','188-2','164-11','175-2','73-12','73-13','73-14')
		        and a.reg_spaj = l.reg_spaj(+)
		        and l.lssa_id(+) = 8
		        and l.msps_desc(+) like 'FA%'
				and (a.reg_spaj like ('09%') or a.reg_spaj like ('40%'))
				and A.PEGA_CASE_ID is null        
		        and not exists (select 1 from 
		eka.mst_spaj_temp aa, eka.mst_product_temp bb 
		where aa.no_temp = bb.no_temp and bb.lsbs_id = 212 and bb.lsdbs_number = 6 and bb.reg_Spaj = a.reg_Spaj)
		order by e.msps_date
    </select>    
    
     <select id="elions.uw.selectPendingPrintPolisMuat" resultClass="java.util.HashMap">
		select distinct e.akseptor, a.reg_spaj spaj, d.lsdbs_name produk, x.mcl_first pp, y.mcl_first tt, (case when a.mspo_provider = 2 then 'PROVIDER' else 'NON PROVIDER' end) prov, to_char(e.msps_date,'dd/MM/yyyy') tgl_aksep,
		        nvl((select to_char(dd.msps_date,'dd/MM/yyyy') tgl_cek from eka.mst_position_spaj dd where dd.reg_spaj = a.reg_spaj and dd.msps_desc like 'CETAK ALOKASI_DANA'
		         and dd.msps_date = (select max(ee.msps_date) from eka.mst_position_spaj ee where ee.reg_spaj = a.reg_spaj and ee.msps_desc like 'CETAK ALOKASI_DANA')),'-') tgl_cek,
		         g.lar_admin, eka.workdays(e.msps_date,SYSDATE) pending_print, nvl(to_char(nvl(h.tgl_fund_allocation,l.msps_date),'dd/mm/yyyy hh24:mi:ss'),'-') tgl_fund, nvl(j.nama_cabang,'-') cabang_bsm,e.msps_date
		from eka.mst_policy a, eka.mst_insured b, eka.mst_product_insured c, eka.lst_det_bisnis d,
		        eka.mst_client_new x, eka.mst_client_new y, eka.lst_region f, eka.lst_addr_region g, eka.mst_insured o,
		        eka.mst_trans_history h, eka.mst_reff_bii i, eka.lst_cabang_bii j,
		        (select distinct aa.reg_spaj, trunc(aa.msps_date) msps_date, upper(bb.lus_full_name) akseptor,
		                (select count(cc.msps_desc)
		                 from eka.mst_position_spaj cc
		                 where (cc.msps_desc like 'VALID FOR PRINT%' or cc.msps_desc like 'PRINT POLIS%' or cc.msps_desc like 'CETAK POLIS%' or cc.msps_desc like 'KIRIM SOFTCOPY POLIS%' or upper(cc.msps_desc) like 'KIRIM SOFTCOPY OTOMATIS KE%' or upper(cc.msps_desc) like 'GENERATE OUTSOURCE%')
		                         and cc.reg_spaj = aa.reg_spaj) valid
		         from eka.mst_position_spaj aa, eka.lst_user bb
		         where (aa.msps_desc like 'AC:%' or aa.msps_desc like 'AK:%'
		                        or (aa.msps_desc like 'TRANSFER KE PRINT POLIS'
		                            and not exists (select reg_spaj from eka.mst_position_spaj where reg_spaj = aa.reg_spaj and (msps_desc like 'AC:%' or msps_desc like 'AK:%'))
		                        )
		                    )
		                 and aa.lus_id = bb.lus_id
		                 and trunc(aa.msps_date) <![CDATA[>=]]> '01 NOVEMBER 2018') e,
		        (select reg_spaj,max(no_urut) as no_urut from eka.mst_reff_bii group by reg_spaj) k,
		        eka.mst_position_spaj l
		where a.reg_spaj = b.reg_spaj
		        and a.reg_spaj = c.reg_spaj
		        and a.reg_spaj = e.reg_spaj
		        and a.reg_spaj = o.reg_spaj
		        and a.lca_id = f.lca_id
		        and a.lwk_id = f.lwk_id
		        and a.lsrg_id = f.lsrg_id
		        and f.lar_id = g.lar_id (+)
		        /*and a.lca_id in ('37','52')*/
		        /*and a.lspd_id != 95*/
		        /*and a.lspd_id not in (7,95)*/
		        AND a.lspd_id in (6,8)
		        and a.mspo_policy_holder = x.mcl_id
		        and b.mste_insured = y.mcl_id
		        and c.lsbs_id = d.lsbs_id
		        and c.lsdbs_number = d.lsdbs_number
		        and a.reg_spaj = h.reg_spaj
		        and a.reg_spaj = i.reg_spaj(+)
		        and i.reg_spaj = k.reg_spaj(+)
		        and i.no_urut = k.no_urut(+)
		        and i.lcb_reff = j.lcb_no(+)
		        and d.lsbs_id <![CDATA[<]]> 300
		        and e.valid = 0
		        and o.lssa_id not in (2,9)
		        and (c.lsbs_id || '-' ||c.lsdbs_number) not in ('142-2','158-6','188-2','164-11','175-2','73-12','73-13','73-14')
		        and a.reg_spaj = l.reg_spaj(+)
		        and l.lssa_id(+) = 8
		        and l.msps_desc(+) like 'FA%'
				and (a.reg_spaj like ('09%') or a.reg_spaj like ('40%'))       
		        and not exists (select 1 from 
		eka.mst_spaj_temp aa, eka.mst_product_temp bb 
		where aa.no_temp = bb.no_temp and bb.lsbs_id = 212 and bb.lsdbs_number = 6 and bb.reg_Spaj = a.reg_Spaj)
		order by e.msps_date
    </select>        
    
     <select id="elions.uw.selectPendingPrintPolisDmtm" resultClass="java.util.HashMap">
		select A.REG_SPAJ, a.LSPD_ID, a.lssp_id, B.LSBS_ID , B.LSDBS_NUMBER, C.LSDBS_NAME, A.MSPO_INPUT_DATE, a.mspo_date_print  
		from EKA.MST_POLICY A, EKA.LST_DET_BISNIS C, EKA.MST_PRODUCT_INSURED B   
		where A.REG_SPAJ = B.REG_SPAJ and B.LSBS_ID = C.LSBS_ID and B.LSDBS_NUMBER = C.LSDBS_NUMBER   
		and a.REG_SPAJ in ('40201843834','40201946352','40201947048','40201947067','40201949884')		
    </select>
    
	<select id="elions.uw.selectPendingPrintPolisCombine" resultClass="java.util.HashMap">
	<!-- 
		09190432634	213/1	SIMAS MAGNA LINK						normal
		40201843834	208/30	SMART KID INSURANCE PLAN B (DMTM BTN)	normal
		09190432740	142/2	SIMAS PRIMA								skip (not generated)
		40201843982	187/14	SMART ACCIDENT CARE IDEAL				no simascard	

		!!!v0('09190444999','09190445196','09190445272','09190445326','40201952281','40201952285','40201952369','40201952391','40201952739')	
		!!!v1('09190440364','09190437870','40201949571','40201949086','09190437354','09190434935','09190439050','09190440382','09190436643','09190440067','09190438186','09190438234','09190450801','40201948075','40201948483','40201949805','40201948311','40201946776','40201948175','40201948917','09190440126','40201947313','40201949075','40201949143','09190433093','09190436126','09190431562','09190432027','40201948608','40201949754','09190437527','09190431768','09190433507','40201949414','40201949146','40201949422','09190432403','09190438439','09190446327','40201947294','40201947295','40201949664','09190438913','09190436168')	
		!!!v2('09190440364','09190437870','40201949571','40201949086','40201947294','40201947295')	
		!!!v3('40201952210','40201952017','40201952350','40201952389','40201953247','40201953253','40201953183','40201953228','09190441297','40201954412','40201949884','40201952953','40201951481')
		!!!v4('09190445044','09190450611','40201952352','40201952353','40201951625','40201951628','40201951634','40201951636','40201951639','40201951641','40201951659','40201951663','40201951678','40201951711','40201952418','40201953275','09190446328','40201955771','40201953274','40201950810','40201953612','40201955645','40201953616','40201952416','40201950314','40201952420','40201952235','40201952241','40201953084','40201953112','40201954709','40201954807','09190445628','40201953394')
		!!!v5('40201953257','40201953262','40201953301','09190446038','40201953314','40201953283','40201953290','40201953319','09190452657','09190445117','09190451765','40201950105','40201952102','40201952111','40201952119','40201951728','09190441067','09190441170','09190441194','40201951478','40201951479','40201951727','40201955642','40201955644','40201955734','40201952415','40201953272','09190445086','40201953611','40201953614','40201952045','40201952064','40201952054','40201952068','40201952087','40201953276','40201952417','40201950315','40201950809','40201952040','40201952042','40201952062','40201952080','40201952088','40201951578','40201951590','40201951596','40201951605','40201951608','40201951477')		
		!!!v6('09190445117','40201952352','42201816923','40201953262','40201950404','09190447894','09190441529')
		!!! ('09190461387','09190461271','09190461274','09190461301','09190463524','09190461173','09190459385','09190461548','09190460150','09190461421','09190459767','09190463430','09190461770','09190463344','09190463425','09190460413','09190460401','09190459553','09190463576','09190456498','09190464113','09190451842')
		!!! ('09190471561','09190475125','09190475331','09190475572','09190475587','09190473963','09190475700','09190475797','09190478007','09190478040','09190478264','09190478345','09190474049','09190474740','09190475747')
-->		 
		select A.REG_SPAJ SPAJ, A.MSPO_DATE_PRINT DATE_PRINT, a.LSPD_ID, a.lssp_id, B.LSBS_ID , B.LSDBS_NUMBER, C.LSDBS_NAME, A.MSPO_INPUT_DATE   
		from EKA.MST_POLICY A, EKA.LST_DET_BISNIS C, EKA.MST_PRODUCT_INSURED B   
		where A.REG_SPAJ = B.REG_SPAJ and B.LSBS_ID = C.LSBS_ID and B.LSDBS_NUMBER = C.LSDBS_NUMBER 
		and A.REG_SPAJ IN ('40201963264','40201967778','40201965761')
		and b.lsbs_id <![CDATA[<]]> 300
		and A.PEGA_CASE_ID is null
    </select> 
    
	<select id="elions.uw.selectSIPNT" resultClass="java.util.HashMap" parameterClass="java.util.HashMap"> <!-- helpdesk [133346] produk baru 142-13 Smart Investment Protection -->
		select 1 tahun, #nt1# nilai
		from dual
		union
		select 2 , #nt2#
		from dual
		union
		select 3 , #nt3#
		from dual
	</select>
	
	<!-- Added by nana 20191127  -->
	<select id="elions.uw.selectNoSenderSpaj" parameterClass="string" resultClass="string">
	 	select mspo_no_pengiriman from eka.mst_policy where reg_spaj = rpad(replace(#value#,'.'),11,' ')
	</select>
	 
	<!-- Added by nana 20191202  -->
	<select id="elions.uw.selectWsId" resultClass="string">
	 	SELECT eka.pac_counter.get_ws_out_id() WSID FROM dual
	</select>
	
	<!-- helpdesk [139867] produk baru Simas Legacy Plan (226-1~5) -->
	<select id="elions.uw.selectLstTableNewForSimasLegacyPlan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT #reg_spaj# reg_spaj,
			lstab_tahun_ke tahun,
			b.usia + lstab_tahun_ke usia,
			(case c.lama_bayar
	            when 1 then (case when lstab_tahun_ke = 1 then a.akumulasi  end)
	            when 5 then (case when lstab_tahun_ke <![CDATA[<=]]> 5 then a.akumulasi * lstab_tahun_ke  end)
	            when 10 then (case when lstab_tahun_ke <![CDATA[<=]]> 10 then a.akumulasi * lstab_tahun_ke  end)
	            when 15 then (case when lstab_tahun_ke <![CDATA[<=]]> 15 then a.akumulasi * lstab_tahun_ke  end)
	            when 20 then (case when lstab_tahun_ke <![CDATA[<=]]> 20 then a.akumulasi * lstab_tahun_ke  end)
	            else 0
			end) akumulasi_premi,
			round((case when lsbs_id in (69, 82) then ((nilai_tunai * tsi) / 1000) / 3 else (nilai_tunai * tsi) / 1000 end),2) nilai_tunai,
			' ' dana_hari_tua
		FROM 	(SELECT lsbs_id,
					a.mspr_premium,
					DECODE (lsbs_id, 42, MSINV_INVESTASI, mspr_tsi) tsi,
					(mspr_tsi / 1000) * mspr_rate akumulasi
				FROM eka.mst_product_insured a, eka.mst_investasi_plan_42 b
				WHERE   a.lsbs_id <![CDATA[<]]> 300
					AND a.reg_spaj = b.reg_spaj(+)
					AND a.reg_spaj = RPAD (REPLACE (#reg_spaj#, '.'), 11, ' ')
				)a,
				(SELECT lstab_tahun_ke, SUM (nilai_tunai) nilai_tunai, usia, lscb_id
	            FROM 	(SELECT DISTINCT
								lstab_tahun_ke,
								DECODE (lstab_jenis, 2, SUM (lstab_value), 0) AS nilai_tunai,
								lstab_age usia,
								lscb_id
	                    FROM eka.lst_table_new
						WHERE   lsbs_id = #lsbs_id#
								AND lsdbs_number = #lsdbs_number#
								AND lku_id = #lku_id#
								AND lscb_id = #lscb_id#
								AND lstab_lama_bayar = #mspo_pay_period#
								AND lstab_lama_tanggung = #mspo_ins_period#
								AND lstab_age = #umur#
								AND lstab_tahun_ke <![CDATA[<=]]> (select (to_char(mste_end_date,'yy') - to_char(mste_beg_date,'yy')) from eka.mst_insured where reg_spaj = rpad(replace(#reg_spaj#,'.'),11,' ') )
								AND lstab_jenis NOT IN (1, 8)
						GROUP BY lstab_jenis,
								lstab_tahun_ke,
								lsbs_id,
								lku_id,
								lscb_id,
								lstab_lama_bayar,
								lstab_lama_tanggung,
								lstab_age)
				GROUP BY lstab_tahun_ke, usia, lscb_id
				ORDER BY lstab_tahun_ke
				)b,
				(select mspo_pay_period lama_bayar
				from eka.mst_policy 
				where reg_spaj = #reg_spaj#
				)c
		where rownum <![CDATA[<=]]> 20
	</select>
	
	 <select id="elions.uw.selectPendingPrintSIAP2U" resultClass="java.util.HashMap" parameterClass="java.lang.String">
	 	select a.no_temp as no_spaj_temp, 
		(select x.mcl_first from EKA.MST_CLIENT_NEW x where X.MCL_ID = d.mspo_policy_holder) nama_pemegang,
		(select x.mcl_first from EKA.MST_CLIENT_NEW x where X.MCL_ID = F.mste_insured) nama_tertanggung,
		C.LSDBS_NAME nama_produk, D.REG_SPAJ no_spaj, D.MSPO_POLICY_NO no_polis,
		(select mcl_first from eka.mst_client_new x where x.mcl_id = g.mcl_id) nama_agen, D.MSPO_INPUT_DATE tanggal_submit
		from EKA.MST_SPAJ_TEMP a, eka.mst_product_insured b, eka.lst_det_bisnis c, eka.mst_policy d, eka.mst_history_sts_polis e, EKA.MST_INSURED f, eka.mst_agent g
		where A.REG_SPAJ = B.REG_SPAJ
		and C.LSBS_ID = B.LSBS_ID
		and C.LSDBS_NUMBER = B.LSDBS_NUMBER
		and D.REG_SPAJ = B.REG_SPAJ
		and D.LSSP_ID = 1
		and D.LSSP_ID = E.NEW_STATUS
		and E.REG_SPAJ = D.REG_SPAJ
		and F.REG_SPAJ = E.REG_SPAJ
		and G.MSAG_ID = A.MSAG_ID
		and B.lsbs_id <![CDATA[<]]> 300
		and trunc (E.TGL_UPDATE) = to_date(#tgl#,'dd/MM/yyyy')
		and ((B.LSBS_ID = 190 and b.lsdbs_number = 9) OR (B.LSBS_ID = 200 and b.lsdbs_number = 7))
	 </select>
	 
	 	<select id="elions.uw.selectExtraMortalitaNew" parameterClass="string" resultClass="java.util.HashMap">
		SELECT a.lem_yrt, c.lsbs_id, c.mspr_tsi, d.lscb_id, a.lstab_sex, a.lstab_smoker
		  FROM eka.lst_ext_mor a,
		       eka.mst_insured b,
		       eka.mst_product_insured c,
		       eka.mst_policy d,
		       eka.mst_client_new e
		 WHERE a.lem_umur = b.mste_age
		   AND b.reg_spaj = c.reg_spaj
		   AND b.reg_spaj = d.reg_spaj
		   AND c.lsbs_id <![CDATA[<]]> 300
		   AND e.mcl_id = b.mste_insured
		   AND a.lstab_sex = e.mspe_sex
		   AND b.reg_spaj = #value#	
	</select>
	
	<select id="elions.uw.selectSpajDate" parameterClass="string" resultClass="date">
		select mspo_spaj_date from EKA.MST_POLICY
		where reg_spaj = #value#	
	</select>
	
		<!-- spajDate EM config -->
	<select id="elions.uw.selectSpajDateRateMortalitaFromConfig" parameterClass="string" resultClass="date">
		SELECT TO_DATE (
          (SELECT NAME
             FROM EKA.MST_CONFIG
            WHERE     APP_ID = 1
                  AND SECTION = 'Setting'
                  AND SUB_SECTION = 'spajDateEM'),
          'DD/MM/YYYY')
          AS PARAM
  		FROM DUAL
	</select>
</sqlMap>